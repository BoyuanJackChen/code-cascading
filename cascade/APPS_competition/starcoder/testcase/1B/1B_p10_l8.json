[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 5, \"Test 1\"\nassert solution(2, 3) == 5, \"Test 2\"\nassert solution(8) == 9, \"Test 3\"\nassert solution(4) == 36, \"Test 4\"\nassert solution(6) == 5, \"Test 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( 2 ) ( 3 )') == '5'\nassert solution('6\\n( ( 2 3 ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"Test 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"Test 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"Test 4\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\", \"Test 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Output the value of the given bracket sequence. Since this may be very large, you should print it modulo 10^9+7.\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3\\n\") == 5\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == 9\nassert solution(\"4\\n( 12 3 )\\n\") == 36\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == 5\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == 5"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed: \\nInput: {input()} \\nOutput: {output}\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"5\", \"Test 1 Failed\"\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2 Failed\"\nassert solution(\"4 ( 12 3 )\") == \"36\", \"Test 3 Failed\"\nassert solution(\"6 ( 2 ) ( 3 )\") == \"5\", \"Test 4 Failed\"\nassert solution(\"6 ( ( 2 3 ) )\") == \"5\", \"Test 5 Failed\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Solution 1\"\nassert solution(\"009990001\") == \"3\\n\", \"Solution 2\"\nassert solution(\"29998\") == \"5\\n\", \"Solution 3\"\nassert solution(\"610\") == \"4\\n\", \"Solution 4\"\nassert solution(\"981\") == \"2\\n\", \"Solution 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\\n\", \"Test 1 failed\"\nassert solution(\"009990001\") == \"3\\n\", \"Test 2 failed\"\nassert solution(\"29998\") == \"5\\n\", \"Test 3 failed\"\nassert solution(\"610\") == \"4\\n\", \"Test 4 failed\"\nassert solution(\"981\") == \"2\\n\", \"Test 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\", \"Test case 1 failed\"\nassert solution(\"009990001\") == \"3\", \"Test case 2 failed\"\nassert solution(\"29998\") == \"5\", \"Test case 3 failed\"\nassert solution(\"610\") == \"4\", \"Test case 4 failed\"\nassert solution(\"981\") == \"2\", \"Test case 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == 0, \"Invalid input\"\nassert solution(\"009990001\") == 3, \"Invalid input\"\nassert solution(\"29998\") == 5, \"Invalid input\"\nassert solution(\"610\") == 4, \"Invalid input\"\nassert solution(\"981\") == 2, \"Invalid input\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'0') == 0\nassert solution(b'009990001') == 3\nassert solution(b'29998') == 5\nassert solution(b'610') == 4\nassert solution(b'981') == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\", \"Expected output '0', got '{}'.\".format(solution(\"0\"))\nassert solution(\"009990001\") == \"3\", \"Expected output '3', got '{}'.\".format(solution(\"009990001\"))\nassert solution(\"29998\") == \"5\", \"Expected output '5', got '{}'.\".format(solution(\"29998\"))\nassert solution(\"610\") == \"4\", \"Expected output '4', got '{}'.\".format(solution(\"610\"))\nassert solution(\"981\") == \"2\", \"Expected output '2', got '{}'.\".format(solution(\"981\"))"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"2\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\\n\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\\n\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\\n\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\"\\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(4) == \"seems legit\"\nassert solution(5) == \"seems legit\"\nassert solution(1) == \"tampered odometer\"\nassert solution(2) == \"seems legit\"\nassert solution(6) == \"seems legit\"\nassert solution(7) == \"seems legit\"\nassert solution(8) == \"seems legit\"\nassert solution(9) == \"seems legit\"\nassert solution(10) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"tampered odometer\", \"Solution is incorrect\"\nassert solution() == \"seems legit\", \"Solution is incorrect\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\\n\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\\n\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\\n\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\n\nassert solution(\"\"\"3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\") == \"insufficient service\"\n\nassert solution(\"\"\"2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n\nassert solution(\"\"\"2\n2013 1 0\n2013 2 0\n\"\"\") == \"seems legit\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution({input()}): expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n', 'The output should be 3.'\nassert solution() == '2\\n', 'The output should be 2.'\nassert solution() == '4\\n', 'The output should be 4.'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('graph_test_input.txt').read()) == \"3\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n2\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n2\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n2\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n2\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n2\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(stdin=solution(stdin=stdin)))) == \"3\"\nassert solution(solution(solution(stdin=solution(stdin=stdin))))) == \"2\"\nassert solution(solution(solution(stdin=solution(stdin=stdin)))))) == \"2\"\nassert solution(solution(solution(stdin=solution(stdin=stdin))))))) == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n4\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n4\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input_test.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"input_test2.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input_test3.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input_test4.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nGREEN 1 8000\\nORANGE 7000 10000\\nBLUE 1 10000\\nRED 2000 10000\\nWHITE 10000 10000\\n\") == \"3\\nIMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == 2\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == 3\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1\") == \"2\"\nassert solution(\"Sample Input 2\") == \"3\"\nassert solution(\"Sample Input 3\") == \"IMPOSSIBLE\"\nassert solution(\"Sample Input 4\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"3\"\nassert solution(sample_input3) == \"IMPOSSIBLE\"\nassert solution(sample_input4) == \"IMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Solution 1 should return 6.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Solution 2 should return 1.\"\nassert solution(\"PRIME\") == \"5\", \"Solution 3 should return 5.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Solution 4 should return 6.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Your solution should return '6', but it returns '{}' instead.\".format(solution(\"PRATTATTATTIC\"))\n\nassert solution(\"GGGGGGGGG\") == \"1\", \"Your solution should return '1', but it returns '{}' instead.\".format(solution(\"GGGGGGGGG\"))\n\nassert solution(\"PRIME\") == \"5\", \"Your solution should return '5', but it returns '{}' instead.\".format(solution(\"PRIME\"))\n\nassert solution(\"BABBABABBABBA\") == \"6\", \"Your solution should return '6', but it returns '{}' instead.\".format(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Input 1 is not correct\"\nassert solution(\"GGGGGGGGG\") == 1, \"Input 2 is not correct\"\nassert solution(\"PRIME\") == 5, \"Input 3 is not correct\"\nassert solution(\"BABBABABBABBA\") == 6, \"Input 4 is not correct\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2\"\nassert solution(\"PRIME\") == \"5\", \"Test 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected '6', but got '\"+solution(\"PRATTATTATTIC\")+\"'\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected '1', but got '\"+solution(\"GGGGGGGGG\")+\"'\"\nassert solution(\"PRIME\") == \"5\", \"Expected '5', but got '\"+solution(\"PRIME\")+\"'\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected '6', but got '\"+solution(\"BABBABABBABBA\")+\"'\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('PRATTATTATTIC') == 6, \"Wrong output for sample input 1.\"\nassert solution('GGGGGGGGG') == 1, \"Wrong output for sample input 2.\"\nassert solution('PRIME') == 5, \"Wrong output for sample input 3.\"\nassert solution('BABBABABBABBA') == 6, \"Wrong output for sample input 4.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\", \"Output 1 is incorrect\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\", \"Output 2 is incorrect\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\", \"Output 3 is incorrect\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\", \"Output 4 is incorrect\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\", \"Expected Output: 0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\", \"Expected Output: 1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\", \"Expected Output: 0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"Expected Output: 0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\\n\", \"Test failed for D 1\\nD 2\\nE\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"Test failed for D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"Test failed for I 1 X\\nD 1\\nE\\nE\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"Test failed for I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input1.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"Expected output: 0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"Expected output: 1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\", \"Expected output: 0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\", \"Expected output: 0\"\n\nsolution(stdin)"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"The first program is not equal to 0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"The first program is not equal to 1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"The second program is not equal to 0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"The third program is not equal to 0\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test case {test_case} failed: expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"300\", \"Test Case 1\"\nassert solution(stdin) == \"1900\", \"Test Case 2\"\nassert solution(stdin) == \"2300\", \"Test Case 3\"\nassert solution(stdin) == \"399\", \"Test Case 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n4 0 1 0 0 0\n\"\"\"\n) == \"300\"\n\nassert solution(\n    \"\"\"\n5 0 1 0 1 0\n\"\"\"\n) == \"1900\"\n\nassert solution(\n    \"\"\"\n6 0 1 1 0 0\n\"\"\"\n) == \"2300\"\n\nassert solution(\n    \"\"\"\n10 399 0 0 0 0\n\"\"\"\n) == \"399\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected output: 2\"\nassert solution() == 2, \"Expected output: 2\"\nassert solution() == 2, \"Expected output: 2\"\nassert solution() == 2, \"Expected output: 2\"\nassert solution() == 2, \"Expected output: 2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10\\n1 12\\n1 13') == '2'\nassert solution('2 10\\n1 5\\n1 12') == '2'\nassert solution('2 10\\n1 5\\n4 1') == '2'\nprint('All test cases passed.')"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution(input)}\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"28\", \"Sample Input 1: \\n\" + solution(sample_input1)\nassert solution(sample_input2) == \"36.2842712475\", \"Sample Input 2: \\n\" + solution(sample_input2)\nassert solution(sample_input3) == \"28.970562748\", \"Sample Input 3: \\n\" + solution(sample_input3)\nassert solution(sample_input4) == \"32\", \"Sample Input 4: \\n\" + solution(sample_input4)"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution(\nr'4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == '36.2842712475'\nassert solution(\nr'6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == '28.970562748'\nassert solution(\nr'8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28\\n'\nassert solution(b'4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475\\n'\nassert solution(b'6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748\\n'\nassert solution(b'8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32\\n'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"28\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"36.2842712475\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"28.970562748\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"32\"\nassert solution() == \"28.970562748\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28'\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '28.970562748'\nassert solution('''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Solution and expected output don't match. Solution: {solution}, expected output: {expected_output}\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"1\\n\"\nassert solution(4) == \"1\\n\"\nassert solution(1) == \"3\\n\"\nassert solution(2) == \"1\\n\"\nassert solution(3) == \"1\\n\"\nassert solution(4) == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1\\n1\\n1\\n'\nassert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '-1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == -1\nassert solution(\"\") == -1\n\nn = int(input())\nfor _ in range(n):\n    x_0, y_0, x_1, y_1 = map(int, input().split())\n    assert x_0!= x_1 or y_0!= y_1 or x_0 == y_0 or y_0 == x_0, \"Invalid input\"\n\nx = [x_0, x_1]\ny = [y_0, y_1]\npoints = []"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\nassert solution(2) == 1\nassert solution(4) == 1\nassert solution(3) == 3\nassert solution(2) == 1\nassert solution(4) == 1"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1, 3, 5, 2, 2, 6, 8, 4, 8, 9, 3) == 3\nassert solution(3, 5, 2, 7, 4, 4, 10, 8, 2, 4, 10, 8) == 1\nassert solution(3, 2, 1, 6, 5, 2, 5, 5, 4, 1, 7, 7) == 1\nassert solution(2, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1) == 1\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3\\n1\\n1\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8') == '1\\n1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == 10, \"Incorrect solution 1\"\nassert solution(\"55\") == 55, \"Incorrect solution 2\"\nassert solution(\"101\") == -1, \"Incorrect solution 3\"\nassert solution(\"1234321\") == 94708, \"Incorrect solution 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"10\", \"Test 1\"\nassert solution(\"55\") == \"55\", \"Test 2\"\nassert solution(\"101\") == \"-1\", \"Test 3\"\nassert solution(\"1234321\") == \"94708\", \"Test 4\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 0 0 0 3\n    \"\"\"\n) == '6'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 5\n    \"\"\"\n) == '2'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 4\n    \"\"\"\n) == '4'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 6\n    \"\"\"\n) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0 0 3\") == 6\nassert solution(\"1 2 0 0 5\") == 2\nassert solution(\"1 2 0 0 4\") == 4\nassert solution(\"1 2 0 0 6\") == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0 0 3') == '6\\n'\nassert solution('1 2 0 0 5') == '2\\n'\nassert solution('1 2 0 0 4') == '4\\n'\nassert solution('1 2 0 0 6') == '0\\n'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == 'Output the number of length-N sequences of moves, modulo 1000000007.\\n'\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0 0 3\\n\") == \"6\"\nassert solution(\"1 2 0 0 5\\n\") == \"2\"\nassert solution(\"1 2 0 0 4\\n\") == \"4\"\nassert solution(\"1 2 0 0 6\\n\") == \"0\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(0.5 -5.301 3.098)) == (-1.26167861, 3.88425357)\nassert solution(str(0.5 8 8)) == (9.21068947, 2.56226688)\nassert solution(str(1 8 8)) == (6.22375968, -0.31921472)\nassert solution(str(0.5 -8 8)) == (-4.36385220, 9.46891588)"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin.read()) == '''-1.26167861 3.88425357'''\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\", \"Test case 1 failed\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\", \"Test case 2 failed\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\", \"Test case 3 failed\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\", \"Test case 4 failed\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n\nfrom typing import List"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n2\", \"Test case 1 failed\"\nassert solution() == \"1\\n1\", \"Test case 2 failed\"\nassert solution() == \"0\\n\", \"Test case 3 failed\"\nassert solution() == \"2\\n4\", \"Test case 4 failed\"\nassert solution() == \"4\\n5\", \"Test case 5 failed\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2 2\n    1 2\n    2 1\n    ''') == '''\n    1\n    '''\n\nassert solution('''\n    3 3\n    1 2\n    2 3\n    3 1\n    ''') == '''\n    1\n    '''\n\nassert solution('''\n    4 5\n    1 2\n    1 3\n    3 2\n    2 4\n    3 4\n    ''') == '''\n    0\n    '''\n\nassert solution('''\n    4 5\n    1 2\n    2 3\n    2 4\n    3 1\n    4 1\n    ''') == '''\n    2\n    '''"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 2\n1 2\n2 1\"\"\") == \"\"\"1\n2\n\"\"\"\n\nassert solution(\"\"\"3 3\n1 2\n2 3\n3 1\"\"\") == \"\"\"1\n1\n\"\"\"\n\nassert solution(\"\"\"4 5\n1 2\n1 3\n3 2\n2 4\n3 4\"\"\") == \"\"\"0\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == [\"1\"]\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == [\"1\"]\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == [\"0\"]\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == [\"2\", \"4\", \"5\"]"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    2 2\n    1 2\n    2 1\n    ''') == '1\\n2'\n\nassert solution('''\n    3 3\n    1 2\n    2 3\n    3 1\n    ''') == '1\\n1'\n\nassert solution('''\n    4 5\n    1 2\n    1 3\n    3 2\n    2 4\n    3 4\n    ''') == '0'\n\nassert solution('''\n    4 5\n    1 2\n    2 3\n    2 4\n    3 1\n    4 1\n    ''') == '2\\n4'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\"\n\nfrom typing import List"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == [\"1\\n2\\n\"]\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == [\"1\\n1\\n\"]\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == [\"0\\n2\\n4\\n\"]\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == [\"2\\n4\\n5\\n\"]"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\nassert solution(sample_input3) == expected_output3\nassert solution(sample_input4) == expected_output4\n\nsample_input1 = \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n\nexpected_output1 = \"\"\"\n1\n2\n\"\"\"\n\nsample_input2 = \"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\"\n\nexpected_output2 = \"\"\"\n1\n1\n\"\"\"\n\nsample_input3 = \"\"\"\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\"\"\"\n\nexpected_output3 = \"\"\"\n0\n\"\"\"\n\nsample_input4 = \"\"\"\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n\"\"\"\n\nexpected_output4 = \"\"\"\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n0\n1\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100\n102\n104\n106\n108\n110\n112\n114\n116\n118\n120\n122\n124\n126\n128\n130\n132\n134\n136\n138\n140\n142\n144\n146\n148\n150\n152\n154\n156\n158\n160\n162\n164\n166\n168\n170\n172\n174\n176\n178\n180\n182\n184\n186\n188\n190\n192\n194\n196\n198\n200\n202\n204\n206\n208\n210\n212\n214\n216\n218\n220\n222\n224\n226\n228\n230\n232\n234\n236\n238\n240\n242\n244\n246\n248\n250\n252\n254\n256\n258\n260\n262\n264\n266\n268\n270\n272\n274\n276\n278\n280\n282\n284\n286\n288\n290\n292\n294\n296\n298\n300\n302\n304\n306\n308\n310\n312\n314\n316\n318\n320\n322\n324\n326\n328\n330\n332\n334\n336\n338\n340\n342\n344\n346\n348\n350\n352\n354\n356\n358\n360\n362\n364\n366\n368\n370\n372\n374\n376\n378\n380\n382\n384\n386\n388\n390\n392\n394\n396\n398\n400\n402\n404\n406\n408\n410\n412\n414\n416\n418\n420\n422\n424\n426\n428\n430\n432\n434\n436\n438\n440\n442\n444\n446\n448\n450\n452\n454\n456\n458\n460\n462\n464\n466\n468\n470\n472\n474\n476\n478\n480\n482\n484\n486\n488\n490\n492\n494\n496\n498\n500\n502\n504\n506\n508\n510\n512\n514\n516\n518\n520\n522\n524\n526\n528\n530\n532\n534\n53"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\n\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\n\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2'\n\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\n\ninput1 = \"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\"\ninput2 = \"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\"\ninput3 = \"2 1 0 1\\n0 1 2\"\ninput4 = \"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\"\n\noutput1 = \"11\"\noutput2 = \"infinity\"\noutput3 = \"2\"\noutput4 = \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '11'\nassert solution() == 'infinity'\nassert solution() == '2'\n\nfrom typing import List"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\nassert solution(\"4 1 0 1\\n1 1 1\\n2 2 1\\n3 0 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"The function returned '{solution(stdin=input())}', but the expected output is '{expected_output}'.\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\", \"Test case 2 failed\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\", \"Test case 3 failed\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == 6\nassert solution(sample_input_2) == 0\nassert solution(sample_input_3) == 18\nassert solution(sample_input_4) == 12"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\\n\"\n\nassert solution(\"\"\"3 1 2 3\n2 1 2\n0\n\"\"\") == \"12\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\", \"Test 1: Arrange 2 red, 1 yellow, 2 green, and 1 blue balls in a line.\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\", \"Test 2: Arrange 3 balls in a line with no red, yellow, or green balls next to each other.\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\", \"Test 3: Arrange 3 balls in a line with only 1 red, 1 yellow, and 1 green ball next to each other.\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\", \"Test 4: Arrange 3 balls in a line with no red, yellow, or green balls next to each other, but with a particular sequence of colors.\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000000 1\") == 468559, \"Incorrect Output\"\nassert solution(\"1000000 5\") == 49401, \"Incorrect Output\"\nassert solution(\"1000000 16\") == 20, \"Incorrect Output\"\nassert solution(\"9000000000000000000 62\") == 1, \"Incorrect Output\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}\\nOutput: {output}\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\") == \"468559\", \"Test 1 failed\"\nassert solution(\"1000000 5\") == \"49401\", \"Test 2 failed\"\nassert solution(\"1000000 16\") == \"20\", \"Test 3 failed\"\nassert solution(\"9000000000000000000 62\") == \"1\", \"Test 4 failed\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == \"468559\\n\"\nassert solution(\"1000000 5\") == \"49401\\n\"\nassert solution(\"1000000 16\") == \"20\\n\"\nassert solution(\"9000000000000000000 62\") == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000000 1\") == \"468559\", \"Your solution is incorrect\"\nassert solution(\"1000000 5\") == \"49401\", \"Your solution is incorrect\"\nassert solution(\"1000000 16\") == \"20\", \"Your solution is incorrect\"\nassert solution(\"9000000000000000000 62\") == \"1\", \"Your solution is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == expected1, f\"Expected Output {expected1}, got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Expected Output {expected2}, got {solution(input2)}\"\nassert solution(input3) == expected3, f\"Expected Output {expected3}, got {solution(input3)}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 9, 5, 4, 1) == 1\nassert solution(4, 13, 2, 2, 2) == 3\nassert solution(18, 90, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6) == 12"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect Output\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 9\n    5 4 1\n    \"\"\"\n) == \"\"\"\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 13\n    2 2 2 2\n    \"\"\"\n) == \"\"\"\n3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    18 90\n    1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n    \"\"\"\n) == \"\"\"\n12\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number}: Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output: {output}, but got: {solution(stdin=input())}\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 9\n5 4 1\n\"\"\") == \"\"\"\n1\n\"\"\"\n\nassert solution(\"\"\"\n4 13\n2 2 2 2\n\"\"\") == \"\"\"\n3\n\"\"\"\n\nassert solution(\"\"\"\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\") == \"\"\"\n12\n\"\"\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The function should return {output}, but it returned {solution(input())}.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\"\nassert solution(\"5\\n2 3 4 5 8\\n\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0, \"1 should be equal to 0\"\nassert solution(2) == 0, \"2 should be equal to 0\"\nassert solution(3) == 0, \"3 should be equal to 0\"\nassert solution(4) == 0, \"4 should be equal to 0\"\nassert solution(5) == 0, \"5 should be equal to 0\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\"\nassert solution(\"5\\n2 3 4 5 8\\n\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin), \"Test case not working as expected.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '0'\nassert solution(sample_input_2) == '3'\nassert solution(sample_input_3) == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4\nassert solution(1234567890) == 11112\nassert solution(149) == 17\nassert solution(-1) == -1\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\", \"Incorrect output for sample input 1.\"\nassert solution(\"149\") == \"17\", \"Incorrect output for sample input 2.\"\nassert solution(\"123476544\") == \"11112\", \"Incorrect output for sample input 3.\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"d 4\ncab\ncda\nccc\nbadca\n\"\"\"\n) == \"adcb\\n\"\n\nassert solution(\n    \"\"\"c 4\nabc\nbca\ncab\naca\n\"\"\"\n) == \"IMPOSSIBLE\\n\"\n\nassert solution(\n    \"\"\"f 2\ndea\ncfb\n\"\"\"\n) == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str: pass\"\n\nfrom typing import List"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'adcb'\nassert solution(open('input2.txt').read()) == 'IMPOSSIBLE'\nassert solution(open('input3.txt').read()) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\nfcb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('d 4\\n'\n                   'cab\\n'\n                   'cda\\n'\n                   'ccc\\n'\n                   'badca\\n') == 'adcb\\n'\n\nassert solution('c 4\\n'\n                   'abc\\n'\n                   'bca\\n'\n                   'cab\\n'\n                   'aca\\n') == 'IMPOSSIBLE\\n'\n\nassert solution('f 2\\n'\n                   'dea\\n'\n                   'cfb\\n') == 'AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected, f\"Expected output: {expected}, but got: {solution()}\"\n\nfor i in range(1, 4):\n    a, b, c, cookies = map(int, stdin.readline().split())\n    cookies += cookies // i\n    print(cookies)"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test Case {i+1} failed\"\nfor i, (a, b, c) in enumerate(sample_input):\n    assert solution(sample_input) == output[i], f\"Test Case {i+1} failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    stdin=\n    \"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\",\n    stdout=\n    \"9\\n164\\n\"\n) == True"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 3 3\\n10 20 0 0\\n100 20 543 12') == '9\\n', \"The expected output is not given\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\"\nassert solution(\"2 3 3 2\\n10 20 0 0\\n100 20 543 12\\n\") == \"8\"\nassert solution(\"2 3 3 1\\n10 20 0 0\\n100 20 543 12\\n\") == \"7\"\nassert solution(\"1 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"6\"\nassert solution(\"2 3 3 1\\n10 20 0 0\\n100 20 543 12\\n\") == \"5\"\nassert solution(\"1 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"4\"\nassert solution(\"2 3 3 2\\n10 20 0 0\\n100 20 543 12\\n\") == \"3\"\nassert solution(\"1 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"2\"\nassert solution(\"2 3 3 2\\n10 20 0 0\\n100 20 543 12\\n\") == \"1\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"9\", \"Test Case 1\"\nassert solution(input_2) == \"10\", \"Test Case 2\"\nassert solution(input_3) == \"164\", \"Test Case 3\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output a single integer \u2013 the number of cookies Alf and Beata are able to distribute.\\n\", \"Test failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin})!= expected ({expected})\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3 3\\nSample Output 1:9\\nSample Input 2:10 20 0 0\\nSample Output 2:10\\nSample Input 3:100 20 543 12\\nSample Output 3:164\\n\") == \"9\\n10\\n164\\n\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Test case 1 failed\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Test case 2 failed\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Test case 3 failed\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Test case 1 failed.\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Test case 2 failed.\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Test case 3 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Sample Output 1\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Sample Output 2\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Sample Output 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('652526') == '4\\n'\nassert solution('12121131221') == '7\\n'\nassert solution('123456789') == '1\\n'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('652526') == '4', \"Input 1 is not correct\"\nassert solution('12121131221') == '7', \"Input 2 is not correct\"\nassert solution('123456789') == '1', \"Input 3 is not correct\"\n\nfrom typing import IO"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"24\\n\"\nassert solution(stdin) == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\nassert solution(open('test_case1.txt', 'r')) == '0\\n'\nassert solution(open('test_case2.txt', 'r')) == '24\\n'\nassert solution(open('test_case3.txt', 'r')) == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0\\n'\n\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24\\n'\n\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == \"0\\n\", \"Expected 0, got {}\".format(solution(input1))\nassert solution(input2) == \"24\\n\", \"Expected 24, got {}\".format(solution(input2))\nassert solution(input3) == \"800\\n\", \"Expected 800, got {}\".format(solution(input3))"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Test failed!\"\nassert solution() == 24, \"Test failed!\"\nassert solution() == 800, \"Test failed!\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\"\n\nsolution = lambda stdin: \"-1\"  # Dummy function to test the output\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect!\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(stdin=\"1 3 2 4\")) + \" \" + solution(stdin=\"1 4\")) == [\"1\", \"4\"]\nassert solution(solution(solution(stdin=\"1 2 3 4 5\")) + \" \" + solution(stdin=\"1 2 3 4 5\")) == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(solution(solution(stdin=\"2 1 4 3\")) + \" \" + solution(stdin=\"1\")) == [\"-1\"]\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"output: 1\\n-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\nfor i in range(n):\n    assert solution(input()) == expected\nprint(solution(input()))"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"\"\"\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n\"\"\") == \"8\\n\"\n\nassert solution(stdin=\"\"\"\n3 3\n...\n.#.\n...\n\"\"\") == \"1\\n\"\n\nassert solution(stdin=\"\"\"\n2 6\n.#####\n#####.\n\"\"\") == \"5\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 8\nassert solution() == 1\nassert solution() == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == \"8\\n\"\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == \"1\\n\"\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == \"5\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed: expected {output_data}, got {solution(input_data)}\" for i, input_data, output_data in enumerate(test_cases)"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Incorrect solution\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\nSample Input 2: 3 3\\n...\\n.#.\\n...\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\nSample Input 3: 2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == \"8\"\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == \"1\"\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == \"5\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '6\\n19 12 2 18 5 5\\n'\nassert solution(open('sample_input.txt', 'r')) == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution(open('sample_input.txt', 'r')) == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 2\\n1 2\\n2 1\\n1 2') == 13\nassert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n') == 19\nassert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n') == 22\nassert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n4 5 5\\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt')) == '6\\n19 12 2 18 5 5\\n'\nassert solution(open('sample_input2.txt')) == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution(open('sample_input3.txt')) == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 5 5\n    2 1 1 1 2\n    5 3 4 4 3\n    4 3 3 3 2\n    3 1 3 3 1\n    \"\"\"\n) == \"\"\"\n6\n19 12 2 18 5 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 3 3\n    3 1 1\n    1 3 2\n    3 2 3\n    \"\"\"\n) == \"\"\"\n13\n4 2 6 1 9 7 5 5 7 1 2 3 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 2 2\n    1 2\n    2 1\n    1 2\n    \"\"\"\n) == \"\"\"\n-1\n\"\"\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5\\n\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n') == '5 1\\n'\n\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n') == '1 5\\n'\n\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n') == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output\nprint(solution(input))\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\n\nfrom typing import List"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Your solution is wrong.\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"The solution provided is {solution}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == output_1\nassert solution(sample_input_2) == output_2\nassert solution(sample_input_3) == output_3"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '5 1\\n'\n\nfrom math import gcd"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\", \"Test failed\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"5 1\"\nassert solution(2) == \"5 1\"\nassert solution(3) == \"1 5\"\nassert solution(4) == \"3 2\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 5\nassert solution() == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\") == \"1\\n\"\nassert solution(\"Sample Input 2\") == \"5\\n\"\nassert solution(\"Sample Input 3\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\"\nassert solution(open(\"input2.txt\", \"r\")) == \"5\"\nassert solution(open(\"input3.txt\", \"r\")) == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output 1\", \"Test 1\"\nassert solution(input()) == \"Output 2\", \"Test 2\"\nassert solution(input()) == \"Output 3\", \"Test 3\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\n\nassert solution() == 5\n\nassert solution() == 5\n\nassert solution() == 5\n\nassert solution() == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_file_name) == expected_output, f\"Test case failed for {input_file_name}\"\n\nfrom typing import List"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''0\n1\n2\n3\n6\n7\n'''\n\nassert solution() == '''5\n1\n2\n3\n6\n7\n'''\n\nassert solution() == '''3\n4\n5\n6\n7\n'''\n\nassert solution() == '''4\n4\n5\n6\n7\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output 1:\\n3\\n4\\n5\\n6\\n'\nassert solution() == 'Output 2:\\n0\\n'\nassert solution() == 'Output 3:\\n5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '''0\n1\n2\n3\n6\n7'''\n\nassert solution(open('input_2.txt', 'r')) == '''0\n1\n2\n3\n4\n5\n6\n7'''\n\nassert solution(open('input_3.txt', 'r')) == '''5\n1\n2\n3\n6\n7'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2''') == '4\\n3\\n4\\n5\\n6\\n'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1''') == '0\\n'\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2''') == '5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Output is not correct.\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input 1\") == \"5\\n\", \"Incorrect output\"\nassert solution(\"Input 2\") == \"6\\n\", \"Incorrect output\"\nassert solution(\"Input 3\") == \"30\\n\", \"Incorrect output\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    V1 V2 V1 V1 V2\n    \"\"\"\n) == 5\n\nassert solution(\n    \"\"\"\n    2 1\n    V1 V2 V1 V1 V2\n    \"\"\"\n) == 6\n\nassert solution(\n    \"\"\"\n    1 2\n    R10 V1 V2 V1 E\n    \"\"\"\n) == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"\n\nclass Solution:\n    def min_instructions(self, b: int, s: int, program: str) -> int:\n        # Set of memory banks and their corresponding variables\n        memory_banks = set()\n        # Set of variables that can be stored in each memory bank\n        variables = set()\n        # Mapping from variable to memory bank\n        mapping = {}\n        \n        for line in program.splitlines():\n            if line.startswith(\"V\"):\n                variables.add(line.split()[1])\n            elif line.startswith(\"R\"):\n                # Assuming constant values are stored in memory banks\n                mapping[line.split()[1]] = 0\n            else:\n                raise ValueError(\"Invalid operation\")\n        \n        # Find memory banks that can store variables\n        for i, variable in enumerate(variables):\n            if i % b == 0:\n                memory_banks.add(i // b)\n        \n        # Mapping from memory bank to set of variables that can be stored in that bank\n        variable_mapping = {bank: variables & mapping[str(bank)] for bank in memory_banks}\n        \n        # Find minimum execution time by finding the maximum number of memory references and BSR settings\n        min_time = float('inf')\n        for reference_count in range(1, 1000001):\n            # Find the maximum number of memory references\n            max_references = min(reference_count, 2 * len(variables))\n            # Find the maximum number of BSR settings\n            max_bsr_settings = min(reference_count, len(variables))\n            # Update the minimum execution time if possible\n            if max_references <= max_bsr_settings:\n                min_time = min(min_time, max_references + max_bsr_settings + 1)\n        \n        return min_time"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == expected1, \"Incorrect output for test case 1\"\nassert solution(input2) == expected2, \"Incorrect output for test case 2\"\nassert solution(input3) == expected3, \"Incorrect output for test case 3\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == 5\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == 6\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == 30\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"38\"\nassert solution(input2) == \"impossible\"\nassert solution(input3) == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Error: Solution not matching expected output\"\nfor B in range(2, 10001):\n    for N in range(2**63, 2**63+2):\n        f = lambda x: reduce(lambda acc, digit: acc * B + digit, str(N), 0)\n        if f(B) == N:\n            print(B)\n            break\nelse:\n    print(\"impossible\")"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\", \"10 24\"\nassert solution(\"10 11\") == \"impossible\", \"10 11\"\nassert solution(\"9 216\") == \"546\", \"9 216\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 24\") == \"38\", \"Sample Input 1\"\nassert solution(\"10 11\") == \"impossible\", \"Sample Input 2\"\nassert solution(\"9 216\") == \"546\", \"Sample Input 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 24\") == \"38\\n\"\nassert solution(\"10 11\") == \"impossible\\n\"\nassert solution(\"9 216\") == \"546\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 24\") == \"38\\n\"\nassert solution(\"10 11\") == \"impossible\\n\"\nassert solution(\"9 216\") == \"546\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"38\"\nassert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == expected_1\nassert solution(input_2) == expected_2\nassert solution(input_3) == expected_3"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 466.662"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3.00002\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"2.00001\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2.00000\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '466.662', \"Sample Input 1\"\nassert solution(open('sample_input_2.txt', 'r').read()) == '10.00005', \"Sample Input 2\"\nassert solution(open('sample_input_3.txt', 'r').read()) == '2.0', \"Sample Input 3\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    20 60 2 1\n    5 15 0.33333 30\n    22 60 0.66666 70\n    0 10\n    \"\"\"\n) == 466.662\n\nassert solution(\n    \"\"\"\n    3 4 2 1\n    1 3 0.25 8\n    2 4 0.66667 15\n    1 2\n    \"\"\"\n) == 10.00005\n\nassert solution(\n    \"\"\"\n    3 4 1 0\n    0 2 0.25 8\n    \"\"\"\n) == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_1) == 466.662, solution(solution_1)\nassert solution(solution_2) == 10.00005, solution(solution_2)\nassert solution(solution_3) == 2.0, solution(solution_3)"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input_1) == solution_output_1, f\"Solution for sample input 1 has incorrect output.\\nExpected: {solution_output_1}\\nActual: {solution(solution_input_1)}\"\nassert solution(solution_input_2) == solution_output_2, f\"Solution for sample input 2 has incorrect output.\\nExpected: {solution_output_2}\\nActual: {solution(solution_input_2)}\"\nassert solution(solution_input_3) == solution_output_3, f\"Solution for sample input 3 has incorrect output.\\nExpected: {solution_output_3}\\nActual: {solution(solution_input_3)}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\"\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1.5'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.500000000000000\", \"Your solution is incorrect.\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1.5\nassert solution(2) == 0\nassert solution(4) == 10\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.5'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n') == '180\\n'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '22\\n'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0\\n'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"180\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"22\", \"Incorrect output for sample input 2\"\nassert solution(sample_input_3) == \"0\", \"Incorrect output for sample input 3\"\n\nfrom typing import List"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Input 1:\\n6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\nSample Output 1:\\n180\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"180\"\nassert solution() == \"22\"\nassert solution() == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"180\"\nassert solution(sample_input2) == \"22\"\nassert solution(sample_input3) == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '20 20'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n') == '17 17'\nassert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n') == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    6 8 5\n   ........\n   ........\n    ###.####\n   ........\n   ........\n   ........\n    \"\"\"\n) == \"20 20\\n\"\n\nassert solution(\n    \"\"\"\n    6 8 5\n   ........\n   ........\n    ###.####\n   ........\n   ........\n   ........\n    \"\"\"\n) == \"17 17\\n\"\n\nassert solution(\n    \"\"\"\n    3 3 2\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n   ........\n    "
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"20 20\\n\\n17 17\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:20 20\\nSample Input 2:6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:17 17\\nSample Input 3:3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3:-1 -1\") == \"20 20\\n17 17\\n-1 -1\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\" ) == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Response:\\nassert solution(\\\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\\") == \\\"20 20\\\"\\nassert solution(\\\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\\") == \\\"17 17\\\"\\nassert solution(\\\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Response:\\nassert solution(\\\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\\") == \\\"20 20\\\"\\nassert solution(\\\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1\\n20 20\\n\") == (\"20 20\",)\n\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 2\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2\\n17 17\\n\") == (\"17 17\",)\n\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Input 3\\n3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3\\n-1 -1\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"300\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\", \"The provided solution is not correct.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2, \"The solution is incorrect.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"\n\nfrom typing import List\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}' instead of '{expected_output}'.\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\", \"Your solution should return 'impossible'\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'impossible' # Change this line to test your solution\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"can fold\"\nassert solution(\"..##.\\n...#.\\n..##.\\n...#.\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\"\n\nfrom typing import List"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\"), \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\"), \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\"), \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == 'cannot fold'\nassert solution(input_2) == 'can fold'\nassert solution(input_3) == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\\n\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\\n\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\\n\"\n\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\\n\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\".......\\n.......\\n######\\n.......\\n.......\\n.......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Expected output: abc, but got: {}\".format(solution(\"abcefgabc\"))\nassert solution(\"abcbabcba\") == \"abcba\", \"Expected output: abcba, but got: {}\".format(solution(\"abcbabcba\"))\nassert solution(\"aaaa\") == \"aaa\", \"Expected output: aaa, but got: {}\".format(solution(\"aaaa\"))"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Expected output: abc\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Expected output: abcba\"\nassert solution(\"aaaa\") == \"aaa\", \"Expected output: aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"4\"\nassert solution(1) == \"4\"\nassert solution(2) == \"4\"\nassert solution(1) == \"6\"\nassert solution(2) == \"6\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == f\"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'Input Error'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == 4\nassert solution(\"2\\n1 4\\n2 10005\") == 6\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([2, 1, 4, 2, 10005]) == 6\nassert solution([2, 1, 4, 2, 10]) == 4\nassert solution([3, 1, 4, 2, 10, 0, 15]) == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1234567890"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed. Expected output: {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n6\\n4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 1, 4, 2, 10005]), 'Invalid input 1'\nassert solution([2, 1, 4, 2, 10, 0, 15]), 'Invalid input 2'\nassert solution([3, 1, 4, 2, 10, 0, 15]), 'Invalid input 3'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"The given solution is not correct.\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1\nassert solution(6) == 2\nassert solution(10) == 1\nassert solution(20) == 1\nassert solution(25) == 1"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 3\nassert solution(5) == 2\nassert solution(6) == 0\nassert solution(7) == 1\nassert solution(8) == 2\nassert solution(9) == 1\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 2\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 1\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 0\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 0\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 0\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 0\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 0\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1:\\n7\\n2 3 4 4 8 12 24\") == \"2\\n\"\nassert solution(\"Sample Input 2:\\n3\\n7 7 7\") == \"3\\n\"\nassert solution(\"Sample Input 3:\\n5\\n1 2 3 2 1\") == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"2 ways should be possible for the given sample input\"\n\nprint(\"Sample Input 1:\")\nn = int(input())\nsample_input = [int(x) for x in input().split()]\nassert solution(sample_input) == 2, \"2 ways should be possible for the given sample input\"\n\nprint(\"Sample Input 2:\")\nn = int(input())\nsample_input = [int(x) for x in input().split()]\nassert solution(sample_input) == 3, \"3 ways should be possible for the given sample input\"\n\nprint(\"Sample Input 3:\")\nn = int(input())\nsample_input = [int(x) for x in input().split()]\nassert solution(sample_input) == 0, \"0 ways should not be possible for the given sample input\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7, [2, 3, 4, 4, 8, 12, 24]) == 2, \"Output 1\"\nassert solution(3, [7, 7, 7]) == 3, \"Output 2\"\nassert solution(5, [1, 2, 3, 2, 1]) == 0, \"Output 3\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output. Input: {stdin}, Expected: {expected}\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3\\n'\nassert solution('1 2 1\\nGS\\n') == '1\\n'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"Sample Input 1:\\n2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1:\\n3\\n\\n\\n\\n\\n\\n\\nSample Input 2:\\n1 2 1\\nGS\\nSample Output 2:\\n1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nS..\\n.#. \\n..G\\nDRRDD') == 1\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == 1\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == 2"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n....... \\n.G.#.S.\\n....... \\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n....... \\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input_2.txt', 'r')) == '1'\nassert solution(open('input_3.txt', 'r')) == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"S..\\n.#. \\n..G\\nDRRDD\\nLDLDLLDR\") == \"1\"\nassert solution(\"S..\\n.#. \\n..G\\nDRRDD\\nULDLDLLDLR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1000200 799\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(stdin=\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(stdin=\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin.read()) == expected_output, f\"Solution {solution(stdin.read())} does not match expected output {expected_output}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution, \"You need to implement the solution function\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1000200 799\\n\", \"Sample Input 1: 1000200 799\"\nassert solution() == \"uncertain\\n\", \"Sample Input 2: uncertain\"\nassert solution() == \"impossible\\n\", \"Sample Input 3: impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1000200 799'\nassert solution(stdin) == 'uncertain'\nassert solution(stdin) == 'impossible'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == [\"2\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == [\"syntax error\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n1\\n'\nassert solution(stdin) == '1\\n2\\n'\nassert solution(stdin) =='syntax error\\n'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [1, 2]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [1, 2]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == ['syntax error']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == [2, 1]\nassert solution(input()) == [1, 2]\nassert solution(input()) == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n1\"\nassert solution() == \"1\\n2\"\nassert solution() == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [2, 1]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [1, 2]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n2\\n1\\n2\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == [\"syntax error\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == [\"2\", \"1\"]\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == [\"1\", \"2\"]\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\\n\") == [\"syntax error\"]"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\n\nassert solution('''\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\n\nassert solution('''\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"many\"\nassert solution == \"1\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 100 _ 100 100 _ 100\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution(\"100 100 _ 100 100 _ 100 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\") == \"1\"\nassert solution
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\"\n) == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for the given input. Expected output: {expected_output}, but got: {solution(stdin=input())}\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\")) == \"1\"\nassert solution(solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\")) == \"1\"\nassert solution(solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\")) == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Many\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output is '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1\\n3\\n1\\n2\\n1\\n3\\n2\\n4\\n1\\n5\\n3\\n1\\n6\\n2\\n2\\n7\\n7\\n8\\n5\\n9\\n5\\n10\\n\") == \"2\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(SampleInput1) == SampleOutput1\nassert solution(SampleInput2) == SampleOutput2\nassert solution(SampleInput3) == SampleOutput3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2, \"Test case 1\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data1) == output_data1, f\"Expected output: {output_data1}, got: {solution(input_data1)}\"\nassert solution(input_data2) == output_data2, f\"Expected output: {output_data2}, got: {solution(input_data2)}\"\nassert solution(input_data3) == output_data3, f\"Expected output: {output_data3}, got: {solution(input_data3)}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\", \"Test 1\"\nassert solution(5) == \"2\", \"Test 2\"\nassert solution(10) == \"2\", \"Test 3\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\", \"First example failed\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\", \"Second example failed\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\", \"Third example failed\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"abc\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"abc\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"abc\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage\\nboot') == 'essa'\nassert solution('treetreetreetree\\nwood') == '3'\nassert solution('oranges\\naples') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"The message should be 'essa'\"\nassert solution(\"treetreetreetree\") == \"3\", \"The fragment should be '3'\"\nassert solution(\"oranges\") == \"0\", \"The position of the fragment should be 0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('secretmessage') == 'essa', \"The first message should decrypt to 'essa', but it actually decrypts to 'def'\"\nassert solution('treetreetreetreetree') == '3', \"The second message should decrypt to '3', but it actually decrypts to '7'\"\nassert solution('oranges') == '0', \"The third message should decrypt to '0', but it actually decrypts to '1'\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\nappl\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:', \"The solution should return a function\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"essa\", \"Test failed for the given input\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == '1'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1, \"The solution should be {}\".format(sample_output1)\nassert solution(sample_input2) == sample_output2, \"The solution should be {}\".format(sample_output2)\nassert solution(sample_input3) == sample_output3, \"The solution should be {}\".format(sample_output3)"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(stdin=\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(stdin=\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test_case1.txt\", \"r\")) == \"1\"\nassert solution(open(\"test_case2.txt\", \"r\")) == \"4\"\nassert solution(open(\"test_case3.txt\", \"r\")) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 4, \"The output is incorrect for the given input.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '3\\n6\\n11\\n'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"The output should be 3\"\nassert solution() == \"6\", \"The output should be 6\"\nassert solution() == \"11\", \"The output should be 11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Incorrect result\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"6\"\nassert solution(sample_input_3) == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"6\"\nassert solution(sample_input3) == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n6\\n11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3\\n'\n\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6\\n'\n\nassert solution('''\n2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11\\n'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 80.0\n    \"\"\") == \"168.7916512460\"\n\nassert solution(\"\"\"\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 100.0\n    \"\"\") == \"163.5274740179\"\n\nassert solution(\"\"\"\n    0.0 1.0 4.0 1.0\n    1\n    0.0 0.0 4.0 0.0\n    \"\"\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"168.7916512460\"\nassert solution(sample_input2) == \"163.5274740179\"\nassert solution(sample_input3) == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\", \"Sample Output 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\", \"Sample Output 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\", \"Sample Output 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\nSample Output 1:168.7916512460\\nSample Input 2:60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\nSample Output 2:163.5274740179\\nSample Input 3:0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\nSample Output 3:3.7320508076') == '168.7916512460\\n'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n3.7320508076\") == \"168.7916512460\", \"Expected output is 168.7916512460\"\n\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n3.7320508076\") == \"163.5274740179\", \"Expected output is 163.5274740179\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Incorrect output\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\", \"Incorrect output\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Incorrect output\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Sample Output 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Sample Output 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Sample Output 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\\n\", \"Test 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\\n\", \"Test 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\\n\", \"Test 3 failed\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"rarity\"\nassert solution(\"4 5 6\") == \"canterlot\"\nassert solution(\"7 8 9\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'rarity'\n\nimport re"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"rarity\"\nassert solution(sample_input_2) == \"canterlot\"\nassert solution(sample_input_3) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 'rarity'\nassert solution(sample_input_2) == 'canterlot'\nassert solution(sample_input_3) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6 5 3\\n9 8 1\\n5 3 5\\n') == 'rarity\\ncanterlot\\nmadam\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) =='madam'\nassert solution(2) == 'canterlot'\nassert solution(1) == 'rarity'\nassert solution(4) == 'defied'\nassert solution(5) =='signed'\nassert solution(6) =='malam'\nassert solution(7) == 'digitally'\nassert solution(8) == 'tepee'\nassert solution(9) == 'canterlot'\n"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 'rarity'\nassert solution(sample_input_2) == 'canterlot'\nassert solution(sample_input_3) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"rarity\", \"Expected rarity, got: {}\".format(solution(stdin))\nassert solution(stdin) == \"canterlot\", \"Expected canterlot, got: {}\".format(solution(stdin))\nassert solution(stdin) == \"madam\", \"Expected madam, got: {}\".format(solution(stdin))"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"rarity\"\nassert solution() == \"canterlot\"\nassert solution() == \"madam\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!.def solution(stdin: str) -> str:\") == \"International\\ncontest- motivation high\\nProgrammers have fun!.def solution(stdin: str) -> str:\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International \\ncontest- motivation high \\nProgrammers have fun! \\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \" \"\nassert solution(\" \") == \" \"\nassert solution(\"hello\") == \"hll\"\nassert solution(\" hello\") == \"hll\"\nassert solution(\"world\") == \"wrld\"\nassert solution(\" World\") == \"wrld\"\nassert solution(\"sky\") == \"skyd\"\nassert solution(\"  sky  \") == \"skyd\"\nassert solution(\"hello world\") == \"hll wrld\"\nassert solution(\"hello there\") == \"hll thr\"\nassert solution(\"hello there there\") == \"hll thr thr\"\nassert solution(\"hello there there there\") == \"hll thr thr thr\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International contest- motivation high Programmers have fun!. \"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    ThoreTiemann\n    ThoreHusfeldt\n    \"\"\"\n) == \"ThoreH\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldt\n    JohanSannemo\n    \"\"\"\n) == \"Thore is awesome\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldter\n    ThoreHusfeldt\n    \"\"\"\n) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2\n    123ThoreHusfeldt\n    456ThoreHusfeldt\n    789ThoreHusfeldt\n    \"\"\"\n) == \"ThoreH\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldt\n    456ThoreHusfeldt\n    789ThoreHusfeldt\n    \"\"\"\n) == \"Thore is awesome\"\n\nassert solution(\n    \"\"\"\n    2\n    ThoreHusfeldter\n    ThoreHusfeldt\n    789ThoreHusfeldt\n    \"\"\"\n) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"1\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"1\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'Thore is awesome'\nassert solution(open('input2.txt', 'r')) == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ThoreTiemann') == 'ThoreH', \"ThoreTiemann should be the first on the scoreboard\"\nassert solution('ThoreHusfeldt') == 'Thore is awesome', \"ThoreHusfeldt should be the best Thore\"\nassert solution('ThoreHusfeldter') == 'Thore sucks', \"ThoreHusfeldter should be the worst Thore\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"ThoreHusfeldt\", \"Please fill in the solution.\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"ThoreHusfeldt\\nThoreHusfeldter\") == \"Thore is awesome\"\nassert solution(\"ThoreHusfeldt\\nJohanSannemo\") == \"Thore sucks\"\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"ThoreHusfeldt\"\nassert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks'"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\", \"Expected output: 6, but got: {}\".format(solution(\"P*P\"))\nassert solution(\"L*R\") == \"25\", \"Expected output: 25, but got: {}\".format(solution(\"L*R\"))\nassert solution(\"**\") == \"33\", \"Expected output: 33, but got: {}\".format(solution(\"**\"))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Testcase failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == \"6\", \"Incorrect solution for sample input 1\"\nassert solution(\"L*R\") == \"25\", \"Incorrect solution for sample input 2\"\nassert solution(\"**\") == \"33\", \"Incorrect solution for sample input 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6, \"Test 1 failed\"\nassert solution(\"L*R\") == 25, \"Test 2 failed\"\nassert solution(\"**\") == 33, \"Test 3 failed\"\n\nfrom typing import List\n\nclass Node:\n    def __init__(self, value: int):\n        self.value = value\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"Test case 1 failed\"\nassert solution(\"L*R\") == 25, \"Test case 2 failed\"\nassert solution(\"**\") == 33, \"Test case 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6, \"Invalid solution\"\nassert solution(\"L*R\") == 25, \"Invalid solution\"\nassert solution(\"**\") == 33, \"Invalid solution\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == 6, \"Test 1 failed\"\nassert solution(\"L*R\") == 25, \"Test 2 failed\"\nassert solution(\"**\") == 33, \"Test 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"yes\"\nassert solution(2) == \"wait what?\"\nassert solution(3) == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ulf is lukas') == 'yes'\nassert solution('ulf not lukas') == 'wait what?'\nassert solution('oskar not lukas') == 'wait what?'\nassert solution('moo not foo') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"yes\"\n\nimport re"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('1\\nmoo not foo\\n') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"wait what?\"\nassert solution(\"lukas is smart\") == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"wait what?\"\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"yes\"\nassert solution(stdin) == \"wait what?\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nAACCMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\nACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\n\"\n\nassert solution(\"3\\nACMA\\ACM\\nACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\") == \"impossible\\n\"\n\nassert solution(\"1\\nAM\\nMA\\nSample Output 3:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible\") == \"impossible\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\ninput_ = []\nfor _ in range(5):\n    input_.append(list(input()))\n\noutput = input_[0] +'' + str(len(input_))[1]"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='5\\nAACCACMA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCACMA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n'\n\nassert solution(stdin='5\\nAACCACMA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Input 1:\\n5\\nAACCACMA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\\n3\\nACMA\\ACM\\ACA\\AMA\\n\\n1\\nAM\\MA\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\") == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\n2\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 'impossible\\n', \"The first example is impossible\"\nassert solution(5) == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n', \"The second example is impossible\"\nassert solution(1) == 'impossible\\n', \"The third example is impossible\"\nassert solution(3) == 'impossible\\n', \"The fourth example is impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible\\n'\nassert solution('1\\nAM\\nMA\\n') == 'impossible\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\\nimpossible\\n\\nimpossible\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\\n\\nimpossible\\n\\nimpossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\\nimpossible\\n\\nimpossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution(open('input2.txt', 'r')) == '''\nimpossible\n'''\n\nassert solution(open('input3.txt', 'r')) == '''\nimpossible\n'''"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    ''') == '124'\n\nassert solution('''\n    2 4 1\n    1 0.5 5\n    ''') == '3'\n\nassert solution('''\n    10 20 3\n    5 0.3 8\n    6 0.8 3\n    8 0.9 3\n    ''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"The expected time is 124 seconds.\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"18.9029850746\", \"Incorrect solution\"\nassert solution(100) == \"124\", \"Incorrect solution\"\nassert solution(100, 111, 5) == \"124\", \"Incorrect solution\"\nassert solution(20, 0.5, 10) == \"1\", \"Incorrect solution\"\nassert solution(80, 0.5, 2) == \"124\", \"Incorrect solution\"\nassert solution(85, 0.5, 2) == \"124\", \"Incorrect solution\"\nassert solution(90, 0.5, 2) == \"124\", \"Incorrect solution\"\nassert solution(95, 0.5, 2) == \"124\", \"Incorrect solution\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\", \"The solution is incorrect\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\", \"The solution is incorrect\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\", \"The solution is incorrect\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    2 4 1\n    1 0.5 5\n    "
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == solution(stdin) == \"1234\"\nassert solution(solution(stdin, 1)) == solution(stdin, 1) == \"1234\"\nassert solution(solution(stdin, 2)) == solution(stdin, 2) == \"1234\"\nassert solution(solution(stdin, 3)) == solution(stdin, 3) == \"1234\"\nassert solution(solution(stdin, 4)) == solution(stdin, 4) == \"1234\"\nassert solution(solution(stdin, 5)) == solution(stdin, 5) == \"1234\"\nassert solution(solution(stdin, 6)) == solution(stdin, 6) == \"1234\"\nassert solution(solution(stdin, 7)) == solution(stdin, 7) == \"1234\"\nassert solution(solution(stdin, 8)) == solution(stdin, 8) == \"1234\"\nassert solution(solution(stdin, 9)) == solution(stdin, 9) == \"1234\"\nassert solution(solution(stdin, 10)) == solution(stdin, 10) == \"1234\"\nassert solution(solution(stdin, 11)) == solution(stdin, 11) == \"1234\"\nassert solution(solution(stdin, 12)) == solution(stdin, 12) == \"1234\"\nassert solution(solution(stdin, 13)) == solution(stdin, 13) == \"1234\"\nassert solution(solution(stdin, 14)) == solution(stdin, 14) == \"1234\"\nassert solution(solution(stdin, 15)) == solution(stdin, 15) == \"1234\"\nassert solution(solution(stdin, 16)) == solution(stdin, 16) == \"1234\"\nassert solution(solution(stdin, 17)) == solution(stdin, 17) == \"1234\"\nassert solution(solution(stdin, 18)) == solution(stdin, 18) == \"1234\"\nassert solution(solution(stdin, 19)) == solution(stdin, 19) == \"1234\"\nassert solution(solution(stdin, 20)) == solution(stdin, 20) == \"1234\"\nassert solution(solution(stdin, 21)) == solution(stdin, 21) == \"1234\"\nassert solution(solution(stdin, 22)) == solution(stdin, 22) == \"1234\"\nassert solution(solution(stdin, 23)) == solution(stdin, 23) == \"1234\"\nassert solution(solution(stdin, 24)) == solution(stdin, 24) == \"1234\"\nassert solution(solution(stdin, 25)) == solution(stdin, 25) == \"1234\"\nassert solution(solution(stdin, 26)) == solution(stdin, 26) == \"1234\"\nassert solution(solution(stdin, 27)) == solution(stdin, 27) == \"1234\"\nassert solution(solution(stdin, 28)) == solution(stdin, 28) == \"1234\"\nassert solution(solution(stdin, 29)) == solution(stdin, 29) == \"1234\"\nassert solution(solution(stdin, 30)) == solution(stdin, 30) == \"1234\"\nassert solution(solution(stdin, 31)) == solution(stdin, 31) == \"1234\"\nassert solution(solution(stdin, 32)) == solution(stdin, 32) == \"1234\"\nassert solution(solution(stdin, 33)) == solution(stdin, 33) == \"1234\"\nassert solution(solution(stdin, 34)) == solution(stdin, 34) == \"1234\"\nassert solution(solution(stdin, 35)) == solution(stdin, 35) == \"1234\"\nassert solution(solution(stdin, 36)) == solution(stdin, 36) == \"1234\"\nassert solution(solution(stdin, 37)) == solution(stdin,"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\"\nassert solution(\"2 1\\n\") == \"1\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '2 1 2'\nassert solution(4) == '1'\nassert solution(5) == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'\nassert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'\nassert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'\nassert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'\nassert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'\nassert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '2 1 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n\nfrom typing import List"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1,1) == \"1\"\nassert solution(1,2) == \"1 1\"\nassert solution(1,3) == \"1 2 1\"\nassert solution(1,4) == \"1 2 3 1\"\nassert solution(1,5) == \"1 2 3 4 1\"\nassert solution(1,6) == \"1 2 3 4 6 1\"\nassert solution(1,7) == \"1 2 3 4 6 7 1\"\nassert solution(1,8) == \"1 2 3 4 6 7 8 1\"\nassert solution(1,9) == \"1 2 3 4 6 7 8 9 1\"\nassert solution(1,10) == \"1 2 3 4 6 7 8 9 10 1\"\nassert solution(1,11) == \"1 2 3 4 6 7 8 9 10 11 1\"\nassert solution(1,12) == \"1 2 3 4 6 7 8 9 10 11 12 1\"\nassert solution(1,13) == \"1 2 3 4 6 7 8 9 10 11 12 13 1\"\nassert solution(1,14) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 1\"\nassert solution(1,15) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 1\"\nassert solution(1,16) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 1\"\nassert solution(1,17) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 1\"\nassert solution(1,18) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 1\"\nassert solution(1,19) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 1\"\nassert solution(1,20) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1\"\nassert solution(1,21) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 1\"\nassert solution(1,22) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 1\"\nassert solution(1,23) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 1\"\nassert solution(1,24) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 1\"\nassert solution(1,25) == \"1 2 3 4 6 7 8 9 10 11 12 13 14 15 16 17 1"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '2 1 2'\nassert solution(4) == '1'\nassert solution(5) == '4 3 4 2'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please provide the correct function signature and function body.\\n\\nExpected output: {expected_output}\\n\\nGot output: {solution}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0\\n'\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\", \"No input.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr\"\"\"\n4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\nr\"\"\"\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\nr\"\"\"\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\")) == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2\\n'\n\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2\\n'\n\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"To find the minimum length path that can maximize the time with the worst landslide location, we can consider all possible paths from station 1 to station n and then block off any roads that connect two of them. The total length of such paths would be at least the length of the longest path that connects two stations with at most one blocked road, but it would also be at most the length of the longest path that connects two stations with at most one blocked road while blocking off at most one other road. Therefore, the minimum path length that can be taken will be the maximum path length minus the length of the longest path that connects two stations with at most one blocked road, which is the number of roads on the mountain.\n\nTherefore, the minimum length path that can maximize the time with the worst landslide location is the maximum path length minus the length of the longest path that connects two stations with at most one blocked road."
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.0\nassert solution(\"-10 10\\n10.00 1.00\\n\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\\n\") == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.00000000\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3.14159265\\n'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3.14159265\", \"Incorrect output\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"20.00000000\"\nassert solution(input2) == \"3.14159265\"\nassert solution(input3) == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == 20.0\nassert solution(input2) == 3.14159265\nassert solution(input3) == 28.26445910"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"0 -10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"0 -20\\n1.00 0.10\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.0\nassert solution(\"-10 10\\n10.00 1.00\\n\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\\n\") == 28.26445910"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '170'\nassert solution(open('sample_input1.txt', 'r')) == '170'\nassert solution(open('sample_input2.txt', 'r')) == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 100\n    1 100\n    4 70\n    3 70\n    \"\"\"\n) == \"170\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    2 120\n    3 50\n    2 80\n    \"\"\"\n) == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == 170\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == 150\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"170\"\nassert solution(sample_input_2) == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"170\", \"Incorrect Output\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 170\nassert solution() == 150\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"150\\n\"\nassert solution(stdin) == \"170\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test case 1 failed.\"\nassert solution(sample_input_2) == expected_output_2, \"Test case 2 failed.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Sample Input 2\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '2\\n'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n4 3\\n1 2\\n1 3\\n2 4\\n') == '2'\nassert solution('1\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Test 1\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n\\n\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6') == '2\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 0.5"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'\n\nfrom typing import List"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0') == '0.5'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '0.5', 'Test case 1'\nassert solution(sample_input_2) == '0.0446429', 'Test case 2'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\nSample Input 1:\\n3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\nSample Output 1:\\n0.5\\n\\nSample Input 2:\\n8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\\nSample Output 2:\\n0.0446429') == 0.5"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0.0446429, \"The answer is incorrect.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"Sample Output 1: 0.5\"\nassert solution(stdin) == \"0.0446429\\n\", \"Sample Output 2: 0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"1\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == ['1 6 1', '2 5 2', '3 4 3']\nassert solution(4) == ['IMPOSSIBLE']"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == ['3', '1 6 1', '2 5 2', '3 4 3']"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution() == '1 6 1'\nassert solution() == '2 5 2'\nassert solution() == '3 4 3'\nassert solution() == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '3\\n1 6 1\\n2 5 2\\n3 4 3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == ['1 6 1', '2 5 2', '3 4 3']\nassert solution(4) == ['IMPOSSIBLE']"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Output should be {output()}, but got {solution(input())}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"\"\"\n6\n1 2 3 3 2 1\n\"\"\") == [\"3\", \"1 6 1\", \"2 5 2\", \"3 4 3\"]\n\nassert solution(b\"\"\"\n4\n1 2 1 2\n\"\"\") == [\"IMPOSSIBLE\"]"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 100\"\nassert solution() == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 100\\n1 1\\n2 5\\n5 10 20 30 40 50\\n2 28 27') == '1 2 100\\n1 100 20\\n1 20 10\\n2 28 27\\n2 50 15\\n1 30 20\\n'\nassert solution('1\\n10\\n100\\n1000\\n10000\\n') == '10000\\n'\nassert solution('3\\n1 2\\n1 100\\n1 1\\n2 5\\n5 10 20 30 40 50\\n2 28 27\\n') == '1 2 100\\n1 100 20\\n1 20 10\\n2 28 27\\n2 50 15\\n1 30 20\\n'\nassert solution('4\\n1\\n5\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n') == '1 5 10 15 20\\n1 10 25\\n1 15 30\\n1 20 40\\n2 45 50\\n'\nassert solution('5\\n1\\n10\\n20\\n30\\n40\\n50\\n') == '1 10 20 30 40 50\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1\\n') == '1 2 100\\n'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n') == '10 20 28 27 30 40 50\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2\n    1 100\n    1 1\n    \"\"\"\n) == \"1 2 100\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 10 20 30 40 50\n    2 28 27\n    \"\"\"\n) == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2 100\", \"The correct solution is not given\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Solution: {solution(stdin)}, Expected: {expected}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\") == \"2600\"\nassert solution(\"Sample Input 2\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\n\\n0\\nSample Input 2\\nSample Output 2\\n\") == \"2600\\n506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sample Input 1\") == \"2600\"\nassert solution(\"Sample Input 2\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\\n\") == \"2600\\n\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n\") == \"506\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\n0\\nSample Input 2\\nSample Output 2\\n0\\nSample Input 3\\nSample Output 3\\n0\\nSample Input 4\\nSample Output 4\\n0\\nSample Input 5\\nSample Output 5\\n0\\nSample Input 6\\nSample Output 6\\n0\\nSample Input 7\\nSample Output 7\\n0\\nSample Input 8\\nSample Output 8\\n0\\nSample Input 9\\nSample Output 9\\n0\\nSample Input 10\\nSample Output 10\\n0\\nSample Input 11\\nSample Output 11\\n0\\nSample Input 12\\nSample Output 12\\n0\\nSample Input 13\\nSample Output 13\\n0\\nSample Input 14\\nSample Output 14\\n0\\nSample Input 15\\nSample Output 15\\n0\\nSample Input 16\\nSample Output 16\\n0\\nSample Input 17\\nSample Output 17\\n0\\nSample Input 18\\nSample Output 18\\n0\\nSample Input 19\\nSample Output 19\\n0\\nSample Input 20\\nSample Output 20\\n0\\nSample Input 21\\nSample Output 21\\n0\\nSample Input 22\\nSample Output 22\\n0\\nSample Input 23\\nSample Output 23\\n0\\nSample Input 24\\nSample Output 24\\n0\\nSample Input 25\\nSample Output 25\\n0\\nSample Input 26\\nSample Output 26\\n0\\nSample Input 27\\nSample Output 27\\n0\\nSample Input 28\\nSample Output 28\\n0\\nSample Input 29\\nSample Output 29\\n0\\nSample Input 30\\nSample Output 30\\n0\\nSample Input 31\\nSample Output 31\\n0\\nSample Input 32\\nSample Output 32\\n0\\nSample Input 33\\nSample Output 33\\n0\\nSample Input 34\\nSample Output 34\\n0\\nSample Input 35\\nSample Output 35\\n0\\nSample Input 36\\nSample Output 36\\n0\\nSample Input 37\\nSample Output 37\\n0\\nSample Input 38\\nSample Output 38\\n0\\nSample Input 39\\nSample Output 39\\n0\\nSample Input 40\\nSample Output 40\\n0\\nSample Input 41\\nSample Output 41\\n0\\nSample Input 42\\nSample Output 42\\n0\\nSample Input 43\\nSample Output 43\\n0\\nSample Input 44\\nSample Output 44\\n0\\nSample Input 45\\nSample Output 45\\n0\\nSample Input 46\\nSample Output 46\\n0\\nSample Input 47\\nSample Output 47\\n0\\nSample Input 48\\nSample Output 48\\n0\\nSample Input 49\\nSample Output 49\\n0\\nSample Input 50\\nSample Output 50\\n0\\nSample Input 51\\nSample Output 51\\n0\\nSample Input 52\\nSample Output 52\\n0\\nSample Input 53\\nSample Output 53\\n0\\nSample Input 54\\nSample Output 54\\n0\\nSample Input 55\\nSample Output 55\\n0\\nSample Input 56\\nSample Output 56\\n0\\nSample Input 57\\nSample Output 57\\n0\\nSample Input 58\\nSample Output 58\\n0\\nSample Input 59\\nSample Output 59\\n0\\nSample Input 60\\nSample Output 60\\n0\\nSample Input 61\\nSample Output 61\\n0\\nSample"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2600\", \"Incorrect solution. Expected: 2600, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2600\"\nassert solution(sample_input_2) == \"506\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"()))\" == \"possible\"\nassert solution(\"())())\") == \"possible\"\nassert solution(\"(()()))\" == \"possible\"\nassert solution(\"(()))(())\") == \"possible\"\nassert solution(\"((()))\" == \"possible\"\nassert solution(\"(())())\") == \"possible\"\nassert solution(\"(()())(())\") == \"possible\"\nassert solution(\"(()())()())\") == \"possible\"\nassert solution(\"(()))\" == \"impossible\"\nassert solution(\"())()\" == \"impossible\"\nassert solution(\"(()()))\" == \"impossible\"\nassert solution(\"(()))(())\" == \"impossible\"\nassert solution(\"((()))\" == \"impossible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"(()())(())\") == \"impossible\"\nassert solution(\"(()())()())\" == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()') == 'possible'\nassert solution('(())') == 'possible'\nassert solution('(())()') == 'possible'\nassert solution('()())') == 'possible'\nassert solution('(())()()') == 'possible'\nassert solution('((()))()') == 'possible'\nassert solution('()))')) == 'possible'\nassert solution('())((') == 'possible'\nassert solution('()()())()') == 'possible'\nassert solution('())(())') == 'possible'\nassert solution('()()())(())') == 'possible'\nassert solution('())(())(())') == 'possible'\nassert solution('(())(())()') == 'possible'\nassert solution('())(())()(())') == 'possible'\nassert solution('(()()))()') == 'possible'\nassert solution('(())())(())') == 'possible'\nassert solution('()))(())(())') == 'possible'\nassert solution('(())()(()') == 'possible'\nassert solution('(())()())()()') == 'possible'\nassert solution('())(())(())()()') == 'possible'\nassert solution('(())(())(())()()') == 'possible'\nassert solution('()()())()(()') == 'possible'\nassert solution('())(())()(())(())') == 'possible'\nassert solution('()()())(())(())') == 'possible'\nassert solution('())(())(())(())(())') == 'possible'\nassert solution('(()()))(())(())') == 'possible'\nassert solution('())(())())(())(())' == 'possible'\nassert solution('())(())(())())(())' == 'possible'\nassert solution('())(())(())())())' == 'possible'\nassert solution('())(())(())())(())' == 'possible'\nassert solution('()))(())()())(())' == 'possible'\nassert solution('())(())())(())(())(())' == 'possible'\nassert solution('())(())(())(())(())' == 'possible'\nassert solution('())(())())(())())(())' == 'possible'\nassert solution('()))(())()())())(())' == 'possible'\nassert solution('())(())())(())())(())' == 'possible'\nassert solution('())(())(()())(())' == 'possible'\nassert solution('()())(())(())())') == 'possible'\nassert solution('())(())())(())(())(())' == 'possible'\nassert solution('())(())(())(())())' == 'possible'\nassert solution('()())(())(())(())(())' == 'possible'\nassert solution('(())())(())(())(())' == 'possible'\nassert solution('())(())())(())())(())(())' == 'possible'\nassert solution('())(())())(())())(())(())' == 'possible'\nassert solution('()))(())()())())(())(())' == 'possible'\nassert solution('())(())())(())())(())(())' == 'possible'\nassert solution('())(())(()())(())(())' == 'possible'\nassert solution('()())(())())(())(())' == 'possible'\nassert solution('())(())())(())())(())' == 'possible'\nassert solution('())(())(()())(())())' == 'possible'\nassert solution('())(())())(())())(())' == 'possible'\nassert solution('())(())(()())(())())' == 'possible'\nassert solution('())(())())(())())())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())())(())' == 'possible'\nassert solution('())(())(()())"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'possible'\nassert solution('))())') == 'possible'\nassert solution('(((') == 'impossible'\nassert solution('))')) == 'impossible'\nassert solution(')(') == 'impossible'\n\nprint('All test cases passed.')"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()))\") == \"possible\"\nassert solution(\"()())\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"()())()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(())()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()\") == \"possible\"\nassert solution(\"()()()\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(())()()\") == \"possible\"\nassert solution(\"()\") == \"possible\"\nassert solution(\"()()()()\") == \"possible\"\nassert solution(\"()()()(())\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"())()()\") == \"possible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"())(())\") == \"impossible\"\nassert solution(\"()()()(())\") == \"impossible\"\nassert solution(\"()(())()\") == \"impossible\"\nassert solution(\"()(())())\") == \"impossible\"\nassert solution(\"()()()(())\") == \"impossible\"\nassert solution(\"())(())()\") == \"impossible\"\nassert solution(\"())(())(())\") == \"impossible\"\nassert solution(\"())(())()())\") == \"impossible\"\nassert solution(\"())())())\") == \"impossible\"\nassert solution(\"(())())())\") == \"impossible\"\nassert solution(\"())(())())(())\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"()())())(())\") == \"impossible\"\nassert solution(\"(())())(())(())\") == \"impossible\"\nassert solution(\"(())())(())(())(())\") == \"impossible\"\nassert solution(\"(()())(())\") == \"impossible\"\nassert solution(\"(()())(())(())\") == \"impossible\"\nassert solution(\"(()())(())())\") == \"impossible\"\nassert solution(\"(()())())())\") == \"impossible\"\nassert solution(\"(()())())(())\") == \"impossible\"\nassert solution(\"(()())())(())(())\") == \"impossible\"\nassert solution(\"(()())(())()())\") == \"impossible\"\nassert solution(\"())(())())(())\") == \"impossible\"\nassert solution(\"())(())())(())(())(())\") == \"impossible\"\nassert solution(\"())(())())(())()())\") == \"impossible\"\nassert solution(\"(()())(())()())())\") == \"impossible\"\nassert solution(\"()())())())(())()\") == \"impossible\"\nassert solution(\"(())())())(())()\") == \"impossible\"\nassert solution(\"())(())())(())(())())\") == \"impossible\"\nassert solution(\"()(())())(())())())\") == \"impossible\"\nassert solution(\"())(())())(())())(()))\") == \"impossible\"\nassert solution(\"(())())())(())())(()))\") == \"impossible\"\nassert solution(\"())(())())(())())(()(()))\") == \"impossible\"\nassert solution(\"())(())())(())())())(()()))\") == \"impossible\"\nassert solution(\"())(())())(())())())(()()))(())\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()))\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()()))\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())\")) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())\")) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())\")) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())()) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())())(())\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())())(())()) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())())(())())(())()) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())())(())())(())())(())()) == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())())(())())(())())(())())(())())(())\") == \"impossible\"\nassert solution(\"())(())())(())())())())(()()))(()(()(()()))(())"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"()))\"), \"possible\"\nassert solution(\"()())\"), \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('()))') == 'possible'\nassert solution('())(')) == 'possible'\nassert solution('(()())') == 'possible'\nassert solution('((()))') == 'possible'\nassert solution('((())())') == 'possible'\nassert solution('(()')) == 'impossible'\nassert solution('()()()') == 'impossible'\nassert solution('(())')) == 'impossible'\nassert solution('()(())')) == 'impossible'\nassert solution('(())')) == 'impossible'\nassert solution('(()()))')) == 'impossible'\nassert solution('((()))()')) == 'impossible'\nassert solution('(()()()))')) == 'impossible'\nassert solution('(())()')) == 'impossible'\nassert solution('()))(()')) == 'impossible'\nassert solution('(()()())()')) == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())(,))\") == \"impossible\"\nassert solution(\"())))\") == \"impossible\"\nassert solution(\"(()(())))\") == \"possible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"()()()\") == \"possible\"\nassert solution(\"()()(())\") == \"possible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"(())(())\") == \"impossible\"\nassert solution(\"(()())\") == \"impossible\"\nassert solution(\"(()())(())\") == \"impossible\"\nassert solution(\"()()()()\") == \"impossible\"\nassert solution(\"(())())()()\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1800\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} with output {output}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '1800'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 1800\nassert solution(sample_input_2) == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '''1800'''\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == '''impossible'''"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800\\n'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = '''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400'''\n\nsample_input_2 = '''2 2\n1 1800 3600 1800\n1 1900 3600 1600'''\n\nsample_output_1 = '1800'\nsample_output_2 = 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case {t+1} failed.\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1800\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'A1-B1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1\\nA1-B2 A2-C1 B1-C2 A1-C1 A2-B1 B2-C1 A1-B1 A2-C2 B2-C1 A1-C1 A2-B2 B1-C2 A1-C2 A2-B2 B1-C1'\nprint('All test cases passed!')"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    \"\"\"\n) == \"\"\"\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2 3\n    \"\"\"\n) == \"\"\"\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution('2 3\\n') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# test cases\\nassert solution(input()) == output()\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"A1-B2 B1-A2 A3-B3 A1-B1 A2-B2 A1-B2 A2-B1 A1-C1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1\", \"Incorrect solution\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output. Please check the code again.\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\\n\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(get_sample_input(1)) == get_sample_output(1)"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n   ..\n   ..\n    \"\"\"\n) == \"7\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    X.XX\n    X..X\n   ..X.\n   ..XX\n    \"\"\"\n) == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X."
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example_input1) == '7\\n', \"Sample Output 1 incorrect\"\nassert solution(example_input2) == '9\\n', \"Sample Output 2 incorrect\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n..\\n..\\n4 4\\nX.XX\\nX..X\\n..X. \\n..XX') == 7\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n4 4\\nX.XX\\nX..X\\n..X. \\n..XX') == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.X\\n..XX\") == \"9\"\nassert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.X\\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n..\\n..\\n') == 7\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n') == 9\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\"\nassert solution(\"2 2\\n..\") == \"7\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_num} failed\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"600\", \"Incorrect output\"\nassert solution(stdin) == \"100\", \"Incorrect output\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"600\"\n\nfrom typing import List"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600\\n'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100\\n'\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '600'\nassert solution(sample_input2) == '100'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Error: {solution(input())}!= {output}\" for input, output in zip(test_cases, expected_outputs)\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. Please check the provided code and submit the correct solution.\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"3\"\nassert solution(2) == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3\\n361\\n0\\n'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == expected"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output(), f\"The output is {output()}, but you provided {stdin}.\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n361\") == 3\nassert solution(\"2\\n11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n361\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(361) == 3\nassert solution(11) == 0\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\n\nassert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '10'\nassert solution(sample_input2) == 'cancel road trip'\n\nfrom typing import List"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 10, 2, 100, 1, 10, 11, 5) == '10'\nassert solution(3, 10, 2, 100, 1, 10, 13, 5) == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5\\n') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5\\n') == 'cancel road trip'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == [1, 8, 9, 9, 100, 101, 108, 109, 109]\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == [0, 7, 8, 11, 15, 16, 19]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, \"Test 1 Failed\"\nassert solution(input2) == expected2, \"Test 2 Failed\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}\\nInput: {input()}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n\") == [1, 8, 9, 9, 100, 101, 108, 109, 109]\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n\") == [0, 7, 8, 11, 15, 16, 19]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, \"Solution is incorrect. Expected: {}\\nActual: {}\".format(expected, solution)\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"The code is incorrect. Expected output: {expected_output}, Received output: {solution}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == ['1 8 9 9 100 101 108 109 109']\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == ['0 7 8 11 15 16 19']"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\", \"Solution is incorrect.\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\", \"Solution is incorrect.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(output()), f\"Output {solution(str(input()))} should be {str(output())}.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"1\\n\"\nassert solution(sample_input_2) == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '1\\n'\n\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Your solution is not correct!\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"3\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\n\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == open('output.txt', 'r').read().splitlines()\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\nassert solution(\"5 10000\\n20000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n10000\\n100"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == str(output())"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ne') == 'NE'\nassert solution('kava') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nne\") == \"NE\\nn\"\nassert solution(\"4\\nkava\") == \"DA\\nak\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\\n4\\nkava\\n\") == \"NE\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\") == \"NE\", \"Sample Input 1 failed\"\nassert solution(\"4\\nkava\") == \"DA\", \"Sample Input 2 failed\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10') == 'NE'\nassert solution('11') == 'NE'\nassert solution('123') == 'DA'\nassert solution('124') == 'DA'\nassert solution('125') == 'NE'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\ne\\n4\\nkava\\n') == 'NE\\nak'\nassert solution('4\\nkava\\n') == 'DA\\nak'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"NE\"\nassert solution(stdin) == \"DA\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\"\n) == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == [\"2\\n0\\n2\\n1\\n\"]"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n0\n0\n3\n2\n'''"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n0\\n2\\n1\\n'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n0\\n2\\n1\\n\"\nassert solution(input()) == \"0\\n0\\n3\\n2\\n\"\nassert solution(input()) == \"3\\n2\\n1\\n\"\nassert solution(input()) == \"2\\n1\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    3 4 4\n    4 5 4\n    5 6 4\n    6 7 4\n    7 8 4\n    8 9 4\n    9 10 4\n    10 10 4\n    ''') == '2\\n0\\n2\\n1\\n'\nassert solution('''\n    8 10 4\n    1 2\n    2 3\n    1 3\n    3 6\n    6 8\n    2 4\n    2 5\n    4 7\n    5 7\n    7 8\n    2 3 4 5 6\n    2 2 6 8\n    1 1 6\n    1 1 8\n    ''') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Please define a function named'solution'\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Expected output: {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output: {output2}, but got {solution(input2)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Test case 1 failed\"\nassert solution() == 1, \"Test case 2 failed\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3') == 2"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Solution should return 2\"\n\nassert solution() == 1, \"Solution should return 1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000'\nassert solution('') == 'impossible'\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"40.500000000\", \"Test case 1\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"40.5\", \"Test case 1 failed\"\nassert solution() == \"49.0\", \"Test case 2 failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"40.500000000\\n\", \"The output should be '40.500000000', but it is actually '\", solution(stdin), \"'.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"40.500000000\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"49.000000000\", \"Test case 2 failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.5\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"40.500000000\", \"Expected output: 40.500000000\"\nassert solution() == \"49.000000000\", \"Expected output: 49.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"\"\"5 4 9 3 1 10 7 6 2\"\"\"\nassert solution(\"\"\"10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"\"\"fail\"\"\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '5 4 9 3 1 10 7 6 2'\nassert solution(open('sample_input.txt', 'r')) == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '5 4 9 3 1 10 7 6 2'\nassert solution(open('input.txt', 'r').read()) == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Your solution is incorrect.\"\nassert solution(input2) == output2, \"Your solution is incorrect.\"\n\nfrom typing import List\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\"\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n    5 4 9 3 1 10 7 6 2\n\"\"\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\n\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('00:00\\n01:01\\n') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00\\n') == '3\\n00:08\\n00:09\\n00:00\\n'\n\nfrom typing import List"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('00:00') == '3\\n00:00\\n01:00'\nassert solution('00:08') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00:00\\n01:01\") == 3\nassert solution(\"00:08\\n00:00\") == 3\nassert solution(\"01:00\\n00:00\") == 3"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01', 'Test 1'\n\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00', 'Test 2'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"()\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(())()') == '4,8:8,8:8,8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:8:"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(ab(cd))\") == \"8,12:12,16:\"\nassert solution(\"(ab(cd))\") == \"8,12:12,16:\"\nassert solution(\"(ab(cd))\") == \"8,12:12,16:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(()) == \"4,8:8,8:\"\nassert solution(()) == \"4,4:\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\nSample Output 1: 5\\n\\n1 1\\n26 02 03 03 2\\nSample Output 2: 185\\n\") == \"5\\n185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"5\\n185\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 3\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n26 02 03 03 6\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n26 02 03 03 6\\n26 02 03 03 7\\n26 02 03 03 8\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n26 02 03 03 6\\n26 02 03 03 7\\n26 02 03 03 8\\n26 02 03 03 9\\n26 02 03 03 10\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n26 02 03 03 6\\n26 02 03 03 7\\n26 02 03 03 8\\n26 02 03 03 9\\n26 02 03 03 10\\n26 02 03 03 11\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 03 5\\n26 02 03 03 6\\n26 02 03 03 7\\n26 02 03 03 8\\n26 02 03 03 9\\n26 02 03 03 10\\n26 02 03 03 11\\n26 02 03 03 12\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n26 02 03 03 3\\n26 02 03 03 4\\n26 02 03 0"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''1 1\n26 02 03 03 1''') == 5\nassert solution('''1 1\n26 02 03 03 2''') == 185"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == 5\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == 185\nassert solution(\"2 1\\n26 02 03 03 1\\n\") == -1\nassert solution(\"1 1\\n26 02 03 03 1\\n27 02 03 03 1\\n\") == 5\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n') == '5\\n185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '5\\n', 'Sample Input 1 Failed'\nassert solution(sample_input2) == '185\\n', 'Sample Input 2 Failed'\n\nfrom typing import List"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\"\nassert solution(\"1 2\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"-1\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"5 6 1 2 3 4\n2 3 4 1\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1 \\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\"\nassert solution(\"1 2\\n1 1\\n\") == \"1\"\nassert solution(\"3 4\\n5 6\\n\") == \"1\"\nassert solution(\"3 3\\n4 4\\n\") == \"2\"\nassert solution(\"1 2\\n2 3\\n\") == \"2\"\nassert solution(\"1 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 4\\n5 6\\n7 8\\n\") == \"1\"\nassert solution(\"1 1\\n2 2\\n\") == \"2\"\nassert solution(\"3 3\\n4 4\\n5 5\\n\") == \"2\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4\\n'\nassert solution('''4 2\n3 4 1 2''') == '2 3 4 1\\n'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"5 6 1 2 3 4\\n2 3 4 1\"\nassert solution(open(\"input2.txt\").read()) == \"2 3 4 1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'6 2\\n3 4 5 6 1 2\\n') == '5 6 1 2 3 4\\n'\nassert solution(r'4 2\\n3 4 1 2\\n') == '2 3 4 1\\n'\nassert solution(r'10 5\\n1 2 3 4 5 6 7 8 9 10\\n') == 'Impossible\\n'"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output the largest number you can get after exactly k swaps.\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test Failed\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed. Please check your solution and input.\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1374 2\\n210 1\\n\") == \"7413\\n201\\n\"\nassert solution(\"10 5\\n10 5\\n10 5\\n\") == \"1010\\n1010\\n1010\\n\"\nassert solution
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == 0.666666666666667\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 0, 1, 1, 0]) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.666666666666667"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.666666666666667\\n\"\nassert solution(stdin) == \"0.733333333333333\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.666666666666667\", \"Test 1\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').readlines()) == '0.666666666666667\\n0.733333333333333\\n'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.666666666666667\\n'\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"0.666666666666667\", \"Sample Input 1\"\nassert solution(sample_input2) == \"0.733333333333333\", \"Sample Input 2\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"The function should return '{expected_output}' but instead returned '{solution(input_data)}'.\" for input_data, expected_output in [\n    (\"4\\n0 0\\n0 1\\n1 1\\n1 0\", \"0.666666666666667\"),\n    (\"3\\n0 0\\n1 1\\n2 0\", \"0.733333333333333\"),\n]"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9\\n'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21\\n'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Incorrect output\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"21\", \"Test case 2 failed\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \" solution to the problem\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 9\nassert solution() == 21"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20') == 9\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == 21"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='8 2 7 -\\n1 1 1 2\\n8 2 7 -\\n1 1 1 2\\n') == 2\nassert solution(stdin='9 2 7 -\\n1 1 1 2\\n8 2 7 -\\n1 1 1 2\\n') == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\", \"The input should be empty\"\n\nn, m, t, op = map(int, input().split())\ngrid = []\nfor _ in range(m):\n    grid.append(list(map(int, input().split())))"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == 2\nassert solution(\"9 2 7 -\\n1 1 1 2\") == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == 2\nassert solution('9 2 7 -\\n1 1 1 2\\n') == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\\n\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Got {solution}, expected {expected}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"4\"\nassert solution(5) == \"3\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 4 8\\n\") == \"3\\n4\\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 3\n1 2 5\n2 3 5\n3 4 5\"\"\") == '3\\n4\\n3\\n'\n\nassert solution(\"\"\"4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\"\"\") == '2\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Error: The solution for the given input is not correct. Input: {input()}, Output: {output}, Solution: {solution(input())}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"3\n4\n3\n2\n1\n\"\"\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2 5\n    2 3 5\n    3 4 5\n    \"\"\"\n) == \"3\\n4\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    1 2 5\n    2 3 5\n    3 4 5\n    1 4 8\n    \"\"\"\n) == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"24\", \"Expected 24, got {}\".format(solution(stdin))\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"Wrong output. Expected 6, got {}\".format(solution())"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == \"6\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2 3\n   2 1\n   3 4\n   2 3 1\"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"3 4\n   2 3 1\"\"\"\n) == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"Incorrect output\"\nprint(6)"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"6\"\nassert solution(sample_input_2) == \"24\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect output.\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Expected output: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input(1)) == \"2\"\nassert solution(sample_input(2)) == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n''') == '2'\n\nassert solution('''5\n3 4 5 1 2\n''') == '1'\n\nassert solution('''5\n3 4 5 6 1 2\n''') == '5'\n\nassert solution('''5\n1 2 3 4 5\n''') == '0'\n\nassert solution('''5\n1 2 3 4 6\n''') == '7'\n\nassert solution('''5\n1 2 3 5 4\n''') == '6'\n\nassert solution('''5\n1 2 3 5 6\n''') == '4'\n\nassert solution('''5\n1 2 3 6 5\n''') == '3'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect Answer\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n', \"The code is not correct.\"\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n', \"The code is not correct.\"\n\nfor n in [2, 5]:\n    for t in range(n):\n        print(f\"{n} {t+1}\\n\")"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2\\n', \"Sample Input 1\\n\"\nassert solution(stdin) == '1\\n', \"Sample Input 2\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Incorrect output\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"9\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == # Enter your solution here\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\", \"The given solution is incorrect\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 4 10\n    5 2 6\n    11 1 3\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    1 3 1\n    2 1 2\n    1 1 1\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6, \"The output should be 6\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 6\nassert solution(sample_input2) == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"Expected output: 6, got: {}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == 3\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(stdin=\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '6\\n'\nassert solution(open('sample_input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output 1\\n18\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"The answer to the first query is: 18\\nThe answer to the second query is: 8\\n\", \"Solution failed for the given input\"\nassert solution() == \"The answer to the first query is: 265\\nThe answer to the second query is: 25\\nThe answer to the third query is: 10\\n\", \"Solution failed for the given input\"\nassert solution() == \"The answer to the first query is: 18\\nThe answer to the second query is: 8\\nThe answer to the third query is: 265\\n\", \"Solution failed for the given input\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\\n3\\n17 144\\n121 121\\n89 98\\n\\n\") == \"18\\n8\\n\\n265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"2\n1 10\n5 8\n\"\"\"\nsample_input_2 = \"\"\"3\n17 144\n121 121\n89 98\n\"\"\"\n\nsample_output_1 = \"18\"\nsample_output_2 = \"265\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"0.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').readline()) == 0.50000000\nassert solution(open('input2.txt').readline()) == 12.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, \"Your solution is incorrect\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    0 0\n    1 1\n    2 1\n    1 0\n    \"\"\"\n) == \"0.50000000\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    0 4\n    4 2\n    4 1\n    3 -1\n    -2 4\n    \"\"\"\n) == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    0 0\n    1 1\n    2 1\n    1 0\n    \"\"\"\n) == \"0.5\"\n\nassert solution(\n    \"\"\"\n    5 5\n    0 4\n    4 2\n    4 1\n    3 -1\n    -2 4\n    \"\"\"\n) == \"12.5\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.50000000, \"Expected 0.50000000, got {}\".format(solution())"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4') == '12.50000000'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"The solution should return 2\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"Invalid output\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Expected output 2, but got {}\".format(solution())"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n\nassert solution(r'''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected output:\\n{}\\nGot:\\n{}\".format(output(), solution(input()))"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', \"Solution is not correct\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == 6\nassert solution('2 2 2') == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n\nfrom typing import List"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"0\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\"\nassert solution(\"2 2 2\") == \"30\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"2021 2020 2020\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2020 2020 2020\\n\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\\n\"\nassert solution(\"1\\n9\\n\") == \"19\\n\"\nassert solution(\"1\\n11\\n\") == \"22\\n\"\nassert solution(\"2\\n1000000 1000000 1000000\\n\") == \"2000000 2000000 2000000\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: '{expected_output}', got: '{solution(input())}'.\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect!\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(input()))) == solution(input())\nassert solution(solution(solution(input()))) == solution(input())\nassert solution(solution(solution(input()))) == solution(input())\nassert solution(solution(solution(input()))) == solution(input())\nassert solution(solution(solution(input()))) == solution(input())"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == 11\nassert solution(\"66 69\") == 2\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}, expected output {expected}\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"30 70\") == \"11\", \"Test 1\"\nassert solution(\"66 69\") == \"2\", \"Test 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\", \"Sample Input 1: 30 70\"\nassert solution(\"66 69\") == \"2\", \"Sample Input 2: 66 69\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(30 70) == 11\nassert solution(66 69) == 2\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2'\n\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"2\\n\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"4\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#\\n>>>>~\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('143175=120\\n') == '14+31+75=120\\n'\nassert solution('5025=30\\n') == '5+025=30\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '14+31+75=120\\n5+025=30\\n'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\nfrom typing import List"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('143175=120') == '14+31+75=120', \"Solution not correct\"\nassert solution('5025=30') == '5+025=30', \"Solution not correct\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\") == \"5+025=30\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 2\\n\", \"Expected Output 1\"\nassert solution(input()) == \"-1\\n\", \"Expected Output 2\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '1 2'\nassert solution(open('input.txt', 'r')) == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1 2\", \"Your solution is not correct\"\nassert solution(sample_input_2) == \"-1\", \"Your solution is not correct\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\") == \"-1\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '''\n1 2\n'''\n\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '''\n-1\n'''"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(8) == '1 2\\n'\nassert solution(8) == '1 2\\n'\nassert solution(8) == '-1\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([8, 1, 3, 2, 4, 1, 5, 2, 4]) == '1 2'\nassert solution([8, 1, 2, 3, 4, 5, 6, 7, 1]) == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Test {test_case_number} failed.\" for test_case_number, sample_input, expected_output in zip(range(1, 10), sample_inputs, expected_outputs)\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    8\n    1\n    3\n    2\n    4\n    1\n    5\n    2\n    4\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    1\n    \"\"\"\n) == \"-1\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"Incorrect answer\"\nassert solution(\"1101\") == 1, \"Incorrect answer\"\nassert solution(\"1\") == 0, \"Incorrect answer\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1101') == '1', \"Output is incorrect\"\nassert solution('1') == '0', \"Output is incorrect\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\", \"Test Case 1 Failed\"\nassert solution(\"1\") == \"0\", \"Test Case 2 Failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"\"\"\n1\n0\n2\n\"\"\"\n\nassert solution(\n\"\"\"\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n\"\"\") == \"\"\"\n3\n\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1''') == '''1\n0\n2\n'''\n\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''3\n2\n0\n1\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1') == ['1\\n0\\n2\\n']\nassert solution('2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2') == ['3\\n']"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output: 1\\n0\\n2\\n\\nOutput: 3\\n3\\n0\\n\\nOutput: 0\\n0'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, got: {solution(input_str)}\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n2 2\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n') == '3\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n'\nassert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\") == \"3\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"The solution does not match the expected output.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4.000000'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4.000000\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution_ref, \"Test failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.750\", \"Expected: 0.750, Actual: {}\".format(solution(stdin))"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('tests/sample_input1.txt', 'r')) == 0.75\nassert solution(open('tests/sample_input2.txt', 'r')) == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n        2 2 5 5\n        2.0 2.0\n        4.0\n        1.0 0.0\n        0.0 1.0\n        1.0 0.0\n        0.0 2.0\n        ''') == '0.750'\n\nassert solution('''\n        2 2 5 5\n        2.0 2.0\n        4.0\n        1.0 0.0\n        0.0 1.0\n        1.5 0.0\n        0.0 2.0\n        ''') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.75\nassert solution() == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0.750, \"Expected 0.750, got {}.\".format(solution)\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.0 0.0\n    0.0 2.0\n    \"\"\"\n) == \"0.750\"\n\nassert solution(\n    \"\"\"\n    2 2 5 5\n    2.0 2.0\n    4.0\n    1.0 0.0\n    0.0 1.0\n    1.5 0.0\n    0.0 2.0\n    \"\"\"\n) == \"0.625\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\n\nassert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"2\\n\", \"Expected output: 2\\n\"\nassert solution(input_2) == \"37\\n\", \"Expected output: 37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed. Expected: {output1}, Actual: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed. Expected: {output2}, Actual: {solution(input2)}\"\n\ninput1 = \"4 3\\n1234\\n1 4\\n1 4\\n1 4\"\noutput1 = \"10\\n14\\n18\"\ninput2 = \"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\"\noutput2 = \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10\\n14\\n18\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, f\"Test 1 failed: {solution(input_1)}\\nOutput should be: {output_1}\\n\"\n\nassert solution(input_2) == output_2, f\"Test 2 failed: {solution(input_2)}\\nOutput should be: {output_2}\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\n\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4') == '10\\n14\\n18'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Solution for the problem is different from the expected output.\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\", \"Incorrect output\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Sample Input 1 should return 2.\"\n\nassert solution() == \"1\", \"Sample Input 2 should return 1.\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == 1, \"Expected output 1, but got: \" + str(solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\"))"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected output: 2, got: \" + str(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4\\n') == '2'\n\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\"\nassert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 3\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"yes\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n9999 0 10000 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"The provided code is incorrect. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no\\n'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no\\n'\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO\\n'\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == expected_output[0]\nassert solution(samples[1]) == expected_output[1]\nassert solution(samples[2]) == expected_output[2]\nassert solution(samples[3]) == expected_output[3]\nassert solution(samples[4]) == expected_output[4]\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES', \"Test 1 failed\"\nprint(\"Test 1 passed\")"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES\\n1 3\\n2 1\\n3 2\\n'\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES\\n1 3\\n2 1\\n3 2'\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == \"inconsistent\"\nassert solution(5, 5) == \"consistent\"\n\nfrom typing import List"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"inconsistent\", \"Solution should return 'inconsistent'\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"consistent\", \"Your solution is incorrect\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == 1.57079633, \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\")\n\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == 41938.65135885, \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == \"1.57079633\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\") == \"1.57079633\"\n\nassert solution(r\"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\"\n) == \"1.57079633\"\nassert solution(\n    \"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\"\n) == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\\n\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input()) == '3\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3'\nassert solution(open('sample_input2.txt', 'r')) == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\nsabcabcfabc\\n1\\nsabbaccfabc\\n') == '3\\n'\nassert solution(stdin='2\\ntrutrutiktiktappop\\n1\\ntrutrutiktappop\\n') == '4\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\", \"Ivana won the bet (Zvonko hadn't foreseen this and suspects that it is due to outside interference) and now Zvonko is waiting for her at the movies. While he is waiting, he is observing messages on a screen above him.\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\", \"As Ivana is running late, Zvonko has been looking at the screen for a while and noticed that some messages appeared on the screen more than once. Naturally, he's been writing down all messages on a piece of paper. He wants to know the length of the longest string that appears twice (appears in two different positions on the paper).\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\\n\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\\n\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"11\\nsabcabcfabc\") == \"3\\n\"\nassert solution(stdin=\"18\\ntrutrutiktiktappop\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the output: {output}, not: {solution(input())}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11sabcabcfabc') == 3, \"The length of the longest string that appears twice on a single line should be 3.\"\nassert solution('18trutrutiktiktappop') == 4, \"The length of the longest string that appears twice on a single line should be 4.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"3\\n\"\nassert solution(sample_input_2) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(6) == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 2"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(6) == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Solution is incorrect.\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Please check the provided code and example inputs.\"\n\nfor case in range(t):\n    n, p = map(int, stdin.readline().split())\n    t = list(map(int, stdin.readline().split()))\n    s = list(map(int, stdin.readline().split()))\n    e = list(map(int, stdin.readline().split()))\n\n    max_points = 0\n    current_points = 0\n    for sp_i, sp_e in enumerate(e):\n        for sp_j in range(sp_i, p):\n            current_points += 2\n            if current_points > max_points:\n                max_points = current_points\n\n    print(max_points)\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\"\nassert solution(\"5 1\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\") == \"15\"\nassert solution(\"3 1\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\") == \"15\"\nassert solution(\"2 3\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55\\n60\\n65\\n70\\n75\\n80\\n85\\n90\\n95\\n100\") == \"15\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == 4\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == 9"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 9, \"The correct solution is not provided.\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output 2\", \"Incorrect output\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution() == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\", \"Test failed\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\nfor i in range(len(input.split())):\n    assert int(input.split()[i]) <= 50000000 and 0 <= int(input.split()[i]) <= 50000000, f\"Test failed for input {input.split()} at position {i}\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"9\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"concat(shuffle([1,2,1,2]),shuffle([2,1,1,2]))\") == \"equal\"\nassert solution(\"concat(shuffle([1,2,1,2]),shuffle([1,2,2,1]))\") == \"equal\"\nassert solution(\"concat(shuffle([2,1,1,2]),shuffle([1,2,1,2]))\") == \"not equal\"\nassert solution(\"concat(shuffle([2,1,1,2]),shuffle([1,2,2,1]))\") == \"not equal\"\nassert solution(\"concat(sorted([1,2,3,4,5,6]),sorted([4,5,6,1,2,3]))\") == \"not equal\"\nassert solution(\"concat(sorted([1,2,3,4,5,6]),sorted([5,6,1,2,3,4]))\") == \"equal\"\nassert solution(\"concat(sorted([1,2,3,4,5,6]),sorted([1,2,3,4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n') == 'equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n') == 'equal\\n'\nassert solution('concat(concat([3,2,1],[4,5,6]),concat([2,3,1],[5,4,6]))\\n[1,2,3,4,5,6,2,3,1,5,4,6]\\n') == 'not equal\\n'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\", \"Sample Input 1 incorrect\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\", \"Sample Input 2 incorrect\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'not equal\\n'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal\\n'\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    3 2\n    1 2 1 2\n    2 3 1 2\n    \"\"\"\n) == \"Oh no\\n\"\n\nassert solution(\n    \"\"\"\n    1 3\n    3 2\n    1 2 1 2\n    2 3 1 2\n    \"\"\"\n) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\n\nfrom typing import List"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\n\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Oh no\", \"Please provide the correct input\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == 'Oh no\\n'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == '1\\n'\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 4) == 3\nassert solution(5, 5) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"3\"\nassert solution(input2) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'\nprint(\"All tests passed\")"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == 3\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 4) == 3\nassert solution(5, 5) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\", \"Test 1\"\nassert solution(\"1\\n22\") == \"4\", \"Test 2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\\n\") == 2\nassert solution(\"1\\n22\\n\") == 4\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n   5\n   2 1 1 1 3\n   1\n   22\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    1\n    22\n    \"\"\"\n) == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == 2\nassert solution('1\\n22\\n') == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == 2\nassert solution(\"1\\n22\\n\") == 4"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\"\nassert solution(\"5\\n2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22 2 1 1 1 3\") == \"4\"\nassert solution(\"1\\n22 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3 2 1 1 1 3\") == \"4\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\", \"The output is incorrect.\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3\n3 1 5\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"3\\n\"\nassert solution(sample_input2) == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 1 5') == '3'\nassert solution('4 1 2 3 4') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test {test_number} failed\"\nassert solution(sample_input_2) == expected_output_2, f\"Test {test_number} failed\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 5\") == \"3\"\nassert solution(\"4 1 2 3 4\") == \"2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"3\\n\", \"Solution for sample input 1 does not match\"\nassert solution(sample_input2) == \"2\\n\", \"Solution for sample input 2 does not match\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a+b-c') == ['- +d-', '+ +d-']\nassert solution('a-b+d-c') == ['+ +d-', '- +d-']\nassert solution('knuth-morris-pratt') == ['<any> <empty>']\nassert solution('knuthmorrispratt') == ['<any> <empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input(\"a+b-c\\na-b+d-c\\n\")) == [\"- +d-\", \"def <any>\"]\nassert solution(input(\"knuth-morris-pratt\\nknuthmorrispratt\\n\")) == [\"<any> <empty>\", \"def <any>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"<any> <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"def\"\nassert solution(\"knuth-morris-pratt\") == \"<empty>\"\nassert solution(\"knuthmorrispratt\") == \"def\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == '- +d-', \"- +d-\"\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == '<any> <empty>', \"def solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c\\na-b+d-c\\n') == '- +d-'\nassert solution('knuth-morris-pratt\\nkntsmorrispratt\\n') == '<empty> <any>'\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\n\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a+b-c\") == [\"- +d-\"]\nassert solution(\"a-b+d-c\") == [\"+d-\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any> <empty>\"]\nassert solution(\"knuthmorrispratt\") == [\"<any> <empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('') == '<empty>'\nassert solution('abc') == '<any>'\nassert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\nassert solution('knuthmorrispratt') == '<any> <empty>'\nassert solution('a+b-c+d-e') == '<any> +d-'\nassert solution('a-b+c+d+e') == '- +d-'\nassert solution('a+b-c+d-e+f') == '+f- +d-'\nassert solution('a-b+c+d+e-f') == '-f- +d-'\nassert solution('a+b-c+d-e+f+g') == '+g- +d-'\nassert solution('a-b+c+d+e-f+g') == '-g- +d-'\nassert solution('a+b-c+d-e+f+g+h') == '+h- +d-'\nassert solution('a-b+c+d+e-f+g+h') == '-h- +d-'\nassert solution('a+b-c+d-e+f+g+h+i') == '+i- +d-'\nassert solution('a-b+c+d+e-f+g+h+i') == '-i- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j') == '+j- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j') == '-j- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k') == '+k- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k') == '-k- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l') == '+l- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l') == '-l- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m') == '+m- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m') == '-m- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m+n') == '+n- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m+n') == '-n- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m+n+o') == '+o- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m+n+o') == '-o- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m+n+o+p') == '+p- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m+n+o+p') == '-p- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m+n+o+p+q') == '+q- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m+n+o+p+q') == '-q- +d-'\nassert solution('a+b-c+d-e+f+g+h+i+j+k+l+m+n+o+p+q+r') == '+r- +d-'\nassert solution('a-b+c+d+e-f+g+h+i+j+k+l+m+n+o+p+q+r') == '-r- +d-'\nassert solution('a+"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"a-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"def solution(stdin: str) -> str: pass\"\nassert solution(\"knuthmorrispratt\") == \"<empty>\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nSample Output 1:0\\n1\\n3\\n2\\n3\\n5\\n3\\n\\nSample Input 2:3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\nSample Output 2:11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test case failed: input: {}, output: {}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nSample Output 1:0\\n1\\n3\\n2\\n3\\n5\\n3\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\nSample Output 2:11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"\n2\n4 6\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n2\n4 6\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2\\n4 6\\n\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n\") == \"0\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n4 6\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"2\n4 6\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n4 6\"\n\nfrom typing import List"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n5\\n6\\n1\\n2\\n3\\n'\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n5\\n6\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '4\\n5\\n6\\n1\\n2\\n3\\n'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str), \"Incorrect solution\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output 1', \"The solution is incorrect.\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution() == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution() == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution() == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution() == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected output {output_str}, but got {solution(input_str)}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input(1)) == expected_output(1)\nassert solution(sample_input(2)) == expected_output(2)"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('CPCC') == '1\\n', \"Test Case 1\"\nassert solution('PPPPCCCC') == '8\\n', \"Test Case 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == \"1 2 3\\n\", \"Your code is not correct.\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [1, 2, 3] # Expected output: [1, 2, 3]\nassert solution() == [3] # Expected output: [3]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Sample Output mismatch\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2') == ['1', '2', '3']\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == ['3']\nassert solution('3 2 1\\n1 2\\n2 3\\n4') == ['1', '2', '3']"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution =="
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 2 1\n    1 2\n    2 3\n    2\n    \"\"\"\n) == [1, 2, 3]\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 3\n    2 3\n    3\n    \"\"\"\n) == [3]\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 2\n    2 4\n    2\n    \"\"\"\n) == []\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 2\n    2 4\n    1\n    \"\"\"\n) == []"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sherlock_holmes.txt', 'r')) == '1 2 3\\n3'\nassert solution(open('sherlock_holmes_sample_input_1.txt', 'r')) == '1 2 3\\n3'\nassert solution(open('sherlock_holmes_sample_input_2.txt', 'r')) == '3'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [3], \"Expected: [3], got: {}\".format(solution(3))  # sample output 1\nassert solution(3, 2, 1) == [3], \"Expected: [3], got: {}\".format(solution(3, 2, 1))  # sample output 2\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5 3\\n2 4 2 3 4') == '39'\nassert solution(stdin='5 1\\n1 0 1 1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5 3\n2 4 2 3 4\n'''), 'Output should be 39'\n\nassert solution(\n'''\n5 1\n1 0 1 1 1\n'''), 'Output should be 4'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 3\n    2 4 2 3 4\n\"\"\") == \"39\"\n\nassert solution(\"\"\"\n    5 1\n    1 0 1 1 1\n\"\"\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"4\\n\"\nassert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 4 2 3 4') == '39\\n', \"Incorrect output\"\nassert solution('5 1\\n1 0 1 1 1') == '4\\n', \"Incorrect output\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"39\", \"Expected output: 39, but got: \" + solution(stdin)"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\", \"1\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\", \"2\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nxx.\\nx.x\") == \"1 1 2\"\nassert solution(\"4 6\\nxx....\\nx.xxx\\n.xxx.\") == \"1 1 2\"\nassert solution(\"3 4\\nxx....\\nx.xxx\\n.xxx.\") == \"1 1 2\"\nassert solution(\"5 5\\nxx....\\nx.xxx\\n.xxx.\") == \"1 1 2\"\nassert solution(\"5 6\\nxx....\\nx.xxx\\n.xxx.\") == \"1 1 2\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx.\\nxxx\\nxx.xx\\n.xx.xx\\n\") == \"1 1 2\\n2 3 1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr\"\"\"\n3 3\nxx.\nxxx\n...\n\"\"\"\n) == \"1 1 2\\n2 3 1\\n\"\n\nassert solution(\nr\"\"\"\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n\"\"\"\n) == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nx.\\nxxxx\\n...') == '1 1 2\\n2 3 1'\nassert solution('4 6\\nx....\\nx.xxx\\n...xxx') == '1 1 2\\n2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of rows and columns: \")) == \"1 1 2\\n2 3 1\"\nassert solution(input(\"Enter the number of rows and columns: \")) == \"1 1 2\\n2 4 3\"\nassert solution(input(\"Enter the number of rows and columns: \")) == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n1 1 2\n2 3 1\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, \"xx\", \"xxx\", \"...\"]) == [\"1 1 2\", \"2 3 1\"]\nassert solution([4, 6, \"xx....\", \"xx.xxx\", \"...xxx\"]) == [\"1 1 2\", \"2 4 3\"]"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\"\"\") == \"indistinguishable\"\nassert solution(\"\"\"2 0 1\n1 1 1\n0 0 0\"\"\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\n\nassert solution('''\n2 0 1\n1 1 1\n0 0 0\n''') == '0'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed. Expected: {output1}, Received: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test case 2 failed. Expected: {output2}, Received: {solution(input2)}\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"1111\n0111\n1110\n1111\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10000) == '+0000'\nassert solution(1111) == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: '{expected_output}', got: '{solution(input())}'\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'10000') == '+0000'\nassert solution(b'1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Incorrect output. Expected: {}, Received: {}\".format(output, solution(input()))"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\", \"Incorrect output\"\nassert solution(\"1111\") == \"+000-\", \"Incorrect output\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5') == '9'\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_str)}\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9, \"Output should be 9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\\n\"\n\nimport math"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\", \"Incorrect output\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\"\n) == \"9\"\n\nassert solution(\n    \"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\"\n) == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nprint(\"All tests passed!\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"\nfor line in stdin.strip().split('\\n'):\n    assert line == expected.strip()\n\nassert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\\n\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nassert solution(\"5 6 4\\n3 2\\n4 5 L\\n1321\\n1202\\n2214\\n4306\\n5418\") == -1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nassert solution(\"1 1 R\\n0\\n0\\n0\\n0\") == -1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n2 2 1 2 3') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Test failed\"\nassert solution() == 4, \"Test failed\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == 2\nassert solution(8) == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"NE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed for solution({stdin})\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NE\", \"Sample Output 1 incorrect\"\nassert solution(stdin) == \"NE\", \"Sample Output 2 incorrect\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Input 1:\\n6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\nSample Output 1:\\nNE\\nNE\\nNE\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Input 2:\\n6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\nSample Output 2:\\n3\\n1\\ndef solution(stdin: str) -> str: pass\\n\") == \"3\\n1\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE\\n'\nassert solution(stdin='6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}, Explanation: {explanation()}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test {index+1} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n\"\"\"\n) == \"NE\"\nassert solution(\n\"\"\"\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n\"\"\"\n) == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n) == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2\\n'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"Test failed\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2\\n') == '2\\n'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2 # Add your solution here"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\", \"Test failed: should return 2 for input 1.\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\"\nassert solution(\"100 100\\n1 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n1 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n1 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\\n1 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"Test failed for input:\\n{}\\nOutput:\\n{}\\nExpected output:\\n{}\".format(input_str, output_str, expected_output_str)"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\nassert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2.0000000000\", \"The correct output is not provided.\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2.0000000000, \"Test case 2 failed\"\nassert solution == 2.0000000000, \"Test case 3 failed\"\nassert solution == 2.0000000000, \"Test case 4 failed\"\nassert solution == 2.0000000000, \"Test case 5 failed\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\\n\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == 2.0\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0\nassert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == 2.0\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2.0000000000\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the values of A, B and S: \")) == output(\"Sample Output 1\")\nassert solution(input(\"Enter the values of A, B and S: \")) == output(\"Sample Output 2\")"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Incorrect output\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Incorrect output\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\n\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1\\n1\\n\\n4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '1\\n1\\n7\\n4 4 2 4 4 1 4'\nassert solution('10 5\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n') == '5\\n2\\n12\\n7 8 10'\nassert solution('1 1\\n1\\n1\\n\\n4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '1\\n1\\n7\\n4 4 2 4 4 1 4'\nassert solution('4 5\\n1 2 3 4 5\\n1 3 4 5 6\\n2 3 4 5 6 7\\n') == '4\\n1\\n3\\n3 5\\n3 7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == [\"1\", \"1\"]\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == [\"7\", \"4 4 2 4 4 1 4\"]"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"1\\n1\\n\"  # Example 1\nassert solution(sample_input_2) == \"7\\n4 4 2 4 4 1 4\\n\"  # Example 2"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n1'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Testcase {i+1} failed: {solution(stdin)!= expected}\"\nfor i, (d, g, n, k) in enumerate(test_cases):\n    expected = 10 if i == 0 else 4\n    assert solution(stdin) == expected, f\"Testcase {i+1} failed: {solution(stdin)!= expected}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 42, \"Your solution is not correct!\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\", \"Solution should return 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\"\nassert solution(\"2 10 3 2\\n\") == \"4\\n\"\nassert solution(\"10 10 5 0\\n\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\", \"Your solution should return 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\", \"Output is incorrect\"\nassert solution(\"10 10 5 0\") == \"10\\n\", \"Output is incorrect\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2') == '4\\n', \"Test 1 failed\"\nassert solution('10 10 5 0') == '10\\n', \"Test 2 failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nassert solution('2 10 3 2') == '4'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed: got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"10\", \"Your code is not correct. The output is not correct.\"\nassert solution(sample_input2) == \"111\", \"Your code is not correct. The output is not correct.\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 20\\n0123456789') == 10\nassert solution('6 100 9294\\n23689') == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\") == \"111\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '10\\n'\nassert solution(open('sample_input2.txt', 'r')) == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\", \"The solution for sample Input 1 should be 10.\"\nassert solution(\"6 100 9294\\n23689\") == \"111\", \"The solution for sample Input 2 should be 111.\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.5 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.5 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.0, \"No solution provided\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for solution({input()}) with output({output})\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 3\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n''') == '''\n    1.500000 2.666667\n'''\n\nassert solution('''\n    5 2\n    1 R 4\n    2 R 2\n    3 R 2\n    4 S 2\n    5 S 1\n''') == '''\n    1.500000 3.666667\n'''\n\nfrom typing import List"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1.500000 2.666667\"  # correct output"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Output mismatch: {solution(stdin)}!= {expected}\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1.500000 2.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.000000\\n0.000000\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 6\n101010\n111001\n101001\n''') == '3\\n'\n\nassert solution('''\n4 5\n10010\n01010\n10101\n01001\n''') == '3\\n'\n\nassert solution('''\n3 6\n01001\n10010\n01100\n10101\n''') == '-1\\n'\n\nassert solution('''\n4 5\n00110\n01010\n10101\n01001\n''') == '-1\\n'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', but got '{solution(input())}'\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\n\nsolution(\"3 6\\n101010\\n111001\\n101001\") # Note that the function definition is not correct."
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'3 6\\n101010\\n111001\\n101001') == 3\nassert solution(r'4 5\\n10010\\n01010\\n10101\\n01001') == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\\n\"\nassert solution(\"3 7\\n00010\\n10101\\n01010\\n11010\") == \"-1\\n\"\nassert solution(\"3 1\\n00000\\n00000\\n00000\") == \"0\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor i in range(3):\n    for j in range(3):\n        if grid[i][j] == '1':\n            count += 1\nprint(count)"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''-3 -1\n3 1'''"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"-3 -1\", \"3 1\"]"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"No solution exists.\"\nassert solution(\"\") == \"No solution exists.\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"-3 -1\n3 1\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == '-3 -1\\n3 1\\n'\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == expected, f\"Test case failed: {solution(open('input.txt', 'r'))}!= {expected}\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '''\n-3 -1\n3 1\n'''\n\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '''\n3 4\n3 -1\n'''"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 6 5 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"2 5.086781\"\n\nassert solution(\"\"\"3 0.25 2 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781\\n'\n\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"\n2 5.086781\n\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed\"\nprint(f\"Test case {i+1} passed\")"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 6 5 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"2 5.086781\"\n\nassert solution(\"\"\"3 0.25 2 45 20\n0 0\n2 0\n1 1.5\"\"\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, \"The solution is incorrect. Please check the sample input and output.\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"8\\n\", \"Incorrect output\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"example.in\", \"r\")) == \"8\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == '8'\nassert solution('0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n5 1 7 1') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"8\\n\", \"The number of ways to place the guards is not equal to 8.\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n').strip() == '8'\nassert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n').strip() == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == 8\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == 1\n\nSolution:\nTo solve this problem, we can use the Kruskal's algorithm. We will first create an edge-list representation of the trenches. Then, we will sort the edges using the Kruskal's algorithm and find the number of ways to place the guards on a single line.\n\nHere's the code:\n\n```python\nfrom collections import defaultdict"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8\\n'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\n\nassert solution('5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output the number of ways the guards can be placed on a single line.\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1') == 8\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4') == 1\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"impossible\"\nassert solution(10) == \"impossible\"\nassert solution(15) == \"4 3\"\nassert solution(5) == \"4 2\"\nassert solution(7) == \"4 2\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(5) == 4\nassert solution(6) == 4\nassert solution(10) == 4\nassert solution(11) == 4"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, stdout)"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == (4, 3)\nassert solution(10) == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\" # sample input 1\nassert solution() == \"impossible\" # sample input 2"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == '4 3'\nassert solution(10) == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(5) == 4\nassert solution(10) == 4\nassert solution(15) == 3\nassert solution(16) == 4"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n3\\n4\\n2\\n4\\n\") == \"16\\n\", \"Sample Output 1\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\\n\", \"Sample Output 2\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '16'\nassert solution(4) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2\\n4\\n1\\n4') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '16', \"The function is not correct.\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"16\"\nassert solution(\"2\\n4\\n1\\n4\\n\") == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(read_input()) == \"16\"\nassert solution(read_input()) == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 109\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1\n    3\n    4\n    2\n    4\n    1\n    4\n    4\n    4\n    2\n    2\n    2\n    4\n    2\n    4\n    2\n    4\n    2\n    2\n    4\n    2\n    2\n    4\n    2\n    2\n    2\n    4\n    2\n    4\n    2\n    2\n    2\n    2\n    4\n    2\n    2\n    2\n    4\n    2\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    4\n    "
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case_id} failed with output {output} expected {expected}\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0'\nassert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2'\nassert solution('4 3\\n5 1\\n1 2\\n2 3\\n4 1') == '5\\n1 2 1\\n2 3 2\\n4 1 0\\n2 3 0'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(input()) == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output mismatch: {output}!= {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2''') == '''3\n1 2 1\n1 2 2\n1 2 2'''"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2') == '3\\n1 2 1\\n1 2 2\\n1 2 2\\n'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n'\nassert solution('1 3\\n1 2\\n3 1\\n2 1\\n2 1') == '3\\n1 1 1\\n1 2 1\\n1 2 1\\n'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '1 2'\nassert solution(open('sample_input2.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '''1 2\n'''\n\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n''') == '''impossible\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The output '{solution(input())}' does not match the expected output '{output}'.\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == ['1 2']\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1''') == ['impossible']"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == \"impossible\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 5, \"Expected: 5, Actual: \" + solution(10)\nassert solution(2020) == 2020, \"Expected: 2020, Actual: \" + solution(2020)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"5 2\", \"Error: incorrect output\"\nassert solution(2020) == \"2020 1\", \"Error: incorrect output\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"2 1\"\nassert solution(5) == \"5 3\"\nassert solution(1000) == \"1000 10\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == (5, 2), \"Expected (5, 2), got: {}\".format(solution(10))\nassert solution(2020) == (2020, 1), \"Expected (2020, 1), got: {}\".format(solution(2020))"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\n\\n3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique\\ndef solution(stdin: str) -> str:\n    pass') == 'impossible\\n\\nunique\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\n\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\n\nfrom typing import List"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == 'impossible', \"Expected 'impossible', got {}\".format(solution(sample_input1))\nassert solution(sample_input2) == 'unique', \"Expected 'unique', got {}\".format(solution(sample_input2))\n\nfrom typing import List"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:\\n3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\\nSample Input 2:\\n3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:\\n3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:\\n3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Input 1:\\n3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\") == \"unique\")"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, \"Test Failed\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Solution is incorrect\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect output for sample input {input()}\"\nfor _ in range(test_cases):\n    n, k, m = map(int, input().split())\n    M = 10**m\n    print(solution(f\"{n} {k} {M}\"))"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()} with expected output {expected}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 10\") == 0, \"Output must be 0\"\nassert solution(\"1 2 10\") == 1, \"Output must be 1\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 pan\", \"Solution failed\"\n\nfrom typing import List, Tuple"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"...............XX.............\\n...............XX.............\") == \"1 pan\"\nassert solution(\"..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n..............XX...............\\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin1) == '1 pan\\n'\nassert solution(stdin2) == '3 zoom out\\n'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 pan\\n3 zoom out\"\n\nSolution:\n\nTo solve this problem, we can follow the steps below:\n\n1. Read the input image and generate a list of touch points for each image.\n2. Sort the touch points based on their corresponding distance from the grip point.\n3. Find the grip point and the initial and final grip points.\n4. Calculate the touch vectors for each touch point.\n5. Calculate the rotation distance and the grip rotation for each touch point.\n6. Compare the touch points and calculate the corresponding distance, which will determine the type of gesture.\n7. Print the number of touches and the type of gesture.\n\nLet's implement the above algorithm in Python:\n\n```python\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"..XX.X..............XX................XX..\") == \"1 pan\"\nassert solution(\"..............................XX................XX..\") == \"1 pan\"\nassert solution(\"........XX........................XX..............\") == \"1 pan\"\nassert solution(\"..............................XX................XX..\") == \"1 pan\"\nassert solution(\"..............................XX................XX..\") == \"1 pan\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input 1\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '....XXXX....................................................\\n'\n                   '....XXXX..................................XXXX..............\\n'\n                   '....XXXX...................................XXX..............\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   'Sample Input 1\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   'Sample Input 1\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   'Sample Output 1\\n'\n                   '1 pan\\n') == '1 pan\\n', 'The solution is incorrect.'\n\nassert solution('Input 2\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '...............................................XX...........\\n'\n                   '.....................................XXX......XXXX..........\\n'\n                   '....................................XXXX........X...........\\n'\n                   '........XXX....XXX....................X.....................\\n'\n                   '.........XXX...XX...........................................\\n'\n                   '............................................................\\n'\n                   '............XX..............................................\\n'\n                   '...........XXX..............................................\\n'\n                   '............................................................\\n'\n                   '............................................XX..............\\n'\n                   '...........................................XXXX.............\\n'\n                   '.............................................XX.............\\n'\n                   '................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" + = +\\n+ = +\\n+ = +\\n+ = +\\n+ = +\\n+ = +\\n\"\nassert solution(\"10 20\\n&**$%$#@#$@#$@#$#&**\\n++++++++++\\n
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n fresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') ==' \\n'\nassert solution('8 3\\naaaaa\\n+aaaa\\n+aaa\\n+aaaa\\n') == ''\nassert solution('4 3\\naaaa\\n+aaaa\\n+aaa\\n+aaaa\\n') == 'aaa\\naaa\\naaa\\n'\nassert solution('1 1\\n') == ''\nassert solution('1 1\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n1\\n1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\\nSample Input 1:\\n8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\\nSample Output 1:\\n apples are great!\\n    \\nfresh apples!\\n\\nSample Input 2:\\n7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\nSample Output 2:\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \" apples are great!\\n    fresh apples!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 20\\n+oranges are\\n+way better!\\n+#oranges>apples\\n+apples are great!\\n++++++++++++++++++++\\n+oranges are +\\n+way better!\\n+#oranges>apples\\n+apples are great!\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 20\\n+oranges are\\n+way better!\\n+#oranges>apples\\n+apples are great!\\n++++++++++++++++++++\\n+oranges are +\\n+way better!\\n+#oranges>apples\\n+apples are great!\\n++++++++++++++++++++\\n check out our fresh apples!\\n\") == \" apples are great!\\n check out our fresh apples!\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\nSample Output 1:\\n apples are great!\\n\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\+++++++\\nSample Output 2:\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\nassert solution(\"5 10\\n1234567890!@#$%^&*()_+-=[]{}|;':\\\",./<>?`-~`ABCDEFGHIJKLMNOPQRSTUVWXYZ\\n1234567890!@#$%^&*()_+-=[]{}|;':\\\",./<>?`-~`ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"1234567890!@#$%^&*()_+-=[]{}|;':\\\",./<>?`-~`ABCDEFGHIJKLMNOPQRSTUVWXYZ\\n\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HH\") == 2.0, \"Incorrect solution\"\nassert solution(\"H?\") == 1.5, \"Incorrect solution\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Incorrect answer\"\nassert solution(\"H?\") == \"1.5\", \"Incorrect answer\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HH\\n\") == 2.0, \"Your solution is incorrect.\"\nassert solution(\"H?\\n\") == 1.5, \"Your solution is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The solution should be 2.0\"\nassert solution(\"H?\") == \"1.5\", \"The solution should be 1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HH') == 2.0, \"Expected 2.0, got: \" + solution('HH')\nassert solution('H?') == 1.5, \"Expected 1.5, got: \" + solution('H?')"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0', 'Testcase 1 failed'\nassert solution('H?') == '1.5', 'Testcase 2 failed'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.0\"\nprint(\"Test Passed!\")"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Solution failed for input {input_data}, expected output {output_data}\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the size of the picture: \")) == \"Output 2\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n4\n0001\n0001\n0011\n1110\n\"\"\"\n) == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\n\nassert solution(\n    \"\"\"\n4\n1111\n1111\n1111\n1111\n\"\"\"\n) == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n', \"Josip painting process is incorrect.\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(input())) == '3'\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_sample1) == output_sample1, f\"Test 1 failed: {solution(input_sample1)}!= {output_sample1}\"\nassert solution(input_sample2) == output_sample2, f\"Test 2 failed: {solution(input_sample2)}!= {output_sample2}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"The solution for the first input is incorrect.\"\nassert solution(input2) == output2, \"The solution for the second input is incorrect.\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"Expected Output: 2, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"For input {stdin}, expected output {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == 2\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == 4"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\", \"Expected output 2, but got: \" + solution(sample_input_1)\n\nassert solution(sample_input_2) == \"4\", \"Expected output 4, but got: \" + solution(sample_input_2)"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = '''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n'''\n\nsample_input2 = '''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n'''\n\nexpected_output1 = '''\n2\n'''\n\nexpected_output2 = '''\n4\n'''"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\nassert solution(\"3 2\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"-1\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution( \"\"\"\n    2 4\n    1 0 2 0\n    3 5 4 0\n    2 1 0 0\n    3 0 4 5\n    \"\"\") == \"2\"\n\nassert solution( \"\"\"\n    3 3\n    1 2 3\n    4 5 6\n    7 8 0\n    4 2 3\n    6 5 1\n    0 7 8\n    \"\"\") == \"4\"\n\nassert solution( \"\"\"\n    4 3\n    1 2 3\n    4 5 6\n    7 8 0\n    4 2 3\n    6 5 1\n    0 7 8\n    \"\"\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    2 4\n    1 0 2 0\n    3 5 4 0\n    2 1 0 0\n    3 0 4 5\n    \"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n    3 3\n    1 2 3\n    4 5 6\n    7 8 0\n    4 2 3\n    6 5 1\n    0 7 8\n    \"\"\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n'\nprint('Success!')"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\", \"Zapray's code is not correct\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\", \"Zapray's code is not correct\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\", \"Your code is not correct. The output is incorrect.\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\", \"Your code is not correct. The output is incorrect.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\\n\", \"Zapray should find the longest sub-array that appears exactly twice.\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\\n\", \"Zapray should find the longest sub-array that appears exactly twice.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_1) == 2\nassert solution(solution_2) == 4"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output\\n4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0\\n'\nassert solution('1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == '4\\n2\\n'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Your code is incorrect. Please check the example inputs and the provided output.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output here' # Replace 'Output here' with the correct output for the given example"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\nimpossible\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Expected Output: 1\\n, Actual Output: \" + str(solution()) + \"\\n\"\nassert solution() == \"impossible\\n\", \"Expected Output: impossible\\n, Actual Output: \" + str(solution()) + \"\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Input 1:\\n4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Output 1:\\n1\\n\\nSample Input 2:\\n4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Output 2:\\nimpossible\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Input 1:\\n4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\nSample Output 1:\\n1\\n\\nSample Input 2:\\n4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\nSample Output 2:\\nimpossible\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: {}\\nExpected: {}\".format(solution(stdin), \"1\\n\")"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '35', \"Your code is not correct.\"\nassert solution() == '18', \"Your code is not correct.\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '35', \"Test 1\"\nassert solution() == '18', \"Test 2\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"35\\n18\\n3\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\"\nassert solution(input()) == output, \"Incorrect Solution\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"35\\n18\\n3\\n8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"35\\n18\\n3\\n8\\n2\\n1\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '''\n0\n1\n3\n6\n'''"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0\\n1\\n3\\n6\"\nassert solution(5) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(10) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(15) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(20) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(25) == \"0\\n1\\n2\\n4\\n6\"\nassert solution(30) == \"0\\n1\\n2\\n4\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed.\\nInput: {input()}\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0\\n1\\n3\\n6\\n', \"The function should return the expected output.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''0\n1\n3\n6\n'''"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"1\"\nassert solution(3) == \"3\"\nassert solution(4) == \"6\"\nassert solution(5) == \"0\"\nassert solution(6) == \"1\"\nassert solution(7) == \"2\"\nassert solution(8) == \"4\"\nassert solution(9) == \"6\"\nassert solution(10) == \"0\"\nassert solution(11) == \"1\"\nassert solution(12) == \"3\"\nassert solution(13) == \"6\"\nassert solution(14) == \"0\"\nassert solution(15) == \"1\"\nassert solution(16) == \"2\"\nassert solution(17) == \"4\"\nassert solution(18) == \"6\"\nassert solution(19) == \"0\"\nassert solution(20) == \"1\"\nassert solution(21) == \"2\"\nassert solution(22) == \"4\"\nassert solution(23) == \"6\"\nassert solution(24) == \"0\"\nassert solution(25) == \"1\"\nassert solution(26) == \"2\"\nassert solution(27) == \"4\"\nassert solution(28) == \"6\"\nassert solution(29) == \"0\"\nassert solution(30) == \"1\"\nassert solution(31) == \"2\"\nassert solution(32) == \"4\"\nassert solution(33) == \"6\"\nassert solution(34) == \"0\"\nassert solution(35) == \"1\"\nassert solution(36) == \"2\"\nassert solution(37) == \"4\"\nassert solution(38) == \"6\"\nassert solution(39) == \"0\"\nassert solution(40) == \"1\"\nassert solution(41) == \"2\"\nassert solution(42) == \"4\"\nassert solution(43) == \"6\"\nassert solution(44) == \"0\"\nassert solution(45) == \"1\"\nassert solution(46) == \"2\"\nassert solution(47) == \"4\"\nassert solution(48) == \"6\"\nassert solution(49) == \"0\"\nassert solution(50) == \"1\"\nassert solution(51) == \"2\"\nassert solution(52) == \"4\"\nassert solution(53) == \"6\"\nassert solution(54) == \"0\"\nassert solution(55) == \"1\"\nassert solution(56) == \"2\"\nassert solution(57) == \"4\"\nassert solution(58) == \"6\"\nassert solution(59) == \"0\"\nassert solution(60) == \"1\"\nassert solution(61) == \"2\"\nassert solution(62) == \"4\"\nassert solution(63) == \"6\"\nassert solution(64) == \"0\"\nassert solution(65) == \"1\"\nassert solution(66) == \"2\"\nassert solution(67) == \"4\"\nassert solution(68) == \"6\"\nassert solution(69) == \"0\"\nassert solution(70) == \"1\"\nassert solution(71) == \"2\"\nassert solution(72) == \"4\"\nassert solution(73) == \"6\"\nassert solution(74) == \"0\"\nassert solution(75) == \"1\"\nassert solution(76) == \"2\"\nassert solution(77) == \"4\"\nassert solution(78) == \"6\"\nassert solution(79) == \"0\"\nassert solution(80) == \"1\"\nassert solution(81) == \"2\"\nassert solution(82) == \"4\"\nassert solution(83) == \"6\"\nassert solution(84) == \"0\"\nassert solution(85) == \"1\"\nassert solution(86) == \"2\"\nassert solution(87) == \"4\"\nassert solution(88) == \"6\"\nassert solution(89) == \"0\"\nassert solution(90) == \"1\"\nassert solution(91) == \"2\"\nassert solution(92) == \"4\"\nassert solution(93) == \"6\"\nassert solution(94) == \"0\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 2 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"2 4 1 3\n4 3 1 2\"\"\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3\\n'\nassert solution('0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2\\n'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 4 1 3'\nassert solution() == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3\\n4 3 1 2'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n\nimport random"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\n\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\n\nassert solution('''\n3 4\n1 truther 1 truther 2 truther 3\n1 not truther 1 not truther 2 not truther 3\n1 and truther 1 truther 2 and truther 3\n1 xor truther 1 truther 2 xor truther 3\n1 charlatan 1 truther 2 charlatan 3 truther 4\n1 and not charlatan 1 not charlatan 2 not charlatan 3\n1 xor charlatan 1 truther 2 charlatan 3 not truther 4\n1 and not charlatan 1 not charlatan 2 not charlatan 3\n1 xor not charlatan 1 truther 2 charlatan 3 not truther 4\n''') == 'charlatan'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'charlatan\\n'\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\", \"truther\"]"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Solution and expected output do not match.\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n1 2\\n1 charlatan 1\\n1 not charlatan 1\\nSample Output 1: charlatan\\n\\nSample Input 2\\n2 1\\n1 and fabulist 1 fabulist 2\\nSample Output 2: fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass') == 'Output\\ncharlatan\\n\\nOutput\\nfabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"charlatan\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == expected1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == expected2, f\"Test 2 failed: {solution(input2)}\"\n\ninput1 = \"\"\"1 2\n1 charlatan 1\n1 not charlatan 1\"\"\"\ninput2 = \"\"\"2 1\n1 and fabulist 1 fabulist 2\"\"\"\n\nexpected1 = \"charlatan\"\nexpected2 = \"fabulist truther\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3\\n'\nassert solution('2\\n0.50 0.50\\n1.50 1.50\\n2.50 2.50\\n3.00 3.00\\n') == '3\\n'\n\nassert solution('1\\n1.00 1.00\\n2.00 2.00\\n3.00 3.00\\n4.00 4.00\\n') == '1\\n'\nassert solution('0\\n
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Your solution is incorrect\"\nassert solution(input2) == output2, \"Your solution is incorrect\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output the maximum number of fruits that can be sliced with one straight-line swipe.\\n4\\n', 'The solution is not correct'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {stdin}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected {output}, but got {solution(input)}\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\\n\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1''') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(stdin)}'\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\n\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1') == '16'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.414\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\", \"Sample Input 1\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\", \"Sample Input 2\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414', 'Test Case 1'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657', 'Test Case 2'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.414\", \"Please fix the code and re-run the tests.\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nassert solution('''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\"\n\nn = int(stdin.readline().strip())\nsegments = list(map(int, stdin.readline().strip().split()))\nmax_area = 0\nmax_side = 0\n\nfor length in segments:\n    if length < 1 or length > 100:\n        print(\"0\")\n        continue\n    for _ in range(length):\n        max_side += 1\n    max_area += length * max_side\n\nprint(max_area)"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.0\\n'\n\nassert solution(stdin) == '0.433\\n'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1.0\\n\", \"Test 1 failed\"\nassert solution() == \"0.433\\n\", \"Test 2 failed\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 1 1 1\n''') == '1.0'\nassert solution('''\n3 1 1 1\n''') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 1 1 1\\n\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\\n\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"4 1 1 1 1\\n\") == \"1.0\"\n\nassert solution(\n\"3 1 1 1\\n\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '0', \"Your implementation is incorrect. Please provide the correct implementation\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output the final energy level on the first line.\\nOutput an integer L, the number of plants Barica should travel, including plants 1 and N.\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"\"\"\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n\"\"\"\n\ninput2 = \"\"\"\n8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n\"\"\"\n\noutput1 = \"\"\"\n5\n4\n1 1\n2 1\n2 3\n3 3\n\"\"\"\n\noutput2 = \"\"\"\n36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output the final energy level on the first line. Output an integer L, the number of plants Barica should travel, including plants 1 and N. On the following L lines, output the sequence of plants Barica should travel.'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected_output, \"The provided code is incorrect. Please check the given examples and provide the correct solution.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Test failed\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The code you provided is incorrect. Please submit the correct code and test cases.\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed. Input: {input1}, Output: {output1}\"\nassert solution(input2) == output2, f\"Test case 2 failed. Input: {input2}, Output: {output2}\"\n\ninput1 = \"\"\"\n2 1\n2 1\n1 2\n\"\"\"\n\ninput2 = \"\"\"\n3 2\n2 1 3\n1 3\n2 3\n\"\"\"\n\noutput1 = \"1\"\noutput2 = \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Sample Input 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Sample Input 2 failed\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {stdin}, Output: {output}, Diff: {output - expected}\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"Output 1:\", solution(sample_input_1)\nassert solution(sample_input_2) == \"Output 2:\", solution(sample_input_2)\n\nsample_input_1 = \"\"\"\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n\"\"\"\n\nsample_input_2 = \"\"\"\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n\"\"\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"Solution 1 failed for input {input1}\"\nassert solution(input2) == output2, f\"Solution 2 failed for input {input2}\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 8\n    1 4\n    4 5\n    1 5\n    1 2\n    1 3\n    2 3\n    3 5\n    2 5\n    \"\"\"\n) == -1, \"Invalid input 1\"\n\nassert solution(\n    \"\"\"\n    6 5\n    2 4\n    3 5\n    1 5\n    3 6\n    1 6\n    \"\"\"\n) == 5, \"Invalid input 2\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 5\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\", \"Test 1 Failed\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\", \"Test 2 Failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\")) == \"4.00\\n\", \"Sample Output 1\"\nassert solution(open(\"test_input.txt\")) == \"9.00\\n\", \"Sample Output 2\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\"\n) == \"4.00\"\n\nassert solution(\n    \"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\"\n) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == expected1, f\"Test case 1 failed: expected {expected1}, got {solution(input1)}\"\nassert solution(input2) == expected2, f\"Test case 2 failed: expected {expected2}, got {solution(input2)}\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    1 1\n    5 1\n    5 5\n    4 2\n    \"\"\"\n) == \"4.00\"\n\nassert solution(\n    \"\"\"\n    6 3\n    -8 -8\n    0 -1\n    8 -8\n    1 0\n    0 10\n    -1 0\n    \"\"\"\n) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00, \"Error 1\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00, \"Error 2\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == round(4.00, 2), \"Test 1 failed\"\nassert solution(sample_input2) == round(9.00, 2), \"Test 2 failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4.00\", \"Test case 1 failed.\"\nassert solution(input()) == \"9.00\", \"Test case 2 failed.\"\nassert solution(input()) == \"4.00\", \"Test case 3 failed.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"Canyons_mapping.in\", \"r\")) == \"9.00\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output:\\n{expected_output}\\nActual output:\\n{solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == ['2 1 2 3', '1 2 1 2', '2 1 2 3', '1 2 1 2']\nassert solution(input2) == ['3 1 1', '1 3 1', '1 1 1']\n"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\n\nSolution:\n\n```python\nfrom typing import List"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 4 2 3 -1', \"Expected output: 1 4 2 3 -1, but got: {}\".format(solution())"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input_, output in zip(stdin.readlines(), stdout.readlines())"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4 3\n\"\"\"\n) == \"1 4 2 3\"\n\nassert solution(\n    \"\"\"\n5 1\n\"\"\"\n) == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output1, f\"Expected output1, got {solution(input())}.\"\nassert solution(input()) == output2, f\"Expected output2, got {solution(input())}.\"\nassert solution(input()) == output3, f\"Expected output3, got {solution(input())}.\"\nassert solution(input()) == output4, f\"Expected output4, got {solution(input())}.\"\nassert solution(input()) == output5, f\"Expected output5, got {solution(input())}.\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Test failed: solution {solution} is incorrect. Expected {expected}\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 4 2 3 -1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\")) == \"1 4 2 3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1 4 2 3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1 4 2 3\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n5 1\") == \"1 4 2 3\\n\"\nassert solution(\"5 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"The number of ways of constructing a right triangle by three points is not 1.\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output', 'Your code is incorrect.'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output.\" for input, output in zip(input(), expected_output)"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\\n\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"No solution has been defined\"\nfrom typing import List"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4 140\\n'\nassert solution() == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed: {input}!= {output}\"\nfor i, line in enumerate(stdin.split('\\n')):\n    stdin = line.strip()\n    assert len(stdin.split()) == 5, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 4, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 5, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 2, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 3, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 2, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 3, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 1, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 3, f\"Test failed: {i + 1}th line has invalid format: {line}\"\n    assert len(stdin.split()) == 1, f\"Test failed: {i + 1}th line has invalid format: {line}\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n', \"The solution for the given sample input 1 is incorrect.\"\n\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n', \"The solution for the given sample input 2 is incorrect.\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3'\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\n\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(test_input1) == expected_output1\nassert solution(test_input2) == expected_output2"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\nimpossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"3\\n\"\nassert solution(stdin=\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\") == \"3\\n\"\nassert solution(stdin=\"8 2\\n8 3\\n5 7\\n\") == \"impossible\\n\"\nassert solution(stdin=\"8 1\\n9 1\\n8 2\\n\") == \"impossible\\n\"\nassert solution(stdin=\"8 3\\n10 3\\n8 4\\n\") == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(120) == 5, \"Output should be 5, but got {}\".format(solution(120))\nassert solution(51090942171709440000) == 21, \"Output should be 21, but got {}\".format(solution(51090942171709440000))"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(51090942171709440000) == 21, \"Factorial is not correct for 51090942171709440000\"\nprint(\"Correct\")"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120\") == 5\nassert solution(\"51090942171709440000\") == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5, \"Sample Input 1 is incorrect\"\nassert solution(51090942171709440000) == 21, \"Sample Input 2 is incorrect\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == 5\nassert solution(\"51090942171709440000\") == 21\n\nfrom typing import List"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45', \"Expected: 45, Actual: {}\".format(solution('10 1 2'))\nassert solution('3 3 3') == '10', \"Expected: 10, Actual: {}\".format(solution('3 3 3'))\n\nfrom typing import List"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"45\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"45\"  # Example 1\nassert solution() == \"10\"  # Example 2\n\nfrom typing import List"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"45\"\nassert solution() == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\\n\", \"Test Failed\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20'\nassert solution('10\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18\\n'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '18'\nassert solution(open('input2.txt', 'r')) == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == 'impossible'\nprint('All test cases passed!')"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == '''20'''"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\", \"The output is incorrect.\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\", \"The output is incorrect.\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Test case 1 failed: {solution(sample_input1)}!= {sample_output1}\"\nassert solution(sample_input2) == sample_output2, f\"Test case 2 failed: {solution(sample_input2)}!= {sample_output2}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"example1.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"example2.txt\", \"r\").read()) == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=r'3\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"3\\n\", \"Test Case 1 failed\"\nassert solution(sample_input_2) == \"11\\n\", \"Test Case 2 failed\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == 2\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '0\\n'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n110\\n011') == '2\\n'\nassert solution('4 2\\n1000\\n1000\\n0000\\n0010') == '0\\n'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n\nfrom collections import Counter"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2' # Your code"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'def solution(stdin: str) -> str: pass') == 2 # Test 1"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\n3\\n2\\n3\\n10\\n4 10 5\\n6 20 7\\n8 30 9\\n') == '1\\n'\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"Test Failed\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello\") == \"hello\"\nassert solution(\"world\") == \"world\"\nassert solution(\"abc\") == \"abc\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"def\") == \"def\"\nassert solution(\"hello\") == \"hll\"\nassert solution(\"world\") == \"worl\"\nassert solution(\"world\\nhello\") == \"worl\"\nassert solution(\"world\\nhello\\nworld\") == \"worl\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\n\nimport time\nimport sys"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\", \"Your fancy debugger will not help you in this matter.\"\n\nHere's a solution that computes the worst-case time to find the crashing line using an optimal strategy for placing the printf statements:\n\n```python\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"output\", \"The solution should print 'output' after running the program.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"0\"\nassert solution(stdin: str) == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n\nfor i in range(1, n+1):\n    if i == r:\n        continue\n    if i == p:\n        print(\"Crashing at the added printf statement\")\n        continue\n    print(\"Compiled and run for\", i, \"seconds\")\n\nprint(\"The worst-case time to find the crashing line is\", (i-1)*i*p)"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"sample input 1\") == \"0\\n\", \"The program should crash at the line marked as the critical point.\"\nassert solution(\"sample input 2\") == \"19\\ndef solution(stdin: str) -> str:\\npass\\n\", \"The program should crash at the line marked as the critical point.\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_sample1) == \"SHIP IT\", \"Sample Input 1 failed\"\nassert solution(input_sample2) == \"c\", \"Sample Input 2 failed\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'c'\nassert solution(open('sample_input2.txt', 'r')) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a b c d\") == \"c\"\nassert solution(\"a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"abc\") == \"SHIP IT\"\nassert solution(\"classa\\nimport classb\\nimport execd\\nmyfilec\\nimport libe\") == \"SHIP IT\"\nassert solution(\"abc\\ndef\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a b c d') == 'c'\nassert solution('a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'c'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"SHIP IT\"\nassert solution(input()) == \"c\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'c'\nassert solution(open('sample_input2.txt', 'r')) == 'SHIP IT'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5+3+x\") == \"1\\n\"\nassert solution(\"20+3+x\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5+3+x') == '1\\n', 'Test 1'\nassert solution('9 10') == '1\\n', 'Test 2'\nassert solution('20+3+x') == '2\\n', 'Test 3'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5+3+x\\n9 10') == '1\\n'\nassert solution('20+3+x\\n0 5') == '2\\n'\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\nassert solution(\"5+3+(3+x+x)\\n5\") == \"2\\n\"\nassert solution(\"4+3+x\\n-5\") == \"2\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20') == 'no\\n'\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'no'\n\nsample_input1 = \"\"\"\n2 10\n0 15\n5 20\n\"\"\"\n\nsample_input2 = \"\"\"\n2 10\n1 15\n0 20\n\"\"\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your code is not correct.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.25\", \"The answer is incorrect.\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0.25\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    6 7\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    6 8\n    1 3\n    1 4\n    3 2\n    4 2\n    5 6\n    6 5\n    3 4\n    4 3\n    \"\"\"\n) == \"inf\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\", \"Your code is incorrect.\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\\n\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == '3\\n'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'output', \"Your solution is incorrect.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(data_1) == output_1, f\"Test 1 failed: {solution(data_1)}!= {output_1}\"\nassert solution(data_2) == output_2, f\"Test 2 failed: {solution(data_2)}!= {output_2}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"hoose\\nnoises\\nnoise\\n\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\nhoose\\oose\\n\") == [\"hoose\", \"moose\"]\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"example1.txt\", \"r\")) == \"hoose\\noises\\noise\"\nassert solution(open(\"example2.txt\", \"r\")) == \"hoose\\moose\\def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == '''hoose\nnoises\nnoise'''\n\nassert solution('''4\nhose\nhoose\noose\nmoose''') == '''hoose\nmoose'''\n\nassert solution('''1\ncat\ndog''') == '''cat'''\n\nassert solution('''2\napple\nbanana\norange''') == '''apple\norange'''\n\nassert solution('''3\napple\nbanana\norange\ngrape''') == '''apple\nbanana\norange'''\n\nassert solution('''4\napple\nbanana\norange\ngrape\nlemon''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''5\napple\nbanana\norange\ngrape\nlemon\ncherry''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''6\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''7\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''8\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''9\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''10\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''11\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''12\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''13\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''14\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''15\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot\nnectarine''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''16\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot\nnectarine\nfig''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''17\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot\nnectarine\nfig\nstrawberry''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''18\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot\nnectarine\nfig\nstrawberry\nraspberry''') == '''apple\nbanana\norange\nlemon'''\n\nassert solution('''19\napple\nbanana\norange\ngrape\nlemon\ncherry\ndurian\nseal\ntulips\nwatermelon\nfig\nkiwi\nmango\npineapple\napricot\nnectarine\nfig\nstrawberry\nraspberry\nkiwi''"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nose\\noises\\noise\\n\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hose\\moose\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == ['hoose', 'noises', 'noise']\nassert solution('4\\nhose\\nhoose\\oose\\nmoose\\n') == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'hoose\\nnoises\\nnoise'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"hoose\\nnoises\\nnoise\"\nassert solution(input()) == \"hoose\\nmoose\"\nassert solution(input()) == \"NO TYPOS\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"hoose\\nnoises\\nnoise\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Solution returned '{solution(input_string)}', but expected '{output_string}'\" for input_string, output_string in [\n    (\"1 1\", \"2\"),\n    (\"2 3\", \"0\"),\n    (\"1 1\", \"16\"),\n    (\"1 1\", \"8\")\n]"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n3\\n2 3\\n4\\n') == '2\\n2\\n0\\n16\\n8\\n'\nassert solution('2 3\\n4\\n1\\n1\\n') == '0\\n16\\n8\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"2\\n2\\n5\\n\", \"Sample Input 1\"\nassert solution(2) == \"0\\n16\\n8\\n\", \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0\nassert solution == 0"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n2\\n5\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 44.72135955, \"Expected 44.72135955, but got {}\"\nassert solution() == 68.52419365, \"Expected 68.52419365, but got {}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"44.72135955\"\nassert solution(2) == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Invalid input\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\nSample Input 1\\nSample Output 1\\n\\n2\\n50 45 45\\nSample Output 2\\n') == '44.72135955'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin), \"The solution is not correct.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSample Output 1:\\n44.72135955\\n\\n2\\n50 45 45\\nSample Output 2:\\n68.52419365\\n\") == \"44.72135955\\n68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(Sample Input 1) == Sample Output 1\nassert solution(Sample Input 2) == Sample Output 2"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1 45 50\\n2 35 20\\n1 30 50\\n2 40 30\\n1 45 30') == '68.52419365'\nprint('All test cases passed!')"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 44.72135955, \"Your code is correct.\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 1 5\\n1 2\\n3 2 1\\n3 4 2 3\\n1 3 1') == '1\\n1\\n0\\n2'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 1 5\n1 2\n''') == '''\n1\n3\n2\n'''\n\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '''\n1\n1\n0\n2\n'''"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\"\n\nSolution:\n\nWe can solve this problem by performing a hash function on each subsequence of the input array. We will first calculate the hash value of the subsequence of length $p$ by concatenating the first $p-1$ elements of the subsequence with the last element of the subsequence and applying the hash function. Then we will calculate the hash value of the subsequence of length $p-1$ by concatenating the first $p-2$ elements of the subsequence with the second last element of the subsequence and applying the hash function. We will continue this process for $p$ from 1 to $K$, and finally we will return the hash value of the subsequence with length $K$.\n\nThe time complexity of this approach is $O(K)$, where $K$ is the length of the input array.\n\nLet's write the code to solve the problem:"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 4 2 3\\n1 3 1\\n\") == \"1\\n3\\n2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\", \"Expected output is not correct\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, but got: {solution}\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"3\", \"Expected output: '3', but got '{}'\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"2\", \"Expected output: '2', but got '{}'\".format(solution(sample_input_2))"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    100 100\n    50 50\n    \"\"\"\n) == 50\n\nassert solution(\n    \"\"\"\n    2\n    0 50\n    50 0\n    \"\"\"\n) == 25"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"50\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n    2\n    100 100\n    50 50\n    ''') == '50\\n'\n\nassert solution(r'''\n    2\n    0 50\n    50 0\n    ''') == '25\\n'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50'\nassert solution('2\\n0 50\\n50 0\\n') == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n100 100\\n50 50\\n\\n2\\n0 50\\n50 0') == '50\\n'\nassert solution('2\\n0 50\\n50 0') == '25\\n'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(), \"Test failed\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"50\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"25\", \"Test case 2 failed\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2\n100 100\n50 50\n\"\"\"\n) == \"50\"\n\nassert solution(\n    \"\"\"\n2\n0 50\n50 0\n\"\"\"\n) == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100\\n100\\n50\\n50') == '50\\n', \"Sample Output 1: Incorrect output\\n\"\nassert solution('100\\n0\\n50\\n0') == '25\\n', \"Sample Output 2: Incorrect output\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 250, \"Please implement the solution\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '160', \"Test 1 failed\"\nassert solution() == '250', \"Test 2 failed\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"250\", \"Incorrect output\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"160\"\nassert solution(stdin) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100\\n200\\n3\\n100\\n200\\n2010\\n\") == \"160\\n\", \"Test case 1 failed\"\nassert solution(\"1\\n100\\n100\\n100\\n2\\n200\\n200\\n200\\n\") == \"100\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n100\\n200\\n') == '160\\n'\nassert solution('3\\n100\\n200\\n2010\\n') == '250\\n'\nassert solution('2\\n100\\n200\\n2011\\n') == '161\\n'\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected_output, f\"For input {stdin}, expected output {expected_output}, but got {solution()}\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('sample input 1') == '160'\nassert solution('sample input 2') == '250'\n\nfrom typing import List"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"160\\n\", \"Test 1 failed\"\nassert solution() == \"250\\n\", \"Test 2 failed\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\", \"Expected: 160\\nActual: \" + solution(\"2\\n100\\n200\\n\")\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\", \"Expected: 250\\nActual: \" + solution(\"3\\n100\\n200\\n2010\\n\")"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == 0, \"Test 1 failed\"\nassert solution('2') == 0, \"Test 2 failed\"\nassert solution('3') == 0, \"Test 3 failed\"\nassert solution('4') == 2, \"Test 4 failed\"\nassert solution('5') == 0, \"Test 5 failed\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input 1\\n4 2\\n0 1 1\\n2 3 1\\nInput 2\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"Output 1: 2\\n\"\nassert solution(\"Input 2\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"Output 2: 0\\n\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 2\n    0 1 1\n    2 3 1\n    ''') == '2'\n\nassert solution('''\n    5 5\n    0 1 3\n    1 2 3\n    2 3 3\n    3 4 3\n    4 0 3\n    ''') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == 2\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == 0\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Test 1 failed.\"\nassert solution() == 0, \"Test 2 failed.\"\nassert solution() == 0, \"Test 3 failed.\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    4 3\n    3 3 2 1\n    3 3 3\n    '''\n) == '1 1\\n1 2\\n2 3 4\\n'\n\nassert solution(\n    '''\n    4 2\n    3 3 2 2\n    6 3\n    '''\n) == '-1'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == ['1 1', '1 2', '2 3 4']\nassert solution(sample_input_2) == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\nassert solution(\"abc\") == -1\nassert solution(\"123\") == -1\nassert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == 1\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == 2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, f\"The given solution is {solution} but the expected output is {expected_output}.\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\"\nassert solution(\"1 0 L\\n2 0 L\\n3 0 L\\n4 0 L\\n5 0 L\\n6 0 L\\n7 0 L\\n8 0 L\\n9 0 L\\n10 0 L\") == \"1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\"\nassert solution() == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10.0\\n10.0\\n0.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '10.0\\n10.0\\n0.0\\n'\nassert solution(sample_input_2) == '10.0\\n4.0\\n1.0\\n'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"10.0\n10.0\n0.0\"\"\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '10.0\\n10.0\\n0.0\\n'\n\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'Hamburg Bremen') == 68.3\nassert solution(r'Amsterdam Rotterdam') == 'IMPOSSIBLE'\n\nimport random\nimport math"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == 1.0\nassert solution(\"2\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\") == 123.0\nassert solution(\"1\\nTokyo Jakarta 10 170 5 10\\nTokyo Beijing 120 600 5 10\") == 120.0\nassert solution(\"2\\nParis Berlin\\n10 180 5 10\\nParis Lille 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\") == 120.0\nassert solution(\"3\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Lille 120 540 5 10\") == 120.0\nassert solution(\"3\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Lille 120 540 5 10\\nParis Tokyo 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Tokyo 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\\nParis Tokyo 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\") == 120.0\nassert solution(\"1\\nLondon Paris\\n10 180 5 10\\nLondon Berlin 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\\nParis Tokyo 120 540 5 10\\nTokyo Paris 120 540 5 10\\nTokyo Paris 120 540 5 10\") == 1"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3, \"Incorrect output\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\", \"Incorrect output\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == 68.3\n\nassert solution(r'''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\", \"Hamburg Bremen 46 55 50 60\", \"Bremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, \"Test case failed\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == 68.3\nassert solution('''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"68.3\", \"The minimum expected duration should be 68.3.\"\nassert solution(sample_input2) == \"IMPOSSIBLE\", \"The destination is not reachable.\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == '3\\n'\nassert solution(open('sample_input2.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n', \"Expected output: '3\\n', but got '{}'.\".format(solution())"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n*-*.*\\n|.|.| \\n*.*-* \\n|...|\\n*.*.*\\n') == '3\\n'\nassert solution('2\\n*.*\\n... \\n*.*\\n') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\", \"Output not as expected\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\", \"Incorrect solution\"\nassert solution(\"4\\n1111\\n\") == \"impossible\", \"Incorrect solution\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"8\\n12210020\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n12210020\\n') == '4\\n', 'Your solution is incorrect.'\nassert solution('4\\n1111\\n') == 'impossible\\n', 'Your solution is incorrect.'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test failed\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n12210020\\n\") == 4, \"Invalid input 1\"\nassert solution(\"4\\n1111\\n\") == \"impossible\", \"Invalid input 2\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n12210020\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n12210020\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible\\n'\n\nfrom typing import List"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\\n\"\n\nassert solution(\"5\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill will be bitten.\\n\"\n\nassert solution(\"6\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\"7\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill will be bitten.\\n\"\n\nassert solution(\"8\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill will be bitten.\\n\"\n\nassert solution(\"9\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill will be bitten.\\n\"\n\nassert solution(\"10\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.\\n'\n\nassert solution('''\n5\n1000 1000 200\n1500 1500 200\n1000 1500 200\n1500 1500 200\n1500 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill will be bitten.\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill will be bitten.\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill will be bitten.\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''\n4\n100 200 200\n200 200 200\n200 200 200\n200 200 200\n''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Error: solution({input})!= '{output}'\" for input, output in [\n    ('3', 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'),\n    ('4', 'Bill will be bitten.'),\n]"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++\\n', 'Test 1'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 2'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"+oo\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++', \"Test case 1 failed\"\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo', \"Test case 2 failed\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Lost is Close to Lose\\n'\n                  'Better Documents Inc. wants to add Typo Checking in to the\\n'\n                  'next generation of word processors,\\n'\n                  'he said.***\\n'\n                  'Sample Input 1: The fox said, \"When?\" \"Not till 12 o\\'clock\", replied the hen. \"That clock is stopped, it will never strike.\"***\\n'\n                  'Sample Output 1: clock: oclock he: hen the hen: he when is: it it: is oclock: clock the: he till: will when: hen will: till def solution(stdin: str) -> str: pass\\n') == '''\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''.strip()\n\nassert solution('***\\n'\n                  'Sample Input 2: The fox said, \"When?\" \"Not till 12 o\\'clock\", replied the hen. \"That clock is stopped, it will never strike.\"***\\n'\n                  'Sample Output 2: clock: oclock he: hen the hen: he when is: it it: is oclock: clock the: he till: will when: hen will: till def solution(stdin: str) -> str: pass\\n') == '''\n***\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''.strip()"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Solution 1: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Solution 2: {solution(input2)}!= {output2}\"\n\ninput1 = \"\"\"Lost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors, he said.\"\"\"\ninput2 = \"\"\"The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\"\n\"\"\"\n\noutput1 = \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\noutput2 = \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test 1: {sample_input1}!= {expected_output1}\"\nassert solution(sample_input2) == expected_output2, f\"Test 2: {sample_input2}!= {expected_output2}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\" Not till 12 o'clock That clock is stopped, it will never strike.\") == \"clock: oclock\\nhe: hen the\\nen: it\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Input/Output mismatch\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Incorrect output for sample input 1\"\nassert solution(input2) == output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('The fox said, \"When?\"\\n\\nNot till 12 o\\'clock\\n\\nThat clock is stopped, it will never strike.\\n\\n') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n'\nassert solution('Sample Input 1') == 'close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n'\nassert solution('Sample Output 1') == 'close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n'\nassert solution('Sample Input 2') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n'\nassert solution('Sample Output 2') == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"Lost is Close to Lose\\n\\n\"\n    \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n    \"next generation of word processors,\\n\"\n    \"he said.\\n\\n\"\n) == (\n    \"close: lose\\n\"\n    \"he: the\\n\"\n    \"in: inc is\\n\"\n    \"inc: in\\n\"\n    \"is: in\\n\"\n    \"lose: close lost\\n\"\n    \"lost: lose\\n\"\n    \"the: he\\n\\n\"\n)\n\nassert solution(\n    \"The fox said, \\\"When?\\\"\\n\"\n    \"Not till 12 o'clock, replied the hen.\\n\"\n    \"That clock is stopped, it will never strike.\\n\"\n) == (\n    \"clock: oclock\\n\"\n    \"he: hen the\\n\"\n    \"hen: he when\\n\"\n    \"is: it\\n\"\n    \"it: is\\n\"\n    \"oclock: clock\\n\"\n    \"the: he\\n\"\n    \"till: will\\n\"\n    \"when: hen\\n\"\n    \"will: till\\n\"\n    \"def solution(stdin: str) -> str:\\n\\n\"\n    \"    pass\\n\\n\"\n)\n\nassert solution(\"\") == \"\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test Case {i + 1} failed\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test case 1 incorrect\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test case 2 incorrect\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Incorrect output for sample input 1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\", \"Test 2 failed\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\", \"Solution should return 1\"\nassert solution(open(\"input2.txt\").read()) == \"2\", \"Solution should return 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"1\", \"Sample Input 1 failed\"\nassert solution(sample_input_2) == \"2\", \"Sample Input 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Expected 1, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"output\", \"The solution is incorrect.\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Incorrect result for input 1.\"\nassert solution(\"1.6 1\") == \"5/3\", \"Incorrect result for input 2.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1/7'\nassert solution(input()) == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Sample Input 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Sample Input 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Expected output is 1/7, got {}\".format(solution(\"0.142857 6\"))\nassert solution(\"1.6 1\") == \"5/3\", \"Expected output is 5/3, got {}\".format(solution(\"1.6 1\"))\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Invalid input\"\nassert solution(\"1.6 1\") == \"5/3\", \"Invalid input\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'Output', 'Your solution is incorrect.'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\n0 0 0\\n0 0 1\") == \"6\\n\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"Correct\")"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt')) == \"6\\n\"\nassert solution(open('input2.txt')) == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([1, 0, 0]), 6\nassert solution([2, 0, 0, 0, 1]), 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '6\\n'\nassert solution(stdin=open('input2.txt', 'r')) == '10\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"6\", \"Expected output 6, but got {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"10\", \"Expected output 10, but got {}\".format(solution(sample_input2))"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\\n\") == 6\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == 6\nassert solution(\"0 0 0\\n0 0 1\\n0 1 1\\n1 0 1\\n1 1 1\\n2 1 1\\n2 2 1\\n3 2 1\\n3 3 1\\n4 3 1\\n4 4 1\\n5 4 1\\n5 5 1\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\", \"Sample Output 1 is incorrect\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\", \"Sample Output 2 is incorrect\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\", \"First sample\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\", \"Second sample\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1', \"Your solution is incorrect. Please provide the correct input.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output. Expected 1, got: \" + str(solution(stdin))"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Please implement the solution correctly.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\"\n\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\" # expected output: \"1\\n\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Expected 3, got {}\".format(solution(\"1001\"))\nassert solution(\"1111\") == \"1\\n\", \"Expected 1, got {}\".format(solution(\"1111\"))"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1001') == '3', \"Incorrect output\"\nassert solution('1111') == '1', \"Incorrect output\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1001') == '3', \"The solution should return 3\"\nassert solution('1111') == '1', \"The solution should return 1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1001') == '3', \"Expected '3', got: \" + solution('1001')\nassert solution('1111') == '1', \"Expected '1', got: \" + solution('1111')"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1\\n1 1 2\\n1 2 2\\n1 2 1\\n2 1 1\\n2 1 2') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n1 1 1 2 1\\n1 1 1 2 2\\n1 1 2 1 1\\n2 2 1 1 1\\n2 2 1 1 2\\n2 2 2 2 1\\n1 2 1 2 1\\n2 1 1 1 1\\n1 1 1 1 1') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL'\n\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution("
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())} instead.\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\\nSample Output 1:\\nLLL\\n\\nSample Input 2\\n5\\n1 2 2 1 2\\nSample Output 2:\\nLLRLR\\n\") == \"LLL\\nLLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"LLL\"\nassert solution() == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 1 1\\n2\\n2 1 1\\n3\\n3 1 1\\n4\\n4 1 1\\n5\\n5 1 1\") == \"RRRRRR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n') == '49000000000070'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == 25000000000021\nassert solution(\"1 2 1000000\\n3 4 3000000\\n5 6 5000000\\n7 8 7000000\") == 0\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 49000000000070\nprint(\"All test cases pass\")"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '49000000000070'\nassert solution(sample_input2) == '25000000000021'\n\nfrom typing import List"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_input.txt', 'r')) == '49000000000070\\n'\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\\n\", \"Test 1 failed.\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\" for input, output in zip(stdin_content, stdout_content)"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n4 4\\n0 2\\n1 3\\n2 0\\n3 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n4\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n4 4\\n0 2\\n1 3\\n2 0\\n3 1\\n4 4\\n0 1\\n1 3\\n2 2\\n3 3\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n4\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n4 4\\n0 2\\n1 3\\n2 0\\n3 1\\n4 4\\n0 1\\n1 3\\n2 2\\n3 3\\n5 5\\n0 0\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n0 1\\n1 2\\n2 0\\n3 3\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n4\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\nassert solution(\nr'''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"2\n2\n0\n1\n2\n2\n3\"\"\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 0\n''') == '1\\n2\\n3\\n'\n\nassert solution('''\n4 4\n0 1\n1 0\n2 3\n3 1\n''') == '1\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(data) == output, f\"Test failed for {data}\"\nfor data, output in [\n    (input1, output1),\n    (input2, output2),\n]:\n    assert solution(data) == output, f\"Test failed for {data}\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"IMPOSSIBLE\"\nassert solution(2) == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'POSSIBLE\\n1 3\\n2 3'\nassert solution() == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'POSSIBLE\\n1 3\\n2 3'\nprint(\"All assertions passed.\")"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 2\\n2\\n1 2\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\\n\"\n\nsolution(stdin) # You can replace the code with your actual solution here"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(sample_input_2) == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(sample_input_2) == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'3\\n1 1 2') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(r'2\\n1 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.5 0.5 0.5\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n').strip() == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n').strip() == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"\"\"\n0.5 0.5 0.5\n\"\"\"\n\nassert solution(\"\"\"\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"\"\"\n0.0 0.0 -0.0\n\"\"\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution, \"No solution provided.\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"1 -1 0\\n-1 1 0\\n0 1 -1\\n0 -1 1\\n\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin), \"The solution is not correct.\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n0.0 0.0 -0.0\"\nassert solution(\"0 -1 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 -0.0 -0.0\"\nassert solution(\"-1 -1 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 -0.0 -0.0\"\nassert solution(\"-1 1 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 -0.0 -0.0\"\nassert solution(\"1 1 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 -0.0 -0.0\"\nassert solution(\"1 1 -1\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 -0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '0.5 0.5 0.5'\nassert solution(open('input2.txt', 'r')) == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3 2 2 1 5\\n3 2 2\\n6 6\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output goes here', 'Please provide the correct implementation of the function'\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output here'\nassert solution() == 'Output here'\nassert solution() == 'Output here'\nassert solution() == 'Output here'\nassert solution() == 'Output here'\nassert solution() == 'Output here'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\nSample Output 1:\\n2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\\nSample Input 2:\\n3\\n17 17 17\\nSample Output 2:\\n0\\n17 17 17') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# test_case(1)\\n# test_case(2)\\n\\n# Test case 1\\ndef test_case(num):\\n    N = int(stdin.readline())\\n    v = list(map(int, stdin.readline().split()))\\n    res = 0\\n\\n    for i in range(N):\\n        for j in range(i + 1, N):\\n            adj = [v[k] for k in range(i, j + 1)]\\n            res += max(adj) - min(adj)\\n\\n    print(res)\\n\\n# Test case 2\\ndef test_case(num):\\n    N = int(stdin.readline())\\n    v = list(map(int, stdin.readline().split()))\\n    res = 0\\n    n = len(v)\\n    queue = [(0, 0)]\\n    visited = [False] * n\\n    while queue:\\n        round = 0\\n        while queue and queue[0][0] == 0:  # Check if candidate is already on the queue\\n            candidate = queue.pop(0)\\n            visited[candidate[0]] = True\\n            res += v[candidate[0]]\\n            if candidate[1] == n - 1:\\n                break\\n            for i in range(candidate[1] + 1, n):\\n                if not visited[i]:\\n                    queue.append((i, 1))\\n\\n    print(res)\\n\\n# Test cases\\n# test_case(1)\\n# test_case(2)\\n\"\n\nprint(assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# test_case(1)\\n# test_case(2)\\n\\n# Test case 1\\ndef test_case(num):\\n    N = int(stdin.readline())\\n    v = list(map(int, stdin.readline().split()))\\n    res = 0\\n\\n    for i in range(N):\\n        for j in range(i + 1, N):\\n            adj = [v[k] for k in range(i, j + 1)]\\n            res += max(adj) - min(adj)\\n\\n    print(res)\\n\\n# Test case 2\\ndef test_case(num):\\n    N = int(stdin.readline())\\n    v = list(map(int, stdin.readline().split()))\\n    res = 0\\n    n = len(v)\\n    queue = [(0, 0)]\\n    visited = [False] * n\\n    while queue:\\n        round = 0\\n        while queue and queue[0][0] == 0:  # Check if candidate is already on the queue\\n            candidate = queue.pop(0)\\n            visited[candidate[0]] = True\\n            res += v[candidate[0]]\\n            if candidate[1] == n - 1:\\n                break\\n            for i in range(candidate[1] + 1, n):\\n                if not visited[i]:\\n                    queue.append((i, 1))\\n\\n    print(res)\\n\\n# Test cases\\n# test_case(1)\\n# test_case(2)\\n\")"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.py) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(solution.py)}\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    3 2\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    2 3\n    \"\"\"\n) == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == 74.6666666667\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"IMPOSSIBLE\", \"Solution should be IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Sample Input {sample_input1} should return {expected_output1}, but returned {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Sample Input {sample_input2} should return {expected_output2}, but returned {solution(sample_input2)}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n0\\n', \"The function is not returning the expected output.\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n2\\n1\\n2\\n2\\n1'\nassert solution(open('input2.txt', 'r')) == '0'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n2\\n1\\n2\\n2\\n1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '0\\n2\\n2\\n1\\n2\\n2\\n2\\n'\nassert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n') == '0\\n0\\n2\\n2\\n2\\n2\\n'\nassert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n7 7\\n') == '1\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\n2\\n3\\n4\\n5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(stdin=\"7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"0\\n1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n1\\n2\\n2\\n1\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n0\\n0\\n0\\n0\" # This is the correct output for the sample input"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10\\n'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5\\n'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == 10\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\"\nassert solution(\"10 3\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2, \"Expected 2, but got {}\".format(solution(3))\nassert solution(4) == 2, \"Expected 2, but got {}\".format(solution(4))\nassert solution(5) == 1, \"Expected 1, but got {}\".format(solution(5))\nassert solution(6) == 1, \"Expected 1, but got {}\".format(solution(6))\n\nfrom typing import List"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example1.txt', 'r')) == '2'\nassert solution(open('example2.txt', 'r')) == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2\\n'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1\\n'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: '{output}', Got: '{solution(input())}'\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == 1, \"Incorrect solution\"\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == 2, \"Incorrect solution\"\n\nfrom typing import List"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 4\n.LX.\n.X..\n....\n.L..\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n4 4\n.XLX\n.X..\n...L\n.X..\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input_2.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == 1\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == 2"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"detention\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Solution is {solution}, but expected output is {expected_output}\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr'''\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n'''\n) == 'home'\n\nassert solution(\nr'''\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n'''\n) == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"detention\\n2\\n2 0 1\\n2 2 3\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"home\\n2\\n2 0 1\\n2 2 3\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"home\", \"Sample Input 1 failed\"\nassert solution(sample_input2) == \"detention\", \"Sample Input 2 failed\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:home\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:detention\\ndef solution(stdin: str) -> str:\\n    pass') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:home\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 3:6 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 3 5\\n2 4 6\\n1 2\\nSample Output 3:detention\\ndef solution(stdin: str) -> str:\\n    pass') == 'home'\nassert solution('4 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 3 5\\n2 4 6\\n1 2\\nSample Output 3:home\\n2\\n2 0 1\\n2 2 3\\n') == 'detention'\nassert solution('5 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 3 5\\n2 4 6\\n1 2\\nSample Output 3:detention\\n2\\n2 0 1\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n') == 'home'\nassert solution('6 3 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 3 5\\n2 4 6\\n1 2\\nSample Output 3:detention\\n2\\n2 0 1\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n') == 'detention'\nassert solution('5 2 2\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 3:home\\n2\\n2 0 1\\n2 2 3\\n2 2 3\\n2 2 3\\n2 2 3\\n') == 'home'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Sample Input 1 failed\"\nassert solution(\"zzzz\") == \"-1\", \"Sample Input 2 failed\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin)  # pass"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output one integer representing the number of scary subarrays.\\n\", \"Testcase 1\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 5, \"Incorrect output\"\nassert solution(sample_input2) == 8, \"Incorrect output\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"The solution provided is incorrect. Expected {output}, got {stdin}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5\") == \"5\\n8\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\", \"The solution for sample input 1 should be 5\"\nassert solution(\"1 2 3 4 5 6\") == \"8\", \"The solution for sample input 2 should be 8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Sample Output 1:5\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(stdout)"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Expected Output\", solution(stdin)"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin) == \"Expected output\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\", \"Test case 1\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\" for i, (input_, expected_output) in enumerate([\n    (input(\"47\\n\"), 1),\n    (input(\"523\\n\"), 2)\n])"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output: {output}, but got: {solution(stdin=input())}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Test 1 failed\"\nassert solution(stdin) == \"2\", \"Test 2 failed\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\\n\", \"Test case 1 failed.\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\\n\", \"Test case 2 failed.\"\nassert solution(\"4 1\\n0 2 5\") == \"0\\n\", \"Test case 3 failed.\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n1\"\n\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed!\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0'\nassert solution('2 2\\n0 1 20\\n1 0 5') == '1'\nassert solution('4 4\\n0 0 10\\n1 1 10\\n2 2 10\\n3 3 10\\n4 4 10') == '0'\nassert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0'\nassert solution('2 2\\n0 1 20\\n1 0 5') == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == 0\nassert solution(\"2\\n0 1 20\\n1 0 5\") == 1\nassert solution(\"4\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == 0\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n0 1 10\\n1 0 5\\n\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\\n\") == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1 0 15\\n'\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n1\\n1\"\n\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 6\n    1 3 2 1 5\n    1 3\n    2 3\n    1 4\n    3 5\n    4 5\n    2 5\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    4 3\n    4 4 8 12\n    1 2\n    2 3\n    3 4\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == 5, \"Solution does not work as expected.\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == 5\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == 5\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == 1"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"020302\") == \"7\"\nassert solution(stdin=\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\", \"Test 1 failed\"\nassert solution(\"1311\") == \"24\", \"Test 2 failed\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == 7\nassert solution(\"1311\") == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.#########.\\n##########.\\n##########.\\n') == '3 1 3 10'\n\nassert solution('5 20\\n###########.#.#.#.#.#########\\n###########...#.###.#########\\n##########..##.#..###########\\n###########..#.#.##.#########\\n###########.###...#.#########\\n') == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#.#.#.#.#.#\") == \"1 1 2 1\"\nassert solution(\"#.##..##.#.#.#\") == \"2 1 3 1\"\nassert solution(\"###..##.#.#.#.#\") == \"2 1 3 1\"\nassert solution(\"..##.###.#.#.#.#\") == \"3 1 3 1\"\nassert solution(\"....##.#.##..#\") == \"2 1 3 1\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10\\n'\n\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15\\ndef solution(stdin: str) -> str:\n    #...'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3 1 3 10', \"Incorrect output\"\nassert solution(stdin) == '1 15 5 15', \"Incorrect output\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, \"Input does not match the expected output\"\nfor _ in range(test_cases):\n    n, m = map(int, input().split())\n    image = list(map(str, input().split()))\n    fold = input()\n    if fold == \"horizontal\":\n        r1, c1, r2, c2 = fold_horizontal(image, n, m)\n    elif fold == \"vertical\":\n        r1, c1, r2, c2 = fold_vertical(image, n, m)\n    elif fold == \"diagonal\":\n        r1, c1, r2, c2 = fold_diagonal(image, n, m)\n    print(r1, c1, r2, c2)"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    8 10\n        #.##..##..#\n        ####..####\n        ###.##....\n        ...#..####\n        ....##....\n        .#.##..##.\n        ##########\n        ##########\n        #..#.#..#.#..#\n        #..#.#..#.#..#\n        #..#.#..#.#..#\n        #..#.#..#.#..#\n        #..#.#..#.#..#\n        #..#.#..#.#..#\n''') == '''\n    3 1 3 10\n'''"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    8 10\n        #.###...#\n        #.#.#....#\n        #.#..#..#\n        #.#...#.#\n        #.#..#..#\n        #.#.#....#\n        #.###...#\n\"\"\") == \"\"\"\n    3 1 3 10\n\"\"\"\n\nassert solution(\"\"\"\n    5 20\n        #.###...#.#.#.#.#\n        #.#.#...#..#..#.#\n        #.#..#..#..#.#..#\n        #.#...#.#.#.#..#\n        #.#..#..#..#.#..#\n        #.#.#...#..#..#.#\n        #.###...#.#.#.#.#\n\"\"\") == \"\"\"\n    1 15 5 15\n\"\"\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"3 1 3 10\"\nassert solution(sample_input2) == \"1 15 5 15\"\n\nfrom typing import List"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Error: Your solution is incorrect. The output is {output}, but the expected output is {output}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(50, 0.125) == \"16.339203308\", \"Incorrect answer\"\nassert solution(201, 1.000) == \"5.000000000\", \"Incorrect answer\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 0.125) == 16.34\nassert solution(50, 0.125) == 16.34\nassert solution(201, 1.000) == 5.00\n\nfrom typing import List\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\\n\"\nassert solution(\"201 1.000\") == \"5.000000000\\n\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"16.339203308\", \"Test 1 failed\"\nassert solution(stdin) == \"5.000000000\", \"Test 2 failed\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\", \"Your solution is incorrect\"\nassert solution(\"201 1.000\") == \"5.000000000\", \"Your solution is incorrect\"\n\nimport math"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16.34\", \"Test case 1 failed\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"The code is not correct. The output is {}, but the expected output is {}\".format(solution(input()), output)\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3000.125) == '16.34', \"Expected 16.34, got {0}\".format(solution(3000.125))\nassert solution(201) == '5.00', \"Expected 5.00, got {0}\".format(solution(201))"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n0.5 1\\n2 3\\n1 11\\n0.4 1') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\" # sample output"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_1) == solution_1, \"Test case 1 failed: \\nSolution: {}\\nInput: {}\\nExpected output: {}\\n\".format(solution(solution_1), solution_1, solution_1)\nassert solution(solution_2) == solution_2, \"Test case 2 failed: \\nSolution: {}\\nInput: {}\\nExpected output: {}\\n\".format(solution(solution_2), solution_2, solution_2)"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"2\n2\n\n3\n3\n\"\"\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, \"Your solution is incorrect.\" for input_str, output_str in [\n    (\"2 2\\n0.5 1\\n\", \"2\\n\"),\n    (\"4 3\\n1 11\\n0.4 1\\n\", \"3\\n\"),\n]"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n0.5 1\\nSample Input 1:\\n2 2\\n0.5 1\\nSample Output 1:\\n2\\n\\n\\nSample Input 2:\\n4 3\\n1 11\\n0.4 1\\nSample Output 2:\\n3') == '2\\n3\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\nSample Input 2:\\n4 3\\n1 11\\n0.4 1\\nSample Output 2:\\n3') == '3\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '10.5'\nassert solution(open('input2.txt', 'r')) == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"10.5\"\nassert solution == \"-1\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed for sample {sample_case}:\\nGot: {solution(stdin)}\\nExpected: {expected}\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(r\"3\\n2 1\\n4 0\\n0 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == 10.5\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == -1"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output.\\nExpected: {expected}\\nGot: {solution(stdin)}\"\nfor i in range(1, 101):\n    stdin = f\"{i} 0.5\\n{i} 0.5\\n{i} 0.5\"\n    expected = f\"{i}\\n\"\n    assert solution(stdin) == expected, f\"Solution does not match expected output.\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"1\", \"The output should be 1, but it is {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"2\", \"The output should be 2, but it is {}\".format(solution(sample_input2))"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 0.5\n2 0.5\n1 0.5\n\"\"\") == 1\n\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == 'Output'\nassert solution(str(input())) == 'Output'\nassert solution(str(input())) == 'Output'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('yes') == 'yes'\nassert solution('no') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test {test_case} failed\" for test_case in range(1, 4)"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Expected: {expected}, Received: {solution(input)}\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\"\nassert solution() == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"yes\" or \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"no\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'no'\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['2', '1', '2']\nassert solution(open('input2.txt', 'r').read()) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error: The solution is incorrect. Expected output: {output}, but got: {solution(input())}.\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\\n1\\n2\\n\"\nassert solution(4) == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == [\"2\\n1\\n2\\n\"]\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == [\"5\\n8\\n2\\n7\\n\"]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == [2, 1]\nassert solution(4) == [5, 8, 2, 7]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '2\\n1\\n2\\n'\nassert solution(4) == '5\\n8\\n2\\n7\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n1\\n2\\n5\\n8\\n2\\n7\\n\", \"Test case 1 failed.\"\nassert solution() == \"5\\n8\\n2\\n7\\n5\\n8\\n\", \"Test case 2 failed.\"\nassert solution() == \"5\\n8\\n2\\n7\\n5\\n8\\n\", \"Test case 3 failed.\"\nassert solution() == \"5\\n8\\n2\\n7\\n5\\n8\\n\", \"Test case 4 failed.\"\nassert solution() == \"5\\n8\\n2\\n7\\n5\\n8\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(5) == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(1) == \"python\"\nassert solution(2) == \"python\\njava\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"python main.py\"\nassert solution(input()) == \"python main.py -n 10\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"python\"\nassert solution(input()) == \"java\"\nassert solution(input()) == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java python\") == \"java python\"\nassert solution(\"java python -n 10\") == \"java python -n 10\"\nassert solution(\"java python -n 20\") == \"java python -n 20\"\nassert solution(\"java python -n 10 java\") == \"java python -n 10 java\"\nassert solution(\"python java\") == \"python java\"\nassert solution(\"python java -n 10\") == \"python java -n 10\"\nassert solution(\"python java -n 20\") == \"python java -n 20\"\nassert solution(\"python java -n 10 java\") == \"python java -n 10 java\"\nassert solution(\"python java -n 10 java -n 20\") == \"python java -n 10 java -n 20\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"python\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\\n\", \"First Test\"\nassert solution(\"python\\np^ main.py\\n^ -n 10\\njava\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Second Test\"\nassert solution(\"python\\np^ main.py\\n^ -n 10\\njava\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Third Test\"\nassert solution(\"python\\np^ main.py\\n^ -n 10\\njava\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Fourth Test\"\nassert solution(\"python\\np^ main.py\\n^ -n 10\\njava\\n\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Fifth Test\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"python\\np main.py\\n^ -n 10\") == \"python\\np main.py\\npython main.py -n 10\"\nassert solution(\"python\\njava\\njava\\np\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"python\\njava\\njava\\np\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"python\\n\\n\") == \"python\\n\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"python\\njava\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"python main.py\\njava\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"python main.py -n 10\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"python\\njava\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\npython\\np^ main.py\\n^ -n 10') == 'python\\npython main.py\\npython main.py -n 10\\n'\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^\\n') == 'python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n') == ''\nassert solution('') == ''\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^\\n') == ''"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == ['python', 'python main.py', 'python main.py -n 10', 'java', 'java', 'java', 'python', 'java', 'java']"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\n\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2) == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5) == 'this sentence makes perfect sense'\nassert solution('hitehre', 2) == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5, ['makes', 'perfect','sense','sentence', 'this']) == 'this sentence makes perfect sense'\nassert solution('hitehre', 2, ['there', 'hello']) == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == 4\nassert solution(\"2 2\") == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected\nassert solution(stdin) == expected"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"4\\n\"\nassert solution(\"2 2\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect for sample input {input()}, expected output {output}, but got {solution(input())}.\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == 4\nassert solution(\"2 2\") == 16"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\"\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\\n\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == '2\\n'\nassert solution(sample_input_2) == '4\\n'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n'\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\") == 2\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\") == 4\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\nsolution(stdin) == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input 1') == 'Sample Output 1\\n'\nassert solution('Sample Input 2') == 'Sample Output 2\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Expected: {output1}\\nActual: {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected: {output2}\\nActual: {solution(input2)}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n').strip() == '6\\n85\\n90\\n95\\n100\\n105\\n'\n\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n').strip() == '4\\n17.071067\\n20\\n22.928932\\n'\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\nfrom typing import List"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output'\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n6\n85\n90\n95\n100\n105\n\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"yes\"\nassert solution(input1) == \"yes\"\nassert solution(input2) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10, 11) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 11\") == \"yes\\n\"\nassert solution(\"10 7\") == \"yes\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'yes'\nassert solution(stdin) == 'no'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"yes\", \"The output should be 'yes'.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output the length K of the longest sequence on the first line.\\nEach of the following K lines should contain one element of the sequence, an interval in the same format it was given in the input.\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6') == '3\\n1 6\\n2 5\\n3 4\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the length K of the longest sequence on the first line.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n1 6\\n2 5\\n3 4'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\", \"Test case 1\"\n\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\", \"Test case 2\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"5836\"\n\nassert solution(\"\"\"\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\", \"Please provide the correct input\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    5 1\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    '''\n) == '5836'\n\nassert solution(\n    '''\n    5 2\n    10 10 5\n    9 8 10\n    4 12 20\n    12 4 8\n    2 3 16\n    '''\n) == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Incorrect output\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Incorrect output\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\", \"Test 1 failed\"\n\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\\n\", \"Test 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 1828"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Test 1 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == '50\\n'\n\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\", \"The correct answer is: 50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\", \"The correct answer is: impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == 50\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n') == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"50\", \"Expected '50', got: \" + solution(stdin)\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '50\\n', \"Expected output '50', got: {}\".format(solution(stdin))"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed. Received {solution(input)} instead of {expected}\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\", \"Test 1 failed\"\nassert solution(4.5) == \"0 0 0 1 1\", \"Test 2 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5.0) == '0 0 0 0 1'\nassert solution(4.5) == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Invalid input/output\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0 0 0 0 1\\n0 0 0 1 1\", \"Test 1 failed\"\n\nassert solution(stdin) == \"0 0 0 0 1\\n0 0 0 1 1\", \"Test 2 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Output: {solution(input())}\"\nfor P in [1.0, 2.0, 3.0, 4.0, 5.0]:\n    assert solution(str(P)) == [str(sum(1 for i in range(1, 6) if i!= num)) for num in [1, 2, 3, 4, 5]], f\"Input: {P}, Output: {solution(str(P))}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input {input()} doesn't match the output {output}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n8 2 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\", \"Test 1 failed\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin1) == '8\\n', \"Sample Input 1\"\nassert solution(stdin2) == '3\\n', \"Sample Input 2\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1, \"Test 1 failed\"\nassert solution(input_2) == output_2, \"Test 2 failed\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"You have failed to complete the task\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == 3\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == 4"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3', \"Expected output 3, got {}\".format(solution())"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\"\nassert solution(input3) == output3, \"Test case 3 failed\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 2\n2 3 4 1\n\"\"\") == \"3\\n\"\n\nassert solution(\n\"\"\"\n6 3\n2 2 2 4 4 4\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\nassert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 1 1.732050\") == \"1.732050808\"\nassert solution(stdin=\"1 1 3.0\") == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '1.732050808', 'Test 1 failed'\nassert solution(sample_input2) == '-1', 'Test 2 failed'\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\n\nsolution = '''\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.732050808\", \"The area of the rug should be 1.732050808\"\nassert solution(stdin) == -1, \"There is no carpet that satisfies the constraints\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1\n\nsolution = lambda stdin: float(stdin.strip())\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"1 1 1.732050\\n\")) == 1.732050808\nassert solution(input(\"1 1 3.0\\n\")) == -1"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n1\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"2.4999999987500003\\n9.999999999000002\\n\"\n\nsolution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n1\\n0 100 10\\n0 -100 100\\n.80\\n\")"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.4999999987500003\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Error: Invalid input.\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"2.4999999987500003\", \"Incorrect output 1\"\nassert solution(input_2) == \"9.999999999000002\", \"Incorrect output 2\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.4999999987500003\", \"The solution is incorrect\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"2 1 6\\n2 1 6\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed. Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"2 1 6\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 4\") == \"0\"\nassert solution(\"1 2 2 4\") == \"3\"\nassert solution(\"1 2 2 4\") == \"2\"\nassert solution(\"2 1 6\") == \"0\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"2\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed for {input()} and expected {output}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 6 2 1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(stdin=\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution is {solution(stdin)}, but expected {expected}\"\nfor _ in range(10):\n    n, k, p = map(int, input().split())\n    if 1 <= n <= 2000 and 2 <= k <= 7 and 1000000007 < p < 100000000000 + 9:\n        expected = sum(1 for _ in range(k))\n        assert solution(stdin) == expected, f\"Solution is {solution(stdin)}, but expected {expected}\"\n        break\nelse:\n    assert False, \"Failed to find an answer within the given time limit\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Expected output 1, but got {}\".format(solution())  # Example 1\nassert solution() == 4, \"Expected output 4, but got {}\".format(solution())  # Example 2"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Sample Output 1: 1\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 2: 4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 1\nassert solution(sample_input_2) == 4"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"3 2 1000000007\") == \"4\\n\", \"Test 2 failed\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\", \"The solution for the given input is incorrect.\"\nassert solution() == \"8\", \"The solution for the given input is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The function should return the correct output.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"5\"\nassert solution(\"10 10\\n10\\n6\\n11\\n3 5\\n11\\n\") == \"11\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"5\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"11\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"5\"\nassert solution(\"10 10\\n6\\n11\\n3 5\\n11\\n\") == \"11\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}.\"\nfor input_line in test_input:\n    assert solution(input_line) == output, f\"Test failed for input {input_line} and output {output}.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 10\\n6\\n3 5\\n11') == '5\\n8'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 10\\n6\\n3 5\\n11') == '5'\nassert solution('10 10\\n6\\n10 10') == '6'\nassert solution('10 10\\n6\\n2 2') == '2'\nassert solution('10 10\\n6\\n5 5') == '5'\nassert solution('10 10\\n6\\n10 10\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6') == '10'\nassert solution('10 10\\n6\\n10 10\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr'''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\n\nassert solution(\nr'''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output.\\nInput: {stdin}\\nExpected Output: {expected}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, \"Expected output: {}\\nActual output: {}\".format(output, solution(input))\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == 2\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == 3"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# For sample input, see the problem statement\\n# Test cases are provided in the problem statement\\n\\n# End of tests\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == output_1\nassert solution(example_input_2) == output_2"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '''\n3\n'''\n\nassert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '''\n3\n'''"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\", \"Please provide valid input for the function solution.\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"The solution is {solution}, but the expected output is {expected_output}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == None\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 1, \"Sample Input 1\"\nassert solution(3) == 5, \"Sample Input 2\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == '1'\nassert solution(3) == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1, 2, 3, 4, 5, 6, 7, 8, 9) == 1, \"Test 1 failed\"\nassert solution(10, 11, 12, 13, 14, 15) == 5, \"Test 2 failed\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1\\n2\\n3\\n4\\n5'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 5\n\nimport math"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n\"\n) == 2\n\nassert solution(\n    \"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n\"\n) == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2', \"The output is incorrect\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"2\", \"The correct output is: \" + str(solution(sample_input1))\nassert solution(sample_input2) == \"-1\", \"The correct output is: \" + str(solution(sample_input2))\n\nsample_input1 = \"\"\"\n3 1\n0 11 9\n1 0 10\n0 0 0\n\"\"\"\n\nsample_input2 = \"\"\"\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n\"\"\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"-1\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"0 1 100000\\n1 2 100000\\n1 3 100000\\n0 2 100000\\n2 3 100000\\n\") == \"2 100000 1\\n0 1 100000\\n0 2 100000\\n1 2 100000\\n1 3 100000\\n2 3 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 100000\n\"\"\") == \"\"\"\n2 100000 1\n0 1 100000\n\"\"\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == solution()\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3 5\\n2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Incorrect output\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Incorrect output\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\n'\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '''3 5\n'''\n\nassert solution('''2 3\nS.M\nM..''') == '''2 0\n'''"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_example1) == output_example1\nassert solution(input_example2) == output_example2"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Test 1\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Test 2\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [\"2\", \"3 c\", \"6 c\"]"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\") == \"1\\n6 b\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_case.txt\", \"r\")) == \"2\\n3 c\\n6 c\\n\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3 c\\n6 c\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '''\n2\n3 c\n6 c\n'''\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '''\n1\n6 b\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '''\n2\n3 c\n6 c\n'''\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '''\n1\n6 b\n'''\n\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '''\n2\n3 c\n6 c\n'''\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '''\n1\n6 b\n'''"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '''\n2\n3 c\n6 c\n'''"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == \"2\\n3 c\\n6 c\\n\"\n\nassert solution('0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == '40\\n', 'Test 1'\nassert solution('288 291') == '76\\n', 'Test 2'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1 5') == '40'\nassert solution(stdin='288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"40\", \"Test 1 failed\"\nassert solution(\"288 291\") == \"76\", \"Test 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\\n\"\nassert solution(\"1000000000 1000000000\") == \"1\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"CGO\"\nassert solution(\"COT\") == \"CTO\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    123\n    CAT\n    DOG\n    COT\n    \"\"\"\n) == \"COG\"\n\nassert solution(\n    \"\"\"\n    2\n    123\n    CAT\n    DOG\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    1\n    123\n    CAT\n    DOG\n    COT\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == ['COG']\nassert solution(open('example1.txt', 'r')) == ['COG']\nassert solution(open('example2.txt', 'r')) == [0, -1]"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"COG\"\nassert solution(stdin=\"2\\nCAT\\nDOG\") == \"0\"\nassert solution(stdin=\"2\\nCAT\\nDOG\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\nCAT\\nDOG\\nCOT') == 'COG'\nassert solution('2\\nCAT\\nDOG') == '0'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"COG\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output\nprint(output[0], output[1])"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(read_input()) == [read_output()]"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output\nassert solution(input()) == expected_output"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == # solution function"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"The number of sequences of length 10 whose confusion is exactly 6 is 3.\", \"The number of sequences of length 10 whose confusion is exactly 6 is not 3.\"\n\nimport math"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 627989377\nassert solution == 4\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin.readline()) == '9\\n'\nassert solution(stdin.readline()) == '6\\n'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == expected_output, f\"Your solution is incorrect. Please see the example output below for the correct output.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, Expected: {expected}\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1\") == \"9\\n\"\nassert solution(\"4 3\") == \"6\\n\"\n\nfrom collections import Counter"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == \"3\"\nassert solution(solution(stdin)) == \"3\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 3"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1\nassert solution('10 10\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"-1\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected, f\"Expected {expected}, got {solution(sample_input)}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"hu the tomb raider has entered a new tomb! it is full of gargoyles, mirrors, and obstacles. there is a door, with treasure beyond. hu must unlock the door guarding the treasure. on that door is written, in an ancient tongue, the secret to opening the door: every face of every gargoyle shall see a face of a gargoyle. this means that the gargoyles must be rotated in such a way that there is a path for a beam of light to connect each gargoyle's face to another gargoyle's face (possibly its own). the beam of light is reflected by mirrors. the floorplan of the tomb can be described as a rectangular n x m grid of cells: - a dot ('.') represents an empty cell. - a hash (#) represents an obstacle. - a slash (/ ) represents a double-sided mirror, as does a backslash (\\\\). - a character 'V' represents a gargoyle with two faces facing top and bottom. - a character 'H' represents a gargoyle with two faces facing left and right. - the tomb is surrounded by walls of mirrors. the following common sense about light is assumed: - light travels in a straight line through empty cells. - two beams of light can intersect without interfering with each other. - a '\\\\' mirror reflects light coming from the top/bottom/left/right to the right/left/bottom/top. a '/' mirror reflects light coming from the top/bottom/left/right to the left/right/top/bottom. - light is reflected by 180 degrees when it hits a wall (walls are all mirrors). - light is blocked by obstacles and gargoyles. - hu may rotate any gargoyle by 90 degrees. as time is running short, hu wants to know the minimum number of gargoyles that have to be rotated in order to unlock the treasure door. -----Input-----\nThe first line of input contains two space-separated integers n and m, where 1 <= n, m <= 500.\n\nEach of the next n lines contains a string s with the characters described above. This is the floorplan of the tomb.\n\n-----Output-----\nOutput a single integer, which is the minimum number of gargoyles that have to be rotated in order to unlock the treasure door. If the puzzle has no solution, output -1.\n\n-----Sample Explanation-----\n\nThe above are illustrations of Sample Input/Output 1 with the initial configuration on the left and the solution of the puzzle on the right. Three gargoyles are rotated to solve the puzzle.\n\n-----Examples-----\nSample Input 1:\n5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\nSample Output 1:\n3\n\nSample Input 2:\n2 5\nV...\\\nH...V\nSample Output 2:\n-1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Error: solution_1 should return {}\".format(sample_output_1)\nassert solution(sample_input_2) == sample_output_2, \"Error: solution_2 should return {}\".format(sample_output_2)"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\\"\\n\\n2 5\\nV...\\nH...V\\\"\") == 3, \"Error: Please provide the correct input\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(stdin) == \"AMBIGUOUS\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"The quick brown fox jumps over the lazy dog.\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nthe quick brown fox\\nmps over the l\\nthe lazy dog\\n') == 'The quick brown fox jumps over the lazy dog.'\n\nassert solution('4\\ncdefghi\\nefgijk\\nfghijx\\nabcdefg\\n') == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input_1.txt', 'r').read()) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(open('sample_input_2.txt', 'r').read()) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nthe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\") == \"The quick brown fox jumps over the lazy dog.\"\n\nassert solution(\"4\\ncdefghi\\nefgijk\\nefgijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nthe quick b\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"++-0-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\n\nfrom typing import List"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"1 1\\n2 2 2\\n-1 0 1\") == \"0+-\"\nassert solution(\"1 1\\n-1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1 1\") == \"0+-\"\nassert solution(\"1 1\\n1 1"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"The function returned '{solution(stdin)}', but expected '{expected_output}'.\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n-+0-\n\"\"\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"---0-+\\n\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\\nimpossible\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\n\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\"\nassert len(solution(sample_input_1)) == 5\nassert len(solution(sample_input_2)) == 3"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '--+0-'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 1\n    1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 2\n    2 3\n    2\n    \"\"\"\n) == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"1\\n4\\n4\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed: expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Solution should return 1\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2 2\\n2 2 2\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(data) == output, f\"Expected output: '{output}', but got: '{solution(data)}'.\"\nfor data, output in [\n    (\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\", \"YES\"),\n    (\"3 4\\nWWRR\\nWRRR\\nWRRR\", \"NO\"),\n]:\n    assert solution(data) == output, f\"Expected output: '{output}', but got: '{solution(data)}'.\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES', \"Test Case 1 failed\"\n\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO', \"Test Case 2 failed\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {t+1} failed: Expected {output}, got {solution(input())}\" for t, (input, output) in enumerate(zip(stdin.split('\\n'), stdout.split('\\n'))), f\"Test case {t+1} failed\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES\\n'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO\\n'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'3 3 5\\n1\\n2\\n3') == '1\\n'\nassert solution(r'6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '3\\n'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"output\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"The output of the solution is '{solution(stdin)}', but it should be '{expected_output}'\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, 5) == 1\nassert solution(6, 3, 5) == 3\nassert solution(6, 5, 5) == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"output\" # Place your solution here\n\nfrom typing import List"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\nGot: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    0 2\n    1 2\n    3 3\n''') == '''\n    3 2\n'''\n\nassert solution('''\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n''') == '''\n    12 3\n'''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '3 2\\n'\n\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n0 2\n1 2\n3 3\n5\n0 2\n1 3\n3 3\n7 5\n9 5\"\"\") == \"\"\"12 3\"\"\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, \"0 2\\n1 2\\n3 3\\n\") == \"3 2\"\nassert solution(5, \"0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"3 2\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '3 2\\n12 3'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3 2\\n12 3\\n', \"Your solution is incorrect\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Output {output} does not match expected output {expected_output}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100\\n000\\n01\\n01\\n01\\n', \"Output is incorrect.\"\n\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n', \"Output is incorrect.\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n000\\n100\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_cases/test_case1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"test_cases/test_case2.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '2\\n'\nassert solution(sample_input2) == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n2 3\\n') == '2'\nassert solution('4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 1\\n1 2\\n2 3\\n2 3\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\"\n) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Incorrect output for sample input {input_str}\" for input_str, output_str in [\n    (\"3 1\\n1 2\\n2 3\\n2 3\", \"2\\n\"),\n    (\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\", \"3\\n\"),\n]"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"90.00000000\"\nassert solution() == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input_, output in zip(input_list, output_list)\n\ninput_list = [\n    \"5 6 500\",\n    \"-100 0\",\n    \"-100 100\",\n    \"0 200\",\n    \"100 100\",\n    \"100 0\",\n    \"1 2\",\n    \"1 3\",\n    \"2 3\",\n    \"3 4\",\n    \"3 5\",\n    \"4 5\"\n]\n\noutput_list = [\n    \"90.00000000\",\n    \"126.86989765\"\n]"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n') == '90.00000000'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"90.00000000\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution for input {input()} is incorrect.\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"90.00000000\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"37\\n30014\\n\") == \"4\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\"\nassert solution(\"37\\n30014\\n37\\n30014\\n\") == \"4\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\"\nassert solution(\"37\\n30014\\n37\\n30014\\n37\\n30014\\n\") == \"4\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\"\nassert solution(\"37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n30014\\n37\\n3001"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"37\\n\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\\n\"\nassert solution(stdin=\"30014\\n\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1}: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3.5', \"Expected Output: 3.5, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"\nprint(f\"Got '{solution(stdin)}', expected '{expected}'\")"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3, 2) == 4.9, \"Sample Output 2 is incorrect\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.5\\n\", \"Expected: 3.5\\nGot: {}\".format(solution(stdin))"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.5\", \"The expected number of gems is incorrect.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"The output is {solution(stdin)}, but it should be {expected_output}.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Input {stdin} should output {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"19\", \"The output is incorrect\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\\n12 12 1 12\") == 19\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected {expected_output}, got {solution(stdin=input())}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\", \"Sample Input 1\"\nassert solution(\"12 12 1 12\") == \"4\\n\", \"Sample Input 2\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"19\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"The expected output is: 4\\n\"\nassert solution(\"1 12\") == \"4\\n\", \"The expected output is: 4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 5) == 4\nassert solution(1, 12) == 4"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Expected output: 4\"\nassert solution(\"1 12\") == \"4\\n\", \"Expected output: 4\"\n\nfrom typing import List\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5') == '4', \"Test failed for solution 1\"\nassert solution('1 12') == '4', \"Test failed for solution 2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2\n\nfrom typing import List"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('car') == '1', \"Output should be 1, not '{}'\".format(solution('car'))\nassert solution('cocar') == '2', \"Output should be 2, not '{}'\".format(solution('cocar'))"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"car\") == \"1\"\nassert solution(stdin=\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('cocaror') == '1'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed with input {input}, expected output {output}\" for input, output in zip(sample_inputs, sample_outputs)\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for the given input.\\nExpected output: {output}\\nGot: {solution(stdin=input())}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0', \"Output: {}, Expected: {}\".format(solution(stdin), '0')"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0', 'Your solution is incorrect. Please see the examples provided in the problem statement.'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 2 0 1\") == 8\nassert solution(\"5\\n1000000 1 1 1 1\") == 0"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 8"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 8\nassert solution(2) == 0\nassert solution(3) == 8\nassert solution(4) == 8\nassert solution(5) == 1\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\\n\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"zyz\"\nassert solution(sample_input2) == -1"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(26, 650) == \"zyz\"\nassert solution(26, 651) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'zyz'\nassert solution(stdin) == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"zyz\", \"Testcase 1 failed.\"\nprint(\"Testcase 1 passed.\")\n\nassert solution(input()) == \"zyz\", \"Testcase 2 failed.\"\nprint(\"Testcase 2 passed.\")"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed: expected output '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution: {output}, Input: {input()}\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"zyz\"\nassert solution(2) == \"zyz\"\nassert solution(3) == \"zyzyzx\"\nassert solution(4) == \"zyzyzx\"\nassert solution(5) == \"zyzyzx\"\nassert solution(6) == \"zyzyzx\"\nassert solution(7) == \"zyzyzx\"\nassert solution(8) == \"zyzyzx\"\nassert solution(9) == \"zyzyzx\"\nassert solution(10) == \"zyzyzx\"\nassert solution(11) == \"zyzyzx\"\nassert solution(12) == \"zyzyzx\"\nassert solution(13) == \"zyzyzx\"\nassert solution(14) == \"zyzyzx\"\nassert solution(15) == \"zyzyzx\"\nassert solution(16) == \"zyzyzx\"\nassert solution(17) == \"zyzyzx\"\nassert solution(18) == \"zyzyzx\"\nassert solution(19) == \"zyzyzx\"\nassert solution(20) == \"zyzyzx\"\nassert solution(21) == \"zyzyzx\"\nassert solution(22) == \"zyzyzx\"\nassert solution(23) == \"zyzyzx\"\nassert solution(24) == \"zyzyzx\"\nassert solution(25) == \"zyzyzx\"\nassert solution(26) == \"zyzyzx\"\nassert solution(27) == \"zyzyzx\"\nassert solution(28) == \"zyzyzx\"\nassert solution(29) == \"zyzyzx\"\nassert solution(30) == \"zyzyzx\"\nassert solution(31) == \"zyzyzx\"\nassert solution(32) == \"zyzyzx\"\nassert solution(33) == \"zyzyzx\"\nassert solution(34) == \"zyzyzx\"\nassert solution(35) == \"zyzyzx\"\nassert solution(36) == \"zyzyzx\"\nassert solution(37) == \"zyzyzx\"\nassert solution(38) == \"zyzyzx\"\nassert solution(39) == \"zyzyzx\"\nassert solution(40) == \"zyzyzx\"\nassert solution(41) == \"zyzyzx\"\nassert solution(42) == \"zyzyzx\"\nassert solution(43) == \"zyzyzx\"\nassert solution(44) == \"zyzyzx\"\nassert solution(45) == \"zyzyzx\"\nassert solution(46) == \"zyzyzx\"\nassert solution(47) == \"zyzyzx\"\nassert solution(48) == \"zyzyzx\"\nassert solution(49) == \"zyzyzx\"\nassert solution(50) == \"zyzyzx\"\nassert solution(51) == \"zyzyzx\"\nassert solution(52) == \"zyzyzx\"\nassert solution(53) == \"zyzyzx\"\nassert solution(54) == \"zyzyzx\"\nassert solution(55) == \"zyzyzx\"\nassert solution(56) == \"zyzyzx\"\nassert solution(57) == \"zyzyzx\"\nassert solution(58) == \"zyzyzx\"\nassert solution(59) == \"zyzyzx\"\nassert solution(60) == \"zyzyzx\"\nassert solution(61) == \"zyzyzx\"\nassert solution(62) == \"zyzyzx\"\nassert solution(63) == \"zyzyzx\"\nassert solution(64) == \"zyzyzx\"\nassert solution(65) == \"zyzyzx\"\nassert solution(66) == \"zyzyzx\"\nassert solution(67) == \"zyzyzx\"\nassert solution(68) == \"zyzyzx\"\nassert solution(69) == \"zyzyzx\"\nassert solution(70) == \"zyzyzx\"\nassert solution(71) == \"zyzyzx\"\nassert solution(72) == \"zyzyzx\"\nassert solution(73) == \"zyzyzx\"\nassert solution(74) == \"zyzyzx\"\nassert solution(75) == \"zyzyzx\"\nassert solution(76) == \"zyzyzx\"\nassert solution(77) == \"zyzyzx\"\nassert solution(78) == \"zyzyzx\"\nassert solution(79) == \"zyzyzx\"\nassert solution(80) == \"zyzy"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The solution does not match the expected output.\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case} failed\" for test_case, input_str, expected_output in enumerate(tests):\n    assert solution(input_str) == expected_output, f\"Test case {test_case} failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4\\n'\n\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\", \"Expected Output: 4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\", \"Expected Output: 8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"The output should be '4'.\"\n\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"The output should be '8'.\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Solution not correct\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\", \"Please implement the function solution()\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0, \"Test case 1 failed\"\nassert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == 4, \"Test case 2 failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Solution is not correct.\\nExpected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n\") == 2\nassert solution(\"2 3\\n4 5\\n6\\n\") == -1\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed: {solution(input_str)}!= {output_str}\" for i, (input_str, output_str) in enumerate(zip(input_list, output_list))"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == '0\\n'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '0'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n2 1 2 1 10\\n3 2 1 4\\n4 3 5\\n-1\\n\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n-1\\n\") == \"2\\ndef solution(stdin: str) -> str: \\n    pass\\n\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Incorrect output 1\"\nassert solution() == 2, \"Incorrect output 2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n3 2\\n') == ['1', '-2 -1']\nassert solution('1 2\\n3 4\\n') == ['3', '-1 1', '2 1', '0 -2']"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"your_answer\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2 3\n    3 2\n    '''\n) == '''\n1\n-2 -1\n'''\n\nassert solution(\n    '''\n    1 2\n    3 4\n    '''\n) == '''\n3\n-1 1\n2 1\n0 -2\n'''"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '24\\n'\nassert solution(open('input2.txt', 'r')) == '24\\n'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin}\\nExpected output: {expected_output}\\nGot output: {solution(stdin)}\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"For input {stdin}, expected output {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '24'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3, \"Sample Output 1: Should be 3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39, \"Sample Output 2: Should be 39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Incorrect output\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == 3\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_file) == output_file, \"Your solution is incorrect!\"\nelse:\n    print(\"Test case 1 passed!\")"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n', 'Please provide the correct input'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n', 'Please provide the correct input'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 8 4 -2 0 0 -3 2 0 0 3') == 5.2696518641\nassert solution('1 8 9 3 -14 -14 14 -14 0 20') == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5.2696518641, \"Your solution is not correct\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    '''\n) == '5.2696518641'\n\nassert solution(\n    '''\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    '''\n) == '9'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"your_answer_here\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"5.2696518641\"\nassert solution(input2) == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n8\\n4\\n'\nassert solution() == '6\\n4\\n24\\n'\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"1\\n8\\n4\"\nassert solution(sample_input_2) == \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution =="
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {test_case_number} failed\"\ntest_case_number += 1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\"\n) == \"1\\n8\\n4\"\n\nassert solution(\n\"\"\"\n3\n4 1 1\n5 2 3\n5 0 3\n\"\"\"\n) == \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == 1\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == 6\nassert solution('1\\n1 1 1\\n2 0 2\\n3 1 1') == -1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1\\n8\\n4'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution() == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\nassert solution() == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n\nfrom typing import List"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3 2') == '3'\nassert solution(stdin='6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9567+1085=10652\\nimpossible\"\nassert solution(input()) == \"2+1=3\\n2+1=3\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Invalid solution\"\nassert solution(\"A+A=A\") == \"impossible\", \"Invalid solution\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Solution should be correct\"\nassert solution(\"A+A=A\") == \"impossible\", \"Solution should be impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 6\nassert solution(4) == 12\nassert solution(5) == 18"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"14\", \"Expected: 14, Actual: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 14, \"Incorrect output\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 2 3') == '14\\n'\n\nassert solution('5\\n1 1 2 1 1') == '1\\n'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"14\\n\", \"Testcase 1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(5) == 1\nassert solution(10) == 1\nassert solution(100) == 1\nassert solution(1000) == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 88\n\nassert solution() == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}, Diff: {abs(output - solution(input()))}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 88\nassert solution == 88\nassert solution == 88\nassert solution == 88\nassert solution == -1\nassert solution == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '88'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '88'\nassert solution(open('sample_input_1.txt', 'r').read()) == '88'\nassert solution(open('sample_input_2.txt', 'r').read()) == '-1'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.000\"\nassert solution(stdin) == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == 0.000"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.000\", \"The given input is incorrect.\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0.000, \"Incorrect solution. Please see the problem statement for the correct solution.\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1\\n1 1') == '0.000'\nassert solution('2\\n1 99999\\n99999 99999') == '9999700002.000'\n\nSolution:\nWe can solve this problem by first sorting the cheetahs based on their start times. Then we can calculate the minimum length of the running pack. We will use a variable `L` to store the minimum length, and we will use a variable `t_last` to keep track of the last time of release from the start box.\n\nLet's write the code for the solution.<|im_sep|>"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"Sample Input 1\\n2\\n1 1\\n1 1\\nSample Output 1:\\n0.000\\n\\nSample Input 2\\n2\\n1 99999\\n99999 99999\\nSample Output 2:\\n9999700002.000\") == \"0.000\"\\n\\n# Expected Output'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Possible\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed\"\nfor test_case in range(1, 2):\n    assert solution(stdin) == expected, f\"Test case {test_case} failed\"\n    solution(stdin)"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution() == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == 3\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'  # Solution 1\nassert solution(open('input2.txt', 'r')) == 'Infinity\\n'  # Solution 2"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\"\nassert solution(\"3 1\\n1\\n\") == \"000\"\nassert solution(\"6 3\\n4 2 1\\n\") == \"001\"\nassert solution(\"5 2\\n3 1 4 2\\n\") == \"101\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"impossible\"  # Example 1"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\"\nprint(\"impossible\")"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n6\\n', 'Sample Input 1\\nSample Output 1\\n') == 'impossible'\nassert solution('3 1\\n1\\nSample Input 2\\nSample Output 2\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', but got: '{solution(stdin)}'\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"6 1\\n6\\nSample Input 1:6 1\\n6\\nSample Output 1:impossible\\n\\n6 1\\n6\\nSample Input 2:3 1\\n6\\nSample Output 2:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") == \"impossible\\n\"\n\nassert solution(stdin=\"3 1\\n1\\nSample Input 1:3 1\\n1\\nSample Output 1:000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\n99') == '1', \"Test 1 failed\"\nassert solution('90\\n10') == '10', \"Test 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n99') == '1', \"Sample Input 1 should return '1'\"\nassert solution('90\\n10') == '10', \"Sample Input 2 should return '10'\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n99') == '1\\n'\nassert solution('90\\n10') == '10\\n'"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('90') == '10'"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\\n\"\nassert solution(\"90\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\") == 1, \"Expected output: 1, actual output: {}\".format(solution(\"10\"))  # 1\nassert solution(\"99\") == 1, \"Expected output: 1, actual output: {}\".format(solution(\"99\"))  # 1"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'10\\n99') == '1\\n', \"Expected '1\\n' but got '{}'\".format(solution(r'10\\n99'))\n\nassert solution(r'90\\n10') == '10\\n', \"Expected '10\\n' but got '{}'\".format(solution(r'90\\n10'))"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\"\nassert solution(\"2\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\nassert solution(stdin) == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"The correct answer is 2.\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"The given code is incorrect.\"\nprint(expected_output)"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"6 1\\nvelvet\\n1 6\") == 7\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 11\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('begining') == '5'\nassert solution('1 5 4 8 1 9') == '5\\n11\\n16'\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5 4 8 1 9\") == 11\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('beginning') == 5\nassert solution('1 5') == 11\nassert solution('4 8') == 16"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"16\"\nassert solution(\"velvet\") == \"7\"\nassert solution(\"abc\") == \"0\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 5\nassert solution(\"velvet\") == 7\nassert solution(\"1 6\\n\") == 7\n\nsolution(\"1 6\\n\")"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5\\n11\\n16'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\nassert solution(input1) == output1\\n# Test case 2\\nassert solution(input2) == output2\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1') == 2\nassert solution('2 3\\n1 23\\n2 17') == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1''') == '2'\n\nassert solution('''2 3\n1 23\n2 17''') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case_index+1} failed.\" for test_case_index, (input_data, output_data) in enumerate(zip(input_data, output_data))"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input 1') == 'Output 1\\n2\\n'\nassert solution('Input 2') == 'Output 2\\n23\\n'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '23' # expected output: 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n3 1\\n2 2\\n1 1\\n') == '2\\n'\nassert solution('2 3\\n1 23\\n2 17\\n') == '23\\n'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9.476048311178, \"Your implementation is incorrect.\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '0.0000000000', 'Incorrect output for sample input 1'\nassert solution(sample_input2) == '9.476048311178', 'Incorrect output for sample input 2'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"0.0000000000\"\nassert solution(input2) == \"9.476048311178\"\n\nfrom typing import List"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.0000000000"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0\n    2 0\n    2 2\n    0 2\n    0 -1 0 3\n    \"\"\"\n) == \"0.0000000000\"\n\nassert solution(\n    \"\"\"\n    6\n    0 1\n    0 4\n    3 6\n    7 5\n    4 2\n    7 0\n    5 7 2 0\n    \"\"\"\n) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '0.0000000000'\n\nsolution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n')"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9.476048311178, \"Test failed\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"8.0000000000\", sample_output_1\nassert solution(sample_input_2) == \"0.0200000000\", sample_output_2\n\nsample_input_1 = \"\"\"5\n2 0\n1 1\n0 2\n-2 0\n0 -2\"\"\"\nsample_output_1 = \"8.0000000000\"\n\nsample_input_2 = \"\"\"5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\"\"\"\nsample_output_2 = \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    -2 0\n    0.2 0.00\n    0 -0.2\n    0.0 0\n    -0.2 0\n    \"\"\") == \"0.0200000000\"\n\nassert solution(\n    \"\"\"\n    5\n    2 0\n    1 1\n    0 2\n    -2 0\n    0 -2\n    \"\"\") == \"8.0000000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '8.0000000000'\nassert solution(sample_input2) == '0.0200000000'\n\nfrom typing import List"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8.0000000000\", \"The output should be 8.0000000000, but it is %s.\" % solution(stdin)\nassert solution(stdin) == \"0.0200000000\", \"The output should be 0.0200000000, but it is %s.\" % solution(stdin)"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0\\n1\\n0\\n-2\\n0\\n0.0000000000') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Test failed\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"The solution for the given input {input_str} is incorrect. Expected output: {output_str}, but got: {solution(input_str)}\"\n\ninput_str = \"\"\"\n9 4 3\n1 1 9 9 1 6 6 39 9\n\"\"\"\n\noutput_str = \"2\"\n\nassert solution(input_str) == output_str, f\"The solution for the given input {input_str} is incorrect. Expected output: {output_str}, but got: {solution(input_str)}\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2', 'Your solution is incorrect!'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2' # expected output: 2\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3.666666667\", \"Test failed\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 2\n1 2 3\n''') == '3.666666667'\nassert solution('''\n4 11 4\n10 10 10 10\n''') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3.666666667\\n\", \"Your solution is incorrect.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.666666667\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.000000000\", \"Expected output: 2.000000000\\nActual output: \" + solution(stdin)"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 42\") == \"2\", \"Test 1 failed\"\nassert solution(\"5 123456789\") == \"16317634\", \"Test 2 failed\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"16317634\\n\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2 42') == '2'\nassert solution(stdin='5 123456789') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 8\nassert solution(4) == 64\nassert solution
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"16317634\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Test case {test_case} failed\"\nfor test_case, input, output in test_cases:\n    assert solution(input) == output, f\"Test case {test_case} failed\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output the maximum number of points you can score.'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Here's the Python code for the solution:"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 1 0 0 2\n    1 2 2\n    1 1 1\n    ''') == '0'\n\nassert solution('''\n    3 1 1 1 8\n    0 1 1\n    1 0 1\n    2 1 1\n    1 2 1\n    1 2 2\n    2 2 3\n    0 2 5\n    1 2 6\n    ''') == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0\\n'\nassert solution(open('sample_input_1.txt', 'r').read()) == '0\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 1, 10, 10) == 3, \"Expected output 3, but got: {}\".format(solution(5, 1, 10, 10))  # Corrected output: 3\nassert solution(5, 1, 100, 100) == 3, \"Expected output 3, but got: {}\".format(solution(5, 1, 100, 100))  # Corrected output: 3\nassert solution(5, 1, 1000000000, 1000000000) == 3, \"Expected output 3, but got: {}\".format(solution(5, 1, 1000000000, 1000000000))  # Corrected output: 3"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 1 10 10\n    8 8\n    5 1\n    4 6\n    4 7\n    7 9\n''') == '''\n3\n'''\n\nassert solution('''\n    5 1 100 100\n    27 75\n    79 77\n    40 93\n    62 41\n    52 45\n''') == '''\n3\n'''"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution does not return the expected output.\\nExpected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Expected output 3, but got {}\".format(solution())"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\" # Correct output\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\" # Correct output"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2, \"Expected Output: 2, Actual Output: {}\".format(solution(\"ABC\"))\nassert solution(\"ABBBAAAA\") == 3, \"Expected Output: 3, Actual Output: {}\".format(solution(\"ABBBAAAA\"))"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\\nA\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nA\\n') == '3\\n'\nassert solution('5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\\n') == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\") == \"3\\n\"\nassert solution(\"5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, but got {solution(stdin)}.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nAAA') == '3'\nassert solution('5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '3' # Solution"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0.1', \"Your solution is incorrect\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\\n\"\nassert solution(stdin=\"100 10 2 1\\n100 5 3 1\\n\") == \"0.1\\n0.0560560561\\n\"\nassert solution(stdin=\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\\n\"\nassert solution(stdin=\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.1, \"0.1\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.1', 'Your code is incorrect.'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"0.0\"  # Input 1\nassert solution(None) == \"0.0000000000\"  # Input 2"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 0\nassert solution('ABABABcABABAbAbab') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"ABABABcABABAbAbab\"\n) == \"0\\n5\\n\", \"Test 1\"\n\nassert solution(\n    \"ABABABcABABAbAbab\"\n) == \"0\\n5\\n\", \"Test 2\"\n\nassert solution(\n    \"ABABABcABABAbAbab\"\n) == \"0\\n5\\n\", \"Test 3\"\n\nassert solution(\n    \"ABABABcABABAbAbab\"\n) == \"0\\n5\\n\", \"Test 4\"\n\nassert solution(\n    \"ABABABcABABAbAbab\"\n) == \"0\\n5\\n\", \"Test 5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ADOBECODEBANC\") == 3\nassert solution(\"ABC\") == 0\nassert solution(\"ABA\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('AAAAABABCCBAABBABBB') == 5\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ACBEABcABABABABab\") == \"5\"\nassert solution(\"ACBEABcABABABABab\") == \"5\"\nassert solution(\"ACBEABcABABABABab\") == \"5\"\nassert solution(\"ACBEABcABABABABab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('AABABABB') == 1\nassert solution('abcABC') == 2\nassert solution('abcdABCD') == 2"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"5 4\\n0\\n1\\n1\\n2\\n3\\n4\\n5\") == \"3\\n\"\nassert solution(\"3 2\\n0\\n1\\n2\\n3\") == \"3\\n\"\nassert solution(\"3 5\\n0\\n0\\n0\\n0\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\nA cat lives in a tree that has 3 nodes. She will demarcate her territory by marking some of the tree nodes. Marked nodes may not be closer to each other than distance 1, or the smell will be too overwhelming. Find the maximum number of nodes that the cat can mark.\") == \"3\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    0\n    0\n    1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 1\n    0\n    0\n    1\n    1\n    2\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    5 2\n    0\n    0\n    1\n    1\n    2\n    2\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    0\n    0\n    1\n    1\n    2\n    2\n    2\n    2\n    2\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'4 3\\n0\\n0\\n1\\n') == '2\\n', \"Test Failed\"\nassert solution(b'10 1\\n0\\n1\\n0\\n') == '4\\n', \"Test Failed\"\nassert solution(b'10 3\\n0\\n0\\n1\\n') == '2\\n', \"Test Failed\"\nassert solution(b'5 1\\n0\\n1\\n') == '1\\n', \"Test Failed\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"The correct output should be 2.\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == 2, \"Test failed\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"4 3\\n0\\n1\\n1\") == \"1\"\nassert solution(\"4 3\\n0\\n2\\n1\") == \"0\"\nassert solution(\"4 3\\n0\\n1\\n2\") == \"0\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('3 2 1 2 2 4 5\\n5 1 4 3 2 6 7 9\\n1 2 3 4 5 6 7 8') == '2\\nP1: 30 1 3 4 5 6 7\\nP2: 30 1 3 4 5 6 7\\n'\nassert solution('4 4 4 4 4 4 4 4\\n2 1 2 2 2 2 2\\n1 1 1 1 1 1 1\\n2 2 2 2 2 2 2\\n3 3 3 3 3 3 3\\n') == '3\\nP0: 20 1 2 3 4 5\\nP1: 30 1 3 4 5 6\\nP2: 40 1 4 5 6 7\\nP3: 50 1 5 6 7 8\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '''\n1\nP0: 22 1 4 2 6 -1 0\n'''\n\nfrom typing import List"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\\n# Test case 2\\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\\n# Test case 3\\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"2\\nP1: 12 2 4 2 6 -1 0\\nP2: 10 1 2 2 1 1 0\\nP3: 5 3 1 1 8 1 0\\nP4: 4 1 5 2 3 1 0\\nP5: 4 2 4 1 8 -1 0\\nP6: 2 3 4 1 3 -2 0\\nP7: 2 4 3 2 8 1 0\\nP8: 1 4 3 2 3 -2 0\\nP9: 1 3 1 4 8 -1 0\\nP10: 1 3 2 3 4 1 0\\nP11: 2 1 5 2 4 1 0\\nP12: 2 2 4 1 5 1 0\\nP13: 3 2 4 1 1 1 0\\nP14: 3 1 3 2 4 1 0\\nP15: 2 1 1 2 3 1 0\\nP16: 2 2 2 1 1 1 0\\nP17: 1 2 2 1 4 1 0\\nP18: 1 1 1 2 3 1 0\\nP19: 1 1 2 3 1 1 0\\nP20: 1 2 1 1 4 1 0\\nP21: 1 2 1 2 1 1 0\\nP22: 1 1 1 1 4 1 0\\nP23: 2 2 2 1 2 1 0\\nP24: 2 1 2 1 1 1 0\\nP25: 1 1 2 1 4 1 0\\nP26: 2 2 1 2 1 1 0\\nP27: 2 1 1 1 2 1 0\\nP28: 2 1 1 2 1 1 0\\nP29: 2 1 2 1 2 1 0\\nP30: 2 2 1 1 1 1 0\\nP31: 2 2 1 2 1 1 0\\nP32: 2 1 1 2 1 1 0\\nP33: 2 1 1 1 2 1 0\\nP34: 2 2 1 2 2 1 0\\nP35: 2 2 1 1 2 1 0\\nP36: 2 1 1 1 1 1 0\\nP37: 2 1 1 2 1 1 0\\nP38: 2 1 2 1 1 1 0\\nP39: 2 1 2 2 1 1 0\\nP40: 2 1 1 1 2 1 0\\nP41: 2 1 1 2 1 1 0\\nP42: 2 2 1 2 2 1 0\\"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 8 8 8\n    12 4 1 4 5 3 -2\n    10 1 2 1 8 -6 1\n    \"\"\"\n) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test Case Failed for Input: {input_data}, Expected Output: {expected_output}, Actual Output: {solution(input_data)}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [1, 2, 3, 4]\nprint(\"All tests passed.\")"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Test Failed\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1', '2', '3', '4']"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2\\n3\" # Solution 1"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n2\\n3\\n\" # Example output"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\", \"Expected output: 1\\n2\\n3\\n, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1 2 3 4 5 6\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2\\n'\n\nassert solution('''\n6\n1 5 4 3 2 6\n2 3 5 4 1 6\n''') == '3\\n'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '3\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1\\n5\\n4\\n3\\n2\\n6\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5\\n1\\n2\\n5\\n6\") == \"2\\n5\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\") == \"3\\n4\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n5\\n6\\n1\") == \"5\"\nassert solution(\"100001\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == ['2']\nassert solution('10\\n1 1 2 3 4 5 6 7 8 9') == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\nassert solution('100001\\n1 2 3 4 5 6 7 8 9') == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\nassert solution(\"1 1 2 3 4 5 6\") == \"5\"\nassert solution(\"1 2 2 3 4 4 5 6 7 8 9\") == \"13\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, \"The solution is incorrect\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 60, \"Test Case 1 Failed\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {input()}, expected {expected}, output {solution(input())}\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\nassert solution(\"4 4 3\\n1 50 2 30\\n2 40 3 20\\n3 30 1 15\\n4 20 1 90\\n5 10 1 60\\n6 70 2 50\\n7 60 1 40\\n8 50 1 30\\n9 40 1 20\\n10 30 1 10\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n\"\"\") == \"60\\n\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60\\n'\n\nfrom typing import List"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\\n\"\nassert solution(\"3 3 1\\n1 30 1 50\\n1 20 2 50\\n2 30 2 50\") == \"-1\\n\"\nassert solution(\"3 3 2\\n1 30 1 50\\n2 70 2 10\\n3 20 3 80\") == \"250\\n\"\nassert solution(\"3 3 1\\n1 30 1 50\\n2 70 1 10\\n3 20 2 80\") == \"-1\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"60\", \"Output should be 60, but got {}\".format(solution())"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"sample_input: {sample_input}, expected_output: {expected_output}\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\"\nprint(\"Success\")"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''Case #1: 1\nCase #2: 2'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    3\n    5000 0 0\n    0 2000 0\n    0 0 4000\n''') == '''\nCase #1: 1\nCase #2: 2\n'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\") == \"Case #1: 1\\n\"\nassert solution(\"3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == '''\nCase #1: 1\nCase #2: 2\n'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '6 6 6 1', 'The solution should be \"6 6 6 1\".'\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(' +1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6') == '6 6 6 1', 'Test case 1 failed'\n\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1', 'Test case 2 failed'\n\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1', 'Test case 3 failed'\n\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1', 'Test case 4 failed'\n\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C "
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\"\n) == \"6 6 6 1\\n\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('+\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == \"6 6 6 1\"\nassert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6 6 6 1\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == 20.83, \"Your code is incorrect.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"20.83\", \"Test case not passing\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20.83\\n\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"4 4\\n1 2 3 4 5 6 7 8 9\") == \"1\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\nassert solution(\"5 6\\n1 2 3\\n4 5 6\") == 21\nassert solution(\"1 1\\n1 1\") == 1"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"\\n\".join([str(x) for x in range(1, 21)])+\"\\n\".join([str(x) for x in range(1, 21)])) == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49\\n'\nassert solution('3 2\\n1 2 5\\n7 6 4\\n9 8 3') == '9\\n'\nassert solution('3 1\\n1 2 5\\n7 6 4\\n9 8 3') == '0\\n'\nassert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '9\\n'\nassert solution('3 2\\n1 2 5\\n7 6 4\\n9 8 3') == '9\\n'\nassert solution('3 1\\n1 2 5\\n7 6 4\\n9 8 3') == '0\\n'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"3 3\n1 2 5\n7 6 4\n9 8 3\"\"\"\n) == \"49\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '##CROSSWORD####'\nassert solution() == '#CROSSWORD##'\nassert solution() == '##CROSSWORD###'\nassert solution() == '##CROSSWORD##'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1 15\n##.........####\n1\nCROSSWORD''') == '##CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"CROSSWORD\"\nassert solution(open('input2.txt', 'r').read()) == \"TURN\"\nassert solution(open('input3.txt', 'r').read()) == \"ISTIM\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 15\\n#..#..#..#\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31, \"Test case 1 failed\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31\nprint(\"All tests passed!\")"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == 31\nassert solution('1 1\\n1 1') == 0\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Test Case 1 Failed\"\nassert solution(input()) == \"3\", \"Test Case 2 Failed\"\nassert solution(input()) == \"1\", \"Test Case 3 Failed\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"2 3\\nBWW\") == \"2\\n\"\nassert solution(\"5 2\\nBWWWW\") == \"4\\n\"\nassert solution(\"1 1\\nBW\") == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"10 3\\nWWWWWWWWWW\") == \"128\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\" # Your code goes here"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n' # expected output: 2"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"3 2\\nWWBBWB\") == \"2\"\nassert solution(\"4 3\\nBBWW\") == \"4\"\nassert solution(\"3 4\\nWWBBWB\") == \"4\"\nassert solution(\"4 5\\nWWBBWB\") == \"5\"\nassert solution(\"5 6\\nWWBBWB\") == \"6\"\nassert solution(\"6 7\\nWWBBWB\") == \"7\"\nassert solution(\"7 8\\nWWBBWB\") == \"8\"\nassert solution(\"8 9\\nWWBBWB\") == \"9\"\nassert solution(\"9 10\\nWWBBWB\") == \"10\"\nassert solution(\"10 11\\nWWBBWB\") == \"11\"\nassert solution(\"11 12\\nWWBBWB\") == \"12\"\nassert solution(\"12 13\\nWWBBWB\") == \"13\"\nassert solution(\"13 14\\nWWBBWB\") == \"14\"\nassert solution(\"14 15\\nWWBBWB\") == \"15\"\nassert solution(\"15 16\\nWWBBWB\") == \"16\"\nassert solution(\"16 17\\nWWBBWB\") == \"17\"\nassert solution(\"17 18\\nWWBBWB\") == \"18\"\nassert solution(\"18 19\\nWWBBWB\") == \"19\"\nassert solution(\"19 20\\nWWBBWB\") == \"20\"\nassert solution(\"20 21\\nWWBBWB\") == \"21\"\nassert solution(\"21 22\\nWWBBWB\") == \"22\"\nassert solution(\"22 23\\nWWBBWB\") == \"23\"\nassert solution(\"23 24\\nWWBBWB\") == \"24\"\nassert solution(\"24 25\\nWWBBWB\") == \"25\"\nassert solution(\"25 26\\nWWBBWB\") == \"26\"\nassert solution(\"26 27\\nWWBBWB\") == \"27\"\nassert solution(\"27 28\\nWWBBWB\") == \"28\"\nassert solution(\"28 29\\nWWBBWB\") == \"29\"\nassert solution(\"29 30\\nWWBBWB\") == \"30\"\nassert solution(\"30 31\\nWWBBWB\") == \"31\"\nassert solution(\"31 32\\nWWBBWB\") == \"32\"\nassert solution(\"32 33\\nWWBBWB\") == \"33\"\nassert solution(\"33 34\\nWWBBWB\") == \"34\"\nassert solution(\"34 35\\nWWBBWB\") == \"35\"\nassert solution(\"35 36\\nWWBBWB\") == \"36\"\nassert solution(\"36 37\\nWWBBWB\") == \"37\"\nassert solution(\"37 38\\nWWBBWB\") == \"38\"\nassert solution(\"38 39\\nWWBBWB\") == \"39\"\nassert solution(\"39 40\\nWWBBWB\") == \"40\"\nassert solution(\"40 41\\nWWBBWB\") == \"41\"\nassert solution(\"41 42\\nWWBBWB\") == \"42\"\nassert solution(\"42 43\\nWWBBWB\") == \"43\"\nassert solution(\"43 44\\nWWBBWB\") == \"44\"\nassert solution(\"44 45\\nWWBBWB\") == \"45\"\nassert solution(\"45 46\\nWWBBWB\") == \"46\"\nassert solution(\"46 47\\nWWBBWB\") == \"47\"\nassert solution(\"47 48\\nWWBBWB\") == \"48\"\nassert solution(\"48 49\\nWWBBWB\") == \"49\"\nassert solution(\"49 50\\nWWBBWB\") == \"50\"\nassert solution(\"50 51\\nWWBBWB\") == \"51\"\nassert solution(\"51 52\\nWWBBWB\") == \"52\"\nassert solution(\"52 53\\nWWBBWB\") == \""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0.556', \"The output is not correct. Please fix it.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0.556', 'Incorrect output'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.556\", \"The correct output must be 0.556. However, it is: \" + str(solution())"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.556\"\nprint(\"Correct\")"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 0.556\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"Expected output: 3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 4 3 2\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())} instead\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Incorrect output for the given input.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data} but got {solution(input_data)}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string=input()) == output_string, f\"Expected {output_string}, got {solution(input_string=input())}.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"10 5 3 2\") == \"23\"\nassert solution(\"1 10 3 2\") == \"14\"\nassert solution(\"10 10 10 10\") == \"300\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"2\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"3\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13\\n'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"13\"\nprint(\"pass\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"13\"\nprint(\"Success!\")\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3.141593\nassert round(solution, 6) == 3.141593\nassert abs(solution - 3.141593) <= 1e-6"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n2\\n13.141593 20.123458\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n3\\n13.141593 20.123457\\n4\\n13.141593 20.123458\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n4\\n13.141593 20.123457\\n5\\n13.141593 20.123458\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n5\\n13.141593 20.123457\\n6\\n13.141593 20.123458\\n7\\n13.141593 20.123458\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123457\\n6\\n13.141593 20.123457\\n7\\n13.141593 20.123458\\n8\\n13.141593 20.123458\\n9\\n13.141593 20.123458\\n10\\n13.141593 20.123458\\n11\\n13.141593 20.123459\\n12\\n13.141593 20.123459\\n13\\n13.141593 20.123459\\n14\\n13.141593 20.123460\\n15\\n13.141593 20.123460\\n16\\n13.141593 20.123460\\n17\\n13.141593 20.123461\\n18\\n13.141593 20.123461\\n19\\n13.141593 20.123461\\n20\\n13.141593"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n-13.141593 20.123456\\n\") == 13.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 -20.123456\\n\") == 13.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 -20.123456\\n\") == 13.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n3\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n3\\n13.141593 -20.123456\\n\") == 13.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n3\\n13.141593 20.123456\\n4\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n3\\n13.141593 20.123456\\n4\\n13.141593 -20.123456\\n\") == 13.141593\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3.141593\nprint(\"All tests passed!\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3.141593\\n\", \"Test case failed\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\n\nassert solution(\"5.678901 2.345678\\n4.567890 1.234567\\n1.111111 0.000000\\n\") == \"2.222222\"\n\nassert solution(\"4.567890 1.234567\\n1.111111 0.000000\\n-1.000000 0.000000\\n\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\\n\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.12"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"5 2\\n1.2 2.4\\n3.6 4.8\\n-1.8 -2.6\\n2.8 2.4\") == 5.0\nassert solution(\"1 10\\n10.000000 100.000000\\n-1.0 1.0\\n-1.0 1.0\\n-1.0 1.0\") == 0.0"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == 2.549816\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == 1.814172\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\\n\") == 1.225764\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\\n\") == 0.5\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\\n\") == 0.0"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3.141593\", \"Please solve this problem\"\nprint(\"Test passed\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n4 4\n2\n\"\"\") == \"2.13333333333333\"\nassert solution(\"\"\"\n4\n5 6 7 8\n2\n4 5\n3\n5\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n3\n4 4\n4\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n4\n5 6 7 8\n4\n\"\"\") == \"2.5\"\nassert solution(\"\"\"\n2\n2\n\"\"\") == \"0.0\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\" # Greedy approach does not exist"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.13333333333333\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"4\\n1 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2\") == \"2.13333333333333\\n\"\nassert solution(\"5 5\\n1\\n3\\n4\\n5\\n6\") == \"impossible\\n\"\nassert solution(\"5 1\\n1\\n2\\n3\\n4\\n5\") == \"2.0\\n\"\nassert solution(\"10 10\\n10\\n10\\n10\\n10\\n10\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"3\\n4 4\\n4\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.13333333333333\", \"Test case 1 failed\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    n = int(stdin.strip())\n    distances = []\n    for _ in range(n-1):\n        distances.append(int(stdin.strip()))\n    avg_distances = sum(distances)/n\n    return f\"{avg_distances:.9f}\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '2.13333333333333'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == 18\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(12) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == '18'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == \"27\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\nassert solution('5\\n16 F tennis\\n25 M dance\\n15 M basketball\\n00 M ice hockey\\n') == '5'\nassert solution('1\\n25 F gay\\n15 M lesbian\\n') == '2'\nassert solution('5\\n25 F bisexual\\n15 M bisexual\\n00 M lesbian\\n') == '2'\nassert solution('5\\n25 F bisexual\\n15 M bisexual\\n25 M bisexual\\n') == '2'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"5\\n25 M classicism art\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n50 F baroque baseball\") == \"3\"\nassert solution(\"6\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n50 F baroque baseball\\n100 F baroque football\") == \"3\"\nassert solution(\"1\\n15 M classicism art\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"2\"\nassert solution(\"1\\n15 M classicism art\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n50 F baroque baseball\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nprint(\"Correct!\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == ['2', '1', '2']"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n1'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, Got: {solution(input())}\"\nfor test_case in [\n    (5, \"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\"),\n    (1, \"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\"),\n    (1, \"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\"),\n    (1, \"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\"),\n    (1, \"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\"),\n]:\n    assert solution(test_case[0]) == test_case[1], f\"Test case failed for test case {test_case[0]} with output: {test_case[1]}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    a 0\n    a 1\n    b 2\n    c 2 3\n    b 4\n''') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'a 0\\na 1\\nb 2\\nc 2 3\\nb 4'\nassert solution(2) == 'a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 3'\nassert solution(3) == 'a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 3\\nc 4 3\\nb 3\\nb 4'\nassert solution(4) == 'a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 3\\nc 4 3\\nb 3\\nb 4\\nb 3\\nb 4'\nassert solution(5) == 'a 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 3\\nc 4 3\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3\\nb 4\\nb 3"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output {output} is not correct. Please check the provided code.\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\" + \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5\nprint(\"All Tests Passed\")\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5\nassert solution(\"7 5\\n80 85 80 80\\n75 90 70 100\\n85 85 75 90\\n90 90 90 90\\n100 90 90 100\\n\") == 15\nassert solution(\"100 100 0 0\") == 1000\nassert solution(\"1 1\") == 0\nassert solution(\"100 0\") == 1000\nassert solution(\"1 1000\") == 1000\nassert solution(\"100 1000\") == 1000\nassert solution(\"5 10\") == 50\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('5 4\\n3 1\\n2 4\\n2 1\\n2 3\\n') == '4'\nassert solution('2 2\\n3 1\\n1 1\\n1 3\\n2 3\\n') == '3'\nassert solution('2 3\\n2 1\\n1 1\\n1 3\\n2 3\\n') == '3'\nassert solution('2 3\\n1 1\\n1 2\\n2 3\\n2 2\\n') == '3'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"1422997740\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"1422997740\"\nassert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"1422997740\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\"\nassert solution(\"5 3\\n2 1\\n3 4\\n1 2\") == \"4\\n\"\nassert solution(\"6 3\\n1 2\\n2 3\\n1 3\\n3 4\") == \"4\\n\"\nassert solution(\"6 3\\n1 2\\n2 3\\n1 3\\n3 4\") == \"3\\n\"\nassert solution(\"6 3\\n1 2\\n2 3\\n1 3\\n3 4\") == \"2\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n1 3\\n3 4\") == \"2\\n\"\nassert solution(\"5 3\\n2 1\\n3 4\\n1 2\") == \"2\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"The function is not correct.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 4, \"Incorrect solution\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 5\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n''') == '4\\n'\n\nassert solution('''\n    4 6\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n''') == '1\\n'\n\nassert solution('''\n    5 5\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n''') == '1\\n'\n\nassert solution('''\n    5 5\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n    4 5\n''') == '0\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == 4, \"Output 4 is expected.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == 4, \"The output should be 4, but it's: \" + str(solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n'))\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case not passed\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"4\\n10 8\\n8 10\"\nassert solution(\"11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\") == \"10\\n24 22\\n22 24\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"2\\n3 4\\n2 4\\n\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"3 4\\n2 4\\n\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 1\\n\") == \"2\\n4 6\"\n\nfrom typing import List"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    Sample Input:\n    4\n    1 2\n    2 3\n    3 4\n    Sample Output:\n    2\n    3 4\n    2 4\n    \"\"\"\n) == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n6\\n7\\n7\\n8\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"The output should be 5, but it is {}\".format(solution())"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == 5\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n\") == 0"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '5\\n'  # Correct output\n\nsample_input = '''\n2 2\n1 3\n2 1\n3 5\n7 2\n'''"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\\n\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\") == \"0\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(\"ok\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '5\\n'\nassert solution('5 2\\n2 1\\n1 3\\n5 2\\n4 1\\n') == '0\\n'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_case.txt\").read()) == \"2\\n\"\nassert solution(open(\"test_case2.txt\").read()) == \"4\\n\"\nassert solution(open(\"test_case3.txt\").read()) == \"6\\n\"\nassert solution(open(\"test_case4.txt\").read()) == \"6\\n\"\nassert solution(open(\"test_case5.txt\").read()) == \"8\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n1 1\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 3\") == \"2\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"0\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n2 2\\n3 2\\n1 2\\n2 3\\n3 2\\n1 3\\n0 3\\n2 3\\n3 1\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4 3 3\n    1 2\n    2 1\n    2 0\n    3 2\n    3 0\n    4 2\n    4 0\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    0 0\n    0 1\n    1 0\n    1 1\n    0 1\n    1 2\n    2 1\n    2 2\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\\n\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 W\") == \"SAFE\\n\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 C\") == \"SAFE\\n\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Case Failed: {input()}!= {output}\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 W\\n1 W') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\\n4 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'\nassert solution('3 2\\nC C\\nW C\\nC W\\nW C\\nC C') == 'SAFE'\nassert solution('3 1\\nW C\\nW C\\nW C\\nW C\\nW C') == 'SAFE'\nassert solution('4 4\\n3 C\\n2 C\\n1 C') == 'SAFE'\nassert solution('3 0\\nW C\\nW C\\nW C\\nW C\\nW C') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'GHOST', 'Expected GHOST, got {} instead'.format(solution())"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 2.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 3.00\") == \"no fika\"\nassert solution(\"3 3\\n0.00 2.00 4.00\") == \"no fika\"\nassert solution(\"3 3\\n0.00 2.00 5.00\") == \"no fika\"\nassert solution(\"3 3\\n0.00 2.00 6.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 7.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 8.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 9.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 10.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 11.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 12.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 13.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 14.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 15.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 16.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 17.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 18.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 19.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 20.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 21.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 22.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 23.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 24.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 25.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 26.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 27.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 28.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 29.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 30.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 31.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 32.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 33.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 34.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 35.00\") == \"2\"\nassert solution(\"3 3\\n0.00 2.00 3"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00\\n') == '2\\n'\nassert solution('3 4\\n0.10 2.00\\n0.20 2.00\\n') == '2\\n'\nassert solution('4 4\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n') == '2\\n'\nassert solution('4 5\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n') == 'no fika\\n'\nassert solution('5 6\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n') == '2\\n'\nassert solution('6 6\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n') == '2\\n'\nassert solution('6 7\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n') == 'no fika\\n'\nassert solution('7 7\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n') == '2\\n'\nassert solution('7 8\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n1.00 2.00\\n') == 'no fika\\n'\nassert solution('8 8\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n1.00 2.00\\n1.10 2.00\\n') == '2\\n'\nassert solution('8 9\\n0.10 2.00\\n0.20 2.00\\n0.30 2.00\\n0.40 2.00\\n0.50 2.00\\n0.60 2.00\\n0.70 2.00\\n0.80 2.00\\n0.90 2.00\\n1.00 2.00\\n1.10 2.00\\n1.20 2.00\\n') == 'no fika\\n'\nassert solution('9 9\\n0.10 2.00"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"3 5\\n0.00 1.00\\n0.50 1.50\") == \"2\\n\"\nassert solution(\"4 5\\n0.00 1.00\\n1.00 1.50\") == \"no fika\\n\"\nassert solution(\"2 3\\n0.00 2.00\\n0.50 1.50\\n0.80 2.20\") == \"no fika\\n\"\nassert solution(\"2 3\\n0.00 2.00\\n0.50 1.50\\n0.80 2.20\\n0.70 2.10\") == \"2\\n\"\nassert solution(\"2 3\\n0.00 2.00\\n0.50 1.50\\n0.80 2.20\\n0.70 2.10\\n0.60 2.00\") == \"no fika\\n\"\nassert solution(\"2 3\\n0.00 2.00\\n0.50 1.50\\n0.80 2.20\\n0.70 2.10\\n0.60 2.00\\n0.50 2.00\") == \"2\\n\"\nassert solution(\"2 3\\n0.00 2.00\\n0.50 1.50\\n0.80 2.20\\n0.70 2.10\\n0.60 2.00\\n0.50 2.00\\n0.40 2.00\") == \"no fika\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"2 3\\n0.00 2.00\\n\") == \"2\\n\"\nassert solution(b\"5 10\\n2.00 0.00\\n1.00 1.00\\n3.00 3.00\\n5.00 5.00\\n1.00 1.00\\n\") == \"no fika\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2\\n', 'Enter correct input'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(\"1 1\\n1.00 1.00\") == \"no fika\"\nassert solution(\"2 3\\n1.50 1.00\") == \"2\"\nassert solution(\"3 4\\n0.75 1.25\") == \"2\"\nassert solution(\"3 4\\n1.50 1.00\") == \"2\"\nassert solution(\"3 4\\n2.25 1.75\") == \"2\"\nassert solution(\"4 5\\n0.75 1.25\") == \"2\"\nassert solution(\"4 5\\n1.50 1.00\") == \"2\"\nassert solution(\"4 5\\n2.25 1.75\") == \"2\"\nassert solution(\"4 5\\n3.00 1.50\") == \"2\"\nassert solution(\"5 6\\n0.75 1.25\") == \"2\"\nassert solution(\"5 6\\n1.50 1.00\") == \"2\"\nassert solution(\"5 6\\n2.25 1.75\") == \"2\"\nassert solution(\"5 6\\n3.00 1.50\") == \"2\"\nassert solution(\"5 6\\n3.75 1.25\") == \"2\"\nassert solution(\"6 7\\n0.75 1.25\") == \"2\"\nassert solution(\"6 7\\n1.50 1.00\") == \"2\"\nassert solution(\"6 7\\n2.25 1.75\") == \"2\"\nassert solution(\"6 7\\n3.00 1.50\") == \"2\"\nassert solution(\"6 7\\n3.75 1.25\") == \"2\"\nassert solution(\"7 8\\n0.75 1.25\") == \"2\"\nassert solution(\"7 8\\n1.50 1.00\") == \"2\"\nassert solution(\"7 8\\n2.25 1.75\") == \"2\"\nassert solution(\"7 8\\n3.00 1.50\") == \"2\"\nassert solution(\"7 8\\n3.75 1.25\") == \"2\"\nassert solution(\"8 9\\n0.75 1.25\") == \"2\"\nassert solution(\"8 9\\n1.50 1.00\") == \"2\"\nassert solution(\"8 9\\n2.25 1.75\") == \"2\"\nassert solution(\"8 9\\n3.00 1.50\") == \"2\"\nassert solution(\"8 9\\n3.75 1.25\") == \"2\"\nassert solution(\"9 10\\n0.75 1.25\") == \"2\"\nassert solution(\"9 10\\n1.50 1.00\") == \"2\"\nassert solution(\"9 10\\n2.25 1.75\") == \"2\"\nassert solution(\"9 10\\n3.00 1.50\") == \"2\"\nassert solution(\"9 10\\n3.75 1.25\") == \"2\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\\n\\n\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(2)) == 10"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '10\\n'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == 10\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n\nfrom typing import List"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\\n\", \"Input should be empty\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 14 5') == '1\\n'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 14 5\\nW 16 6') == '1\\n'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 14 5\\nW 16 6\\nW 18 7') == '2\\n'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 14 5\\nW 16 6\\nW 18 7\\nW 20 8') == '3\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    8 3\n    W 10 0\n    W 10 3\n    E 17 4\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\n\") == 0\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == 0\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == 0\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == 2\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == 2\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == 3\nassert solution(\"W 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution('W 10 0\\nW 10 3\\nE 17 4'))\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '0\\n'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"3\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == 3"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"The correct answer is not 3. Please check your code.\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, got {solution(stdin)}\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n10 9\") == \"10\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3\\n'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == '3\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"3 4\\n4 1 2\") == \"A B C\"\nassert solution(\"5 5\\n6 6 7 8 9\") == \"A B C D E F\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\n\nassert solution(\"4 4\\n2 2 2\\n\") == \"definitely correct\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n1 2 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 10 3 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 3 10\") == \"impossible\\n\"\nassert solution(\"4 4\\n1 2 2 3\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 3 10\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 10 10 10\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 10 10 10\") == \"impossible\\n\"\nassert solution(\"4 4\\n10 10 10 10 10\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"  # Invalid arrangement\nassert solution(\"2 3\\n3 4 5\") == \"impossible\"  # Invalid arrangement\nassert solution(\"1 1 1\") == \"impossible\"  # Invalid arrangement\nassert solution(\"10 10 10\") == \"impossible\"  # Invalid arrangement"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n \") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\\n\\n\\n\\n\\n\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([11]) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution([3, \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution([1, \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution([2, \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\", \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\","
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution(\n    '''\n11\nBETWEEN\nSUBTLE"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(INPUT) == EXPECTED_OUTPUT\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"12\\nKTLR\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"KTLR ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"13\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"14\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"15\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"16\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"17\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"18\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"19\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"20\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"21\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"22\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"23\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"24\\nALL\\nLETTERS\\nARE\\nVOWELS\\nAND\\nALL\\nOTHER\\nLETTERS\\nARE\\nCONSONANTS\\n\") == \"ALL LETTERS ARE VOWELS AND ALL OTHER LETTERS ARE CONSONANTS\"\nassert solution(\"25\\nALL\\nLET"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test case 1 failed\"\nassert solution(\"rachelhellabracadabra\") == 0, \"Test case 2 failed\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test case 1 failed\"\nassert solution(\"rachelhellabracadabra\") == 0, \"Test case 2 failed\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Solution is not correct\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Output should be 12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == 12, \"Test 1\"\nassert solution('rachelhellabracadabra') == 0, \"Test 2\"\nassert solution('unhearduniversity') == 0, \"Test 3\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abrahellehhelleh') == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test failed\" # Corrected\nassert solution(\"rachelhellabracadabra\") == 0, \"Test failed\" # Corrected"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Expected output: 12, actual output: {}\".format(solution(\"abrahellehhelleh\"))\nassert solution(\"rachelhellabracadabra\") == 0, \"Expected output: 0, actual output: {}\".format(solution(\"rachelhellabracadabra\"))\nassert solution(\"\") == 0, \"Expected output: 0, actual output: {}\".format(solution(\"\"))"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([65, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 70, \"Your implementation is incorrect\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '70', 'Your implementation is not correct. Please check your code and adjust it.'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\" # correct"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10\\n7\\n8\\n7\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7\\n'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\nOutput:10\\n10\\n7\\n8\\n7\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\\n') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n10 10 10\") == \"10\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n1 2 3\") == \"1\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n10 10 10\") == \"20\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"3\\n\"\nassert solution(\"1 3 1\") == \"3\\n\"\nassert solution(\"2 2 1\") == \"1\\n\"\nassert solution(\"2 4 10\\n0 2\\n-1 1\\n1 3\\n-1 2\\n-1 3\\n1 2\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '6\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n') == '6\\n'\n\nfrom typing import List"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"3 2 4\\n0 2 1\\n-2 3 0\") == \"5\\n\"\nassert solution(\"0 1 0\\n2 3 4\\n-2 4 0\") == \"4\\n\"\nassert solution(\"3 0 5\\n1 3 1\\n-3 4 0\") == \"4\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\", \"The correct output should be '3'\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"2 3 1 100\") == \"2\\n\"\nassert solution(\"5.5 3.3 1.1 10\") == \"3\\n\"\nassert solution(\"10 1 1 100\") == \"1\\n\"\nassert solution(\"5 3 1 100\") == \"2\\n\"\nassert solution(\"3 3 1 100\") == \"1\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3, \"Incorrect solution.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"3 0.5 4 40\") == \"4\"\nassert solution(\"2 1 2 100\") == \"2\"\nassert solution(\"3 3 4 50\") == \"4\"\nassert solution(\"3 2 4 20\") == \"2\"\nassert solution(\"2 1 4 100\") == \"4\"\nassert solution(\"3 3 2 100\") == \"2\"\nassert solution(\"2 1 2 10\") == \"2\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"  # Maj can place 3 pickles on her sandwich with radius 3 cm\nassert solution(\"2.5 1.5 4.5 40\") == \"2\\n\"  # Maj can place 2 pickles on her sandwich with radius 1.5 cm\nassert solution(\"3.5 1.5 4.5 40\") == \"2\\n\"  # Maj can place 2 pickles on her sandwich with radius 1.5 cm\nassert solution(\"3 1 4 45\") == \"0\\n\"  # Maj can't place any pickles on her sandwich with a radius of 4 cm\nassert solution(\"3 1 4 40.0000001\") == \"0\\n\"  # Maj can't place any pickles on her sandwich with a radius of 4 cm\nassert solution(\"3 1 4 45.0000001\") == \"0\\n\"  # Maj can't place any pickles on her sandwich with a radius of 4 cm\nassert solution(\"3 1 4 40.000000000001\") == \"0\\n\"  # Maj can't place any pickles on her sandwich with a radius of 4 cm"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n\"\"\") == \"\"\"\n99\n3\n\"\"\".strip()"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\"\"\") == \"99\\n3\\n\"\nassert solution(\"\"\"3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'\nassert solution('5 10\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n') == '2\\n3 4 5\\n'\nassert solution('2 10\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n') == '0\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"99\\n3\\n\", \"Expected output: 99\\n3\\n, but got: \" + solution(stdin)"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\") == \"99\\n3\"\n\nassert solution(\"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    1 5 4 6 2\n    \"\"\") == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"99\\n3\"\nassert solution(open(\"input2.txt\", \"r\")) == \"0\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n2 3 4 5\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2\\n3 4 5 6\\n4 2\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"4\\n5 6 7 1\\n2 3 4 5\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"2\\n3 4 5 6 7 8\\n4 2\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"4\\n5 6 7 8 9\\n2 3 4 5 6\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"2\\n3 4 5 6 7 8 9 10\\n4 2\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"4\\n5 6 7 8 9 10 11\\n2 3 4 5 6 7\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n\") == \"2\\n3 4 5 6 7 8 9 10 11 12\\n4 2\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n4 2\\n'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\" # Your solution should be implemented here"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room. The distance between two rooms is the number of halls passed on the way from one to the other.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\") == 2, \"The given solution is incorrect.\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n4 2\\n'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and output {output}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input: {input_data}\\nExpected output: {expected_output}\\nGot output: {solution(input_data)}\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"12.00000\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000\\n12\\n12.00000\\n9.0'\nassert solution('1\\n2 2\\n3 2\\n4 1') == '12\\n12\\n12\\n12'\nassert solution('1\\n2 2\\n3 2\\n4 1\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"9.0000\"\nassert solution(9) == \"12\"\nassert solution(12) == \"12.00000\"\nassert solution(16) == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9.0000\\n12\\n12.00000\\n9.0\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == [\"ST A\", \"ST X\", \"PH A\", \"PH X\", \"AD\", \"PL Y\", \"DI Y\", \"DI\"]"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\\n\"\n\nassert solution(\"128\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\\n\"\n\nassert solution(\"255\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: '{input()}'\\nOutput: '{output}'\\nSolution: '{solution(input())}'\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"255\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"50\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(5) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test cases\\n# Test case 1\\nN = 2\\nassert solution('2') == 'ST A'\\n\\n# Test case 2\\nN = 10\\nassert solution('10') == 'ST A'\\n\\n# Test case 3\\nN = 256\\nassert solution('256') == 'ST A'\\n\\n# Test case 4\\nN = 3\\nassert solution('3') == 'DI Y'\\n\\n# Test case 5\\nN = 17\\nassert solution('17') == 'DI Y'\\n\\n# Test case 6\\nN = 26\\nassert solution('26') == 'DI Y'\\n\\n# Test case 7\\nN = 257\\nassert solution('257') == 'DI Y'\\n\\n# Test case 8\\nN = 32767\\nassert solution('32767') == 'DI Y'\\n\\n# Test case 9\\nN = 32768\\nassert solution('32768') == 'DI Y'\\n\\n# Test case 10\\nN = 32769\\nassert solution('32769') == 'DI Y'\\n\\n# Test case 11\\nN = 256\\nassert solution('256') == 'ST A'\\n\\n# Test case 12\\nN = 3\\nassert solution('3') == 'DI Y'\\n\\n# Test case 13\\nN = 17\\nassert solution('17') == 'DI Y'\\n\\n# Test case 14\\nN = 26\\nassert solution('26') == 'DI Y'\\n\\n# Test case 15\\nN = 257\\nassert solution('257') == 'DI Y'\\n\\n# Test case 16\\nN = 32767\\nassert solution('32767') == 'DI Y'\\n\\n# Test case 17\\nN = 32768\\nassert solution('32768') == 'DI Y'\\n\\n# Test case 18\\nN = 32769\\nassert solution('32769') == 'DI Y'\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10\") == \"ST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nprint(\"Correct\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == 2\nprint('All test cases pass')\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2\nprint(\"All tests passed.\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\nprint(\"All test cases pass\")"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"abbaab\"\nassert solution(stdin) == \"NONE\"\nassert solution(stdin) == \"abbbbbbbbbbbbbbbbba\"\nassert solution(stdin) == \"a\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == 'abaaba'\nassert solution(solution) == 'NONE'\nassert solution(solution) == 'abbbbbbbbbbbbbbbbba'\nassert solution(solution) == 'a'\nassert solution(solution) == 'def solution(stdin: str) -> str:\\n    pass'\n\nfrom typing import List"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'abaaba'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'NONE'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'a'\nassert solution('''\n    5\n    S -> aSa\n    S -> bSb\n    S -> a\n    S -> b\n    S -> \n''') == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output '{expected_output}', but got '{solution(input_str)}'.\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, \"Your solution is incorrect\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"abaaba\\nNONE\", \"Your implementation is incorrect!\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's a sample solution:\\n# Sample Input:\\n# 5\\n# S -> aSa\\n# S -> bSb\\n# S -> a\\n# S -> b\\n# S -> \\n# where are the abaaba palindromes on this line\\n# none on this line\\n# how about this aaaaaaabbbbbbbbbbbbbbbbba\\n# even a single a or b is a palindrome\\n# Sample Output:\\n# abaaba\\n# NONE\\n# abbbbbbbbbbbbbbbbba\\n# a\\ndef solution(stdin: str) -> str:\\"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"4\\n4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nprint(\"Test case 1 passed\")\n\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n3\") == \"5\"\nprint(\"Test case 2 passed\")\n\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\nprint(\"Test case 3 passed\")\n\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n5\") == \"5\"\nprint(\"Test case 4 passed\")\n\nassert solution(\"4 5 0 2\\n1 3 7\\n2 0\\n6\") == \"6\"\nprint(\"Test case 5 passed\")\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution for {stdin} is incorrect. Expected: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4\\n'\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 7\\n2 0\\n4') == '4\\n\\n\\n'"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nGWWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBW\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWB\") == \"GO FOR IT\\n\"\nassert solution(\"2 3\\n4 4\\nWWWW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n'\n) == \"GO FOR IT\"\n\nassert solution(\n    '2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n'\n) == \"GO FOR IT\"\n\nassert solution(\n    '2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n'\n) == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'SUCCESS\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'NO WAY\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\n1 1\\n1 1\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'NO WAY\\n'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('1 2\\n2 2\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n2 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\nS\\nG\\nG\\nG\\nG') == 'GO FOR IT'\nassert solution('1 1\\n1 1\\nS\\nW\\nW\\nW\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nSSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n3 4\\nSSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nSSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"1 2\\n3 4\\nGSW\\nSWW\\nWWWW\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWWSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSSB\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSSB\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWSW\\nWSBB\\nWSBB\\nWSSB\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nWSSW\\nW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2 3\n    4 4\n    WWWW\n    WSBB\n    WWWW\n    WBWG''') == \"GO FOR IT\"\n\nassert solution('''\n    1 1\n    2 2\n    W\n    W\n    W\n    W''') == \"SUCCESS\"\n\nassert solution('''\n    1 1\n    2 2\n    W\n    B\n    B\n    B''') == \"GO FOR IT\"\n\nassert solution('''\n    1 1\n    2 2\n    W\n    W\n    S\n    S''') == \"NO WAY\"\n\nassert solution('''\n    1 1\n    2 2\n    W\n    W\n    W\n    B''') == \"NO WAY\"\n\nassert solution('''\n    1 1\n    2 2\n    W\n    W\n    W\n    W''') == \"NO WAY\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 900\n    800 700 400 300 200\n    800 700 400 300 200''') == '2243'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2243\", \"Incorrect output\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\nassert solution(\"5 1000\\n200 500 100 50 10\") == \"0\\n\"\nassert solution(\"10 1000\\n100 500 200 50 20\") == \"1500\\n\"\nassert solution(\"1 1000\\n200 100 500 50 500\") == \"0\\n\"\nassert solution(\"100 1000\\n100 500 200 50 20\") == \"1500\\n\"\nassert solution(\"100 1000\\n500 100 500 50 500\") == \"10000\\n\"\nassert solution(\"100 1000\\n1000 100 1000 100 1000\") == \"100000\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num}: Incorrect output for test case {test_num + 1}\"\nfor test_num in range(1, 6):\n    assert solution(input()) == expected_output, f\"Test {test_num}: Incorrect output for test case {test_num + 1}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == [\"no\", \"yes\", \"yes\"]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 9\\n? 1 3\") == \"no\\nno\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 5\") == \"no\\nno\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 4\") == \"yes\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"The output is incorrect. Expected '{sample_output}', but got '{solution(sample_input)}'.\"\n\nsample_input = \"\"\"10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n\"\"\"\n\nsample_output = \"no\\nyes\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == ['no', 'yes']"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2\nassert solution(\"10 5 4 8 3\\n5 3\") == 0\nassert solution(\"10 5 4 8 3\\n10\") == 2\nassert solution(\"10 5 4 8 3\\n9 7\") == 2\nassert solution(\"5 3\\n5 3\\n5 3\") == 5\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='4\\n10 5 4 8 3') == '2\\n\\n'\nassert solution(stdin='5\\n10 5 4 8 3') == '0\\n\\n'\nassert solution(stdin='6\\n10 5 4 8 3') == '1\\n\\n'\nassert solution(stdin='7\\n10 5 4 8 3') == '2\\n\\n'\nassert solution(stdin='8\\n10 5 4 8 3') == '3\\n\\n'\nassert solution(stdin='9\\n10 5 4 8 3') == '4\\n\\n'\nassert solution(stdin='10\\n10 5 4 8 3') == '5\\n\\n'\nassert solution(stdin='11\\n10 5 4 8 3') == '6\\n\\n'\nassert solution(stdin='12\\n10 5 4 8 3') == '7\\n\\n'\nassert solution(stdin='13\\n10 5 4 8 3') == '8\\n\\n'\nassert solution(stdin='14\\n10 5 4 8 3') == '9\\n\\n'\nassert solution(stdin='15\\n10 5 4 8 3') == '10\\n\\n'\nassert solution(stdin='16\\n10 5 4 8 3') == '11\\n\\n'\nassert solution(stdin='17\\n10 5 4 8 3') == '12\\n\\n'\nassert solution(stdin='18\\n10 5 4 8 3') == '13\\n\\n'\nassert solution(stdin='19\\n10 5 4 8 3') == '14\\n\\n'\nassert solution(stdin='20\\n10 5 4 8 3') == '15\\n\\n'\nassert solution(stdin='21\\n10 5 4 8 3') == '16\\n\\n'\nassert solution(stdin='22\\n10 5 4 8 3') == '17\\n\\n'\nassert solution(stdin='23\\n10 5 4 8 3') == '18\\n\\n'\nassert solution(stdin='24\\n10 5 4 8 3') == '19\\n\\n'\nassert solution(stdin='25\\n10 5 4 8 3') == '20\\n\\n'\nassert solution(stdin='26\\n10 5 4 8 3') == '21\\n\\n'\nassert solution(stdin='27\\n10 5 4 8 3') == '22\\n\\n'\nassert solution(stdin='28\\n10 5 4 8 3') == '23\\n\\n'\nassert solution(stdin='29\\n10 5 4 8 3') == '24\\n\\n'\nassert solution(stdin='30\\n10 5 4 8 3') == '25\\n\\n'\nassert solution(stdin='31\\n10 5 4 8 3') == '26\\n\\n'\nassert solution(stdin='32\\n10 5 4 8 3') == '27\\n\\n'\nassert solution(stdin='33\\n10 5 4 8 3') == '28\\n\\n'\nassert solution(stdin='34\\n10 5 4 8 3') == '29\\n\\n'\nassert solution(stdin='35\\n10 5 4 8 3') == '30\\n\\n'\nassert solution(stdin='36\\n10 5 4 8 3') == '31\\n\\n'\nassert solution(stdin='37\\n10 5 4 8 3') == '32\\n\\n'\nassert solution(stdin='38\\n10 5 4 8 3') == '3"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, got: {solution}\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    10 5 4 8 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    100 50\n    1 2 3 4 5 6 7 8 9\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    50 30\n    1 2 3 4 5 6 7 8 9\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    500 500\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\", \"Please provide the correct input.\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(6) == 2\nassert solution(10) == 2\nassert solution(15) == 3\nassert solution(20) == 3"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"The correct answer is 2, but it is %d\" % solution()"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 127') == '1083', \"Error: Please check the function's correctness.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == \"1083\", \"The function should return 1083 for input 1 127\"\nassert solution(\"0 0\") == \"0\", \"The function should return 0 for input 0 0\"\nassert solution(\"1 2\") == \"1\", \"The function should return 1 for input 1 2\"\nassert solution
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1000000) == 1083\nprint(\"All tests passed!\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\"\nassert solution(\"-1 128\") == \"1083\"\nassert solution(\"0 129\") == \"1083\"\nassert solution(\"2 254\") == \"2047\"\nassert solution(\"1 255\") == \"2048\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 127') == '1083'\n\nfrom fractions import gcd"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1083\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"inputs/TV_quiz_monstermind.txt\", \"r\")) == \"2.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.0000000000\\n\", \"Test Case 1\"\n\nassert solution(input()) == \"2.0000000000\\n\", \"Test Case 2\"\n\nassert solution(input()) == \"4.0000000000\\n\", \"Test Case 3\"\n\nassert solution(input()) == \"1.0000000000\\n\", \"Test Case 4\"\n\nassert solution(input()) == \"3.0000000000\\n\", \"Test Case 5\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0000000000\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? Unicorn?\") == 0.9600000000\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? Unicorn?\") == 0.0400000000\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? Unicorn?\") == 0.0000000000"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2.0000000000'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\", \"The solution is incorrect.\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 monkey\n    ''') == 'POSSIBLE\\n'\nassert solution('''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 monkey\n
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"5 5\\nmammal 2 cat dog cat\") == \"FALSE ALARM\"\nassert solution(\"5 5\\nmammal 3 cat dog cat\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n3 6\nmonkey 1 lion\nlion 3 monkey penguin lion\npenguin 1 monkey\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n3 6\nmonkey 1 lion\nlion 3 penguin lion\npenguin 1 monkey\n\"\"\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"FALSE ALARM\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 2 lion penguin\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 penguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\nmonkey 5 lion 8 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\nmonkey 5 lion 8 monkey\\nmonkey 6 lion 9 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\nmonkey 5 lion 8 monkey\\nmonkey 6 lion 9 monkey\\nmonkey 7 lion 10 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\nmonkey 5 lion 8 monkey\\nmonkey 6 lion 9 monkey\\nmonkey 7 lion 10 monkey\\nmonkey 8 lion 11 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey 4 lion 7 monkey\\nmonkey 5 lion 8 monkey\\nmonkey 6 lion 9 monkey\\nmonkey 7 lion 10 monkey\\nmonkey 8 lion 11 monkey\\nmonkey 9 lion 12 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 3 lion 4 monkey\\nmonkey 2 lion 5 monkey\\nmonkey 1 lion 6 monkey\\nmonkey "
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n') == 'IMPOSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'FALSE ALARM'\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('1 1\\nmonkey\\n') == 'FALSE ALARM'\nassert solution('3 1\\nlion\\nmonkey\\n') == 'IMPOSSIBLE'\nassert solution('3 2\\nlion\\nmonkey\\napfel\\n') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'FALSE ALARM'\n\nfrom typing import List"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"triple correlation 6(1)6(1)6 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)5(1)5 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 2(0)2(2)2 found\\n\"\nassert solution(input()) == \"random sequence found\\n\"\nassert solution(input()) == \"triple correlation 5(1)"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 'triple correlation 4(1)4(3)3 found'\nassert solution(40) == 'triple correlation 40(30)25 found'\nassert solution(10) == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"triple correlation 4(1)4(3)3 found\\n\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Output does not match the expected output. Please check the function definition and the function signature.\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found\\n'\nassert solution('100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'random sequence\\n'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1\\n39\\n10\\n40\\n') == '40.5\\n'\nassert solution('5 2\\n4\\n2\\n4\\n') == '4.0\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n3\\n4\\n') == '3.5\\n'\nassert solution('1 2\\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '40.5\\n'\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 40.5, \"The output is incorrect.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"40.5\\n\", \"Expected: 40.5\\nActual: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"40.5\\n\", \"Test case failed\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(39) == 40.5, \"Solution does not match the expected output\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 6) == 'Impossible'\nprint(\"Test case passed\")"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Impossible\"  # Correct Answer"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n7 8 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n7 8 1987\n8 9 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n7 8 1987\n8 9 1987\n9 10 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n7 8 1987\n8 9 1987\n9 10 1987\n10 11 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5 6 1987\n6 7 1987\n7 8 1987\n8 9 1987\n9 10 1987\n10 11 1987\n11 12 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n4 5 1987\n5"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\\n9 10 1987\\n10 11 1987\\n1"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"impossible\"\nprint(\"impossible\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"1 0 2\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 3\") == 3\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == 3\nassert solution(\"1 0 2\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == 3\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 0 2\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 0 0\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 2 2\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 0 1\n    N 1 2\n    C 1 2\n    N 1 3\n    C 1 1\n''') == 'impossible'\nassert solution('''\n    4 0 1\n    N 1 2\n    N 1 3\n    N 1 4\n    N 1 5\n    N 1 6\n    N 1 7\n    N 1 8\n    N 1 9\n''') == 3\nassert solution('''\n    1 0 1\n    N 1 2\n    N 1 3\n    N 1 4\n    N 1 5\n    N 1 6\n    N 1 7\n    N 1 8\n    N 1 9\n    0 0 2\n    C 1 1\n    N 1 2\n    N 1 3\n    N 1 4\n    N 1 5\n    N 1 6\n    N 1 7\n    N 1 8\n    N 1 9\n''') == 1\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=stdin) == \"impossible\" # Example 1"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n())\\n((()\\n)(\\n)\\n()\\n') == '10'\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"(())\") == 10\nassert solution(\"(()())\") == 10\nassert solution(\"(()())()\") == 10\nassert solution(\"()())(()\") == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 10, \"The length of the longest string of balanced parentheses is incorrect.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == 10\nassert solution('3\\n()))\\n((()\\n)()') == 10\nassert solution('3\\n)))\\n((()\\n)()') == 10\nassert solution('3\\n)))\\n((()\\n))\\n(())') == 10\nassert solution('3\\n)))\\n((()\\n)\\n(())') == 10\n\nfrom typing import List"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\\n((()\\n)()\") == 10, \"Test 1 failed\"\nassert solution(\"(())\\n((()\\n)()\") == 10, \"Test 2 failed\"\nassert solution(\"())\\n((\\n)())\") == 10, \"Test 3 failed\"\nassert solution(\"()()()\\n(())\\n((()\\n)()\") == 10, \"Test 4 failed\"\nassert solution(\"(())\\n((\\n)\\n(())\\n((())\\n((())\\n())\")) == 10, \"Test 5 failed\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n())\\n((()()\\n)') == 10\nassert solution('4\\n())\\n((()()\\n()))\\n(())\\n(())\\n(())\\n((()()))\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\n())\\n((()()\\n())\\n\") == 10\nassert solution(stdin=\"4\\n()\\n(())\\n(())\\n\") == 10\nassert solution(stdin=\"5\\n(())\\n(())\\n())\\n(())\\n(())\\n\") == 13"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n())\\n((()()\\n)') == 10, \"Incorrect output\"\nassert solution('4\\n(())\\n(())\\n(())\\n') == 4, \"Incorrect output\"\nassert solution('5\\n())\\n(())\\n(())\\n(())\\n') == 16, \"Incorrect output\"\nassert solution('6\\n()())\\n(())()\\n(())()\\n(())()\\n()') == 20, \"Incorrect output\"\nassert solution('7\\n()()()\\n()()\\n()()\\n()()()\\n()') == 20, \"Incorrect output\"\nassert solution('8\\n()()()()\\n()()()\\n()()()\\n()()()\\n()()()\\n()') == 20, \"Incorrect output\"\nassert solution('9\\n()()()()()\\n()()()()()\\n()()()()()\\n()()()()()\\n()()()()()\\n()()()()()\\n()') == 20, \"Incorrect output\"\nassert solution('10\\n()()()()()()\\n()()()()()()\\n()()()()()()\\n()()()()()()\\n()()()()()()\\n()()()()()()\\n()()()()()()()()()') == 20, \"Incorrect output\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'\nassert solution('11\\n159 h\\n119 h\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a\\n119 a"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    9\n    377 a\n    455 h\n    180 a\n    211 a\n    134 a\n    46 h\n    111 h\n    213 h\n    17 a\n    15\n    1 2\n    1 4\n    1 6\n    2 3\n    2 4\n    2 5\n    3 5\n    4 6\n    4 7\n    4 9\n    5 7\n    5 8\n    6 9\n    7 9\n    7 8\n    \"\"\"\n) == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == 85293, \"The solution should return the correct output.\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"85293\\n\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\na\\na\\nh\\na\\na\\na\\nh\\nh\\na\\nh\\nh\\nh\\na\\na\\na\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh\\nh"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n\ninput_data = [int(x) for x in input().split()]\noutput_data = solution(input_data)\nprint(output_data)"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for the given inputs. Expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\"\nassert solution(\"1000000000\\n\") == \"1000000000\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Incorrect output\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == 5"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\nassert solution(\"6 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n2 5\") == \"15\\n\"\nassert solution(\"2 4\") == \"1\\n\"\nassert solution(\"2 2\") == \"0\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == 5, \"Incorrect output\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 5\nassert solution(\"4 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 0\nassert solution(\"4 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 0\nassert solution(\"4 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 0\nassert solution(\"4 9\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 0\nassert solution(\"4 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 11\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 12\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 13\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 14\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 15\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 16\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 17\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 18\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 19\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 20\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 21\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 22\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 23\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 24\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 25\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 26\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 27\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 28\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 29\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 30\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == 1\nassert solution(\"4 31\\n1 2\\n1 3"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_string)}\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5100, \"Incorrect output.\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100\nassert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5100, \"The output is incorrect.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output for sample input:\\n{stdin}\\nExpected output:\\n{expected_output}\\nActual output:\\n{solution(input_data)}\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Expected output: {output}\\nActual output: {solution(input)}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Expected: {output}, Received: {solution(input)}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == 10"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 3\\n1 2 1\\n3\") == \"0\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"Test failed\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '10\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed: expected '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == 10\nassert solution(\"3 3\\n1 1 1\\n1\\n2 1 O 3\") == 3\nassert solution(\"3 3\\n1 1 1\\n1\\n2 1 O 3\") == 3"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"The solution provided is incorrect. Expected: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == 1\n\nassert solution(\"\"\"\n5 6\n0 1\n1 2\n2 3\n3 4\n4 5\n\"\"\") == 5\n\nassert solution(\"\"\"\n5 7\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\") == 5\n\nassert solution(\"\"\"\n5 8\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n\"\"\") == 6\n\nassert solution(\"\"\"\n5 9\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n\"\"\") == 6\n\nassert solution(\"\"\"\n5 10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n\"\"\") == 6\n\nassert solution(\"\"\"\n5 11\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 12\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 13\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 14\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 15\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 16\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 17\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 18\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 19\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n\"\"\") == 7\n\nassert solution(\"\"\"\n5 20\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n1"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 3\\n0 1\\n1 2\\n2 3\\n') == '1\\n'\nassert solution(stdin='5 10\\n0 1\\n1 2\\n2 3\\n4 5\\n') == '2\\n'\nassert solution(stdin='6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n') == '1\\n'\nassert solution(stdin='6 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '3\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    0 1\n    1 2\n    2 3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5 3\n    0 1\n    1 2\n    2 3\n    3 4\n    4 0\n    4 2\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    7 5\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 0\n    6 2\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    7 6\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 4\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    8 7\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 4\n    8 6\n    8 2\n    8 0\n    8 1\n    8 3\n    8 5\n    \"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n    6 4\n    0 1\n    1 2\n    2 3\n    3 4\n    4 0\n    4 2\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n\") == \"3\\n\"\nassert solution(\"6 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n\") == \"4\\n\"\nassert solution(\"6 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n7 6\\n\") == \"5\\n\"\nassert solution(\"7 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n6 5\\n7 6\\n8 7\\n\") == \"6\\n\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect solution\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' instead of '{expected}'\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.962962962963\", \"Your solution is incorrect\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.962962962963, \"The output should be 0.962962962963, but got {}\".format(solution())"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 0.962962962963\nassert solution(2) == 0.037037037037\nassert solution(3) == 0.00060707649592\nassert solution(4) == 0.00000113709432\nassert solution(5) == 0.000000000000"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.962962962963, \"The output should be 0.962962962963.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.962962962963, \"Your solution is incorrect.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\\n40000000 40000000\\n40000000 0\\n0 40000000\\n40000000 40000000\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 5 2\") == 1, \"The lowest grade possible is 1.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3,5,5,2) == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 5, 5, 2) == 1, \"Your solution is incorrect.\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 5 5 2) == '1'\nassert solution(2 3 4 9) == '0'\nassert solution(1 1 1 1) == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"5 1 2 3\\n3 4 5 6\\n7 8 9 10\\n11 12 13 14\") == \"18\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\") == \"15\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\") == \"0\"\nassert solution(\"1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"10 4 3 2\\n100 0 0\\n50 0 0\\n0 0 0\") == \"0\\n\"\nassert solution(\"1 1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\") == \"0\\n\"\nassert solution(\"1 0 0 0\\n0 1 0\\n0 0 1\\n0 0 0\") == \"1\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13') == '12 14', 'Sample Input and Output do not match.'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == '12 14', \"Incorrect solution\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(13) == \"12 14\", \"Your solution is incorrect.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == '12 14'\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == '12 14\\n'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13') == '12 14', 'Incorrect output'\nassert solution('123456') == '12 13 14 15 16', 'Incorrect output'\nassert solution('123457') == '12 13 14 15 16', 'Incorrect output'\nassert solution('123458') == '12 13 14 15 16', 'Incorrect output'\nassert solution('123459') == '12 13 14 15 16', 'Incorrect output'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0, \"Solution is not correct\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"1\\n2 0 1\\n4 0 2\\n2 0 2\\n1 0 0\") == 1\nassert solution(\"1\\n2 0 2\\n4 0 1\\n2 0 2\\n1 0 1\") == 0\nassert solution(\"1\\n2 0 2\\n4 0 2\\n2 0 1\\n1 0 0\") == 1\nassert solution(\"1\\n2 0 2\\n4 0 2\\n2 0 1\\n1 0 1\") == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"6\\n0 0 0\\n0 0 1\\n2 0 0\\n2 0 1\\n2 0 2\\n2 0 3\") == \"1\\n0\\n0\\n0\\n0\\n0\"\nassert solution(\"4\\n1 1 0\\n0 1 1\\n1 1 0\\n1 1 0\\n0 1 1\") == \"1\\n0\\n0\\n0\\n0\"\nassert solution(\"1000000\\n0 0 0\\n0 0 1\\n2 0 0\\n2 0 1\\n2 0 2\\n2 0 3\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n1 1 0\\n0 1 1\\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0, \"No solution exists.\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"No solution found.\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 0\\n3 0 1\\n3 0 1\\n3 0 0\") == 2\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 0\\n3 0 1\\n3 0 0\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 0\") == 0\nassert solution(\"5\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n3 0 0\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 0\\n3 0 1\\n3 0 0\") == 0\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('3 4') == '-1\\n'\nassert solution('2 0') == '-1\\n'\nassert solution('3 1') == '-1\\n'\nassert solution('0 1') == '-1\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 4\\n\") == \"-1\\n\"\nassert solution(\"5 5\\n\") == \"-1\\n\"\nassert solution(\"6 6\\n\") == \"-1\\n\"\nassert solution(\"7 7\\n\") == \"-1\\n\"\nassert solution(\"8 8\\n\") == \"-1\\n\"\nassert solution(\"9 9\\n\") == \"-1\\n\"\nassert solution(\"10 10\\n\") == \"-1\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    2 3\n    \"\"\") == \"\"\"\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    2 3\n    \"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\nSample Output:\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('2 4\\nSample Output:\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('5 5\\nSample Output:\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n1 1\\n2 2\\n1 3\\n2 "
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n'''"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n'''"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3') == '-1\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3.33333333\\n3.33333333\\n3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'\nassert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"5 10\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.00000000\\n3.00000000\\n3.00000000\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333\\n3.33333333\\n3.33333333\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 2') == '1'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the number of people who place their bets: \")) == 1\nprint(solution(input(\"Enter the points of all people who play the betting game: \")))"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3\n3 3 2\n) == 1"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 2]) == 1\nassert solution([1, 2, 3, 4]) == 2\nassert solution([5, 4, 3, 2]) == 3\nassert solution([3, 5, 2, 1]) == 2\nassert solution([2, 1, 3, 5]) == 3"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\nabba') == 2, \"Expected output: 2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\nabba') == '2\\n'\nassert solution('4 2\\nbbba\\nccca\\nddda\\n') == '2\\n'\nassert solution('5 3\\naaa\\nbbbb\\nbbbb\\nccc\\nddd') == '3\\n'\nassert solution('5 3\\naaa\\nbbbb\\nbbbb\\nccc\\nddd') == '3\\n'\nassert solution('4 1\\naaa\\nbbbb\\n') == '1\\n'\nassert solution('2 2\\nbbbb\\naaa\\n') == '2\\n'\nassert solution('2 3\\naaa\\nbbbb\\naaa\\n') == '3\\n'\nassert solution('5 1\\naaa\\nbbbb\\nccc\\nddd\\n') == '1\\n'\nassert solution('3 4\\nbbbb\\naaa\\nccc\\nddd\\n') == '4\\n'\nassert solution('3 3\\nbbbb\\naaa\\nccc\\nddd\\n') == '3\\n'\nassert solution('2 1\\naaa\\nbbbb\\nccc\\n') == '1\\n'\nassert solution('3 2\\nbbbb\\naaa\\nccc\\nddd\\n') == '2\\n'\nassert solution('4 3\\nbbbb\\naaa\\nccc\\nddd\\n') == '3\\n'\nassert solution('1 3\\nbbbb\\naaa\\nccc\\nddd\\n') == '3\\n'\nassert solution('1 1\\nbbbb\\n') == '1\\n'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, \"Testcase failed: Expected output: {}, Actual output: {}\".format(expected_output, solution(sample_input))"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"The solution should return 2.\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abcde') == '2'\nassert solution('1234') == '2'\nassert solution('12345') == '2'\nassert solution('123456') == '2'\nassert solution('1234567') == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nabba\\n') == '2\\n'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"4 2\\nabba\\n\") == \"2\\n\"\nassert solution(stdin=\"4 2\\nabcb\\n\") == \"2\\n\"\nassert solution(stdin=\"4 2\\na\\n\") == \"2\\n\"\nassert solution(stdin=\"4 2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\n\"\n                     \"\\n\") == \"2\\n\"\nassert solution(stdin=\"4 2\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\n\") == \"3\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\nabba') == '2\\n'\nassert solution('5 3\\nabaab') == '3\\n'\nassert solution('7 3\\nababc') == '4\\n'\nassert solution('9 4\\nbababababbab') == '12\\n'\nassert solution('11 4\\nabaaaaabba') == '15\\n'\nassert solution('13 2\\nabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\nabba') == '2'\nassert solution('4 2\\ncat\\nboulder') == '3'\nassert solution('4 2\\ncat\\nbouldering\\ncat\\nboulder\\ncat\\nbouldering\\ncat') == '5'\nassert solution('4 2\\nboulder\\nbouldering\\ncat\\ncat\\ncat\\nbouldering\\nboulder') == '5'\nassert solution('4 2\\nboulder\\nbouldering\\ncat\\ncat\\ncat\\nbouldering\\nbouldering\\ncat\\nbouldering\\nbouldering') == '8'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"The expected output is 3, but got {}\".format(solution(\"4 3\\n1 2\\n2 3\\n2 4\"))\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\") == 4, \"The expected output is 4, but got {}\".format(solution(\"4 3\\n1 2\\n2 3\\n1 4\"))"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Output should be 3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    4 3\n    1 2\n    2 3\n    2 4\n    ''') == '3\\n'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3, \"The solution should return 3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"Expected output: 3\\nGot: \" + solution(input())"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output does not match the expected output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\", \"Expected '3', but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output: 1\\n1\\n\"\nassert solution() == \"Output: 0\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == 'Invalid input'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\n\nassert solution(\"1 1\\n1 2\\n1 3\\n2 2\\n3 1\\n3 2\\n3 3\") == \"1\\n1\\n2\\n2\\n1\\n3\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Incorrect output\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\"\nassert solution(\"5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\"\nassert solution(\"5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n\\n\\n\\n\\n\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == '7\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 7\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function\\nprint(solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\\n\"))\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"7\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 1, 2, 3, 2, 2, 5, 2, 1, 3, 2, 1, 1, 2, 3) == 7, \"The output is incorrect.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 7, \"Expected 7, got {}\".format(solution())"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 20\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n\"\"\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 20, \"Incorrect output. Expected 20, got {}\".format(solution())"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\n\nassert solution('''10 2\ncalculus1 10\nlinearalgebra 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '50'\n\nassert solution('''10 2\ncalculus1 10\nlinearalgebra 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '100'\n\nassert solution('''10 2\ncalculus1 10\nlinearalgebra 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '50'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"linearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"linearalgebra 20\\ncalculus1 30\\ncalculus2 40\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"60\"\nassert solution(\"linearalgebra 20\\ncalculus2 30\\ncalculus1 40\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"60\"\nassert solution(\"linearalgebra 20\\ncalculus1 30\\ncalculus2 40\\nhonorsanalysis2 50\\nhonorsanalysis1 60\") == \"110\"\nassert solution(\"linearalgebra 20\\ncalculus2 30\\ncalculus1 40\\nhonorsanalysis2 50\\nhonorsanalysis1 60\") == \"110\"\nassert solution(\"linearalgebra 20\\ncalculus1 30\\ncalculus2 40\\nhonorsanalysis1 50\\nhonorsanalysis2 50\") == \"150\"\nassert solution(\"linearalgebra 20\\ncalculus2 30\\ncalculus1 40\\nhonorsanalysis1 50\\nhonorsanalysis2 50\") == \"150\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test Failed for {input}\"\nfor input, output in test_cases:\n    assert solution(input) == output, f\"Test Failed for {input}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6\\n'\nassert solution('4 3\\n1 2\\n2 4\\n3 4\\n4 2\\n3\\n1 4\\n2 2\\n4 4\\n3 3') == '3\\n'\nassert solution('3 4\\n2 1\\n3 3\\n4 2\\n1 4\\n3 1\\n4 4\\n2 3\\n2 3') == '1\\n'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"The output does not match the expected output.\\nInput: {input}\\nOutput: {output}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"The output should be 6.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 6, \"Incorrect solution\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\", \"Incorrect output\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n7\") == 7\nassert solution(\"5 4\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\") == 8"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"Test failed.\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"3 3 3\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"10 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"3 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"4 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"5 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"5 3 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"6 3 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"5 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"6 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"7 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"8 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"9 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"10 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"11 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"12 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"impossible\\n\"\nassert solution(\"1 3 2\\n2\\n3\\n1 2\\n2 3 1"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"3 2 2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\"\nassert solution(stdin) == \"impossible\\n2\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 1 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    \"\"\") == \"impossible\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(250) == 500.0\nassert solution(250, 750) == 499.0"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750') == 500.00\nassert solution('3\\n300 300\\n400 400') == 600.00\nassert solution('4\\n500 500\\n500 500') == 700.00\nassert solution('5\\n600 600\\n700 700\\n700 700') == 800.00\nassert solution('6\\n800 800\\n900 900\\n900 900\\n1000 1000') == 900.00"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == '500.00'\nprint('All tests passed.')"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 500.00, \"The solution should return 500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00\\n'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 500.0\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == '500.00', 'Solution not found'\nassert solution(stdin='2\\n250\\n250\\n') == '500.00', 'Test case 1 failed'\nassert solution(stdin='2\\n250\\n750\\n') == '500.00', 'Test case 2 failed'\nassert solution(stdin='5\\n250\\n250\\n250\\n250\\n') == '500.00', 'Test case 3 failed'\nassert solution(stdin='10\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n') == '500.00', 'Test case 4 failed'\nassert solution(stdin='100\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n250\\n') == '500.00', 'Test case 5 failed'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == '500.00\\n'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Expected: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0\\n'\n\nassert solution('''\n2 4\n2 100 10\n100 1 10\n''') == '0\\n'\n\nassert solution('''\n2 1\n2 100 10\n100 1 10\n''') == '0\\n'\n\nassert solution('''\n2 5\n2 100 10\n100 1 10\n''') == '0\\n'\n\nassert solution('''\n2 6\n2 100 10\n100 1 10\n''') == '0\\n'\n\nassert solution('''\n2 7\n2 100 10\n100 1 10\n''') == '0\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"5 5\\n2 5 10\\n1 50 20\\n2 3 10\\n100 3 100\") == 30\nassert solution(\"10 10\\n10 10 10\\n100 10 100\") == 400\nassert solution(\"10 10\\n5 5 10\\n2 3 10\\n100 3 100\") == 450\nassert solution(\"5 10\\n2 5 10\\n1 50 20\\n2 3 10\\n100 3 100\") == 450"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution for sample input {sample_input} is incorrect. Expected output {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '0\\n'\nassert solution(6) == '60\\n'\nassert solution(9) == '78\\n'\nassert solution(12) == '98\\n'\nassert solution(15) == '118\\n'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Expected output 0, but got {}\".format(solution())"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('5 5\\n1 2 3 4 5\\n2 3 4 5 6') == '60'\nassert solution('6 6\\n2 100 100 100 100\\n100 10 10 10 10') == '600'\nassert solution('7 8\\n2 100 100 100 100\\n100 10 10 10 10') == '10400'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"5 4\\n5 100 10\\n50 1 10\\n50 1 10\\n50 1 10\") == 5\nassert solution(\"3 2\\n5 100 10\\n10 1 10\") == 0\nassert solution(\"7 1\\n5 100 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\") == 600\nassert solution(\"5 5\\n5 100 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\\n50 1 10\") == 3333\nassert solution(\"3 3\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10\\n10 1 10"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"4\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 "
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output: The minimum number of file icons that must be moved in order to delete all the appropriate files in one delete operation is 2\\n', \"Test Failed\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2', \"Please implement the function solution\"\n\nfrom typing import List"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\") == \"2\"\nprint(\"Test passed\")"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBB.\\n....C\\nCCCC\"\nassert solution(\"3 4\\n1111\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n1111\\n1112\\n1111\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got {solution(sample_input)}\"\n\nsample_input = \"3 4\\n2211\\n1112\\n1112\"\nexpected_output = \"AAAA\\n..A\\n.B\\n..C\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"BB..\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"BBBB\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\nassert solution(\"5 3\\n2112\\n1122\\n1122\\n1111\") == \"impossible\"\nassert solution(\"5 3\\n2112\\n1122\\n1122\\n2222\") == \"BBBB\\n..C\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n...C\\nCCCC\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\"\n\nassert solution(\"3 4\\n2211\\n1112\\n1111\") == \"impossible\"\n\nassert solution(\"3 4\\n2211\\n1112\\n1113\") == \"BBBB\"\n\nassert solution(\"3 4\\n2211\\n1112\\n1111\") == \"impossible\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\", \"Incorrect output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nassert solution('5 3 1 3\\n4 2 1 3 3 2\\n3 5 1 2 1\\n1 4 1 2 3 2\\n2 4 1 3 2 2\\n3 2 1 2 1 3\\n4 1 1 2 3 2\\n5 2 1 3 2 2\\n6 3 1 2 1\\n7 4 1 2 3 2\\n8 5 1 2 1 3\\n9 6 1 2 3 2\\n10 7 1 2 1 3\\n11 8 1 2 3 2\\n12 9 1 2 1 3\\n') == 13\nassert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\n\nprint(\"Correct!\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"The expected output is not correct.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\nprint(\"All tests passed!\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '9', \"The solution should return the correct output\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Expected 9, got {}\".format(solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\"))"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078, \"The output is incorrect.\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 3 3 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 2 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 "
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"20.396078\", \"Incorrect output\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078, \"The provided code is incorrect.\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n0 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n0 0 8\") == \"IMPOSSIBLE\"\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n0 0 16\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"5 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 13.660663\nassert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"6 1 1 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n\") == 20.396078\nprint(\"All tests passed.\")"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\nc\\ndef\\n\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'd'\nassert solution('1') == 'b'\nassert solution('2') == 'c'\nassert solution('1 8') == 'd'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abca\\n'\n                   'bc cd da dd ee ff gg hh ii jj kk ll mm\\n'\n                   'nn oo pp qq rr ss tt uu vv ww xx yy zz\\n'\n                   '1\\n'\n                   '2\\n'\n                   '1 8') == 'b\\n'"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"\") == \"\"\nassert solution(\"a\" * 1000001) == \"a\" * 1000001\nassert solution(\"a\" * 1000000) == \"a\" * 1000000\nassert solution(\"a\" * 1000001) == \"a\" * 1000001\nassert solution(\"a\" * 1000000) == \"a\" * 1000000\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"b\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\\nbc\\ncd\\n\\nda\\n\\ndd\\ne\\n\\nfg\\nhh\\ni\\n\\njj\\nkk\\n\\nll\\nm\\n\\n\") == \"b\\nc\\ndef\\ngh\\ni\\nj\\nkl\\nmn\\nn\\no\\np\\nqq\\nrr\\nsu\\nvv\\nw\\nx\\ny\\nz\\n\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == ['b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m']"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin=\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin=\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin=\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(stdin=\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"robi\\nhobit\\n7\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hobotnica\") == \"h\"\nassert solution(\"robot\") == \"ro\"\nassert solution(\"hobi\") == \"hob\"\nassert solution(\"hobit\") == \"hob\"\nassert solution(\"robi\") == \"ro\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12\\n10\\n16\\n7\\n'\nassert solution('robi\\nhobi\\nhobit\\n') == '7\\n'\nassert solution('rakija\\n') == '0\\n'\nassert solution('robi\\n') == '0\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hobotnica\") == \"h\"\nassert solution(\"robot\") == \"r\"\nassert solution(\"hobi\") == \"h\"\nassert solution(\"hobit\") == \"h\"\nassert solution(\"robi\") == \"r\"\n\nsteps = []\nfor i in range(Q):\n    word1 = input()\n    word2 = input()\n    prefix = \"\"\n    for j in range(min(len(word1), len(word2))):\n        if word1[j] == word2[j]:\n            prefix += word1[j]\n        else:\n            break\n    steps.append(len(prefix))\n\nprint(\" \".join(str(x) for x in steps))"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nhobi\\nhobit\\nrakija') == ['12', '10', '16', '7', 'def solution(stdin: str) -> str:']\nprint(solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\\n4\\nhobi\\nhobit\\nrakija'))"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"12\n10\n16\n7\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'ab'\nassert solution(open('input.txt', 'r')) == 'ot'\nassert solution(open('input.txt', 'r')) == 'i'\nassert solution(open('input.txt', 'r')) == 'd'\nassert solution(open('input.txt', 'r')) == 'al'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST\\n'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\\n\"\nassert solution(\"15 5\\nHEY JUNK FOO BAR\") == \"HELLO WORLD\\n\"\nassert solution(\"16 6\\nAEIOUWEGHJKLMNOPQRSTUVWXYZ1234567890\") == \"246855063\\n\"\nassert solution(\"17 7\\nA ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\") == \"589474773\\n\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'THIS IS A TEST'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2.6) == [\"135\", \"270\", \"135135\", \"270270\"]"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1.0) == \"135\"\nassert solution(2.6) == \"135\"\nassert solution(5.0) == \"270\"\nassert solution(2.000000000000001) == \"135\"\nassert solution(1.0000000000000002) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\"\nassert solution(2.0000000000000001) == \"135\"\nassert solution(1.0000000000000001) == \"270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2.6) == [135, 270]\nprint(\"All solutions for X = 2.6:\")\nprint(*solution(2.6), sep=\"\\n\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"135\n270\"\"\"\nassert solution(\"2.6\") == \"\"\"135\n270\"\"\"\nassert solution(\"5.5\") == \"\"\"\"\"\"\nassert solution(\"9.99999999999999\") == \"\"\"\"\"\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == '135\\n270\\n135135\\n270270'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"Invalid solution\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"The number of castles in danger is 4.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# Test case 1\\nassert solution('0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\\n\\n# Test case 2\\n# assert solution('1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\\n\\n# Test case 3\\n# assert solution('0 1\\n0 0\\n2 3\\n3 4\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '0'\\n\\n# Test case 4\\n# assert solution('1 1\\n1 2\\n2 3\\n3 4\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '0'\\n\\n# Test case 5\\n# assert solution('1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 6\\n# assert solution('1 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8') == '10'\\n\\n# Test case 7\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 8\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 9\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 10\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 11\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 12\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 13\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 14\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 15\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 16\\n# assert solution('0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0'\\n\\n# Test case 17\\n# assert solution('0 0\\n0 0\\n0"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed. Expected output: '{expected_output}'. Received output: '{solution(input_str)}'.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"The solution does not match the expected output.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"Please implement the solution function.\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4, \"The given solution is incorrect\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(3) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(3) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1000\\n1 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n2 4\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n3 4\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n3 4\\n3 2\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n3 4\\n3 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n3 4\\n3 6\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 1.0000000\\n0.0000000"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"The output for the sample input is incorrect. Expected: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000'''"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution([1, 2, 1, 3, 1, 4, 1, 5]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution([2, 3, 4, 5, 1, 2, 3, 4, 5]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution([2, 3, 4, 5, 1, 2, 3, 4, 6]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution([2, 3, 4, 5, 1, 2, 3, 4, 7]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9]) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == [\n    [0.0000000, 0.0000000],\n    [1.0000000, 0.0000000],\n    [-1.0000000, 0.0000000],\n    [0.0000000, 1.0000000],\n    [0.0000000, -1.0000000]\n]"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"3 3\\naab\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"3 3\\naaa\\nbba\\nabb\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == ['aaa', 'abc', 'aba', '*aaa']"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"\"\nassert solution(\"aaa\") == \"aaa\"\nassert solution(\"abc\") == \"aba\"\nassert solution(\"a*a\") == \"aba\"\nassert solution(\"aaa*\") == \"aba\"\nassert solution(\"*aaa\") == \"aba\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Not enough input given\"\nassert solution(\"1 2\") == \"Not enough input given\"\nassert solution(\"1\") == \"Not enough input given\"\nassert solution(\"1 1 1\") == \"Not enough input given\"\nassert solution(\"1 2 3\") == \"Not enough input given\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage:\\nprint(solution('aaa')) # Output: 2\\nprint(solution('abc')) # Output: 1\\nprint(solution('aba')) # Output: 1\\nprint(solution('a*a')) # Output: 1\\nprint(solution('aaa*')) # Output: 1\\nprint(solution('*aaa')) # Output: 1\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\naaa\\nbbc\\naba\\na*a\\nbba\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str: pass\\n\"\n\nassert solution(\"3 3\\naaa\\nbbc\\naba\\na*a\\nbba\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\"\n) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"3 4\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 4\\nOO\\nOO\\nOO\\nOO\\nOO\\n\") == \"0\"\nassert solution(\"4 4\\nXO\\nXO\\nXO\\nXO\\nXO\\n\") == \"0\"\nassert solution(\"4 4\\nXO\\nOX\\nXO\\nXO\\nXO\\n\") == \"0\"\nassert solution(\"4 4\\nXO\\nXO\\nXO\\nXO\\nOO\\n\") == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nX\\nOO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOO\\nXO\\nOO\\nXO\\n\") == \"0\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOO\\n\") == \"0\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\n\") == \"0\"\nassert solution(\"4 2\\nXO\\nXO\\nOO\\nXO\\n\") == \"0\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nXO\\n\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nX\\nX\\nX\\nX\\nX\\nO\\nX\\nO\\n\") == \"0\"\nassert solution(\"4 2\\nOO\\nXO\\nXO\\nXO\\nXO\\nO\\nO\\nO\\n\") == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"3 3\\nXO\\nOX\\nOX\\nOX\\nXO\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"5 5\\nXO\\nOX\\nOX\\nOX\\nXO\\nOO\\nXO\\nOO\\n\") == 0\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 2) == 1\nassert solution(4, 3) == 0\nassert solution(4, 4) == 0\nassert solution(4, 5) == 1\nassert solution(5, 3) == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\nr\"4 2\\nXO\\nOO\\nOO\\nOO\\nXO\\nXO\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0\\n0 2\\n-2 0\\n0 -2') == '16\\n'\nassert solution('4\\n2 0\\n0 2\\n-2 0') == '16\\n'\nassert solution('6\\n3 1\\n1 3\\n3 2') == '36\\n'\nassert solution('10\\n10 10\\n0 0\\n10 10') == '500\\n'\nassert solution('10\\n10 10\\n0 0\\n10 10\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '500\\n'\nassert solution('10\\n10 10\\n0 0\\n10 10\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"16\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4\\n2 0\\n0 2\\n-2 0\") == 16\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '16\\n'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == '16'\nassert solution('5\\n0 2\\n2 0\\n0 -2') == '14'\nassert solution('6\\n2 1\\n0 2\\n2 1') == '20'\nassert solution('7\\n0 2\\n1 2\\n1 1') == '3'\nassert solution('8\\n1 2\\n1 0\\n0 2') == '5'\nassert solution('9\\n1 0\\n2 1\\n2 1') == '8'\nassert solution('10\\n1 0\\n1 1\\n1 2') == '12'\nassert solution('11\\n2 0\\n1 1\\n1 2') == '13'\nassert solution('12\\n0 2\\n1 2\\n2 0') == '22'\nassert solution('13\\n0 1\\n0 2\\n1 1') == '23'\nassert solution('14\\n0 0\\n0 1\\n1 2') == '25'\nassert solution('15\\n2 1\\n1 0\\n0 1') == '26'\nassert solution('16\\n0 0\\n0 1\\n0 0') == '26'\nassert solution('17\\n1 0\\n0 0\\n0 1') == '27'\nassert solution('18\\n1 0\\n0 1\\n0 2') == '27'\nassert solution('19\\n0 1\\n1 0\\n0 2') == '28'\nassert solution('20\\n0 2\\n0 0\\n0 1') == '29'\nassert solution('21\\n1 0\\n0 1\\n1 0') == '30'\nassert solution('22\\n0 1\\n1 0\\n1 0') == '31'\nassert solution('23\\n0 0\\n1 0\\n1 0') == '32'\nassert solution('24\\n1 1\\n1 0\\n0 1') == '33'\nassert solution('25\\n0 0\\n1 0\\n0 1') == '34'\nassert solution('26\\n1 1\\n1 0\\n1 1') == '36'\nassert solution('27\\n0 0\\n1 0\\n1 1') == '37'\nassert solution('28\\n1 1\\n1 0\\n1 1') == '40'\nassert solution('29\\n0 1\\n1 0\\n1 1') == '41'\nassert solution('30\\n0 1\\n1 0\\n1 1') == '43'\nassert solution('31\\n0 0\\n1 0\\n1 1') == '44'\nassert solution('32\\n1 1\\n1 0\\n1 1') == '45'\nassert solution('33\\n0 0\\n1 0\\n1 1') == '46'\nassert solution('34\\n1 1\\n1 0\\n1 1') == '48'\nassert solution('35\\n0 1\\n1 0\\n1 1') == '49'\nassert solution('36\\n0 0\\n1 0\\n1 1') == '50'\nassert solution('37\\n1 1\\n1 0\\n1 1') == '52'\nassert solution('38\\n0 1\\n1 0\\n1 1') == '53'\nassert solution('39\\n0 1\\n1 0\\n1 1') == '55'\nassert solution('40\\n0 0\\n1 0\\n1 1') == '56'\nassert solution('41\\n1 1\\n1 0\\n1 1') == '58'\nassert solution('42\\n0"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"2\\n3\\n4\\n5\") == \"120\"\nassert solution(\"3\\n5\\n2\\n1\") == \"9\"\nassert solution(\"10\\n5\\n2\\n1\") == \"0\"\nassert solution(\"5\\n4\\n2\\n1\") == \"100\"\nassert solution(\"1\\n2\\n3\\n4\") == \"300\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"16\"\nassert solution(input()) == \"18\"\nassert solution(input()) == \"22\"\nassert solution(input()) == \"26\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"80\", \"Sample Output: 80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 10 50\n    8 8 2 -2\n    \"\"\"\n) == \"80\"\n\nassert solution(\n    \"\"\"\n    5 3 100\n    3 -5 80\n    4 -3 20\n    10 2 -5\n    20 -2 15\n    \"\"\"\n) == \"15\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3 3 3\n    3 -3 3\n    3 -3 3\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"80\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"80\", \"Your code is incorrect.\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"80\\n\", \"Test case 1\"\n\nn, c, r = map(int, stdin.split())\n\nassert n == 4, \"Test case 2\"\nassert c == 10, \"Test case 2\"\nassert r == 50, \"Test case 2\"\n\ns = list(map(int, stdin.split()))\n\nassert len(s) == n, \"Test case 3\"\n\nfor score in s:\n    assert -1000 <= score <= 1000, \"Test case 4\"\n\nassert sum(s) == 0, \"Test case 5\"\n\nmax_score = max(s)\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if s[i] * s[j] < 0:\n            continue\n        if s[i] > s[j]:\n            score_diff = max_score - s[i]\n        else:\n            score_diff = s[j] - max_score\n        if score_diff!= 1:\n            return \"0\"\n\nfor i in range(n-1):\n    score_diff = max_score - s[i] + s[i+1]\n    if score_diff!= -1:\n        return \"0\"\n\nreturn \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80\\n'\nassert solution('2 1 2\\n-2 -1 -2\\n') == '100\\n'\nassert solution('4 1 5\\n-2 -1 2\\n') == '50\\n'\nassert solution('1 1 1\\n1 1 1\\n') == '100\\n'\nassert solution('1 1 1\\n0 0 0\\n') == '100\\n'\nassert solution('2 2 2\\n1 1 1\\n') == '50\\n'\nassert solution('3 3 3\\n2 2 2\\n') == '100\\n'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"80\", \"Your solution is not correct.\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\\n\"\nassert solution(\"1 8\\n10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"1000000000.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n7 7\\n1 10\\n2 10\\n4 8\\n8 10\\n5 8\\n9 8\\n5 9\\n2 8\\n2 9\\n1 9\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n7 7\\n1 10\\n2 10\\n4 8\\n8 10\\n5 8\\n9 8\\n5 9\\n2 8\\n2 9\\n1 9\") == \"4.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n7 7\\n1 10\\n2 10\\n4 8\\n8 10\\n5 8\\n9 8\\n5 9\\n2 8\\n2 9\\n1 9\") == \"1.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n7 7\\n1 10\\n2 10\\n4 8\\n8 10\\n5 8\\n9 8\\n5 9\\n2 8\\n2 9\\n1 9\\n2 10\\n5 10\\n7 8\\n10 10\") == \"4.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == '3.000000000', 'The solution is incorrect.'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 1000\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"inf\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1\\n'\n\nassert solution('''\n5 4\n0 1 0 1 0\n1 2 0 0 0\n2 3 0 0 1\n3 4 0 1 0\n4 1 0 1 1\n''') == '2\\n'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Invalid input. Please provide valid input as string.\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, \"Test case failed\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=r\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"1\"\n\nassert solution(stdin=r\"\"\"\n5 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n\"\"\") == \"2\"\n\nassert solution(stdin=r\"\"\"\n6 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n\"\"\") == \"3\"\n\nassert solution(stdin=r\"\"\"\n7 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n\"\"\") == \"3\"\n\nassert solution(stdin=r\"\"\"\n8 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n9 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n10 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n11 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n12 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n\"\"\") == \"4\"\n\nassert solution(stdin=r\"\"\"\n13 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n\"\"\") == \"5\"\n\nassert solution(stdin=r\"\"\"\n14 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n\"\"\") == \"5\"\n\nassert solution(stdin=r\"\"\"\n15 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n\"\"\") == \"5\"\n\nassert solution(stdin=r\"\"\"\n16 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n\"\"\") == \"6\"\n\nassert solution(stdin=r\"\"\"\n17 3\n0 1 0 0\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n\"\"\") == \"6\"\n\nassert solution(stdin=r\"\"\"\n18 3"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1, \"Your code is incorrect.\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == 1\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == 1\nassert solution('0 0\\n0 1\\n0 0\\n1 0\\n0 0\\n') == 1\nassert solution('4 4\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == 3\nassert solution('4 4\\n0 1 0 0\\n1 2 3\\n2 3 4\\n') == 5\nassert solution('4 4\\n0 1 0 0\\n1 2 3\\n2 3 4\\n') == 5\nassert solution('4 4\\n0 1 0 0\\n1 2 3\\n2 3 4\\n') == 5"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(1)\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nprint(1)\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6.283185"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6.283185, \"Test failed!\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\nprint(\"All tests passed!\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\nassert solution('''\n6 6\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n2 3\n3 4\n''') == '4.142135623730951'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6.283185\", \"Test failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Output should be '{sample_output}', but got '{solution(sample_input)}'.\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, \"Test failed\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 2 3\", \"The solution is incorrect\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"1 2 3\\n\"\nassert solution(\"3\\n\") == \"1 2 4\\n\"\nassert solution(\"4\\n\") == \"1 3 4\\n\"\nassert solution(\"5\\n\") == \"1 2 4 5\\n\"\nassert solution(\"6\\n\") == \"1 2 5 6\\n\"\nassert solution(\"7\\n\") == \"1 2 6 7\\n\"\nassert solution(\"8\\n\") == \"1 2 6 7 8\\n\"\nassert solution(\"9\\n\") == \"1 2 6 7 8 9\\n\"\nassert solution(\"10\\n\") == \"1 2 6 7 8 9 10\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(5) == \"1 2 3 4 5\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution {solution.__name__} does not match the expected output\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 2 3\\n'\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 3\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1 2 3 4\"\nassert solution() == \"\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"The sample input and output are not matching. Please check the solution code.\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n1 2 3 4\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"1\n1 2 3 4\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\nprint(\"Test passed!\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n1 2 3 4\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\nassert solution(\"6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"1\\n2 3 4 5\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"5 5\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2') == '1\\n'\nassert solution('3 4\\n1 2\\n2 3\\n3 4\\n') == '2\\n'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5') == '2\\n'\nassert solution('5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '2\\n'\nassert solution('6 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '2\\n'\nassert solution('7 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '2\\n'\nassert solution('8 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '2\\n'\nassert solution('9 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '3\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 2') == '1\\n'\nassert solution('5 7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5') == '5\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 1\\n1 2\\n1 3\\n\") == \"1\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 2\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 2\\n2 3\\n4 3\\n\") == \"3\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\n\nassert solution(\"3 2\\n1 2\\n2 3\\n2 4\\n3 4\\n\") == \"4\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"3 4\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"2\\n\"\nassert solution(\"6 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nassert solution(\"4 5\\n1 2\\n2 3\\n3 4\\n4 5\") == 1\nassert solution(\"2 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == 2\nassert solution(\"2 3\\n1 2\\n2 3\\n3 4\\n4 5\") == 3\nassert solution(\"2 1\\n1 2\\n2 3\") == 4\nassert solution(\"2 1\\n1 2\\n2 3\\n3 4\") == 5\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n4 5\") == 6"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2 1\n    1 2\n    ''') == '1\\n'\n\nassert solution('''\n    3 4\n    1 2\n    2 3\n    1 3\n    ''') == '4\\n'\n\nassert solution('''\n    5 7\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 1\n    7 6\n    1 7\n    6 4\n    4 6\n    6 5\n    ''') == '9\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\nassert __name__ == '__main__'"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"Solution for n = 2 should be 45.\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '45'"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45, \"Expected output 45, but got {}\".format(solution(2))"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 45\n\nsolution(2)"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45\nprint(\"All test cases passed\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45, \"The expected output is 45, but got {}\".format(solution(2))"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"The solution is not correct\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\\n\") == \"4\\n\"\nassert solution(\"3 10\\n\") == \"0\\n\"\nassert solution(\"10 10 10 10\\n\") == \"0\\n\"\nassert solution(\"4 10 10\\n\") == \"4\\n\"\nassert solution(\"3 15 20\\n\") == \"2\\n\"\nassert solution(\"10 10 20\\n\") == \"2\\n\"\nassert solution(\"10 10 10\\n\") == \"1\\n\"\nassert solution(\"4 10 10\\n\") == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 15 15\\n7 11 9 12 2\") == \"2\"\nassert solution(\"5 20 30\\n7 11 9 12 2\") == \"2\"\nassert solution(\"5 20 20\\n7 11 8 12 2\") == \"0\"\nassert solution(\"5 20 20\\n7 11 9 12 1\") == \"4\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == 4, \"Test Case 1\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == 4, \"Test Case 2\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == 4, \"Test Case 3\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == 4, \"Test Case 4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == 4, \"Test Case 5\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", solution(stdin)"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\nassert solution(\"5 20 10\\n7 11 9 12 2\") == \"0\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 42, \"The code provided is incorrect. Please see the examples provided.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 20 20\n    7 11 9 12 2\n''') == 4\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('1 1\\n') == '1\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\ncharlie 2 williamshakespeare\\njoe 2 williamshakespeare\\nkate 2 williamshakespeare\") == \"1\"\nassert solution(\"2 3\\njoe 1 williamshakespeare\\nkate 2 williamshakespeare\\ncharlie 3 williamshakespeare\\nkenny 3 williamshakespeare\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == 2"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Expected output: '2'\\nActual output: '\"+solution()+\"'\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"1 1\\nbob 1\\nalice 1\\nbob 2\\nalice 2\\nbob 3\\nalice 3\") == \"1\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2, \"Expected 2, but got {}\".format(solution)"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == 2\nprint('All tests passed.')"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\n\"\nassert solution(\"2\\n00\") == \"1 1\\n\"\nassert solution(\"1\\n01\\n01\") == \"3 1\\n\"\nassert solution(\"1\\n01\\n00\") == \"1 2\\n\"\nassert solution(\"1\\n01\\n11\") == \"1 3\\n\"\nassert solution(\"2\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n00\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\") == \"4 3\\n\"\nassert solution(\"2\\n01\\n11\\n01\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n10\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n00\") == \"1 1\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11\") == \"5 4\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n01\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n10\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n00\") == \"1 1\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11\\n11\") == \"5 4\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n01\\n11\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n10\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n00\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11\\n11\\n11\") == \"5 4\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n01\\n11\\n11\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n10\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n00\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11\\n11\\n11\\n11\") == \"5 4\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n01\\n11\\n11\\n11\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n10\\n11\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n00\\n11\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11\\n11\\n11\\n11\\n11\") == \"5 4\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n01\\n11\\n11\\n11\\n11\") == \"1 3\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n10\\n11\\n11\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n00\\n11\\n11\\n11\\n11\") == \"1 2\\n\"\nassert solution(\"2\\n01\\n11\\n11\\n11"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n01\\n\"\n) == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n01\\n') == '2 1\\n'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('01') == '2 1\\n'\nassert solution('00') == '2 1\\n'\nassert solution('10') == '2 1\\n'\nassert solution('11') == '2 1\\n'\nassert solution('11000') == '2 1\\n'\nassert solution('11001') == '2 1\\n'\nassert solution('11111') == '2 1\\n'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('1\\n10') == '0 1'\nassert solution('1\\n00') == '1 1'\nassert solution('1\\n11') == '1 1'\nassert solution('1\\n101') == '2 2'\nassert solution('1\\n1101') == '3 2'\nassert solution('1\\n11001') == '4 2'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"2\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"2\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"1\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"1\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"4\\n5 1\\n1234\\n6789\\n7890\\n\") == \"4 5\\n1234\\n7890\\n6789\\n5432\\n\"\nassert solution(\"3\\n3 1\\n3333\\n3333\\n3333\\n\") == \"3 3\\n3333\\n3333\\n3333\\n3333\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"1\\n10\\n2 2\\n1\\n\") == \"1 10\\n111\\n222\\n222\\n\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution:\n    from collections import deque\n    import re\n\n    def can_order(d: dict) -> bool:\n        if len(d) > 1:\n            for i in range(len(d) - 1):\n                for j in range(i + 1, len(d)):\n                    if d[j] < d[i]:\n                        return False\n        return True\n\n    def can_install(packages: list) -> bool:\n        if len(packages) == 1:\n            return True\n        required = set()\n        for pkg in packages:\n            required.update(pkg.split())\n        for pkg in required:\n            if pkg not in packages:\n                return False\n        return True\n\n    def order_packages(packages: list) -> list:\n        if len(packages) == 1:\n            return [packages[0]]\n        d = {}\n        for pkg in packages:\n            for dep in pkg.split():\n                if dep not in d:\n                    d[dep] = 1\n                else:\n                    d[dep] += 1\n        if not can_order(d):\n            return []\n        q = deque()\n        q.append(packages[0])\n        while q:\n            pkg = q.popleft()\n            if pkg in d and can_install([pkg]):\n                for dep in pkg.split():\n                    if dep in d and d[dep] > 0:\n                        q.append(dep)\n                        d[dep] -= 1\n        return sorted(list(set(packages)))\n\n    with open('input.txt', 'r') as f:\n        n = int(f.readline())\n        packages = [line.strip() for line in f.readlines()]\n\n    result = ''\n    for i in range(n):\n        if not packages[i]:\n            result += 'cannot be ordered\\n'\n            continue\n\n        order = order_packages(packages[i].split())\n        result +=''.join(order) + '\\n'\n\n    with open('output.txt', 'w') as f:\n        f.write(result)"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nassert solution(stdin) == 'cannot be ordered\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nsolution(stdin)'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'atk' + '\\n' + 'freetype' + '\\n' + 'glib2' + '\\n' + 'libattr' + '\\n' + 'libjpeg' + '\\n' + 'pcre' + '\\n' + 'grep' + '\\n' + 'vim-common' + '\\n' + 'xorg-x11-libs' + '\\n' + 'pango' + '\\n' + 'zlib' + '\\n' + 'libtiff' + '\\n' + 'gtk2' + '\\n' + 'vim-X11'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) -> str:\n    n = int(stdin)\n    packages = []\n\n    for _ in range(n):\n        pkg_name, deps = stdin.strip().split()\n        pkg_deps = [pkg for pkg in deps.split() if pkg.strip()!= \"\"]\n        packages.append((pkg_name, pkg_deps))\n\n    def topological_sort(graph):\n        visited = set()\n        stack = []\n\n        def topo_sort(node):\n            visited.add(node)\n            for neighbor in graph[node]:\n                if neighbor not in visited:\n                    topo_sort(neighbor)\n            stack.append(node)\n\n        for node in graph:\n            if node not in visited:\n                topo_sort(node)\n\n        return stack\n\n    graph = {}\n    for pkg, deps in packages:\n        for dep in deps:\n            graph.setdefault(dep, []).append(pkg)\n\n    sorted_packages = topological_sort(graph)\n    ordered_packages = []\n\n    for pkg in sorted_packages:\n        ordered_packages.append(pkg)\n        for dep in graph.get(pkg, []):\n            if dep not in ordered_packages:\n                ordered_packages.append(dep)\n\n    return '\\n'.join(ordered_packages) + '\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\"\nassert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"atk\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff atk pango xorg-x11"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n') == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\", \"Incorrect output for sample input.\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='32 20') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('32 20') == 16, \"Your code is incorrect.\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the age and lower bound: \")) == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"21 100\") == \"100\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 20\") == \"16\\n\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\", \"Incorrect output.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution failed for input {input()} and expected output {output}.\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5 13\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test the correctness of solution\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n    3 4\n....\n.#.#\n....\n\"\"\") == 5, \"Invalid output\"\n\nassert solution(r\"\"\"\n    5 4\n....\n.#.#\n....\n\"\"\") == 13, \"Invalid output\"\n\nassert solution(r\"\"\"\n    4 4\n....\n.#.#\n....\n\"\"\") == 13, \"Invalid output\"\n\nassert solution(r\"\"\"\n    4 3\n....\n.#.#\n....\n\"\"\") == 12, \"Invalid output\"\n\nassert solution(r\"\"\"\n    4 4\n....\n.#.#\n....\n\"\"\") == 0, \"Invalid output\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13\\ndef solution(stdin: str) -> str:\\n    n, m = map(int, stdin.split())\\n    board = []\\n    for _ in range(n):\\n        board.append(list(stdin))\\n    for i in range(n):\\n        for j in range(m):\\n            if board[i][j] == '#' or board[i][j] == '.' or (i == j // 2 and board[i][j] == '#') or (i == j // 2 and board[j][i] == '#') or (i < j // 2 and i < j % 2 and board[i][j] == '#') or (i > j // 2 and i > j % 2 and board[i][j] == '#') or (j < i // 2 and j < i % 2 and board[i][j] == '#') or (j > i // 2 and j > i % 2 and board[i][j] == '#'):\\n                board[i][j] =''\n    queens = 0\n    for i in range(n):\n        for j in range(m):\n            if board[i][j] == 'Q':\n                queens += 1\n    for i in range(n):\n        for j in range(m):\n            if board[i][j] == 'Q' and (i < j // 2 or i > j // 2 or j < i // 2 or j > i // 2) and (i + j) % 2 == 0:\n                board[i][j] = '.'\n    for i in range(n):\n        for j in range(m):\n            if board[i][j] == 'Q' and (i < j // 2 or i > j // 2 or j < i // 2 or j > i // 2):\n                queens -= 1\n    for i in range(n):\n        for j in range(m):\n            if board[i][j] == 'Q' and board[i][j]!= 'Q' and board[i][j]!= '.' and board[i][j]!= '#':\n                board[i][j] = 'Q'\n    for i in range(n):\n        for j in range(m):\n            if board[i][j] == 'Q':\n                queens += 1\n    return queens, n * m"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('queens.in', 'r').read()) == '5 13'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....\\n') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\nassert solution('2 3 5 1\\n2 3 3 1\\n3 1? 0') == '2'\nassert solution('2 3 5 1\\n2 3 3 1\\n3 1? 0') == '1'\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No solution exists for this problem.\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 2 5 1\n2 3 3 1\n3 1? 0''') == '5'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"5 3\\n-1 0\\n-1 2\\n-1 4\") == \"3\\n\"\nassert solution(\"5 1\\n-1 0\") == \"2\\n\"\nassert solution(\"5 1\\n-1 3\") == \"0\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    2 3\n    0 -1\n    1 1\n    \"\"\"), \"Sample Output: 0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\n\nassert solution(\"5 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == 3\n\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == 3\n\nassert solution(\"1 0\\n1 1\\n0 0\") == 0\n\nassert solution(\"2 0\\n0 1\\n1 0\") == 0\n\nassert solution(\"1 1\\n0 0\\n0 1\") == 1\n\nassert solution(\"0 0\\n0 0\\n0 0\") == 0\n\nassert solution(\"2 3\\n0 1\\n0 2\\n1 2\\n1 3\\n2 3\") == 2\n\nassert solution(\"1 2\\n2 3\\n3 4\\n3 5\\n2 4\\n1 3\") == 2\n\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n5 6\\n4 5\\n3 4\\n2 3\\n1 2\") == 3\n\nassert solution(\"1 0\\n0 1\\n1 0\\n0 0\\n0 1\\n1 0\") == 0\n\nassert solution(\"1 1\\n0 0\\n0 1\\n1 0\\n0 0\\n1 1\") == 1\n\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == 0\n\nassert solution(\"2 3\\n0 1\\n0 2\\n1 2\\n1 3\\n2 3\\n3 2\\n3 1\\n2 2\\n1 1\\n0 0\") == 3\n\nassert solution(\"1 2\\n2 3\\n3 4\\n3 5\\n2 4\\n1 3\\n2 1\\n3 0\\n4 1\\n5 0\\n6 1\\n7 0\\n6 1\\n5 0\\n4 1\\n3 0\\n2 1\\n1 0\\n0 1\") == 3"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"4 3\\n-1 1\\n2 0\\n3 1\") == \"3\\n\"\nassert solution(\"5 3\\n-1 0\\n-1 2\\n-1 3\") == \"3\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == 'Not enough input provided.'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 6\nprint(\"pass\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, \"9 6 2 4\") == \"6\\n\"\nassert solution(5, \"9 6 2 4\") == \"10\\n\"\nassert solution(6, \"9 6 2 4\") == \"18\\n\"\nassert solution(7, \"9 6 2 4\") == \"30\\n\"\nassert solution(8, \"9 6 2 4\") == \"32\\n\"\nassert solution(9, \"9 6 2 4\") == \"36\\n\"\nassert solution(10, \"9 6 2 4\") == \"36\\n\"\nassert solution(11, \"9 6 2 4\") == \"36\\n\"\nassert solution(12, \"9 6 2 4\") == \"36\\n\"\nassert solution(13, \"9 6 2 4\") == \"36\\n\"\nassert solution(14, \"9 6 2 4\") == \"36\\n\"\nassert solution(15, \"9 6 2 4\") == \"36\\n\"\nassert solution(16, \"9 6 2 4\") == \"36\\n\"\nassert solution(17, \"9 6 2 4\") == \"36\\n\"\nassert solution(18, \"9 6 2 4\") == \"36\\n\"\nassert solution(19, \"9 6 2 4\") == \"36\\n\"\nassert solution(20, \"9 6 2 4\") == \"36\\n\"\nassert solution(21, \"9 6 2 4\") == \"36\\n\"\nassert solution(22, \"9 6 2 4\") == \"36\\n\"\nassert solution(23, \"9 6 2 4\") == \"36\\n\"\nassert solution(24, \"9 6 2 4\") == \"36\\n\"\nassert solution(25, \"9 6 2 4\") == \"36\\n\"\nassert solution(26, \"9 6 2 4\") == \"36\\n\"\nassert solution(27, \"9 6 2 4\") == \"36\\n\"\nassert solution(28, \"9 6 2 4\") == \"36\\n\"\nassert solution(29, \"9 6 2 4\") == \"36\\n\"\nassert solution(30, \"9 6 2 4\") == \"36\\n\"\nassert solution(31, \"9 6 2 4\") == \"36\\n\"\nassert solution(32, \"9 6 2 4\") == \"36\\n\"\nassert solution(33, \"9 6 2 4\") == \"36\\n\"\nassert solution(34, \"9 6 2 4\") == \"36\\n\"\nassert solution(35, \"9 6 2 4\") == \"36\\n\"\nassert solution(36, \"9 6 2 4\") == \"36\\n\"\nassert solution(37, \"9 6 2 4\") == \"36\\n\"\nassert solution(38, \"9 6 2 4\") == \"36\\n\"\nassert solution(39, \"9 6 2 4\") == \"36\\n\"\nassert solution(40, \"9 6 2 4\") == \"36\\n\"\nassert solution(41, \"9 6 2 4\") == \"36\\n\"\nassert solution(42, \"9 6 2 4\") == \"36\\n\"\nassert solution(43, \"9 6 2 4\") == \"36\\n\"\nassert solution(44, \"9 6 2 4\") == \"36\\n\"\nassert solution(45, \"9 6 2 4\") == \"36\\n\"\nassert solution(46, \"9 6 2 4\") == \"36\\n\"\nassert solution(47, \"9 6 2 4\") == \"36\\n\"\nassert solution(48, \"9 6 2 4\") == \"36\\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test Case Failed: {input_data}!= {output_data}\" for input_data, output_data in [\n    (\"4\\n9 6 2 4\", \"6\"),\n    (\"6\\n1 2 3 4\", \"6\"),\n]"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n9 6 2 4') == '6\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2.000000, \"Test failed for the given input.\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nassert solution(\"2 5 1\") == 2.0\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.000000\\n\", \"The solution is incorrect\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.000000\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nassert solution(\"2 5 1\") == 2.0\nassert solution(\"\") == 0\nassert solution(\"1 1 1000 1 10000000\") == 0\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == 2.0\nassert solution(\"2 5 1\") == 2.0\nassert solution(\"2 6 2\") == 1.0\nassert solution(\"2 8 2\") == 0.0\nassert solution(\"3 4 3\") == 1.0\nassert solution(\"4 3 4\") == 1.0\nassert solution(\"5 7 4\") == 1.0\nassert solution(\"6 6 5\") == 0.0\nassert solution(\"7 7 5\") == 0.0\nassert solution(\"8 8 6\") == 0.0"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"96\"\nassert solution(10) == \"4560\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4') == 96\nassert solution('2\\n3\\n4') == 128\nassert solution('1\\n1\\n1\\n1') == 1\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n21"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == 96, \"Test case 1 failed\"\n\nassert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n5 6\\n7 8') == 161, \"Test case 2 failed\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4') == '96\\n'\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 96, \"The minimum transmission cost of the resulting network C should be 96, but it is {}\".format(solution())"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 1, 2, 2, 3, 4]) == \"96\" # correct"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 96, \"Test case 1 incorrect\"\nassert solution(5) == 32, \"Test case 2 incorrect\"\nassert solution(7) == 128, \"Test case 3 incorrect\"\nassert solution(9) == 256, \"Test case 4 incorrect\"\nassert solution(11) == 512, \"Test case 5 incorrect\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 96, \"Sample Output: \" + str(solution(3)) + \"\\n\"  # expected output: 96\nassert solution(5) == 240, \"Sample Output: \" + str(solution(5)) + \"\\n\"  # expected output: 240"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3\\n2'\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution.py) == '3\\n3\\n'\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '3\\n' + 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case} failed with expected output: {expected_output}, but got: {solution(input_str)}\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n7 8\") == \"10\\n8\\n7\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\") == \"10\\n8\\n7\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()} and output {output()}\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\"\n\ntest_case = 1\nstdin = \"\"\"3\n2 8\n3 1\n1 4\"\"\"\nexpected_output = \"\"\"10\n10\n9\"\"\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\\n10\\n9\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('4 4\\n#..#\\n#JF#\\n####\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#..#\\n#JF#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#..#\\n#..#\\n#JF#\\n') == '3'\nassert solution('4 4\\n####\\n#..#\\n#JF#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3'\nassert solution('4 4\\n####\\n#..#\\n#JF#\\n#..#\\n') == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 3\\n....\\n....\\n....\\n\") == \"1\"\nassert solution(\"4 10\\n....\\n....\\n....\\n\") == \"60\"\nassert solution(\"5 7\\n#..#.\\n#..#.\\n#..#.\\n#..#.\\n\") == \"1\"\nassert solution(\"5 9\\n....\\n....\\n....\\n....\\n\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Input:\\n{input()}\\nExpected Output:\\n{expected_output}\\nActual Output:\\n{solution(input())}\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"1 4\\n#####\\n#..#\\n#..#\\n\") == \""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4 4\\n#..#\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"4"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"5 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"5 5\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"5 4\\n####\\n#JF#\\n#..#\\n###\\n\") == \"2\\n\"\nassert solution(\"5 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 4\\n####\\n#JF#\\n#..#\\n###\\n\") == \"2\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\nassert solution(\"1 2 1\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\nassert solution(\"1 2 1\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\nassert solution(\"1 2 1\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\nassert solution(\"1 2 1\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.3333333333\\n\", \"Sample Output\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 2 2\\n2\\n1 1\\n\") == '0.3333333333\\n'\nassert solution(stdin=\"1 2 2\\n2\\n1 6\\n\") == '0.0\\n'\nassert solution(stdin=\"1 3 2\\n2\\n1 2\\n\") == '0.6666666667\\n'\nassert solution(stdin=\"1 3 2\\n2\\n1 5\\n\") == '0.0\\n'\nassert solution(stdin=\"2 3 2\\n2\\n1 2\\n\") == '0.0\\n'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333\nassert solution(\"1 3 1\\n2\\n1 1\\n\") == 0.3333333333\nassert solution(\"2 1 2\\n2\\n1 1\\n\") == 0.6666666667\nassert solution(\"1 2 2\\n1\\n1 1\\n\") == 0.6666666667\nassert solution(\"3 2 1\\n1\\n1 1\\n\") == 0.6666666667\n\nimport random"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed!\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 2\n2\n1 1\n''') == '0.3333333333'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == 0.3333333333\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n1') == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\n1\\n') == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 1023\nassert solution(1) == 1023\nassert solution(11) == 1023\nassert solution(111) == 1023\nassert solution(1111) == 1023\nassert solution(11111) == 1023\nassert solution(111111) == 1023\nassert solution(1111111) == 1023\nassert solution(11111111) == 1023\nassert solution(111111111) == 1023\nassert solution(1111111111) == 1023\nassert solution(11111111111) == 1023\nassert solution(111111111111) == 1023\nassert solution(1111111111111) == 1023\nassert solution(11111111111111) == 1023\nassert solution(111111111111111) == 1023\nassert solution(1111111111111111) == 1023\nassert solution(11111111111111111) == 1023\nassert solution(111111111111111111) == 1023\nassert solution(1111111111111111111) == 1023\nassert solution(11111111111111111111) == 1023\nassert solution(111111111111111111111) == 1023\nassert solution(1111111111111111111111) == 1023\nassert solution(11111111111111111111111) == 1023\nassert solution(11111111111111111111111111) == 1023\nassert solution(1111111111111111111111111111) == 1023\nassert solution(1111111111111111111111111111111) == 1023\nassert solution(111111111111111111111111111111111) == 1023\nassert solution(111111111111111111111111111111111) == 1023\nassert solution(11111111111111111111111111111111111) == 1023\nassert solution(1111111111111111111111111111111111111) == 1023\nassert solution(1111111111111111111111111111111111111) == 1023\nassert solution(111111111111111111111111111111111111111) == 1023\nassert solution(111111111111111111111111111111111111111) == 1023\nassert solution(111111111111111111111111111111111"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == {\n    \"test\": 1\n}\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"1023\"\nprint(\"pass\")"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n') == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 6, \"The output should be 6\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(5) == 47\nassert solution(7) == 52\nassert solution(1) == 0\nassert solution(1000000000) == 1\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'2 2\\n') == b'6\\n'  # correct\nassert solution(b'3 3\\n') == b'14\\n'  # correct\nassert solution(b'4 4\\n') == b'20\\n'  # correct\nassert solution(b'5 5\\n') == b'28\\n'  # correct\nassert solution(b'6 6\\n') == b'36\\n'  # correct"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Testcase 1 failed\"\nassert solution(\"3 3\") == \"9\\n\", \"Testcase 2 failed\"\nassert solution(\"1 1\") == \"10\\n\", \"Testcase 3 failed\"\nassert solution(\"0 0\") == \"0\\n\", \"Testcase 4 failed\"\nassert solution(\"10 10\") == \"10000000000\\n\", \"Testcase 5 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2') == '6'\nassert solution('10 10') == '5720'\nassert solution('10 100') == '9018879'\nassert solution('1 1') == '0'\nassert solution('100 1000') == '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\", solution(stdin)"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 2) == 6, \"Incorrect output\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\", \"Test failed\"\nassert solution(\"0 1\\n\") == \"1\\n\", \"Test failed\"\nassert solution(\"1 1\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"2 1\\n\") == \"2\\n\", \"Test failed\"\nassert solution(\"2 0\\n\") == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\n'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n\") == \"2930\\nImpossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n14"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2930\\n\", \"Your code is missing an assert statement for the expected output.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n999\\n\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2930\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\\n1200 1800\\n1400\\n1600\\n1800\") == \"Impossible\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\\n1200 1800\\n1400\\n1600\\n1800\\n\\n1300 1900\\n1500\\n1700\\n1900\") == \"Impossible\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"2\"\nprint(\"The least number of times an object must be read into the cache to handle the accesses listed in the input is 2.\")"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=f) == expected_output, f\"Your solution does not pass the test case. Expected: {expected_output}, Received: {solution(stdin=f)}\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2, \"Incorrect solution.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2 # This is the correct solution"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n2\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n3\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n4\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n5\") == \"0\"\nassert solution(\"1 2 3\\n0\\n0\\n6\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n7\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n8\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n9\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n10\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n11\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n12\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n13\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n14\") == \"4\"\nassert solution(\"1 2 3\\n0\\n0\\n15\") == \"5\"\nassert solution(\"1 2 3\\n0\\n0\\n16\") == \"5\"\nassert solution(\"1 2 3\\n0\\n0\\n17\") == \"6\"\nassert solution(\"1 2 3\\n0\\n0\\n18\") == \"7\"\nassert solution(\"1 2 3\\n0\\n0\\n19\") == \"7\"\nassert solution(\"1 2 3\\n0\\n0\\n20\") == \"8\"\nassert solution(\"1 2 3\\n0\\n0\\n21\") == \"9\"\nassert solution(\"1 2 3\\n0\\n0\\n22\") == \"10\"\nassert solution(\"1 2 3\\n0\\n0\\n23\") == \"11\"\nassert solution(\"1 2 3\\n0\\n0\\n24\") == \"11\"\nassert solution(\"1 2 3\\n0\\n0\\n25\") == \"12\"\nassert solution(\"1 2 3\\n0\\n0\\n26\") == \"12\"\nassert solution(\"1 2 3\\n0\\n0\\n27\") == \"12\"\nassert solution(\"1 2 3\\n0\\n0\\n28\") == \"13\"\nassert solution(\"1 2 3\\n0\\n0\\n29\") == \"13\"\nassert solution(\"1 2 3\\n0\\n0\\n30\") == \"14\"\nassert solution(\"1 2 3\\n0\\n0\\n31\") == \"14\"\nassert solution(\"1 2 3\\n0\\n0\\n32\") == \"15\"\nassert solution(\"1 2 3\\n0\\n0\\n33\") == \"15\"\nassert solution(\"1 2 3\\n0\\n0\\n34\") == \"16\"\nassert solution(\"1 2 3\\n0\\n0\\n35\") == \"16\"\nassert solution(\"1 2 3\\n0\\n0\\n36\") == \"17\"\nassert solution(\"1 2 3\\n0\\n0\\n37\") == \"17\"\nassert solution(\"1 2 3\\n0\\n0\\n38\") == \"18\"\nassert solution(\"1 2 3\\n0\\n0\\n39\") == \"18\"\nassert solution(\"1 2 3\\n0\\n0\\n40\") == \"19\"\nassert solution(\"1 2 3\\n0\\n0\\n41\") == \"20\"\nassert solution(\"1 2 3\\n0\\n0\\n42\") == \"21\"\nassert solution(\"1 2"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n\"\"\") == \"10\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\"\n) == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('gunnar.in', 'r')) == '10\\n'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 10, \"Solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\n\nimport math"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\", \"Please provide the correct solution\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n3 1 500\") == \"1500\"\nassert solution(\"1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"2 3 1000\\n1 2 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"1500\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Solution is incorrect\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 1\\n0 1\\n1 0\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 0\\n1 1\\n\") == \"3\\n\"\nassert solution(\"2 2\\n0 1\\n1 0\\n1 1\\n\") == \"4\\n\"\nassert solution(\"2 3\\n1 0\\n1 1\\n0 1\\n1 2\\n\") == \"4\\n\"\nassert solution(\"3 2\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"2 3\\n1 0\\n1 1\\n0 1\\n1 2\\n1 3\\n2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n1 0\\n1 1\\n0 1\\n1 2\\n1 3\\n2 3\\n3 3\\n4 3\\n\") == \"6\\n\"\nassert solution(\"3 3\\n1 0\\n1 1\\n0 1\\n1 2\\n1 3\\n2 3\\n3 3\\n3 4\\n\") == \"5\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\nassert solution(\"5 3\\n0 1 2\\n3 4\\n1 5\\n4 0\") == \"1\\n\"\nassert solution(\"3 3\\n1 2\\n0 3\\n2 0\") == \"2\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n10 10\\n9 8 7 6 5 4 3 2 1\\n8 7 6 5 4 3 2 1 0\\n7 6 5 4 3 2 1 0 9\\n6 5 4 3 2 1 0 9 8\\n5 4 3 2 1 0 9 8 7\\n4 3 2 1 0 9 8 7 6\\n3 2 1 0 9 8 7 6 5\\n2 1 0 9 8 7 6 5 4\\n1 0 9 8 7 6 5 4 3\\n0 9 8 7 6 5 4 3 2\") == \"5\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Your solution is incorrect!\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1\\n0 2\\n0 3\\n1 2\\n2 3') == '0\\n'\nassert solution('2 1\\n1 2\\n2 3\\n0 1') == '0\\n'\nassert solution('2 1\\n1 2\\n0 1\\n2 3') == '0\\n'\nassert solution('2 1\\n0 1\\n2 3\\n1 2') == '0\\n'\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1\\nSample Output: 0') == 0\nassert solution('2 1\\n1 2\\n0 1\\nSample Output: 1') == 1\nassert solution('2 1\\n1 2\\n1 3\\nSample Output: 2') == 2\nassert solution('2 1\\n1 2\\n2 3\\nSample Output: 3') == 3\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\nSample Output: 4') == 4\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\nSample Output: 5') == 5\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\nSample Output: 6') == 6\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\nSample Output: 7') == 7\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\nSample Output: 8') == 8\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\nSample Output: 9') == 9\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\nSample Output: 10') == 10\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\nSample Output: 11') == 11\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\nSample Output: 12') == 12\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\nSample Output: 13') == 13\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\nSample Output: 14') == 14\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\nSample Output: 15') == 15\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\nSample Output: 16') == 16\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\") == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\nassert solution(\"1 1\\n0 1\\n0 2\\n1 2\\n0 3\\n\") == \"1\"\nassert solution(\"2 3\\n0 1\\n1 2\\n1 3\\n0 3\\n0 4\\n1 4\\n0 5\\n1 5\\n0 6\\n1 6\\n0 7\\n1 7\\n0 8\\n1 8\\n0 9\\n1 9\\n0 10\\n1 10\\n0 11\\n1 11\\n0 12\\n1 12\\n0 13\\n1 13\\n0 14\\n1 14\\n0 15\\n1 15\\n0 16\\n1 16\\n0 17\\n1 17\\n0 18\\n1 18\\n0 19\\n1 19\\n0 20\\n1 20\\n0 21\\n1 21\\n0 22\\n1 22\\n0 23\\n1 23\\n0 24\\n1 24\\n0 25\\n1 25\\n0 26\\n1 26\\n0 27\\n1 27\\n0 28\\n1 28\\n0 29\\n1 29\\n0 30\\n1 30\\n0 31\\n1 31\\n0 32\\n1 32\\n0 33\\n1 33\\n0 34\\n1 34\\n0 35\\n1 35\\n0 36\\n1 36\\n0 37\\n1 37\\n0 38\\n1 38\\n0 39\\n1 39\\n0 40\\n1 40\\n0 41\\n1 41\\n0 42\\n1 42\\n0 43\\n1 43\\n0 44\\n1 44\\n0 45\\n1 45\\n0 46\\n1 46\\n0 47\\n1 47\\n0 48\\n1 48\\n0 49\\n1 49\\n0 50\\n1 50\\n0 51\\n1 51\\n0 52\\n1 52\\n0 53\\n1 53\\n0 54\\n1 54\\n0 55\\n1 55\\n0 56\\n1 56\\n0 57\\n1 57\\n0 58\\n1 58\\n0 59\\n1 59\\n0 60\\n1 60\\n0 61\\n1 61\\n0 62\\n1 62\\n0 63\\n1 63\\n0 64\\n1 64\\n0 65\\n1 65\\n0 66\\n1 66\\n0 67\\n1 67\\n0 68\\n1 68\\n0 69\\n1 69\\n0 70\\n1 70\\n0 71\\n1 71\\n0 72\\n1 72\\n0 73\\n1 73\\n0 74\\n1 74\\n0 75\\n1 75\\n0 76\\n1 76\\n0 77\\n1 77\\n0 78\\n1 78\\n0 79\\n1 79\\n0 80\\n1 80\\n0 81\\n1 81\\n0 82\\n1 82\\n0 83\\n1 8"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n0 2\\n1 2\\n\") == \"0\\n\"\nassert solution(\"2 2\\n0 1\\n0 2\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"2 1\\n0 1\\n0 2\\n1 2\\n\") == \"0\\n\"\nassert solution(\"2 2\\n0 1\\n0 2\\n1 2\\n1 3\\n\") == \"3\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n0\n\"\"\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"10\"\nassert solution(sample_input2) == \"73\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\\n\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('10 10') == '10'\nassert solution('10 20') == '2'\nassert solution('2 10') == '2'\nassert solution('2 20') == '2'\nassert solution('2 30') == '3'\nassert solution('3 10') == '2'\nassert solution('3 20') == '3'\nassert solution('3 30') == '3'\nassert solution
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"10 20\") == \"12\"\nassert solution(\"20 10\") == \"3\"\nassert solution(\"3 10\") == \"6\"\nassert solution(\"1 10000\") == \"11\"\nassert solution(\"10000 10000\") == \"26\"\nassert solution(\"1 100000\") == \"11\"\nassert solution(\"100000 100000\") == \"14\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0\nassert solution(\"0 0\\n1000 1000\\n1000 0\\n0 1000\\n\") == 1000\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n20000 0\\n20000 1000\\n0 20000\\n20000 20000\\n\") == 1001\nassert solution(\"0 0\\n1000 1000\\n1000 0\\n0 1000\\n20000 0\\n20000 1000\\n0 20000\\n20000 20000\\n20001 0\\n20001 1000\\n0 20001\\n20001 20000\\n\") == 1002\nassert solution(\"0 0\\n1000 1000\\n1000 0\\n0 1000\\n20000 0\\n20000 1000\\n0 20000\\n20000 20000\\n20000 10000\\n\") == 1003\nassert solution(\"0 0\\n1000 1000\\n1000 0\\n0 1000\\n20000 0\\n20000 1000\\n0 20000\\n20000 20000\\n20000 10000\\n20001 0\\n20001 1000\\n0 20001\\n20001 20000\\n20001 10000\\n\") == 1004"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0\\n'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0, \"Test case 1 failed\"\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n') == 0, \"Test case 2 failed\"\nassert solution('0 -10\\n1 20\\n2 -30\\n3 40\\n') == 0, \"Test case 3 failed\"\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 3, \"Test case 4 failed\"\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0, \"Test case 5 failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Expected output: 0, actual output: {}\".format(solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\"  # example input and expected output\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([0, 0, 1000, 0, 1000, 1000]) == 0, \"Solution should return 0\"\nassert solution([0, 0, -20000, 0, 1000, 1000]) == 1, \"Solution should return 1\"\nassert solution([0, 1000, 0, -20000, 1000, 1000]) == 1, \"Solution should return 1\"\nassert solution([0, 0, 1000, 0, 1000, -20000]) == 1, \"Solution should return 1\"\nassert solution([0, 1000, 0, 1000, 0, -20000]) == 1, \"Solution should return 1\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.5 1.0\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2 1\n    0 1 0.5\n    ''') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000\\n'\nassert solution('2 5\\n0 1 0.5\\n1 2 0.3\\n2 3 0.2\\n') == '0.000000000 -1.000000000\\n'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"5 5\\n0 1 0.5\\n0 2 0.3\\n0 3 0.5\\n0 4 0.2\\n0 5 0.4\\n\") == \"-1\\n\"\nassert solution(\"2 10\\n0 1 0.5\\n0 2 0.3\\n0 3 0.5\\n0 4 0.2\\n0 5 0.4\\n0 6 0.6\\n0 7 0.7\\n0 8 0.8\\n0 9 0.9\\n0 10 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\", \"Incorrect output\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\", \"The solution is incorrect.\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"6\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"6\\n1 2\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"10\\n\"\nassert solution(\"6\\n1 2\\n4 1\\n1 5\\n10 10\\n10 8\\n7 11\") == \"10\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n1 1\\n5 5\\n8 10\\n') == '5\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(6)) == '7'\nassert solution(str(1) +'' + str(1)) == '7'\nassert solution(str(4) +'' + str(1)) == '3'\nassert solution(str(1) +'' + str(5)) == '7'\nassert solution(str(10) +'' + str(10)) == '0'\nassert solution(str(10) +'' + str(8)) == '2'\nassert solution(str(7) +'' + str(10)) == '2'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '''\n8-a\n9-b\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\nassert solution() == '9-b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())'\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['9-b', '8-a']"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    stdin = input()\\n    solution(stdin)\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    5-c 7-a\n    1-a 3-a\n    ''') == '''\n    5-c\n    7-a\n    '''\n\nassert solution('''\n    2\n    5-c 7-a\n    1-a 3-a\n    ''') == '''\n    5-c\n    7-a\n    '''\n\nassert solution('''\n    2\n    5-c 7-a\n    1-a 3-a\n    ''') == '''\n    5-c\n    7-a\n    '''\n\nassert solution('''\n    2\n    5-c 7-a\n    1-a 3-a\n    ''') == '''\n    5-c\n    7-a\n    '''"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Solution: {solution(input_str)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3246R3246\", \"Incorrect output\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\necho\\n1\\necho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\necho\n1\nechoecho\n\"\"\") == \"\"\"\n3246R3246\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\necho\\n1\\nechoecho') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\necho\\n1\\nnoecho') == '1010\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\nnum\\n1\\nnum\\n1\\nnum') == '1234\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum') == '12345\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum') == '1234567\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum') == '123456789\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\n1\\nnum\\"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example.txt\").read()) == \"3246R3246\"\nassert solution(open(\"input.txt\").read()) == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n'\n                 'echo\\n'\n                 '1\\n'\n                 'echoecho\\n'\n                 ) == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\necho\n1\nechoecho\"\"\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"echo\") == \"3246R3246\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"4 3\") == \"YES\\n2 3\"\nassert solution(\"3 2\") == \"YES\\n1 2\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"tests/test_input.txt\", \"r\")) == 176, \"Incorrect solution\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 176, \"Incorrect output\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == 176, \"The output is incorrect.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n\") == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == '12'\n\nfrom functools import reduce"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5') == '12', \"Solution is not correct.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(12) == \"12\", \"Test case 1 failed\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5') == '12', 'Expected output: \"12\", but got \"{}\"'.format(solution('5'))"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"12\", \"5! should have 12 trailing zeroes\"\nassert solution(10) == \"016\", \"10! should have 2 trailing zeroes\"\nassert solution(100) == \"16\", \"100! should have 1 trailing zero\"\nassert solution(1000) == \"0016\", \"1000! should have 16 trailing zeros\"\nassert solution(10000000) == \"000016\", \"10000000! should have 16 trailing zeros\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n((()480617-570928)\\n\") == 480\nassert solution(\"4 1\\n((()480617-570928)\\n\") == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480)\nassert solution('''\n4 1\n(())\n56\n-52\n43\n''') == 24\nassert solution('''\n4 1\n(()\n2\n-7\n2\n''') == 0\nassert solution('''\n4 1\n(()\n-1\n-7\n2\n''') == '?')"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"480\" # sample output\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Testcase failed: Solution does not match the expected output.\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '480', \"The correct answer should be '480'.\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n(()\\n480\\n617\\n-570\\n928\\n\") == \"480\\n\")\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == solution\nassert solution == solution == solution == solution == solution == solution\nassert solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution == solution"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"tests/test_case1.txt\", \"r\")) == 480\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n((()480617-570928\\n\") == 480\nprint(solution(\"4 1\\n((()480617-570928\\n\"))"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '''2 4\n5 6\n7 8 9 10 11 12 13'''\n\nassert solution('''\n8\n1 2 3 4 5 6 7 8\n8\n4 4 5 6 7 7 6 5\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n''') == '''8 8 8 8 8 8 8 8'''\n\nassert solution('''\n11\n1 2 3 4 5 6 7 8 9 10\n10\n1 2 3 4 4 4 3 2 1 1\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2 2\n1 2 2 2 "
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    13\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n    ''') == '''\n    2 4\n    5 6\n    '''\n\nassert solution('''\n    12\n    2 3 4\n    1 2 3 5\n    ''') == '''\n    1 3 5\n    '''\n\nassert solution('''\n    10\n    2 2 4\n    2 3 4 5\n    3 2 5 6\n    ''') == '''\n    2 4\n    5 6\n    '''\n\nassert solution('''\n    8\n    1 2 3 4 5 6 7 8\n    2 3 4 5 6 7 8 9\n    3 4 5 6 7 8 9 10\n    ''') == '''\n    1 2 3 4 5\n    6 7 8\n    9\n    '''\n\nassert solution('''\n    7\n    1 2 3 4 5 6\n    2 3 4 5 6 7\n    3 4 5 6 7 8\n    4 5 6 7 8 9\n    5 6 7 8 9 10\n    ''') == '''\n    1 2 3 4 5\n    6 7 8\n    9\n    '''"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Your solution is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"None\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Your solution is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n\nsample_input = \"\"\"\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\"\n\nassert solution(sample_input) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n12\\n13\\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n''') == '''\n35 39 36 27 29\n'''"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nprint(\" \".join(map(str, output)))\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '35 39 36 27 29\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29\\n'\nprint(solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2'))"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\nassert solution(\"200000 100000\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\\n5 5 5 5 5\\n6 6 6 6 6\\n7 7 7 7 7\\n8 8 8 8 8\\n9 9 9 9 9\\n10 10 10 10 10\\n11 11 11 11 11\\n12 12 12 12 12\\n13 13 13 13 13\\n14 14 14 14 14\\n15 15 15 15 15\\n16 16 16 16 16\\n17 17 17 17 17\\n18 18 18 18 18\\n19 19 19 19 19\\n20 20 20 20 20\\n\") == \"9248940 10000000 9999990 10000000 10000000\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"5 5\\n35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n') == '35 39 36 27 29\\n'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 2 1\\n') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 3\\n3 2 1\\n4 1 1\\n') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 3\\n3 2 1\\n2 2 2\\n') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 3\\n3 2 1\\n2 2 2\\n3 3 3\\n') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 3\\n3 2 1\\n2 2 2\\n3 3 3\\n4 4 4\\n') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\nassert solution(\"100000 100000\") == \"100000 100000\"\nassert solution(\"1 2 3 4 5 6 7 8 9 0\") == \"1 100000\"\nassert solution(\"100003 100003\") == \"100003 100003\"\nassert solution(\"2 3 4 5 6\") == \"4 100003\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1') == 0\nassert solution('3 4\\n2 3 1') == 0\nassert solution('3 2\\n1 2 3') == 0\nassert solution('5 3\\n1 1 1') == 0"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 2 1\") == 0\nassert solution(\"2 3\\n1 2 3\") == 0\nassert solution(\"3 3\\n1 2 3\") == 672\nassert solution(\"2 2\\n1 2 2 2 2\") == 0"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 0\nassert solution(3, 2, 1) == 672\nassert solution(3, 1, 1) == 671\nassert solution(3, 2, 1, 2, 0) == 670\nassert solution(3, 1, 1, 2, 0) == 670\nassert solution(3, 2, 1, 2, 0, 1, 2, 0) == 670\nassert solution(3, 1, 1, 2, 0, 1, 2, 0) == 670"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_data.txt', 'r')) == '2.500000'\n\nsolution(open('input.txt', 'r'))"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.500000\\n\", \"The ACM car can switch from lane 0 to lane 3 with a safety factor of 2.500000.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Your solution is incorrect. Please check the sample input and the expected output.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2.500000\\n\"\n\nimport math"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == '2.500000', f\"Expected output '{sample_input}', got '{solution(sample_input)}'\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'\nassert solution('''\n5 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == 'Impossible'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 4\nassert solution(6) == 4\nassert solution(7) == 5\nassert solution(8) == 5\nassert solution(9) == 5"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Your solution is not correct.\"\nassert solution(5) == 1, \"Your solution is not correct.\"\nassert solution(7) == 4, \"Your solution is not correct.\"\nassert solution(8) == 5, \"Your solution is not correct.\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. Expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 5, 3, 4]) == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3, 5, 3, 4]) == 3\nassert solution([1, 1, 1, 1, 1]) == 0\nassert solution([3, 5, 3, 4, 6]) == 5\nassert solution([1, 1, 1, 1, 1]) == 0\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 3, 4) == 3\nassert solution(1, 2, 3, 4, 5) == 2\nassert solution(6, 10, 5, 8, 15, 20, 25, 30, 35, 40) == 7"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n5 3 4') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\\n3\\n2\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(5) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(10) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(10000) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(10001) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"10 2 1\") == \"1\\n\", \"Test 2 failed\"\nassert solution(\"100 10 1\") == \"1\\n\", \"Test 3 failed\"\nassert solution(\"1000 1000 1\") == \"1\\n\", \"Test 4 failed\"\nassert solution(\"1000000000 1000000000 1\") == \"1\\n\", \"Test 5 failed\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"3 4 5\") == \"1\"\nassert solution(\"6 3 7\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"8 3 4\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 2, \"Expected 2, got {}\".format(solution(input()))"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\nassert solution(\"2\\n1 2 3\") == \"5\\n\"\nassert solution(\"4\\n-1 4 -2 5\") == \"9\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"10\\n\"\nassert solution(\"3\\n-1 -2 -3\") == \"1\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\na 1 3 5\\n1 2 4\\n5 7 9\\n\") == \"7\\n\"\nassert solution(\"3\\n1\\n2\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\na_1 3 a_2 5\\na_1 5 a_3 7\\na_2 7 a_3 11\\n\") == \"7\"\n\nassert solution(\"1\\n3\\na_1 3 a_2 5\\na_1 5 a_3 7\\na_2 7 a_3 11\\n\") == \"7\"\n\nassert solution(\"3\\n1 3 5\\na_1 3 a_2 5\\na_1 5 a_3 7\\na_2 7 a_3 11\\n\") == \"7\"\n\nassert solution(\"5\\n1 3 5\\na_1 3 a_2 5\\na_1 5 a_3 7\\na_2 7 a_3 11\\n\") == \"7\"\n\nassert solution(\"6\\n1 3 5\\na_1 3 a_2 5\\na_1 5 a_3 7\\na_2 7 a_3 11\\n\") == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 5') == '7\\n'\nassert solution('1\\n1 2 3 4 5') == '2\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 5\") == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\na 3 5\\nb 2 5\\nc 1 4\\nd 3 5\\ne 4 6\\nf 1 4\\ng 2 5\\nh 3 5\\ni 4 6\\nj 1 4\\nk 2 5\\nl 3 5\\nm 4 6\\nn 1 4\\no 2 5\\np 3 5\\qr 4 6\\rs 1 4\\ss 2 5\\t 3 5\\tw 4 6\\ux 1 4\\uy 2 5\\uz 3 5\\va 4 6\\vb 1 4\\vc 2 5\\vd 3 5\\ve 4 6\\vf 1 4\\vg 2 5\\vh 3 5\\vi 4 6\\vj 1 4\\vk 2 5\\vl 3 5\\vm 4 6\\vn 1 4\\vo 2 5\\vp 3 5\\uq 4 6\\vr 1 4\\vs 2 5\\vt 3 5\\vu 4 6\\vw 1 4\\vx 2 5\\vy 3 5\\vz 4 6\\wa 1 4\\wb 2 5\\wc 3 5\\wd 4 6\\we 1 4\\wf 2 5\\wg 3 5\\wh 4 6\\wi 1 4\\wj 2 5\\wk 3 5\\wl 4 6\\wm 1 4\\wn 2 5\\wo 3 5\\wp 4 6\\wq 1 4\\wr 2 5\\ws 3 5\\wt 4 6\\wu 1 4\\wv 2 5\\ww 3 5\\wx 4 6\\wy 1 4\\wz 2 5\\xa0 3 5\\xa1 4 6\\xa2 5 6\\xa3 6 7\") == 7\nassert solution(\"3\\na 3 5\\nb 2 5\\nc 1 4\\nd 3 5\\ne 4 6\\nf 1 4\\ng 2 5\\nh 3 5\\ni 4 6\\nj 1 4\\nk 2 5\\nl 3 5\\nm 4 6\\nn 1 4\\no 2 5\\np 3 5\\qr 4 6\\rs 1 4\\ss 2 5\\t 3 5\\tw 4 6\\ux 1 4\\uy 2 5\\uz 3 5\\va 4 6\\vb 1 4\\vc 2 5\\vd 3 5\\ve 4 6\\vf 1 4\\vg 2 5\\vh 3 5\\vi 4 6\\vj 1 4\\vk 2 5\\vl 3 5\\vm 4 6\\vn 1 4\\vo 2 5\\vp 3 5\\uq 4 6\\vr 1 4\\vs 2 5\\vt 3 5\\vu 4 6\\vw 1 4\\vx 2 5\\vy 3 5\\vz 4 6\\wa 1 4\\wb 2 5\\wc 3 5\\wd 4 6\\we 1 4\\wf 2 5\\wg 3 5\\wh 4 6\\wi 1 4\\wj 2 5\\wk 3 5\\wl 4 6\\wm 1 4\\wn 2 5\\wo 3 5\\wp 4 6\\wq 1 4\\wr 2 5\\ws 3 5\\wt 4 6\\wu 1 4\\wv 2 5\\ww 3 5\\wx 4 6\\wy 1 4\\wz 2 5\\xa0 3 5\\xa1 4 6\\xa2 5 6\\xa3 6 7\\xa4 7 8\") == 22\nassert solution(\"1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\qr\\rs\\ss\\t"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 5\n''') == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"gunnar.txt\", \"r\")) == \"7\\n7\\n7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('gunnars_file.txt', 'r')) == '7\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\n\", \"Expected output: fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"fred jetsons\\njohn jets\\nruth rockets\\n\\nImpossible.\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n5\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\") == \"Impossible.\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n2\") == \"john rhinocerous\\nfred jetsons\\nruth rockets\\nImpossible.\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n3\") == \"Impossible.\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution() == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution() == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution() == 'fred jetsons\\njohn jets\\nruth rockets'\nassert solution() == 'fred jetsons\\njohn jets\\nruth rockets'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"2\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n\") == \"Impossible.\"\nassert solution(\"2\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n2\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n\") == \"Impossible.\"\nassert solution(\"3\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n4\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n\") == \"Impossible.\"\nassert solution(\"3\\njoe lovers 2 jets jetsons\\nmary lovers 2 jets rockets\\nruth lovers 2 jets rockets\\n\") == \"Impossible.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 1\", \"Your solution is incorrect.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''1 2 1'''"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The function should return {output}, but it returns {solution(input())}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == ['1 2 1']"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 2 1\"\nassert solution(input()) == \"1 2 1\"\nassert solution(input()) == \"1 2 1\"\nassert solution(input()) == \"1 2 1\"\nassert solution(input()) == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1\\n'"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.125\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.125\"\n\nfrom typing import List"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.125\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2.125\\n\", \"The expected answer is incorrect.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"hello.c\") == []\nassert solution(\"*c\") == [\"hello.c\", \"a.out\", \"yacc\"]\nassert solution(\"*.?c\") == [\"hello.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '''main.c\na.out'''\n\nassert solution(open('input.txt', 'r')) == '''main.c\na.out'''\n\nassert solution(open('input.txt', 'r')) == '''main.c\na.out'''\n\nassert solution(open('input.txt', 'r')) == '''main.c\na.out'''\n\nassert solution(open('input.txt', 'r')) == '''main.c\na.out'''"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"abc*\") == \"abc.c\"\nassert solution(\"a.out\") == \"a.out\"\nassert solution(\"*\") == \"a.out\"\nassert solution(\"abc.c\") == \"abc.c\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"*.c\") == \"main.c\\na.out\"\nassert solution(\"*.c\") == \"main.c\\na.out\\nreadme\"\nassert solution(\"a.out\") == \"a.out\"\nassert solution(\"a*\") == \"a.out\\nreadme\"\nassert solution(\"*c\") == \"main.c\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() =='main.c\\n'\nassert solution() == 'a.out\\n'\nassert solution() == 'def\\n'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(file(\"input.txt\", \"r\")) == \"main.c\\na.out\\n\"\nassert solution(file(\"input.txt\", \"r\")) == \"main.c\\na.out\\n\"\nassert solution(file(\"input.txt\", \"r\")) == \"main.c\\na.out\\n\"\nassert solution(file(\"input.txt\", \"r\")) == \"main.c\\na.out\\n\"\nassert solution(file(\"input.txt\", \"r\")) == \"main.c\\na.out\\n\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"main.c\", \"a.out\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.*\", \"4\") == [\"main.c\", \"a.out\"]\nassert solution(\"*\", \"4\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.c\", \"4\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.*\", \"4\") == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.500000, \"Expected 0.500000 but got {} instead.\".format(solution())"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"\nassert solution(\"2 2\\n0.300000\\n0.700000\\n0.100000\\n\") == \"0.300000\\n0.700000\\n0.100000\\n\"\nassert solution(\"3 2\\n0.600000\\n0.400000\\n0.500000\\n0.200000\\n\") == \"0.200000\\n0.500000\\n\"\nassert solution(\"1 3\\n0.200000\\n0.800000\\n0.400000\\n0.900000\\n\") == \"0.500000\\n\"\nassert solution(\"4 3\\n0.900000\\n0.600000\\n0.700000\\n0.500000\\n0.300000\\n\") == \"0.800000\\n0.600000\\n0.500000\\n\"\nassert solution(\"1 5\\n0.400000\\n0.600000\\n0.800000\\n0.700000\\n0.900000\\n0.100000\\n\") == \"0.500000\\n\"\nassert solution(\"10 10\\n0.750000\\n0.250000\\n0.800000\\n0.700000\\n0.900000\\n0.600000\\n0.500000\\n0.300000\\n0.200000\\n0.100000\\n\") == \"0.400000\\n0.800000\\n0.400000\\n0.800000\\n0.700000\\n0.900000\\n0.600000\\n0.500000\\n0.300000\\n0.200000\\n0.100000\\n\"\nassert solution(\"1 10\\n0.800000\\n0.700000\\n0.800000\\n0.900000\\n0.600000\\n0.900000\\n0.700000\\n0.900000\\n0.600000\\n0.500000\\n0.400000\\n0.300000\\n0.200000\\n0.100000\\n0.050000\\n\") == \"0.900000\\n\"\nassert solution(\"1 100\\n0.800000\\n0.700000\\n0.800000\\n0.900000\\n0.600000\\n0.900000\\n0.700000\\n0.900000\\n0.600000\\n0.500000\\n0.400000\\n0.300000\\n0.200000\\n0.100000\\n0.050000\\n0.010000\\n\") == \"0.800000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.500000\\n\", \"Incorrect output!\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.500000\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.500000\", \"Your solution should return '0.500000'.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The solution of the problem is: {output}, but the output is: {solution(input())}\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\", \"Test failed\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output is different from the expected output for the given test case. Please check the input and ensure the test case is valid.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 49.9\") == \"0.0\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.0\"\nassert solution(input()) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input {input()} doesn't match expected output {output}.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 49.9\")\nassert solution(\"0 50\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 50\")\nassert solution(\"0 49.99\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 49.99\")\nassert solution(\"0 50.01\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 50.01\")\nassert solution(\"0 50.0\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 50.0\")\nassert solution(\"0 50.001\") == 0.0, \"Expected 0.0, got: \" + solution(\"0 50.001\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0.0\", \"Your solution is incorrect.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.0\\n\", \"Input not valid\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Your solution is not correct. Expected: {expected}, Received: {solution(stdin)}\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test failed for {stdin} and expected {output}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n5 2\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n6 3\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n5 2\\n6 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n6 3\\n7 4\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n5 2\\n6 3\\n7 4\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n6 3\\n7 4\\n8 5\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n5 2\\n6 3\\n7 4\\n8 5\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == 1"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"The given solution is incorrect.\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1\\n'\nassert solution('5 1\\n1 3 2 4 5 6') == '5\\n'\nassert solution('6 5\\n1 2 3 4 5 6\\n2 3 4 5 6 7') == '1\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\"\nassert solution(\"10 5\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 "
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 10\\n10 5\\n1 1 1 1 1 1\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"5 5\\n2 2 3 3 4\") == \"0\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\"\nassert solution(\"2 2 10\\n0 1 1 2 6\") == \"impossible\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1 2 6\") == \"3\" # correct\nassert solution(\"2 1 10\") == \"impossible\" # correct\nassert solution(\"1 0 0 0 1\") == \"impossible\" # correct\nassert solution(\"0 1 0 0 1\") == \"3\" # correct\nassert solution(\"1 1 0 0 1\") == \"3\" # correct\nassert solution(\"1 1 1 1 1\") == \"3\" # correct\nassert solution(\"1 0 0 0 2\") == \"3\" # correct\nassert solution(\"1 0 0 0 3\") == \"3\" # correct\nassert solution(\"1 1 1 1 2\") == \"3\" # correct"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2 1 10\n    0 1 1 2 6\n''') == '3'\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3\\n'\nassert solution('2 2 10\\n0 1 1 2 6\\n1 2 3 4 5 6') == 'impossible\\n'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case failed: {sample_input}, expected output: {expected_output}\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 100\\n1 99\\n2 99\\n') == '2\\n1 2\\n'\nassert solution('1 100\\n2 99\\n') == '2\\n1 2\\n'\nassert solution('1 100\\n3 99\\n') == '3\\n1 3\\n2 2\\n'\nassert solution('1 100\\n1 99\\n2 99\\n3 99\\n') == '3\\n1 3\\n2 2\\n'\nassert solution('1 100\\n2 99\\n3 99\\n') == '3\\n1 3\\n2 2\\n'\nassert solution('1 100\\n3 99\\n4 99\\n5 99\\n') == '5\\n1 5\\n2 4\\n3 3\\n'\nassert solution('1 100\\n4 99\\n5 99\\n6 99\\n7 99\\n8 99\\n9 99\\n10 99\\n') == '5\\n1 5\\n2 4\\n3 3\\n4 2\\n5 1\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('HT\\nTH\\n0.5') == '0.5'\nassert solution('HT\\nTH\\n0.1') == '0.0'\nassert solution('HT\\nTH\\n0.9') == '1.0'\nassert solution('H\\nT\\n0.1') == '0.0'\nassert solution('H\\nT\\n0.9') == '1.0'\nassert solution('HT\\nTH\\n0.5') == '0.5'\nassert solution('HT\\nTH\\n0.1') == '0.0'\nassert solution('HT\\nTH\\n0.9') == '1.0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.5', \"The probability that Gon wins is incorrect. Please check the problem statement.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nfrom math import sqrt"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', 'The output should be 0.5'\n\nsolution('H\\nT\\n0.5')"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5\nassert solution(\"H\\nT\\n0.4999\") == 0.4999\nassert solution(\"H\\nT\\n0.5001\") == 0.5\nassert solution(\"HH\\nTT\\n0.5\") == 0.5\nassert solution(\"HH\\nTT\\n0.4999\") == 0.4999\nassert solution(\"HH\\nTT\\n0.5001\") == 0.5\nassert solution(\"HH\\nTT\\n1\") == 1"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5\\n') == '0.5\\n'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(6) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == expected_output, f\"Expected {expected_output}, but got {solution(stdin: str)}\"\n\nfrom typing import List"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8\\n1 3 5 7 9 11 13 15\", \"Your solution is not correct!\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\"\nassert solution(6) == \"1 3 5 7 9 11 13 15\"\nassert solution(11) == \"1 3 5 7 9 11 13 15\"\nassert solution(21) == \"1 3 5 7 9 11 13 15\"\nassert solution(30) == \"1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"9\"\nassert solution(\"8\") == \"15\"\nassert solution(\"9\") == \"7 13\"\nassert solution(\"10\") == \"11\"\nassert solution(\"11\") == \"14 12\"\nassert solution(\"12\") == \"15 13\"\nassert solution(\"13\") == \"1 5\"\nassert solution(\"14\") == \"3 11\"\nassert solution(\"15\") == \"15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, got {stdin}\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str\nfor i in range(Q):\n    assert solution(input_str) == output_str"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 3\nassert solution(10) == 3\nassert solution(100000) == 0"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of elements in the xorbonacci sequence: \")) == output(\"Output: \")"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, \"1 3 5 7\", 3, \"2 2\", 2, \"2 5\", 1, \"5\") == 3\nassert solution(3, \"1 3 5 7\", 3, \"2 2\", 2, \"2 5\", 1, \"5\") == 1\nassert solution(3, \"1 3 5 7\", 3, \"2 2\", 2, \"2 5\", 1, \"5\") == 0"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == '3\\n1\\n0\\n'\nassert solution(100000) == '3\\n1\\n0\\n'\nassert solution(100001) == '3\\n1\\n0\\n'\nassert solution(1000000) == '3\\n1\\n0\\n'\nassert solution(10000000) == '3\\n1\\n0\\n'\nassert solution(100000000) == '3\\n1\\n0\\n'\nassert solution(1000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000) == '3\\n1\\n0\\n'\nassert solution(100000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000) == '3\\n1\\n0\\n'\nassert solution(100000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(100000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(10000000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(100000000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(100000000000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(1000000000000000000000000000000000000) == '3\\n1\\n0\\n'\nassert solution(100000000"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\n    pass\"\n\nprint(solution())"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    -2 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0\n    0 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for the given input: {input_str}\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0 # Solution provided by the problem statement."
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0\n\nclass Solution:\n    def count_lines(self, W: int, N: int, lines: List[List[int]]) -> int:\n        x_1, y_1, x_2, y_2 = lines[0]\n        for line in lines[1:]:\n            if line[0] == x_1 and line[1] == y_1:\n                raise ValueError(\"One line is intersecting the two points\")\n            if line[0] == x_2 and line[1] == y_2:\n                raise ValueError(\"One line is intersecting the two points\")\n        max_x = max(lines[0][0], lines[0][2])\n        max_y = max(lines[0][1], lines[0][3])\n        min_x = min(lines[0][0], lines[0][2])\n        min_y = min(lines[0][1], lines[0][3])\n        for line in lines:\n            if line[0] < min_x:\n                min_x = line[0]\n            if line[0] > max_x:\n                max_x = line[0]\n            if line[1] < min_y:\n                min_y = line[1]\n            if line[1] > max_y:\n                max_y = line[1]\n        num_lines = 1\n        while True:\n            max_sectors = 0\n            num_sectors = 0\n            for i in range(max_x - min_x + 1):\n                for j in range(max_y - min_y + 1):\n                    if i == 0 or j == 0:\n                        num_sectors += 1\n                    else:\n                        sectors = 0\n                        if i == 1 or j == 1 or i == min_x - 1 or j == min_y - 1:\n                            sectors += 1\n                        if i == 1 or i == min_x - 1:\n                            sectors += 1\n                        if j == 1 or j == min_y - 1:\n                            sectors += 1\n                        if i == max_x - 2 or j == max_y - 2 or i == max_x - 1 or j == max_y - 1:\n                            sectors += 1\n                        max_sectors = max(max_sectors, sectors)\n            if num_sectors > max_sectors:\n                break\n            num_lines += 1\n        return num_lines"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"2 5\\n1 1 -2 1\\n1 1 0 -2\\n1 2 0 -2\\n1 1 -3 0\\n1 1 1 -3\") == 1\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1 -2 0\\n') == 0\n\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"194\\n2019 10 25\\n2020 10 30\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n194\n2019 10 25\n2020 10 30\n\"\"\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'\nassert solution('1\\n0\\n2018 10 01\\n2018 10 02\\n2018 10 03\\n2018 10 04\\n2018 10 05\\n2018 10 06\\n2018 10 07\\n2018 10 08\\n2018 10 09\\n2018 10 10\\n2018 10 11\\n2018 10 12\\n2018 10 13\\n2018 10 14\\n2018 10 15\\n2018 10 16\\n2018 10 17\\n2018 10 18\\n2018 10 19\\n2018 10 20\\n2018 10 21\\n2018 10 22\\n2018 10 23\\n2018 10 24\\n2018 10 25\\n2018 10 26\\n2018 10 27\\n2018 10 28\\n2018 10 29\\n2018 10 30\\n2018 10 31\\n2019 01 01\\n2019 01 02\\n2019 01 03\\n2019 01 04\\n2019 01 05\\n2019 01 06\\n2019 01 07\\n2019 01 08\\n2019 01 09\\n2019 01 10\\n2019 01 11\\n2019 01 12\\n2019 01 13\\n2019 01 14\\n2019 01 15\\n2019 01 16\\n2019 01 17\\n2019 01 18\\n2019 01 19\\n2019 01 20\\n2019 01 21\\n2019 01 22\\n2019 01 23\\n2019 01 24\\n2019 01 25\\n2019 01 26\\n2019 01 27\\n2019 01 28\\n2019 01 29\\n2019 01 30\\n2019 01 31\\n2019 02 01\\n2019 02 02\\n2019 02 03\\n2019 02 04\\n2019 02 05\\n2019 02 06\\n2019 02 07\\n2019 02 08\\n2019 02 09\\n2019 02 10\\n2019 02 11\\n2019 02 12\\n2019 02 13\\n2019 02 14\\n2019"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '194'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30'\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_file) == expected_output, f\"Solution does not match expected output\\ninput: {input_file}\\nexpected_output: {expected_output}\\n\\nOutput:\\n{solution(input_file)}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == [\"negative-infinity\", \"5\", \"12.5\"]\n\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == [\"negative-infinity\", \"5\", \"12.5\"]"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''negative-infinity 0\n5 12.5'''"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 50000') == 'IMPOSSIBLE'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 50001') == 'IMPOSSIBLE'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 'IMPOSSIBLE'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\" # IMPOSSIBLE"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n6 7\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n7 8\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"The solution is incorrect!\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\nassert solution('2 2\\n1 2') == '1 4'\nassert solution('5 3\\n1 2 3 4') == '145 1'\nassert solution('4 5\\n2 1 3 4 5') == '246 3'\nassert solution('3 1') == '6 -5'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3 3\\n1 -1 2 10\\n5 3 6 -5\\n9 7 2 -12\") == \"345 2\\nrotS 1 1\\nnegR 1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"345 3\\nrotR 0 1\\nnegR 0\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2\\nrotS 2 1\\nnegR 2\\n'\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0.5', \"Test case 1 failed\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5\\n'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '0.5\\n'\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 1 1') == 0.5\n\nHere, we are asserting that the output of the function is 0.5. In the solution, we are using the input provided in the problem statement and then calculating the sum of the squares of the distances between the energies of the photons and their closest simulation energy."
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.5\", \"Output should be 0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"7 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"2 6 7\"\nassert solution(\"7 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1 4 5\\n2 6 7'\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nprint('All test cases passed')"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Jon Dayne is the ruler of a huge country called Seven Kingdoms. He has two sisters, Arya and Sansa, and wants to give some cities of Seven Kingdoms to them. He will rule the remaining cities or if no city remains, goes to the Wall, a colossal fortification along the northern border of the Seven Kingdoms, to be the Lord commander. Arya is the Lady of Winterfell and Sansa is the Lady of King\u2019s Landing. The cities in Seven Kingdoms (including Winterfell and King\u2019s Landing) are connected to each other with a network of roads (although some cities may be disconnected from the other cities, because they are either located on an island or they are currently at war with these other cities). There is no direct road between Winterfell and King\u2019s Landing and they do not share a common neighbour city.\n\nJon wants to assign a collection of cities to each one of his sisters such that each city in a collection is connected with a direct road to all other cities in that collection and the remaining cities, not in these two collections, are also connected with a direct road to each other. The collection assigned to Arya must include Winterfell and the collection assigned to Sansa must include King\u2019s Landing. Jon needs your help to determine whether this is possible and if this is possible, you should tell him the cities in each collection.\n\n-----Input-----\nThe input consists of a single test case. The first line contains two integers $n$ and $m$, where $n$ ($2 \\le n \\le 2000$) is the number of cities, and $m$ ($0 \\leq m \\leq m(m-1)/2$) is the number of roads. Each of the next $m$ lines contains two integers $x_ i$ and $y_ i$ ($1 \\le x_ i, y_ i \\le n$) describing one road, where $x_ i$ and $y_ i$ are the distinct cities the road connects. Two cities are connected by at most one road. Winterfell is city $1$ and King\u2019s Landing is city $2$ in the road network.\n\n-----Output-----\nIf it is not possible to partition the cities in the way explained, display the word impossible. Otherwise, display two lines: the first containing the cities in the collection assigned to Arya and the second containing the collection of cities assigned to Sansa. If there are many such collections, any one of them is acceptable.\n\n-----Examples-----\nSample Input:\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\nSample Output:\n1 4 5\n2 6 7"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n100 100\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n100 100\\n100 100\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\nimpossible\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"10 10\\n1 1\\n5 5\\n2 3\\n5 6\\n5 8\\n8 7\\n3 9\\n4 5\\n6 7\\n\") == \"impossible\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '13500', \"The correct answer is 13500, but the output is: \" + solution(stdin)"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n10000\\n9000\\n12000\\n12000\\n12000\\n\") == 13500"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"13500\\n\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500\\n'\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"The solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\"\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_\\n\"\nassert solution(\"2 16\\nX xx xx xx xx xx xx xx xx\\n4 4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"X_xx_xx_xx_xx_xx_xx_xx_xx\\n__________________xx_xx_xx_xx_xx_xx_xx\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_\\n\"\nassert solution(\"2 16\\nX xx xx xx xx xx xx xx xx\\n4 4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"X_xx_xx_xx_xx_xx_xx_xx_xx\\n__________________xx_xx_xx_xx_xx_xx_xx_xx\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_\\n\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected_output, f\"Solution for example {input_data} should be {expected_output}, but it is {solution()}\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,__________def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ''"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 33, \"The output is incorrect\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33\\n'\nassert solution('4 3 1\\n1 2 10\n1 5 6 6\n2 10 30 33\\n') == '39\\n'\nassert solution('2 3 1\\n1 2 10\n1 5 6 6\n2 10 30 33\\n') == '40\\n'\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 33, \"Test failed\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\\n\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '33', 'Your code is not correct'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"33\\n\"\nassert solution() == \"70\\n\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\nassert solution(\"3\\n20 15 10\\n7 7\\n20 15 10\\n10 0\") == \"220\"\nassert solution(\"4\\n20 15 10\\n7 7\\n20 15 10\\n10 0\") == \"60\"\nassert solution(\"5\\n20 15 10\\n7 7\\n20 15 10\\n10 0\") == \"0\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"405\", \"Solution is incorrect\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output: 405\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"405\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\nassert solution(\"4\\n1 2\\n3 4\\n5 6\") == \"15\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"0\"\nassert solution(\"5\\n10\\n5\\n15\\n20\") == \"200\"\nassert solution(\"6\\n20\\n10\\n20\\n10\\n20\\n10\") == \"600\"\nassert solution(\"7\\n20\\n10\\n20\\n10\\n20\\n10\\n20\") == \"300\"\nassert solution(\"8\\n10\\n5\\n15\\n20\\n10\\n20\\n10\\n20\\n10\") == \"1200\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str='4\\n1 2 4 7') == '28 4 21 14.0\\n'\nassert solution(input_str='5\\n2 3 5 7 9') == '16 9 5 4 2\\n'\nassert solution(input_str='4\\n1 1 1 1') == '36 1 1 1\\n'\nassert solution(input_str='4\\n2 2 2 2') == '48 2 2 2\\n'\nassert solution(input_str='1\\n1') == '1 1 1 1 1\\n'\nassert solution(input_str='5\\n1 2 3 4 5') == '35 2 3 4 5\\n'\nassert solution(input_str='5\\n1 1 1 1 1') == '36 1 1 1 1\\n'\nassert solution(input_str='1\\n1') == '1 1 1 1 1\\n'\nassert solution(input_str='3\\n2 3 4 5') == '28 4 6 9\\n'\nassert solution(input_str='5\\n1 1 2 3 4') == '35 2 3 4 5\\n'\nassert solution(input_str='5\\n1 1 1 1 2') == '35 1 1 1 2\\n'\nassert solution(input_str='5\\n2 3 4 5 6') == '35 3 4 5 6\\n'\nassert solution(input_str='5\\n2 2 3 4 5') == '35 3 3 4 5\\n'\nassert solution(input_str='3\\n2 2 4 5') == '28 4 6 9\\n'\nassert solution(input_str='2\\n2 3') == '30 4 6 9\\n'\nassert solution(input_str='4\\n1 1 1 1') == '36 1 1 1\\n'\nassert solution(input_str='1\\n1') == '1 1 1 1 1\\n'\nassert solution(input_str='4\\n1 1 1 1') == '36 1 1 1\\n'\nassert solution(input_str='5\\n1 1 1 1 1') == '36 1 1 1 1\\n'\nassert solution(input_str='1\\n1') == '1 1 1 1 1\\n'\nassert solution(input_str='5\\n1 1 1 1 2') == '35 1 1 1 2\\n'\nassert solution(input_str='5\\n1 2 3 4 5') == '35 2 3 4 5\\n'\nassert solution(input_str='5\\n1 2 2 2 3') == '35 2 2 2 3\\n'\nassert solution(input_str='4\\n2 2 2 2') == '48 2 2 2\\n'\nassert solution(input_str='4\\n1 1 1 1') == '36 1 1 1\\n'\nassert solution(input_str='5\\n1 1 2 3 4') == '35 2 3 4 5\\n'\nassert solution(input_str='5\\n1 1 1 1 2') == '35 1 1 1 2\\n'\nassert solution(input_str='5\\n1 2 2 2 3') == '35 2 2 2 3\\n'\nassert solution(input_str='2\\n1 2') == '30 4 6 9\\n'\nassert solution(input_str='5\\n1 2 3 4 5') == '35 2 3 4 5\\n'\nassert solution(input_str='5\\n1 1 2 3 4') == '35 2 3 4"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"2 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"3 4\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"1 1\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"9 9\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 2) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution(10, 3) == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 6 7 8'\nassert solution(100, 3) == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"1 1 2 3\\n2 1 2 3\\n3 1 2 3\\n4 1 2 3\\n5 1 2 3\\n\") == \"no\"\nassert solution(\"5 5\\n6 5\\n7 5\\n8 5\\n9 5\\n\") == \"no\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"yes\"\nassert solution(\"1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\\n\") == \"no\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"no\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"5 5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\") == \"no\"\nassert solution(\"7 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\") == \"no\"\nassert solution(\"9 9\\n1 2 3 4 5 6 7 8 9\") == \"no\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\") == \"no\"\nassert solution(\"1 1\\n1\") == \"no\"\nassert solution(\"1 10\\n1\") == \"no\"\nassert solution(\"10 1\\n1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"3 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"3 4\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"3 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"3 4\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\nassert solution(\"5\\n10 -10 -4 10\") == \"10.000000000\\n\"\nassert solution(\"5\\n10 10 -10 -4 -10\") == \"10.000000000\\n\"\nassert solution(\"5\\n10 -10 -4 -10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"4\\n-20 -10 15 -30\") == \"0.000000000\"\nassert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"4\\n-20 -10 15 -30\") == \"0.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('martingale.in', 'r')) == '10.000000000\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10.000000000\", \"Expected output: 10.000000000, but got: {}\".format(solution())"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10.000000000\"\n\nassert abs(solution(stdin) - 10.0) < 1e-6\nassert abs(solution(stdin) - 10.0) < 1e-9\n\nsolution(stdin)"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000\\n', 'Sample Explanation'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4, 30, 3, 2, 45]) == 1\nassert solution([1, 2, 3, 4]) == 0\nassert solution([4, 30, 3, 4]) == 2\nassert solution([2, 3, 4, 5]) == 3\nassert solution([2, 3, 4, 6]) == 4\nassert solution([2, 3, 5, 6]) == 5\nassert solution([2, 3, 6, 7]) == 6\nassert solution([2, 4, 6, 8]) == 7\nassert solution([2, 5, 7, 9]) == 8\nassert solution([3, 5, 7, 9]) == 9\nassert solution([3, 6, 8, 10]) == 10\nassert solution([3, 7, 9, 11]) == 11\nassert solution([3, 8, 10, 12]) == 12\nassert solution([4, 6, 8, 10]) == 13\nassert solution([4, 7, 9, 11]) == 14\nassert solution([4, 8, 10, 12]) == 15\nassert solution([5, 7, 9, 11]) == 16\nassert solution([5, 8, 10, 12]) == 17\nassert solution([5, 9, 12, 14]) == 18\nassert solution([6, 8, 10, 12]) == 19\nassert solution([6, 9, 11, 13]) == 20\nassert solution([6, 10, 12, 14]) == 21\nassert solution([7, 9, 11, 13]) == 22\nassert solution([7, 10, 11, 13]) == 23\nassert solution([7, 11, 12, 14]) == 24\nassert solution([8, 10, 11, 13]) == 25\nassert solution([8, 11, 12, 13]) == 26\nassert solution([8, 12, 13, 15]) == 27\nassert solution([9, 11, 12, 13]) == 28\nassert solution([9, 12, 13, 14]) == 29\nassert solution([9, 13, 14, 16]) == 30\nassert solution([10, 11, 12, 13]) == 31\nassert solution([10, 12, 13, 14]) == 32\nassert solution([10, 13, 14, 15]) == 33\nassert solution([11, 12, 13, 14]) == 34\nassert solution([11, 13, 14, 15]) == 35\nassert solution([11, 14, 15, 17]) == 36\nassert solution([12, 13, 14, 15]) == 37\nassert solution([12, 14, 15, 16]) == 38\nassert solution([12, 15, 16, 18]) == 39\nassert solution([13, 14, 15, 16]) == 40\nassert solution([13, 15, 16, 17]) == 41\nassert solution([13, 16, 17, 19]) == 42\nassert solution([14, 15, 16, 17]) == 43\nassert solution([14, 16, 17, 18]) == 44\nassert solution([14, 17, 18, 20]) == 45\nassert solution([15, 16, 17, 18]) == 46\nassert solution([15, 17, 18, 19]) == 47\nassert solution([1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1\\n'\nassert solution('5\\n100\\n5\\n10\\n10') == '10\\n'\nassert solution('3\\n10\\n2\\n15\\n10\\n20\\n10') == '10\\n'\nassert solution('4\\n10\\n3\\n15\\n20\\n25\\n30\\n35\\n40\\n45') == '10\\n'\nassert solution('6\\n20\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50') == '10\\n'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test case failed\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\"\nassert solution(\"4\\n30\\n3\\n2\\n45\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4\\n30\\n3\\n2\\n45\\n') == '1'\nassert solution(stdin='1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution(stdin='1\\n2\\n3\\n4\\n5\\n') == '2'\nassert solution(stdin='1\\n5\\n10\\n15\\n20\\n') == '3'\nassert solution(stdin='1\\n10\\n10\\n10\\n10\\n') == '3'\nassert solution(stdin='1\\n1\\n1\\n1\\n1\\n') == '4'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4, 30, 3, 2, 45) == 1\nassert solution(5, 30, 3, 2, 45) == 0\nassert solution(6, 30, 3, 2, 45) == 3\nassert solution(7, 30, 3, 2, 45) == 0\nassert solution(8, 30, 3, 2, 45) == 4\nassert solution(9, 30, 3, 2, 45) == 0\nassert solution(10, 30, 3, 2, 45) == 0\nassert solution(11, 30, 3, 2, 45) == 0\nassert solution(12, 30, 3, 2, 45) == 1\nassert solution(13, 30, 3, 2, 45) == 2\nassert solution(14, 30, 3, 2, 45) == 1\nassert solution(15, 30, 3, 2, 45) == 1\nassert solution(16, 30, 3, 2, 45) == 1\nassert solution(17, 30, 3, 2, 45) == 1\nassert solution(18, 30, 3, 2, 45) == 1\nassert solution(19, 30, 3, 2, 45) == 1\nassert solution(20, 30, 3, 2, 45) == 2\nassert solution(21, 30, 3, 2, 45) == 1\nassert solution(22, 30, 3, 2, 45) == 1\nassert solution(23, 30, 3, 2, 45) == 1\nassert solution(24, 30, 3, 2, 45) == 1\nassert solution(25, 30, 3, 2, 45) == 1\nassert solution(26, 30, 3, 2, 45) == 1\nassert solution(27, 30, 3, 2, 45) == 1\nassert solution(28, 30, 3, 2, 45) == 1\nassert solution(29, 30, 3, 2, 45) == 1\nassert solution(30, 30, 3, 2, 45) == 0\nassert solution(31, 30, 3, 2, 45) == 1\nassert solution(32, 30, 3, 2, 45) == 1\nassert solution(33, 30, 3, 2, 45) == 1\nassert solution(34, 30, 3, 2, 45) == 1\nassert solution(35, 30, 3, 2, 45) == 1\nassert solution(36, 30, 3, 2, 45) == 1\nassert solution(37, 30, 3, 2, 45) == 1\nassert solution(38, 30, 3, 2, 45) == 1\nassert solution(39, 30, 3, 2, 45) == 1\nassert solution(40, 30, 3, 2, 45) == 1\nassert solution(41, 30, 3, 2, 45) == 1\nassert solution(42, 30, 3, 2, 45) == 1\nassert solution(43, 30, 3, 2, 45) == 1\nassert solution(44, 30, 3, 2, 45) == 1\nassert solution(45, 30, 3, 2, 45) == 1\nassert solution(46, 30, 3, 2, 45) == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == '1'\n\nfrom typing import List\nfrom functools import reduce"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n\"\n)"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\"\")"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"\"\"0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\"\"\"\n\nassert solution(\"\"\"5 5 5 5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"\"\"-0.125000000 -0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\"\"\"\n\nassert solution(\"\"\"5 5 5 5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"\"\"-0.125000000 -0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\"\"\"\n\nassert solution(\"\"\"5 5 5 5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"\"\"-0.125000000 -0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\n0.125000000 0.125000000\"\"\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3 4\\n5 5\\"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"Output: \" + str(solution())"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"4\\n1 1\\n2 2\") == \"4\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\") == \"4\"\nassert solution(\"4\\n1 1\\n2 2\\n1 1\\n2 2\\n1 1\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test failed.\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4\nassert solution(5) == 3\nassert solution(7) == 2"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n0 3\\n3 3\\n0 0\") == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution.__doc__ == '''\nCelery \u2014 the legendary Pokenom has been spotted in Alexa Forest.\n\nTo become the best Pokenom trainer, Bash has arrived at Alexa Forest to capture Celery. After lots of information gathering, Bash was able to draw a map of Alexa Forest, and noted down $K$ sightings of Celery.\n\nAlexa Forest's map is a convex polygon A with N vertices on the Cartesian plane. K sightings of Celery can be considered as K points \u2014 all are strictly inside Alexa Forest.\n\nBash is ready to search Alexa Forest to find Celery. However, Bash realized that Alexa Forest is simply too big. It would take decades to search the entire forest. But Bash is smart. Based on his research, Bash knows that Celery can only be found inside a polygon Z, where the vertices of Z are a subset of A, and all K sightings of Celery must be strictly inside polygon Z.\n\nOf course, there can be multiple polygons Z satisfying the above conditions. Your task is to help Bash find the polygon Z with smallest number of vertices.\n\n-----Note-----\nA point P is strictly inside Polygon A, iff P is inside A and P does not lie on the border of A.\n\n-----Input-----\n - The first line of input contains a single positive integer N$(3 \\le N \\le 2 \\cdot 10^5)$.\n - The next N lines each contain $2$ integers x_ i, y_ i \u2014 the coordinates of the i$-th vertex of Alexa Forest $(-10^9 \\le x_ i, y_ i \\le 10^9)$. The vertices are listed in either clockwise or counterclockwise order. It is guaranteed that Alexa Forest is convex.\n - The next line contains a single positive integer K $(1 \\le K \\le 10^5)$.\n - The next K lines, each line contains $2$ integers x_ i, y_ i \u2014 the coordinates of a sighting of Celery $(-10^9 \\le x_ i, y_ i \\le 10^9)$. All points are guaranteed to be inside Alexa Forest and no points are on the border of Alexa Forest.\n\n-----Output-----\nOutput a single integer \u2014 the smallest number of vertices of polygon Z.\n\n-----Sample Clarification-----\n - In the first example, the only valid polygon satisfied is the whole Alexa Forest.\n - In the second example, there are two possible solutions with $4$ vertices:\n\n-----Examples-----\nSample Input:\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\nSample Output:\n4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4 0\n    0 1\n    0 2\n    0 3\n    \"\"\"\n) == \"\"\"\n2\n3 2\n3 1\n\"\"\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\"\nassert solution(\"10 5\\n0 1\\n0 6\\n1 5\\n5 4\\n\") == \"5\\n4 5\"\nassert solution(\"6 4\\n0 2\\n0 5\\n1 4\\n2 3\\n\") == \"2\\n3 2\"\nassert solution(\"1 0\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n12"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"5 1\\n0 1\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"3\\n4 3\\n5 2\\n5 1\"\nassert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"4 0\\n1 0\\n2 0\\n3 0\") == \"2\\n2 1\\n2 2\\n2 3\"\nassert solution(\"4 0\\n0 0\\n0 0\\n0 0\") == \"0\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n4 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n4 3\\n5 2\\n6 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n4 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n4 3\\n5 2\\n6 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n4 3\\n0 4\\n0 5\\n0 6\\n4 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n4 3\\n5 2\\n6 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n4 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n4 3\\n5 2\\n6 1'\nassert solution('4 0\\n0 1\\n0 2\\n0 3\\n4 3\\n0 4\\n0 5\\n0 6\\n4 3\\n0 4\\n0 5\\n0 6\\n4 3\\n0 4\\n0 5\\n0 6\\n') == '2\\n4 3\\n5 2\\n6 1'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\\n\") == \"ok\"\nassert solution(\"5\\n0.2 0.3 0\\n0.5 0.1 0\\n0.8 0.9 0\\n0.7 0.4 0\\n\") == \"crash\"\nassert solution(\"10\\n0.2 0.3 0\\n0.5 0.1 0\\n0.8 0.9 0\\n0.7 0.4 0\\n0.6 0.5 0\\n0.3 0.1 0\\n\") == \"ok\"\nassert solution(\"100000\\n0 0 0\\n0 1.5 0\\n\") == \"crash\"\nassert solution(\"2\\n0 0 0\\n0 1.5 0\\n1.000000000000000000000000000000000 0 0\\n1.000000000000000000000000000000000 0 1.5707963267948966192313216916398\\n\") == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\\n\"\nassert solution(\"3\\n0.5 -0.5 0\\n0.5 1 0.5\\n0 0 1\") == \"crash\\n\"\nassert solution(\"5\\n0.4999999999999999 0.4999999999999999 -0.0001\\n0.4999999999999999 0.4999999999999999 0.0001\\n0.4999999999999999 -0.0001 0.4999999999999999\\n0.4999999999999999 0.0001 -0.4999999999999999\\n0.4999999999999999 -0.4999999999999999 0.0001\\n0.4999999999999999 0.0001 0.4999999999999999\\n0.4999999999999999 -0.4999999999999999 0.0001\") == \"crash\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\nR 0\\nG 2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nN = 5\\nM = 4\\n\\n# Sample Input\\nN = 5\\nM = 4\\n\\n# Sample Output\\nQ = 2\\n\\n# Test case 1\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 2\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 3\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 4\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 5\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 6\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 7\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 8\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 9\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 10\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 11\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 12\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n# Test case 13\\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n'\\n\\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nprint(\"Test Passed\")"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"Test Case 1 Failed\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test failed: Expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\"8 5 3 2\\nA B C D\\nE F G H\\nI J K L\\n1 M N O\\n2 P Q R\\n3 S T U V\\n4 W X Y Z\\n\") == \"5\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\"5 2 2 2\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n4 G H\") == \"2\"\nassert solution(\"10 10 10 10\\nAAAABBBBCCCCDDDDDDDD\\nEEEFFFFFFFGGGGGGGGGGGG\\nHHHHHHHHHHHHIIIIIIIIII\\nJJJJJJJJJJJJKKKKKKKKKK\\nLLLLLLLLLLLLLLLLLLLLLLL\\n\") == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Expected '{output}', got '{solution(input)}'.\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('4\\nYYY\\nNYYY\\nYNY') == '3\\n1 2 3'\nassert solution('5\\nYYYY\\nNYYNY\\nYNYY') == '3\\n1 2 3'\nassert solution('6\\nYYYY\\nNYYNY\\nYNYY') == '3\\n1 2 3'\nassert solution('7\\nYYYYY\\nNYYNY\\nYNYY') == '3\\n1 2 3'\nassert solution('8\\nYYYYYY\\nNYYNY\\nYNYY') == '3\\n1 2 3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed. Expected output: {expected}, got: {solution(input())}\"\n\ntest_case = 1\nstdin = \"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\"\nexpected = \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\"\n\ntest_case = 2\nstdin = \"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\"\nexpected = \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\"\n\ntest_case = 3\nstdin = \"\"\"\n3\nYNY\nYYY\nYNY\n\"\"\"\nexpected = \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\"\n\ntest_case = 4\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\"\n\ntest_case = 5\nstdin = \"\"\"\n3\nNYY\nNYY\nYNY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 6\nstdin = \"\"\"\n3\nNYY\nNYY\nNYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 7\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 8\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 9\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 10\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 11\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 12\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 13\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 14\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 15\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 16\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 17\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 18\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 19\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 20\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 21\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 22\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 23\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 24\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 25\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 26\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 27\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 28\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\"\n0\n\"\"\"\n\ntest_case = 29\nstdin = \"\"\"\n3\nNYY\nYNY\nYYY\n\"\"\"\nexpected = \"\"\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nYNY\\nYNY\\nYYY\") == \"1\\n1 2 3 4\"\nassert solution(\"5\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\"\nassert solution(\"6\\nYNY\\nYNY\\nYYY\\nYYY\") == \"0\\n0 0 0 0\"\nassert solution(\"7\\nNYY\\nYNY\\nYNY\\nYYY\") == \"2\\n1 2\"\nassert solution(\"8\\nNYY\\nYNY\\nYNY\\nYYY\\nYYY\") == \"2\\n1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nfor i in range(3):\n    assert solution(input()) == output\nprint(\" \".join(map(str, solution(input()))))"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nNNA\\nNNA\\nNNA\") == \"0\\n0 0 0\"\nassert solution(\"2\\nNNA\\nYNY\\nYNY\") == \"2\\n1 2 3\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Expected: {expected}\\nGot: {solution(input)}\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nprint(\"Test passed\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2\\n'\nassert solution('2\\nY\\nN\\nY') == '1\\n1\\n1\\n'\nassert solution('3\\nN\\nN\\nY') == '1\\n1\\n1\\n'\nassert solution('3\\nN\\nY\\nY') == '1\\n2\\n1\\n'\nassert solution('3\\nN\\nN\\nY\\nN\\nY\\nY\\nN\\nN\\nN\\n') == '0\\n'\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('apple_fall.in', 'r')) == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n0\\n5\", \"The solution is not correct.\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5\\n'\nassert solution('1 2\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.\\nx.') == '12\\n0\\n10\\n'\nassert solution('3 4\\nx..\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n...\\n"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input {input_data}, expected output {expected_output}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"1000 1000\\n10000 10000\\n100000 100000\") == \"20000000000000000000000000000000\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(open('input.txt', 'r').read())}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"\"\"4.114 -2.842\n6.297 -0.784\n5.000 3.000\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n3\\n4\\n5 3') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(2) == \"1.118 2.037\\n5.000 3.000\"\nassert solution(5) == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"5\\n3\\n4\\n5\") == \"4.000 1.000\\n2.000 -1.000\\n-2.000 1.000\"\nassert solution(\"10\\n5\\n10\\n5\\n10\\n5\\n10\\n5\") == \"4.000 1.000\\n2.000 -1.000\\n-2.000 1.000\\n-2.000 1.000\\n-2.000 1.000\\n-2.000 1.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"5\\n5\\n5\") == \"5.000 5.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [4.114, -2.842]"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['4.114 -2.842', '6.297 -0.784', '5.000 3.000']\nprint(\"All test cases pass\")"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed with input: {input_data}, expected output: {expected_output}\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output\nfor input, output in zip(sample_input, sample_output):\n    assert solution(input) == output"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Input Error: Invalid input format\"\nassert solution(\"5\\n4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"3\n5\n8\n10\n13\"\"\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, \"Test case failed.\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 9\\n9 10\") == 1\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 9\\n9 10\") == 2\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 9\\n9 10\") == 1\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 9\\n9 10\") == 2"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0\\n'\n\nassert solution('''\n7 4\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n''') == '0\\n'\n\nassert solution('''\n8 6\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '0\\n'\n\nassert solution('''\n9 6\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '0\\n'\n\nassert solution('''\n10 7\n0 1\n1 2\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n1"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0, 'Test case 1 failed'\nassert solution('4 3\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0, 'Test case 2 failed'\nassert solution('8 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 6\\n1 7\\n1 3') == 3, 'Test case 3 failed'\nassert solution('8 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 6\\n1 7\\n1 3') == 4, 'Test case 4 failed'\nassert solution('8 5\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n1 6\\n1 7\\n1 3') == 6, 'Test case 5 failed'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\\n\"\nassert solution(\"10 3\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"0\\n\\n\"\nassert solution(\"5 3\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\") == \"2\\n\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6 7 \") == \"6\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6 7 8 \") == \"6\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6 7 8 9 \") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed for input: {input}, expected: {expected}\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Expected 0, but got: {}\".format(solution())"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 1\n    50 2 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    70 3 1 C1\n    ''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution({input()}) with output {expected_output} and expected output {expected_output}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed\"\nfor test_case in range(1, 101):\n    assert solution(f\"Case {test_case}:\") == expected_output, f\"Test case {test_case} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 106\nassert solution() == 107\nassert solution() == 71"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2, \"AA\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2, \"AA\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nAA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nAA\\n\") == 51\nassert solution(\"5\\nabb\\n\") == 23\nassert solution(\"5\\nabc\\n\") == 23\nassert solution(\"5\\nabcd\\n\") == 23\nassert solution(\"5\\nabcde\\n\") == 23\nassert solution(\"5\\nabcdef\\n\") == 23\nassert solution(\"5\\nabcdefg\\n\") == 23\nassert solution(\"5\\nabcdefg\\n\") == 23"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nA\") == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nAA') == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nA\\nA\\nAA\\nAA\\n\") == \"51\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nA\\nA\") == \"51\"\nassert solution(\"2\\nAAA\\nA\") == \"12\"\nassert solution(\"2\\nABCA\\nA\") == \"2\"\nassert solution(\"2\\nABCB\\nA\") == \"1\"\nassert solution(\"2\\nABCD\\nA\") == \"0\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nAA') == '51'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"1 2\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"no ties\\n\"\nassert solution(\"3\\n1\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"1 2\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"no ties\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"1 2\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"no ties\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"1 2\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"no ties\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n23\\n31\\n58\\n63\\n4\\n27\\n42\\n54\\n71\") == \"1 2\\n\"\nassert solution(\"3\\n29\\n45\\n56\\n68\\n1\\n19\\n43\\n50\\n72\\n11\\n25\\n40\\n49\\n61\\n9\\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n3 14 15 26 27\\n\") == \"3 4\"\nassert solution(\"3\\n29 45 56 68\\n19 43 50 72\\n25 40 49 61\\n23 31 58 63\\n27 42 54 71\\n14 39 59 63\\n17 35 55 61\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"3 4\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2 3 4 5 6\\n\") == \"3 5\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"1 2\\n\"\nassert solution(\"\"\"1 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"1 2\\n\"\nassert solution(\"\"\"3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"no ties\\n\"\nassert solution(\"\"\"3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"1 2\\n\"\nassert solution(\"\"\"3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"no ties\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'no ties'\nassert solution(2) == '1 2'\nassert solution(4) == '2 3'\nassert solution(5) == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"3\\n29 45 56 68\\n19 43 50 72\\n43 50 61 72\\n68 72 83 92\") == \"1 2\"\nassert solution(\"4\\n23 39 59 63\\n17 35 55 61\\n42 53 61 71\\n63 71 81 91\") == \"1 2\"\nassert solution(\"5\\n26 42 53 71\\n15 31 57 64\\n42 54 68 82\\n68 82 92 100\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(['3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71']) == '1 2\\n'\nassert solution(['14 23 39 59 63', '8 17 35 55 61', '15 26 42 53 71', '10 25 31 57 64', '6 20 44 52 68']) == '1 2\\n'\nassert solution(['3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71']) == 'no ties\\n'\nassert solution(['3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71']) == '1 2\\n'\nassert solution(['3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == 'no ties\\n'\n\nassert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2\\n'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"no ties\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n6 20 44 52 68\") == \"1 2\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"no ties\", \"Expected 'no ties', but got '{}'\".format(solution(sample_input))"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n23 45 67 89 123\\n45 23 34 67 89\\n67 45 56 89 123\\n89 67 78 123 167\\n123 89 90 167 201\\n167 123 124 201 235\\n201 167 168 235 269\\n235 201 202 269 303\\n269 235 236 303 337\\n303 269 270 337 371\\n337 303 304 371 405\\n371 337 338 405 439\\n405 371 372 439 473\\n439 405 406 473 507\\n473 439 440 507 541\\n507 473 474 541 575\\n541 507 508 575 609\\n575 541 542 609 643\\n609 575 576 643 677\\n643 609 610 677 711\\n677 643 644 711 745\\n711 677 678 745 779\\n745 711 712 779 813\\n779 745 746 813 847\\n813 779 780 847 881\\n847 813 814 881 915\\n881 847 882 915 949\\n915 881 882 949 983\\n949 915 916 983 1017\\n983 949 949 1017 1051\\n1017 983 983 1051 1085\\n1051 1017 1018 1085 1119\\n1085 1051 1052 1119 1153\\n1119 1085 1086 1153 1187\\n1153 1119 1120 1187 1221\\n1187 1153 1154 1221 1255\\n1221 1187 1"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"0\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"3\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n2 1 3\\n3 1 2') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n2 1 1') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"4\\n1 2 3\\n1 2 3\\n4 5 6\") == 1\nassert solution(\"5\\n1 2 3\\n1 2 3\\n4 5 6\\n7 8 9\") == 2"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"6\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 1\nassert solution(\"10\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 3\nassert solution(\"20\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 5"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"10\\n3 4 1 2 3 4\\n1 2 3\\n5 6 7 8 9 10\\n\") == \"5\"\nassert solution(\"10\\n3 4 1 2 3 4\\n1 2 3\\n5 6 7 8 9 10\\n20 19 18 17 16 15\\n\") == \"5\"\nassert solution(\"10\\n3 4 1 2 3 4\\n1 2 3\\n5 6 7 8 9 10\\n20 19 18 17 16 15\\n2 1 3\\n\") == \"3\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('1\\n1\\n1') == '0\\n'\nassert solution('4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == '1\\n'\nassert solution('3\\n1 1 1\\n2 2 2\\n3 3 3') == '0\\n'\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0\\n'\n\nassert solution('''\n5\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4\n''') == '1\\n'\n\nassert solution('''\n6\n3 4 5 1 2 3\n4 5 1 2 3 3\n5 1 2 3 4 5\n1 2 3 4 5 1\n2 3 4 5 1 2\n3 4 5 1 2 3\n''') == '1\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0, \"Test 1 failed\"\nassert solution(\"5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\") == 2, \"Test 2 failed\"\nassert solution(\"10\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\") == 3, \"Test 3 failed\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n2') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5') == '0.333333333333'\nassert solution('6\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6') == '0.375'\nassert solution('7\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7') == '0.428571428571'\nassert solution('8\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8') == '0.466666666667'\nassert solution('9\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9') == '0.5'\nassert solution('10\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9\\n46 9 10') == '0.522857142857'\nassert solution('11\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9\\n46 9 10\\n51 10 11') == '0.543333333333'\nassert solution('12\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9\\n46 9 10\\n51 10 11\\n56 11 12') == '0.5625'\nassert solution('13\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9\\n46 9 10\\n51 10 11\\n56 11 12\\n61 12 13') == '0.585714285714'\nassert solution('14\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n31 6 7\\n36 7 8\\n41 8 9\\n46 9 10\\n51 10 11\\n56 11 12\\n61 12 13\\"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Your code is not correct.\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"1\\n10\\n5\\n10\\n20\\n30\") == \"0.5\"\nassert solution(\"3\\n0 2 0\\n2 0 2\\n4 4 0\") == \"0.5\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\\n0\\n0\\n0\\n0\\n\", \"Empty input should return 0\\n\"\nassert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0\\n0\\n0\\n0\\n0\\n\", \"Incorrect output for empty input\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nassert solution(\"5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n\") == \"0.100000000000\"\nassert solution(\"10\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n21 4 5\\n26 5 6\\n\") == \"0.0771428571429\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\nimpossible\\nimpossible\\n'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample.in', 'r')) == 'impossible'  # Example 1\nassert solution(open('sample.in', 'r')) == '6 = 6'  # Example 2\nassert solution(open('sample.in', 'r')) == '9 * 3 = 27'  # Example 3\nassert solution(open('sample.in', 'r')) == '10 - 5 = 5'  # Example 4\nassert solution(open('sample.in', 'r')) == 'impossible'  # Example 5"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"6\\n1 2\\n2 3\\n1 4\") == \"impossible\"\nassert solution(\"4\\n-1 -10\\n5 7\") == \"impossible\"\nassert solution(\"10\\n10 20\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"impossible\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 5\n3 3\n4 5\n-1 -6\n\"\"\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n\nassert solution(\"\"\"\n1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n1\n2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n-5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n3\n4\n5\n6\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n1\n2\n3\n4\n5\n\"\"\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n10') == 'impossible'\nassert solution('0\\n1\\n1') == 'impossible'\nassert solution('2\\n1 2\\n3 3') == '2 + 3 = 5\\n3 + 1 = 4\\n1 + 3 = 4\\nimpossible'\nassert solution('1\\n5\\n5\\n5\\n5') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\"\nassert solution(\"1\\n
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"4\\n1 6\\n2 2\\n3 3\\n4 5\\n-1 -6\") == \"impossible\"\nassert solution(\"4\\n1 6\\n2 2\\n3 3\\n4 5\\n-1 -7\\n-2 -4\") == \"impossible\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n1\\n4\\n6\\n0\\n'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Testcase failed\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 3\n    1 8\n    2 3\n    2 8\n    5 8\n    5 9\n    3 6 6\n    1 7 4\n    1 3 1\n    ''') == '''\n    4\n    1\n    4\n    6\n    0\n    '''"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n0\\n4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == [\"4\", \"1\", \"4\", \"6\", \"0\"]"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output the answer here\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"2\\n2\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\\n1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"0\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Incorrect solution\"\nassert solution() == 12, \"Incorrect solution\"\nassert solution() == 22, \"Incorrect solution\"\nassert solution() == 54, \"Incorrect solution\"\nassert solution() == 96, \"Incorrect solution\"\nassert solution() == 192, \"Incorrect solution\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\"\nassert solution(\"4\\n5 6 7 8\") == \"120\"\nassert solution(\"4\\n9 10 11 12\") == \"500\"\nassert solution(\"4\\n1 2 3 4 5\") == \"1000\"\nassert solution(\"4\\n1 2 3 4 5 6\") == \"1000\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output an integer representing the number of ways.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for {sample_input}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\n\nfrom typing import List"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\", \"Output must be 4\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, 2, 3, 4]) == 4, \"Solution is incorrect.\"\nassert solution([1, 2, 2, 3, 3, 3]) == 0, \"Solution is incorrect.\"\nassert solution([1, 2, 3, 3, 4, 4, 4, 4, 4]) == 0, \"Solution is incorrect.\"\nassert solution([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]) == 0, \"Solution is incorrect.\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\\n\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 31 2\n20 60\n50 90\n\"\"\") == \"\"\"\n4 3\n\"\"\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"Output: 4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n1 31 2\n20 60\n50 90\n'''\n) == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected_output, f\"Incorrect output: {solution()}!= {expected_output}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 60, 50, 20) == (4, 3), \"Failed\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"5 1 3\") == \"5\\n\"\nassert solution(\"8 2 4\") == \"1\\n\"\nassert solution(\"10 3 5\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\n\nprint(\"3\")"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 2 1\\n\") == \"3\"\nassert solution(stdin=\"1 1 1\\n\") == \"1\"\nassert solution(stdin=\"2 1 1\\n\") == \"4\"\nassert solution(stdin=\"3 1 1\\n\") == \"5\"\nassert solution(stdin=\"1 2 1\\n\") == \"6\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"3 4 1\") == \"5\\n\"\nassert solution(\"4 2 1\") == \"8\\n\"\nassert solution(\"5 1 1\") == \"3\\n\"\nassert solution(\"6 1 1\") == \"2\\n\"\nassert solution(\"7 1 1\") == \"0\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(2) == \"3\"\nassert solution(1) == \"1\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 3 1\") == \"3\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"3 3 1\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 3 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 1 3\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 4\") == \"0\"\nassert solution(\"4 1 1\") == \"0\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"3 1\", \"Expected '3 1' but got '{}'.\".format(solution(stdin: str))"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution for {input()} is incorrect. Expected output: {output}, but got {solution(input())}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3 1\\n\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 1\\n\", \"Incorrect output\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1\\n1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n5 1200 2391 3112 2412') == '3 1\\n0'\nassert solution('5\\n1341 2412 1200 3112 2391\\n5 1200 2391 3112 2412\\n3 1341 1200 2412 2391') == '3 1\\n2'\nassert solution('5\\n1341 2412 1200 3112 2391\\n5 1200 2391 3112 2412\\n3 1341 1200 2412 2391\\n5 1341 2412 1200 3112 2391') == '3 1\\n3'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3 1\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n15 25\n3 10\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n15 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"16\\n\"\n\nassert solution(\"\"\"\n20 30\n1 2 3\n1 1 2\n1 3 1\n1 3 1\n\"\"\") == \"10\\n\"\n\nassert solution(\"\"\"\n5 10\n1 2 3\n2 1 1\n2 1 2\n2 1 3\n\"\"\") == \"10\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nprint(\"Correct\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == 6\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n''') == '6'\n\nassert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    1 4 10\n''') == '6'\n\nassert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    1 4 10\n    10 10\n    2 2 1\n''') == '3'\n\nassert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    1 4 10\n    10 10\n    2 2 1\n    1 1 1\n    1 1 1\n    1 1 1\n''') == '6'\n\nassert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    1 4 10\n    10 10\n    2 2 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n''') == '3'\n\nassert solution('''\n    10 20\n    3 5\n    1 3 7\n    2 1 1\n    2 3 2\n    2 3 5\n    1 4 10\n    10 10\n    2 2 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''\n0 1 \n-1 0\n'''"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"1\\n\") == \"0 0 \\n-1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0'\nassert solution('100\\nabc def\\nxzy') == '-1 -1'\nassert solution('2\\n1 b') == '-1 0'\nassert solution('2\\n2 ab b') == '-1 0'\nassert solution('2\\n3 ab c') == '-1 0'\nassert solution('2\\n1 ab b') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'\nassert solution('2\\n2 ab') == '-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\n3 a b c\\n1 d\\n2 e f\\n3 g h i\\n2 j k l\\n3 m n o\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n4 a b c d e f g h i j k l m n o p q r s t u v w x y z\\n1 10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200\\n2 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250\\n3 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290\\n4 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300\\n5 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 190 200 210 220 230 240 250 260 270 280 290 300 310 320 330 340 350 360 370 380 390 400\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    n = int(stdin.readline())\\n    positions = [int(p) for p in stdin.readline().split()]\\n    result = [[] for _ in range(n)]\\n    for p in positions:\\n        for m in range(2**n):\\n            options = set(stdin.readline().split())\\n            if m in options:\\n                for option in options:\\n                    if p not in set(result[position].append(option) for position in range(n)):\\n                        result[p].append(option)\\n    min_rounds = -1\\n    for p in positions:\\n        if result[p]:\\n            for q in positions:\\n                if q not in result[p] and abs(p - q) == result[p][-1]:\\n                    min_rounds = min(min_rounds, result[p][-1])\\n    return str(min_rounds)\\n\\n\\n# Test the function\\ntest_case = '''\\n2\\n2 ab b\\n1 b\\n'''\\n\\nresult = solution(test_case)\\nprint(result)\\n\\nprint(solution('3\\n2 ab b\\n1 b\\n'))\\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1\\n-1 0'\nassert solution('3\\n1 2 3\\n1') == '-1 1 1'\nassert solution('3\\n1 2 3\\n4') == '-1 1 1'\nassert solution('2\\n1 ab\\n1') == '1 1'\nassert solution('3\\n1 2 3\\n3') == '0 0 0'\nassert solution('3\\n1 2 3\\n2') == '0 0 0'\nassert solution('3\\n1 2 3\\n1 2') == '-1 1 -1'\nassert solution('4\\n1 2 3 4\\n3') == '-1 1 -1'\nassert solution('4\\n1 2 3 4\\n2') == '0 0 0'\nassert solution('5\\n1 2 3 4 5\\n4') == '-1 1 -1'\nassert solution('5\\n1 2 3 4 5\\n3') == '0 0 0'\nassert solution('6\\n1 2 3 4 5 6\\n5') == '-1 1 -1'\nassert solution('6\\n1 2 3 4 5 6\\n4') == '0 0 0'\nassert solution('7\\n1 2 3 4 5 6 7\\n6') == '-1 1 -1'\nassert solution('7\\n1 2 3 4 5 6 7\\n5') == '0 0 0'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n7') == '-1 1 -1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n6') == '0 0 0'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n8') == '-1 1 -1'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n7') == '0 0 0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n9') == '-1 1 -1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n8') == '0 0 0'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10 11\\n10') == '-1 1 -1'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10 11\\n9') == '0 0 0'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n10') == '-1 1 -1'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n9') == '0 0 0'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n11') == '-1 1 -1'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n10') == '0 0 0'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n12') == '-1 1 -1'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n11') == '0 0 0'\nassert solution('15\\n1 2 3 4 5 6 7"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('2\\n2 ab b\\n1 a') == '-1'\nassert solution('2\\n1 ab b\\n1 b') == '0'\nassert solution('1\\n1 ab b\\n1 b') == '-1'\nassert solution('1\\n1 ab c\\n1 b') == '0'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: expected '{expected_output}', got '{solution(input())}'\"\n\ntest_case = 0\nN = int(input())\nQ = int(input())\n\nprint(solution(input()))"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '1000\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n3'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_index+1} failed. Expected output: '{expected_output}'. Got: '{solution(input())}'\"\ntest_case_index += 1"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, (sample_input, sample_output) in enumerate(test_cases)"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n3\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, sample_input, sample_output in enumerate(tests)"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"10 5\\n1 2\\n1 3\\n2 3\\n4 5\") == \"2\\n12\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 10\\n1 1\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n10\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 7"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\n'\n\nfrom typing import List"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"7\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution for the given input is {solution(sample_input)}, which is incorrect.\"\n\nsample_input = \"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\"\n\nsample_output = \"\"\"\n7\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 7, \"Expected output is 7, got {}\".format(solution())"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Test failed for solution: {solution}, expected: {expected_output}\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(1099511627776)) == 8\n\nfrom typing import List"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1099511627776) == \"8\", \"The solution is incorrect.\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1099511627776) == 8, \"Test Failed\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'1099511627776') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == 8, \"Test failed\" # Your code here"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x\\n') == '2\\n'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2\\n'\n\nassert solution('''\n2 2\nx..\n.x.\nx.x\n''') == '1\\n'\n\nassert solution('''\n2 2\nx..\n.x.\nxx.\n''') == '1\\n'\n\nassert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2\\n'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Test case not passing\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3,3) == 2"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n2\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"5 5\\nxxxxxx\\nxxxxxx\\nxxxxxx\\nxxxxxx\") == \"5\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == \"2\\n\"\nassert solution(3, 4) == \"3\\n\"\nassert solution(4, 4) == \"4\\n\"\nassert solution(4, 5) == \"5\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"5 5\\n.x.\\n.x.\\n...\\n\") == \"2\\n\"\nassert solution(\"3 5\\nx...x\\nx...x\\nx...x\\n\") == \"3\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', \"The solution is incorrect.\"\nprint(\"The solution is correct.\")"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9\\n-1\\n5\\n6\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n6 1 0') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\\n-1\\n5\\n6\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\", \"Test case 1 failed\"\n\nassert solution(\"2\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"103\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"125\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\"\nassert solution(\"4\\n1 1 30 20 10\\n3 1 70 70 70 10\\n2 1 95 50 30 20\\n1 1 95 50 30 20\") == \"200\\n\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n\") == \"91\"\nassert solution(stdin=\"4\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 50 30 20 10\\n\") == \"120\"\nassert solution(stdin=\"5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n5 1 50 30 20 10\\n1000 1 1 1 1 1\\n\") == \"Infinity\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 91"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('1\\n1 2 3 4 5 6\\n1 1 1 1 1 1') == '0'\nassert solution('1\\n1 2 3 4 5 6\\n2 1 2 1 1 1') == '0'\nassert solution('2\\n1 2 3 4 5 6\\n1 1 1 1 1 1') == '0'\nassert solution('3\\n1 2 3 4 5 6\\n1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"91\", \"Expected output '91', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\", \"The shortest possible time it takes to construct an airplane assuming a single step can be reduced to take no time at all is 15.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"15 20\\n0\\n1 1\") == \"15\\n\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"15\\n\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1') == 15\nassert solution('2\\n15 20\\n0\\n2 3 4') == 60\nassert solution('2\\n15 20\\n0\\n1 2') == 15\nassert solution('2\\n15 20\\n0\\n1 3') == 15\nassert solution('2\\n15 20\\n0\\n1 4') == 15\nassert solution('2\\n15 20\\n0\\n1 5') == 15\nassert solution('2\\n15 20\\n0\\n2 1 3') == 60\nassert solution('2\\n15 20\\n0\\n2 1 4') == 60\nassert solution('2\\n15 20\\n0\\n2 2 4') == 60\nassert solution('2\\n15 20\\n0\\n3 2 4') == 60\nassert solution('2\\n15 20\\n0\\n1 2 3 4') == 60"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    2\n    15 20\n    0\n    1 1\n\"\"\") == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1') == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('15 20\\n0\\n1 1') == 15\nassert solution('5 10\\n1 2 3\\n2 4') == 15\nassert solution('20 10\\n1 2 3\\n1 1 1\\n2 1\\n3 4\\n4 3\\n5 4') == 20"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\\n\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n5 5\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"10 5\\n1 2 2000\\n2 3 1500\\n3 4 1000\\n4 5 500\") == \"possible\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\"\n) == \"impossible\\n\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\n\nsolution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") # test case"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test Case {tc} Failed\"\nfor tc in range(1, 6):\n    input_ = input().split()\n    n, m = map(int, input_)\n    p, q, c = map(int, input_.next().split())\n    assert n == 5 and m == 4, f\"Test Case {tc} Failed\"\n    assert p <= n and q <= n, f\"Test Case {tc} Failed\"\n    assert c <= 10**6, f\"Test Case {tc} Failed\"\n    pairs = [list(map(int, input_.next().split())) for _ in range(m)]\n    alice, bob = pairs[0], pairs[1]\n    if alice[0]!= bob[0] or alice[1]!= bob[1]:\n        assert len(alice) == 2 and len(bob) == 2, f\"Test Case {tc} Failed\"\n        if alice[0] > bob[0]:\n            alice, bob = bob, alice\n        alice_carbon_dioxide = sum(alice[1:3]) * c\n        bob_carbon_dioxide = sum(bob[1:3]) * c\n        if alice[0] == alice[1]:\n            alice_carbon_dioxide = 0\n        if bob[0] == bob[1]:\n            bob_carbon_dioxide = 0\n        total_carbon_dioxide = alice_carbon_dioxide + bob_carbon_dioxide\n        if total_carbon_dioxide >= 10**6:\n            print(\"impossible\")\n        else:\n            print(total_carbon_dioxide)\n    else:\n        print(\"impossible\")"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"0.999999999\"\nassert solution(4) == \"0.999999999\"\nassert solution(5) == \"0.999999999\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"2.000000000\"\nassert solution(3) == \"3.000000000\"\nassert solution(4) == \"4.000000000\"\nassert solution(5) == \"5.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"1.000000000\\n\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1.000000000\"\n\nimport random"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1.000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"1.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nprint(\"All tests passed\")"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 2 5\\n15 30 40\\n40 15 20\\n90 10 20\") == 105.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 115.000000000, \"Expected output to be 115.000000000, but got {}\".format(solution())"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"115.000000000\"  # Test case 1"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 115.0, \"Expected output: 115.000000000\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == '115.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '115.000000000', 'Test case 1 failed'\n\nfrom typing import List"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\\n\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.5\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n100 1 1\n100 1 1.5\n\"\"\") == \"199.500000\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n', 'Test case 1 failed'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Sample Input 1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\", \"Please fix the code\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n7 6 5 4 3 2 1 10 9 8 7 6 5 4 3 2 1\") == \"4\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1', 'Your solution is incorrect.'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"Impossible on a single line.\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"Impossible on a single line.\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {solution(sample_input)}\\nExpected output: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Possible\\n\", \"Incorrect output.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == 5\nassert solution(\"5\\n2 3 4 5\") == 5\nassert solution(\"3\\n5 1 2 3\") == 10\nassert solution(\"4\\n6 5 4 3\") == 10\nassert solution(\"10\\n7 5 4 3\") == 20\nassert solution(\"5\\n3 2 1 1\") == \"Impossible on a single line\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == 5\nassert solution(\"10\\n100 250 50 25\") == 0\nassert solution(\"100\\n1000000000 1000000000 1000000000 1000000000\") == 0\n\nfrom typing import List\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"The output should be: 5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\\n\"\nassert solution(\"15\\n3 2 1 2\") == \"2\\n\"\nassert solution(\"10\\n2 3 4 5\") == \"5\\n\"\nassert solution(\"100000000\\n1 2 3 4 5 6 7 8 9 10\") == \"Impossible\\n\"\nassert solution(\"100000000\\n1 2 3 4 5 6 7 8 9 10\") == \"5\\n\"\nassert solution(\"100000000\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\n'\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\nImpossible\"\nassert solution(\"10 25 10 5\\n3 2 1 1\\n\") == \"5\\n10\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n\nsolution = '''\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"aba\\nacd\\n\") == \"no\"\nassert solution(\"\") == \"no\"\nassert solution(\"aabcad\\nbab\\nacd\") == \"no\"\nassert solution(\"aba\\nacd\\naba\\nbab\\nacd\") == \"yes\"\nassert solution(\"aabcad\\nbab\\nacd\\n\") == \"no\"\nassert solution(\"aba\\nacd\\naba\\nbab\\nacd\\n\") == \"yes\"\n\nfrom typing import List\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\") == \"yes\", \"Incorrect output\"\nassert solution(\"aba\") == \"yes\", \"Incorrect output\"\nassert solution(\"acd\") == \"no\", \"Incorrect output\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == 5, 'Incorrect solution'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"5\n\"\"\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'\nprint('All tests passed successfully!')"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '4\\n'\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nprint(\"All tests passed!\")\n\nfrom typing import List"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4\\n'\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5 2\n    2 4 same\n    3 5 same\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n'\nassert solution(open('sample_input.txt', 'r').read()) == '4\\n'\nassert solution(open('sample_output.txt', 'r').read()) == '4\\n'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([6, 4] + list(map(int, input().strip().split())) + [4]) == 3, \"Test case 1 failed\"\nassert solution([6, 4] + list(map(int, input().strip().split())) + [3, 5]) == 3, \"Test case 2 failed\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"3\"\n\nsample_input = '''\n6 4\n0 1\n0 2\n3 4\n3 5\n'''"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\" # expected output: 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 4\n    0 1\n    0 2\n    3 4\n    3 5\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"9.0\\n6.5\\n2.5\"\n\nfrom typing import List"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\", \"Test case 1 failed.\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"\"\"\n1.0\n6.5\n2.5\n\"\"\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"1\", \"Incorrect output\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution(stdin='5 5 3\\nB 1 2\\nR 2 3\\nB 3 4\\nR 4 2\\nB 4 5') == '0'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} has incorrect output: got '{solution(input_data)}', expected '{output_data}'\" for i, (input_data, output_data) in enumerate(zip(test_cases, outputs))"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3 3 1\\nB 1 2\\nB 2 3\\nR 3 1') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('4 5 3\\nB 1 2\\nB 2 3\\nB 3 4\\nB 4 1') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 3 2\\nB 1 2\\nR 2 3\\nB 3 1\") == \"0\"\nassert solution(\"3 3 0\\nB 1 2\\nR 2 3\\nB 3 1\") == \"0\"\nassert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"The given solution is incorrect.\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '1'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abc\\n123\\n456') == '88\\n5\\n5\\n7\\n'\nassert solution('def\\n123\\n456') == '123\\n'\nassert solution('ghi\\n123\\n456') == '456\\n'\nassert solution('jkl\\n123\\n456') == '258\\n'\nassert solution('mno\\n123\\n456') == '162\\n'\nassert solution('pqr\\n123\\n456') == '123\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '88\\n5\\n5\\n7'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Test case {i} has incorrect output.\\nExpected: {expected}\\nGot: {solution}\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\" # pass\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\" # pass"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '88', 'Expected \"88\", but got \"{}\".'.format(solution())"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n88\n5\n5\n7\n\"\"\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"Your solution is incorrect.\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\\n5\\n5\\n5\\n5\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"4 3 2 1\\n1\\n1 2 1\\n2 3 3\\n\") == 5\nassert solution(\"4 4 1 3\\n3\\n1 2 1\\n2 3 4\\n\") == 5\nassert solution(\"2 2 2 1\\n1\\n1 1 1\\n2 2 2\\n\") == 5\nassert solution(\"1 1 1 1\\n1\\n1 1 1\\n2 2 2\\n\") == 5\nassert solution(\"2 2 2 1\\n1\\n1 1 1\\n2 2 2\\n\") == -1\nassert solution(\"1 1 1 1\\n1\\n1 1 1\\n2 2 2\\n\") == -1\nassert solution(\"2 2 2 1\\n1\\n1 1 1\\n2 2 2\\n\") == -1\nassert solution(\"1 1 1 1\\n1\\n1 1 1\\n2 2 2\\n\") == -1\nassert solution(\"2 2 2 1\\n1\\n1 1 1\\n2 2 2\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5 # This is the correct output."
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == 5\nassert solution(\"\"\"\n3 3 1 2\n1\n1 2 1\n1 3 1\n2 3 3\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n1 1\n1 2 1\n1 3 1\n2 3 3\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n1 1 1\n1 2 1\n1 3 1\n2 3 3\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1\n1 2 1\n1 3 1\n2 3 3\n\"\"\") == 5\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1\n1 2 1 1\n1 3 1 1\n2 3 3 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1\n1 2 1 1\n1 3 1 1\n2 3 3 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1 1\n1 2 1 1 1\n1 3 1 1 1\n2 3 3 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1 1\n1 2 1 1 1\n1 3 1 1 1\n2 3 3 1 1\n\"\"\") == 5\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1 1 1\n1 2 1 1 1 1\n1 3 1 1 1 1\n2 3 3 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1 1 1\n1 2 1 1 1 1\n1 3 1 1 1 1\n2 3 3 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1 1 1 1\n1 2 1 1 1 1 1\n1 3 1 1 1 1 1\n2 3 3 1 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1 1 1 1\n1 2 1 1 1 1 1\n1 3 1 1 1 1 1\n2 3 3 1 1 1 1\n\"\"\") == 5\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1 1 1 1 1\n1 2 1 1 1 1 1 1\n1 3 1 1 1 1 1 1\n2 3 3 1 1 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1 1 1 1 1\n1 2 1 1 1 1 1 1\n1 3 1 1 1 1 1 1\n2 3 3 1 1 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n1 1 1 1 1 1 1 1 1\n1 2 1 1 1 1 1 1 1\n1 3 1 1 1 1 1 1 1\n2 3 3 1 1 1 1 1 1\n\"\"\") == -1\nassert solution(\"\"\"\n3 3 1 2\n2 2 1 1 1 1 1 1 1\n1 2 1 1 1 1 1 1 1\n1 3 1 1 1 1 1 1 1\n2 3 3 1 1 1 1 1 1\n\"\"\") == 5\nassert solution(\"\"\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5\nassert solution('3 3 2 1\\n3\\n3 3 1\\n3 1 2') == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"1 2 2\\n1 3 1\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5, 'Test case 1 failed'\nassert solution('5 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5, 'Test case 2 failed'\nassert solution('5 3 1 3\\n3\\n1 2 2\\n1 3 1\\n2 3 3') == 6, 'Test case 3 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == 5, 'Test case 4 failed'\nassert solution('3 3 1 2\\n2\\n1 2 3\\n1 3 1\\n2 3 3') == 6, 'Test case 5 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 4\\n2 3 3') == -1, 'Test case 6 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 1\\n2 4 1') == 15, 'Test case 7 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 2\\n2 4 3') == 20, 'Test case 8 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 2\\n2 4 3\\n1 5 1\\n2 5 1') == -1, 'Test case 9 failed'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n1 4 2\\n2 4 3\\n1 5 2\\n2 5 3') == 25, 'Test case 10 failed'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"FRULA\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 32, \"The correct answer is 32.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"32\", \"Incorrect output\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n7 8\") == \"12\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32, \"Incorrect output.\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == 32, \"Output should be 32\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"10\\n1 2 0 3 1 2 3 4 5 6 7 8 9\") == \"12\"\nassert solution(\"5\\n10 10 10 10 10\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"10\\n10 10 10 10 10\") == \"10\"\nassert solution(\"5\\n10 10 10 10 10\") == \"10\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\"\nassert solution(\"10\\n1 2 0 3 1 4 5 6 7 8 9\\n\") == \"5\\n1\\n\"\nassert solution(\"10\\n1 2 0 3 1 4 5 6 7 8 9\\n\") == \"5\\n1\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"10\\n1 2 0 3 1\\n1 3 1 0 2\\n1 1 0 2 3\\n1 3 1 0 2\\n\") == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\n    \"10\\n1 1 2 3 4 5 6 7 8 9\") == \"10\\n8\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(inputs, outputs)"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\\n\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The correct answer is 2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\") == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '2'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"The solution is incorrect\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == 2\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {sample_input}, {sample_output}\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 500000004, \"Incorrect output.\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"500000004\", \"Test case 1 failed\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004\\n'\nassert solution('3\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n') == '1000000000\\n'\nassert solution('4\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n') == '3000000000\\n'\nassert solution('5\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n') == '1500000000\\n'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1000000000 0\\n1000000000 1\\n') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"500000004\", \"Test failed\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 500000004\nprint(500000004)\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"500000004\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test case failed.\"\nfor i, line in enumerate(stdin.strip().split('\\n')):\n    if i == 0:\n        n, b, p = map(int, line.split())\n        P, Q = b, 10**9+7\n        for _ in range(p):\n            P = (P * Q) % Q\n    else:\n        a, b = map(int, line.split())\n        if a < b:\n            P = (P * b) % Q\n        else:\n            Q = (Q * b) % Q\n    print(P)"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read().strip()) == 500000004\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\", \"Solution should return 12.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n\"\"\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"12\\n\", solution(stdin)"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n') == '12\\n'\nprint('Test Passed!')"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\", \"Test failed for input: {}\".format(input())"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('travel_route.in', 'r')) == '12\\n'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Solution does not match expected output\\nExpected: {expected}\\nGot: {solution}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nprint('All tests passed')"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"6 5\\n5 10 10\\n10 15 5\") == \"3\\n\"\nassert solution(\"10 20\\n20 20 20\\n20 20 20\") == \"2\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 10\") == \"3\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3\\n'\nassert solution('3 19\\n20 10 5\\n12 4 4\\n15 5 3\\n') == '3\\n'\nassert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '2\\n'\nassert solution('3 19\\n15 5 3\\n20 10 5\\n12 4 4\\n') == '2\\n'\nassert solution('3 19\\n20 10 5\\n12 4 4\\n15 5 3\\n') == '3\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"The correct output is not provided.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"1 2 3\\n1 2 3\\n4 4 4\\n5 5 5\") == \"3\\n\"\nassert solution(\"1 2 3\\n4 4 4\\n5 5 5\\n6 6 6\") == \"2\\n\"\nassert solution(\"2 2 2\\n2 2 2\\n2 2 2\") == \"0\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n\", \"Invalid Input\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"  # expected output: 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n1\\n\", \"Testcase not passing\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1', \"Output should be 1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1\\n') == '1\\n'\nassert solution('2\\n2 2\\n2 1\\n1 2\\n1 1\\n2 1\\n') == '2\\n'\nassert solution('3\\n3 3\\n2 2\\n1 3\\n2 3\\n3 2\\n') == '7\\n'\nassert solution('4\\n1 1\\n2 2\\n3 3\\n4 4\\n') == '52\\n'\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\\n\", \"The output should be 1\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1\\n') == 1, \"Incorrect Output\"\nassert solution('2\\n2 2\\n2 3\\n') == 2, \"Incorrect Output\"\nassert solution('3\\n4 5\\n6 7\\n') == 3, \"Incorrect Output\"\nassert solution('4\\n1 1\\n2 1\\n') == 4, \"Incorrect Output\"\nassert solution('5\\n1 1\\n2 2\\n3 3\\n') == 5, \"Incorrect Output\"\nassert solution('6\\n1 1\\n2 2\\n3 3\\n4 4\\n') == 6, \"Incorrect Output\"\nassert solution('7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == 7, \"Incorrect Output\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Input file contains exactly 4 lines, containing 4 characters each, each character being either \\\"R\\\", \\\"G\\\", \\\"B\\\", or \\\"Y\\'.\\n\")) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('RGR') == '3'\nassert solution('GBGB') == '4'\nassert solution('BYBY') == '4'\nassert solution('YRYR') == '5'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RBGR\\nGBBG\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY\") == \"3\"\nassert solution(\"RBGR\\nGBGB\\nBYBR\\nYRBY"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGR\") == 3\nassert solution(\"GBGB\") == 3\nassert solution(\"BYBY\") == 3\nassert solution(\"YRYR\") == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='RGGR') == '3'\nassert solution(stdin='GBGB') == '3'\nassert solution(stdin='BYBY') == '3'\nassert solution(stdin='YRYR') == '3'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"GGGR\\nGGBG\\nGBBY\\nGRBY\") == \"4\"\nassert solution(\"RGRG\\nRGGG\\nRBGB\\nRBGR\") == \"3\"\nassert solution(\"GGRR\\nRGRG\\nRBGB\\nGRBY\") == \"2\"\nassert solution(\"GBRR\\nGGRG\\nGRBB\\nBRBY\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'AAAAA', 'The output is incorrect.'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"ABAB\"\nassert solution(\"2\\n1 -1 0 1\\n-1 1 0 -1\") == \"AABAB\"\nassert solution(\"3\\n5 -3 -2 0 1\\n1 0 1 -1 2\") == \"ABABABAB\"\nassert solution(\"4\\n-3 3 -1 0 -2\\n0 0 0 -2 2\") == \"ABABABABABABAB\"\nassert solution(\"5\\n1 2 3 -5 4\\n1 1 -3 2 0\") == \"AABABAABABABABAAB\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"AAAAA\\n\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"ABA\\n\"\nassert solution(\"6\\n1 2 3 4 5\\n6 5 4 3 2\\n5 4 3 2 1\") == \"ABA\\n\"\nassert solution(\"7\\n1 2 3 4 5\\n6 5 4 3 2\\n5 4 3 2 1\\n4 3 2 1 0\") == \"ABA\\n\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'AAAAA', 'Your solution is incorrect.'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"AAAAA\\n\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"IMPOSSIBLE\", \"Test Failed\"\nassert solution() == \"1\", \"Test Failed\"\nassert solution() == \"2\", \"Test Failed\"\nassert solution() == \"3\", \"Test Failed\"\nassert solution() == \"1\", \"Test Failed\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''\n12\n4\n11\n3\n2\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"austria\") == \"12\", \"sample test case\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"There are no words to type.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('austria') == '12'\nassert solution('autocorrect') == '4'\nassert solution('program') == '11'\nassert solution('computer') == '3'\nassert solution('autocorrelation') == '2'\nassert solution('zyx') == '2'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:pass'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 5\n        austria\n        autocorrect\n        program\n        programming\n        computer\n        autocorrelation\n        programming\n        competition\n        zyx\n        austria\n    ''') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is not correct.\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"austria\") == \"12\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"autocorrect\") == \"12\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"program\") == \"4\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"programming\") == \"11\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"computer\") == \"3\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"autocorrelation\") == \"12\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"programming\") == \"3\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"competition\") == \"2\\n\", \"Typing on phones can be tedious.\"\nassert solution(\"zyx\") == \"2\\n\", \"Typing on phones can be tedious.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"austria\") == \"12\"\nassert solution(\"autocorrect\") == \"12\"\nassert solution(\"program\") == \"12\"\nassert solution(\"programming\") == \"11\"\nassert solution(\"computer\") == \"3\"\nassert solution(\"autocorrelation\") == \"12\"\nassert solution(\"competition\") == \"2\"\nassert solution(\"zyx\") == \"2\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\") == \"3\\n\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n1 2 3 4\") == 3\nassert solution(\"5\\n1 1 1 1 1\") == 6\nassert solution(\"1\\n1\") == 1\nassert solution(\"3\\n1 2 3\") == 1\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == 12\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"1\\n0 1\") == 1\nassert solution(\"12\\n0 1 2 3 4 5\") == 12\nassert solution(\"1\\n0 2\") == 1\nassert solution(\"6\\n2 2 2 2 2\") == 12\nassert solution(\"4\\n0 1 1 2\") == 1\nassert solution(\"1\\n0 0\") == impossible"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {input()} -> {output}\" for i, input, output in enumerate(zip(stdin.split(), output.split()))"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"5\\n0 1 0 1 1\") == 5\nassert solution(\"10\\n0 1 0 1 1 1 1\") == 12\nassert solution(\"13\\n0 1 0 1 1 1 1 1\") == 12\nassert solution(\"14\\n0 1 0 1 1 1 1 1 1\") == 12\nassert solution(\"15\\n0 1 0 1 1 1 1 1 1 1\") == 12\nassert solution(\"16\\n0 1 0 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"17\\n0 1 0 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"18\\n0 1 0 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"19\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"20\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"21\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"22\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"23\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"24\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"25\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"26\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"27\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"28\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"29\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"30\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"31\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"32\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 12\nassert solution(\"33\\n0 1 0 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Testcase {i+1} failed\" for i, (input, output) in enumerate(test_cases)"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected: {output()}, Actual: {solution(input())}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n3\\n\"  # Correct output\nassert solution(input()) == \"1\\n1\\n\"  # Correct output\nassert solution(input()) == \"1\\n1\\n\"  # Correct output\nassert solution(input()) == \"3\\n3\\n\"  # Correct output\nassert solution(input()) == \"impossible\\nimpossible\\n\"  # Correct output\nassert solution(input()) == \"3\\n3\\n3\\n\"  # Correct output"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"Output should be 3.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'In Pre In In Pre Post'\nassert solution('BIGEDCJFAH') == 'In Pre In In Pre Post'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\"\nassert solution(\"IGEDCJBAFH\") == \"In Pre In Pre In In In Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"Expected 'Pre Post In Post In Pre', got '{}'\".format(solution('HFBIGEDCJA'))\nassert solution('BIGEDCJFAH') == 'In In Pre Post Post In', \"Expected 'In In Pre Post Post In', got '{}'\".format(solution('BIGEDCJFAH'))\nassert solution('BIGEDCJFAH') == 'In In Pre Post Post In', \"Expected 'In In Pre Post Post In', got '{}'\".format(solution('BIGEDCJFAH'))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"Pre Post In Post In Pre\"\nassert solution(open('input2.txt', 'r')) == \"Pre Pre In Pre In Pre Post Post\"\nassert solution(open('input3.txt', 'r')) == \"Pre Pre In Pre In Pre Post Post\"\nassert solution(open('input4.txt', 'r')) == \"HFBIGEDCJA\"\nassert solution(open('input5.txt', 'r')) == \"BIGEDCJFAH\"\nassert solution(open('input6.txt', 'r')) == \"BIGEDCJFAH\"\nassert solution(open('input7.txt', 'r')) == \"IGEDCJBAFH\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n\"\nassert solution(\"HFBIGEDCJA\\n\") == \"Pre In In Pre In In Pre\\nHFBIGEDCJA\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\"\nassert solution(\"IGEDCJBAFH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre','sample test case failed'\nassert solution('BIGEDCJFAH') == 'In Pre In In In Pre','sample test case failed'\nassert solution('BIGEDCJFAH') == 'In Pre In In In Pre','sample test case failed'\nassert solution('IGEDCJBAFH') == 'In In Pre In In Post','sample test case failed'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\n\nSolution:"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == 10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == 10, \"Solution does not meet the expected output\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10\\n'\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0 100 100\n    30 30 60 60\n    \"\"\"\n) == \"10000.00\"\n\nassert solution(\n    \"\"\"\n    10\n    10 10 20 20\n    10 20 10 20\n    \"\"\"\n) == \"3000.00\"\n\nassert solution(\n    \"\"\"\n    100\n    10 10 10 20\n    10 20 20 20\n    \"\"\"\n) == \"30000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\\n\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10000.00\", \"The expected output is incorrect. Please check your code and input.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0\nassert solution(\"1 1 2 2\\n3 3 4 4\") == 16.0\nassert solution(\"0 0 100 100\\n-1000 -1000 1000 1000\\n1000 1000 2000 2000\") == 10000.0\nassert solution(\"1 1 2 2\\n3 3 4 4\") == 16.0\nassert solution(\"0 0 100 100\\n0 0 100 100\\n0 0 100 100\") == 10000.0"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\\n\") == 10000.0\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 10000.00, \"Incorrect solution.\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n\") == \"10000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n\") == \"3000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n20 20 30 30\\n10 10 20 20\\n\") == \"5000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n20 20 30 30\\n10 10 20 20\\n30 30 40 40\\n\") == \"7000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == 5\nassert solution(\"5 3\\n4 5\\n2 4\\n1 3\\n\") == 2\nassert solution(\"5 3\\n4 5\\n2 4\\n1 3\\n6 7\\n\") == 1\nassert solution(\"5 3\\n4 5\\n2 4\\n1 3\\n6 7\\n8 9\\n\") == 3\nassert solution(\"10 11\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == 13\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == 0"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 5\nassert solution(5) == 5\nassert solution(1) == 0\nassert solution
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n\", \"Please add a solution for this problem.\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '5'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"1093427715\\n\"\nassert solution(stdin) == \"1093427716\\n\"\nassert solution(stdin) == \"1093427717\\n\"\nassert solution(stdin) == \"1093427718\\n\"\nassert solution(stdin) == \"1093427719\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == str(int(input()) % 10**9 + 7)\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == 2095, \"Invalid Answer\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"10 10 10\\n5 5 5\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"7 7 7\\n3 3 3\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"10 10 10\\n5 5 5\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"7 7 7\\n3 3 3\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"10 10 10\\n5 5 5\\n0 0 0\\n\") == \"2095\\n\"\nassert solution(\"7 7 7\\n3 3 3\\n0 0 0\\n\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == 2095"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"11 13 17\\n5 2 4\\n0 0 0\") == 2095, \"The given input is incorrect.\"\n\nfrom math import gcd"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"0\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\"\nassert solution(\"13 17 19\\n3 5 7\\n0 0 0\") == \"450\\n\"\nassert solution(\"17 19 23\\n5 7 11\\n0 0 0\") == \"245\\n\"\nassert solution(\"19 23 29\\n9 13 17\\n0 0 0\") == \"165\\n\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Hello, World!\\\"; var b = a.length(); var c = `The number of characters in ${a} is ${b}`; print c; end.\") == \"The number of characters in Hello, World!\\nThe number of characters in Hello, World!\\ndef solution(stdin: str) -> str:\\n    pass\\ndef my_func(x: int) -> str:\\n    return str(x)\\ndef main():\\n    a = 5\\n    b = my_func(a)\\n    c = f'{a}'\\n    d ='str' * 10\\n    e = f'{d}'\\n    print(c)\\n    print(d)\\n    print(e)\\n\\n    if __name__ == '__main__':\\n        main()\\nend.\") == \"The number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello, World!\\nThe number of characters in Hello"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a; print c; print 'My name is'+ b; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test failed for input {input}.\"\n\ninput = \"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.\"\nexpected = \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\";\\nvar b = a;\\nvar c = `My name is ${a}`\\nprint c;\\nprint `My name is ${b}`\\nend.\\n\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"print `Gon is the name of the language`\\nend.\\n\") == \"Gon is the name of the language\\n\"\nassert solution(\"var a = \\\"abc\\\";\\nprint a;\\nend.\\n\") == \"abc\\n\"\nassert solution(\"var a = 123;\\nprint a;\\nend.\\n\") == \"123\\n\"\nassert solution(\"var a = \\\"a1b2c3\\\";\\nprint a;\\nend.\\n\") == \"a1b2c3\\n\"\nassert solution(\"var a = \\\"a1b2c3\\\";\\nvar b = a;\\nprint b;\\nend.\\n\") == \"a1b2c3\\n\"\nassert solution(\"var a = \\\"a1b2c3\\\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`\\nend.\\n\") == \"My name is a1b2c3\\nMy name is a1b2c3\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\"\n) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\"\n) == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, \"The output is incorrect.\"\n\nsample_input = \"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\"\n\nsample_output = \"\"\"\nMy name is Gon\nMy name is Gon\n\"\"\"\n\nsolution(sample_input)"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2\n    7 8\n    10\n\"\"\"\n) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    7 8\n    10\n''') == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution('2\\n7 8\\n10\\n'))\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2\n7 8\n10\n''') == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Impossible'\nprint(\"Impossible\")"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('10 2 3') == '14'\nassert solution('10 5 3') == '30'\nassert solution('10 4 4') == '30'\nassert solution('10 10 4') == '270'\nassert solution('10 10 6') == '300'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '27\\n', \"Your solution is incorrect. Please check the code and try again.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"27\\n\"\nassert solution(input()) == \"18\\n\"\nassert solution(input()) == \"14\\n\"\nassert solution(input()) == \"10\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"15 5 3\") == \"51\"\nassert solution(\"10 7 2\") == \"24\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4 3') == 27, \"The output is incorrect.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 3\") == \"27\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 4 3') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"27\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 100 5\\n2 3 1 2\\n1 3 3\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_str)}\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 3 5\n    2 3 1 2\n    2\n    1 3 3\n    2\n    1 1 1\n    2\n    \"\"\"\n) == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', \"Test 1 failed\"\nassert solution('1001 3000 1000') == '533.3333333333\\n', \"Test 2 failed\"\nassert solution('1000 3000 1001') == '533.3333333333\\n', \"Test 3 failed\"\nassert solution('1000 3001 1000') == '533.3333333333\\n', \"Test 4 failed\"\nassert solution('1000 3000 1000') == '533.3333333333\\n', \"Test 5 failed\"\nassert solution('1000 3000 1000') == '533.3333333333\\n', \"Test 6 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Incorrect output\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Incorrect output.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Testcase 1 failed\"\nassert solution(\"5000 2000 1000\") == \"300.0000000000\\n\", \"Testcase 2 failed\"\nassert solution(\"10000 5000 1000\") == \"800.0000000000\\n\", \"Testcase 3 failed\"\nassert solution(\"10000000 10000000 1000\") == \"170000.0000000000\\n\", \"Testcase 4 failed\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '533.3333333333', \"Your solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, \"Your solution does not match the expected output.\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"123\") == \"\"\nassert solution(\"123456\") == \"\"\nassert solution(\"123456789012345678901234567890\") == \"\"\nassert solution(\"123456789012345678901234567891\") == \"\"\nassert solution(\"123456789012345678901234567892\") == \"\"\nassert solution(\"123456789012345678901234567893\") == \"\"\nassert solution(\"123456789012345678901234567894\") == \"\"\nassert solution(\"123456789012345678901234567895\") == \"\"\nassert solution(\"123456789012345678901234567896\") == \"\"\nassert solution(\"123456789012345678901234567897\") == \"\"\nassert solution(\"123456789012345678901234567898\") == \"\"\nassert solution(\"123456789012345678901234567899\") == \"\"\nassert solution(\"123456789012345678901234567900\") == \"\"\nassert solution(\"123456789012345678901234567901\") == \"\"\nassert solution(\"123456789012345678901234567902\") == \"\"\nassert solution(\"123456789012345678901234567903\") == \"\"\nassert solution(\"123456789012345678901234567904\") == \"\"\nassert solution(\"123456789012345678901234567905\") == \"\"\nassert solution(\"123456789012345678901234567906\") == \"\"\nassert solution(\"123456789012345678901234567907\") == \"\"\nassert solution(\"123456789012345678901234567908\") == \"\"\nassert solution(\"123456789012345678901234567909\") == \"\"\nassert solution(\"123456789012345678901234567910\") == \"\"\nassert solution(\"123456789012345678901234567911\") == \"\"\nassert solution(\"123456789012345678901234567912\") == \"\"\nassert solution(\"123456789012345678901234567913\") == \"\"\nassert solution(\"123456789012345678901234567914\") == \"\"\nassert solution(\"123456789012345678901234567915\") == \"\"\nassert solution(\"123456789012345678901234567916\") =="
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3000, 1000, 1000) == 533.3333333333\nassert abs(solution(3000, 1000, 1001) - 533.3333333333) < 1e-7\nassert abs(solution(3000, 1000, 10000) - 1000000000) < 1e-7\nassert abs(solution(3000, 1000, 20000) - 5000000000) < 1e-7\nassert abs(solution(3000, 1000, 1000000000) - 1000000000000000000) < 1e-7\nassert abs(solution(3000, 1000, 100000000000000000000) - 500000000000000000000000000) < 1e-7\nassert abs(solution(3000, 1000, 10000000000000000000000000) - 10000000000000000000000000000000) < 1e-7"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == '14.14', 'The output is incorrect.'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '14.14', \"Incorrect output. Expected '14.14', but got '{}'.\".format(solution())"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 14.14, \"The solution is not correct.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\\n\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\nassert solution(\"100 0\\n100 10\\n100 20\\n\") == \"100.00\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\nassert solution(\"4 1\\n2 1\\n3 1\") == \"12.00\"\nassert solution(\"1 2\\n2 3\\n3 4\\n4 5\") == \"0.50\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    m, q = map(int, stdin.split())\n    result = []\n    for _ in range(m):\n        x, y, k = map(int, stdin.split())\n        if x == 123457:\n            result.append([y, k])\n        else:\n            result.append([0, 0])\n    for _ in range(q):\n        x = int(stdin.strip())\n        if x == 123458:\n            result.append([0, 1])\n        else:\n            result.append([0, 0])\n    return '\\n'.join(map(str, result))\n\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}, Expected output: {expected}\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3 3\n    123456 14323 1700000\n    123458 41412 1900000\n    123457 15221 1800000\n    123456\n    123458\n    123457\n        ''') == '''\n        123457 0\n        0 2\n        123458 1\n            '''"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', got '{solution(sample_input)}'.\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution, \"The solution function is not defined.\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0 2\\n123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nprint(\"All tests passed\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"Test failed\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90, \"Incorrect answer for sample input.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1 3\\n2 4 5 1"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str='3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.0\nassert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n10 20\") == 20.0"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n\nfrom typing import List"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"6.000000\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"30.000000\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"98.000000\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"100.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n\\n# Test case 1\\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\\n\\n# Test case 2\\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4') == '1.\\n..\\n0'\\n\\n# Test case 3\\nassert solution('3\\n0 1\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\\n\\n# Test case 4\\nassert solution('4\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\\n\\n# Test case 5\\nassert solution('5\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n0'\\n\\n# Test case 6\\nassert solution('400\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n4\\n2\\n0 0\\n0 "
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\"\n) == \"1.\\n..\\n\\n\"\n\nassert solution(\n    \"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\"\n) == \"1.\\n..\\n\\n2.\\n..\\n\\n\"\n\nassert solution(\n    \"10\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n10000"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.2\\n..\\n0\") == \"1.2\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('4\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('6\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('7\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('8\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('9\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('10\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('11\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('12\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('13\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('14\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('15\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('16\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('17\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('18\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('19\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('20\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('21\\n0 0\\n0 0\\n1\\n..\\n0\\n') == '1\\n..\\ndef solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1..\\n..1\\n\"\nassert solution(\"4\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"5\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"401\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"300\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"0\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"3\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\"\nassert solution(\"500\\n0 0\\n0 0\\n1.2\\n..1\\n1.1\\n0\\n\") == \"1..2\\n..11\\n1.1.1\\n11.1\\n..1.1\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n.\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n..\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n...\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n.....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n......\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n.......\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1\\n.\\n0\") == \"1\\n........\\n0\"\nassert solution(\"2\\n0 "
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n1.\n..\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n5') == '1.1\\n..\\n0'\n\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n5\\n10') == '1.1\\n..\\n0\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == [\"1\", \"1\", \"def\"]"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('tests/test_barbarians.txt', 'r')) == '''1\n1\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"1\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\na\\nbc\\nabca\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('4\\nabcd\\nefg\\n12345') == '1\\n2\\n2\\n4\\n'\nassert solution('2\\nabc\\ndef') == '1\\n2\\n'\nassert solution('1\\nabc') == '1\\n1\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"a\\nbc\\nabc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"1 abca\\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 'def'\nassert solution(1) == 'abc'\nassert solution(2) == '1'\nassert solution(100) == 'abc'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution {solution(sample_input)} is not the expected output.\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 3 4 1') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 3 1 5') == 'YES'\nassert solution('2 1 1 4') == 'YES'\nassert solution('1 1 5 1') == 'NO'\nassert solution('1 3 1 2') == 'NO'\nassert solution('1 1 1 2') == 'YES'\nassert solution('1 1 1 3') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 2 2\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"5 4 3 2\") == \"YES\"\nassert solution(\"7 5 4 3\") == \"YES\"\nassert solution(\"8 7 6 5\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output\n\nsample_input = '''\n1 1 1 1\n'''\nexpected_output = '''\nYES\n'''"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 2 2\") == \"NO\"\nassert solution(\"3 2 3 3\") == \"YES\"\nassert solution(\"4 3 4 4\") == \"YES\"\nassert solution(\"5 4 5 5\") == \"YES\"\nassert solution(\"6 5 6 6\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.57\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 96\n    0.0080 1.5417 25.0000\n    0.0080 1.5417 25.0000\n    \"\"\"\n) == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"80.57\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"5 0 0 1 0 1 0 1 0\") == \"2\\n\"\nassert solution(\"6 0 1 1 1 1 1 1 1\") == \"1\\n\"\nassert solution(\"7 0 1 1 0 1 1 1 1\") == \"3\\n\"\nassert solution(\"8 0 1 1 1 1 1 1 1\") == \"4\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"6 0 0 1 1 1 0 0 1\") == \"3\"\nassert solution(\"8 0 0 1 1 1 0 0 1\") == \"4\"\nassert solution(\"10 0 0 1 1 1 0 0 1\") == \"4\"\nassert solution(\"12 0 0 1 1 1 0 0 1\") == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test case failed\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nfor i in range(input()):\n    assert solution(input()) == output"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2', \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\", \"Incorrect output\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n10000 0 5000\") == 1000\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n10000 0 5000\\n3000 0 2000\") == 0\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n10000 0 5000\\n3000 0 2000\\n1500 0 500\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == '1400'\nassert solution('3 2 2\\n0 0 300\\n1000 0 300\\n2000 0 300\\n300 0 150\\n1300 0 150') == '300'\nassert solution('3 2 1\\n0 0 300\\n1000 0 300\\n2000 0 300\\n300 0 150\\n1300 0 150') == '300'\nassert solution('3 2 2\\n0 0 300\\n1000 0 300\\n2000 0 300\\n300 0 150\\n1300 0 150') == '300'\nassert solution('3 2 1\\n0 0 300\\n1000 0 300\\n2000 0 300\\n300 0 150\\n1300 0 150') == '300'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150') == 1400, \"Expected 1400, but got {}.\".format(solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150'))\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'\nassert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 100\n''') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1400\n\nsolution = '''\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1400\", solution(stdin)"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, (sample_input, sample_output) in enumerate(test_cases)"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\\n') == '3907\\n'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\\n\") == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, \"Input and output do not match\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\ncopenhagen\\n\") == \"3907\\n\"\nassert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\nberlin\\n\") == \"5135\\n\"\nassert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\nberlin\\nstockholm\\n\") == \"3907\\n\"\nassert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\nberlin\\nstockholm\\nhelsinki\\n\") == \"5135\\n\"\nassert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\nberlin\\nstockholm\\nhelsinki\\nbrussels\\n\") == \"13290\\n\"\nassert solution(\"10 15\\nsantosh\\ndelhi\\nnewdelhi\\nberlin\\nstockholm\\nhelsinki\\nbrussels\\n\") == \"13290\\n\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruessls helsinki\") == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    10 15\n        stockholm\n        amsterdam\n        london\n        berlin\n        copenhagen\n        oslo\n        helsinki\n        dublin\n        reykjavik\n        brussels\n        oslo stockholm 415\n        stockholm helsinki 396\n        oslo london 1153\n        oslo copenhagen 485\n        stockholm copenhagen 522\n        copenhagen berlin 354\n        copenhagen amsterdam 622\n        helsinki berlin 1107\n        london amsterdam 356\n        berlin amsterdam 575\n        london dublin 463\n        reykjavik dublin 1498\n        reykjavik oslo 1748\n        london brussels 318\n        brussels amsterdam 173\n        stockholm amsterdam\n    ''') == 3907"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3907"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrusesl helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrusesl amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrusesl helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrusesl amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrusesl helsinki\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik os"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruesssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruesssels helsinki\\n\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruesssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruesssels helsinki\\n\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruesssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruesssels helsinki\\n\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, \"Test failed.\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The output is '{output}', but the solution is '{solution(input())}'\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    ''') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nprint(solution(input()))\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    \"\"\"\n) == \"2\\n1\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    1 1\n    \"\"\"\n) == \"1\\n1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    5 4\n    3 1 3 4 2\n    0 5\n    0 9\n    4 5\n    2 1\n    1 1\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n\nclass Solution:\n    def find_best_character(self, existing_characters):\n        max_similarity = float('-inf')\n        best_char = None\n        for char in existing_characters:\n            similarity = 0\n            for i in range(len(char)):\n                if char[i] == '1':\n                    similarity += 1\n            if similarity > max_similarity:\n                max_similarity = similarity\n                best_char = char\n        return best_char\n    \n    def solution(self, stdin: str) -> str:\n        n, k = map(int, stdin.split())\n        existing_characters = []\n        for _ in range(n):\n            existing_characters.append(list(map(int, input().split())))\n        best_char = self.find_best_character(existing_characters)\n        return str(best_char)\n\nprint(Solution().solution(\"3 5\\n01001\\n11100\\n10111\"))"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Your code here\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '00010', 'Expected output: 00010, actual output: {}'.format(solution())"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(None) == \"def solution(stdin: str) -> str:\\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010' # Test case 1\n\nassert solution('4 6\\n10000\\n11100\\n00011') == '01100' # Test case 2\n\nassert solution('4 8\\n11100\\n11111\\n11100') == '00000' # Test case 3\n\nassert solution('4 9\\n11100\\n11111\\n11100\\n00001') == '00001' # Test case 4\n\nassert solution('5 10\\n11111\\n11111\\n11111\\n11111') == '00001' # Test case 5"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n1\\n6 2\\n0 4\\n6 12\\n2\\n6 2\\n0 4\\n6 12\\n\") == \"impossible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\", \"Test failed. The function should return impossible.\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 1\\n6 12\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 10\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 10\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\n6 2\n0 4\n6 12''') == 'possible'\n\nassert solution('''1\n6 2\n1 2\n6 12''') == 'impossible'\n\nassert solution('''1\n6 2\n0 1\n6 12''') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'  # incorrect solution"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\\n\") == \"possible\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 5\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_does\\nS 2!bobby_does stuff_happens\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_does\\nS 2!bobby_does stuff_happens\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_does\\nS 2!bobby_does stuff_happens\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_does\\nS"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE weird_event\\n\") == \"Plot Error\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE it_goes_on_and_on\\nE it_goes_on_and_on\\nE it_goes_on_and_on\\nD 4\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!it_goes_on_and_on it_goes_on_and_on it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\nPlot Error\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    10\n        E business_as_usual\n        E bobby_dies\n        S 1 bobby_died\n        E stuff_happens\n        E jr_does_bad_things\n        S 2!bobby_dies business_as_usual\n        E it_goes_on_and_on\n        D 4\n        S 1!bobby_dies\n        S 2!bobby_dies it_goes_on_and_on\n    ''') == '''\n    Plot Error\n    def solution(stdin: str) -> str:\n        pass\n    '''"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Actual output: {solution(input)}\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test failed for input: {}\".format(input())\nprint(expected_output)  # Print the expected output for the given input"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\"\n) == \"Plot Error\"\nassert solution(\n    \"\"\"10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nE black_hole_explosion\nS 1 black_hole_exploded\nS 2!black_hole_exploded\nE evil_events\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 5\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 5\nS 1 evil_event_happened\nS 2 evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2 evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2 evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2 evil_event_happened\nD 4\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2 evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 4\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2 evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 4\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 4\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 4\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 2\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 4\nS 1!evil_event_happened\nS 2!evil_event_happened\nD 3\nS 1 evil_event_happened\nS"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    \"\"\"\n) == \"Plot Error\\n\"\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    E everything_happened_before_this\n    D 6\n    S 1!bobby_dies it_goes_on_and_on\n    S 2!bobby_dies stuff_happens\n    S 3!bobby_dies jr_does_bad_things\n    S 4!bobby_dies stuff_happens\n    S 5!bobby_dies jr_does_bad_things\n    S 6!bobby_dies business_as_usual\n    E everything_happened_after_this\n    D 6\n    S 7!bobby_dies jr_does_bad_things\n    S 8!bobby_dies jr_does_bad_things\n    S 9!bobby_dies stuff_happens\n    S 10!bobby_dies stuff_happens\n    \"\"\"\n) == \"Plot Error\\n\"\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    E everything_happened_before_this\n    D 6\n    S 1!bobby_dies it_goes_on_and_on\n    S 2!bobby_dies stuff_happens\n    S 3!bobby_dies jr_does_bad_things\n    S 4!bobby_dies stuff_happens\n    S 5!bobby_dies jr_does_bad_things\n    S 6!bobby_dies business_as_usual\n    E everything_happened_after_this\n    D 6\n    S 7!bobby_dies jr_does_bad_things\n    S 8!bobby_dies jr_does_bad_things\n    S 9!bobby_dies stuff_happens\n    S 10!bobby_dies stuff_happens\n    \"\"\"\n) == \"Yes\\n\"\nassert solution(\n    \"\"\"\n    10\n    E business_as_usual\n    E bobby_dies\n    S 1 bobby_died\n    E stuff_happens\n    E jr_does_bad_things\n    S 2!bobby_dies business_as_usual\n    E it_goes_on_and_on\n    D 4\n    S 1!bobby_dies\n    S 2!bobby_dies it_goes_on_and_on\n    E everything_happened_before_this\n    D 6\n    S 1!bobby_dies it_goes_on_and_on\n    S 2!bobby_dies stuff_happens\n    S 3!bobby_dies jr_does_bad_things\n    S 4!bobby_dies stuff_happens\n    S 5!bobby_dies jr_does_bad_things\n    S 6!bobby_dies business_as_usual\n    E everything_happened_after_this\n    D 6\n    S 7!bobby_dies jr_does_bad_things\n    S 8!bobby_dies jr_does_bad_things\n    S 9!bobby_dies stuff_"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == 'exercitation ullamco\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\"\n\nassert solution(\"10 10 10 10\\n\") == \"\"\n\nassert solution(\"20 20 20 20\\n
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n\nprint(solution(\"24 5 8 7\"))\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"Exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nExercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"Exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nExercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco\\nlaboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nDuis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\n\nassert solution(\"16 16 16\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n123456789012345678901234567890\\n12345678901234567890123"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\\\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24 5 8 7\") == \"|------------------------+-+|\\n|exercitation ullamco    |^| |\\n|laboris nisi ut aliquip | | |\\n|ex ea commodo consequat |X| |\\n|Duis aute irure dolor in| | |\\n|reprehenderit in        |v| |\\n+------------------------+-+|\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+\\n|exercitation ullamco    |\\^|\\n|laboris nisi ut aliquip |\\ |\\n|ex ea commodo consequat |\\X|\\n|Duis aute irure dolor in|\\ |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"10 20 30 40\\nThe quick brown fox jumps over the lazy dog\") == \"            +-------------------------------+\\n|                       |The quick brown fox jumps over the lazy dog|\\n+-------------------------------+\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamco    ^\\nlaboris nisi ut aliquip    \\nex ea commodo consequat    X\\nDuis aute irure dolor in    v\\nreprehenderit in    ^v\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible\\n'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('1 4 2\\n2 2 0\\n3 0 1\\n4 1 0') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"possible\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nassert solution(\"4 3\\n0 1 3\") == \"possible\"\nassert solution(\"4 10\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"impossible\"\nassert solution(\"4 5\\n0 1 2\\n1 1 2\\n2 1 2\\n3 1 2\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == 1.00000000\nassert solution(\"1\\n2\") == 1.00000000\nassert solution(\"2 1 1\\n2\") == 1.00000000\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2 1 1\\n1\\n2\\n\") == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1.00000000\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.00000000\\n\", \"Please provide the correct input.\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\n\"\nassert solution(\"1 1 1\\n2 1 2\\n3 2 3\") == \"1.00000000\\n\"\nassert solution(\"5 5 5\\n5\") == \"1.00000000\\n\"\nassert solution(\"1 5 5\\n5 1 2 3 4\") == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '1.00000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    1 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 1\n    \"\"\"\n) == \"1.00000000\\n\"\n\nassert solution"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1\\n3\\n\", \"Expected output: 2\\n1\\n3\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(data) == expected, f\"Input: {data}, expected: {expected}\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Please check your code and input.\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin} and output {expected}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1\\n3\\n\", \"Your solution is not correct.\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == 1\nprint('All test cases pass')"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed: {solution(input_data)}!= {output_data}\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert abs(solution(input()) - 10) < 10**-6\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\", \"The expected output is incorrect.\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"5 3\\n0 1\\n1 2\\n0 2\\n1 3\\n2 3\\n3 3\") == \"10\"\nassert solution(\"4 3\\n0 1\\n1 2\\n0 2\\n1 3\\n2 3\\n3 3\\n3 4\\n4 4\") == \"13\"\nassert solution(\"6 4\\n0 1\\n1 2\\n0 2\\n1 3\\n2 3\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5\\n5 6\\n6 6\\n6 7\\n7 7\\n7 8\\n8 8\\n8 9\\n9 9\\n9 10\\n10 10\\n10 11\\n11 11\\n11 12\\n12 12\\n12 13\\n13 13\\n13 14\\n14 14\\n14 15\\n15 15\\n15 16\\n16 16\\n16 17\\n17 17\\n17 18\\n18 18\\n18 19\\n19 19\\n19 20\") == \"18\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 2\n    0 1\n    1 2\n    0 2\n    ''') == '1'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '14500000001'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"The solution is {solution}, but the expected output is {expected}\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 2) == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"14500000001\", \"Test case failed\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 4\n    3 7\n    1 6\n    2 6\n    \"\"\"\n) == \"0\\n1\\n1\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 4\n    3 7\n    1 6\n    2 6\n    1 1\n    2 2\n    \"\"\"\n) == \"0\\n1\\n1\\n2\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    1 4\n    3 7\n    1 6\n    2 6\n    1 1\n    2 2\n    2 2\n    2 2\n    \"\"\"\n) == \"0\\n1\\n1\\n2\\n2\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    7\n    1 4\n    3 7\n    1 6\n    2 6\n    1 1\n    2 2\n    2 2\n    2 2\n    2 2\n    3 2\n    \"\"\"\n) == \"0\\n1\\n1\\n2\\n2\\n2\\n2\\n3\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\nassert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n8 10\") == \"0\\n1\\n1\\n2\\n3\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution {solution(input())} does not match the expected output {expected_output}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\", \"The solution should return 0, 1, 1, 2.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3100\\n\", \"Your solution is not correct!\"\n\nfrom typing import List"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3100\", \"Incorrect output\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 800\\n\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 800\\n\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}, Output: {output_str}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'\nprint('All tests passed!')"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '5.250000000\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5.250000000\", \"Incorrect Output\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5.250000000\\n\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {input_data}!= {output_data}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.250000000\\n\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.250000000\\n\", \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4\\n', \"Test case 1 incorrect\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output not provided.\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\"\nassert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n5 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == 32.6405451448\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 "
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n    \"\"\"\n) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 32.6405451448, \"The expected output is not correct. Please check the solution.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\"\"\"\n) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"The expected solution is {expected_solution}, but the actual solution is {solution}.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"32.6405451448\", \"Incorrect output\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 32.6405451448, \"The correct output is: 32.6405451448, but it is: {}\".format(solution())"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 32.6405451448\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Solution: {solution(stdin)}!= Output: {output}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed.\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 4 3 2 1\"\nassert solution(\"3\\n5 4 3\") == \"4 3 2\"\nassert solution(\"5\\n4 3 2\") == \"5 4 3 2 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin} should return {expected}, but returned {solution(stdin)}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 3 4 1\\n\", \"Incorrect answer\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 4 3') == '2 3 4 1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '3 5 7 9 1 2 4 6 8'\nassert solution('100\\n1 2 3 4 5 6 7 8 9') == '5 7 9 1 2 4 6 8 3'\nassert solution('1000\\n1 2 3 4 5 6 7 8 9') == '8 1 3 5 7 9 2 4 6'\nassert solution('10000\\n1 2 3 4 5 6 7 8 9') == '7 1 5 9 3 2 8 4 6'\nassert solution('100000\\n1 2 3 4 5 6 7 8 9') == '9 3 5 7 1 2 8 4 6'\nassert solution('1000000\\n1 2 3 4 5 6 7 8 9') == '6 3 7 1 5 9 2 8 2'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 4 3\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 4 3') == '2 3 4 1'\nprint('All tests passed!')"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution('6\\n1 4\\n3 1\\n2 2\\n4 3\\n5 4\\n6 5\\n') == '9.689206761277928\\n9.689206761277928\\n9.689206761277928\\n9.689206761277928\\n9.689206761277928\\n9.689206761277928\\n'\nassert solution('6\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n11.11111111111111\\n'\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == 7.656854249492381\nprint(\"All tests passed!\")"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"6\\n3 2\\n2 1\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"6\\n3 2\\n2 1\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"10 1000 1000\\n3 1 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\\n3 10 20 30 40 50 60 70 80 90 100\\n0 0 1000 2000 3000 4000 5000\\n0 0 2000 3000 4000 5000 6000 7000 8000 9000 10000\") == 7000\nassert solution(\"3 1000 1000\\n3 1 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\\n3 10 20 30 40 50 60 70 80 90 100\\n0 0 1000 2000 3000 4000 5000\\n0 0 2000 3000 4000 5000 6000 7000 8000 9000 10000\") == 7000\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"10 1000 1000\\n3 1 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10\\n3 10 20 30 40 50 60 70 80 90 100\\n0 0 1000 2000 3000 4000 5000\\n0 0 2000 3000 4000 5000 6000 7000 8000 9000 10000\") == 7000"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"4\"\nassert solution(3) == \"5\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\\n2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\\n2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\nassert solution('4 4 4\\n2 1\\n3 3\\n4 4\\n1 2\\n4 0\\n3 1\\n2 0') == 4"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Expected 2, got {0}\".format(solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\"))"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 5, 3) == 2"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution does not match the expected output. \\nExpected: {expected_output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"The output does not match the expected output\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == 9, \"The output is incorrect.\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1') == 9\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"9\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"9\"\nassert solution(\"2 2\") == \"10\"\nassert solution(\"2 3\") == \"15\"\nassert solution(\"2 4\") == \"20\"\nassert solution(\"2 5\") == \"30\"\nassert solution(\"2 6\") == \"40\"\nassert solution(\"2 7\") == \"60\"\nassert solution(\"2 8\") == \"80\"\nassert solution(\"2 9\") == \"90\"\nassert solution(\"3 1\") == \"15\"\nassert solution(\"3 2\") == \"20\"\nassert solution(\"3 3\") == \"25\"\nassert solution(\"3 4\") == \"30\"\nassert solution(\"3 5\") == \"35\"\nassert solution(\"3 6\") == \"40\"\nassert solution(\"3 7\") == \"45\"\nassert solution(\"3 8\") == \"50\"\nassert solution(\"3 9\") == \"55\"\nassert solution(\"4 1\") == \"30\"\nassert solution(\"4 2\") == \"35\"\nassert solution(\"4 3\") == \"40\"\nassert solution(\"4 4\") == \"45\"\nassert solution(\"4 5\") == \"50\"\nassert solution(\"4 6\") == \"55\"\nassert solution(\"4 7\") == \"60\"\nassert solution(\"4 8\") == \"65\"\nassert solution(\"4 9\") == \"70\"\nassert solution(\"5 1\") == \"45\"\nassert solution(\"5 2\") == \"50\"\nassert solution(\"5 3\") == \"55\"\nassert solution(\"5 4\") == \"60\"\nassert solution(\"5 5\") == \"65\"\nassert solution(\"5 6\") == \"70\"\nassert solution(\"5 7\") == \"75\"\nassert solution(\"5 8\") == \"80\"\nassert solution(\"5 9\") == \"85\"\nassert solution(\"6 1\") == \"60\"\nassert solution(\"6 2\") == \"65\"\nassert solution(\"6 3\") == \"70\"\nassert solution(\"6 4\") == \"75\"\nassert solution(\"6 5\") == \"80\"\nassert solution(\"6 6\") == \"85\"\nassert solution(\"6 7\") == \"90\"\nassert solution(\"6 8\") == \"95\"\nassert solution(\"6 9\") == \"100\"\nassert solution(\"7 1\") == \"75\"\nassert solution(\"7 2\") == \"80\"\nassert solution(\"7 3\") == \"85\"\nassert solution(\"7 4\") == \"90\"\nassert solution(\"7 5\") == \"95\"\nassert solution(\"7 6\") == \"100\"\nassert solution(\"7 7\") == \"105\"\nassert solution(\"7 8\") == \"110\"\nassert solution(\"7 9\") == \"115\"\nassert solution(\"8 1\") == \"90\"\nassert solution(\"8 2\") == \"95\"\nassert solution(\"8 3\") == \"100\"\nassert solution(\"8 4\") == \"105\"\nassert solution(\"8 5\") == \"110\"\nassert solution(\"8 6\") == \"115\"\nassert solution(\"8 7\") == \"120\"\nassert solution(\"8 8\") == \"125\"\nassert solution(\"8 9\") == \"130\"\nassert solution(\"9 1\") == \"105\"\nassert solution(\"9 2\") == \"110\"\nassert solution(\"9 3\") == \"115\"\nassert solution(\"9 4\") == \"120\"\nassert solution(\"9 5\") == \"125\"\nassert solution(\"9 6\") == \"130\"\nassert solution(\"9 7\") == \"135\"\nassert solution(\"9 8\") == \"140\"\nassert solution(\"9 9\") == \"145\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output {expected}, got {solution(stdin)}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"12\\n\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"12\" # Test case 1\nassert solution(1) == \"1\" # Test case 2\nassert solution(10) == \"10\" # Test case 3\nassert solution(20) == \"20\" # Test case 4\nassert solution(30) == \"30\" # Test case 5\nassert solution(40) == \"40\" # Test case 6\nassert solution(50) == \"40\" # Test case 7\nassert solution(60) == \"60\" # Test case 8\nassert solution(70) == \"70\" # Test case 9\nassert solution(80) == \"80\" # Test case 10\nassert solution(90) == \"90\" # Test case 11\nassert solution(100) == \"100\" # Test case 12"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '12\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12\\n') == '12'\nassert solution('1\\n2\\n3\\n4\\n') == 'no solution'\nassert solution('2\\n3\\n4\\n5\\n6\\n') == 'no solution'\nassert solution('5\\n7\\n12\\n') == 'no solution'\nassert solution('2\\n3\\n5\\n7\\n') == 'no solution'\nassert solution('1\\n3\\n5\\n7\\n') == 'no solution'\nassert solution('5\\n7\\n13\\n') == 'no solution'\nassert solution('5\\n12\\n13\\n') == 'no solution'\nassert solution('5\\n12\\n13\\n14\\n') == 'no solution'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '100'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '12\\n', \"Solution is incorrect.\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"10000\\n\") == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, \"Test failed for solution\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\\n000\\n001\\n1000\\n11011011\\n11011011\\n\") == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 11\nassert solution() == 111\nassert solution() == -1\nassert solution() == '11'\nassert solution() == '111'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == 11\nassert solution(\"11\\n00\\n01\\n10\\n110\\n111\") == 11\nassert solution(\"00\\n01\\n10\\n110\\n111\") == 11\nassert solution(\"11\\n00\\n01\\n10\\n110\\n111\") == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00') == -1\nassert solution('01') == -1\nassert solution('10') == -1\nassert solution('110') == -1\nassert solution('111') == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"0000\\n0001\\n0010\\n0011\\n0100\\n0101\\n0110\\n0111\\n1000\\n1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\") == \"11\"\nassert solution(\"00000\\n00001\\n00010\\n00011\\n00100\\n00101\\n00110\\n00111\\n01000\\n01001\\n01010\\n01011\\n01100\\n01101\\n01110\\n01111\\n10000\\n10001\\n10010\\n10011\\n10100\\n10101\\n10110\\n10111\\n11000\\n11001\\n11010\\n11011\\n11100\\n11101\\n11110\\n11111\") == \"11\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"5\n00\n01\n10\n110\n111\") == \"11\"\nassert solution(r\"10\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111') == '11'\nassert solution('101\\n110\\n111\\n100\\n001') == '110'\nassert solution
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test cases\\n# assert solution('Sample Input') == 'Sample Output'\\n# assert solution('Sample Input2') == 'Sample Output2'\\n# assert solution('Sample Input3') == 'Sample Output3'\\n# assert solution('Sample Input4') == 'Sample Output4'\\n# assert solution('Sample Input5') == 'Sample Output5'\"\nprint(assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test cases\\n# assert solution('Sample Input') == 'Sample Output'\\n# assert solution('Sample Input2') == 'Sample Output2'\\n# assert solution('Sample Input3') == 'Sample Output3'\\n# assert solution('Sample Input4') == 'Sample Output4'\\n# assert solution('Sample Input5') == 'Sample Output5'\")"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"100 250 320\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"100 250 320\", \"Test failed\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"100 250 320\\n\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100 250 320\\n\", \"Test failed\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}'\\nGot: '{solution(stdin)}'\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(50, 100) == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"10 10\") == \"0 0 0 0 0 0 0 0 0\\n\"\nassert solution(\"50 50\") == \"1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"5 100\") == \"1 1 1 1 1 1 1 1 1\\n\"\nassert solution(\"50 150\") == \"15 15 15 15 15 15 15 15 15\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(50, 100) == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('5 10') == '4 2 7 3'\nassert solution('10 10') == '1 3 6 4 8 5 9'\nassert solution('10 15') == '1 3 6 4 8 5 9 11'\nassert solution('100 100') == '1 1 1 1 1 1 1 1 1'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"1 1000000\") == \"999999999999999999\"\nassert solution(\"1000000 9999999\") == \"0\"\nassert solution(\"9 2000000000000000\") == \"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"400 500\") == \"2 16 8 4 2 4 4 4 4\"\nassert solution(\"1000 2000\") == \"5 14 14 14 14 14 14 14 14\"\nassert solution(\"1000 1999\") == \"1 15 15 15 15 15 15 15 15\"\nassert solution(\"10000 10000\") == \"11 11 11 11 11 11 11 11 11\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"100 50\") == \"7 9 6 3 8 10 2 11 2\\n\"\nassert solution(\"500 1000\") == \"11 13 10 7 14 12 5 15 2\\n\"\nassert solution(\"2 10\") == \"3 1 2 3 1 2 1\\n\"\nassert solution(\"10 2\") == \"1 2 4 8 16 32\\n\"\nassert solution(\"100 1000\") == \"11 13 10 7 14 12 5 15 2\\n\"\nassert solution(\"1000 10000\") == \"17 19 16 13 18 14 11 21 24\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 40.0\nassert solution() == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 40.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == 40.0000000000\nprint(\"All tests passed successfully\")\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n12 1\\n1 5\\n2 10\\n4\") == 31.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 100.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n') == 40.0000000000\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n\") == 40.0\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n\") == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    4\n    0 0\n    0 14\n    15 14\n    15 0\n    \"\"\") == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"40.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\\n\"\nassert solution(\"6\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"50.0000000000\\n\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"20.0000000000\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\\n\"  # solution should return correct output"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2 1 3\\n') == '1\\n1\\n'\nassert solution('1\\n1\\n') == '1\\n1\\n'\nassert solution('1\\n5\\n1 2 3 4 5\\n') == '1\\n1\\n'\nassert solution('1\\n4\\n1 2 3 4\\n') == '1\\n1\\n'\nassert solution('1\\n2\\n1 2\\n') == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '''\n1\n1\n'''\n\nassert solution('''\n2\n5\n1 2 3 4 5\n3\n10 9 8 7 6\n''') == '''\n2\n2 3\n'''\n\nassert solution('''\n3\n6\n5 1 2 3 4 5\n3\n8 11 14 13 12 10\n''') == '''\n2\n2 3\n'''\n\nassert solution('''\n4\n7\n1 2 3 4 5 6 7\n3\n16 19 22 25 24 23 20 17\n''') == '''\n2\n2 3\n'''\n\nassert solution('''\n5\n8\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n3\n25 22 20 18 16 14 12 10 8 6 4 2 0 1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49 51 53 55 57 59 61 63 65 67 69 71 73 75 77 79 81 83 85 87 89 91 93 95 97 99\n''') == '''\n2\n2 3\n'''"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"199 162\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"199 162\\n\", \"Your code is incorrect.\"\nprint(\"Your code is correct.\")"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"321.95 2.25 4.50\") == \"0 0\"\nassert solution(\"412.50 2.87 3.89\") == \"0 0\"\nassert solution(\"332.35 2.00 4.25\") == \"0 0\"\nassert solution(\"603.80 1.59 2.91\") == \"0 0\"\nassert solution(\"484.20 2.51 3.56\") == \"0 0\"\nassert solution(\"573.50 1.91 3.16\") == \"0 0\"\nassert solution(\"564.85 2.28 3.67\") == \"0 0\"\nassert solution(\"471.55 2.69 3.89\") == \"0 0\"\nassert solution(\"635.20 2.40 3.57\") == \"0 0\"\nassert solution(\"519.90 2.82 4.02\") == \"0 0\"\nassert solution(\"656.95 1.89 2.76\") == \"0 0\"\nassert solution(\"424.20 2.62 3.24\") == \"0 0\"\nassert solution(\"348.25 2.19 3.73\") == \"0 0\"\nassert solution(\"541.20 2.06 3.90\") == \"0 0\"\nassert solution(\"435.25 2.74 3.65\") == \"0 0\"\nassert solution(\"665.25 2.53 3.95\") == \"0 0\"\nassert solution(\"408.70 2.46 3.52\") == \"0 0\"\nassert solution(\"467.15 2.58 3.37\") == \"0 0\"\nassert solution(\"686.80 1.79 2.36\") == \"0 0\"\nassert solution(\"374.50 2.13 3.51\") == \"0 0\"\nassert solution(\"419.20 2.92 3.84\") == \"0 0\"\nassert solution(\"652.75 2.26 3.79\") == \"0 0\"\nassert solution(\"488.00 2.61 3.66\") == \"0 0\"\nassert solution(\"515.40 2.50 3.85\") == \"0 0\"\nassert solution(\"522.30 1.76 2.91\") == \"0 0\"\nassert solution(\"670.00 2.20 3.63\" == \"0 0\"\nassert solution(\"492.50 2.86 3.51\") == \"0 0\"\nassert solution(\"515.80 2.14 3.42\") == \"0 0\"\nassert solution(\"609.75 1.98 3.11\") == \"0 0\"\nassert solution(\"476.70 2.40 3.30\") == \"0 0\"\nassert solution(\"672.15 2.31 3.82\") == \"0 0\"\nassert solution(\"584.10 2.16 3.88\") == \"0 0\"\nassert solution(\"553.30 2.57 3.99\") == \"0 0\"\nassert solution(\"479.05 2.83 3.80\") == \"0 0\"\nassert solution(\"446.60 2.82 3.65\") == \"0 0\"\nassert solution(\"568.50 1.93 3.15\") == \"0 0\"\nassert solution(\"431.90 2.76 3.61\") == \"0"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"555.55 0.99 2.22\") == \"0 0\"\nassert solution(\"0 0 0\") == \"0 0\"\nassert solution(\"1000 1000 1000\") == \"0 0\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '199 162\\n'\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == 16"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == 16\nassert solution('5 3\\n3 2 1\\n1 3 2\\n2 1 1\\n3 3 0') == 6"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 1 4\\n', 'Sample Output is incorrect.'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2 1 4\\n'\nassert solution(stdin) == '1 1 1\\n'\nassert solution(stdin) == '5 25 7\\n'\nassert solution(stdin) == '8 7 6\\n'\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\", \"The function is not correct.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\", \"Test case 1 failed\"\nassert solution(\"2\\nE 1\") == \"2 1 1\", \"Test case 2 failed\"\nassert solution(\"3\\nO 6\\nE 10\\nI 3\\nO 9\") == \"1 2 3\", \"Test case 3 failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"O 4\\n\") == \"2 1 4\\n\"\nassert solution(\"E 2\\n\") == \"1 2 3\\n\"\nassert solution(\"I 15\\n\") == \"4 8 16\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"2 1 4\\n\", \"The output should be 2 1 4.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2 1 4\\n\", \"The output of solution function should be '2 1 4'.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2 1 4\", \"Your solution is incorrect.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2 1 4\\n', \"Invalid output\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\", \"Please implement the solution correctly\"\nassert solution(stdin) == \"4\", \"Please implement the solution correctly\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\n\nassert solution(\"2 3 1 4 6\\n0 1 2 3 5\\n0 2 3 4 6\\n0 3 4 5 7\\n0 4 5 6 8\\n\") == \"0\\n\"\n\nassert solution(\"1 2 3 4 5\\n0 1 2 3 4\\n1 2 3 4 5\\n0 1 2 3 4\\n1 2 3 4 5\\n\") == \"0\\n\"\n\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 8) == 4\nassert solution(5, 1) == 0\nassert solution(5, 12) == 3\nassert solution(5, 9) == 2\nassert solution(1, 6) == 0\nassert solution(2, 11) == 3"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4, \"The answer is not correct.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'\nassert solution('5 7\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '1\\n'\nassert solution('5 9\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4\\n'\nassert solution('5 11\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '1\\n'\nassert solution('5 15\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '1\\n'\nassert solution('1 6 4 10\\n2 11 7 14\\n5 5 9 10\\n5 1 12 4\\n5 1 12 4') == '4\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"-99.99 99.99 9999.99\n99 9 999 9999\"\"\"\n) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''-99.99 99.99 9999.99\n99 9 999 9999''') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9.585073\\n\", \"Test failed\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\"\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\"\nassert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''-99.99 99.99 9999.99\n99 9 999 9999''') == '9.585073'\nassert solution('''99 9 999 9999\n9 99 9 99 9''') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12.74,127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12.74 127.83\", \"Your solution is incorrect.\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '12.74'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10\\n') == '12.74 127.83'\nassert solution('10 10\\n1000000000\\n') == 'impossible'\nassert solution('20 30\\n1 10 10 1000000000\\n') == 'impossible'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2\n110\n6''') == '0116\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0116', 'Test failed'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    110\n    6\n''') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\", \"Test 1 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0116', 'The expected output is 0116 but got: {}'.format(solution(stdin))"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n8 3\n4 4 4\n''') == ['0', '2', '4']\n\nassert solution('''\n9 5\n2 3 4 5 6\n''') == ['0', '3', '4']\n\nassert solution('''\n10 5\n4 4 4 4 4\n''') == ['0', '4', '8']"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n4 4 4\") == [\"0\", \"2\", \"4\"]\nassert solution(\"10 5\\n3 2 4 2 3\") == [\"1\", \"5\", \"7\", \"9\", \"11\"]"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"The Drinking Musicians\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for solution: {solution(sample_input)}\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\\n\"\nassert solution(\"10 3\\n4 4 4\") == \"0 2 4\\n\"\nassert solution(\"5 3\\n4 4 4\") == \"0 1 2\\n\"\nassert solution(\"10 4\\n4 4 4\") == \"0 1 2\\n\"\nassert solution(\"10 4\\n3 4 4\") == \"0 1 2\\n\"\nassert solution(\"5 4\\n3 4 4\") == \"0 1 2\\n\"\nassert solution(\"8 4\\n4 4 4\") == \"0 1 2\\n\"\nassert solution(\"8 4\\n3 4 4\") == \"0 1 2\\n\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\nr\"\"\"\n8 3\n4 4 4\n\"\"\") == \"\"\"\n0 2 4\n\"\"\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '0 2 4'\nprint('All tests passed!')"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input().strip())) == \"impossible\"\nassert solution(str(input().strip())) == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 2\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n3 2\\n3 2 3 2\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"7\\n2 2\\n3 1 2 3 4 5 6 7\\n1 2\\n2 1 3 4 5\\n3 1 2 4 5\\n4 1 2 4 5\\n5 1 2 4 5\\n6 1 2 4 5\\n7 1 2 4 5\\n\") == \"possible\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed: {solution(sample_input)}!= {expected_output}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n') == 'impossible\\n'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n6\\n2 4 1 5\\n2 4 1 6\\n2 3 1 4 2\\n') == 'possible\\n'\nassert solution('5\\n2\\n1\\n4 2 5\\n3 1 2\\n') == 'impossible\\n'\nassert solution('2\\n1\\n') == 'impossible\\n'\nassert solution('1\\n2\\n') == 'impossible\\n'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"5\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4\n    7\n    2 2 4\n    3 1 3 5\n    1 2\n    2 1 5\n    4 2 6 4 7\n    2 5 7\n    2 6 5\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    5\n    2\n    1 2\n    3 4\n    4 1\n    5 1 4\n    6 3 4\n    \"\"\"\n) == \"definitely\"\n\nassert solution(\n    \"\"\"\n    7\n    1\n    2 3 4 5\n    6 7 8 9\n    10 11 12 13 14\n    15 16 17 18 19\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    6\n    2\n    1 2\n    3 4\n    4 1\n    5 1 4\n    6 3 4\n    7 3 4 5\n    8 4 5 6\n    9 5 6 7\n    10 6 7 8\n    11 7 8 9\n    12 8 9 10\n    13 9 10 11\n    14 10 11 12\n    15 11 12 13\n    16 12 13 14\n    \"\"\"\n) == \"definitely\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4.00000\nassert solution() == 0.000000001\nassert solution() == 0.00000000001"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\nassert solution(\"2\\n0 0\\n0 10\\n2\\n100 100\\n100 100\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000\\n'\nassert solution('2\\n0 0\\n0 10\\n3\\n4 10\\n4 0') == 'Impossible\\n'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"2\n    0 0\n    0 10\n    2\n    4 10\n    4 0\"\"\"\n) == \"4.00000\"\nassert solution(\n    \"\"\"3\n    0 0\n    0 10\n    2\n    4 10\n    4 0\n    5\n    6 10\n    6 0\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"4\n    0 0\n    0 10\n    2\n    4 10\n    4 0\n    5\n    6 10\n    6 0\n    7\n    8 10\n    8 0\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0\n0 10\n2\n4 10\n4 0''') == '4.00000'\n\nfrom typing import List"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.00000\nassert solution(\"1\\n1 1\\n1 2\\n2\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"2\\n1 1\\n1 2\\n2\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"2\\n1 1\\n1 2\\n2\\n3 3\\n3 4\\n5 5\\n5 6\") == 1.00000\nassert solution(\"2\\n1 1\\n1 2\\n2\\n3 3\\n3 4\\n5 5\\n5 6\\n7 7\\n7 8\") == 1.00000\nassert solution(\"2\\n1 1\\n1 2\\n2\\n3 3\\n3 4\\n5 5\\n5 6\\n7 7\\n7 8\\n9 9\\n9 10\") == 1.00000\nassert solution(\"2\\n1 1\\n1 2\\n2\\n3 3\\n3 4\\n5 5\\n5 6\\n7 7\\n7 8\\n9 9\\n9 10\\nA 10\\nB 11\") == 1.00000\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4.00000\\nimpossible\\n\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"4.00000\\nimpossible\\n\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4.00000\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Test 1\"\nassert solution(\"6 5 2\\n1 1\\n3 2\\n5 3\\n1 4\\n2 5\") == 0, \"Test 2\"\nassert solution(\"4 4 2\\n1 1\\n2 1\\n2 2\\n1 3\") == 1, \"Test 3\"\nassert solution(\"1 1 2\\n3 2\\n4 3\\n5 4\\n5 5\\n1 2\") == 1, \"Test 4\"\nassert solution(\"5 1 2\\n2 1\\n4 3\\n5 4\\n6 5\\n5 6\") == 0, \"Test 5\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1\n\nassert solution(\"6 3 7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"10 10 20\\n1 1\\n3 3\\n5 5\\n7 7\\n9 9\\n\") == 1\n\nassert solution(\"3 5 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"10 3 2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 1\n\nassert solution(\"3 2 2\\n1 1\\n1 3\\n2 1\\n2 3\\n\") == 1\n\nassert solution(\"3 2 1\\n1 1\\n1 3\\n2 1\\n2 3\\n\") == 1\n\nassert solution(\"3 10 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0\n\nassert solution(\"3 10 9\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '1'\nassert solution(open('input2.txt').read()) == '1'\nassert solution(open('input3.txt').read()) == '1'\nassert solution(open('input4.txt').read()) == '0'\nassert solution(open('input5.txt').read()) == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"1 1\\n2 1\\n3 1\\n3 2\\n4 1\") == 0\nassert solution(\"1 1\\n2 1\\n3 2\\n4 2\\n5 1\") == 0\nassert solution(\"1 1\\n2 1\\n3 2\\n4 3\\n5 2\") == 1\nassert solution(\"1 1\\n2 1\\n3 2\\n4 4\\n5 3\") == 0\nassert solution(\"2 1\\n2 2\\n3 1\\n3 2\\n4 1\") == 1\nassert solution(\"2 1\\n2 3\\n3 1\\n3 2\\n4 1\") == 1\nassert solution(\"2 1\\n2 4\\n3 1\\n3 2\\n4 2\") == 1\nassert solution(\"2 1\\n2 5\\n3 1\\n3 2\\n4 3\") == 0\nassert solution(\"2 1\\n2 6\\n3 1\\n3 2\\n4 4\") == 0\nassert solution(\"2 1\\n2 7\\n3 1\\n3 2\\n4 5\") == 0\nassert solution(\"2 1\\n2 8\\n3 1\\n3 2\\n4 6\") == 0\nassert solution(\"2 1\\n2 9\\n3 1\\n3 2\\n4 7\") == 0\nassert solution(\"2 1\\n2 10\\n3 1\\n3 2\\n4 8\") == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4\") == 0\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 3\") == 0\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 1\") == 0\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 0\") == 0\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 -1\") == 0\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 6\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Sample Input does not produce the expected output.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"1 1\\n1 3\\n2 2\\n3 1\\n3 3\\n1 1\") == 0\nassert solution(\"5 5\\n2 2\\n1 2\\n1 3\\n3 2\\n3 3\\n4 3\\n5 4\") == 1\nassert solution(\"5 1\\n3 1\\n2 2\\n1 3\\n1 4\\n2 3\\n3 2\\n4 1\\n5 2\\n5 3\") == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\n\nassert solution(\"4 4 3\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Incorrect output for sample input\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 10\\n0 1\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\") == \"5 3\\n1 2\\n2 0\\n3 4\\n4 5\\nimpossible\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4'\nassert solution('5 10\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 2\\n0 3\\n0 4\\n1 4\\n1 5\\n2 5\\n3 5\\n4 5\\n5 5\\n6 5\\n7 5\\n8 5\\n9 5\\n10 5\\n11 5\\n12 5\\n13 5\\n14 5\\n15 5\\n16 5\\n17 5\\n18 5\\n19 5\\n20 5\\n21 5\\n22 5\\n23 5\\n24 5\\n25 5\\n26 5\\n27 5\\n28 5\\n29 5\\n30 5\\n31 5\\n32 5\\n33 5\\n34 5\\n35 5\\n36 5\\n37 5\\n38 5\\n39 5\\n40 5\\n41 5\\n42 5\\n43 5\\n44 5\\n45 5\\n46 5\\n47 5\\n48 5\\n49 5\\n50 5\\n51 5\\n52 5\\n53 5\\n54 5\\n55 5\\n56 5\\n57 5\\n58 5\\n59 5\\n60 5\\n61 5\\n62 5\\n63 5\\n64 5\\n65 5\\n66 5\\n67 5\\n68 5\\n69 5\\n70 5\\n71 5\\n72 5\\n73 5\\n74 5\\n75 5\\n76 5\\n77 5\\n78 5\\n79 5\\n80 5\\n81 5\\n82 5\\n83 5\\n84 5\\n85 5\\n86 5\\n87 5\\n88 5\\n89 5\\n90 5\\n91 5\\n92 5\\n93 5\\n94 5\\n95 5\\n96 5\\n97 5\\n98 5\\n99 5\\n100 5\\n101 5\\n102 5\\n103 5\\n104 5\\n105 5\\n106 5\\n107 5\\n108 5\\n109 5\\n110 5\\n111 5\\n112 5\\n113 5\\n114 5\\n115 5\\n116 5\\n117 5\\n118 5\\n119 5\\n120 5\\n121 5\\n122 5\\n123 5\\n124 5\\n125 5\\n126 5\\n127 5\\n128 5\\n129 5\\n130 5\\n131 5\\n132 5\\n133 5\\n134 5\\n135 5\\n136 5\\n137 5\\n138 5\\n139 5\\n140 5\\n141 5\\n142 5\\n143 5\\n144 5\\n145 5\\n146 5\\"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 0\\n2 4'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 6\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 6\\n6 5\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    ''') == '''\n    5 3\n    1 0\n    2 4\n    ''', '''\nIt is not possible to match up all translators such that each pair speaks a common language.\n'''"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"10 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n11 10\\n12 11\\n13 12\\n14 13\\n15 14\\n16 15\\n17 16\\n18 17\\n19 18\\n20 19\\n21 20\\n22 21\\n23 22\\n24 23\\n25 24\\n26 25\\n27 26\\n28 27\\n29 28\\n30 29\\n31 30\\n32 31\\n33 32\\n34 33\\n35 34\\n36 35\\n37 36\\n38 37\\n39 38\\n40 39\\n41 40\\n42 41\\n43 42\\n44 43\\n45 44\\n46 45\\n47 46\\n48 47\\n49 48\\n50 49\\n51 50\\n52 51\\n53 52\\n54 53\\n55 54\\n56 55\\n57 56\\n58 57\\n59 58\\n60 59\\n61 60\\n62 61\\n63 62\\n64 63\\n65 64\\n66 65\\n67 66\\n68 67\\n69 68\\n70 69\\n71 70\\n72 71\\n73 72\\n74 73\\n75 74\\n76 75\\n77 76\\n78 77\\n79 78\\n80 79\\n81 80\\n82 81\\n83 82\\n84 83\\n85 84\\n86 85\\n87 86\\n88 87\\n89 88\\n90 89\\n91 90\\n92 91\\n93 92\\n94 93\\n95 94\\n96 95\\n97 96\\n98 97\\n99 98\\n100 99\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt')) == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution(open('sample_input.txt')) == '5 3\\n1 0\\n2 4\\nimpossible'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and expected output {output}.\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n1 2\\n\", \"Incorrect solution.\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"2\n1 2\n\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1 2\\n\"\nassert solution(open(\"input_1.txt\", \"r\")) == \"3\\n1 2 3\\n\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"4\\n1 2 3 4\\n\"\nassert solution(open(\"input_3.txt\", \"r\")) == \"5\\n1 2 3 4 5\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()}!= {output()}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Input {input_str} does not match expected output {expected_output}\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1'\nassert solution('3 5\\n3 4 6 8 9 10') == '2'\nassert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1'\nassert solution('3 5\\n3 4 6 8 9 10') == '2'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output: 1\\n\", \"Expected output: 1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == 'Output: 1\\n', f'Expected \"Output: 1\", but got \"{solution(stdin: str)}\".'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed with input {sample_input} and output {sample_output}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    7 5\n    ACDBB\n    5 6\n    8 9\n    4 13\n    1 10\n    7 4\n    \"\"\") == '7 4'\n\nassert solution(\"\"\"\n    50000 100000\n    100000 200000\n    200000 300000\n    300000 400000\n    400000 500000\n    \"\"\") == '50000 100000'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '7 4', \"Output Barica's final coordinates is not as expected.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('test_input.txt', 'r')) == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000000000 1000000000\\nACDBB\\n1000000000 1000000000\\nACDBB\\n1000000000 1000000000\\nACDBB\") == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {case+1} failed\"\nfor case in range(1, 101):\n    assert solution(input()) == expected_output, f\"Test Case {case+1} failed\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: \\nExpected: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''\n\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A > 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''\n\nassert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A >= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"5 PRINT 2\") == \"2\"\nassert solution(\"10 PRINT \\\"Hello World\\\"\") == \"\\\"Hello World\\\"\"\nassert solution(\"10 PRINT \\\"Hello \\\"A\\\"\\\"\".replace(\"A\", \"1\")) == \"\\\"Hello 1\\\"\"\nassert solution(\"20 LET X = 5\\n20 PRINT \\\"HELLO THERE \\\"\\n20 PRINTLN X\") == \"HELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\"\nassert solution(\"20 LET X = 5\\n20 PRINT \\\"HELLO THERE \\\"\\n20 PRINTLN X\\n10 PRINT \\\"world\\\"\") == \"HELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\\nHELLO THERE 5\\nworld\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"DEF solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\nDEF solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(10) == 31\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Expected output: 3\"\nassert solution(0) == 2, \"Expected output: 2\"\nassert solution(1) == 2, \"Expected output: 2\"\nassert solution(2) == 3, \"Expected output: 3\"\nassert solution(3) == 12, \"Expected output: 12\"\nassert solution(4) == 50, \"Expected output: 50\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Test Failed\" # Correct Answer"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n3 0 1\\n0 1\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\"\nassert solution(\"10\\n3 2 4\") == \"24\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3  # Solution for difficulty 3\nassert solution(0) == 0  # Solution for difficulty 0\nassert solution(1) == 1  # Solution for difficulty 1\nassert solution(2) == 0  # Solution for difficulty 2"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(0) == 1\nassert solution(1) == 2\nassert solution(2) == 6\nassert solution(3) == 12"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 3\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 7\nassert solution(7) == 14\nassert solution(8) == 22\nassert solution(9) == 36\nassert solution(10) == 68\nassert solution(11) == 138\nassert solution(12) == 252\nassert solution(13) == 510\nassert solution(14) == 1022\nassert solution(15) == 2044\nassert solution(16) == 4088\nassert solution(17) == 8176\nassert solution(18) == 16348\nassert solution(19) == 32772\nassert solution(20) == 65544\nassert solution(21) == 131088\nassert solution(22) == 262176\nassert solution(23) == 524352\nassert solution(24) == 1048704\nassert solution(25) == 2097152\nassert solution(26) == 4194304\nassert solution(27) == 8388608\nassert solution(28) == 16777216\nassert solution(29) == 33554432\nassert solution(30) == 67108864\nassert solution(31) == 134217728\nassert solution(32) == 268435456\nassert solution(33) == 536870912\nassert solution(34) == 1073741824\nassert solution(35) == 2147483648\nassert solution(36) == 4294967296\nassert solution(37) == 8589934592\nassert solution(38) == 17179869184\nassert solution(39) == 34359738368\nassert solution(40) == 68719476736\nassert solution(41) == 137438953472\nassert solution(42) == 274877906944\nassert solution(43) == 549755813888\nassert solution(44) == 1099511627776\nassert solution(45) == 2199023255552\nassert solution(46) == 4398046511104\nassert solution(47) == 8796093022208\nassert solution(48) == 17592186044416\nassert solution(49) == 35184372088832\nassert solution(50) == 70368744177664\nassert solution(51) == 140737488355328\nassert solution(52) == 281474976710656\nassert solution(53) == 562949953421312\nassert solution(54) == 1125899906842624\nassert solution(55) == 2251799813685248\nassert solution(56) == 4503599627370496\nassert solution(57) == 9007199254740992\nassert solution(58) == 18014398509481984\nassert solution(59) == 3602879"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\nimpossible\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"LRRRRRRLL\" # expected output\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 3\\n2 5\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 4\") == \"impossible\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2\n    2 5\n    2 3\n    1 3\n    3 5\n    4 5\n    3 4\n    1 3\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    1 3\n    2 5\n    3 4\n    4 5\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"impossible\"\n\nsolution = \"\"\"\nLRRRRRRL\nLRLRRLRR\n\"\"\"\n\nassert solution(solution) == \"LRLRRLRR\"\n\nsolution = \"\"\"\nLRRRRRRL\nLRLRLRRR\n\"\"\"\n\nassert solution(solution) == \"LRRRRRRL\"\n\nsolution = \"\"\"\nLRRRRRRL\nLRLRRRLR\n\"\"\"\n\nassert solution(solution) == \"LRRRRRRL\"\n\nsolution = \"\"\"\nLRRRRRRL\nLRLRRRRL\n\"\"\"\n\nassert solution(solution) == \"LRRRRRRL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"LLRRRRLL\"\nassert solution(5) == \"LLRRRRLL\"\nassert solution(5) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"impossible\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"impossible\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1\\n2011\\n1009 2011\\n1017\") == \"2\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2009\\n2011\") == \"1\\n2011\"\nassert solution(\"1\\n2011\\n1009 2011\\n1017 2009\") == \"3\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\") == \"Output\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1018 2012\\n1009 2013\\n1018 2013\") == \"2\\n2011\\n2012\\n2013\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1018 2012\\n1009 2013\\n1018 2013\\n1009 2014\\n1018 2014\\n1009 2015\\n1018 2015\\n1009 2016\\n1018 2016\") == \"2\\n2011\\n2012\\n2013\\n2014\\n2015\\n2016\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1018 2012\\n1009 2013\\n1018 2013\\n1009 2014\\n1018 2014\\n1009 2015\\n1018 2015\\n1009 2016\\n1018 2016\\n1009 2017\\n1018 2017\") == \"2\\n2011\\n2012\\n2013\\n2014\\n2015\\n2016\\n2017\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1018 2012\\n1009 2013\\n1018 2013\\n1009 2014\\n1018 2014\\n1009 2015\\n1018 2015\\n1009 2016\\n1018 2016\\n1009 2017\\n1018 2017\\n1009 2018\\n1018 2018\") == \"2\\n2011\\n2012\\n2013\\n2014\\n2015\\n2016\\n2017\\n2018\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2012\\n1018 2012\\n1009 2013\\n1018 2013\\n1009 2014\\n1018 2014\\n1009 2015\\n1018 2015\\n1009 2016\\n1018 2016\\n1009 2017\\n1018 2017\\n1009 2018\\n1018 2018\\n1009 2019\\n1018 2019\") == \"2\\n2011\\n2012\\n2013\\n2014\\n2015\\n2016\\n2017\\n2018\\n2019\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 20"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1\\n2011'\nassert solution(input()) == '2\\n2011 1009 1017'\nassert solution(input()) == '3\\n1009 1017 2011'\nassert solution(input()) == '4\\n2011 2011 1009 1017'\nassert solution(input()) == '5\\n2011 1009 1017 2011'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1\nassert solution() == 2011"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"3\\n1009 2011\\n1017 2011\\n1025 2011\") == \"1\\n2011\\n3011\\n\"\nassert solution(\"4\\n1009 2011\\n1017 2011\\n1025 2011\\n1027 2011\") == \"2\\n2011\\n3011\\n5011\\n\"\nassert solution(\"5\\n1009 2011\\n1017 2011\\n1025 2011\\n1027 2011\\n1029 2011\") == \"3\\n2011\\n3011\\n5011\\n7011\\n9011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1\\n2011'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"2\\n1009 2011\\n1017 2011\"\n) == \"1\\n2011\"\n\nassert solution(\n    \"3\\n1009 2011\\n1017 2011\\n1025 2011\"\n) == \"2\\n1009 1017\"\n\nassert solution(\n    \"4\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\"\n) == \"3\\n1009 1017 1025\"\n\nassert solution(\n    \"5\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\"\n) == \"4\\n1009 1017 1025 1033\"\n\nassert solution(\n    \"6\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\\n1049 2011\"\n) == \"5\\n1009 1017 1025 1033 1041\"\n\nassert solution(\n    \"7\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\\n1049 2011\\n1057 2011\"\n) == \"6\\n1009 1017 1025 1033 1041 1049\"\n\nassert solution(\n    \"8\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\\n1049 2011\\n1057 2011\\n1065 2011\"\n) == \"7\\n1009 1017 1025 1033 1041 1049 1057\"\n\nassert solution(\n    \"9\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\\n1049 2011\\n1057 2011\\n1065 2011\\n1073 2011\"\n) == \"8\\n1009 1017 1025 1033 1041 1049 1057 1065\"\n\nassert solution(\n    \"10\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011\\n1049 2011\\n1057 2011\\n1065 2011\\n1073 2011\\n1081 2011\"\n) == \"9\\n1009 1017 1025 1033 1041 1049 1057 1065 1073\"\n\nassert solution(\n    \"11\\n1009 2011\\n1017 2011\\n1025 2011\\n1033 2011\\n1041 2011"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['0 3']  # Testcase 1"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"Incorrect output. Expected '0 3\\n', but got '{}'.\".format(solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3'))\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n\"\"\"\n) == \"0 3\\n\"\n\nassert solution(\n    \"\"\"\n5 5\n0 1 100\n1 1 50\n1 2 25\n1 3 25\n2 3 50\n3 4 50\n4 0 25\n0 4\n\"\"\"\n) == \"2 4\\n\"\n\nassert solution(\n    \"\"\"\n2 2\n0 1\n0 2\n1 1\n0 1\n\"\"\"\n) == \"0 1\\n\"\n\nassert solution(\n    \"\"\"\n3 3\n0 1 50\n0 2 100\n0 3 100\n1 2 50\n2 3 25\n3 4 125\n4 5 50\n5 6 25\n6 0 125\n0 6\n\"\"\"\n) == \"0 6\\n\"\n\nassert solution(\n    \"\"\"\n2 3\n0 1 50\n0 2 100\n1 2 50\n2 3 25\n3 4 25\n4 5 25\n5 6 25\n6 7 25\n7 0 25\n0 7\n\"\"\"\n) == \"2 7\\n\"\n\nassert solution(\n    \"\"\"\n4 6\n0 1 50\n0 2 100\n0 3 25\n1 3 50\n2 4 100\n3 4 50\n4 5 100\n5 6 25\n6 0 50\n0 6\n\"\"\"\n) == \"0 6\\n\"\n\nassert solution(\n    \"\"\"\n2 4\n0 1 50\n0 2 100\n1 2 50\n2 3 25\n3 4 25\n4 5 50\n5 6 25\n6 7 25\n7 0 25\n0 7\n\"\"\"\n) == \"2 7\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\"\"\") == ['0 3']\n\nassert solution(\"\"\"4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 4\"\"\") == ['0 4']\n\nassert solution(\"\"\"4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 4\n1 4\"\"\") == ['0 4', '1 4']\n\nassert solution(\"\"\"4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 4\n1 4\n2 4\"\"\") == ['0 4', '1 4', '2 4']\n\nassert solution(\"\"\"4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n0 4\n1 4\n2 4\n3 4\"\"\") == ['0 4', '1 4', '2 4', '3 4']"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == [\"0 3\"]\nassert solution(\"4 5\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 4\") == [\"0 3\", \"1 3\"]\nassert solution(\"5 6\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 5\") == [\"0 4\", \"0 5\", \"1 3\"]\nassert solution(\"5 7\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 6\") == [\"0 4\", \"0 5\", \"0 6\", \"1 3\"]\nassert solution(\"5 8\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 7\") == [\"0 4\", \"0 5\", \"0 6\", \"0 7\", \"1 3\"]"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 20, \"The correct solution is: 20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"2.0 10.0\n    3 3 0 0\n    2001 1000 100\n    1001 10000 200\n    100 0 0\"\"\"\n) == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20', \"The output is incorrect\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\\n\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test case {index + 1} failed: {input_str}!= {output_str}\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"20\", \"The solution should return 20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == 4, \"Test failed\"\nassert solution(1) == 0, \"Test failed\"\nassert solution(2) == 1, \"Test failed\"\nassert solution(3) == 1, \"Test failed\"\nassert solution(4) == 1, \"Test failed\"\nassert solution(5) == 2, \"Test failed\"\nassert solution(6) == 3, \"Test failed\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n2 1 3 4 5\\n3 2 4 5 1\\n4 3 5 1 2\\n5 1 2 4 3\") == \"1\\n\"\nassert solution(\"1\\n6\\n5 4 2 1\\n4 3 5 1 2\\n3 2 4 5 1\\n2 1 3 4 5\\n1 6 5 4 2\") == \"1\\n\"\nassert solution(\"1\\n5\\n1 2 3\\n2 1 3\\n3 2 4\") == \"1\\n\"\nassert solution(\"1\\n3\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"2\\n1\\n2 3\\n3 1\") == \"2\\n\"\nassert solution(\"2\\n3\\n4 1\\n1 2\") == \"2\\n\"\nassert solution(\"2\\n1\\n1 2\\n3 2\") == \"2\\n\"\nassert solution(\"1\\n6\\n4 2 1\\n3 5 2\\n2 4 1\\n1 5 4 3\\n6 2 3 5\") == \"2\\n\"\nassert solution(\"1\\n5\\n1 2 3\\n2 1 3\\n3 2 4\") == \"1\\n\"\nassert solution(\"1\\n3\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"2\\n1\\n2 3\\n3 1\") == \"2\\n\"\nassert solution(\"2\\n3\\n4 1\\n1 2\") == \"2\\n\"\nassert solution(\"2\\n1\\n1 2\\n3 2\") == \"2\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6\n    0 2 3 4 5 6\n    0 1 3 4 5 6\n    1 6 5 4 2 1\n    2 6 5 3 2 1\n    1 1 2 3 4 6\n    2 1 2 3 4 5\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"7\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n0 3 3 4 5 6\\n0 3 4 5 6 2\\n\") == \"1\\n\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n0 3 3 4 5 6\\n1 4 4 5 6 2\\n\") == \"2\\n\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n0 3 3 4 5 6\\n1 4 4 5 6 2\\n0 3 4 5 6 2\\n\") == \"1\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4\nassert solution('8 8\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 8\nassert solution('1 1\\n1 1 1 1') == 1\nassert solution('10 10\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 10\nassert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10') == 16\nassert solution('2 2\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 2"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4\\n'\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 9 10 11 12\\n') == '5\\n'\nassert solution('10\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n8 9 10 11 12\\n13 14 15 16 17\\n') == '10\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('4\\n1 2\\n2 1 2 3\\n3 2 1 2 3 4\\n4 3 2 1 2 3 4 5\\n5 4 3 2 1 2 3 4 5 6\\n6 5 4 3 2 1 2 3 4 5 6 7\\n') == '4'\nassert solution('4\\n2 3\\n3 2 1 2 3 4\\n4 3 2 1 2 3 4 5\\n5 4 3 2 1 2 3 4 5 6\\n6 5 4 3 2 1 2 3 4 5 6 7\\n') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4, \"The solution should return 4, but it returns {}\".format(solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7'))"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"8\\n1 1\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 9\\n3 4 5 6 7 8 9 10\\n4 5 6 7 8 9 10 11\\n5 6 7 8 9 10 11 12\\n6 7 8 9 10 11 12 13\\n7 8 9 10 11 12 13 14\\n8 9 10 11 12 13 14 15\\n9 10 11 12 13 14 15 16\\n10 11 12 13 14 15 16 17\\n11 12 13 14 15 16 17 18\\n12 13 14 15 16 17 18 19\\n13 14 15 16 17 18 19 20\\n14 15 16 17 18 19 20 21\\n15 16 17 18 19 20 21 22\\n16 17 18 19 20 21 22 23\\n17 18 19 20 21 22 23 24\\n18 19 20 21 22 23 24 25\\n19 20 21 22 23 24 25 26\\n20 21 22 23 24 25 26 27\\n21 22 23 24 25 26 27 28\\n22 23 24 25 26 27 28 29\\n23 24 25 26 27 28 29 30\\n24 25 26 27 28 29 30 31\\n25 26 27 28 29 30 31 32\\n26 27 28 29 30 31 32 33\\n27 28 29 30 31 32 33 34\\n28 29 30 31 32 33 34 35\\n29 30 31 32 33 34 35 36\\n30 31 32 33 34 35 36 37\\n31 32 33 34 35 36 37 38\\n32 33 34 35 36 37 38 39\\n33 34 35 36 37 38 39 40\\n34 35 36 37 38 39 40 41\\n35 36 37 38 39 40 41 42\\n36 37 38 39 40 41 42 43\\n37 38 39 40 41 42 43 44\\n38 39 40 41 42 43 44 45\\n39 40 41 42 43 44 45 46\\n40 41 42 43 44 45 46 47\\n41 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4\nassert solution() == 4\nassert solution() == 4\nassert solution() == 4\nassert solution() == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4\\n'\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n4\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 6, \"The expected output is not returned.\"\nassert solution(1) == 1, \"The expected output is not returned.\"\nassert solution(31) == 6, \"The expected output is not returned.\"\nassert solution(101) == 11, \"The expected output is not returned.\"\nassert solution(5001) == 6, \"The expected output is not returned.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"Output: 6, Expected: 6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6\\n'\nassert solution('6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n') == '6\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n') == '7\\n'\nassert solution('6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n') == '7\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n') == '8\\n'\nassert solution('6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n') == '8\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n5.3 3.1\\n') == '9\\n'\nassert solution('6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n5.3 3.1\\n') == '9\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n5.3 3.1\\n5.4 3.1\\n') == '10\\n'\nassert solution('6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n5.3 3.1\\n5.4 3.1\\n') == '10\\n'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n5.0 3.1\\n5.1 3.1\\n5.2 3.1\\n5.3 3.1\\n5.4 3.1\\n5.5 3.1\\n') == '11\\n'\nassert solution('6\\n1.0"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.2\") == 7\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 8\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 9\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 10"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"The solution is incorrect. Expected: {expected}, got: {solution}\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"5\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == 5\nprint(\"All tests passed.\")"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"Test Failed\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n2\\n2\\n2') == '5'\nassert solution(stdin='3\\n2\\n2\\n2\\n') == '1'\nassert solution(stdin='3\\n2\\n3\\n') == '3'\nassert solution(stdin='3\\n2\\n2\\n') == '5'\nassert solution(stdin='3\\n2\\n2\\n') == '5'\nassert solution(stdin='3\\n2\\n2\\n\\n') == '5'"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case_number} failed: {solution(stdin)} should be {expected}\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 1\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == 'Error: Input data was not provided.'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 1\") == \"2 0\"\nassert solution(\"1 3\\n4 2 2 "
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"5 1000\\n1000000000 1 10 1000000000 50 100 500 1000 10000 100000\") == \"1 1\"\nassert solution(\"5 1000\\n1000000000 1 10 1000000000 50 100 500 1000 10000 100000\") == \"2 2\"\nassert solution(\"5 1000\\n1000000000 1 10 1000000000 50 100 500 1000 10000 100000\") == \"1 1\"\nassert solution(\"5 1000\\n1000000000 1 10 1000000000 50 100 500 1000 10000 100000\") == \"1 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3 4 5 6\") == \"2 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 3\\n2 1 2 1\") == \"3 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3 4 5 6\") == \"3 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 10, \"Expected 10, got: {}\".format(solution(1))"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"10\\n\") == \"1\\n2\\n\"\nassert solution(\"15\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"20\\n\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"25\\n\") == \"1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"30\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"35\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"40\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"\nassert solution(\"45\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\"\nassert solution(\"50\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\nassert solution(\"55\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\"\nassert solution(\"60\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\"\nassert solution(\"65\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\"\nassert solution(\"70\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\"\nassert solution(\"75\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\"\nassert solution(\"80\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\"\nassert solution(\"85\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\"\nassert solution(\"90\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\"\nassert solution(\"95\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n\"\nassert solution(\"100\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\"\nassert solution(\"105\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"5\") == \"10\"\nassert solution(\"10\") == \"10\"\nassert solution(\"25\") == \"10\"\nassert solution(\"100\") == \"100\"\nassert solution(\"998244353\") == \"1000000000\"\n\nfrom typing import List"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == '10', \"The solution is incorrect\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '10'\nassert solution(4) == '24'\nassert solution(5) == '25'\nassert solution(6) == '30'\nassert solution(7) == '31'\nassert solution(8) == '32'\nassert solution(9) == '34'\nassert solution(10) == '35'\nassert solution(11) == '38'\nassert solution(12) == '39'\nassert solution(13) == '40'\nassert solution(14) == '45'\nassert solution(15) == '46'\nassert solution(16) == '47'\nassert solution(17) == '48'\nassert solution(18) == '50'\nassert solution(19) == '52'\nassert solution(20) == '53'\nassert solution(21) == '56'\nassert solution(22) == '57'\nassert solution(23) == '60'\nassert solution(24) == '61'\nassert solution(25) == '62'\nassert solution(26) == '63'\nassert solution(27) == '64'\nassert solution(28) == '66'\nassert solution(29) == '67'\nassert solution(30) == '68'\nassert solution(31) == '69'\nassert solution(32) == '70'\nassert solution(33) == '72'\nassert solution(34) == '73'\nassert solution(35) == '74'\nassert solution(36) == '75'\nassert solution(37) == '76'\nassert solution(38) == '78'\nassert solution(39) == '79'\nassert solution(40) == '80'\nassert solution(41) == '81'\nassert solution(42) == '82'\nassert solution(43) == '83'\nassert solution(44) == '84'\nassert solution(45) == '85'\nassert solution(46) == '86'\nassert solution(47) == '87'\nassert solution(48) == '88'\nassert solution(49) == '90'\nassert solution(50) == '91'\nassert solution(51) == '92'\nassert solution(52) == '93'\nassert solution(53) == '94'\nassert solution(54) == '95'\nassert solution(55) == '96'\nassert solution(56) == '97'\nassert solution(57) == '98'\nassert solution(58) == '99'\nassert solution(59) == '100'\nassert solution(60) == '101'\nassert solution(61) == '102'\nassert solution(62) == '103'\nassert solution(63) == '104'\nassert solution(64) == '106'\nassert solution(65) == '107'\nassert solution(66) == '108'\nassert solution(67) == '109'\nassert solution(68) == '110'\nassert solution(69) == '112'\nassert solution(70) == '113'\nassert solution(71) == '114'\nassert solution(72) == '115'\nassert solution(73) == '116'\nassert solution(74) == '117'\nassert solution(75) == '118'\nassert solution(76) == '120'\nassert solution(77) == '121'\nassert solution(78) == '122'\nassert solution(79) == '123'\nassert solution(80) == '124'\nassert solution(81) == '125'\nassert solution(82) == '126'\nassert solution(83) == '127'\nassert solution(84) == '128'\nassert solution(85) == '130'\nassert solution(86) == '13"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '1'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"1 2\\n2000 1 0\\n1 2000 1\") == 0.002\nassert solution(\"1 2\\n1000 1 0\\n2 2000 1\") == 0.003\nassert solution(\"1 2\\n500 1 0\\n1 500 1\") == 0.004\nassert solution(\"1 2\\n1000 1 0\\n1 1000 2\") == 0.005\nassert solution(\"1 2\\n500 1 0\\n1 500 2\") == 0.006\nassert solution(\"1 2\\n1000 1 0\\n1 1000 3\") == 0.007\nassert solution(\"1 2\\n500 1 0\\n1 500 3\") == 0.008\nassert solution(\"1 2\\n1000 1 0\\n1 1000 4\") == 0.009\nassert solution(\"1 2\\n500 1 0\\n1 500 4\") == 0.010\nassert solution(\"1 2\\n1000 1 0\\n1 1000 5\") == 0.011\nassert solution(\"1 2\\n500 1 0\\n1 500 5\") == 0.012\nassert solution(\"1 2\\n1000 1 0\\n1 1000 6\") == 0.013\nassert solution(\"1 2\\n500 1 0\\n1 500 6\") == 0.014\nassert solution(\"1 2\\n1000 1 0\\n1 1000 7\") == 0.015\nassert solution(\"1 2\\n500 1 0\\n1 500 7\") == 0.016\nassert solution(\"1 2\\n1000 1 0\\n1 1000 8\") == 0.017\nassert solution(\"1 2\\n500 1 0\\n1 500 8\") == 0.018\nassert solution(\"1 2\\n1000 1 0\\n1 1000 9\") == 0.019\nassert solution(\"1 2\\n500 1 0\\n1 500 9\") == 0.020\nassert solution(\"1 2\\n1000 1 0\\n1 1000 10\") == 0.021\nassert solution(\"1 2\\n500 1 0\\n1 500 10\") == 0.022\nassert solution(\"1 2\\n1000 1 0\\n1 1000 11\") == 0.023\nassert solution(\"1 2\\n500 1 0\\n1 500 11\") == 0.024\nassert solution(\"1 2\\n1000 1 0\\n1 1000 12\") == 0.025\nassert solution(\"1 2\\n500 1 0\\n1 500 12\") == 0.026\nassert solution(\"1 2\\n1000 1 0\\n1 1000 13\") == 0.027\nassert solution(\"1 2\\n500 1 0\\n1 500 13\") == 0.028\nassert solution(\"1 2\\n1000 1 0\\n1 1000 14\") == 0.029\nassert solution(\"1 2\\n500 1 0\\n1 500 14\") == "
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n2 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n3 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n4 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n5 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n6 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n7 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n8 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n9 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n10 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n11 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n12 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n13 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n14 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n15 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n16 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n17 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n18 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n19 1000 1\\n\") == \"0.001\"\nassert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n20 1000 1\\n\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001\\n'"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\nassert solution(\"5 6 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n\"\nassert solution(\"5 6 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"0\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(3)) == \"0\"\nassert solution(str(3) + str(3) + str(2) + str(10000)) == \"0\"\nassert solution(str(3) + str(1) + str(2) + str(3) + str(1)) == \"0\"\nassert solution(str(4) + str(3) + str(2) + str(10000) + str(4)) == \"4\"\nassert solution(str(5) + str(4) + str(3) + str(2) + str(10000) + str(4) + str(4) + str(5)) == \"3\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The solution is {output}, but it should be {stdin}\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"6 8 2 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\\n6 7\") == 1\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == 2\nassert solution(\"10001 2\\n3 4\\n5 6\\n7 8\") == 2\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == 3"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0\\n'\nassert solution() == '0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\nassert solution(\"3 3 3 10000\\n1 2\\n2 3\\n3 1\") == \"1\\n\"\nassert solution(\"5 5 1 20000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == 0\nassert solution(\"6 7 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == 1\nassert solution(\"10 10 20\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == 2\nassert solution(\"100 100 200\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 26, \"Output should be 26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"0 1 2 3\\n1 0 3 4\\n2 1 4 5\\n2 3 5 6\") == 188\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\nassert solution('10 0 1 0\\n0 0 0 1\\n1 1 0 0\\n1 1 1 0\\n0 0 0 0') == 1\nassert solution('10 0 1 0\\n0 0 0 1\\n1 1 0 0\\n1 1 1 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 1\nassert solution('5 0 1 1\\n1 1 0 1\\n1 0 1 0\\n0 0 0 0\\n1 1 1 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 3\nassert solution('5 0 1 1\\n1 1 0 1\\n1 0 1 0\\n0 0 0 0\\n1 1 1 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 3\nassert solution('5 0 1 1\\n1 1 0 1\\n1 0 1 0\\n0 0 0 0\\n1 1 1 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == 3\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nprint(\"All tests passed\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 26, \"The output is incorrect.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '26\\n', 'Incorrect output'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n0.333333333\n0.666666667\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\\n\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.X\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'\nassert solution('1 1\\n
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\\n\\n\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.75\", \"Your solution is incorrect\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.75\\n\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(45.0, 45.0, 0.0, 0.0) == 0.75, \"Test failed for input 45.0, 45.0, 0.0, 0.0\"\nassert solution(45.0, 45.0, 0.0, 90.0) == 0.75, \"Test failed for input 45.0, 45.0, 0.0, 90.0\"\nassert solution(45.0, 45.0, 0.0, 180.0) == 0.75, \"Test failed for input 45.0, 45.0, 0.0, 180.0\"\nassert solution(45.0, 45.0, 0.0, 270.0) == 0.75, \"Test failed for input 45.0, 45.0, 0.0, 270.0\"\nassert solution(45.0, 45.0, 0.0, 360.0) == 0.75, \"Test failed for input 45.0, 45.0, 0.0, 360.0\"\nassert solution(45.0, 45.0, 90.0, 0.0) == 0.75, \"Test failed for input 45.0, 45.0, 90.0, 0.0\"\nassert solution(45.0, 45.0, 90.0, 90.0) == 0.75, \"Test failed for input 45.0, 45.0, 90.0, 90.0\"\nassert solution(45.0, 45.0, 90.0, 180.0) == 0.75, \"Test failed for input 45.0, 45.0, 90.0, 180.0\"\nassert solution(45.0, 45.0, 90.0, 270.0) == 0.75, \"Test failed for input 45.0, 45.0, 90.0, 270.0\"\nassert solution(45.0, 45.0, 90.0, 360.0) == 0.75, \"Test failed for input 45.0, 45.0, 90.0, 360.0\"\nassert solution(45.0, 45.0, 180.0, 0.0) == 0.75, \"Test failed for input 45.0, 45.0, 180.0, 0.0\"\nassert solution(45.0, 45.0, 180.0, 90.0) == 0.75, \"Test failed for input 45.0, 45.0, 180.0, 90.0\"\nassert solution(45.0, 45.0, 180.0, 180.0) == 0.75, \"Test failed for input 45.0, 45.0, 180.0, 180.0\"\nassert solution(45.0, 45.0, 180.0, 270.0) == 0.75, \"Test failed for input 45.0, 45.0, 180.0, 270.0\"\nassert solution(45.0, 45.0, 180.0, 360.0) == 0.75, \"Test failed for input 45.0, 45.0, 180.0, 360.0\"\nassert solution(45.0, 45.0, 270.0, 0.0) == 0.75, \"Test failed for input 45.0, 45.0, 270.0, 0.0\"\nassert solution(45."
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output.\\nInput: {input()}\\nOutput: {output}\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == 0.75, \"Output should be 0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == 0.75, \"The output is incorrect. The correct output should be 0.75.\"\nassert solution(\"45 45 270 90\") == 0.75, \"The output is incorrect. The correct output should be 0.75.\"\nassert solution(\"45 45 90 135\") == 0.75, \"The output is incorrect. The correct output should be 0.75.\"\nassert solution(\"45 45 90 180\") == 0.5, \"The output is incorrect. The correct output should be 0.5.\"\nassert solution(\"45 45 90 225\") == 0.25, \"The output is incorrect. The correct output should be 0.25.\"\nassert solution(\"45 45 90 270\") == 0, \"The output is incorrect. The correct output should be 0.\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\", \"The correctness of the solution is not determined.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"The output should be 4.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"100001 100002\\n100003 100004\\n100005 100006\\n100007 100008\\n100009 100010\") == 144\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nassert solution('5 10\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n0 2 10') == 9"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"4\"\nassert solution(\"1 2\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"0\"\nassert solution(\"6 8\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"12\"\nassert solution(\"1 3\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"6\"\nassert solution(\"5 2\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"0\"\nassert solution(\"1 2 1\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == \"2\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n10 10 0 5') == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"100\", \"Sample Output: \\n\" + solution(stdin)"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"100\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"100\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"100\\n\", \"The output should be 100.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\nassert solution(\"2\\n20 20 0 7\\n10 10 0 5\\n5 5 0 10\") == \"60\"\nassert solution(\"3\\n10 10 0 5\\n30 30 0 15\\n10 10 0 5\") == \"125\"\nassert solution(\"4\\n10 10 0 5\\n30 30 0 15\\n5 5 0 10\\n10 10 0 5\") == \"125\"\nassert solution(\"5\\n10 10 0 5\\n30 30 0 15\\n5 5 0 10\\n10 10 0 5\\n10 10 0 5\") == \"125\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"100\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"Test Case 1 failed\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 8 6 8\") == 1, \"Test Case 2 failed\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 5 8\") == 0, \"Test Case 3 failed\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 7 8\") == 0, \"Test Case 4 failed\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 5 7\") == 0, \"Test Case 5 failed\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([3, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]) == 1\nassert solution([2, 0, 4, 0, 2, 4, 6, 4, 4, 8, 8]) == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution( \"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n\nassert solution( \"\"\"\n2\n0 0\n0 1\n\"\"\") == \"0\"\n\nassert solution( \"\"\"\n4\n0 0 2 2\n1 1 4 4\n5 7 6 8\n\"\"\") == \"0\"\n\nassert solution( \"\"\"\n6\n1 1 2 2 3 3\n4 4 5 5 6 6\n7 7 8 8 9 9\n\"\"\") == \"0\"\n\nassert solution( \"\"\"\n2\n1 1\n0 2\n\"\"\") == \"0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1, \"No intersection\"\nassert solution(1) == 0, \"No intersection\"\nassert solution(5) == 1, \"Intersection\"\nassert solution(6) == 1, \"Intersection\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Test failed\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\\n\"\nassert solution(\"0 0 3 3\\n1 1 3 4\\n5 7 6 8\") == \"0\\n\"\nassert solution(\"0 0 2 2\\n1 1 4 4\\n5 7 6 8\") == \"0\\n\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n0 0 0 0\") == \"0\\n\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1 -1 -1 -1\") == \"0\\n\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1, \"Incorrect output for the given example\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(1) == 0\nassert solution(2) == 1\nassert solution(5) == 1\nassert solution(10) == 0\nassert solution(11) == 1\nassert solution(12) == 1\nassert solution(13) == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n\") == \"1\\n\"\nassert solution(\"0 0 2 2\\n0 0 1 1\\n5 5 8 8\\n\") == \"0\\n\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1 1 3 4\\n\") == \"0\\n\"\nassert solution(\"0 0 2 2\\n-1 0 3 2\\n1 1 3 4\\n\") == \"1\\n\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n1 1 3 4\\n\") == \"0\\n\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(5) == 1\nassert solution(8) == 0\nassert solution(10) == 0\nassert solution(0) == 0"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"2\\n\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"0\\n\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"The expected output is not found.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 17, \"Expected 17, but got {}\".format(solution())"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_cases/example_input.txt').read()) == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17, \"Test failed\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 17, \"The output of the code is incorrect.\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4\\nimpossible'\nassert solution('6\\n2 1 2 3 4') == 'impossible'\nassert solution('5\\n2 1 2 3 4') == 'impossible'\nassert solution('5\\n1 2 3 4 5') == '1 3 4 5 2 \\n2 1 3 4 5'\nassert solution('5\\n1 2 3 4 5') == 'impossible'\nassert solution('5\\n1 2 3 4 6') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n4 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 2\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n4 2 3 1 2\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 3\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n4 2 3 1 3\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 4\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n4 2 3 1 4\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 5\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"5\\n4 2 3 1 5\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\n\nfrom typing import List"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 4\") == \"impossible\"\nassert solution(\"1\\n3 2 3 1 1\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\\n6 7 8 9 10\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1 4 3 5 2 \\n 2 3 5 1 4\\n'\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'\n\nprint(solution('5\\n3 2 3 1 1'))"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"1 9 8 7 6 5 4 3 2\"\nassert solution(\"10\\n5 6 7 8 9\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.76772047\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0.76772047', 'The output is incorrect.'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\"\nassert solution(\"2\\n1 2\\n3 2\") == \"0.46385136\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\"\nassert solution(\"3\\n3 1\\n2 3\\n1 4\\n3 1\\n2 3\") == \"0.43948553\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\"\nassert solution(\"1\\n2 3\\n1 4\") == \"0.02652590\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\"\nassert solution(\"2\\n2 3\\n1 4\\n1 4\\n2 3\") == \"0.02652590\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\"\nassert solution(\"3\\n1 4\\n3 1\\n2 3\\n1 4\\n3 1\\n2 3\") == \"0.02652590\", \"The probability that the boar completes its charge without hitting any tree is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.76772047, \"The given solution is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 0.76772047, \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.76772047, \"Incorrect output. Expected 0.76772047 but got {}.\".format(solution())"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == 0.76772047, \"The output should be 0.76772047, but it is {}.\".format(solution('1\\n3 0 1\\n1 4\\n'))\nassert solution('1\\n2 1 1\\n1 3\\n') == 0.5, \"The output should be 0.5, but it is {}.\".format(solution('1\\n2 1 1\\n1 3\\n'))\nassert solution('1\\n3 1 2\\n1 2\\n') == 0.16666667, \"The output should be 0.16666667, but it is {}.\".format(solution('1\\n3 1 2\\n1 2\\n'))\nassert solution('1\\n3 2 3\\n1 1\\n') == 0.05, \"The output should be 0.05, but it is {}.\".format(solution('1\\n3 2 3\\n1 1\\n'))"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"def goodbye\") == \"1\"\nassert solution(\"leet on\") == \"3\"\nassert solution(\"abcz\") == \"1\"\nassert solution(\"aab\") == \"1\"\nassert solution(\"aabb\") == \"1\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"The output should be 27, but is: {}\".format(solution(\"hello teams\"))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"def solution(stdin: str) -> str:\") == \"27\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"abcd\") == \"0\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"abcdefg\") == \"0\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Sample Input: hello teams\\nSample Output: 27\\n\"\nassert solution(\"abcde\") == \"1\\n\", \"Sample Input: abcde\\nSample Output: 1\\n\"\nassert solution(\"AabbBcccD\") == \"1\\n\", \"Sample Input: AabbBcccD\\nSample Output: 1\\n\"\nassert solution(\"def\") == \"1\\n\", \"Sample Input: def\\nSample Output: 1\\n\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"def solution(stdin: str) -> str: pass\\n27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('hello teams') == '27', \"Output: '27', Input: 'hello teams'\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The first sample input should be modified as follows. First shift the entire string forward, getting bbdddbbbb. Then shift ddd backward twice to get bbbbbbbbb. This requires 1+2=3 moves.\"\n\nassert solution(\"my string\") == \"1\", \"The first sample input should be modified as follows. First shift the entire string forward, getting mymymymy. Then shift my my my my to get mmmmmmmm. This requires 1+2+2=5 moves.\"\n\nassert solution(\"a string\") == \"0\", \"The first sample input should be modified as follows. First shift the entire string forward, getting aaaaaaaaa. Then shift a a a a to get aaaaaaaa. This requires 1+2+2+2=7 moves.\"\n\nassert solution(\"abcdef\") == \"4\", \"The first sample input should be modified as follows. First shift the entire string forward, getting bbbbbbba. Then shift b b b b to get bbbbbbbb. This requires 1+2+2+2+1=8 moves.\"\n\nassert solution(\"abc\") == \"1\", \"The first sample input should be modified as follows. First shift the entire string forward, getting cccccc. Then shift c c c c to get cccccc. This requires 1+2+2+2=4 moves.\"\n\nassert solution(\"hello world\") == \"4\", \"The first sample input should be modified as follows. First shift the entire string forward, getting hhllllll. Then shift h h h h to get hhhhhhhh. This requires 1+2+2+2=6 moves.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\\n\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2, \"Please provide the correct solution for the problem\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n\"\"\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test Case 1 Failed\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n18 14\\n12 2\") == 2, \"Test Case 2 Failed\"\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n18 14\\n12 2\\n20 18\") == 2, \"Test Case 3 Failed\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Expected 2, got {}\".format(solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\"))\nassert solution(\"1 1\\n2 2\") == 0, \"Expected 0, got {}\".format(solution(\"1 1\\n2 2\"))\nassert solution(\"5 3\\n1 8\\n4 7 2\\n6 3\") == 2, \"Expected 2, got {}\".format(solution(\"5 3\\n1 8\\n4 7 2\\n6 3\"))\nassert solution(\"5 3\\n1 8\\n4 7 2\\n6 3\\n1 9\") == 3, \"Expected 3, got {}\".format(solution(\"5 3\\n1 8\\n4 7 2\\n6 3\\n1 9\"))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2\\n'"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 1 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 2 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 3 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 4 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 5 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 6 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 7 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 8 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 9 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 10 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test case 11 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 12 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 1, \"Test case 13 failed.\"\n\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'a') == 0, \"a\"\nassert solution(b'b') == 1, \"b\"\nassert solution(b'c') == 2, \"c\"\nassert solution(b'd') == 3, \"d\"\nassert solution(b'e') == 4, \"e\"\nassert solution(b'f') == 5, \"f\"\nassert solution(b'g') == 6, \"g\"\nassert solution(b'h') == 7, \"h\"\nassert solution(b'i') == 8, \"i\"\nassert solution(b'j') == 9, \"j\"\nassert solution(b'k') == 10, \"k\"\nassert solution(b'l') == 11, \"l\"\nassert solution(b'm') == 12, \"m\"\nassert solution(b'n') == 13, \"n\"\nassert solution(b'o') == 14, \"o\"\nassert solution(b'p') == 15, \"p\"\nassert solution(b'q') == 16, \"q\"\nassert solution(b'r') == 17, \"r\"\nassert solution(b's') == 18, \"s\"\nassert solution(b't') == 19, \"t\"\nassert solution(b'u') == 20, \"u\"\nassert solution(b'v') == 21, \"v\"\nassert solution(b'w') == 22, \"w\"\nassert solution(b'x') == 23, \"x\"\nassert solution(b'y') == 24, \"y\"\nassert solution(b'z') == 25, \"z\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"26\"\nassert solution(sample_input2) == \"97\"\n\nfrom typing import List"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == 26, \"Test case 1 failed.\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == 26, \"Test case 2 failed.\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\\n\") == 26, \"Test case 3 failed.\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\\n\\n\") == 26, \"Test case 4 failed.\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\\n\\n\\n\") == 26, \"Test case 5 failed.\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 26, \"Expected Output: 26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"26\", solution(stdin)"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"26\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"10 5 3 1 3\\n5 10 30\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 5 3 1 4') == 'impossible'\nassert solution('5 10 30\\n10 5 4 1 3') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 5') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 1') == 'impossible'\nassert solution('5 10 30\\n10 5 3 1 0') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 3 1 3\\n\") == \"3 5 2 1 4\\n\"\nassert solution(\"10 5 3 1 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n5 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n1 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n3 5 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n5 3 3 1 3\") == \"impossible\"\nassert solution(\"5 10 30\\n1 5 3 1 1\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == 2\nassert solution('6\\n1 1\\n3 4\\n4 5\\n5 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 101\\n100 102\\n101 103\\n102 104\\n103 105\\n104 106\\n105 107\\n106 108\\n107 109\\n108 110\\n109 111\\n110 112\\n111 113\\n112 114\\n113 115\\n114 116\\n115 117\\n116 118\\n117 119\\n118 120\\n119 121\\n120 122\\n121 123\\n122 124\\n123 125\\n124 126\\n125 127\\n126 128\\n127 129\\n128 130\\n129 131\\n130 132\\n131 133\\n132 134\\n133 135\\n134 136\\n13"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"3\\n1 1\\n2 3\\n2 3\", \"2\\nshovel time!\\n\"),\n]"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"4\\n1 1\\n2 3\\n2 3\\n4 1\") == \"shovel time!\"\nassert solution(\"5\\n1 1\\n2 3\\n2 3\\n4 1\\n2 3\\n1 1\\n2 3\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == 2\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"3\\n0 1\\n0 1\\n0 1\") == 1\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2\nassert solution(\"5\\n1 0\\n2 3\\n3 3\\n4 4\\n5 4\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == 2\nassert solution('4\\n1 1\\n2 3\\n2 3') == 1\nassert solution('5\\n1 1\\n2 3\\n2 3') == 0\nassert solution('6\\n1 1\\n2 3\\n2 3') == 0\nassert solution('7\\n1 1\\n2 3\\n2 3') == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == 3"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\nassert solution() == 3"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == 79\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 999999937') == 79\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '79'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"79\"\nprint(\"All tests pass\")\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"5 5 999999937\") == 182\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"  # correct output"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 999999937') == 79, \"The solution is incorrect\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"79\", \"Expected 79, got: \" + solution(stdin)\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"13267\\n\"\nassert solution(stdin) == \"611380241\\n\"\nassert solution(stdin) == \"1066829065\\n\"\nassert solution(stdin) == \"473507637\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    \"\"\"\n) == \"zucchini mozzarella mushrooms artichoke\"\n\nassert solution(\n    \"\"\"\n    2\n    2 +pineapple +banana -orange\n    \"\"\"\n) == \"pineapple\"\n\nassert solution(\n    \"\"\"\n    2\n    2 +pineapple +banana -orange\n    2 +carrots -cucumber\n    \"\"\"\n) == \"pineapple banana orange\"\n\nassert solution(\n    \"\"\"\n    3\n    3 +apple -banana +cherry -orange\n    2 +kiwi +cucumber\n    \"\"\"\n) == \"apple cherry orange\"\n\nassert solution(\n    \"\"\"\n    4\n    4 +apple +banana -orange +kiwi -cucumber\n    \"\"\"\n) == \"apple banana orange\"\n\nassert solution(\n    \"\"\"\n    5\n    5 +apple -banana +kiwi -cucumber +orange +cherry\n    \"\"\"\n) == \"apple cherry\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == ['zucchini','mozzarella','mushrooms', 'artichoke'], \"Test failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1 failed\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"zucchini mozzarella mushrooms artichoke\", \"Your code is incorrect.\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == ['zucchini','mozzarella','mushrooms', 'artichoke']"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n4 +bacon -ham +pepperoni -extra cheese -spinach -mushrooms +tomatoes\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\nbacon\\nham\\npepperoni\\nextra cheese\\nspinach\\ntomatoes\"\nassert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n4 +bacon -ham +pepperoni -extra cheese -spinach -mushrooms +tomatoes\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\nbacon\\nham\\npepperoni\\nextra cheese\\nspinach\\ntomatoes\"\nassert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n4 +bacon -ham +pepperoni -extra cheese -spinach -mushrooms +tomatoes\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\nbacon\\nham\\npepperoni\\nextra cheese\\nspinach\\ntomatoes\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"]"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"4 4\\nP\\nS\\nP\\nR\") == \"P\\nR\\nP\\nS\"\nassert solution(\"4 4\\nP\\nS\\nP\\nR\\nS\\nR\\nP\") == \"P\\nP\\nR\\nP\\nR\\nS\\nS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'PS', 'Your solution is incorrect. Expected \"PS\", got \"{}\"'.format(solution(stdin))"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"PS\\nPP\\nRR\\nSS\\n\"\n\nfrom collections import Counter\nfrom typing import List"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"PS\\nPP\\nRR\\nSS\", \"Please implement the solution function.\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 5\\nPP\\nRR\\nPS\\nSS\\nPP\") == \"PP\\nRR\\nSS\\nPP\\n\"\nassert solution(\"4 4\\nSS\\nPP\\nRR\\nP\") == \"RR\\nSS\\nPP\\nP\\n\"\nassert solution(\"4 5\\nSS\\nPP\\nRR\\nP\\nPS\") == \"PP\\nRR\\nSS\\nP\\nPS\\n\"\nassert solution(\"5 5\\nSS\\nPP\\nRR\\nP\\nPS\\nPP\") == \"PP\\nRR\\nSS\\nP\\nPS\\nPP\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"PS\\nP\\nR\\nSS\\nPP\\nRR\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nPS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nPS\\nPS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nPS\\nPS\\nPP\\n\") == \"PS\\nPP\\nRR\\nSS\\n\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"SS\"\nassert solution() == \"PS\"\nassert solution() == \"PP\"\nassert solution() == \"RR\"\nassert solution() == \"SS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}, expected output: {output}\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == 288.0\n\nimport math"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"288\\n\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\\n\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == 288\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '288.0', \"Expected output: 288.0, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == 288.0\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"288\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for {sample_input}\"\nfor input, output in zip(test_inputs, test_outputs):\n    assert solution(input) == output, f\"Test failed for {input}\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(pastimeofwhimsy) == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Output should be 1\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\\n\", \"The meow factor of 'pastimeofwhimsy' should be 1.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == '1', \"Test failed for 'pastimeofwhimsy'.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"1 2 2 1\\n3 4 \") == \"NO\"\nassert solution(\"10 10\\n2 2 2 1 1 1 \") == \"NO\"\nassert solution(\"2 2\\n2 2 \") == \"NO\"\nassert solution(\"1 2\\n1 2 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\", \"Expected YES but got {}\".format(solution(\"3 4\\n1 2 2 1 \"))"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} -> {output}\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n5 5 5 5 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 2 1\\n\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('3 4\\n1 2 3 1 ') == 'NO'\nassert solution('3 4\\n2 3 4 2 ') == 'YES'\nassert solution('3 4\\n2 3 2 1 ') == 'NO'\nassert solution('3 4\\n2 3 3 1 ') == 'YES'\nassert solution('3 4\\n3 4 4 3 ') == 'YES'\nassert solution('3 4\\n3 4 5 2 ') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\\n\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3/1\\n'\nassert solution(input()) == '3/1\\n'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"1/10\"\nassert solution(\"10\\n2 3\\n3 4\\n1 5\\n6 7\\n7 8\\n2 9\\n5 6\\n6 7\\n7 8\\n\") == \"1/6\"\nassert solution(\"10\\n2 3\\n4 5\\n1 6\\n7 8\\n8 9\\n\") == \"1/2\"\nassert solution(\"10\\n2 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"1/2\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3/1\", \"Expected output: 3/1, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3/1\"\nassert solution(5) == \"5/2\"\nassert solution(10) == \"5/3\"\nassert solution(15) == \"5/4\"\nassert solution(20) == \"15/5\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nassert solution(\"3\\n1 3\\n2 3\\n1 2\\n\") == \"1/3\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"11/4\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"7/3\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n3/1\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365 / (10**2)\nprint(\"All test cases passed\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n1.2 10.2\\n2.2 15.2\"\n) == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Test case {test_case} failed: {output}!= {stdin}\"\ntest_case += 1"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3\\n1 2 3 2\"\nassert solution(\"5 5\\n5 5\\n5 5\\n\") == \"5\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2\\n'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\\n\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''3\n1 2 3 2'''"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('5\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2 4 2'\nassert solution('10\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 4 6 8 6 4 2 1'\nassert solution('15\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 4 5 6 7 8 9 10'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n1000000') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n1000001') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n1000002') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n1000003') == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['1', '2', '3'] # expected output\nassert solution() == ['none', 'none', 'none'] # expected output\nassert solution() == ['none', 'none', 'none'] # expected output"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr\"\"\"\n3\n1 2 3\n1 1 2\n1 2 3\n\"\"\"\n) == \"\"\"\n1\n2\n3\n\"\"\"\n\nassert solution(\nr\"\"\"\n3\n1 1 2\n\"\"\"\n) == \"\"\"\nnone\n\"\"\"\n\nassert solution(\nr\"\"\"\n4\n1 2 1 3\n\"\"\"\n) == \"\"\"\nnone\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\nSample Input 1\\n4\\n1 2 1 3\\nSample Output 3\\nnone\\n\") == [\"1\", \"2\", \"3\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 2 1 3\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n4\\n1 2 1 3\") == \"none\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\", \"Test 1\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\", \"Test 2\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\", \"Test 3\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected output {output}\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"1\\n2\\n3\", \"Sample Input 1\"\nassert solution(sample_input2) == \"none\", \"Sample Input 2\"\nassert solution(sample_input3) == \"none\", \"Sample Input 3\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.readlines(), stdout.readlines())"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"1\n2\n3\n\"\"\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5\nassert solution(\"1\\n1\") == 1\nassert solution(\"5\\n1 2 3 4 5\") == 2\nassert solution(\"7\\n0 0 0 1 1 1 2 2 2\") == 5\nassert solution(\"6\\n1 2 2 3 3 4 4\") == 3\nassert solution(\"10\\n1 2 2 3 3 3 3 4 4 4 5 5 5 5\") == 5\nassert solution(\"10\\n0 0 0 1 1 1 2 2 2 3 3 3 3 4 4 4 5 5 5 5\") == 6\nassert solution(\"5\\n1 2 3 4 5\") == 2"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"7\\n2 1 0 1 2 3 3\\n\") == \"5\\n5\"\nassert solution(stdin=\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"4\\n6\"\nassert solution(stdin=\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"4\\n6\"\nassert solution(stdin=\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"4\\n6\"\n\nfrom typing import List"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"Incorrect output\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == 5\nassert solution(\"7\") == 5\nassert solution(\"1\") == 0\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5', 'The given code is incorrect.'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == 5"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"4\\n1 1 2 3 4\") == \"2\\n\"\nassert solution(\"7\\n10 1 2 3 4 5 6 7 8 9\") == \"7\\n\"\nassert solution(\"3\\n1 1 2 3\") == \"3\\n\"\nassert solution(\"2\\n1 2 2 3 4 5\") == \"2\\n\"\nassert solution(\"1\\n1 1\") == \"1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 6\n    #####\n     #...#\n    #_###\n    #_M.#\n    #__.#\n     #####\n    ''') == '''\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n'''\n\nassert solution('''\n    5 6\n     #####\n     #...#\n    #_###\n    #_M.#\n    #__.#\n     #####\n    ''') == '''\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n'''"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [\n    \"-1 -1 -1 -1 -1\",\n    \"-1 4 5 6 -1\",\n    \"-1 4 -1 -1 -1\",\n    \"-1 1 0 1 -1\",\n    \"-1 3 1 2 -1\",\n    \"-1 -1 -1 -1 -1\"\n]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"0 1 2 3 4\"\n\nfrom typing import List"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n'\n\nfrom typing import List"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Output: {output},\\nExpected Output: {output}\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"Impossible\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 4 2 1\n    \"\"\"\n) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\\n\"\nassert solution(\"5 6 5 6\") == \"01001\\n\"\nassert solution(\"1 2 3 4\") == \"impossible\\n\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 2 1') == '01001'\nprint(solution('3 4 2 1'))"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\nassert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'impossible'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"2 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"impossible\"\n\nsolution = '''def solution(stdin: str) -> str:\n    N, M, B = map(int, stdin.split())\n    board = []\n    for _ in range(N):\n        board.append([''] * M)\n    for _ in range(B):\n        r, c = map(int, stdin.split())\n        board[r][c] = 'X'\n\n    target_board = []\n    for _ in range(N):\n        target_board.append([''] * M)\n    for _ in range(B):\n        r, c = map(int, stdin.split())\n        target_board[r][c] = 'X'\n\n    def dfs(r, c, target):\n        if r == target[0] and c == target[1]:\n            return 1\n        if r < 0 or r >= N or c < 0 or c >= M:\n            return 0\n        if board[r][c]!= 'X':\n            return 0\n\n        board[r][c] = 'X'\n        if dfs(r+1, c, target) or dfs(r-1, c, target) or dfs(r, c+1, target) or dfs(r, c-1, target):\n            return 1\n        board[r][c] = 'X'\n        return 0\n\n    if dfs(0, 0, target_board):\n        moves = ''\n        for r, row in enumerate(board):\n            for c, _ in enumerate(row):\n                moves += str(c) +''\n            moves += '\\n'\n        return moves\n    else:\n        return \"impossible\"'''"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"possible\"\nassert solution(input()) == \"< 1\"\nassert solution(input()) == \"^ 2\"\nassert solution(input()) == \"< 2\"\nassert solution(input()) == \"^ 3\"\nassert solution(input()) == \"< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"possible\"\nassert solution(solution) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\nassert solution('2 3 4 5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 6\\n6 7\\n6 8\\n6 9\\n6 10\\n7 7\\n7 8\\n7 9\\n7 10\\n8 8\\n8 9\\n8 10\\n9 9\\n9 10\\n10 10\\n') == 'possible\\n^ 1\\n^ 3\\n^ 5\\n^ 7\\n^ 9\\n^ 11\\n^ 13\\n^ 15\\n^ 17\\n^ 19\\n^ 21\\n^ 23\\n^ 25\\n^ 27\\n^ 29\\n^ 31\\n^ 33\\n^ 35\\n^ 37\\n^ 39\\n^ 41\\n^ 43\\n^ 45\\n^ 47\\n^ 49\\n^ 51\\n^ 53\\n^ 55\\n^ 57\\n^ 59\\n^ 61\\n^ 63\\n^ 65\\n^ 67\\n^ 69\\n^ 71\\n^ 73\\n^ 75\\n^ 77\\n^ 79\\n^ 81\\n^ 83\\n^ 85\\n^ 87\\n^ 89\\n^ 91\\n^ 93\\n^ 95\\n^ 97\\n^ 99\\n^101\\n^103\\n^105\\n^107\\n^109\\n^111\\n^113\\n^115\\n^117\\n^119\\n^121\\n^123\\n^125\\n^127\\n^129\\n^131\\n^133\\n^135\\n^137\\n^139\\n^141\\n^143\\n^145\\n^147\\n^149\\n^151\\n^153\\n^155\\n^157\\n^159\\n^161\\n^163\\n^165\\n^167\\n^169\\n^171\\n^173\\n^175\\n^177\\n^179\\n^181\\n^183\\n^185\\n^187\\n^189\\n^191\\n^193\\n^195\\n^197\\n^199\\n^201\\n^203\\n^205\\n^207\\n^209\\n^211\\n^213\\n^215\\n^217\\n^219\\n^221\\"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2.0, \"The given solution is incorrect. It should be 2.0.\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.0\", \"Incorrect answer\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\"\"\"\n) == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0, \"The solution should be 2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2.0, \"Test failed\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"2\\n0 200 0\\n0 100 0\\n0 0 100\\n100 100 100\") == \"1.1835725231593782\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\", \"Expected: 4\\nActual: \" + str(solution())\n\nLuka is slacking again during chemistry class, while the teacher is explaining Avogadro\u2019s law.\n\nLuka first drew a table consisting of $3$ rows and $N$ columns. Then he wrote the numbers $1$ to $N$ into the first row in arbitrary order, each number appearing exactly once. In the other two rows he also wrote integers between $1$ and $N$, but didn\u2019t care how many times a number appeared.\n\nLuka can now delete any set of columns from the table. After doing so, he sorts the numbers in each row in ascending order.\n\nHe wants to obtain a table in which all three rows are identical after sorting. Write a program that determines the smallest number of columns he must delete.\n\nFor instance, in the first sample input below, Luka can delete the second, fourth, sixth and seventh columns. After deleting these and sorting each row, all three rows contain the numbers 1, 3 and 5."
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka must delete the second, fourth, sixth, and seventh columns\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Incorrect Output\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Luka cannot delete any column.\"\nassert solution(\"10\\n1 2 3 4 5 6 7\\n8 9 10 11 12 13 14\\n15 16 17 18 19 20 21\") == \"5\", \"Luka must delete 5 columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n2 2 2 2 2 2 2 2\\n3 3 3 3 3 3 3 3\\n4 4 4 4 4 4 4 4\\n5 5 5 5 5 5 5 5\\n6 6 6 6 6 6 6 6\\n7 7 7 7 7 7 7 7\\n8 8 8 8 8 8 8 8\\n9 9 9 9 9 9 9 9\\n\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4, \"Expected 4 columns, got %d\" % solution()"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2', \"Incorrect output\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\"\nassert solution(\"4\\n10 10\\n-10 0\") == \"2\\n3\"\nassert solution(\"4\\n20 20\\n20 20\") == \"3\\n3\"\nassert solution(\"4\\n5 5\\n5 5\") == \"3\\n3\"\nassert solution(\"4\\n5 0\\n0 5\") == \"3\\n3\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('3\\n0 0\\n5 5\\n5 0') == '3'\nassert solution('4\\n-10 0\\n-10 10\\n2 5') == '2'\nassert solution('5\\n-10 0\\n-10 10\\n2 5\\n3 5') == '3'\nassert solution('4\\n-10 0\\n-10 10\\n2 5\\n3 5\\n10 5\\n-10 10\\n-10 0') == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == 2, \"Incorrect output.\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2\\n2'\nprint('All tests passed')"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2', \"Expected output '2', got: {}\".format(solution(input()))"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"5 2\") == \"1\\n\"\nassert solution(\"1 1\") == \"0\\n\"\nassert solution(\"100 1\") == \"313\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5\\n') == '0\\n'\nassert solution('1 10\\n') == '1\\n'\nassert solution('10 1000000\\n') == '3\\n'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"The solution provided is incorrect.\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == 0, \"Test Failed\"\nassert solution(\"2 10\") == 2, \"Test Failed\"\nassert solution(\"10 500\") == 100, \"Test Failed\"\nassert solution(\"501 1000\") == 1, \"Test Failed\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"0\\n\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"6 7\") == \"5\"\nassert solution(\"7 7\") == \"7\"\nassert solution(\"8 9\") == \"8\"\nassert solution(\"9 11\") == \"8\"\nassert solution(\"10 12\") == \"10\"\nassert solution(\"11 14\") == \"11\"\nassert solution(\"12 17\") == \"11\"\nassert solution(\"13 21\") == \"13\"\nassert solution(\"14 25\") == \"14\"\nassert solution(\"15 30\") == \"14\"\nassert solution(\"16 35\") == \"16\"\nassert solution(\"17 42\") == \"17\"\nassert solution(\"18 48\") == \"18\"\nassert solution(\"19 55\") == \"19\"\nassert solution(\"20 63\") == \"20\"\nassert solution(\"21 72\") == \"21\"\nassert solution(\"22 82\") == \"22\"\nassert solution(\"23 93\") == \"23\"\nassert solution(\"24 105\") == \"24\"\nassert solution(\"25 118\") == \"25\"\nassert solution(\"26 132\") == \"26\"\nassert solution(\"27 147\") == \"27\"\nassert solution(\"28 163\") == \"28\"\nassert solution(\"29 180\") == \"29\"\nassert solution(\"30 198\") == \"30\"\nassert solution(\"31 218\") == \"31\"\nassert solution(\"32 239\") == \"32\"\nassert solution(\"33 262\") == \"33\"\nassert solution(\"34 286\") == \"34\"\nassert solution(\"35 311\") == \"35\"\nassert solution(\"36 337\") == \"36\"\nassert solution(\"37 364\") == \"37\"\nassert solution(\"38 393\") == \"38\"\nassert solution(\"39 423\") == \"39\"\nassert solution(\"40 455\") == \"40\"\nassert solution(\"41 488\") == \"41\"\nassert solution(\"42 523\") == \"42\"\nassert solution(\"43 559\") == \"43\"\nassert solution(\"44 596\") == \"44\"\nassert solution(\"45 635\") == \"45\"\nassert solution(\"46 675\") == \"46\"\nassert solution(\"47 717\") == \"47\"\nassert solution(\"48 760\") == \"48\"\nassert solution(\"49 805\") == \"49\"\nassert solution(\"50 852\") == \"50\"\nassert solution(\"51 899\") == \"51\"\nassert solution(\"52 948\") == \"52\"\nassert solution(\"53 998\") == \"53\"\nassert solution(\"54 1049\") == \"54\"\nassert solution(\"55 1102\") == \"55\"\nassert solution(\"56 1157\") == \"56\"\nassert solution(\"57 1214\") == \"57\"\nassert solution(\"58 1273\") == \"58\"\nassert solution(\"59 1333\") == \"59\"\nassert solution(\"60 1395\") == \"60\"\nassert solution(\"61 1458\") == \"61\"\nassert solution(\"62 1523\") == \"62\"\nassert solution(\"63 1590\") == \"63\"\nassert solution(\"64 1659\") == \"64\"\nassert solution(\"65 1730\") == \"65\"\nassert solution(\"66 1803\") == \"66\"\nassert solution(\"67 "
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5\\n') == '0\\n'\nassert solution('10 5\\n') == '0\\n'\nassert solution('100 50\\n') == '10\\n'\nassert solution('1000001 100000\\n') == '510\\n'\nassert solution('10000000000000000000 10000000000000000000\\n') == '10000000000000000000\\n'\n\nfrom typing import List"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 3\\n1 1\\n0 1\\n3 3\\n1 0\\n0 1 0\\n0 0 1\") == \"1 0\\n1 1\\n\"\nassert solution(\"2 3\\n1 1\\n0 1\\n3 3\\n1 0\\n0 1 0\\n0 0 1\\n\") == \"1 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0 0\\n1 1\\n', \"The function should return the correct output.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input: {input_data}, expected output: {expected_output}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\nassert solution(b\"2 3\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0 0\\n1 1\"\nassert solution(b\"2 2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0 0\\n1 1\"\nassert solution(b\"2 2\\n1 1\\n1 1\\n0 1\\n1 1\") == \"0 0\\n1 1\"\nassert solution(b\"2 2\\n1 1\\n1 1\\n0 1\\n1 1\") == \"0 0\\n1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0 0\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50.1\\n\") == \"44.975000\"\nassert solution(\"1 2 0.950000\\n0.700000 51\\n\") == \"44.975000\"\nassert solution(\"1 2 0.950000\\n0.700000 49\\n\") == \"44.975000\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\\n\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"44.975\\n\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"Test Passed\")"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 10 100\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 100\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('1 2 1 1 2 3 1\\n1 1 2\\n1 2 2 2 1\\n1 2 1\\n1 2 2\\n1 2 1\\n') == '1\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE\\n'\nassert solution('1 2 1 1 2 3 1\\n1 1 2\\n1 2 2 2 1\\n1 2 1\\n1 2 2\\n1 2 1\\n') == '1\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\" # Test 1\n\nassert solution(input()) == \"2\" # Test 2\n\nassert solution(input()) == \"IMPOSSIBLE\" # Test 3"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"4 3 1\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4 2 1\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\nassert solution(\"5 2 2\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"1\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 3 1\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4 2 1\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 2 2\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed. Expected {sample_output}, but got {solution(sample_input)}\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\\n1\\n2\") == \"4\\n2\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 4 10\\n0 1\\n10 2\\n2 3\\n3 2\\n4\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 4 10\\n0 1\\n10 2\\n2 3\\n3 2\\n4\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2\\n1 4\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12 13\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12 13 14\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12 13 14 15\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1 2 4 5 6 7 "
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n''') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nassert solution(\"1000 1000\") == \"0.000000\\n\"\nassert solution(\"1 1\\n0.0 0.0\") == \"0.0\\n\"\nassert solution(\"1 1\\n1.0 1.0\") == \"0.0\\n\"\nassert solution(\"1 1\\n1.0 0.0\") == \"0.0\\n\"\nassert solution(\"100 100\\n100 0\\n0 100\\n0 0\") == \"0.000000\\n\"\nassert solution(\"100 100\\n100 0\\n0 100\\n0 0\\n0 0\") == \"0.000000\\n\"\nassert solution(\"100 100\\n100 0\\n0 100\\n0 0\\n0 0\\n0 0\") == \"0.000000\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4.0', \"Solution is incorrect.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4.0\\n', 'Expected Output: 4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\n\nfrom typing import List"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0\\n'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n5.0 -5.0\\n0.0 5.0\\n1.0 0.0\\n0.0 0.0\\n-0.0 1.0\\n0.0 0.0\\n1.0 0.0\\n0.0 0.0') == '6.0\\n'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n5.0 10.0\\n0.0 -5.0\\n0.0 5.0\\n1.0 0.0\\n0.0 0.0\\n-0.0 1.0\\n0.0 0.0\\n1.0 0.0\\n0.0 0.0') == '6.0\\n'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n5.0 10.0\\n0.0 10.0\\n0.0 0.0\\n1.0 0.0\\n0.0 0.0\\n1.0 0.0\\n0.0 0.0\\n') == '12.0\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000\\n'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n100 300\\n200 10\\n100 30\\n100 30\") == \"50000\"\nassert solution(\"5\\n100 300\\n200 10\\n100 30\\n100 30\\n100 30\") == \"130000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\\n\") == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '18000\\n', 'Test failed'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4\n    220 29\n    195 20\n    200 9\n    180 30\n    \"\"\"\n) == \"18000\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    100 20\n    150 15\n    200 20\n    \"\"\"\n) == \"6400\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    200 10\n    150 20\n    120 30\n    160 20\n    250 10\n    \"\"\"\n) == \"21000\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    500 15\n    300 10\n    150 20\n    800 15\n    200 15\n    \"\"\"\n) == \"27000\\n\"\n\nassert solution(\n    \"\"\"\n    7\n    100 20\n    150 15\n    150 20\n    150 20\n    150 20\n    150 20\n    \"\"\"\n) == \"33000\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    50 20\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"5\\n150 100\\n150 50\\n100 200\\n100 100\") == \"5000\"\nassert solution(\"3\\n200 100\\n200 200\\n100 100\") == \"5000\"\nassert solution(\"7\\n1000 500\\n500 500\\n250 500\\n250 250\\n125 125\\n125 62.5\") == \"61375\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"18000\", \"The solution is incorrect.\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"BASKETBALL\\n3\\nBOMB 50\\nSTICK 10\\nPLAYER 20\\nGOLD 5\\n\") == \"IMPOSSIBLE\"\nassert solution(\"BASKETBALL\\n3\\nBOMB 50\\nSTICK 10\\nPLAYER 20\\nGOLD 5\\n\") == \"IMPOSSIBLE\"\nassert solution(\"BASKETBALL\\n3\\nBOMB 50\\nSTICK 10\\nPLAYER 20\\nGOLD 5\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n') == '28'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"28\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\") == 28\nassert solution(\"4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == 28\nassert solution(\"1\\nSTICKY 1\\nSTICKY 2\\nSTICKY 3\\nSTICKY 4\\nSTICKY 5\\nSTICKY 6\\nSTICKY 7\\nSTICKY 8\\nSTICKY 9\\nSTICKY 10\\nSTICKY 11\\nSTICKY 12\\nSTICKY 13\\nSTICKY 14\\nSTICKY 15\\nSTICKY 16\\nSTICKY 17\\nSTICKY 18\\nSTICKY 19\\nSTICKY 20\\nSTICKY 21\\nSTICKY 22\\nSTICKY 23\\nSTICKY 24\\nSTICKY 25\\nSTICKY 26\\nSTICKY 27\\nSTICKY 28\\nSTICKY 29\\nSTICKY 30\\nSTICKY 31\\nSTICKY 32\\nSTICKY 33\\nSTICKY 34\\nSTICKY 35\\nSTICKY 36\\nSTICKY 37\\nSTICKY 38\\nSTICKY 39\\nSTICKY 40\\nSTICKY 41\\nSTICKY 42\\nSTICKY 43\\nSTICKY 44\\nSTICKY 45\\nSTICKY 46\\nSTICKY 47\\nSTICKY 48\\nSTICKY 49\\nSTICKY 50\\nSTICKY 51\\nSTICKY 52\\nSTICKY 53\\nSTICKY 54\\nSTICKY 55\\nSTICKY 56\\nSTICKY 57\\nSTICKY 58\\nSTICKY 59\\nSTICKY 60\\nSTICKY 61\\nSTICKY 62\\nSTICKY 63\\nSTICKY 64\\nSTICKY 65\\nSTICKY 66\\nSTICKY 67\\nSTICKY 68\\nSTICKY 69\\nSTICKY 70\\nSTICKY 71\\nSTICKY 72\\nSTICKY 73\\nSTICKY 74\\nSTICKY 75\\nSTICKY 76\\nSTICKY 77\\nSTICKY 78\\nSTICKY 79\\nSTICKY 80\\nSTICKY 81\\nSTICKY 82\\nSTICKY 83\\nSTICKY 84\\nSTICKY 85\\nSTICKY 86\\nSTICKY 87\\nSTICKY 88\\nSTICKY 89\\nSTICKY 90\\nSTICKY 91\\nSTICKY 92\\nSTICKY 93\\nSTICKY 94\\nSTICKY 95\\nSTICKY 96\\nSTICKY 97\\nSTICKY 98\\nSTICKY 99\\nSTICKY 100\\nSTICKY 101\\nSTICKY 102\\nSTICKY 103\\nSTICKY 104\\nSTICKY 105\\nSTICKY 106\\nSTICKY 107\\nSTICKY 108\\nSTICKY 109\\nSTICKY 110\\nSTICKY 111\\nSTICKY 112\\nSTICKY 113\\nSTICKY 114\\nSTICKY 115\\nSTICKY 116\\nSTICKY 117\\nSTICKY 118\\nSTICKY 119\\nSTICKY 120\\nSTICKY 121\\nSTICKY 122\\nSTICKY 123\\nSTICKY 124\\nSTICKY 125\\nSTICKY 126\\nSTICKY 127\\nSTICKY 128\\nSTICKY 129\\nSTICKY 130\\nSTICKY 131\\nSTICKY 132\\nSTICKY 133\\nSTICKY 134\\nSTICKY 135\\"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"BUYSTICKERS\\n4\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 1"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected output.\\nInput: {input()}\\nExpected Output: {expected}\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    ''') == '''\nINDV 1\nINDV 2\nINDV 4\nINDV 3\nINDV 5\n'''"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.414213"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Actual output: {solution}\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_file) == output_file, \"Expected output:\\n\" + output_file + \"\\nGot:\\n\" + solution(input_file)"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15\nassert solution(\"4\\n1 1 5\\n3 1 5\\n2 2\\n5 0\\n1 2\") == 12\nassert solution(\"5\\n1 1 5\\n3 1 5\\n2 2\\n5 0\\n1 3\") == 18"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"5 0\\n1 1\\n1 2\\n1 3\") == \"10\\n\"\nassert solution(\"5 2\\n1 3\\n1 2\\n1 1\") == \"23\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example.in').read()) == '15\\n'\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nassert solution(\"1 2 5\\n3 "
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10\\n2 3 5\\n3 2 10') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10\\n2 3 5\\n3 2 10\\n4 5 15\\n5 4 20\\n6 5 25') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10\\n2 3 5\\n3 2 10\\n4 5 15\\n5 4 20\\n6 5 25\\n7 6 30\\n8 7 35\\n9 8 40') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10\\n2 3 5\\n3 2 10\\n4 5 15\\n5 4 20\\n6 5 25\\n7 6 30\\n8 7 35\\n9 8 40\\n10 9 45') == '15'\nassert solution('1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n6 4 10\\n2 3 5\\n3 2 10\\n4 5 15\\n5 4 20\\n6 5 25\\n7 6 30\\n8 7 35\\n9 8 40\\n10 9 45\\n11 10 50\\n12 11 55\\n13 12 60\\n14 13 65\\n15 14 70') == '15'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5 3 3 4') == '''.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\nfrom typing import List"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Testing the function with sample inputs\\nassert solution(\\\"5 5 3 3 4\\\") == \\\"..BBC\\n..A.C"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'5 5 3 3 4') == '''\n.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"\n5 5 3 3 4\n\"\"\") == \"\"\"\n.....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC..A.C....C@DDDD\"\nassert solution(\"5 5 3 3 10\") == \".....@DDDD\"\nassert solution(\"5 5 3 3 3\") == \"..BBC..A.C....C@DDDD\"\nassert solution(\"5 5 3 3 5\") == \"..BBC..A.C....C@DDDD\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == ['001', '001', '001', '111', '200']\n\nassert solution('''\n5 4\n12345\n00001\n00010\n00100\n10000\n''') == ['00001', '00010', '00100', '10000', '20000']\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == ['001', '001', '001', '111', '200']\n\nassert solution('''\n5 4\n12345\n00001\n00010\n00100\n10000\n''') == ['00001', '00010', '00100', '10000', '20000']"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000\\n100\\n101\\n110\\n100') == '001\\n001\\n001\\n111\\n100\\n101\\n110\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"19 20\\n17 15 14 13 7 2\", \"Expected output is incorrect\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"5/2\\n4/3\\n6/5\\n6/7\\n8/9\") == \"4 6 8\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/18\\n19/2\\n19/17\\n19/18\\n\") == \"impossible\"\nassert solution(\"20/18\\n19/2\\n19/17\\n19/18\\n\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n') == '19 20\\n17 15 14 13 7 2\\n'\nassert solution('19/13\\n19/14\\n19/15\\n19/16\\n19/17\\n') == 'impossible'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"5/6\\n10/4\\n5/3\\n6/1\\n5/4\\n7/2\\n6/5\\n\") == \"5 4 3 2 1\"\nassert solution(\"2/1\\n1/2\\n1/3\\n2/2\\n1/4\\n1/5\\n\") == \"1 2 3 4 5\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n\") == \"1 2 3 4 5 6 7\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n\") == \"1 2 3 4 5 6 7 8\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n1/11\\n\") == \"1 2 3 4 5 6 7 8 9 10 11\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n1/11\\n1/12\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n1/11\\n1/12\\n1/13\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n1/11\\n1/12\\n1/13\\n1/14\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\"\nassert solution(\"1/1\\n1/2\\n1/3\\n1/4\\n1/5\\n1/6\\n1/7\\n1/8\\n1/9\\n1/10\\n1/11\\n1/12\\n1/13\\n1/14\\n1/15\\n\") == \"1 2 3 4 5"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/19\\n19/18\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/18\\n20/19\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/18\\n20/19\\n19/20\\n19/19\\n19/18\\n19/17\\n19/16\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/18\\n20/19\\n19/20\\n19/19\\n19/18\\n19/17\\n19/16\\n19/15\\n19/14\\n19/13\\n19/12\\n19/11\\n19/10\\n19/9\\n19/8\\n19/7\\n19/6\\n19/5\\n19/4\\n19/3\\n19/2\\n19/1\\n19\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n18/11\\n19/5\\n20/9\\n19/16\\n\") == \"impossible\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'\nprint('impossible')\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"2 3\\n1 1\\n1 2\\n1 3\\n1 4\\n2 2\\n2 3\\n3 1\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n5 4\\n6 1\\n6 2\\n6 3\\n6 4\\n7 1\\n7 2\\n7 3\\n7 4\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"4 4\\n2 2\\n3 3\\n2 0\\n1 0\\n2 0\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"2 2\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1 2 3 4\\n1 1 5 6\\n2 2 2 2 2 2\\n3 0 3 3 3 3\\n4 1 2 3 4 5\\n5 2 3 4 5 6\\n6 3 4 5 6 7\\n7 4 5 6 7 8\\n8 5 6 7 8 9\") == \"possible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"4 2\\n3\") == 0\nassert solution(\"4 2\\n1\\n2\") == 2\nassert solution(\"4 2\\n3\\n1\") == 3\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4'\nassert solution('4 2\\n3\\n3\\n') == '2'\nassert solution('4 2\\n2\\n2\\n3\\n') == '1'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4'\nassert solution('4 3\\n3\\n1\\n') == '3'\nassert solution('4 3\\n3\\n2\\n') == '4'\nassert solution('4 3\\n3\\n3\\n') == '4'\nassert solution('4 3\\n3\\n4\\n') == '4'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2\\n2') == 4\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: expected output: {expected_output}, actual output: {solution(input())}\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n1\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n3\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n1\\n2\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n2\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n2\\n2\\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Mirko\\n', 'Incorrect Output'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"1 5\\n2 4\\n3 5\\n\") == \"Slavko\"\nassert solution(\"5 1\\n6 2\\n7 3\\n\") == \"Slavko\"\nassert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Mirko\", \"The solution should return Mirko.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Mirko\", \"Please implement the `solution` function to solve the problem.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Mirko\"\nassert solution(stdin) == \"Slavko\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n6\\n34\\n38') == '2 4', \"Your solution is incorrect.\"\nprint(\"All integers M are: 2 4\")"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} is incorrect, expected {expected}.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 4\\n\", \"Test case failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2 4\"\nassert solution(6) == \"2 4 8\"\nassert solution(34) == \"2 4 8 12 16 20 24\"\nassert solution(38) == \"2 4 8 12 16 20 24 30 36 42 48\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '2 4', \"Expected Output: '2 4', but got: {}\".format(solution(3))\nassert solution(6) == '2 4 6', \"Expected Output: '2 4 6', but got: {}\".format(solution(6))\nassert solution(34) == '2 4 6 8 10', \"Expected Output: '2 4 6 8 10', but got: {}\".format(solution(34))\nassert solution(38) == '2 4 6 8 10 12', \"Expected Output: '2 4 6 8 10 12', but got: {}\".format(solution(38))"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '2 4'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\"\nassert solution(\"10\\n50\\n100\\n200\\n\") == \"2 4 6\"\nassert solution(\"50\\n250\\n500\\n750\\n\") == \"2 4 6\"\nassert solution(\"5000000000\\n1000000000\\n1500000000\\n2000000000\\n3000000000\\n4000000000\\n5000000000\\n\") == \"2 4 6\"\n\nfrom typing import List"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\", \"Sample Output 1\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\", \"Sample Output 2\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The test case failed\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == 12\nassert solution('5\\n8 10 2 1000000 30556926000') == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == \"12\\n\"\nassert solution(stdin=open('sample_1.txt', 'r')) == \"12\\n\"\nassert solution(stdin=open('sample_2.txt', 'r')) == \"12\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\\n\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\\n\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 7 0\\n9 5 0\\n6 3 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 1 0\\n\") == \"NO\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 1 0\\n8 0 0\\n\") == \"NO\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 1 0\\n8 0 0\\n8 1 1\\n\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n1\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n\nassert solution(\"10 8\\n1\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\"\n\nassert solution(\"7 8\\n2\\n1 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\"\n\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n\nassert solution(\"10 8\\n1\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES\\n'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\\n\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"10 10\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\"\nassert solution(\"5 5\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"100 100\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"NO\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == \"Impossible\"\nassert solution(4, 1) == \"3 2\"\nassert solution(5, 3) == \"2 4 5 1 3\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5 6 1 2 3 4\\n\"\nassert solution(stdin) == \"Impossible\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"7 2\\n3 4 5 6 1 2\") == \"Impossible\\n\"\nassert solution(\"6 0\\n3 4 5 6 1 2\") == \"Impossible\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution did not match expected output. \\nExpected output: {expected_output} \\nReceived output: {solution(input())}\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2 8 4') == '20512'\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"3 2 7 9\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"0 0 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"5 0 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"5 5 5 5\") == \"55555\"\nassert solution(\"0 1 2 3\") == \"123\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"20512\", \"Incorrect output\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Expected: '20512', Actual: '{}'\".format(solution(\"5 2 8 4\"))\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2 8 4') == '20512'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"7 0 0 0\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 2 1\") == \"1951\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1000000 1 2 3') == 'IMPOSSIBLE'\nassert solution('500000 1 2 3') == 'IMPOSSIBLE'\nassert solution('5 2 8 40') == 'IMPOSSIBLE'\nassert solution('5 2 8 0') == 'IMPOSSIBLE'\nassert solution('5 2 8 -4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == \"2\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == \"3\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == 2\nassert solution(stdin=open('input.txt', 'r')) == 3\n\nfrom typing import List"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 2\nassert solution(open(\"example1.txt\", \"r\")) == 2\nassert solution(open(\"example2.txt\", \"r\")) == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '3'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    stdin = open(\"input.txt\", \"r\").read()\\n    n, k = map(int, stdin.split())\\n    strings = []\\n    for _ in range(n):\\n        s = input().strip()\\n        strings.append(s)\\n    longest_common_subsequence(strings, n, k)\\n\\nif __name__ == \"__main__\":\\n    main()\\n'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"2 3\") == \"3\\n\"\nassert solution(\"3 4\") == \"4\\n\"\nassert solution(\"5 6\") == \"4\\n\"\nassert solution(\"7 8\") == \"5\\n\"\nassert solution(\"9 10\") == \"6\\n\"\nassert solution(\"11 12\") == \"7\\n\"\nassert solution(\"13 14\") == \"8\\n\"\nassert solution(\"15 16\") == \"9\\n\"\nassert solution(\"17 18\") == \"10\\n\"\nassert solution(\"19 20\") == \"11\\n\"\nassert solution(\"21 22\") == \"12\\n\"\nassert solution(\"23 24\") == \"13\\n\"\nassert solution(\"25 26\") == \"14\\n\"\nassert solution(\"27 28\") == \"15\\n\"\nassert solution(\"29 30\") == \"16\\n\"\nassert solution(\"31 32\") == \"17\\n\"\nassert solution(\"33 34\") == \"18\\n\"\nassert solution(\"35 36\") == \"19\\n\"\nassert solution(\"37 38\") == \"20\\n\"\nassert solution(\"39 40\") == \"21\\n\"\nassert solution(\"41 42\") == \"22\\n\"\nassert solution(\"43 44\") == \"23\\n\"\nassert solution(\"45 46\") == \"24\\n\"\nassert solution(\"47 48\") == \"25\\n\"\nassert solution(\"49 50\") == \"26\\n\"\nassert solution(\"51 52\") == \"27\\n\"\nassert solution(\"53 54\") == \"28\\n\"\nassert solution(\"55 56\") == \"29\\n\"\nassert solution(\"57 58\") == \"30\\n\"\nassert solution(\"59 60\") == \"31\\n\"\nassert solution(\"61 62\") == \"32\\n\"\nassert solution(\"63 64\") == \"33\\n\"\nassert solution(\"65 66\") == \"34\\n\"\nassert solution(\"67 68\") == \"35\\n\"\nassert solution(\"69 70\") == \"36\\n\"\nassert solution(\"71 72\") == \"37\\n\"\nassert solution(\"73 74\") == \"38\\n\"\nassert solution(\"75 76\") == \"39\\n\"\nassert solution(\"77 78\") == \"40\\n\"\nassert solution(\"79 80\") == \"41\\n\"\nassert solution(\"81 82\") == \"42\\n\"\nassert solution(\"83 84\") == \"43\\n\"\nassert solution(\"85 86\") == \"44\\n\"\nassert solution(\"87 88\") == \"45\\n\"\nassert solution(\"89 90\") == \"46\\n\"\nassert solution(\"91 92\") == \"47\\n\"\nassert solution(\"93 94\") == \"48\\n\"\nassert solution(\"95 96\") == \"49\\n\"\nassert solution(\"97 98\") == \"50\\n\"\nassert solution(\"99 100\") == \"51\\n\"\nassert solution(\"101 102\") == \"52\\n\"\nassert solution(\"103 104\") == \"53\\n\"\nassert solution(\"105 106\") == \"54\\n\"\nassert solution(\"107 108\") == \"55\\n\"\nassert solution(\"109 110\") == \"56\\n\"\nassert solution(\"111 112\") == \"57\\n\"\nassert solution(\"113 114\") == \"58\\n\"\nassert solution(\"115 116\") == \"59\\n\"\nassert solution(\"117 118\") == \"60\\n\"\nassert solution(\"119 "
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 1\\n3 1\\n3 2\\n\") == \"3\\n\"\nassert solution(\"1 2\\n2 2\\n1 1\\n1 3\\n\") == \"2\\n\"\nassert solution(\"2 2\\n2 1\\n2 1\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n3 2\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n1 3\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n3 3\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n2 1\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n2 3\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n1 4\n\"\"\") == \"7\\n\"\n\nassert solution(\"\"\"\n4 3\n\"\"\") == \"7\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution(\"1 2\") == \"3\"\\n# assert solution(\"3 3\") == \"9\"\\n# assert solution(\"4 3\") == \"18\"\\n# assert solution(\"5 3\") == \"42\"\\n# assert solution(\"6 3\") == \"126\"\\n# assert solution(\"7 3\") == \"312\"\\n# assert solution(\"8 3\") == \"621\"\\n# assert solution(\"9 3\") == \"1098\"\\n# assert solution(\"10 3\") == \"1800\"\\n# assert solution(\"11 3\") == \"3040\"\\n# assert solution(\"12 3\") == \"5968\"\\n# assert solution(\"13 3\") == \"13088\"\\n# assert solution(\"14 3\") == \"24592\"\\n# assert solution(\"15 3\") == \"42184\"\\n# assert solution(\"16 3\") == \"72144\"\\n# assert solution(\"17 3\") == \"131584\"\\n# assert solution(\"18 3\") == \"244928\"\\n# assert solution(\"19 3\") == \"433904\"\\n# assert solution(\"20 3\") == \"710208\"\\n# assert solution(\"21 3\") == \"1317312\"\\n# assert solution(\"22 3\") == \"2432744\"\\n# assert solution(\"23 3\") == \"4314224\"\\n# assert solution(\"24 3\") == \"7111008\"\\n# assert solution(\"25 3\") == \"13199040\"\\n# assert solution(\"26 3\") == \"24286016\"\\n# assert solution(\"27 3\") == \"42699328\"\\n# assert solution(\"28 3\") == \"71678064\"\\n# assert solution(\"29 3\") == \"132520816\"\\n# assert solution(\"30 3\") == \"243881632\"\\n# assert solution(\"31 3\") == \"428854392\"\\n# assert solution(\"32 3\") == \"719617088\"\\n# assert solution(\"33 3\") == \"1328477760\"\\n# assert solution(\"34 3\") == \"2436903232\"\\n# assert solution(\"35 3\") == \"4296523104\"\\n# assert solution(\"36 3\") == \"7170521408\"\\n# assert solution(\"37 3\") == \"13200242720\"\\n# assert solution(\"38 3\") == \"24309266560\"\\n# assert solution(\"39 3\") == \"42843482912\"\\n# assert solution(\"40 3\") == \"71175447360\"\\n# assert solution(\"41 3\") == \"131355084096\"\\n# assert solution(\"42 3\") == \"242190378656\"\\n# assert solution(\"43 3\") == \"424200134624\"\\n# assert solution(\"44 3\") == \"704454277472\"\\n# assert solution(\"45 3\") == \"1305655228608\"\\n# assert solution(\"46 3\") == \"2415377132352\"\\n# assert solution(\"47 3\") == \"4176154426080\"\\n# assert solution(\"48 3\") == \"7012883056384\"\\n# assert solution(\"49 3\") == \"12938324327680\"\\n# assert solution(\"50 3\") == \"2408"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"  # pass\nassert solution(\"4 4\") == \"6\"  # pass\nassert solution(\"2 3\") == \"7\"  # pass\nassert solution(\"2 4\") == \"10\"  # pass"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"Output should be 3, not {}\".format(solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\"))"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nfor _ in range(test_cases):\n    N, K = map(int, stdin.split())\n    disagreements = list(map(int, stdin.split()))\n    \n    # Find the largest possible comittee\n    max_committee = N\n    for i in range(N):\n        # Count the number of parties disagreeing with this party member\n        count = 0\n        for j in range(N):\n            if j!= i and disagreements[i] == disagreements[j]:\n                count += 1\n        # If the number of parties disagreeing with this party member is greater than the largest comittee size, update the largest comittee size\n        if count > max_committee:\n            max_committee = count\n            \n    print(max_committee)"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3\n    '''\n) == '3\\n'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"3\n\"\"\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n'\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3, \"The correct output is 3, but it is: \" + solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3')"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"5\\n3\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"4\\n7\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n3 1\\n3 2\\n4 3\\n4 4\\n4 5\\n5 1\\n5 2\\n6 3\\n6 4\\n6 5\\n6 6\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\\n7 7\\n7 8\") == \"NO\"\nassert solution(\"5\\n8\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n5 7\\n5 8\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n6 7\\n6 8\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\\n7 7\\n7 8\\n8 1\\n8 2\\n8 3\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\") == \"YES\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 'YES'\nassert solution(11) == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test case {t} failed. Expected output: '{output}', but got: '{stdin}'.\" for t, (stdin, output) in enumerate(test_cases)"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'''\n    2\n    6\n    1 1\n    1 3\n    2 2\n    2 3\n    3 1\n    3 2\n    3\n    ''') == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1''') == 'YES'\n\nassert solution('''6\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n3 3\n4 1\n4 2\n5 1\n5 2\n6 1\n6 2\n''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    6\n    1 1\n    1 3\n    2 2\n    2 3\n    3 1\n    3 2\n    3\n    ''') == 'YES'\n\nassert solution('''\n    2\n    6\n    1 1\n    1 2\n    2 1\n    2 2\n    2\n    ''') == 'NO'\n\nassert solution('''\n    3\n    6\n    1 1\n    1 3\n    2 2\n    2 3\n    3 1\n    3 2\n    3\n    ''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3''') == 'YES'\nassert solution('''3\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 1\n7 7\n8 8\n9 9\n10 10\n1 1\n1 2\n2 1\n3 1\n4 2\n5 2\n6 3\n7 3\n8 3\n9 4\n10 4\n11 5\n12 5\n13 6\n14 6\n15 7\n16 7\n17 8\n18 8\n19 9\n20 9\n21 10\n22 10\n23 11\n24 11\n25 12\n26 12\n27 13\n28 13\n29 14\n30 14\n31 15\n32 15\n33 16\n34 16\n35 17\n36 17\n37 18\n38 18\n39 19\n40 19\n41 20\n42 20\n43 21\n44 21\n45 22\n46 22\n47 23\n48 23\n49 24\n50 24\n51 25\n52 25\n53 26\n54 26\n55 27\n56 27\n57 28\n58 28\n59 29\n60 29\n61 30\n62 30\n63 31\n64 31\n65 32\n66 32\n67 33\n68 33\n69 34\n70 34\n71 35\n72 35\n73 36\n74 36\n75 37\n76 37\n77 38\n78 38\n79 39\n80 39\n81 40\n82 40\n83 41\n84 41\n85 42\n86 42\n87 43\n88 43\n89 44\n90 44\n91 45\n92 45\n93 46\n94 46\n95 47\n96 47\n97 48\n98 48\n99 49\n100 49\n101 50\n102 50\n103 51\n104 51\n105 52\n106 52\n107 53\n108 53\n109 54\n110 54\n111 55\n112 55\n113 56\n114 56\n115 57\n116 57\n117 58\n118 58\n119 59\n120 59\n121 60\n122 60\n123 61\n124 61\n125 62\n126 62\n127 63\n128 63\n129 64\n130 64\n131 65\n132 65\n133 66\n134 66\n135 67\n136 67\n137 68\n138 68\n139 69\n140 69\n141 70\n142 70\n143 71\n144 71\n145 72\n146 72\n147 73\n148 73\n14"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n4 5\\n1 1\\n1 2\\n2 1\\n\") == \"NO\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 3.000000000, \"Expected output: 3.000000000\"\n\nSolution:\n\nTo solve this problem, we can use a greedy approach. In each iteration of the while loop, we pick a gift at random from the remaining gifts in the bag and add it to the current order. We then check if the current order is the last order in the bag. If it is, we move on to the next iteration. If it is not, we can either choose a gift with equal probability or the last gift in the order. We repeat this process until all gifts in the bag are taken out.\n\nTo calculate the expected number of gifts taken out of the bag, we can iterate over the remaining gifts in the bag and keep track of the number of gifts taken. If we take out all the gifts in the bag, the expected number of gifts taken will be 0. We can then use this number to calculate the expected total number of gifts taken.\n\nWe can use Python to implement this solution. Here's the code:\n\n```python\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3.000000000\", \"Your solution is incorrect.\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n2\n\"\"\"\n) == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3.000000000\", \"Incorrect output\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3.000000000\"\nassert solution(\"1\") == \"1.000000000\"\nassert solution(\"5\") == \"5.000000000\"\nassert solution(\"1000\") == \"1000.000000000\"\nassert solution(\"1001\") == \"1001.000000000\"\nassert solution(\"10000\") == \"10000.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"3.000000000\\n\"\n\nHere's the Python code to implement the solution:\n\n```python\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\"\nassert solution(\"3\\n\") == \"6.000000000\"\nassert solution(\"1001\\n\") == \"1001.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3.000000000', 'Incorrect output for sample input 2.'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\nassert solution(\"5 8\\n2 1 3\") == \"2\\n\"\nassert solution(\"3 5 8\\n1 1 1\") == \"3\\n\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\\n\"\nassert solution(\"2 2 1\\n2 2 1\") == \"1\\n\"\nassert solution(\"2 2 2\\n2 2 2\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3\\n') == 1\nassert solution('1 3\\n4\\n5\\n') == 2\nassert solution('1 2\\n3\\n6\\n') == 1\nassert solution('1 3\\n4\\n5\\n6\\n') == 2\nassert solution('1 3\\n4\\n5\\n6\\n7\\n') == 2"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"1 3\\n10\") == \"2\"\nassert solution(\"2 5\\n3 2 1 1\\n3 1 2 3\") == \"3\"\nassert solution(\"3 4\\n1 1 1 1\\n2 2 3 4 3\") == \"2\"\nassert solution(\"4 6\\n2 2 1 1 1\\n2 2 1 1 1\\n2 2 1 1 1\") == \"2\"\nassert solution(\"5 6\\n2 2 1 1 1\\n2 2 1 1 1\\n2 2 1 1 1\\n2 2 1 1 1\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\") == 1, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2) == 1, \"Your code is not correct.\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 2\\n3\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"1 2 3\\n2 2 3\\n3 2 3\\n4 2 3\\n5 2 3\\n6 2 3\") == \"1\\n2\\n3\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3 4 5\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    1 3 4\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    0 2 2 3 2\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    1 3 2\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    1 2 4\n    '''\n) == '3\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n2\\n3\\n1\\n\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution( \"\"\"\n        3 4 5\n        1 3 4\n        0 2 2 3 2\n        1 3 2\n        1 2 4\n        1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\"\n\nassert solution( \"\"\"\n        3 4 5\n        1 3 4\n        0 2 2 3 2\n        1 3 2\n        1 2 4\n        1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\"\n\nassert solution( \"\"\"\n        3 4 5\n        1 3 4\n        0 2 2 3 2\n        1 3 2\n        1 2 4\n        1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 4 5\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 2 2 3 2\\n1 3 2') == '3\\n2\\n3\\n1'\nassert solution('1 3 2') == '3\\n2\\n3\\n1'\nassert solution('1 2 4') == '1\\n2\\n3\\n1'\nassert solution('0 2 2 3 2\\n1 3 2\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n2\\n3\\n1\", \"Test Case 1 Failed\"\n\nassert solution(input()) == \"3\\n2\\n3\\n1\", \"Test Case 2 Failed\"\n\nassert solution(input()) == \"3\\n2\\n3\\n1\", \"Test Case 3 Failed\"\n\nassert solution(input()) == \"3\\n2\\n3\\n1\", \"Test Case 4 Failed\"\n\nassert solution(input()) == \"3\\n2\\n3\\n1\", \"Test Case 5 Failed\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(stdin: str) == \"0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"2\\nHelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin: str) == \"2\\nAdd.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(stdin: str) == \"0\\n\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(test_input) == test_output, f\"Test failed. Expected output: {test_output}, but got: {solution(test_input)}\"\n\ntest_input = \"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\"\n\ntest_output = \"\"\"\n2\nHelloWorld.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1 HelloWorld.c 2 Add.c\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\nHello World.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n2\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\\\"SUM %d\\\", sum);\\n}\\n\\nint Main() {\\n  printf(\\\"Hello %d\\\");\\n  printf(\\\"THE END\\\");\\n}\\n\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"**\\*END***\\nHelloWorld.c\\n\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\") == {\"HelloWorld.c\", \"int Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\", \"def solution(stdin: str) -> str:\\n\\tpass\\n\"}\n\nassert solution(r\"**\\*END***\\n\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\") == {\"int Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\", \"int Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\", \"int Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\"}\n\nassert solution(r\"**\\*END***\\n\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d\\\\n\\\",i)\\n}\\n\\n**\\*END***\\nint Main() { \\n\\tprintf(\\\"Hello %d"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == ['HelloWorld.c', 'THE END']\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n''') == ['HelloWorld.c']\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == ['THE END']\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == ['THE END']\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == ['THE END']"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == 2\n\nassert solution(r'''\n3\nHello.c\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\nFile1.c\nint Main() {\n  printf(\"File1\\n\");\n}\n***END***\nFile2.c\nint Main() {\n  printf(\"File2\\n\");\n}\n***END***\n''') == 2\n\nassert solution(r'''\n4\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nFile1.c\nint Main() {\n  printf(\"File1\\n\");\n}\n***END***\nFile2.c\nint Main() {\n  printf(\"File2\\n\");\n}\n***END***\nFile3.c\nint Main() {\n  printf(\"File3\\n\");\n}\n***END***\nFile4.c\nint Main() {\n  printf(\"File4\\n\");\n}\n***END***\n''') == 0\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n5\nFile1.c\nint Main() {\n  printf(\"File1\\n\");\n}\n***END***\nFile2.c\nint Main() {\n  printf(\"File2\\n\");\n}\n***END***\nFile3.c\nint Main() {\n  printf(\"File3\\n\");\n}\n***END***\nFile4.c\nint Main() {\n  printf(\"File4\\n\");\n}\n***END***\nFile5.c\nint Main() {\n  printf(\"File5\\n\");\n}\n***END***\n''') == 5\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n3\nFile1.c\nint Main() {\n  printf(\"File1\\n\");\n}\n***END***\nFile2.c\nint Main() {\n  printf(\"File2\\n\");\n}\n***END***\nFile3.c\nint Main() {\n  printf(\"File3\\n\");\n}\n***END***\n''') == 2\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n3\nFile1.c\nint Main() {\n  printf(\"File1\\n\");\n}\n***END***\nFile2.c\nint Main() {\n  printf(\"File2\\n\");\n}\n***END***\nFile3.c\nint Main() {\n  printf(\"File3\\n\");\n}\n***END***\n4\nFile4.c\nint Main() {\n  printf(\"File4\\n\");\n}\n***END***\n''') == 2\n\nassert solution(r'''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i);}\") == 1, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100;printf(\\\"Hello %d\\\", i);}\") == 2, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i); int i=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; printf(\\\"Hello %d\\\", i);}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; printf(\\\"Hello %d\\\", i); int i=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i); printf(\\\"Hello %d\\\", i);}\") == 2, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i); printf(\\\"Hello %d\\\", i); int i=100;}\") == 2, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; printf(\\\"Hello %d\\\", i); int j=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i); int i=100; int j=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; printf(\\\"Hello %d\\\", i); int k=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; printf(\\\"Hello %d\\\", i);}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {printf(\\\"Hello %d\\\", i); int i=100; int j=100; int k=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; printf(\\\"Hello %d\\\", i); int l=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; printf(\\\"Hello %d\\\", i);}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; printf(\\\"Hello %d\\\", i); int m=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; int m=100; printf(\\\"Hello %d\\\", i);}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; int m=100; int n=100;}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; int m=100; int n=100; printf(\\\"Hello %d\\\", i);}\") == 0, \"The code snippet is not found in the repository.\"\nassert solution(stdin=\"int Main() {int i=100; int j=100; int k=100; int l=100; int m=100; int n=100; printf(\\\"Hello %d\\\", i); int o=1"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\"\nassert solution() == \"2 Add.c\\ndef solution(stdin: str) -> str:\"\nassert solution() == \"0\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2\\n'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n2\\n2\"\nassert solution() == \"1\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\nassert solution('3 3\\n2 1 2\\n4 2 1\\n4 4 1') == '1\\n1\\n2'\nassert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 2') == '1\\n1\\n2'\nassert solution('3 3\\n2 1 2\\n4 2 1\\n4 4 2') == '1\\n1\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n2\\n2\\n2\"\nassert solution(input()) == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3 3\n2 2 2\n4 2 1\n4 4 1) == \"1\\n2\\n2\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('100 110 4\\n150 190 16') == '5'\nassert solution('5 100 4\\n200 180 12') == '5'\nassert solution('1000 2000 10000') == '1000'\nassert solution('100 200 300\\n200 300 400') == '400'\nassert solution('100 100 100\\n100 200 200') == '200'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5\\n', \"Your solution is incorrect!\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5\\n'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\n\nassert solution('''\n3 3\n(1 2) (1 3) (1 4) (1 5) (1 6) (1 7)\n....\n....\n....\n....\n....\n....\n''') == 1\n\nassert solution('''\n6 6\n(1 1) (2 2) (2 3) (2 4) (3 4) (3 5) (3 6)\n...#\n...#\n...#\n...#\n...#\n...#\n''') == 26\n\nassert solution('''\n4 4\n(3 3) (3 4) (3 5) (3 6)\n...#\n...#\n...#\n...#\n...#\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 26\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 5)\n..#..\n..#..\n..#..\n..#..\n..#..\n''') == 1\n\nassert solution('''\n5 5\n(1 1) (1 2) (1 3) (1 4) (1 "
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (3 1)\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test case {i + 1} failed. Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '26', 'The solution is not correct.'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_data.txt', 'r').read()) == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == 26"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(2 5) (5 3)\") == \"26\"\nassert solution(\"(2 5) (5 4)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (4 4)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (1 1)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (1 2)\") == \"26\"\nassert solution(\"(2 5) (1 3)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (1 4)\") == \"26\"\nassert solution(\"(2 5) (1 5)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (1 6)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (1 7)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (3 1)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (4 1)\") == \"26\"\nassert solution(\"(2 5) (5 1)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (6 1)\") == \"IMPOSSIBLE\"\nassert solution(\"(2 5) (7 1)\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26'\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"success\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"success\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(f\"Correct! Output: {output}\")"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2 2\n    1 2\n    3 3\n    5 2 2\n    5 2 2\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    2 2 2\n    1 2\n    3 3\n    5 2 2\n    5 2 2\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    1 1 2\n    1 1\n    1 1\n    1 1\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 2 1\\n1 1\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 2 1\\n1 1\\n3 3\\n5 2 2\\n5 2 3\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n') == 'possible'\n\nassert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n6 4 4\\n') == 'impossible'\n\nassert solution('1 1\\n2 3\\n4 5\\n6 7\\n8 9\\n') == 'impossible'\n\nassert solution('1 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, \"Your code is not correct. Please check the examples and input/output format.\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"1 1 2\\n1 2 1\\n-1 1 2\\n1 2 3\\n1 3 2\\n1 4 1\\n1 5 2\\n1 6 1\\n1 7 2\\n1 8 1\\n1 9 2\\n1 10 1\\n1 11 2\\n1 12 1\\n1 13 2\\n1 14 1\\n1 15 2\\n1 16 1\") == \"3\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Error: The function should return 0.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == 0\nprint(\"All tests passed.\")"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'\n\nassert solution('6 4\\n1 1 1\\n2 2 1\\n3 3 1\\n4 4 1\\n5 5 1\\n6 6 1') == '2\\n'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'\nassert solution('2 2\\n1 1 1\\n1 1 2\\n1 1 2\\n1 1 2') == '4\\n'\nassert solution('4 2\\n1 1 1\\n1 1 2\\n1 1 2\\n1 1 2') == '6\\n'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    3 2\n    353\n    '''\n) == '3\\n353\\n'\n\nassert solution(\n    '''\n    4 2\n    1234\n    '''\n) == '4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(353) == \"3\", \"Test case 1 failed.\"\nassert solution(1313) == \"4\", \"Test case 2 failed.\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12 30 45 3 11') == 'NO', \"Expected 'NO', got '{}' instead.\".format(solution('12 30 45 3 11'))\nassert solution('12 0 1 12 1') == 'YES', \"Expected 'YES', got '{}' instead.\".format(solution('12 0 1 12 1'))\nassert solution('3 47 0 4 9') == 'YES', \"Expected 'YES', got '{}' instead.\".format(solution('3 47 0 4 9'))"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"The first example is incorrect.\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"The second example is incorrect.\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"The third example is incorrect.\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == 3\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == 2\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == 0"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=str(input())) == \"4\"\nassert solution(stdin=str(input())) == \"6\"\nassert solution(stdin=str(input())) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, got {solution(stdin=input())}\"\n\nimport math"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, \"Input: {}, Output: {}, \\nSolution: {}, \\nInput: {}\\nOutput: {}\".format(input, output, solution(input), input, output)"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 1\\n2 0 1\\n4 0 1') == '4\\n'\nassert solution('0 0 2\\n3 0 2\\n6 0 2') == '6\\n'\nassert solution('0 0 2\\n2 0 2\\n1 1 2') == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == 8\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\\n\") == \"4\\n\"\n\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\\n\") == \"6\\n\"\n\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\\n\") == \"8\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4, \"Expected 4, got {}\".format(solution())"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n2 4 6 8 10 14 10 6\") == \"YES\\n\"\nassert solution(\"6 6 6 6 6 6 6 6\\n2 4 6 8 10 14 10 6\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\", \"Test 1 failed.\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\", \"Test 2 failed.\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"YES\", \"Test 3 failed.\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"NO\", \"Test 4 failed.\"\nassert solution(\"7 4 4 7 7 10 10 7\") == \"YES\", \"Test 5 failed.\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\"\nassert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"cslnb\", \"Your solution is not correct\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n1\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\nassert solution(\"1\\n2 3 4\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5\\n1 5 3') == 2\nassert solution('1 2\\n1') == 1\nassert solution('1 1\\n1') == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\") == 2\nassert solution(\"1 2\") == 1\nassert solution(\"1 1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=solution) == \"2\"\nassert solution(stdin=\"1 2\") == \"1\"\nassert solution(stdin=\"1 1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2'\nassert solution('1 2\\n1\\n') == '1'\nassert solution('1 1\\n1\\n') == '0'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1\\n'\nassert solution(10) == '-1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"-1 0 1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"-1 0 1\"\nassert solution(5) == \"1\"\nassert solution(6) == \"-1 0 1\"\nassert solution(7) == \"1\"\nassert solution(8) == \"-1 0 1\"\nassert solution(9) == \"1\"\nassert solution(10) == \"-1 0 1\"\nassert solution(11) == \"1\"\nassert solution(12) == \"-1 0 1\"\nassert solution(13) == \"1\"\nassert solution(14) == \"-1 0 1\"\nassert solution(15) == \"1\"\nassert solution(16) == \"-1 0 1\"\nassert solution(17) == \"1\"\nassert solution(18) == \"-1 0 1\"\nassert solution(19) == \"1\"\nassert solution(20) == \"-1 0 1\"\nassert solution(21) == \"1\"\nassert solution(22) == \"-1 0 1\"\nassert solution(23) == \"1\"\nassert solution(24) == \"-1 0 1\"\nassert solution(25) == \"1\"\nassert solution(26) == \"-1 0 1\"\nassert solution(27) == \"1\"\nassert solution(28) == \"-1 0 1\"\nassert solution(29) == \"1\"\nassert solution(30) == \"-1 0 1\"\nassert solution(31) == \"1\"\nassert solution(32) == \"-1 0 1\"\nassert solution(33) == \"1\"\nassert solution(34) == \"-1 0 1\"\nassert solution(35) == \"1\"\nassert solution(36) == \"-1 0 1\"\nassert solution(37) == \"1\"\nassert solution(38) == \"-1 0 1\"\nassert solution(39) == \"1\"\nassert solution(40) == \"-1 0 1\"\nassert solution(41) == \"1\"\nassert solution(42) == \"-1 0 1\"\nassert solution(43) == \"1\"\nassert solution(44) == \"-1 0 1\"\nassert solution(45) == \"1\"\nassert solution(46) == \"-1 0 1\"\nassert solution(47) == \"1\"\nassert solution(48) == \"-1 0 1\"\nassert solution(49) == \"1\"\nassert solution(50) == \"-1 0 1\"\nassert solution(51) == \"1\"\nassert solution(52) == \"-1 0 1\"\nassert solution(53) == \"1\"\nassert solution(54) == \"-1 0 1\"\nassert solution(55) == \"1\"\nassert solution(56) == \"-1 0 1\"\nassert solution(57) == \"1\"\nassert solution(58) == \"-1 0 1\"\nassert solution(59) == \"1\"\nassert solution(60) == \"-1 0 1\"\nassert solution(61) == \"1\"\nassert solution(62) == \"-1 0 1\"\nassert solution(63) == \"1\"\nassert solution(64) == \"-1 0 1\"\nassert solution(65) == \"1\"\nassert solution(66) == \"-1 0 1\"\nassert solution(67) == \"1\"\nassert solution(68) == \"-1 0 1\"\nassert solution(69) == \"1\"\nassert solution(70) == \"-1 0 1\"\nassert solution(71) == \"1\"\nassert solution(72) == \"-1 0 1\"\nassert solution(73) == \"1\"\nassert solution(74) == \"-1 0 1\"\nassert solution(75) == \"1\"\nassert solution(76) == \"-1 0 1\"\nassert solution(77) == \"1\"\nassert solution(78) == \"-1 0 1\"\nassert solution(79) == \"1\"\nassert solution(80) == \"-1 "
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(\"3\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"4\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"5\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"6\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"7\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"8\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"9\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"10\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"11\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"12\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"13\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"14\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"15\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"16\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"17\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"18\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"19\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"20\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"21\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"22\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"23\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"24\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"25\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"26\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"27\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"28\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"29\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"30\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"31\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"32\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"33\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"34\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"35\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"36\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"37\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"38\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"39\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"40\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"41\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"42\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"43\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"44\") == \"-1\\n-1\\n1\\n1\\n\"\nassert solution(\"45\") == \"-1\\n-1\\n1"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1\\n0 1\\n0\\n1\\n'\nassert solution('2\\n') == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"1\\n-1 0 1\"\nassert solution(3) == \"2\\n-1 0 1 0\"\nassert solution(4) == \"3\\n-1 0 1 0 1\"\nassert solution(5) == \"1\"\nassert solution(6) == \"-1 0 1\"\nassert solution(7) == \"-1 0 1 0\"\nassert solution(8) == \"-1 0 1 0 1\"\nassert solution(9) == \"-1 0 1 0 1 0\"\nassert solution(10) == \"-1 0 1 0 1 0 1\"\nassert solution(11) == \"-1 0 1 0 1 0 1 0\"\nassert solution(12) == \"-1 0 1 0 1 0 1 0 1\"\nassert solution(13) == \"-1 0 1 0 1 0 1 0 1 0\"\nassert solution(14) == \"-1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(15) == \"-1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(16) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(17) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(18) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(19) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(20) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(21) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(22) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(23) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(24) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(25) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(26) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(27) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(28) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1\"\nassert solution(29) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0\"\nassert solution(30) == \"-1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 "
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\"\nassert solution(3) == \"-1\\n0 1\\n1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == 1\nassert solution(11) == 0\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == -1\nassert solution(5) == -1\nassert solution(6) == -1"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 1 2 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '1 2 2 1\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3  \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2  \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 1 2 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '1 3 2\\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 1 2 3\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: output is '{solution(input())}', expected '{expected_output}'\"\n\ntest_case = 1\nn, k, m, a = map(int, input().split())\ng = list(map(int, input().split()))"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 \\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 \\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\nassert solution(\"10\\n5\\n\") == \"3\\n\"\nassert solution(\"10\\n6\\n\") == \"6\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('110\\n2\\n') == '3\\n'\nassert solution('111111011\\n2\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11.084259940083\\n\"\nassert solution(input()) == \"33.121375178000\\n\"\nassert solution(input()) == \"33.121375178000\\n\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Solution is {solution}, but expected output is {expected_output}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '11.084259940083', \"Expected 11.084259940083, got {}\".format(solution(stdin))"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\\n\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == expected_output, f\"Expected: {expected_output}, Received: {solution(solution_input)}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '11.084259940083\\n'\nassert solution(stdin) == '33.121375178000\\n'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 1 1 2 0 0\n    3\n    1 1\n    2 1\n    2 3\n    \"\"\"\n) == \"11.084259940083\"\n\nassert solution(\n    \"\"\"\n    5 0 4 2 2 0\n    5\n    5 2\n    3 0\n    5 5\n    3 5\n    3 3\n    \"\"\"\n) == \"33.121375178000\"\n\nassert solution(\n    \"\"\"\n    3 1 1 2 0 0\n    4\n    1 1\n    2 1\n    2 3\n    \"\"\"\n) == \"11.146893211916\"\n\nassert solution(\n    \"\"\"\n    3 1 1 2 0 0\n    5\n    5 2\n    3 0\n    5 5\n    3 5\n    3 3\n    \"\"\"\n) == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11.084259940083\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n8 5\\n\\nOutput\\n2\\n\\nInput\\n8 15\\n\\nOutput\\n1\\n\\nInput\\n7 20\\n\\nOutput\\n0\\n\\nInput\\n1000000000000 1000000000001\\n\\nOutput\\n500000000000') == '2\\n'\nassert solution('Input\\n8 15\\n\\nOutput\\n1\\n\\nInput\\n7 20\\n\\nOutput\\n0\\n\\nInput\\n1000000000000 1000000000001\\n\\nOutput\\n500000000000') == '1\\n'\nassert solution('Input\\n7 20\\n\\nOutput\\n0\\n\\nInput\\n1000000000000 1000000000001\\n\\nOutput\\n500000000000') == '0\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case+1} failed\"\nprint(\"Test case passed\")\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n2\n\"\"\"\n\nassert solution == \"\"\"\n1\n\"\"\"\n\nassert solution == \"\"\"\n0\n\"\"\"\n\nassert solution == \"\"\"\n500000000000\n\"\"\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\", \"Your solution is incorrect. It should return 2, but it returns {}\".format(solution(stdin))"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Solution ({solution.__name__}) does not match the expected output.\" for stdin, expected in test_cases"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 10\\n01000\\n') == '11'\nassert solution('5 10 1\\n01000\\n') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 1 10\\n01000') == '11\\n'\nassert solution('5 10 1\\n01000') == '2\\n'\nassert solution('7 2 3\\n1111111\\n') == '0\\n'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '11'\nassert solution(stdin) == '2'\nassert solution(stdin) == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 2 3\") == \"-1\"\nassert solution(\"5 2 4\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"3 1 4\") == \"-1\"\nassert solution(\"3 1 5\") == \"-1\"\nassert solution(\"3 1 6\") == \"-1\"\nassert solution(\"3 1 7\") == \"-1\"\nassert solution(\"3 1 8\") == \"-1\"\nassert solution(\"3 1 9\") == \"-1\"\nassert solution(\"3 1 10\") == \"-1\"\nassert solution(\"3 1 11\") == \"-1\"\nassert solution(\"3 1 12\") == \"-1\"\nassert solution(\"3 1 13\") == \"-1\"\nassert solution(\"3 1 14\") == \"-1\"\nassert solution(\"3 1 15\") == \"-1\"\nassert solution(\"3 1 16\") == \"-1\"\nassert solution(\"3 1 17\") == \"-1\"\nassert solution(\"3 1 18\") == \"-1\"\nassert solution(\"3 1 19\") == \"-1\"\nassert solution(\"3 1 20\") == \"-1\"\nassert solution(\"3 1 21\") == \"-1\"\nassert solution(\"3 1 22\") == \"-1\"\nassert solution(\"3 1 23\") == \"-1\"\nassert solution(\"3 1 24\") == \"-1\"\nassert solution(\"3 1 25\") == \"-1\"\nassert solution(\"3 1 26\") == \"-1\"\nassert solution(\"3 1 27\") == \"-1\"\nassert solution(\"3 1 28\") == \"-1\"\nassert solution(\"3 1 29\") == \"-1\"\nassert solution(\"3 1 30\") == \"-1\"\nassert solution(\"3 1 31\") == \"-1\"\nassert solution(\"3 1 32\") == \"-1\"\nassert solution(\"3 1 33\") == \"-1\"\nassert solution(\"3 1 34\") == \"-1\"\nassert solution(\"3 1 35\") == \"-1\"\nassert solution(\"3 1 36\") == \"-1\"\nassert solution(\"3 1 37\") == \"-1\"\nassert solution(\"3 1 38\") == \"-1\"\nassert solution(\"3 1 39\") == \"-1\"\nassert solution(\"3 1 40\") == \"-1\"\nassert solution(\"3 1 41\") == \"-1\"\nassert solution(\"3 1 42\") == \"-1\"\nassert solution(\"3 1 43\") == \"-1\"\nassert solution(\"3 1 44\") == \"-1\"\nassert solution(\"3 1 45\") == \"-1\"\nassert solution(\"3 1 46\") == \"-1\"\nassert solution(\"3 1 47\") == \"-1\"\nassert solution(\"3 1 48\") == \"-1\"\nassert solution(\"3 1 49\") == \"-1\"\nassert solution(\"3 1 50\") == \"-1\"\nassert solution(\"3 1 51\") == \"-1\"\nassert solution(\"3 1 52\") == \"-1\"\nassert solution(\"3 1 53\") == \"-1\"\nassert solution(\"3 1 54\") == \"-1\"\nassert solution(\"3 1 55\") == \"-1\"\nassert solution(\"3 1 56\") == \"-1\"\nassert solution(\"3 1 57\") == \"-1\"\nassert solution(\"3 1 58\") == \"-1\"\nassert solution(\"3 1 59\") == \"-1\"\nassert solution(\"3 1 60\") == \"-1\"\nassert solution(\"3 1 61\") == \"-1\"\nassert solution(\"3 1 62\") == \"-1\"\nassert solution(\"3 1 63\") == \"-1\"\nassert solution(\"3 1 64\") == \"-1\"\nassert solution(\"3 1 65\") == \"-1\"\nassert solution(\"3 1 66\") == \"-1"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('1 1 1') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 1 3\\n5 1 3\\n\") == \"-1\\n\"\nassert solution(\"3 1 2\\n5 1 1\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 1 3\\n5 1 2\\n\") == \"-1\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 1\\n19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(input().split())) == \"2 1\"\nassert solution(solution(input().split())) == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('3 2 3') == '-1'\nassert solution('5 1 1') == '-1'\nassert solution('2 1 1') == '-1'\nassert solution('5 1 1') == '-1'\nassert solution('3 1 2') == '-1'\nassert solution('2 2 1') == '-1'\nassert solution('5 1 1') == '-1'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 2') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n3 1 1\\n\\nOutput\\n2 1\\nInput\\n5 1 2\\n\\nOutput\\n19 5') == '2 1\\n19 5'\nassert solution('Input\\n3 1 1\\n\\nOutput\\n2 1\\nInput\\n5 1 2\\n\\nOutput\\n19 5') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7, 1) == 6\nassert solution(10, 2) == 4"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\"\n\nSolution:\n```python\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\\n\"\nassert solution(\"10 2\\n7 1\\n\") == \"6\\n4\\n\"\nassert solution(\"7 1\\n10 2\\n\") == \"6\\n4\\n\"\nassert solution(\"7 1\\n10 2\\n\") == \"6\\n4\\n\"\nassert solution(\"7 1\\n10 2\\n\") == \"6\\n4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\nThe provided solutions are correct for the given problem statement. However, the output for the second example is incorrect. The value of F_2(10) is incorrect as the recursive call to F_2(10) returns 0 instead of the expected 4. This issue needs to be addressed as the solution is correct for the given problem statement."
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n149.154.167.99\\n149.154.167.120/29\"\nassert solution() == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('') == -1\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29') == 2\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31') == 2\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1') == -1\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution does not match expected output. Expected: {expected_output}, Received: {solution}\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output. Expected: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''1\n-149.154.167.99\n''') == '1\\n0.0.0.0/0'\nassert solution('''4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '2\\n149.154.167.99\\n149.154.167.120/29'\nassert solution('''5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '2\\n195.0.0.0/8\\n127.0.0.4/30'\nassert solution('''2\n+127.0.0.1/32\n-127.0.0.1\n''') == '-1'\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-149.154.167.99\") == \"1\\n0.0.0.0/0\"\nassert solution(\"+149.154.167.100/30\") == \"1\\n149.154.167.100/30\"\nassert solution(\"+149.154.167.128/25\") == \"1\\n149.154.167.128/25\"\nassert solution(\"-149.154.167.120/29\") == \"1\\n149.154.167.120/29\"\nassert solution(\"-127.0.0.4/31\") == \"1\\n127.0.0.4/31\"\nassert solution(\"+127.0.0.8\") == \"1\\n127.0.0.8\"\nassert solution(\"+127.0.0.0/30\") == \"1\\n127.0.0.0/30\"\nassert solution(\"-195.82.146.208/29\") == \"1\\n195.82.146.208/29\"\nassert solution(\"-127.0.0.6/31\") == \"1\\n127.0.0.6/31\"\nassert solution(\"+127.0.0.1/32\") == \"-1\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    return \"def solution(stdin: str) -> str:\\n    return \"-1\"\\n\"'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\nassert solution('11\\n31415926535') == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11\\n00000000008\\n') == '1\\n'\nassert solution('22\\n0011223344556677889988\\n') == '2\\n'\nassert solution('11\\n31415926535\\n') == '0\\n'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n'\n\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n') == '-1\\n'\n\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\", \"Test case 1\"\n\nassert solution(stdin) == \"-1\\n\", \"Test case 2\"\n\nassert solution(stdin) == \"3\\nrow 1\\nrow 2\\nrow 3\\n\", \"Test case 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: Expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1\nprint(solution())  # Solution: -1"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == 'Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n'\nassert solution('Input\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n') == 'Output\\n-1\\n'\nassert solution('Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"100 50 10 15\") == \"NO\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"5 2 1 3\") == \"NO\"\nassert solution(\"10 3 12 4\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 3\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 3\") == \"YES\"\nassert solution(\"3 1 1 1\") == \"YES\"\nassert solution(\"3 1 1 3\") == \"YES\"\nassert solution(\"4 1 1 1\") == \"YES\"\nassert solution(\"4 1 1 3\") == \"YES\"\nassert solution(\"5 1 1 1\") == \"YES\"\nassert solution(\"5 1 1 3\") == \"YES\"\nassert solution(\"6 1 1 1\") == \"YES\"\nassert solution(\"6 1 1 3\") == \"YES\"\nassert solution(\"7 1 1 1\") == \"YES\"\nassert solution(\"7 1 1 3\") == \"YES\"\nassert solution(\"8 1 1 1\") == \"YES\"\nassert solution(\"8 1 1 3\") == \"YES\"\nassert solution(\"9 1 1 1\") == \"YES\"\nassert solution(\"9 1 1 3\") == \"YES\"\nassert solution(\"10 1 1 1\") == \"YES\"\nassert solution(\"10 1 1 3\") == \"YES\"\nassert solution(\"11 1 1 1\") == \"YES\"\nassert solution(\"11 1 1 3\") == \"YES\"\nassert solution(\"12 1 1 1\") == \"YES\"\nassert solution(\"12 1 1 3\") == \"YES\"\nassert solution(\"13 1 1 1\") == \"YES\"\nassert solution(\"13 1 1 3\") == \"YES\"\nassert solution(\"14 1 1 1\") == \"YES\"\nassert solution(\"14 1 1 3\") == \"YES\"\nassert solution(\"15 1 1 1\") == \"YES\"\nassert solution(\"15 1 1 3\") == \"YES\"\nassert solution(\"16 1 1 1\") == \"YES\"\nassert solution(\"16 1 1 3\") == \"YES\"\nassert solution(\"17 1 1 1\") == \"YES\"\nassert solution(\"17 1 1 3\") == \"YES\"\nassert solution(\"18 1 1 1\") == \"YES\"\nassert solution(\"18 1 1 3\") == \"YES\"\nassert solution(\"19 1 1 1\") == \"YES\"\nassert solution(\"19 1 1 3\") == \"YES\"\nassert solution(\"20 1 1 1\") == \"YES\"\nassert solution(\"20 1 1 3\") == \"YES\"\nassert solution(\"21 1 1 1\") == \"YES\"\nassert solution(\"21 1 1 3\") == \"YES\"\nassert solution(\"22 1 1 1\") == \"YES\"\nassert solution(\"22 1 1 3\") == \"YES\"\nassert solution(\"23 1 1 1\") == \"YES\"\nassert solution(\"23 1 1 3\") == \"YES\"\nassert solution(\"24 1 1 1\") == \"YES\"\nassert solution(\"24 1 1 3\") == \"YES\"\nassert solution(\"25 1 1 1\") == \"YES\"\nassert solution(\"25 1 1 3\") == \"YES\"\nassert solution(\"26 1 1 1\") == \"YES\"\nassert solution(\"26 1 1 3\") == \"YES\"\nassert solution(\"27 1 1 1\") == \"YES\"\nassert solution(\"27 1 1 3\") == \"YES\"\nassert solution(\"28 1 1 1\") == \"YES\"\nassert solution(\"28 1 1"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"10000 1 10000 1\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8, 6, 4, 5) == \"YES\"\nassert solution(8, 6, 4, 6) == \"NO\"\nassert solution(10, 3, 11, 4) == \"NO\"\nassert solution(4, 2, 1, 4) == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'NO'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == \"YES\"\nassert solution(str(input())) == \"NO\"\nassert solution(str(input())) == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 12"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed for input data {input_data}\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_samples, stdout_samples)"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 2\n1 3\n1 4\n\"\"\") == \"6\"\nassert solution(\"\"\"7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == \"12\"\nassert solution(\"\"\"2 2\n1 2\n2 1\n\"\"\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n\\n2 2\\n1 2\\n2 1\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n1 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"-1\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\\n\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\n\nassert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\\n') == 'NO'\n\nassert solution('3 2\\n1 0\\n1 1\\n0 1\\n') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 5) == \"Yes\"\nassert solution(2, 7) == \"No\"\nassert solution(3, 5) == \"Yes\"\nassert solution(1, 3) == \"No\"\nassert solution(5, 2) == \"Yes\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([4, 5], \"Yes\"),\n    ([2, 7], \"No\"),\n]"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4 5\\n2 3 5 12\\nOutput\\nYes\\nInput\\n2 7\\n2 3\\nOutput\\nNo\") == \"Yes\\nNo\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 1') == 6\nassert solution('6 4 2') == 8\nassert solution('2 3 4') == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"The expected output is 6. Please check your implementation.\"\nassert solution() == 8, \"The expected output is 8. Please check your implementation.\"\nassert solution() == -1, \"The expected output is -1. Please check your implementation.\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 4 1\") == \"6\"\nassert solution(stdin=\"6 4 2\") == \"8\"\nassert solution(stdin=\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\", \"The expected output is 6, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3,4,1) == 6\nassert solution(6,4,2) == 8\nassert solution(2,3,4) == -1\nassert solution(6,4,1) == 6\nassert solution(6,4,2) == 8\nassert solution(2,3,4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 2 4 3\n''') == '2'\nassert solution('''\n3\n4 1 1\n''') == '2'\nassert solution('''\n4\n0 3 0 4\n''') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"-1\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 2 4 3\\n') == '2\\n'\nassert solution('3\\n4 1 1\\n') == '2\\n'\nassert solution('4\\n0 3 0 4\\n') == '0\\n'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"Testcase failed\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n10000011') == '5'\nassert solution('2\\n01') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\\n4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == '3', \"Expected Output: 3, but got: \" + solution(sample_input1)\nassert solution(sample_input2) == '-1', \"Expected Output: -1, but got: \" + solution(sample_input2)\nassert solution(sample_input3) == '1', \"Expected Output: 1, but got: \" + solution(sample_input3)"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '3\\n'\nassert solution(open('sample_input2.txt', 'r').read()) == '-1\\n'\nassert solution(open('sample_input3.txt', 'r').read()) == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'\nassert solution('4\\n3 2 1\\n') == '2'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n2\\n1 2 3\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 0\\n2') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n0') == '0'\nassert solution('2\\n2 2\\n1') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0'\nassert solution('2\\n2 2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9) == '504'\nassert solution(7) == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 504, \"The output should be 504, but it is actually {}.\".format(solution())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n\nn = int(input())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\", \"Test 1\"\nassert solution(\"7\") == \"210\", \"Test 2\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\", \"Please enter a valid input.\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"504\", \"Incorrect output\"\nassert solution(\"7\") == \"210\", \"Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '3 4\\n'\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"1 1\\n\"\n\nassert solution(\"\"\"\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\"\"\") == \"1 1\\n\"\n\nassert solution(\"\"\"\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\"\"\") == \"1 1\\n\"\n\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\"\"\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\nOutput\\n3 4\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution(\"Input\\n3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\nOutput\\n3 4\\n\\n# Test cases\\nprint(solution(\"Input\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\nOutput\\n3 4\\n\\n# Test cases\\nprint(solution(\"Input\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\nOutput\\n3 4\\n\\n# Test cases\\nprint(solution(\"Input\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\nOutput\\n1 1\\n1 1\\n1 1\\n1 1\\n\\nInput\\n4\\n0 0 5 5\\n0 0"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4\\n18 55 16 17') == 'YES'\nassert solution(stdin='6\\n40 41 43 44 44 44') == 'NO'\nassert solution(stdin='8\\n5 972 3 4 1 4 970 971') == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(8) == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n18 55 16 17\\n') == 'YES'\nassert solution('6\\n40 41 43 44 44 44\\n') == 'NO'\nassert solution('8\\n5 972 3 4 1 4 970 971\\n') == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"NO\" # Test case 1\nassert solution() == \"YES\" # Test case 2\nassert solution() == \"YES\" # Test case 3\nassert solution() == \"YES\" # Test case 4\nassert solution() == \"NO\" # Test case 5"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\\n9\"\nassert solution(input()) == \"Output\\n10\"\nassert solution(input()) == \"Output\\n11\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9\"\nassert solution() == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\n') == '9\\n'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10\\n'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\\n\", solution(input()) == \"9\\n\"\nassert solution(input()) == \"10\\n\", solution(input()) == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\nOutput\\n9\\n\\nInput\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\\nOutput\\n10\\n') == '9\\n10\\n'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_solution, f\"The solution does not match the expected solution. The solution is {solution}, but the expected solution is {expected_solution}.\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Vasya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'Vasya'\nassert solution(7) == 'Petya'\nassert solution(12) == 'Vasya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '0'\nassert solution(open('input1.txt', 'r')) == '0'\nassert solution(open('input2.txt', 'r')) == '2'\nassert solution(open('input3.txt', 'r')) == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n\\nInput\\n1 5 3\\n1 3\\n1 1\\n1 5\\n\\nInput\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\\nOutput\\n0\\n\\nOutput\\n2\\n\\nOutput\\n1\\n') == 'Output\\n0\\n\\nOutput\\n2\\n\\nOutput\\n1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}\\nOutput: {output()}\\nInput: {input()}\"\n\nn, m, q = map(int, input().split())\nelements = list(map(int, input().split()))\n\nelements.sort()\n\nelements_used = set()\n\nfor i in range(len(elements) - q):\n    elements_used.add(elements[i])\n\nelements_purchased = set()\n\nfor i in range(len(elements) - q):\n    if elements_used.intersection(elements_purchased):\n        elements_purchased.add(elements[i])\n\nelements_missing = {i for i in range(1, n * m + 1) if i not in elements_used}\n\nelements_missing_purchased = {i for i in elements_missing if i in elements_purchased}\n\nelements_missing_remaining = set()\n\nfor i in elements_missing:\n    if i in elements_missing_purchased:\n        elements_missing_remaining.add(i)\n\nelements_missing_purchased_remaining = {i for i in elements_missing_purchased if i in elements_missing_remaining}\n\nelements_to_purchase = elements_missing_purchased_remaining"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test {t+1} failed. Input: {input()}, Output: {output()}, Diff: {output() - expected}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output\\n0\\n'\nassert solution('Input') == 'Output\\n2\\n'\nassert solution('Input') == 'Output\\n1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"test1.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"test2.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"test3.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test {i+1} failed: expected {output()}, got {solution(input())}\"\nfor i, input_ in enumerate(inputs):\n    output_ = solution(input_)\n    print(f\"Test {i+1}:\")\n    print(input_)\n    print(f\"Output: {output_}\")\n    print()"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"3\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"1000000\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"1\"\nassert solution(\"4\\nA\\nA\\nB\\nA\") == \"0\"\nassert solution(\"4\\nA\\nA\\nA\\nA\") == \"1\"\nassert solution(\"4\\nA\\nA\\A\\A\") == \"0\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"1\"\nassert solution(\"4\\nA\\A\\A\\A\") == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"4\\nA\\nA\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nA\\nA\\nA\\nB\\nB\\nA\") == \"3\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\xA\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\nassert solution(\"4\\xA\\xB\\xB\\xB\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\n\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\n\\n\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\n\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\\n\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\\nA\\nA\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\\nA\\nA\\n\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\\nA\\nA\\nA\\nA\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Expected '2', got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(example1) == \"2\"\nassert solution(example2) == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 4\\n') == '2\\n'\nassert solution('5\\n2 3 4 6 7\\n') == '3\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n2 3 6\\n\") == \"3\\n\"\nassert solution(\"3\\n2 3 2\\n\") == \"2\\n\"\nassert solution(\"3\\n2 4 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\"\n\nfrom math import gcd"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Incorrect output\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '11', 'Output not correct'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nAABC\\n\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\", \"Test case 1 failed.\"\nassert solution(\"5\\nABBBA\") == \"12\", \"Test case 2 failed.\"\nassert solution(\"5\\nABCCC\") == \"13\", \"Test case 3 failed.\"\nassert solution(\"5\\nA\") == \"14\", \"Test case 4 failed.\"\nassert solution(\"5\\nC\") == \"15\", \"Test case 5 failed.\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '11\\n', 'The solution is not correct.'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3, \"Output should be 3\"\nassert solution() == 3, \"Output should be 3\"\nassert solution() == 3, \"Output should be 3\"\nassert solution() == 3, \"Output should be 3\"\nassert solution() == -1, \"Output should be -1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed. Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\\n\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\\n\\n\") == \"-1\\n\"\nassert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\\n\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\\n\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed: expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}.\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of cards N: \")) == \"2\", \"Test Case 1 failed\"\nassert solution(input(\"Enter the cards x_1 x_2... x_N: \")) == \"2\", \"Test Case 2 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"1\\n\"\nassert solution(\"4\\n5 6 7 8 9\") == \"4\\n\"\nassert solution(\"5\\n6 7 8 9 10\") == \"5\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5\") == \"2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the number of cards: \")) == \"2\", \"The minimum number of operations required to achieve the objective is 2.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test failed\"\nassert solution(\"2\\n6 7\") == \"2\\n\", \"Test failed\"\nassert solution(\"2\\n3 2\") == \"2\\n\", \"Test failed\"\nassert solution(\"2\\n4 3\") == \"2\\n\", \"Test failed\"\nassert solution(\"2\\n1 2\") == \"2\\n\", \"Test failed\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test Case 1 failed\"\nassert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test Case 2 failed\"\nassert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test Case 3 failed\"\nassert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test Case 4 failed\"\nassert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test Case 5 failed\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(solution(\"2 2 2 1\")) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(solution(\"1 2 3 4\")) == \"NO\"\nassert solution(solution(\"2 2 2 3\")) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\\n\") == \"NO\"\nassert solution(\"2 2 2 3\\n\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\nprint('YES')\nprint(' '.join(str(x) for x in input().split()))"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed for input {input()}, expected {output()}\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1, 1) == 0\nassert solution(1, 2, 1) == 666666672\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Your solution is incorrect. The output is {output}, but you should have written {stdin}.\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"0\" # Correct output\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6 4\") == \"6\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Your solution is incorrect\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"6\\n1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\\n\"\nassert solution(\"6\\n7 2 3 1 5 4\") == \"5\\n\"\nassert solution(\"6\\n7 2 3 1 5\") == \"4\\n\"\nassert solution(\"6\\n7 2 3 1\") == \"4\\n\"\nassert solution(\"6\\n7 2 3\") == \"3\\n\"\nassert solution(\"6\\n7 2\") == \"3\\n\"\nassert solution(\"6\\n7\") == \"2\\n\"\nassert solution(\"6\\n7\") == \"2\\n\"\nassert solution(\"6\\n\") == \"0\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5', 'Incorrect output'\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"9\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"2\\n3 4 5\") == \"0\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Your solution is incorrect.\"\nassert solution(\"4 2 2 6\") == \"3\", \"Your solution is incorrect.\"\nassert solution(\"3 7 4 6\") == \"1\", \"Your solution is incorrect.\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3 failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter the values of a, b, l, and r:\\n\")) == 2, \"Expected answer: 2\"\nassert solution(input(\"Enter the values of a, b, l, and r:\\n\")) == 3, \"Expected answer: 3\"\nassert solution(input(\"Enter the values of a, b, l, and r:\\n\")) == 1, \"Expected answer: 1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == 2\nassert solution(\"4 2 2 6\") == 3\nassert solution(\"3 7 4 6\") == 1"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == 2\nassert solution(\"4 2 2 6\") == 3\nassert solution(\"3 7 4 6\") == 1"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'''\n1 2 5\n''') == '2\\n'\n\nassert solution(r'''\n-1 4 15\n''') == '4\\n'\n\nassert solution(r'''\n0 -1 5\n''') == '-1\\n'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10000000000000000000) == \"2\"\nassert solution(-10000000000000000000) == \"-1\"\nassert solution(0) == \"-1\"\nassert solution(1) == \"2\"\nassert solution(-2) == \"-1\"\nassert solution(3) == \"2\"\nassert solution(5) == \"2\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution('6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution('6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nfor test_case in [(\"6 1\\n2 1 2 3 4 3\\n\", \"2\"), (\"6 2\\n2 1 2 3 4 3\\n\", \"0\"), (\"6 1\\n1 1 2 2 3 3\\n\", \"2\")]:\n    assert solution(test_case[0]) == test_case[1]"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == expected_output, \"Test failed\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"NO\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000000000\") == \"17\"\nassert solution(\"1234567890\") == \"23\"\nassert solution(\"9876543210\") == \"11\"\nassert solution(\"9999999999\") == \"1\"\nassert solution(\"10000000001\") == \"91\"\nassert solution(\"5000000001\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\\n\"\nassert solution(\"10000000000\") == \"91\\n\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('35') == '17', \"Error 1: Incorrect result.\"\nassert solution('10000000000') == '91', \"Error 2: Incorrect result.\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AHA') == 'YES', \"Test 1 Failed\"\nassert solution('Z') == 'NO', \"Test 2 Failed\"\nassert solution('XO') == 'NO', \"Test 3 Failed\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test case 1 failed\"\nassert solution(\"Z\") == \"NO\", \"Test case 2 failed\"\nassert solution(\"XO\") == \"NO\", \"Test case 3 failed\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 5\\n') == '0'\nassert solution('3\\n1 2 5\\n') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1\"\nassert solution(1) == \"0\"\nassert solution(2) == \"1\"\nassert solution(3) == \"1\"\nassert solution(4) == \"0\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == 0\nassert solution(\"3\\n1 2 5\\n\") == 1"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 5') == '0\\n'\nassert solution('3\\n1 2 5') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test 1 Failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test 2 Failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test 3 Failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test 4 Failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"case 1\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"case 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"case 3\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"case 4\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n\\n31\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60   \\n29\\n       31\\n        \\n        \\n        \") == \"1\\n\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n\\t29\\n\\t\\t31\\n\\t\\t\\t\\t\\t\\t\\t\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 3 7\\n') == '1'\nassert solution('10   3   7\\n') == '1'\nassert solution('314\\n159 265\\n358\\n') == '0'\nassert solution('22 19 3\\n') == '1'\nassert solution('60\\n29\\n\\n31\\n\\n\\n\\n') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\" 60  \\n 29 \\n  31 \\n     \\n     \\n   \") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\\n29\\n\\n\\n\\n\\n\\n\\n\\n31\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n358\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\", \"Test 1\"\nassert solution(\"10   3   7\") == \"1\\n\", \"Test 2\"\nassert solution(\"314\") == \"0\\n\", \"Test 3\"\nassert solution(\"22 19 3\") == \"1\\n\", \"Test 4\"\nassert solution(\"   60\\n29\\n\\n   31\\n\\n\\n    \\n\") == \"1\\n\", \"Test 5\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n 29\\n   \\n   \\n 31\\n\\n\\n\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n31\\n35\\n\") == \"1\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1\\n') == '9\\n'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"9\", \"There are nine pairs (l, r) that satisfies the condition: (1, 1), (2, 2),..., (9, 9).\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\", \"Test case 1 failed\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\\n\", \"The code is not correct\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9', \"The result should be 9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '9\\n'\nassert solution('2\\n') == '18\\n'\nassert solution('100\\n') == '1024\\n'\nassert solution('1000\\n') == '75371\\n'\nassert solution('1000000\\n') == '335553125\\n'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '9\\n', \"Incorrect Output\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\\n\") == \"4\\n3\\n-1\"\nassert solution(\"5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n3\\n-1\\n\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\\n-1\\n\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 4\nassert solution(5) == 3\nassert solution(4) == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4', \"Output should be '4', but instead it is '{}'.\".format(solution())"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\") == 4\nassert solution(\"Input\\n5\\n5 12 9 16 48\") == 3\nassert solution(\"Input\\n4\\n1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: Expected {expected}, got {solution(input())}.\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 6 28 9\n''') == '4'\n\nassert solution('''\n5\n5 12 9 16 48\n''') == '3'\n\nassert solution('''\n4\n1 2 4 8\n''') == '-1'\n\nassert solution('''\n5\n3 6 28 1 2\n''') == '3'\n\nassert solution('''\n4\n1 2 4 8\n''') == '-1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"2\\n\"\nassert solution(7) == \"1\\n\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == 2, \"Incorrect output\"\nassert solution(7) == 1, \"Incorrect output\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect answer. Expected 2, but got {}\".format(solution())"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\\n\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\\n\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Output should be 2\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2, \"Ujan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate. The path consists of 4 consecutive tiles, numbered from 1 to 4. Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers i and j, such that |j - i| is a divisor of n greater than 1, they have the same color. Formally, the colors of two tiles with numbers i and j should be the same if |i - j| > 1 and n \\bmod |i - j| = 0 (where x \\bmod y is the remainder when dividing x by y). Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?\"\nassert solution(5) == 5, \"Ujan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate. The path consists of 5 consecutive tiles, numbered from 1 to 5. Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers i and j, such that |j - i| is a divisor of n greater than 1, they have the same color. Formally, the colors of two tiles with numbers i and j should be the same if |i - j| > 1 and n \\bmod |i - j| = 0 (where x \\bmod y is the remainder when dividing x by y). Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?\"\nassert solution(6) == 5, \"Ujan has been lazy lately, but now has decided to bring his yard to good shape. First, he decided to paint the path from his house to the gate. The path consists of 6 consecutive tiles, numbered from 1 to 6. Ujan will paint each tile in some color. He will consider the path aesthetic if for any two different tiles with numbers i and j, such that |j - i| is a divisor of n greater than 1, they have the same color. Formally, the colors of two tiles with numbers i and j should be the same if |i - j| > 1 and n \\bmod |i - j| = 0 (where x \\bmod y is the remainder when dividing x by y). Ujan wants to brighten up space. What is the maximum number of different colors that Ujan can use, so that the path is aesthetic?\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\", \"The maximum number of colors that the path can be painted in is 2\"\nassert solution(\"5\") == \"5\", \"The maximum number of colors that the path can be painted in is 5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, got: {solution(input())}\"\n\ninput = \"\"\"\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n\"\"\"\n\noutput = \"18\\n3 4 \\n1 5 \\n\\n31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\\n4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"18\\n3 4\\n1 5\\n\\n31\\n1 2\\n3 4\\n\\n23\\n1 3 5\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n') == '18\\n3 4\\n1 5\\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n') == '31\\n1 2\\n3 4\\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5\\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"18\\n3 4\\n1 5\\n\"\nassert solution(input()) == \"31\\n1 2\\n3 4\\n\"\nassert solution(input()) == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '18\\n3 4\\n1 5\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"18\\n3 4 \\n1 5 \\n\\n31\\n1 2 \\n3 4 \\n\\n23\\n1 3 5 \\n4\\n\", \"Test failed\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"\n18\n3 4 \n1 5 \n\"\"\"\n\nassert solution(input()) == \"\"\"\n31\n1 2 \n3 4 \n\"\"\"\n\nassert solution(input()) == \"\"\"\n23\n1 3 5 \n4\n\"\"\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aa\") == \"Yes\"\nassert solution(\"ab\") == \"Yes\"\nassert solution(\"ba\") == \"No\"\nassert solution(\"bb\") == \"No\"\nassert solution(\"bc\") == \"No\"\nassert solution(\"cb\") == \"No\"\nassert solution(\"cc\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes\\naa'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"2 1\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"2 1\\n1 2\\n1 3\\n1 4\\n\") == \"Yes\\naa\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n\\n4 3\\n1 2\\n1 3\\n1 4\\n\") == \"Yes\\na\\nb\\nc\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n1 2\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(0) == 7, \"Test 1 failed\"\nassert solution(1) == 19, \"Test 2 failed\"\nassert solution(2) == 87, \"Test 3 failed\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7\\n'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19\\n'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87\\n'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == 7\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == 19\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == 87\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\"\nassert solution(1) == \"7\"\nassert solution(2) == \"19\"\nassert solution(5) == \"87\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"Error: Incorrect solution\"\nassert solution(\"F\") == \"0\", \"Error: Incorrect solution\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"Error: Incorrect solution\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Bulbbasaur') == 1\nassert solution('F') == 0\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == 2"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nbac\\nroc\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"YES\"\nassert solution(\"2 3\\nbcd\\nef\\nghi\\n\") == \"NO\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"NO\"\nassert solution(\"1 3\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"1 2\\nabc\\ndef\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"1 1\\nabc\\nxyz\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\\nghi\") == \"NO\"\nassert solution(\"2 3\\nabc\\nbcd\\nghi\") == \"YES\"\nassert solution(\"2 3\\nabc\\nxyz\\nghi\") == \"YES\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '4', 'Incorrect output'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'\nassert solution('2 100\\n0\\n1') == '2\\n'\nassert solution('1 1\\n0') == '3\\n'\nassert solution('3 1\\n1') == '4\\n'\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4'\nprint('All test cases passed')"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"4 10101\\n10101\\n01010\\n11001\\n\") == \"2\\n\"\nassert solution(\"1 10010\\n10010\\n01010\\n11001\\n\") == \"4\\n\"\nassert solution(\"2 10010\\n10010\\n01010\\n11001\\n\") == \"2\\n\"\nassert solution(\"3 10101\\n10101\\n01010\\n11001\\n\") == \"2\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\n\ncount = 0\nfor i in range(1, 2**4000 + 1):\n    if i & (X ^ A_i):\n        count += 1\n\nprint(count)\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n2 222\\n1111\\n10111\\n10010\\n10000\\n1111\\n10111\\n10010\\n\") == \"16\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n1 111\\n2222\\n1111\\n10111\\n10010\\n10000\\n1111\\n10111\\n10010\\n1\") == \"4\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"11 11 10\") == \"1\"\nassert solution(\"12 12 10\") == \"1\"\nassert solution(\"11 10 5\") == \"1\"\nassert solution(\"11 12 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"12 11 5\") == \"1\"\nassert solution(\"12 11 10\") == \"3\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES', \"Solution for 'abacaba' is incorrect.\"\nassert solution('jinotega') == 'NO', \"Solution for 'jinotega' is incorrect.\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'\nprint('All tests passed')"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 2, 20) == 20\nassert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6.5\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"test.in\", \"r\")) == \"2\"\nassert solution(open(\"test.in\", \"r\").read()) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\nfrom collections import deque"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"10\\n2 3\") == \"6\"\nassert solution(\"5\\n1 1 2\") == \"4\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\", \"Test failed\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3') == '6\\n'\nassert solution('5\\n1 1 2 2 1') == '20\\n'\nassert solution('2\\n1 1 2') == '1\\n'\nassert solution('3\\n1 2') == '2\\n'\nassert solution('4\\n2 2 1 2') == '8\\n'\nassert solution('1\\n2 2 2') == '4\\n'"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\\n\"\nassert solution(\"2\\n1 3\") == \"2\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n2\") == \"1\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 3 4 2 5') == '12\\n2\\n1\\n4\\n2\\n'\nassert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('5\\n1 3 4 2 5') == '12\\n2\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '11\\n3\\n1\\n4\\n2'\nassert solution() == '14\\n6'\nassert solution() == '15\\n5'\nassert solution() == '16\\n3'\nassert solution() == '17\\n4'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"4\\n1 2 3\") == \"1\\n1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1\\n2\\n3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1\\n2\\n3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1\\n2\\n3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1\\n2\\n3\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"11\n3\n1\n4\n2\n\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}', but the actual output is '{solution(input())}'.\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'6 1\\n10.245\\n') == b'10.25\\n'\nassert solution(b'6 2\\n10.245\\n') == b'10.3\\n'\nassert solution(b'3 100\\n9.2\\n') == b'9.2\\n'\nassert solution(b'6 3\\n10.245\\n') == b'10.245\\n'\nassert solution(b'6 1\\n10.245\\n') == b'10.245\\n'\nassert solution(b'6 1\\n10.245\\n') == b'10.245\\n'\nassert solution(b'6 2\\n10.245\\n') == b'10.245\\n'\nassert solution(b'3 100\\n9.2\\n') == b'9.2\\n'\nassert solution(b'3 100\\n9.2\\n') == b'9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected output:\\n{}\\nGot output:\\n{}\".format(output(), solution(input()))"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10.25\"\nassert solution(input()) == \"10.3\"\nassert solution(input()) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\", \"Input 1 2 3 4\"\nassert solution(\"1 2 2 1\") == \"0110\", \"Input 1 2 2 1\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Impossible\"\nassert solution(input()) == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == 3\nassert solution(example2) == 2"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\nassert solution(\"7\\n*..P*P*\\n\") == \"3\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected output: {}, actual output: {}\".format(input(), output(), solution(input()))"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example1) == 3, \"example1 failed\"\nassert solution(example2) == 2, \"example2 failed\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(test_cases, expected_results)"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n*..P*P*\\n') == '3\\n'\nassert solution('2\\n.**PP.*P.*\\n') == '2\\n'\nassert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'\nassert solution('7\\n*..P*P*\\n*..P*P*\\n*..P*P*\\n*..P*P*\\n') == '6\\n'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"4\"\nassert solution(\"2\\n\") == \"8\"\nassert solution(\"3\\n\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed for input {stdin}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4', 'Incorrect output'\nassert solution(stdin) == '8', 'Incorrect output'\nassert solution(stdin) == '16', 'Incorrect output'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\" # solution to the problem\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\\n\"  # expected output: \"4\\n\"\nassert solution(stdin) == \"8\\n\"  # expected output: \"8\\n\"\nassert solution(stdin) == \"16\\n\"  # expected output: \"16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected: 4\\nActual: \" + solution(stdin)"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\"\nassert solution(2) == \"8\"\nassert solution(1) == \"16\"\nassert solution(4) == \"4\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''100 100 52 50 46 56''') == '17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n1 3 9 7\\n17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 3 9 7\"\nassert solution() == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n\nfrom collections import deque"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 3 9 7\\n17 8 86 92\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFTTTT\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"FTFFTTFF\\n4 2\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\\n\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes'\nassert solution('FFTTFF\\n3 2') == 'No'\nassert solution('FTFFFT\\n2 3') == 'No'\nassert solution('TFFFTF\\n4 5') == 'No'\nassert solution('TFTFTT\\n5 4') == 'Yes'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 2, \"Fox Ciel studies number theory\"\nassert solution(2) == 3, \"She thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\"\nassert solution(3) == 5, \"Please calculate the number of perfect sets consisting of integers not greater than k.\"\nassert solution(4) == 6, \"In example 4, there are 6 such sets: {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4} and {0, 1, 2, 3}.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\\nPlease calculate the number of perfect sets consisting of integers not greater than k. The answer can be very large, so print it modulo 1000000007 (10^9 + 7).\\n-----Input-----\\n\\nThe first line contains an integer k (0 \u2264 k \u2264 10^9).\\n\\n-----Output-----\\n\\nPrint a single integer \u2014 the number of required sets modulo 1000000007 (10^9 + 7).\\n\\n-----Examples-----\\nInput\\n1\\n\\nOutput\\n2\\n\\nInput\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n\\nOutput\\n5\\n\\nInput\\n4\\n\\nOutput\\n6\\n\") == \"2\\n3\\n5\\n6\\n\", \"Test case 1 failed\"\n\nassert solution(\"This is an example of a large input. The solution will take a long time to compute.\\nThis is another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large input. The solution will take a long time to compute.\\nThis is yet another example of a large"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test 1\"\nassert solution(input()) == \"3\", \"Test 2\"\nassert solution(input()) == \"5\", \"Test 3\"\nassert solution(input()) == \"6\", \"Test 4\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\n\nfor i in range(1, k + 1):\n    for j in range(i):\n        if (i & j)!= 0:\n            perfect_sets = 0\n            while i % j!= 0:\n                if i % j == 0:\n                    perfect_sets += 1\n                    i //= j\n                else:\n                    i *= 2\n            if perfect_sets > 0:\n                print(perfect_sets % (1000000007), end=\"\\n\")"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\\nWhere operation xor means exclusive or operation (http://en.wikipedia.org/wiki/Exclusive_or).\\nPlease calculate the number of perfect sets consisting of integers not greater than k. The answer can be very large, so print it modulo 1000000007 (10^9 + 7).\\n-----Input-----\\n\\nThe first line contains an integer k (0 \u2264 k \u2264 10^9).\\n\\n-----Output-----\\n\\nPrint a single integer \u2014 the number of required sets modulo 1000000007 (10^9 + 7).\\n\\n-----Examples-----\\nInput\\n1\\n\\nOutput\\n2\\n\\nInput\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n\\nOutput\\n5\\n\\nInput\\n4\\n\\nOutput\\n6\\n\\nNote:\\n\\nIn example 1, there are 2 such sets: {0} and {0, 1}. Note that {1} is not a perfect set since 1 xor 1 = 0 and {1} doesn't contain zero.\\n\\nIn example 4, there are 6 such sets: {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4} and {0, 1, 2, 3}.\") == 2\nassert solution(\"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\\nWhere operation xor means exclusive or operation (http://en.wikipedia.org/wiki/Exclusive_or).\\nPlease calculate the number of perfect sets consisting of integers not greater than k. The answer can be very large, so print it modulo 1000000007 (10^9 + 7).\\n-----Input-----\\n\\nThe first line contains an integer k (0 \u2264 k \u2264 10^9).\\n\\n-----Output-----\\n\\nPrint a single integer \u2014 the number of required sets modulo 1000000007 (10^9 + 7).\\n\\n-----Examples-----\\nInput\\n1\\n\\nOutput\\n2\\n\\nInput\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n\\nOutput\\n5\\n\\nInput\\n4\\n\\nOutput\\n6\\n\\nNote:\\n\\nIn example 1, there are 2 such sets: {0} and {0, 1}. Note that {1} is not a perfect set since 1 xor 1 = 0 and {1} doesn't contain zero.\\n\\nIn example 4, there are 6 such sets: {0}, {0, 1}, {0, 2}, {0, 3}, {0, 4} and {0, 1, 2, 3}.\") == 3\nassert solution(\"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\\nWhere operation xor means exclusive or operation (http://en.wikipedia.org/wiki/Exclusive_or).\\nPlease calculate the number of perfect sets consisting of integers not greater than k. The answer can be very large, so print it modulo 1000000007 (10^9 + 7).\\n-----Input-----\\n\\nThe first line contains an integer k (0 \u2264 k \u2264 10^9).\\n\\n-----Output-----\\n\\nPrint a single integer \u2014 the number of required sets modulo 1000000007 (10^9 + 7).\\n\\n-----Examples-----\\nInput\\n1\\n\\nOutput\\n2\\n\\nInput\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n\\nOutput\\n5\\n\\nInput\\n4\\n\\nOutput\\n6\\n\\nNote:\\n\\nIn example 1,"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '2', \"Expected 2, got {} instead\".format(solution('1'))\nassert solution('2') == '3', \"Expected 3, got {} instead\".format(solution('2'))\nassert solution('3') == '5', \"Expected 5, got {} instead\".format(solution('3'))\nassert solution('4') == '6', \"Expected 6, got {} instead\".format(solution('4'))"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3') == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The output '{output}' is not correct.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"2\\n1 2 1\\n3\") == \"2.0\"\nassert solution(\"4\\n1 2 2\\n3\") == \"4.0\"\nassert solution(\"5\\n1 1 1\\n1\") == \"1.0\"\nassert solution(\"5\\n1 1 1\\n2\") == \"1.0\"\nassert solution(\"5\\n1 1 1\\n3\") == \"1.0\"\nassert solution(\"5\\n1 1 1\\n4\") == \"1.0\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\n3\\"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('5\\n1 2 3 4 5\\n5\\n') == '2.0000000000'\nassert solution('2\\n10 20 30\\n6\\n') == '3.0000000000'\nassert solution('6\\n2 10 5 10 20 30\\n12\\n') == '4.5000000000'\nassert solution('7\\n20 100 50 200 300 400\\n80\\n') == '6.5000000000'\nassert solution('8\\n100 200 300 400 500 600 700 800\\n100\\n') == '8.0000000000'\nassert solution('9\\n1000 2000 3000 4000 5000 6000 7000 8000 9000\\n1000\\n') == '9.0000000000'\nassert solution('10\\n10000 20000 30000 40000 50000 60000 70000 80000 90000 100000\\n10000\\n') == '9.5000000000'\nassert solution('11\\n100000 200000 300000 400000 500000 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 1600000 1700000 1800000 1900000 2000000\\n1000000\\n') == '9.5000000000'\nassert solution('12\\n1000000 2000000 3000000 4000000 5000000 6000000 7000000 8000000 9000000 10000000 11000000 12000000 13000000 14000000 15000000 16000000 17000000 18000000 19000000 20000000 21000000 22000000 23000000 24000000 25000000 26000000 27000000 28000000 29000000 30000000\\n10000000\\n') == '9.5000000000'\nassert solution('13\\n10000000 20000000 30000000 40000000 50000000 60000000 70000000 80000000 90000000 100000000 110000000 12000000"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"6\\n1 1 1\\n2\\n\") == \"1.0000000000\"\nassert solution(\"5\\n1 1 1\\n1 2 2\\n1 2 2\\n2 3 3\\n\") == \"1.7500000000\"\nassert solution(\"4\\n1 2 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1.0000000000\"\nassert solution(\"7\\n2 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1.0000000000\"\nassert solution(\"5\\n1 2 3\\n1 2 2\\n1 2 2\\n2 3 3\\n\") == \"1.7500000000\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\na_1 a_2 a_3\\np 3\\n') == '1.3333333333'\nprint('All tests passed!')"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1.3333333333\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\nassert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\n\nfrom typing import List"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test cases failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\n\nassert solution('''\n2 100000 569\n605 986\n''') == '986 605'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == 3"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\"\nassert solution(\"1 1 2 2 1\\n1 2 1 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\") == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\n\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\n\nassert solution('''\n5 5 1 2 3\n2 2 3\n''') == '-1'\n\nassert solution('''\n3 4 1 1 3\n2 3 2\n''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\"\n\nsolution(stdin)"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Invalid input\"\nassert solution(\"5\") == \"Invalid input\"\nassert solution(\"1\") == \"Invalid input\"\nassert solution(\"15\") == \"Invalid input\"\n\nfor n in [2, 4, 5]:\n    for _ in range(n):\n        color, value = input().split()\n        if color == \"G\" and value.isdigit() and int(value) in [1, 2, 3, 4, 5]:\n            print(0)\n        else:\n            print(1)\n\nfor n in [2, 4, 5]:\n    for _ in range(n):\n        color, value = input().split()\n        if color == \"B\" and value.isdigit() and int(value) in [1, 2, 3, 4, 5]:\n            print(2)\n        else:\n            print(4)"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nG3 G3\\n\\n4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\") == \"0\\n\\n2\\n\\n4\\n\\n4\\n\"\n\nassert solution(\"4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n\\n6\\nG3 R3 B3 W3\") == \"2\\n\\n2\\n\\n4\\n\\n4\\n\"\n\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\\n6\\nG3 R3 B3 W3\\n\\n7\\nG2 B2 W2 R2 G2\\n\\n8\\nG1 R1 B1 W1 G1\\n\\n9\\nB4 G4 R4 W4 B4\\n\\nA1 Y1 G1 W1 R1\\n\\nA2 B2 G2 W2 R2 B2\\n\\nA3 G3 R3 B3 W3\\n\\nA4 B4 R4 G4 W4 R4\\n\\nA5 W5 G5 R5 B5\\n\\nA6 B6 R6 W6 G6\\n\\nA7 W7 R7 B7 G7\") == \"4\\n\\n2\\n\\n4\\n\\n4\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2 6\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n3 11\") == \"2 6\\n1 1\\n3 11\"\nassert solution(\"2\\n1 1\\n100 100\\n1 1\") == \"1 1\\n1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n3 11\") == \"3 11\\n11 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    4\n    3 3 4 3\n    4 7 6 5\n''') == '''\n    2 6\n'''\n\nassert solution('''\n    2\n    1 1\n    100 100\n''') == '''\n    1 1\n'''\n\nassert solution('''\n    5\n    10 30 5 6 24\n    10 41 7 8 24\n''') == '''\n    3 11\n'''\n\nassert solution('''\n    3\n    3 3 3\n    4 4 4\n''') == '''\n    1 1\n'''\n\nassert solution('''\n    1\n    1 1\n    1 1 1\n''') == '''\n    1 1\n'''"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\n\nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"\"\"2 6\"\"\"\n\nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"\"\"1 1\"\"\"\n\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"\"\"3 11\"\"\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n\") == \"2 6\\n\"\n\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\n\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 6\\n1 1\\n3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n3 11\\n2 6\\n\") == \"3 11\\n2 6\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 4') == '3B', \"The first sample test case has a wrong output.\"\nassert solution('2 2') == 'Impossible', \"The second sample test case has a wrong output.\"\nassert solution('3 2') == '1A1B', \"The third sample test case has a wrong output.\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Expected output: {}, got: {}\".format(output, solution(input()))"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\", \"Test case 1 failed\"\nassert solution(\"2 2\") == \"Impossible\", \"Test case 2 failed\"\nassert solution(\"3 2\") == \"1A1B\", \"Test case 3 failed\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == \"3\"\nassert solution(5, 4) == \"25\"\nassert solution(3, 3) == \"1\"\nassert solution(1, 7) == \"1\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"3\\n\"\nassert solution(open('input.txt', 'r')) == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(5) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(3) +'' + str(2)) == '3'\nassert solution(str(5) +'' + str(4)) == '25'\nassert solution(str(10) +'' + str(5)) == '100'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '1\\n'\nassert solution(open('input.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"  # The maximum possible profit Snuke can gain is 1."
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"5 5\\n1 2 3 4 5\\n0 0 0 0 0\\n1 1 1 1 1\\n2 2 2 2 2\\n3 3 3 3 3\\n4 4 4 4 4\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1 1\") == \"1\"\nassert solution(\"2 2\\n1 2 2\\n2 2 2\") == \"1\"\nassert solution(\"2 2\\n2 2 2\\n2 2 2\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n2 3 4\\n3 4 5\") == \"1\"\nassert solution(\"3 3\\n3 3 3\\n3 3 3\") == \"1\"\nassert solution(\"3 3\\n2 3 4\\n3 4 5\\n4 5 6\") == \"1\"\nassert solution(\"3 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\") == \"1\"\nassert solution(\"3 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\") == \"1\"\nassert solution(\"3 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\") == \"1\"\nassert solution(\"3 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"4 5\\n2 1 3 4\\n3 2 4\\n3 4 2\\n4 1 4 5\\n\") == \"1\"\nassert solution(\"5 10\\n5 4 8 9\\n6 1 7 8\\n6 9 8\\n7 6 8\\n8 7 9\\n9 5 7\\n\") == \"5\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\nRemove the upper-right and lower-left leaves.\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS.o\\no.o.o.T') == '2\\n'\nassert solution('3 3\\nS.o\\n.o.T') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '2\\n'\nassert solution('3 3\\nS.o\\no.o.o.T\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"4 5\\nT.o\\nS.o\\n.T.o\\n\") == \"-1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"-1\"\nassert solution(\"1 1\\nS.o\\n.o.o\\no.T\\n\") == \"-1\"\nassert solution(\"1 1\\nS.o\\n.o.o\\no.T\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nS.o\\no.o.\\no.T') == 2\nassert solution('2 2\\nS.o\\no.o.\\no.T') == -1\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'\nassert solution('3 3\\n.o.\\n.o.\\no.T\\n') == '1\\n'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'\nassert solution('3 3\\n.o.\\n.o.\\no.T\\n') == '1\\n'\nassert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2\\nRemove the upper-right and lower-left leaves.\\n'\nassert solution('3 3\\n.o.\\n.o.\\no.T\\n') == '1\\n'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS.o\\no.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 3\nassert solution(199, 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is not correct.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(199) == 200\n\nfrom typing import List"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output}\" for i, (input, output) in enumerate(test_cases)"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(199) == \"200\"\nassert solution(1) == \"1\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\", \"The given input is not correct\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('3 2') == '3\\n'\nassert solution('199 200') == '200\\n'\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('1\\n5\\n6 7') == 'Aoki'\nassert solution('2\\n3 4\\n5 6') == 'Takahashi'\nassert solution('1\\n10\\n5 4\\n1 3\\n2 6\\n8 9') == 'Aoki'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n\nfor i in range(1, 6):\n    assert solution(f\"3 {i} {i}\") == \"Aoki\", f\"Test Case {i} Failed\"\n\nfor i in range(1, 6):\n    assert solution(f\"{i} {i}\") == \"Takahashi\", f\"Test Case {i} Failed\"\n\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == 'Aoki'\nassert solution(open('sample_input.txt', 'r').read()) == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"5\\n1 5\\n2 1\\n3 4\\n4 2\\n5 1\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"1\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"2\\n5 1\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"1\\n5 1\\n3 3\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\n\nassert solution(\"2\\n5 2\\n4 4\\n\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n2 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n4 3\") == \"Aoki\"\nassert solution(\"1\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2\n    5 2\n    3 3\n    '''\n) == 'Aoki'\n\nassert solution(\n    '''\n    3\n    1 2\n    1 3\n    1 4\n    1 5\n    '''\n) == 'Aoki'\n\nassert solution(\n    '''\n    2\n    1 1\n    2 2\n    1 2\n    '''\n) == 'Takahashi'\n\nassert solution(\n    '''\n    3\n    1 1\n    1 2\n    2 3\n    1 3\n    1 4\n    '''\n) == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the number of piles: \")) == \"Aoki\", \"Takahashi wins\"\nassert solution(input(\"Enter the number of piles: \")) == \"Takahashi\", \"Aoki wins\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n3 3\\n') == '0\\n8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\"\nassert solution(\"3 3\\n\") == \"8\"\nassert solution(\"3 2\\n2 3\\n1 3\\n1 2\\n\") == \"0\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == 0\nassert solution('3 3') == 8\n\nsolution('2 2') == 0\nsolution('3 3') == 8\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1\\n'\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '1'\nassert solution(open('input2.txt').read()) == '0'\nassert solution(open('input3.txt').read()) == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    n, m = map(int, input().split())\n    pairs1 = [int(x) for x in input().split()]\n    pairs2 = [int(x) for x in input().split()]\n    shared_number = None\n    for pair in pairs1:\n        for p2 in pairs2:\n            if pair == p2:\n                if shared_number is None:\n                    shared_number = pair\n                else:\n                    return \"0\"\n    for pair in pairs2:\n        for p1 in pairs1:\n            if pair == p1:\n                if shared_number is None:\n                    shared_number = pair\n                else:\n                    return \"0\"\n    if shared_number is None:\n        return \"-1\"\n    else:\n        return str(shared_number)"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {t} failed: {solution(input())}!= {expected_output}\"\n\nt = int(input())\nfor t in range(1, t+1):\n    n, m = map(int, input().split())\n    pairs = [list(map(int, input().split())) for _ in range(m)]\n\n    def shared_number(numbers):\n        seen = set()\n        for pair in numbers:\n            if pair in seen:\n                return pair\n            seen.add(pair)\n        return None\n\n    def determine_match(first_pair, second_pair):\n        common_number = shared_number([first_pair, second_pair])\n        if common_number is not None:\n            return common_number\n        return 0\n\n    shared_number_result = determine_match(pairs[0], pairs[1])\n    print(shared_number_result)\n\n    second_participant_knows_result = determine_match(pairs[0], pairs[1])\n    print(second_participant_knows_result)\n\nexpected_output = \"0\\n1\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"17:30\"\nassert solution(input()) == \"07:30\"\nassert solution(input()) == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(24) == '17:30', \"Expected output: 17:30\"\nassert solution(12) == '07:30', \"Expected output: 07:30\"\nassert solution(24) == '09:09', \"Expected output: 09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\") == \"00:00\"\nassert solution(\"12\") == \"00:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"00:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\\n\"\n\nassert solution(\"4 4\\n2\\n1 2 1\\n2 3 1\\n3 4 1\\n\") == \"16\\n\"\n\nassert solution(\"4 4\\n4\\n1 2 1\\n2 3 1\\n3 4 1\\n\") == \"12\\n\"\n\nassert solution(\"4 4\\n3\\n1 2 1\\n2 3 1\\n3 4 1\\n\") == \"4\\n\"\n\nassert solution(\"5 5\\n2\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n\") == \"10\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"100 1000000000\\n10000000000\\n10000000000\\n10000000000\") == \"2147483647\"\nassert solution(\"2 3\\n1 2\\n2 3\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n3"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nassert solution(\"1 1\\n1\") == \"1\\n\"\nassert solution(\"5 5\\n5\") == \"25\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\", \"Please implement the solution function.\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\\n0\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\\n-1\\n\\n\\n-1\") == \"-1\\n\\n\\n-1\"\n\nassert solution(\"1\\n1\\n\\n1\") == \"1\\n1\\n\"\nassert solution(\"1\\n1\\n\\n2\") == \"1\\n2\\n\"\nassert solution(\"1\\n1\\n\\n3\") == \"1\\n3\\n\"\nassert solution(\"1\\n1\\n\\n4\") == \"1\\n4\\n\"\nassert solution(\"1\\n1\\n\\n5\") == \"1\\n5\\n\"\nassert solution(\"1\\n1\\n\\n6\") == \"1\\n6\\n\"\nassert solution(\"1\\n2\\n\\n1\") == \"1\\n2\\n\"\nassert solution(\"1\\n2\\n\\n2\") == \"1\\n4\\n\"\nassert solution(\"1\\n2\\n\\n3\") == \"1\\n6\\n\"\nassert solution(\"1\\n2\\n\\n4\") == \"1\\n8\\n\"\nassert solution(\"1\\n2\\n\\n5\") == \"1\\n10\\n\"\nassert solution(\"1\\n2\\n\\n6\") == \"1\\n12\\n\"\nassert solution(\"1\\n3\\n\\n1\") == \"1\\n3\\n\"\nassert solution(\"1\\n3\\n\\n2\") == \"1\\n6\\n\"\nassert solution(\"1\\n3\\n\\n3\") == \"1\\n9\\n\"\nassert solution(\"1\\n3\\n\\n4\") == \"1\\n12\\n\"\nassert solution(\"1\\n3\\n\\n5\") == \"1\\n15\\n\"\nassert solution(\"1\\n3\\n\\n6\") == \"1\\n18\\n\"\nassert solution(\"1\\n4\\n\\n1\") == \"1\\n4\\n\"\nassert solution(\"1\\n4\\n\\n2\") == \"1\\n8\\n\"\nassert solution(\"1\\n4\\n\\n3\") == \"1\\n12\\n\"\nassert solution(\"1\\n4\\n\\n4\") == \"1\\n16\\n\"\nassert solution(\"1\\n4\\n\\n5\") == \"1\\n20\\n\"\nassert solution(\"1\\n4\\n\\n6\") == \"1\\n24\\n\"\nassert solution(\"1\\n5\\n\\n1\") == \"1\\n5\\n\"\nassert solution(\"1\\n5\\n\\n2\") == \"1\\n10\\n\"\nassert solution(\"1\\n5\\n\\n3\") == \"1\\n15\\n\"\nassert solution(\"1\\n5\\n\\n4\") == \"1\\n20\\n\"\nassert solution(\"1\\n5\\n\\n5\") == \"1\\n25\\n\"\nassert solution(\"1\\n5\\n\\n6\") == \"1\\n30\\n\"\nassert solution(\"1\\n6\\n\\n1\") == \"1\\n6\\n\"\nassert solution(\"1\\n6\\n\\n2\") == \"1\\n12\\n\"\nassert solution(\"1\\n6\\n\\n3\") == \"1\\n18\\n\"\nassert solution(\"1\\n6\\n\\n4\") == \"1\\n24\\n\"\nassert solution(\"1\\n6\\n\\n5\") == \"1\\n30\\n\"\nassert solution(\"1\\n6\\n\\n6\") == \"1\\n36\\n\"\nassert solution(\"1\\n7\\n\\n1\") == \"1\\n7\\n\"\nassert solution(\"1\\n7\\n\\"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n2 0 3 0 1 1\\n') == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6'\nassert solution('1\\n0\\n') == '0\\n'\nassert solution('6\\n3 2 2 2 1 1\\n') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\\n1\\n0\\n\\n6\\n3 2 2 2 1 1\\n\\n-1') == '\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\\n'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"2 1\n2 5\n3 3\n3 6\n5 6\"\"\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input '{stdin}':\\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for the given inputs\\nInput: {stdin}\\nExpected Output: {expected_output}\\nOutput: {solution(input())}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Got '{solution(input())}', expected '{output()}'\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 0\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2'''"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n20\\n30\\n10\\n0\\n\") == \"2\\n0 4\\n\"\nassert solution(\"2\\n12\\n20\\n30\\n10\\n0\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4 \"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\"\n\nfrom typing import List\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\\n\") == \"3.73\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398\n\nfrom math import inf"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.73  # correct\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.5470054  # correct"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3.729935587093555327, \"The given code is incorrect.\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3.729935587093555327\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"3.729935587093555327\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n0 0 5 5\n3 2\n-1 -1\n-1 0\n\"\"\") == 3.729935587093555327\n\nassert solution(\"\"\"\n0 0 0 1000\n100 1000\n-50 0\n50 0\n\"\"\") == 11.547005383792516398"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"First\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"First\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed\" for i, (input, output) in enumerate([\n    ([], \"First\"),\n    ([1, 2, 3], \"First\"),\n    ([1, 2, 3], \"Second\"),\n    ([1, 2, 1, 2, 3], \"Second\"),\n    ([1, 2, 1, 2, 3, 4], \"Second\"),\n    ([1, 2, 1, 2, 3, 4, 5], \"Second\"),\n    ([1, 2, 1, 2, 3, 4, 5], \"First\"),\n    ([1, 2, 1, 2, 3, 4, 5], \"First\"),\n    ([1, 2, 1, 2, 3, 4, 5], \"First\"),\n    ([1, 2, 1, 2, 3, 4, 5], \"First\"),\n])"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\nr'''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n'''\n) == 'First\\n'\nassert solution(\nr'''\n4\n1\n5\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n') == 'Second\\nFirst\\nSecond'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond\\n'\nassert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n1\\n5\\n') == 'Second\\nFirst\\nSecond\\n'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond\\n'\n\nfrom typing import List"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"1\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 1\\n4 3 1 5 2\\n4 3 1 5 6\\n4 3 1 5 7\") == \"1\\n3\\n3\\n3\\n3\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\nassert solution(\"5 3 4\\n1 2 3 4\") == \"0\\n\"\nassert solution(\"5 3 4\\n1 2 3 4\") == \"1\\n\"\nassert solution(\"5 3 4\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"5 3 4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"5 3 4\\n1 2 3 4\") == \"4\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '24\\n'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"24\\n\", \"Expected output: 24\\nActual output: \" + solution(stdin)"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\"\nassert solution(\"1 2\") == \"6\\n\"\nassert solution(\"10 3\") == \"36288\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"1 3\\n\") == \"5\\n\"\nassert solution(\"2 3\\n\") == \"18\\n\"\nassert solution(\"1 2 3\\n\") == \"15\\n\"\nassert solution(\"1 3 2\\n\") == \"12\\n\"\nassert solution(\"2 3 1\\n\") == \"12\\n\"\nassert solution(\"1 2 3 1\\n\") == \"22\\n\"\nassert solution(\"1 3 2 1\\n\") == \"26\\n\"\nassert solution(\"2 3 1 2\\n\") == \"28\\n\"\nassert solution(\"1 3 2 1 2\\n\") == \"46\\n\"\nassert solution(\"1 2 3 1 2\\n\") == \"54\\n\"\nassert solution(\"2 3 1 2 1\\n\") == \"56\\n\"\nassert solution(\"1 3 2 1 2 1\\n\") == \"74\\n\"\nassert solution(\"1 2 3 1 2 1\\n\") == \"82\\n\"\nassert solution(\"2 3 1 2 1 1\\n\") == \"84\\n\"\nassert solution(\"1 3 2 1 2 1 1\\n\") == \"102\\n\"\nassert solution(\"1 2 3 1 2 1 1\\n\") == \"110\\n\"\nassert solution(\"2 3 1 2 1 1 2\\n\") == \"112\\n\"\nassert solution(\"1 3 2 1 2 1 1 2\\n\") == \"130\\n\"\nassert solution(\"1 2 3 1 2 1 1 2\\n\") == \"138\\n\"\nassert solution(\"2 3 1 2 1 1 2 1\\n\") == \"140\\n\"\nassert solution(\"1 3 2 1 2 1 1 2 1\\n\") == \"162\\n\"\nassert solution(\"1 2 3 1 2 1 1 2 1\\n\") == \"170\\n\"\nassert solution(\"2 3 1 2 1 1 2 1 2\\n\") == \"172\\n\"\nassert solution(\"1 3 2 1 2 1 1 2 1 1\\n\") == \"190\\n\"\nassert solution(\"1 2 3 1 2 1 1 2 1 1\\n\") == \"202\\n\"\nassert solution(\"2 3 1 2 1 1 2 1 1 2\\n\") == \"204\\n\"\nassert solution(\"1 3 2 1 2 1 1 2 1 1 1\\n\") == \"222\\n\"\nassert solution(\"1 2 3 1 2 1 1 2 1 1 1\\n\") == \"230\\n\"\nassert solution(\"2 3 1 2 1 1 2 1 1 1 2\\n\") == \"232\\n\"\nassert solution(\"1 3 2 1 2 1 1 2 1 1 1 1\\n\") == \"250\\n\"\nassert solution(\"1 2 3 1 2 1 1 2 1 1 1 1\\n\") == \"258\\n\"\nassert solution(\"2 3 1 2 1 1 2 1 1 1 1 2\\n\") == \"260\\n\"\nassert solution(\"1 3 2 1 2 1 1 2 1 1 1 1 1\\n\") == \"282\\n\"\nassert solution(\"1 2 3 1 2 1 1 2 1 1 1 1 1\\n\") == \"290\\n\"\nassert solution(\"2 3"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 1\\n') == '1\\n'\nassert solution(stdin='3 2\\n') == '24\\n'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected {output}.\\nTest case:\\n{input()}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '24'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\\n\"\nassert solution(\"3 1\\n1 2\\n1 1\\n1 3\\n\") == \"4\\n\"\nassert solution(\"7 3\\n4 5\\n6 3\\n\") == \"1196\\n\"\nassert solution(\"10 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n\") == \"64921457\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(31) == \"1196\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3 2) == \"6\"\nassert solution(4 4) == \"3\"\nassert solution(7 3) == \"1196\"\nassert solution(31 8) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n4 4\\n7 3\\n31 8\\n\") == \"6\"\nassert solution(\"3 1\\n4 2\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\\n10 8\\n11 9\\n12 10\\n13 11\\n14 12\\n15 13\\n16 14\\n17 15\\n18 16\\n19 17\\n20 18\\n21 19\\n22 20\\n23 21\\n24 22\\n25 23\\n26 24\\n27 25\\n28 26\\n29 27\\n30 28\\n31 29\\n32 30\\n33 31\\n34 32\\n35 33\\n36 34\\n37 35\\n38 36\\n39 37\\n40 38\\n41 39\\n42 40\\n43 41\\n44 42\\n45 43\\n46 44\\n47 45\\n48 46\\n49 47\\n50 48\\n51 49\\n52 50\\n53 51\\n54 52\\n55 53\\n56 54\\n57 55\\n58 56\\n59 57\\n60 58\\n61 59\\n62 60\\n63 61\\n64 62\\n65 63\\n66 64\\n67 65\\n68 66\\n69 67\\n70 68\\n71 69\\n72 70\\n73 71\\n74 72\\n75 73\\n76 74\\n77 75\\n78 76\\n79 77\\n80 78\\n81 79\\n82 80\\n83 81\\n84 82\\n85 83\\n86 84\\n87 85\\n88 86\\n89 87\\n90 88\\n91 89\\n92 90\\n93 91\\n94 92\\n95 93\\n96 94\\n97 95\\n98 96\\n99 97\\n100 98\\n101 99\\n102 100\\n103 101\\n104 102\\n105 103\\n106 104\\n107 105\\n108 106\\n109 107\\n110 108\\n111 109\\n112 110\\n113 111\\n114 112\\n115 113\\n116 114\\n117 115\\n118 116\\n119 117\\n120 118\\n121 119\\n122 120\\n123 121\\n124 122\\n125 123\\n126 124\\n127 125\\n128 126\\n129 127\\n130 128\\n131 129\\n132 130\\n133 131\\n134 132\\n135 133\\n136 134\\"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"\"\"#.X#\nX.#.\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, \"Your solution is incorrect\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '#X#'\nassert solution('5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#') == '#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\\nX.#.\\n#...\\n\"\n\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...\\n') == '''\n#.X#\nX.#.\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output(), f\"Solution returned {solution(input())} instead of {expected_output()}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\", \"Example 1\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\", \"Example 2\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\", \"Example 3\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Testcase failed: expected output {}\\nGot: {}\\n\".format(expected_output, solution(input()))"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"7 4 1\") == \"-1\"\nassert solution(\"4 2 2\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 3\") == \"1 2\"\nassert solution(\"1 2 1\") == \"1 2 1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '-1'\nassert solution(\"5 3 2\") == '2 4 1 5 3'\nassert solution(\"10 10 10\") == '-1'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nassert solution('5 10 3') == '-1'\nassert solution('2 1 1') == '2'\nassert solution('2 1 10') == '2'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"2 4 1 5 3\n\"\"\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"2 4 1 5 3\"\nassert solution(stdin=\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(stdin=\"1 2 3 4 5\") == \"-1\"\nassert solution(stdin=\"1 2 3 4 5 6\") == \"2 3 4 5 6\"\nassert solution(stdin=\"1 2 3 4 5 6 7\") == \"2 3 4 5 6\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 10 10\") == \"5 9 5 9 10\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"2 4 1 5 3\n\"\"\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\\n2\\n7 17\\n9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\"\nassert solution(\"2\\n7 17\\n9\\n4 8 10 12 15 18 33 44 81\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\\nOutput\\nYes\\n\\nInput\\n2\\n7 17\\n\\nOutput\\nNo\\n\\nInput\\n9\\n4 8 10 12 15 18 33 44 81\\n\\nOutput\\nYes\\n\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 3"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n9\\n18\\n36\\n108\") == \"Yes\"\nassert solution(\"2\\n7\\n17\") == \"No\"\nassert solution(\"9\\n4\\n8\\n10\\n12\\n15\\n18\\n33\\n44\\n81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\na_1 a_2 -6 a_4 a_5 a_3\\n\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '12\\n', \"Test case failed\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 1 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 2 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 3 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 4 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 5 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test case 6 failed\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\"\nassert solution(\"6\\n100 2 5 3 100\") == \"100\\n\"\nassert solution(\"6\\n10 -100 -100 2 5 -3\") == \"4\\n\"\nassert solution(\"6\\n10 200 -100 2 5 -3\") == \"60\\n\"\nassert solution(\"6\\n10 -100 -100 2 5 300\") == \"50\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12\\n\", \"Test Case Failed\" # expected output: 12"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\", \"Test case failed\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"3 1 4 2\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 3 5 4 2 1 3\") == \"5\"\nassert solution(\"3 5 1 2 4 3 5 1\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5', 'Incorrect solution'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n\") == \"12\"\nassert solution(\"5 1\\n2 3\\n4 5\\n6 7\\n8 9\\n\") == \"12\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"6\"\nassert solution(\"10 1\\n5 10\\n10 5\\n20 15\\n30 25\\n40 35\\n50 45\\n60 55\\n70 65\\n80 75\\n90 85\\n100 95\\n\") == \"245\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5', \"The solution should be 5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5, \"The solution should return 5.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test Case Failed: {expected_output}, {solution(input())}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Input does not match the expected output\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0 0\"\nassert solution(3) == \"0 1\"\nassert solution(3) == \"2 1\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0 0\\n\", \"Test 1 Failed\"\nassert solution(stdin) == \"0 1\\n\", \"Test 2 Failed\"\nassert solution(stdin) == \"2 1\\n\", \"Test 3 Failed\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n0 0\n2 1\n1 2\n\"\"\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1'\nassert solution('3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1') == '0 1\\n0 2\\n2 2'\nassert solution('3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1') == '0 2\\n0 3\\n2 3'\nassert solution('3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1') == '0 3\\n0 2\\n2 2'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1') == '0 1\\n'\nassert solution('3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1') == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 3 1\") == \"2 1\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aa\") == \"6\"\nassert solution(\"aba\") == \"8\"\nassert solution(\"baaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"2 4\\naa\\nbb\") == 6\nassert solution(r\"3 3\\naba\\nbba\") == 8\nassert solution(r\"4 5\\nabbb\\nbaaa\") == 8"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\nc\\nd\\ne\\n\") == \"8\"\nassert solution(\"4 5\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\na\\nb\\na\\nb') == '6'\nassert solution('2 2\\na\\nb\\na\\nb') == '6'\nassert solution('1 2\\na\\nb\\na\\nb') == '6'\nassert solution('3 3\\na\\nb\\na\\nb') == '8'\nassert solution('4 5\\na\\nb\\na\\nb') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2 4\n    2a\n    2b\n    ''') == '6'\nassert solution('''\n    3 3\n    3a\n    3b\n    ''') == '8'\nassert solution('''\n    4 5\n    4a\n    4b\n    5a\n    ''') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == 6\nassert solution(\"3 3\\naba\\nbba\") == 8\nassert solution(\"4 5\\nabbb\\nbaaa\") == 8"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([4, 2, 3, 6, 7]), \"YES\"\nassert solution([5, 6, 15, 35, 77, 22]), \"YES\"\nassert solution([5, 6, 10, 15, 1000, 75]), \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"YES\") == \"YES\\n\"\nassert solution(\"NO\") == \"NO\\n\"\nassert solution(\"YES\") == \"YES\\n2\\n2\\n1\\n1\\n\"\nassert solution(\"NO\") == \"NO\\n\"\nassert solution(\"YES\") == \"YES\\n2\\n2\\n1\\n1\\n\"\nassert solution(\"NO\") == \"NO\\n\"\nassert solution(\"YES\") == \"YES\\n2\\n2\\n1\\n1\\n\"\nassert solution(\"NO\") == \"NO\\n\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\" or solution(stdin) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\"\nassert solution(10) == \"YES\"\nassert solution(11) == \"YES\"\nassert solution(12) == \"YES\"\nassert solution(13) == \"YES\"\nassert solution(14) == \"YES\"\nassert solution(15) == \"YES\"\nassert solution(16) == \"YES\"\nassert solution(17) == \"YES\"\nassert solution(18) == \"YES\"\nassert solution(19) == \"YES\"\nassert solution(20) == \"YES\"\nassert solution(21) == \"YES\"\nassert solution(22) == \"YES\"\nassert solution(23) == \"YES\"\nassert solution(24) == \"YES\"\nassert solution(25) == \"YES\"\nassert solution(26) == \"YES\"\nassert solution(27) == \"YES\"\nassert solution(28) == \"YES\"\nassert solution(29) == \"YES\"\nassert solution(30) == \"YES\"\nassert solution(31) == \"YES\"\nassert solution(32) == \"YES\"\nassert solution(33) == \"YES\"\nassert solution(34) == \"YES\"\nassert solution(35) == \"YES\"\nassert solution(36) == \"YES\"\nassert solution(37) == \"YES\"\nassert solution(38) == \"YES\"\nassert solution(39) == \"YES\"\nassert solution(40) == \"YES\"\nassert solution(41) == \"YES\"\nassert solution(42) == \"YES\"\nassert solution(43) == \"YES\"\nassert solution(44) == \"YES\"\nassert solution(45) == \"YES\"\nassert solution(46) == \"YES\"\nassert solution(47) == \"YES\"\nassert solution(48) == \"YES\"\nassert solution(49) == \"YES\"\nassert solution(50) == \"YES\"\nassert solution(51) == \"YES\"\nassert solution(52) == \"YES\"\nassert solution(53) == \"YES\"\nassert solution(54) == \"YES\"\nassert solution(55) == \"YES\"\nassert solution(56) == \"YES\"\nassert solution(57) == \"YES\"\nassert solution(58) == \"YES\"\nassert solution(59) == \"YES\"\nassert solution(60) == \"YES\"\nassert solution(61) == \"YES\"\nassert solution(62) == \"YES\"\nassert solution(63) == \"YES\"\nassert solution(64) == \"YES\"\nassert solution(65) == \"YES\"\nassert solution(66) == \"YES\"\nassert solution(67) == \"YES\"\nassert solution(68) == \"YES\"\nassert solution(69) == \"YES\"\nassert solution(70) == \"YES\"\nassert solution(71) == \"YES\"\nassert solution(72) == \"YES\"\nassert solution(73) == \"YES\"\nassert solution(74) == \"YES\"\nassert solution(75) == \"YES\"\nassert solution(76) == \"YES\"\nassert solution(77) == \"YES\"\nassert solution(78) == \"YES\"\nassert solution(79) == \"YES\"\nassert solution(80) == \"YES\"\nassert solution(81) == \"YES\"\nassert solution(82) == \"YES\"\nassert solution(83) == \"YES\"\nassert solution(84) == \"YES\"\nassert solution(85) == \"YES\"\nassert solution(86) == \"YES\"\nassert solution(87) == \"YES\"\nassert solution(88) == \"YES\"\nassert solution(89) == \"YES\"\nassert solution(90) == \"YES\"\nassert solution(91) == \"YES\"\nassert solution(92) == \"YES\"\nassert solution(93) == \"YES\"\nassert solution(94) == \"YES\"\nassert solution(95) == \"YES\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n6\\n7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6\\n15\\n35\\n77\\n22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6\\n10\\n15\\n1000\\n75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\"\nassert solution(\"5 6 15 35 77 22\") == \"YES\"\nassert solution(\"5 6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n2 3 6 7\\n\\nOutput\\nYES\\n2 2 1 1\\n\\nInput\\n5\\n6 15 35 77 22\\n\\nOutput\\nYES\\n2 1 2 1 1\\n\\nInput\\n5\\n6 10 15 1000 75\\n\\nOutput\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\") == \"YES\\n2 1 2 1 1\\n\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\\n2 2 1 1\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\\n2 2 1 1\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=''), \"Test case 1 failed\"\nassert solution(stdin='100'), \"Test case 2 failed\"\nassert solution(stdin='410'), \"Test case 3 failed\"\nassert solution(stdin='600'), \"Test case 4 failed\"\nassert solution(stdin=''), \"Test case 5 failed\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output one integer - 5\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"Output one integer - 40\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"Output one integer - 5\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"Output one integer - 0\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"Output one integer - 0\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100\\n60\\n70\\n') == '40'\nassert solution('410\\n55\\n70\\n') == '5'\nassert solution('600\\n60\\n70\\n') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\n\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='12\\n3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution(stdin='5\\n1 1 1 1 1') == '1\\n1 1 1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"\nprint(\"Test passed\")"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Output', solution(stdin)"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n1\\n1 1'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"2 1\\n1 3 3\\n\") == \"4\"\nassert solution(\"3 2\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 3\\n1 3 3\\n\") == \"16\"\nassert solution(\"5 3\\n1 3 3\\n\") == \"24\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"5 3\\n2 3 4\\n3 4 2\\n\") == \"6\\n\"\nassert solution(\"5 3\\n3 3 4\\n2 3 2\\n\") == \"11\\n\"\nassert solution(\"5 3\\n2 3 4\\n3 3 1\\n\") == \"6\\n\"\nassert solution(\"5 3\\n3 3 4\\n1 2 3\\n\") == \"6\\n\"\nassert solution(\"5 3\\n3 3 2\\n1 3 4\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 6, \"Incorrect solution.\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1) == 6, \"The expected output is 6, but it is {}.\".format(solution(3, 1))"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"\nprint(\"Correct\")"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 1\n    1 3 3\n''') == '6\\n'\nassert solution('''\n    3 2\n    1 3 3\n''') == '4\\n'\nassert solution('''\n    3 3\n    1 2 3\n''') == '1\\n'\nassert solution('''\n    3 2\n    1 3 4\n''') == '2\\n'\nassert solution('''\n    3 1\n    1 3 4\n''') == '5\\n'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"2 3\\n2 3 2\\n\") == \"6\"\nassert solution(\"2 4\\n3 4 2\\n\") == \"8\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 1\n1 3 3\"\"\") == \"6\"\nassert solution(\"\"\"3 1\n1 3 2\"\"\") == \"0\"\nassert solution(\"\"\"3 1\n1 3 1\"\"\") == \"3\"\nassert solution(\"\"\"3 1\n2 3 2\"\"\") == \"1\"\nassert solution(\"\"\"3 1\n1 2 1\"\"\") == \"1\"\nassert solution(\"\"\"3 1\n1 3 1\"\"\") == \"1\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == 6\nassert solution(\"4 1\\n1 2 3\\n2 4 6\\n3 5 8\\n\") == 48\nassert solution(\"5 2\\n1 3 4\\n3 5 6\\n5 7 9\\n\") == 640"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"10\\n30\") == \"10\"\nassert solution(\"100\\n138\") == \"100\"\nassert solution(\"10000000000\\n10000000000\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"12345678901234567890\\n1234567890\") == -1\nprint(\"All test cases passed\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\") == 10\nassert solution(\"123456\\n123456\") == -1\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n1000\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\"\nprint(-1)"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"87655\\n30\") == \"-1\"\nassert solution(\"1000000\\n999999\") == \"10\"\nassert solution(\"1000000\\n1000001\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\n\nprint(solution(\"1\\n\"))  # Output: -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654 30\") == \"10\"\nassert solution(\"1000000000 1000000000\") == \"-1\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected 'Second' but got '{}'.\".format(solution(\"aba\"))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abca\") == \"First\"\nassert solution(\"abcd\") == \"Second\"\nassert solution(\"dcba\") == \"First\"\nassert solution(\"ca\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\", \"Solution should return 'Second'\"\nassert solution(\"aabbccddeeffg\") == \"First\", \"Solution should return 'First'\"\nassert solution(\"abc\") == \"First\", \"Solution should return 'First'\"\nassert solution(\"aaaaa\") == \"Second\", \"Solution should return 'Second'\"\nassert solution(\"ab\") == \"Second\", \"Solution should return 'Second'\"\nassert solution(\"abcde\") == \"First\", \"Solution should return 'First'\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\", \"The output is not correct.\"\n\nprint(\"First\") if \"a\" in \"aba\" else print(\"Second\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"First\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'\\x1b[31mInput\\x1b[0m') == '6\\n'\nassert solution(b'\\x1b[31mInput\\x1b[0m') == '40\\n'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(a=10) == 6\nassert solution(a=16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n12345') == '6', 'Test case 1 failed'\nassert solution('16\\n439873893693495623498263984765') == '40', 'Test case 2 failed'\nassert solution('10\\n') == '0', 'Test case 3 failed'\nassert solution('16\\n') == '0', 'Test case 4 failed'\nassert solution('10\\n1234') == '0', 'Test case 5 failed'\nassert solution('16\\n43987389369349562349826398476') == '0', 'Test case 6 failed'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Incorrect output. Expected 6, got {}\".format(solution())"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10, \"12345\") == 6\nassert solution(16, \"439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n12345\") == 6, \"Test 1 failed\"\nassert solution(\"16\\n439873893693495623498263984765\") == 40, \"Test 2 failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"The output of the program is not correct.\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\n\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\n\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"332748119\"\nassert solution(input()) == \"332748119\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"160955686\"\nassert solution(input()) == \"185138929\"\nassert solution(input()) == \"974061117\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686\\n185138929\\n974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test failed. Expected: {}\\nGot: {}\".format(output, solution(input()))\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\n\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\", \"OVGURWZLWVLUXTH\", \"OZ\") == \"ORZ\"\nassert solution(\"AA\", \"A\", \"A\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'\nassert solution('AA\\nA\\nA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" == \"ORZ\")"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\n\nassert solution('AA') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    1 2 1\n    1 100 1\n    1 100 100\n    \"\"\"\n) == \"99\"\n\nassert solution(\n    \"\"\"\n    100 100 100\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 1') == '1'\nassert solution('3 2\\n1 1') == '1'\nassert solution('3 3\\n1 1') == '0'\nassert solution('1000000000000 1048576\\n1 1') == '118606527258'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == 1, \"Test 1 failed\"\nassert solution(\"3 2\") == 1, \"Test 2 failed\"\nassert solution(\"3 3\") == 0, \"Test 3 failed\"\nassert solution(\"1000000000000 1048576\") == 118606527258, \"Test 4 failed\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(3) == 1\nassert solution(3) == 0\nassert solution(1000000000000) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Expected output 1, but got {}\".format(solution())"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"-++-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"-+\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"  # empty string\nassert solution(\"-\") == \"No\"  # only one \"-\"\nassert solution(\"-++-\") == \"No\"  # two \"--\"s\nassert solution(\"-+-\") == \"No\"  # two \"-\"s\nassert solution(\"-+++\") == \"No\"  # two \"+\"s\nassert solution(\"-+-+\") == \"No\"  # three \"+\"s\nassert solution(\"-+----\") == \"No\"  # three \"+\"s and two \"--\"s\nassert solution(\"-++-+\") == \"Yes\"  # one \"+\" and one \"+\"\nassert solution(\"-++++\") == \"Yes\"  # two \"+\"s\nassert solution(\"-+++++\") == \"Yes\"  # three \"+\"s\nassert solution(\"-+-+--\") == \"Yes\"  # three \"+\"s and two \"--\"s\nassert solution(\"-+--+\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+--\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+--+\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+--\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+--\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+--\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--\"\nassert solution(\"-+---\") == \"No\"  # two \"+\"s and one \"--"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"+-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == '12.566370614359172464\\n', 'Peter got a new snow blower as a New Year present. Of course, Peter decided to try it immediately. After reading the instructions he realized that it does not work like regular snow blowing machines. In order to make it work, you need to tie it to some point that it does not cover, and then switch it on. As a result it will go along a circle around this point and will remove all the snow from its path."
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\"\n\nsolution_def = \"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '12.566370614359172464', 'The solution is incorrect'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\"\n\nimport math"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 0, 0) == 12.566370614359172464\nassert solution(4, 1, -1) == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 0, 0) == 12.566370614359172464\nassert solution(4, 1, -1) == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(48) == \"9 42\", \"Your code is not correct\"\nassert solution(6) == \"6 6\", \"Your code is not correct\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"48\") == \"9 42\\n\"\nassert solution(\"6\") == \"6 6\\n\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(48) == \"9 42\"\nassert solution(6) == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"48\") == \"9 42\", \"Invalid solution\"\nassert solution(\"6\") == \"6 6\", \"Invalid solution\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected {} but got {} instead.\".format(output(), solution(input()))"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='48\\n') == '9 42\\n'\nassert solution(stdin='6\\n') == '6 6\\n'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n( \\n\") == \"Yes\"\nassert solution(\"3\\n(() \\n\") == \"No\"\nassert solution(\"2\\n() \\n\") == \"Yes\"\nassert solution(\"10\\n((( \\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n()') == 'Yes'\nassert solution('3\\n()') == 'No'\nassert solution('2\\n()') == 'Yes'\nassert solution('10\\n())))(((((') == 'No')"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\" == \"Yes\") == True\nassert solution(\"(())\" == \"No\") == False\nassert solution(\"(()())\" == \"Yes\") == True\nassert solution(\"(()())\" == \"No\") == False\nassert solution(\"(())\" == \"Yes\") == True\nassert solution(\"(())\" == \"No\") == False\nassert solution
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"3\\n()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())(((((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n()(\") == \"Yes\\n\"\nassert solution(\"3\\n(()\") == \"No\\n\"\nassert solution(\"2\\n()\") == \"Yes\\n\"\nassert solution(\"10\\n)))(((((\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\", \"Petya's friends made him a birthday present - a bracket sequence.\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"Petya's friends made him a birthday present - a bracket sequence.\")\nassert solution(\"2\\n()\") == \"Yes\", \"Petya's friends made him a birthday present - a bracket sequence.\")\nassert solution(\"10\\n(((\\n\") == \"No\", \"Petya's friends made him a birthday present - a bracket sequence.\")\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\\n\\n-1\\n0\\n\\n') == '1\\n1\\n5\\n2\\n1\\n'\nassert solution('1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\\n\\n-1\\n0\\n\\n') == '5\\n2\\n'\nassert solution('1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\\n\\n-1\\n0\\n\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"1\\n1\\n\\n5\\n2\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"1\\n1\\n\\n5\\n2\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"1\\n1\\n\\n5\\n2\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"-1\\n0\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"0\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\nassert solution(\"1 50\\n100\\n\") == \"0\\n1\\n\"\nassert solution(\"5 50\\n50 50 50 50\\n\") == \"5\\n5\\n5\\n5\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n1\\n5\\n2\\n'\nassert solution() == '0\\n'\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\\n50\\n\") == 1\nassert solution(\"3 100\\n50 50 100\\n\") == 5\nassert solution(\"2 50\\n50 50\\n\") == -1\nassert solution(\"\") == 0"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\") == \"1\"\nassert solution(\"3 100\") == \"5\"\nassert solution(\"2 50\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1 50\n50\n\"\"\") == \"\"\"1\n1\n\"\"\"\n\nassert solution(\"\"\"3 100\n50 50 100\n\"\"\") == \"\"\"5\n2\n\"\"\"\n\nassert solution(\"\"\"2 50\n50 50\n\"\"\") == \"\"\"-1\n0\n\"\"\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\\n\") == \"1\\n1\\n\\n5\\n2\\n\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\") == \"1\\n1\\n\\n5\\n2\\n\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\") == \"1\\n1\\n\\n5\\n2\\n\\n\"\nassert solution(\"1 50\\n50\\n\\n3 100\\n50 50 100\\n\\n2 50\\n50 50\\n\") == \"1\\n1\\n\\n5\\n2\\n\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1\\n5\\n2\"\nassert solution() == \"5\\n2\"\nassert solution() == \"-1\\n0\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, \"2 6 8\") == \"2\"\nassert solution(5, \"2 3 4 9 12\") == \"4\"\nassert solution(4, \"5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n2 6 8\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"5\n2 3 4 9 12\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"4\n5 7 2 9\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == 6\nassert solution(\"2\\n10 16\\n7 17\\n\") == -1\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"The solution is not correct. Expected: {expected}, Received: {solution}\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == # Solution\nassert type(solution) == str\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Received: {solution}\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 2\\n3 4\") == \"POSSIBLE\"\nassert solution(\"5\\n1 3\\n4 5\") == \"POSSIBLE\"\nassert solution(\"6\\n1 4\\n2 6\\n3 7\") == \"POSSIBLE\"\nassert solution(\"7\\n1 5\\n2 8\\n3 9\\n4 10\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\\n1 2\\n3 5\\n2 2\\n5 5\\n1 1\\n3 4\\n2 3\\n4 5\\n2 2\\n4 3\\n1 1\\n1 1\\n3 2\\n2 4\\n1 1\\n1 1\\n2 1\\n1 1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, got: {solution(sample_input)}\"\n\nsample_input = \"\"\"\n3\n1 1\n4 3 2\n\"\"\"\n\nexpected_output = \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\n\nSolution:\nThe input is given in the format N, P_i, and X_1 X_2... X_N. We can calculate the total weight of the vertices with the same color as v among the vertices contained in the subtree whose root is v by summing the weights of the vertices in that subtree. We can use a dictionary to keep track of the subtree rooted at each vertex, and then iterate through the vertices to find the subtree rooted at each vertex. If we find a vertex whose subtree root is the current vertex, we can calculate the total weight of the vertices in that subtree and add it to the total weight of the current vertex. If the current vertex is not in the dictionary yet, we can initialize it with a subtree rooted at the current vertex and set its subtree root to None.\n\nTo check whether it is possible to allocate colors and weights in this way, we can iterate through the vertices and check whether the subtree rooted at each vertex is a valid subtree. If it is not a valid subtree, then we cannot allocate colors and weights for that vertex.\n\nWe can use a helper function called `is_valid_subtree` to check if a subtree is a valid subtree. The function takes the subtree rooted at a vertex and a dictionary of subtree roots, and returns True if the subtree is a valid subtree, and False otherwise.\n\nLet's implement the solution.<|im_sep|>"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"2\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"The expected output is incorrect.\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test Case 1\"\nassert solution(\"5 1000000009\") == \"4\", \"Test Case 2\"\nassert solution(\"3 1000000007\") == \"0\", \"Test Case 3\"\nassert solution(\"2 1000000005\") == \"0\", \"Test Case 4\"\nassert solution(\"2 1000000006\") == \"0\", \"Test Case 5\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1000000007') == '2\\n'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1000000007') == '2\\n'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test 1 failed\"\nassert solution(\"5 1000000007\") == \"1\", \"Test 2 failed\"\nassert solution(\"10 1000000007\") == \"4\", \"Test 3 failed\"\nassert solution(\"15 1000000007\") == \"3\", \"Test 4 failed\"\nassert solution(\"20 1000000007\") == \"5\", \"Test 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1000000007') == '2\\n'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 1000000007\") == \"2\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 999999228\nprint(\"All tests passed!\")"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Incorrect output for the given input. Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7\\n'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228\\n'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case failed: {input} -> {output}\" for input, output in zip(test_cases, expected_outputs)"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"Input 1\"\nassert solution(\"1 2 3 1\") == \"2\", \"Input 2\"\nassert solution(\"10 2 1 7\") == \"0\", \"Input 3\"\nassert solution(\"2 2 2 2\") == \"2\", \"Input 4\"\nassert solution(\"1 1 1 0\") == \"0\", \"Input 5\"\nassert solution(\"0 0 0 0\") == \"1\", \"Input 6\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"Test 1\"\nassert solution(\"1 2 3 1\") == \"2\", \"Test 2\"\nassert solution(\"10 2 1 7\") == \"0\", \"Test 3\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"  # pass\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 6\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 2\") == \"13\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output\\n6', 'Test Case 1'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"6 2\") == \"6\"\nassert solution(\"7 2\") == \"10\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6\\n'\nassert solution('7 4') == '12\\n'\nassert solution('4 3') == '8\\n'\nassert solution('5 3') == '10\\n'\nassert solution('6 3') == '12\\n'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"5 2\") == \"12\"\nassert solution(\"6 2\") == \"16\"\nassert solution(\"7 2\") == \"12\"\nassert solution(\"8 2\") == \"8\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2457628041"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 5') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '2'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '2'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '2'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9') == '2'\nassert solution('9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '2'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11') == '2'\nassert solution('11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12') == '2'\nassert solution('12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13') == '2'\nassert solution('13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14') == '2'\nassert solution('14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15') == '2'\nassert solution('15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16') == '2'\nassert solution('16\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17') == '2'\nassert solution('17\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18') == '2'\nassert solution('18\\n1 2\\n2 3\\n3 4\\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n3 4\\n1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\\n\") == \"4\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"15\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"120\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"320\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1560\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"6310\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"31800\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"159000\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"790000\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"5600000\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n\") == \"40000000\\n\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n\") == \"300000000\\n\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n\") == \"2500000000\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"0\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n', 'Incorrect output'\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == \"2\", \"Example 1 incorrect\"\nassert solution(example2) == \"18\", \"Example 2 incorrect\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"2\\n\", \"example 1\"\nassert solution(input2) == \"4\\n\", \"example 2\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\"\nassert solution(11) == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"Output\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, expected {output()}\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\"\n\nfrom typing import List\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces\\n') == 'YES'\nassert solution('6 5\\nvk*cup\\nvkcup\\n') == 'YES'\nassert solution('1 1\\nv\\nk\\n') == 'NO'\nassert solution('9 6\\ngfgf*gfgf\\nfgfgf\\n') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\n\\n\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"code*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0.800000000000', \"The output should be 0.8.\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0.260000000000', \"Expected 0.260000000000, got '{}'\".format(solution(open('input.txt', 'r').read()))"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: {output}!= {solution(stdin=input())}\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == 0.8\nassert solution(\"2\\n0.1 0.2\") == 0.26"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\\n\"\nassert solution(\"Input\\n2\\n0.1 0.2\\n\") == \"0.260000000000\\n\"\n\nfrom collections import Counter\n\nn = int(stdin.readline().strip())\nfriends = []\nfor _ in range(n):\n    friend_prob = float(stdin.readline().strip())\n    friends.append((friend_prob, None))\n\nfriends = sorted(friends, key=lambda x: x[0], reverse=True)"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('Input\\n2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected: {output_data}, got: {solution(input_data)}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"All tests passed.\")"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution.input()) == solution.output()\n\nclass Solution:\n    def solution(self, n: int, l: int, v_1: int, v_2: int, k: int) -> float:\n        # calculate the speed of bus\n        bus_speed = v_2\n\n        # calculate the total time for pupils to reach the place of excursion\n        total_time = sum((i + 1) / bus_speed * (l / bus_speed) for i in range(n))\n\n        # calculate the maximum time that can be achieved by pupils to reach the place of excursion\n        max_time = sum((i + 1) / bus_speed * (l / bus_speed) for i in range(1, n + 1))\n\n        # calculate the average time that pupils can achieve to reach the place of excursion\n        avg_time = total_time / n\n\n        # calculate the required time for all pupils to reach the place of excursion\n        required_time = max(max_time, avg_time)\n\n        # calculate the time required to get into the bus\n        bus_time = required_time * bus_speed\n\n        # calculate the final time required for all pupils to reach the place of excursion\n        final_time = bus_time * n\n\n        # return the final time required for all pupils to reach the place of excursion\n        return final_time\n\n\nsolution = Solution()\nn = int(input())\nl = int(input())\nv_1 = int(input())\nv_2 = int(input())\nk = int(input())\n\nprint(solution.solution(n, l, v_1, v_2, k))"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0\nassert solution(\"3 6 1 2 1\") == 4.71"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\"\nassert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\"\nassert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\"\nassert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\"\nassert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\"\nassert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n4.7142857143\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896''') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0.250\\n', \"Test failed\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.2500\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n\") == \"0.2790\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"18\", \"Incorrect output\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n5 2\") == 18\nassert solution(\"0 1\\n0 0\") == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"18\", \"Expected output: 18\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\", \"Expected output 18, but got {}\".format(solution(\"1 5\\n5 2\\n\"))\nassert solution(\"0 1\\n0 0\\n\") == \"8\", \"Expected output 8, but got {}\".format(solution(\"0 1\\n0 0\\n\"))\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '18', \"The solution should return 18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\", \"Incorrect output\"\nassert solution(\"0 1\\n0 0\") == \"8\", \"Incorrect output\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"10\\n\"\nassert solution(\"10\\n\") == \"244\\n\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4, \"Test 1 failed\"\nassert solution(2) == 10, \"Test 2 failed\"\nassert solution(10) == 244, \"Test 3 failed\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 2 2\\n1 4 1 4 9') == '2'\nassert solution('3\\n1 2 3\\n1 1 1\\n') == '0'\nassert solution('5\\n1 4 1 4 9\\n1 1 2 2 1\\n1 2 3 3\\n1 2 3 3') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n6\\n1 1 1 2 2\\n7\\n1 1 1 4 1\\n8\\n1 1 1 1 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n6\\n1 1 1 2 2\\n7\\n1 1 1 4 1\\n8\\n1 1 1 1 4\\n9\\n1 1 1 1 1\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"1\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 2 2\\n1 4 1 4 9\\n1 2 3\\n1 2 3 3 3\\n1 2 3 3 4\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 1 2\\n1 1 2 2\\n1 1 2 2 3\\n1 1 2 2 3 3\\n1 1 2 2 3 3 3\\n1 1 2 2 3 3 4\") == \"2\"\nassert solution(\"3\\n1 1 1\\n1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1 1\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"2\"\nassert solution(\"3\\n1 1 1\\n1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1 1 1\") == \"0\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\\n4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\\n\") == \"0\"\nassert solution(\"4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\\n\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\\n\\n\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabccc') == 'YES', \"Test case 1\"\nassert solution('bbacc') == 'NO', \"Test case 2\"\nassert solution('aabc') == 'YES', \"Test case 3\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"Incorrect output for example 1\"\nassert solution(\"bbacc\") == \"NO\", \"Incorrect output for example 2\"\nassert solution(\"aabc\") == \"YES\", \"Incorrect output for example 3\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == 2\nassert solution(\"4\\n4 1 3 2\") == 2\nassert solution(\"5\\n1 2 3 4 5\") == 1\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n4 1 3 2') == '2'\nassert solution('4\\n4 1 2 5 3') == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4 1 3 2\") == \"2\" # Teleport the 4-th car, then the 5-th car to the end of the train\nassert solution(\"4\\n4 1 5 3\") == \"2\" # Teleport the 4-th car, then the 5-th car to the beginning of the train\n\nfrom typing import List"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n4 1 2 5 3') == '2'\nassert solution('4\\n4 1 3 2') == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Test failed for input 1\"\n\ninput_str = input().strip()\nn = int(input_str.split()[0])\np = list(map(int, input_str.split()[1:]))\n\nactions = 0\nfor i in range(n - 1):\n    if p[i] < p[i+1]:\n        actions += 1\n\nprint(actions)"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', \"The minimum number of actions needed to sort the railway cars is 2.\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n\") == \"3.500000000000\\n\"\nassert solution(\"6 3\\n\") == \"4.958333333333\\n\"\nassert solution(\"2 2\\n\") == \"1.750000000000\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\", \"Incorrect output\"\nassert solution(\"6 3\") == \"4.958333333333\", \"Incorrect output\"\nassert solution(\"2 2\") == \"1.750000000000\", \"Incorrect output\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3.5', \"Expected output 3.5, but got '{}' instead.\".format(solution(stdin))\nassert solution(stdin) == '4.96', \"Expected output 4.96, but got '{}' instead.\".format(solution(stdin))\nassert solution(stdin) == '1.75', \"Expected output 1.75, but got '{}' instead.\".format(solution(stdin))"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\", \"Test case 1 failed\"\nassert solution(\"6 3\") == \"4.958333333333\", \"Test case 2 failed\"\nassert solution(\"2 2\") == \"1.750000000000\", \"Test case 3 failed\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"3.5\", \"The expected output is incorrect.\"\nassert solution(\"6 3\") == \"4.96\", \"The expected output is incorrect.\"\nassert solution(\"2 2\") == \"1.76\", \"The expected output is incorrect.\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '3\\n5\\n3\\n0'\nassert solution() == '3\\n5\\n3\\n0'\nassert solution() == '3\\n5\\n3\\n0'\nassert solution() == '3\\n5\\n3\\n0'\nassert solution() == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"2\\n3\\n2\\n0\"\nassert solution(\"2\\n2\\n<>\") == \"0\"\nassert solution(\"2\\n2\\n\\n\") == \"0\"\nassert solution(\"2\\n2\\n<>\") == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"5\\n5\\n55\\n555\\n55555\\n555555\\n5555555\\n55555555\\n555555555\\n5555555555\\n55555555555\\n555555555555\\n5555555555555\\n55555555555555\\n555555555555555\\n5555555555555555\\n55555555555555555\\n555555555555555555\\n5555555555555555555\\n5555555555555555555\\n5555555555555555555\\n55555555555555555555\\n55555555555555555555\\n55555555555555555555\\n55555555555555555555\\n55555555555555555555\\n55555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n5555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n5555555555555555555555\\n5555555555555555555555\\n5555555555555555555555\\n555555555555555555555\\n555555555555555555555\\n5555555555555555555555\\n5555555555555555555555\\n5555555555555555555555\\n5555555555555555555555\\n555555555555555555"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\"\n\nassert solution(\"3\\n5\\n3\\n0\\n\") == \"3\\n5\\n3\\n0\\n\"\n\nassert solution(\"2\\n<>\") == \"3\\n5\\n0\\n\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n3\\n<--\\n2\\n<>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<--\\n2\\n<>') == '3\\n3\\n3\\n0'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3\n    4 5\n    4 5\n    4 10\n    '''\n) == '16'\n\nassert solution(\n    '''\n    4\n    1 100\n    100 1\n    1 100\n    100 1\n    '''\n) == '202'\n\nassert solution(\n    '''\n    3\n    1 1\n    100 100\n    1 1\n    '''\n) == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n4 5\\n4 10\\n') == '16\\n9 9 10 \\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202\\n101 101 101 101 \\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input) == expected_output, f\"Expected {expected_output}, got {solution(example_input)}\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '16', 'Output is not as expected'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10 \\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == '202\\n101 101 101 101 \\n'\nassert solution('3\\n1 1\\n100 100\\n1 1') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10\\n') == '16'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10\\n') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"16\\n9 9 10\\n202\\n101 101 101 101\\n-1\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\", \"Your solution is not correct\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \", \"Your solution is not correct\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \", \"Your solution is not correct\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"1 2 2\", \"Test case 1 failed.\"\nassert solution(3) == \"0 2 \", \"Test case 2 failed.\"\nassert solution(5) == \"0 1 3\", \"Test case 3 failed.\"\n\nn = int(stdin.readline().strip())\na = list(map(int, stdin.readline().strip().split()))"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0 2\"\nassert solution(4) == \"1 2\"\nassert solution(5) == \"0 1 3\"\nassert solution(10) == \"0 1 1 1 1\"\nassert solution(15) == \"0 1 2 3 2\"\nassert solution(20) == \"0 1 3 5 1\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\\n3\\n1 2 3\\n\\n5\\n1 2 3 2 2\\n\\n\") == \"1 2 2\\n0 1 3\\n0 2\\n\", \"First test failed\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"1 2 2\\n\"\nassert solution(3) == \"0 2\\n\"\nassert solution(5) == \"0 1 3\\n\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2', \"Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction. \\n\\nFrom the window in your room, you see the sequence of n hills, where i-th of them has height a_{i}. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5, 4, 6, 2, then houses could be built on hills with heights 5 and 6 only. \\n\\nThe Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan? \\n\\nHowever, the exact value of k is not yet determined, so could you please calculate answers for all k in range $1 \\leq k \\leq \\lceil \\frac{n}{2} \\rceil$? Here $\\lceil \\frac{n}{2} \\rceil$ denotes n divided by two, rounded up. \\n\\n-----Input-----\\n\\nThe first line of input contains the only integer n (1 \u2264 n \u2264 5000)\u2014the number of the hills in the sequence. \\n\\nSecond line contains n integers a_{i} (1 \u2264 a_{i} \u2264 100 000)\u2014the heights of the hills in the sequence. \\n\\n-----Output-----\\n\\nPrint exactly $\\lceil \\frac{n}{2} \\rceil$ numbers separated by spaces. The i-th printed number should be equal to the minimum number of hours required to level hills so it becomes possible to build i houses. \\n\\n-----Examples-----\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n1 2 2\\n\\nInput\\n3\\n1 2 3\\n\\nOutput\\n0 2\\n\\nInput\\n5\\n1 2 3 2 2\\n\\nOutput\\n0 1 3 \"\n\nassert solution('3\\n1 2 3') == '0 2 ', \"Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction. \\n\\nFrom the window in your room, you see the sequence of n hills, where i-th of them has height a_{i}. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5, 4, 6, 2, then houses could be built on hills with heights 5 and 6 only. \\n\\nThe Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan? \\n\\nHowever, the exact value of k is not yet determined, so could you please calculate answers for all k in range $1 \\leq k \\leq \\lceil \\frac{n}{2} \\rceil$? Here $\\lceil \\frac{n}{2} \\rceil$ denotes n divided by two, rounded up. \\n\\n-----Input-----\\n\\nThe first line of input contains the only integer n (1 \u2264 n \u2264 5000)\u2014the number of the hills in the sequence"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"5\n    1 1 1 1 1\n    \"\"\"\n) == \"1 2 2\\n\"\n\nassert solution(\n    \"\"\"3\n    1 2 3\n    \"\"\"\n) == \"0 2\\n\"\n\nassert solution(\n    \"\"\"5\n    1 2 3 2 2\n    \"\"\"\n) == \"0 1 3\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('101101\\n110\\n') == '110110\\n'\nassert solution('10010110\\n100011\\n') == '01100011\\n'\nassert solution('10\\n11100\\n') == '01\\n'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('101101', '110') == '110110'\nassert solution('10010110', '100011') == '01100011'\nassert solution('10', '11100') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 110110, \"The given code is incorrect.\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"110110\"\n\ns = \"101101\"\nt = \"110\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution() == 0\nassert solution() == -1"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 5 2\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 0 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    \"\"\") == '1'\n\nassert solution(\"\"\"\n    3 4 1\n    1 0 0 0\n    0 1 1 1\n    1 1 1 0\n    1 0 0 1\n    1 0 0 1\n    \"\"\") == '-1'\n\nassert solution(\"\"\"\n    3 4 1\n    1 0 0 1\n    0 1 1 0\n    1 0 0 1\n    1 0 0 1\n    \"\"\") == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1\nassert solution() == 0\nassert solution() == 1\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1\\n'\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == '-1\\n'\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n') == '0\\n'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1') == 0\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n').strip() == '1'\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n').strip() == '-1'\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n').strip() == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 4\"\nassert solution(\"0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\nassert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"0 0 0 0 0\"\nassert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n9999 10000 9998\") == \"9999 10000 9998\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 2 2\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\\n\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 2 1 2 2 2 1 2 2 2 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 2 3 1 2 2', \"The output should be 2 2 3 1 2 2, but it is: {}\".format(solution())"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2\"\nassert solution(\"0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 3 2 3\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2  \"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2 3 1 2\\n'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998\\n'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 3 1 2 1 1\", \"Solution should return '2 2 3 1 2 1 1', but returned {}\".format(solution())"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test failed. Expected output: {output}, got {solution(input)}\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == 22\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == 103\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == 105\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 22, \"Expected output: 22\"\nassert solution() == 103, \"Expected output: 103\"\nassert solution() == 105, \"Expected output: 105\"\nassert solution() == 0, \"Expected output: 0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 22\nassert solution == 103\nassert solution == 105\nassert solution == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected\nfor test_case in range(1, 6):\n    input = f'Input{test_case}'\n    expected = f'Output{test_case}'\n    assert solution(input) == expected"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nNO\"\nassert solution == \"YES\\n3 3 2 3\\nYES\\n2 3 1 3\\nYES\"\nassert solution == \"YES\\n3 3 2 3\\nYES\\n1 3 1 3\\nYES\"\nassert solution == \"YES\\n3 3 2 3\\nYES\\n2 3 1 3\\nYES\"\nassert solution == \"YES\\n3 3 2 3\\nYES\\n3 3 2 3\\nYES\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution(r'3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution(r'3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\nYES\\n1 3 1 3'\nassert solution(r'3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"YES\\n2 3 2 3\\n1 3 1 3\\n3 3 2 3\"\nassert solution(solution) == \"YES\\n1 3 1 3\\n3 3 2 3\"\nassert solution(solution) == \"YES\\n3 3 2 3\"\nassert solution(solution) == \"YES\\n2 3 2 3\"\nassert solution(solution) == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\nYES\\n3 3 2 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '''YES\n2 3 2 3\nYES\n1 3 1 3\nYES\n3 3 2 3\nYES'''\n\nassert solution(open('sample_input.txt', 'r')) == '''YES\n1 3 1 3\nYES\n3 3 2 3\nYES'''\n\nassert solution(open('sample_input.txt', 'r')) == '''NO'''"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n4 1\\n2 3 4 1\\n1 2 3 4\\n\\nOutput\\nNO\\n\\nInput\\n4 1\\n4 3 1 2\\n3 4 2 1\\n\\nOutput\\nYES\\n\\nInput\\n4 3\\n4 3 1 2\\n3 4 2 1\\n\\nOutput\\nYES\\n\\nInput\\n4 2\\n4 3 1 2\\n2 1 4 3\\n\\nOutput\\nYES\\n\\nInput\\n4 1\\n4 3 1 2\\n2 1 4 3\\n\\nOutput\\nNO') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3\\n') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3\\n') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3\\n') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3\\n') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\\n\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(b\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\", \"Test 1\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"Test 2\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input: {stdin}\\nExpected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\nassert solution(\"8\") == \"1 2\\n3 3\\n5 3\\n6 4\\n7 5\\n8 6\\n9 7\"\nassert solution(\"10\") == \"4 2\\n1 4\\n5 4\\n7 5\\n9 5\\n10 6\\n11 7\\n12 8\"\nassert solution(\"1000000\") == \"11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n123 123\\n124 124\\n125"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {i} failed.\" for i, (input, expected) in enumerate(test_cases)"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '-1\\n'\nassert solution('3\\n1 2 3\\n') == '3\\n'\nassert solution('2\\n1 2 1\\n') == '-1\\n'\nassert solution('3\\n1 2 1\\n') == '3\\n'\nassert solution('5\\n1 2 1\\n') == '-1\\n'\nassert solution('4\\n1 2 1\\n') == '-1\\n'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"  # Polycarpus won't be able to empty the chests\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\"  # There is only one possible move to finish the game"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\n1''') == -1\n\nassert solution('''3\n1 2 3''') == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"-1\", \"The minimum number of moves needed to finish the game is -1.\"\n\nprint(\"-1\") # This line will test the correctness of the solution."
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '-1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(\"OK\") if expected == solution(stdin) else print(\"BAD\")"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('46 2\\n2018 214\\n') == '3\\n92 205 1'\nassert solution('46 5\\n2018 500\\n') == '-1'\nassert solution('100 20\\n2018 2018\\n') == '1'\nassert solution('200 50\\n2018 500\\n') == '-1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\"\nassert solution(\"2 3\\n1 1\\n\") == \"2\\n1 0\"\nassert solution(\"123 4\\n0 0\\n\") == \"-1\"\nassert solution(\"1 0\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"7\n0 1 0 0 1 1 1\n\"\"\"\n\nassert solution(stdin) == \"\"\"3\n92 205 1\n\"\"\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"2018 214\\n\") == \"2\\n2018 214\\n\"\nassert solution(\"46 2\\n\") == \"-1\\n\"\nassert solution(\"2018 214\\n2018 214\\n\") == \"-1\\n\"\nassert solution(\"46 2\\n2018 214\\n2018 214\\n\") == \"3\\n92 205 1\\n92 205 1\\n\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"10 1\") == \"1\\n0 0 0 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5.000000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == '5.000000000000000\\n'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6\\n') == '5.000000000000000'\nassert solution('4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n') == '0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5.000000000000000'\nassert solution(stdin) == '0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5.000000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5.000000000000000\", \"The expected output is not correct.\"\n\nassert abs(solution(stdin) - 5.000000000000000) <= 10**-6, \"The expected output is not correct.\"\n\nassert solution(stdin) == \"0.400000000000000\", \"The expected output is not correct.\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3') == 4\nassert solution('8 2') == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4', \"Incorrect output.\"\nassert solution(input()) == '5', \"Incorrect output.\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5\nassert solution(\"3 4\") == 6\nassert solution(\"7 5\") == 7"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '4\\n'\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n8 2\") == \"4\"\nassert solution(\"10 10\\n30 30\") == \"6\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == 4\nassert solution('8 2') == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2, 3) == 4\nassert solution(8, 2) == 5"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n4 5 7\"\n) == \"Conan\\n\"\n\nassert solution(\n    \"2\\n1 1\"\n) == \"Agasa\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan\\n'\nassert solution('2\\n1 1\\n') == 'Agasa\\n'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == 'Conan'\nassert solution(stdin=input()) == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Conan\", \"The solution is incorrect.\"\nassert solution() == \"Agasa\", \"The solution is incorrect.\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"3\n    4 5 7\n    \"\"\"\n) == \"Conan\"\n\nassert solution(\n    \"\"\"2\n    1 1\n    \"\"\"\n) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\"\nassert solution(\"1\\n1 2\\n\") == \"Conan\"\nassert solution(\"1\\n1 2 3\\n\") == \"Agasa\"\nassert solution(\"1\\n1 2 3 4\\n\") == \"Agasa\"\nassert solution(\"1\\n1 2 3 4 5\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\nassert solution(\"3\\n4 2 1 3\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\\n\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\\n\"\nassert solution(\"5\\n5 4 3 2 1\\n\") == \"Agasa\\n\"\nassert solution(\"1\\n6 4 3 2 1\\n\") == \"Conan\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed!\")"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n..\\n..#\\n#.#\"\n\nsolution(\"2 3\")\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3 3\\n##.#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"\"\"\n3 3\n#.\n.#\n\"\"\".strip()\n\nassert solution(\"5 5\") == \"\"\"\n5 5\n#.\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n..\n.."
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##\\n..#\\n#.#\\n\", \"Test case 1\"\nassert solution(\"4 5\") == \"5 5\\n.##\\n..#\\n#.#\\n\", \"Test case 2\"\nassert solution(\"1 1\") == \"1 1\\n..#\\n#.#\\n\", \"Test case 3\"\nassert solution(\"10 10\") == \"10 10\\n.##\\n..#\\n#.#\\n\", \"Test case 4\"\nassert solution(\"20 20\") == \"20 20\\n.##\\n..#\\n#.#\\n\", \"Test case 5\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2, 3) == \"3 3\\n3 3\\n3 3\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 3\\n\") == \"\"\"3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 "
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.\\n..#\\n#.#\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5\\n\\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3\\n\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5\\n\\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\") == \"Output\\n4\\n1 3 4 5\\n\\nOutput\\n1\\n3\\n\\nOutput\\n0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\") == \"4\\n1 3 4 5\\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5\\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n0\n0\n0\n0\n0\n'''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '4\\n1 3 4 5 0\\n\\n3\\n2 3 5\\n\\n2\\n0\\n'\nassert solution('3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '1\\n3 0\\n\\n1\\n0\\n'\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '0\\n0\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '3\\n2 3 5\\n\\n0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3 3\\n1 2 3\\n1 2 3\\n9\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\\n\\n\") == \"4\\n\\n1\\n\"\nassert solution(\"Input\\n3 3\\n1 2 3\\n1 2 3\\n9\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\\n\\n\") == \"4\\n\\n1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == '1'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Your solution is incorrect.\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"4\", \"Solution is incorrect.\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\na 2 3\\na 2 3\\nx 9\\n\") == \"4\\n\"\nassert solution(\"5 1\\nx 5 4 2 4 5\\nx 2\\nx 5\\n\") == \"1\\n\"\nassert solution(\"3 4\\na 3 2\\na 1 3\\nx 10\\n\") == \"1\\n\"\nassert solution(\"5 4\\nx 5 5 4 5\\nx 5\\nx 5\\n\") == \"0\\n\"\nassert solution(\"3 5\\na 3 1\\na 1 1\\nx 10\\n\") == \"0\\n\"\nassert solution(\"6 7\\na 6 5\\na 4 6\\nx 10\\n\") == \"4\\n\"\nassert solution(\"8 9\\na 8 7\\na 6 8\\nx 10\\n\") == \"0\\n\"\nassert solution(\"9 10\\na 9 8\\na 7 9\\nx 10\\n\") == \"1\\n\"\nassert solution(\"1 2 3\\na 2 3\\na 2 3\\nx 9\\n\") == \"4\\n\"\nassert solution(\"1 2 3\\na 2 3\\na 2 3\\nx 9\\n\") == \"4\\n\"\nassert solution(\"1 2 3\\na 2 3\\na 2 3\\nx 9\\n\") == \"4\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1\\n'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 3) == \"NO\"\nassert solution(3, 4) == \"cbd\"\nassert solution(4, 4) == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncab\\n\") == \"NO\"\nassert solution(\"3 4\\ncab\\n\") == \"cbd\"\nassert solution(\"4 4\\nabd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"quailty\"\nassert solution(\"There are $n$ cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly $k$ consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these $n$ cards face the same direction after one's move, the one who takes this move will win.\") == \"quailty\"\nassert solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"tokitsukaze\"\nassert solution(\"Input\\n4 2\\n0101\\nOutput\\nquailty\\n\") == \"quailty\"\nassert solution(\"Input\\n6 1\\n010101\\nOutput\\nonce again\\n\") == \"once again\"\nassert solution(\"Input\\n6 5\\n010101\\nOutput\\ntokitsukaze\\n\") == \"tokitsukaze\"\nassert solution(\"Input\\n4 1\\n0011\\nOutput\\nonce again\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '50\\n'\nassert solution() == '7\\n'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\\n\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\\n15 7\\n\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\nassert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output(), f\"Expected {output()}, but got {solution(stdin=input())}.\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\nassert solution('2 5\\n5 1\\n') == '1 2\\n'\nassert solution('3 3\\n1 1\\n') == '1 3\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} Failed. Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n3 0\\n1 10\\n5 3\") == \"1 6\\n5 5\"\nassert solution(\"3 2\\n0 0\\n1 3\") == \"1 3\\n1 3\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n5 5\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n-2 5 -1\"\"\") == \"\"\"2\n2 3\n3 3\"\"\"\n\nassert solution(\"\"\"3\n1 2 3\"\"\") == \"\"\"1\n1 2 3\"\"\"\n\nassert solution(\"\"\"3\n2 2 2\"\"\") == \"\"\"0\n2\n2\"\"\"\n\nassert solution(\"\"\"5\n-2 1 3 -4 6\"\"\") == \"\"\"2\n2 4\n4 5\n5 5\n6 6\n\"\"\"\n\nassert solution(\"\"\"1\n1\"\"\") == \"\"\"0\n1\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3\\n3 3\\n'"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"2\n2 3\n3 3\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\\n\"\nassert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"2\\n-2 5 -1\\n\") == \"0\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''2\n2 3\n3 3'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"2\\n1\\n2\") == \"1\"\nassert solution(\"5\\n1 2 3\\n4 5 6\\n7 8 9\") == \"4\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n2\\n0 3\\n1 5\\n\\nOutput\\n3\\n\\nInput\\n1\\n0 4\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 10\\n2 2\\n\\nOutput\\n3') == '3\\n\\n1\\n\\n3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\\n2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n0 3\n1 5\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"1\n0 4\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"2\n1 10\n2 2\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 5"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"0\\n0\\n\"\nassert solution(stdin=\"3\\n25\\n50\") == \"3\\n0 25 50\\n\"\nassert solution(stdin=\"6\\n18\\n5\\n6\\n10\\n12\\n2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The given solution does not match the expected output.\\nGot: {solution(stdin)}\\nExpected: {expected}\"\nfor i in range(1, len(expected) + 1):\n    print(expected[i], end=\" \")"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Test failed!\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Input: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\"\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\"\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"\"\"\n6 18\n5 6 1 10 12 2\n\"\"\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\n\nassert solution(stdin=\"\"\"\n3 50\n25 25 50\n\"\"\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 2, \"Expected output 2, got {}\".format(solution(2)) # should be 2\nassert solution(6) == 3, \"Expected output 3, got {}\".format(solution(6)) # should be 3"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Output\\n3'\nassert solution() == 'Output\\n2'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 10, 20, 30) == 180\nassert solution(3, 3, 2, 4) == 21\nassert solution(1, 5, 10) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 180\nassert solution(1) == 50\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(\"1\\n5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(\"1\\n5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 180, \"Expected 180, got {}\".format(solution(3))\nassert solution(3) == 180, \"Expected 180, got {}\".format(solution(3))\nassert solution(1) == 50, \"Expected 50, got {}\".format(solution(1))"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21\\n'\nassert solution('1\\n5 10\\n') == '50\\n'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\", \"Your code is incorrect\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(2), \"Expected output: 2\"\nassert solution(str(input())) == str(1), \"Expected output: 1\"\nassert solution(str(input())) == str(4), \"Expected output: 4\"\nassert solution(str(input())) == str(3), \"Expected output: 3\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed for example: {}\".format(input())"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(5) == 1\nassert solution(4) == 4\nassert solution(9) == 3"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\", \"The output is incorrect.\\n\"\nprint(\"5\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nassert solution(\"2\\n0 0\\n1 0\\n1 1\") == \"2\\n\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\\n2 1\\n3 1\\n3 0\") == \"18\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == # Solution goes here"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Incorrect output\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"100\\n0 0\\n0 1\\n1 0\\n1 1\\n0 1\\n\") == \"15\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n\") == \"5\"\nassert solution(\"5\\n0 0\\n1 0\\n1 1\\n0 1\\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\"\nprint(5)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\", \"Incorrect output: \" + solution(input())"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\n\nHere is the Python code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    3\n    B 1\n    W 2\n    B 3\n    W 1\n    W 3\n    B 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n    10\n    R 1\n    G 2\n    B 3\n    W 4\n    B 5\n    R 6\n    G 7\n    B 8\n    W 9\n    R 10\n    G 11\n    B 12\n\"\"\") == \"15\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\\nB\\na_1\\nc_2 a_2\\n:c_3 a_3\\nW\\n:c_4 a_4\\nW\") == \"0\"\nassert solution(\"5\\nB\\na_1\\nc_2 a_2\\n:c_3 a_3\\nW\\n:c_4 a_4\\nW\") == \"3\"\nassert solution(\"1\\nB\\na_1\\nc_2 a_2\\n:c_3 a_3\\nW\\n:c_4 a_4\\nW\") == \"0\"\nassert solution(\"5\\nB\\na_1\\nc_2 a_2\\n:c_3 a_3\\nW\\n:c_4 a_4\\nW\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"1\\n1\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n1\\n\") == \"2\"\nassert solution(\"1\\n3\\n1\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n3\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n3\\n1\\n\") == \"2\"\nassert solution(\"1\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n3\\n2\\n\") == \"2\"\nassert solution(\"1\\n1\\n3\\n3\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n2\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n3\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n4\"\nassert solution(input()) == \"Output\\n4\"\nassert solution(input()) == \"Output\\n4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n6\\n3\\n') == '4'\nassert solution('5\\n3\\n5\\n') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n6\\n3\\n') == '4'\nassert solution('5\\n3\\n5\\n') == '4'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576') == '2\\n'\nassert solution('2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576') == '2\\n'\nassert solution('2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576') == '2\\n'\nassert solution('2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576') == '2\\n'\nassert solution('2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576') == '2\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '2', \"Output: The largest number in the array which is not a perfect square is 2\"\nassert solution('8') == '32', \"Output: The largest number in the array which is not a perfect square is 32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n4 2\\n') == '2\\n'\nassert solution('8\\n1 2 4 8 16 32 64 576\\n') == '32\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\\n4 2\\n\\n8\\n1 2 4 8 16 32 64 576\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\n5 3\\n\\n6\\n1 2 3\\n\") == \"5\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"  # Should return \"2\"\nassert solution(\"8\") == \"32\"  # Should return \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed for solution\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2, \"Your implementation is incorrect.\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2'\nassert solution('50 2\\n100 25\\n') == '3'\nassert solution('400 4\\n100 300 450 500\\n') == '2'\nassert solution('50 2\\n100 25\\n') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2'\nassert solution('50 2\\n100 25\\n') == '3'\nassert solution('400 4\\n100 300 450 500\\n') == '2'\nassert solution('50 2\\n100 25\\n') == '3'\nassert solution('100 300 450 500\\n') == '1'\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''400 4\n100 300 450 500''') == '2'\nassert solution('''50 2\n100 25''') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed: Expected output {expected_output}, got {solution(input())}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2\\n'\nassert solution('50 2\\n100 25\\n') == '3\\n'\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data}, {expected_output}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"100 500\") == \"1\"\nassert solution(\"500 0\") == \"0\"\nassert solution(\"500 1000\") == \"1\"\nassert solution(\"500 1001\") == \"-1\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\", \"Test failed\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2') == '6\\n', \"The output is incorrect.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test case 1 failed.\"\n\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"The output is not correct.\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Takahashi and Aoki are going to together construct a sequence of integers.\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2') == '6\\n'\nassert solution('5 3') == '12\\n'\nassert solution('6 2') == '18\\n'\nassert solution('7 3') == '24\\n'\nassert solution('8 2') == '30\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Takahashi and Aoki are going to together construct a sequence of integers. First, Takahashi will provide a sequence of integers a, satisfying all of the following conditions: - The length of a is N. - Each element in a is an integer between 1 and K, inclusive. - a is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original. Then, Aoki will perform the following operation an arbitrary number of times: - Move the first element in a to the end of a. How many sequences a can be obtained after this procedure, modulo 10^9+7?\"\n\nfrom typing import List"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"6\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\", \"Test case failed\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"499122178\", \"Incorrect result\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"499122178\\n499122178\\n499122178\\n\", \"Expected values not equal\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"499122178\"\nassert solution(10) == \"946405121\"\nassert solution(5) == \"355263074\"\nassert solution(11) == \"946405121\"\nassert solution(10000) == \"946405121\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 2 failed\"\n\nassert solution(\"5\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 3 failed\"\n\nassert solution(\"6\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 4 failed\"\n\nassert solution(\"7\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 5 failed\"\n\nassert solution(\"8\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 6 failed\"\n\nassert solution(\"9\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 7 failed\"\n\nassert solution(\"10\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 8 failed\"\n\nassert solution(\"11\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 9 failed\"\n\nassert solution(\"12\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 10 failed\"\n\nassert solution(\"13\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 11 failed\"\n\nassert solution(\"14\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 12 failed\"\n\nassert solution(\"15\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 13 failed\"\n\nassert solution(\"16\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 14 failed\"\n\nassert solution(\"17\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 15 failed\"\n\nassert solution(\"18\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 16 failed\"\n\nassert solution(\"19\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 17 failed\"\n\nassert solution(\"20\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 18 failed\"\n\nassert solution(\"21\\n\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 19 failed\"\n\nassert solution(\"22\\n\") == \"499122"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"4\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"5\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"6\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"7\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"8\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"499122178\"\nassert solution(7) == \"1697750790\"\nassert solution(12) == \"1153864706\"\nassert solution(20) == \"1042485527\"\nassert solution(21) == \"1042485527\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"4\\n\") == \"500000000\\n500000000\\n500000000\\n\"\nassert solution(\"5\\n\") == \"500000000\\n500000000\\n500000000\\n\"\nassert solution(\"6\\n\") == \"500000000\\n500000000\\n500000000\\n\"\nassert solution(\"7\\n\") == \"500000000\\n500000000\\n500000000\\n\"\nassert solution(\"8\\n\") == \"500000000\\n500000000\\n500000000\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '499122178', \"Your solution is incorrect\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '499122178'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"6\", \"Incorrect output for 2\"\nassert solution(\"3\") == \"6669\", \"Incorrect output for 3\"\nassert solution(\"10\") == \"-1\", \"Incorrect output for 10\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"6669\"\nassert solution(10) == \"6666666669\"\nassert solution(5) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n\nfrom typing import List\nimport re"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nassert solution('2\\n') == '-1\\n'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution(2) == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"\n\nfor i in range(n):\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = [int(x) for x in input().split()]\n    \n    if triple_exists(a, b, c):\n        print(' '.join(map(str, a)) +'' +''.join(map(str, b)) +'' +''.join(map(str, c)))\n        break\n    else:\n        print(\"-1\")"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3'''\n\nassert solution(stdin) == '''-1'''"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3'\nassert solution(2) == '-1'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'\n\nfrom collections import deque"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\n\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'\nprint('All tests passed!')"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\" # example 1\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\" # example 2\nassert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n16 0 3 8000\\n\") == \"2500\" # example 3"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"24500\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"24500\"\nassert solution(input()) == \"24500\"\nassert solution(input()) == \"24500\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == '24500\\n'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '-1\\n'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '24500'\nassert solution(open('input2.txt', 'r')) == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 24500\nassert solution(input()) == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"24500\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\\n\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\\n\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == 0.828427125, \"The output is incorrect.\"\nassert solution(\"6 4 30\") == 19.668384925, \"The output is incorrect.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '0.828427125'\nassert solution(open('input.txt', 'r').read()) == '0.828427125'"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\", \"Input 1\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\", \"Input 2\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\nassert solution(\"1 1 0\") == 0\nassert solution(\"1 1 -45\") == 0\nassert solution(\"6 4 180\") == 0\nassert solution(\"6 4 -30\") == 0\nassert solution(\"1 1 180\") == 1000000000"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\\n992\"\nassert solution(stdin) == \"Output\\n992\"\nassert solution(stdin) == \"Output\\n992\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == '992'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == '1'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000\\n'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == '992\\n'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == '1\\n'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\\n3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\\n2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"The output for the given test cases is not correct. Expected: {expected}, but got: {solution(input)}\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == 3000\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == 992\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == 1"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Input {stdin} does not produce output {expected_output}.\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\"\n\nsolution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\")\nsolution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\")\nsolution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\")"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '6\\n'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '2\\n'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62\\n'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n2\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n62\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n62\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == 6\nassert solution(stdin=\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == 2\nassert solution(stdin=\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == 62\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 62"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"aab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\", \"The first string 'aaba' is not equivalent to 'abaa'.\"\nassert solution(\"aabb\") == \"NO\", \"The first string 'aabb' is equivalent to 'bbaa'.\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aabb') == 'NO'\nassert solution('abaa') == 'YES'\nassert solution('aaba') == 'YES'\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabb\") == \"YES\", \"The first string is not equivalent to the second string\"\nassert solution(\"abaa\") == \"YES\", \"The second string is not equivalent to the first string\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"NO\"\nassert solution(3) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"NO\"  # Correct solution\nassert solution(1) == \"YES\"  # Correct solution"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case} failed. Expected output: '{expected_output}', got: '{solution(input())}'\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\\n1\\n1\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\\n2\\n0\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"NO\\n\"\nassert solution(\"1\") == \"YES\\n(0, 1)\\n(0, 2)\\n(1, 0)\\n(1, 2)\\n(2, 0)\\n(2, 1)\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ab') == 'Yes'\nassert solution('ac') == 'Yes'\nassert solution('cd') == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('1 2 3') == 'No'\nassert solution('test') == 'Yes'\nassert solution('tezt') == 'Yes'\nassert solution('test.est') == 'Yes'\nassert solution('tes.') == 'Yes'\nassert solution('a b c d 1 2 3 4') == 'No'\nassert solution('.......') == 'Yes'\nassert solution('....svn...') == 'Yes'\nassert solution('....git...') == 'Yes'\nassert solution('....svn...git...') == 'Yes'\nassert solution('....git...svn...') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git....') == 'Yes'\nassert solution('....git.svn....') == 'Yes'\nassert solution('....svn...git....') == 'Yes'\nassert solution('....git...svn....') == 'Yes'\nassert solution('....svn.git."
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\\n?es?\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\\n.???def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\na?\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ab') == 'a?'\nassert solution('abac') == 'a?c'\nassert solution('abacde') == 'a?cde'\nassert solution('abacde123') == 'a?c'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"No\"\nassert solution(\"input.txt\") == \"Yes\\na?\"\nassert solution(\"input.txt\") == \"No\"\nassert solution(\"input.txt\") == \"No\"\nassert solution(\"input.txt\") == \"No\"\nassert solution(\"input.txt\") == \"No\"\nassert solution(\"input.txt\") == \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ab') == 'Yes\\na?'\n\nassert solution('ac') == 'Yes\\na?'\n\nassert solution('cd') == 'Yes\\na?'\n\nassert solution('1 2') == 'No'\n\nassert solution('1 2 3') == 'No'\n\nassert solution('1 4 5') == 'No'\n\nassert solution('test') == 'Yes\\na\\x00'\n\nassert solution('tezt') == 'Yes\\xa3'\n\nassert solution('test.est') == 'Yes\\x00'\n\nassert solution('tes.t') == 'Yes\\x00'\n\nassert solution('.svn') == 'Yes\\x00'\n\nassert solution('.git') == 'Yes\\x00'\n\nassert solution('...') == 'Yes\\x00'\n\nassert solution('..') == 'Yes\\x00'\n\nassert solution('.') == 'Yes\\x00'\n\nassert solution('.est') == 'Yes\\x00'\n\nassert solution('..t') == 'Yes\\x00'\n\nassert solution('a') == 'No'\n\nassert solution('b') == 'No'\n\nassert solution('c') == 'No'\n\nassert solution('dd') == 'No'\n\nassert solution('a a a') == 'No'\n\nassert solution('a b a') == 'No'\n\nassert solution('a c d') == 'No'\n\nassert solution('a d a') == 'No'\n\nassert solution('a') == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a?ba?\") == \"Yes\\na?b\"\nassert solution(\"test\") == \"No\"\nassert solution(\"test.est\") == \"No\"\nassert solution(\"tes.tset\") == \"Yes\\ntest.tset\"\nassert solution(\"a.b.c\") == \"No\"\nassert solution(\"a\") == \"No\"\nassert solution(\"a.b.c.d\") == \"Yes\\na.b.c.d\"\nassert solution(\"a.b.c.d.e\") == \"No\"\nassert solution(\"a.b.c.d.e.f\") == \"No\"\nassert solution(\"....\") == \"No\"\nassert solution(\"...a.b.c.d.e.f...\") == \"Yes\\na.b.c.d.e.f...\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"....\") == \"No\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"...a.b.c.d.e.f...\") == \"Yes\\na.b.c.d.e.f...\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"test\") == \"Yes\\na?\"\nassert solution(\"teszt\") == \"Yes\\na?\"\nassert solution(\"test.est\") == \"Yes\\na?\"\nassert solution(\"tes.te\") == \"Yes\\na?\"\nassert solution(\"a\") == \"Yes\\na?\"\nassert solution(\"b\") == \"Yes\\na?\"\nassert solution(\"c\") == \"Yes\\na?\"\nassert solution(\"dd\") == \"Yes\\na?\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"test.svn.git.........\") == \"Yes\\n?.svn.git.??\"\nassert solution(\"a b c d\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"test\") == \"Yes\\na?\"\nassert solution(\"tezt\") == \"Yes\\na?\"\nassert solution(\".est\") == \"Yes\\na?\"\nassert solution(\"tes.\") == \"Yes\\na?\"\nassert solution(\".svn\") == \"Yes\\na?\"\nassert solution(\".git\") == \"Yes\\na?\"\nassert solution(\"....\") == \"Yes\\na?\"\nassert solution(\"...\") == \"Yes\\na?\"\nassert solution(\"..\") == \"Yes\\na?\"\nassert solution(\".??\") == \"Yes\\na?\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"1\\n1 1 1\") == \"1\"\nassert solution(\"2\\n1 2 1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3 1 1\") == \"1\"\nassert solution(\"3\\n1 2 3 2 2\") == \"2\"\nassert solution(\"3\\n1 2 3 3 3\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '2'\n\nfrom sympy import Rational"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\n', 'Expected output: 2'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 1 3') == '2'\nassert solution('1 2 1') == '2'\nassert solution('1 2 2') == '2'\nassert solution('1 2 3') == '3'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"3\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"3\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\\n\") == \"2\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"3\\n\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n\") == \"2\\n\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\") == \"3\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"2\\n\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\") == \"3\\n\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\") == \"2\\n\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\") == \"3\\n\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"2\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"3\\n\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\") == \"2\\n\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\") == \"3\\n\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\\n\") == \"2\\n\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '2'\nprint(solution('3\\n1 2 3'))  # Output: 2"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 1 1\") == \"1\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n1 5') == '3\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n5 4\\n2 6') == '1\\n'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n5 4\\n2 6\\n1 5') == '2\\n'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n5 4\\n2 6\\n1 5\\n2 7') == '1\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == '5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\\n\") == \"4\\n\"\nassert solution(\"10 3 10\\n\") == \"5\\n\"\n\nSolution:\n\nTo solve this problem, we need to perform the following operations:\n\n1. Remove all elements greater than 1 from the list.\n2. Insert all the elements with even positions at the same position $\\lfloor \\frac{x}{2} \\rfloor$, $x \\operatorname{mod} 2$, $\\lfloor \\frac{x}{2} \\rfloor$ sequentially.\n3. Continue inserting elements until all the elements in the list are either 0 or 1.\n4. Calculate the total number of 1s in the range l to r.\n\nLet's implement the above steps one by one:\n\nStep 1: Remove all elements greater than 1 from the list.\n\nWe can start by checking if any element is greater than 1. If yes, we remove it from the list and move on to the next element. Otherwise, we move on to the next element.\n\n```python\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5') == '2\\n2 3\\n'\nassert solution('4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n') == '1\\n1 '"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n2 3\\n'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''2'''"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {index} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Got: {solution(input())}, expected: {expected}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Error: Please provide the correct input and output.\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3 \\nInput\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\")\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3 \\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\") == \"1\\n1 \""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n75 150 75 50\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n3\\n100 150 250\\n\") == \"No\\n\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\\n\\n3\\n100 150 250\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\", \"Expected 'Yes', got '{}'\".format(solution(input()))"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\"\nassert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\"\nassert solution(\"Input\") == \"Yes\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes'\nassert solution('3\\n100 150 250') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\", \"Your solution is incorrect. Please check the code again.\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\", \"Your solution is incorrect. Please check the code again.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Your code is not correct. Please see the example 1.\"\n\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Your code is not correct. Please see the example 2.\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"150\"\nassert solution(stdin) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\\n\"\nassert solution(\"2\\n-1\\n-100\\n-1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"150\"\nassert solution(open(\"input2.txt\").read()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nc a\\nee c\\nff d\\n') == '4\\n'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\na b\\nc c\\na c\\nee c\\nff d') == '4\\n'\nassert solution('2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 5\nab a\ncc c\nca a\nee c\nff d\n\"\"\"\n) == \"4\\n\"\n\nassert solution(\n\"\"\"\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"\n6 2\nbb a\nba a\n\"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5\\na b\\nc c\\na c\\nee c\\nff d\\n') == '4'\nassert solution('2 8\\na f\\nd c\\nc f\\nb c\\nd b\\na e\\nb b\\nff c\\n') == '1'\nassert solution('6 2\\nbb a\\nba a\\n') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\nee b\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == 1\nassert solution(\"6 2\\nbb a\\nba a\") == 0"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\nassert solution(4) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution() == '3'\nassert solution() == '10'"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(input())"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1) == \"1.000000000000\"\nassert solution(1, 3) == \"-1\"\nassert solution(4, 1) == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\", \"Input: 3 1\\nOutput: 1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\", \"Input: 1 3\\nOutput: -1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\", \"Input: 4 1\\nOutput: 1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == 1.000000000000, \"Expected 1.000000000000, but got {}.\".format(solution(\"3 1\"))\nassert solution(\"1 3\") == -1, \"Expected -1, but got {}.\".format(solution(\"1 3\"))\nassert solution(\"4 1\") == 1.250000000000, \"Expected 1.250000000000, but got {}.\".format(solution(\"4 1\"))\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1.000000000000'\nassert solution(input()) == '-1'\nassert solution(input()) == '1.250000000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12\\n11 8\\n7 5\\n') == '10.0000000000\\n'\nassert solution('3\\n1\\n1 4 1\\n2 5 3\\n') == '-1\\n'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n') == '85.4800000000\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\\n3\\n1\\n1 4 1\\n2 5 3\\n\\n6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"10.0000000000\\n\\n-1\\n\\n85.4800000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10.0000000000'\n\nprint('All tests passed!')"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed with input: {input_str}\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n2\\n\\nOutput\\n0\\n\\nInput\\n10\\n\\nOutput\\n4\") == \"Output\\n4\\n\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 0, \"Test Case 1 Failed\" # Test Case 1 Failed"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"4\"\n\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"0\"\nassert solution(10) == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(10) == 4\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\"\n\nfor _ in range(int(input())):\n    n = int(input())\n    print(solution(str(n)))"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"10\") == 4"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Wh.\"\nassert solution(\"1 2\") == \"Wh.\"\nassert solution(\"1 111111111111\") == \"Wh.\"\n\nassert solution(\"0 69\") == \"abdef\"\nassert solution(\"1 194\") == \"abdef\"\nassert solution(\"1 139\") == \"abdef\"\nassert solution(\"0 47\") == \"abdef\"\nassert solution(\"1 66\") == \"abdef\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\"\nassert solution(\"3 75\") == \"Areyoubusy\"\nassert solution(\"3 530\") == \"Areyoubusy\"\nassert solution(\"4 1829\") == \"Areyoubusy\"\nassert solution(\"4 1651\") == \"Areyoubusy\"\nassert solution(\"3 187\") == \"Areyoubusy\"\nassert solution(\"4 584\") == \"Areyoubusy\"\nassert solution(\"4 255\") == \"Areyoubusy\"\nassert solution(\"4 774\") == \"Areyoubusy\"\nassert solution(\"2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Wh.', f'The solution is wrong. Please check the given input.'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh.\\n\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh.\\n\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Wh.\"\nassert solution(input()) == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Wh'\nassert solution('1 111111111111') == 'Wh'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\\n\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible', \"Incorrect output: 'Possible' expected, 'Impossible' found.\"\nassert solution('? -? = 1') == 'Impossible', \"Incorrect output: 'Impossible' expected, 'Possible' found.\"\nassert solution('? = 1000000') == 'Possible', \"Incorrect output: 'Possible' expected, 'Impossible' found.\"\n"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\na1 2 0 2\\na0\\na0\\na0') == '7 4 5', \"The number of 0's, 1's, and 2's should be 7, 4, and 5 respectively.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7 4 5\", \"Testcase failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Testcase 1 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\nassert solution(\"4\\n0 0 1 0\\n0\\n0\\n0\\n\") == \"0 0 2 0\"\nassert solution(\"4\\n0 0 1 0\\n0\\n1 0\\n0\\n\") == \"0 1 1 0\"\nassert solution(\"4\\n0 0 1 0\\n0\\n0 0\\n0\\n\") == \"0 0 0 0\"\nassert solution(\"4\\n0 0 1 0\\n0\\n0 0\\n0\\n\") == \"0 0 0 0\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na12 0 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\", \"Test 1 failed\"\nassert solution(\"5\\na12 0 0 2\\n0\\n0\\n0\\n\") == \"5 4 5\", \"Test 2 failed\"\nassert solution(\"6\\na12 0 0 2\\n0\\n0\\n0\\n\") == \"5 4 6\", \"Test 3 failed\"\nassert solution(\"7\\na12 0 0 2\\n0\\n0\\n0\\n\") == \"4 5 6\", \"Test 4 failed\"\nassert solution(\"8\\na12 0 0 2\\n0\\n0\\n0\\n\") == \"4 5 7\", \"Test 5 failed\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7 4 5\", \"Your solution is not correct.\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\"\n\nfrom typing import List"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='6\\naabddc') == \"Yes\"\nassert solution(stdin='3\\nabc') == \"No\"\nassert solution(stdin='3\\njjj') == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 54"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 54\nassert solution() == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1728', \"Expected output: 1728, got: {}\".format(solution())"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Solution does not match the expected output for input {input()}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 6\n    WWBBBW\n    WWBBBW\n    WWBBBW\n    WWWWWW\n    WWWWWW\n    \"\"\"\n) == \"2 4\"\n\nassert solution(\n    \"\"\"\n    3 3\n    WWW\n    BWW\n    WWW\n    \"\"\"\n) == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\", \"Test Case 1\"\n\nassert solution(stdin=\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\", \"Test Case 2\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 7\n    2 4\n    5 1\n    2 3\n    3 4\n    4 1\n    5 3\n    3 5\n    \n''') == '10 9 10 10 9\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(\"Test passed\")"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\"\nassert solution() == \"10 9 10 10 9\\n5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}' expected '{expected}'\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '10 10 10 10 10\\n'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '10 10 10 10 10\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '10 10 10 10 10\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10 9 10 10 9\\n5 6\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"10 9 10 10 9\\n5 6\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"10 9 10 10 9\\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '6 10'\nassert solution(open('sample_input.txt', 'r')) == '5 6'\nassert solution(open('sample_input.txt', 'r')) == '10 9'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 0 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n0 1 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 1 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n0 1 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 0 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 0 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 0 0\\n') == '1\\n'\nassert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n0 1 0\\n1 0 0\\n') == '1\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n4\\n0 1 0\\n1 0 0\\n1 1 1\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"The solution is incorrect\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Kevin\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Nicky\"\nassert solution(input()) == \"Kevin\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\n\nprint('All tests passed!')"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect for the given input. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"3\\n2 2 2\") == \"1\"\nassert solution(\"2\\n2 1\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '3'\nassert solution(2) == '1 1 1'\nassert solution(2) == '2'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution returned {solution(stdin)} instead of {expected}\"\nfor x in range(1, 10000):\n    assert solution(str(x)), f\"Solution returned {solution(str(x))} instead of {expected}\"\nprint(solution(str(1)))\nprint(solution(str(2)))\nprint(solution(str(3)))\nprint(solution(str(4)))\nprint(solution(str(5)))\nprint(solution(str(10000)))\nprint(solution(str(-1)))\nprint(solution(str(10001)))\nprint(solution(str(10002)))\nprint(solution(str(10003)))\nprint(solution(str(10004)))\nprint(solution(str(10005)))\nprint(solution(str(10006)))\nprint(solution(str(10007)))\nprint(solution(str(10008)))\nprint(solution(str(10009)))\nprint(solution(str(10010)))\nprint(solution(str(10011)))\nprint(solution(str(10012)))\nprint(solution(str(10013)))\nprint(solution(str(10014)))\nprint(solution(str(10015)))\nprint(solution(str(10016)))\nprint(solution(str(10017)))\nprint(solution(str(10018)))\nprint(solution(str(10019)))\nprint(solution(str(10020)))\nprint(solution(str(10021)))\nprint(solution(str(10022)))\nprint(solution(str(10023)))\nprint(solution(str(10024)))\nprint(solution(str(10025)))\nprint(solution(str(10026)))\nprint(solution(str(10027)))\nprint(solution(str(10028)))\nprint(solution(str(10029)))\nprint(solution(str(10030)))\nprint(solution(str(10031)))\nprint(solution(str(10032)))\nprint(solution(str(10033)))\nprint(solution(str(10034)))\nprint(solution(str(10035)))\nprint(solution(str(10036)))\nprint(solution(str(10037)))\nprint(solution(str(10038)))\nprint(solution(str(10039)))\nprint(solution(str(10040)))\nprint(solution(str(10041)))\nprint(solution(str(10042)))\nprint(solution(str(10043)))\nprint(solution(str(10044)))\nprint(solution(str(10045)))\nprint(solution(str(10046)))\nprint(solution(str(10047)))\nprint(solution(str(10048)))\nprint(solution(str(10049)))\nprint(solution(str(10050)))\nprint(solution(str(10051)))\nprint(solution(str(10052)))\nprint(solution(str(10053)))\nprint(solution(str(10054)))\nprint(solution(str(10055)))\nprint(solution(str(10056)))\nprint(solution(str(10057)))\nprint(solution(str(10058)))\nprint(solution(str(10059)))\nprint(solution(str(10060)))\nprint(solution(str(10061)))\nprint(solution(str(10062)))\nprint(solution(str(10063)))\nprint(solution(str(10064)))\nprint(solution(str(10065)))\nprint(solution(str(10066)))\nprint(solution(str(10067)))\nprint(solution(str(10068)))\nprint(solution(str(10069)))\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n3\\n1 2 3\\n1\\n2\\n1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n1\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n3\\n1 2 3\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [3]\nassert solution(3) == [1, 2, 3]\nassert solution(2) == [1]\nassert solution(2) == [1, 1, 1]\nassert solution(2) == [-1]"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nsolution(\"3\\n1 2 3\\n1 2 3\\n1 2 3\\n\")"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n1 2 3\\n1 2 3\\n2\\n2 1\\n-1\"\nassert solution(stdin) == \"3\\n2 2 2\\n1\\n1 1 1\\n2\\n2 1\\n-1\"\nassert solution(stdin) == \"2\\n2 1\\n-1\"\nassert solution(stdin) == \"2\\n2 1\\n-1\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n1 2 3\\n1 2 3\\n2\\n1\\n1 1 1\\n2\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\", \"Incorrect solution for '11'\"\nassert solution(\"01\") == \"2\", \"Incorrect solution for '01'\"\nassert solution(\"1\") == \"1\", \"Incorrect solution for '1'\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1\n\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'\n\nfrom typing import List"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\", \"Test 1\"\nassert solution(input()) == \"3\\n\", \"Test 2\"\nassert solution(input()) == \"4\\n\", \"Test 3\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(solution(input()))"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\"\nassert solution(\"2\\n5 7\\n\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n1\\n15\\n\\nOutput\\n1\\n\\nInput\\n3\\n1 1 2\\n\\nOutput\\n3\\n\\nInput\\n2\\n5 7\\n\\nOutput\\n4\\n') == 'Output\\n1\\n\\nInput\\n3\\n1 1 2\\n\\nOutput\\n3\\n\\nInput\\n2\\n5 7\\n\\nOutput\\n4\\n'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('1 0\\n0 1\\n') == 'YES'\nassert solution('1 2 3 0\\n0 3 2 1\\n') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == \"YES\"\nassert solution('2\\n1 0\\n0 1\\n') == \"YES\"\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == \"9000\", \"Your solution is incorrect\"\nassert solution(6) == \"9000\", \"Your solution is incorrect\"\nassert solution(6) == \"1160\", \"Your solution is incorrect\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"9000\"\nassert solution() == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9000\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\"\n\nfrom typing import List"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\"\nassert solution(\"5\\n3 2 1 2 3\") == \"1\"\nassert solution(\"5\\n3 2 1 2 3\") == \"0\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"example.in\")) == \"9000\"\nassert solution(open(\"example.in\")) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 9000\nassert solution() == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9000\"\nassert solution() == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected_output, f\"Test case failed with input {input} and expected output {expected_output}.\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\n\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\", \"Please implement the solution function\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == '6'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution() == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\", \"The expected output is not correct.\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\\n\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 4\\n1 4\\n2 1\\n\") == 6, \"Incorrect output\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n\") == 1, \"Incorrect output\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4\\n\\n-----\\n\\nInput\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4\\n\") == \"5\\n\\n5\\n\\n-1\\n\\n4\\n\"\n\nassert solution(\"Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4\\n\\n-----\\n\\nInput\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4\\n\") == \"-1\\n\\n4\\n\\n4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '5\\n'\nassert solution('4\\n2 4 6 8\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '-1\\n'  # not possible to make all elements equal to 1\nassert solution('4\\n2 4 6 8\\n') == '4\\n'  # 4 operations are required\nassert solution('3\\n2 6 9\\n') == '4\\n'  # 4 operations are required"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9') == '-1\\n4\\n2 6 9 8 4'\nprint('All tests passed!')"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == 3, \"Expected output: 3\\nGot: {}\".format(solution(\"abacabaca\"))"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == ['aca', 'ba', 'ca']\nassert solution('abaca') == []"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(stdin)) == solution(stdin)\nassert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == ['aca', 'ba', 'ca']\nassert solution('abaca') == [\"\"]"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == 3, \"Output is not correct\"\nassert solution(\"abaca\") == 0, \"Output is not correct\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca\\n'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abacabaca') == 3, \"Incorrect result for input: 'abacabaca'\"\nassert solution('abaca') == 0, \"Incorrect result for input: 'abaca'\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"aca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input', 2) == '2'\nassert solution('Input', 4) == '2'\nassert solution('Input', 5) == '2'\nassert solution('Input', 1) == '1'\nassert solution('Input', 3) == '1'\nassert solution('Input', 6) == '1'\nassert solution('Input', 7) == '2'\nassert solution('Input', 8) == '2'\nassert solution('Input', 9) == '2'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n1#2#3\") == \"2\"\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"2\"\nassert solution(\"1 5\\n1#2#3\") == \"2\"\nassert solution(\"1 5\\n1#2#3\") == \"2\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3\\nOutput\\n-1\") == 2\nassert solution(\"1 5\\n1#2#3\\nOutput\\n-1\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input', 'Output') == 'Output', \"The solution is incorrect\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n))((())(\") == 6, \"Test 1\"\nassert solution(\"3\\n(()\") == -1, \"Test 2\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(()))()\" == \"()()()\", \"The first example should return '()()()'.\")\nassert solution(\"(()())\") == \"()()()\", \"The second example should return '()()()'.\")\nassert solution(\"())(\") == \"()()()\", \"The third example should return '()()()'.\")\nassert solution(\"())(()())\") == \"()()()\", \"The fourth example should return '()()()'.\")\nassert solution(\"((()))(\") == \"()()()\", \"The fifth example should return '()()()'.\")"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution('8')) == 6\nassert solution(solution('3')) == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) == '6'\nassert solution(stdin) =="
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nfor input_ in [8, 3]:\n    assert solution(str(input_)) == str(output())\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8') == 6\nassert solution('3') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8)\\n())((()\\n\") == \"6\"\nassert solution(\"3)\\n(())\\n\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8) == 6\nassert solution(3) == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(8) == 6, \"Your code is incorrect\"\nassert solution(3) == -1, \"Your code is incorrect\"\nprint(\"Your code is correct\")"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n3 1\\n1 2\\n1 4'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n3 1\\n2 3\\n4 2\\n1 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1'\n\nassert solution() == '1 3'\n\nassert solution() == '4'\n\nassert solution() == '1 2 3 4'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n3\\n1\"\nassert solution(stdin) == \"4\\n1 2 3 4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"The expected output is '{output()}' but instead the output is '{solution(input())}'\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \\n\"\n\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 1\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'2 3\\n') == '8\\n'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '8'\nassert solution() == '107'\nassert solution() == '2107'\nassert solution() == '2513'\nassert solution() == '2929'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=str) == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"2 3\\n\") == b\"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == '8\\n'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"8\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 5\") == \"1\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\\n4\" # Correct solution\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5\\n'\nassert solution() == '100\\n'\nassert solution() == '4\\n'\nassert solution() == '100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5, \"Solution does not match expected output.\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\\n100 3\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"4\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n5 2\\n1 2\\n2 3\\n\\nInput\\n100 3\\n1 2\\n2 1\\n3 1\\n\\nInput\\n1 2\\n1 1\\n2 100\\n\\nOutput\\n5\\n\\nOutput\\n100\\n') == '5\\n\\n100\\n'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Your solution is incorrect. The correct output should be '6'.\"\n\nassert solution(\"usaco\") == \"1\", \"Your solution is incorrect. The correct output should be '1'.\"\n\nassert solution(\"lol\") == \"2\", \"Your solution is incorrect. The correct output should be '2'.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabb') == '6', \"Failed for input 'aaabb'.\"\nassert solution('usaco') == '1', \"Failed for input 'usaco'.\"\nassert solution('lol') == '2', \"Failed for input 'lol'.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Incorrect solution\"\nassert solution(\"usaco\") == \"1\", \"Incorrect solution\"\nassert solution(\"lol\") == \"2\", \"Incorrect solution\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The solution is not correct.\"\nassert solution(\"usaco\") == \"1\", \"The solution is not correct.\"\nassert solution(\"lol\") == \"2\", \"The solution is not correct.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Your solution is incorrect\"\nassert solution(\"usaco\") == \"1\", \"Your solution is incorrect\"\nassert solution(\"lol\") == \"2\", \"Your solution is incorrect\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6\\n') == '1 2\\n2 1\\n1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 2\"\nassert solution(4) == \"1 2\"\nassert solution(5) == \"2 1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 2\\n2 1\\n1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_1) == ['1', '2']\nassert solution(solution_2) == ['1', '2']\nassert solution(solution_3) == ['1', '2']\nassert solution(solution_4) == ['1', '2']\nassert solution(solution_5) == ['1', '2']"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 4\n2 5\n3 6\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n3\n1 4\n2 3\n3 4\n''') == '''\n-1\n-1\n-1\n'''\n\nassert solution('''\n2\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n4\n1 2\n2 1\n3 1\n4 1\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n3\n1 1\n2 2\n3 3\n4 3\n5 3\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n3\n1 1\n1 1\n1 1\n2 2\n3 3\n''') == '''\n2 1\n1 2\n1 2\n'''\n\nassert solution('''\n3\n1 1\n1 1\n1 1\n2 2\n2 2\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n3\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '''\n-1\n-1\n-1\n-1\n-1\n'''\n\nassert solution('''\n3\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '''\n1 1\n1 1\n1 1\n1 1\n1 1\n'''\n\nassert solution('''\n2\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '''\n1 2\n2 1\n1 2\n'''\n\nassert solution('''\n2\n1 1\n1 1\n2 1\n3 1\n4 1\n''') == '''\n1 2\n2 1\n1 2\n'''"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 2\") == \"-1\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\") == \"1 2\"\nassert solution(\"4\\n1 1\\n2 1\\n3 2\") == \"1 2\"\nassert solution(\"5\\n1 2\\n2 1\\n3 3\\n4 3\") == \"1 2\"\nassert solution(\"6\\n1 1\\n2 2\\n3 2\\n4 2\\n5 3\\n6 1\") == \"1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case_number} failed: {solution(input_data)!= expected_output}\"\nprint(solution(input_data))"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n1 4\n2 5\n3 6\"\"\") == \"\"\"1 2\n2 1\n1 2\"\"\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(6) == \"4\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == '2\\n'\nassert solution(3) == '2 1\\n'\nassert solution(8) == '4\\n'\nassert solution(10) == ''"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '2 1'\nassert solution(6) == '2 1 3'\nassert solution(9) == '2 1 3 1 3'\nassert solution(12) == '2 1 3 1 3 1'\nassert solution(15) == '2 1 3 1 3 1 1'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '2 1'\nassert solution(8) == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n8\\n\") == \"2 1\\n4\\n\"\nassert solution(\"5\\n\") == \"1\\n2\\n3\\n4\\n\"\nassert solution(\"1\\n5\\n2\\n3\\n4\\n\") == \"2 1\\n3 2\\n4 3\\n\"\nassert solution(\"1\\n3\\n2\\n4\\n5\\n\") == \"3 2\\n4 3\\n5 4\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\n\nfrom typing import List"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabaac\") == 2\nassert solution(\"8\\n0rTrT022\") == 1\nassert solution(\"2\\naA\") == 2\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\nassert solution(\"aabaac\") == \"aba aca\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabaac\") == \"aba aca\", \"Input not correct\"\nassert solution(\"0rTrT022\") == \"02TrrT20\", \"Input not correct\"\nassert solution(\"aA\") == \"a A\", \"Input not correct\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabaac\") == \"2\\naba aca \\n\", \"Expected output: '2\\naba aca \\n', but got '{}'.\".format(solution(\"aabaac\"))\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20 \\n\", \"Expected output: '1\\n02TrrT20 \\n', but got '{}'.\".format(solution(\"0rTrT022\"))\nassert solution(\"aA\") == \"2\\nA A \\n\", \"Expected output: '2\\nA A \\n', but got '{}'.\".format(solution(\"aA\"))"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}, expected output: {output()}\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabaac\") == \"2\\naba aca\"\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"aA\") == \"2\\nA A\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a**d\") == \"2\"\nassert solution(\"abcd\") == \"2\"\nassert solution(\"acbd\") == \"0\"\nassert solution(\"lo*er\") == \"0\"\nassert solution(\"a*a\") == \"1\"\nassert solution(\"aba\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a**d\\n2\\nabcd\\nacbd\\n') == '2', 'Expected output: 2, got: {}'.format(solution('a**d\\n2\\nabcd\\nacbd\\n'))\nassert solution('lo*er\\n2\\nlover\\nloser\\n') == '0', 'Expected output: 0, got: {}'.format(solution('lo*er\\n2\\nlover\\nloser\\n'))\nassert solution('a*a\\n2\\naaa\\naba\\n') == '1', 'Expected output: 1, got: {}'.format(solution('a*a\\n2\\naaa\\naba\\n'))"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"a**d\") == \"2\", \"Expected '2', but got '{}'\".format(solution(\"a**d\"))\nassert solution(\"abcd\") == \"2\", \"Expected '2', but got '{}'\".format(solution(\"abcd\"))\nassert solution(\"acbd\") == \"0\", \"Expected '0', but got '{}'\".format(solution(\"acbd\"))\nassert solution(\"lo*er\") == \"0\", \"Expected '0', but got '{}'\".format(solution(\"lo*er\"))\nassert solution(\"a*a\") == \"1\", \"Expected '1', but got '{}'\".format(solution(\"a*a\"))\nassert solution(\"aba\") == \"1\", \"Expected '1', but got '{}'\".format(solution(\"aba\"))"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: got '{solution(input())}', expected '{expected_output}'\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n\\n5\\lo*er\\n2\\lover\\nloser\\n\\n3\\a*a\\n2\\aaa\\aba\\n\\n') == '2\\n'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n\\n3\\a*a\\n2\\aaa\\aba\\n\\n') == '0\\n'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n\\n') == '1\\n'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. \\nExpected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\" # expected output: \"1\\n\"\nassert solution(stdin) == \"2\\n\" # expected output: \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"The correct output should be '1'.\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=solution) == \"1\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 1\nassert solution(6) == 2"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 1\\n\") == \"40\"\nassert solution(stdin=\"1 42\\n\") == \"1\"\nassert solution(stdin=\"6 4\\n\") == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case {test_case_num}: Output: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Palindromic tree is better than splay tree'\n\nfrom typing import List"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"172\"\nassert solution(stdin=\"1 42\") == \"1\"\nassert solution(stdin=\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"40\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"172\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\" # correct output\nassert solution(\"4\\n3 1 4 4\") == \"6\" # correct output\nassert solution(\"4\\n3 1 4 1\") == \"6\" # correct output\nassert solution(\"5\\n3 1 4 1 5\") == \"11\" # correct output"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2 1 4\\n') == '5\\n'\nassert solution('2\\n1 1 2\\n') == '6\\n'\nassert solution('2\\n1 1 2\\n') == '6\\n'\nassert solution('4\\n3 1 4 4\\n') == '6\\n'\nassert solution('4\\n3 1 4 1\\n') == '6\\n'\nassert solution('5\\n3 1 4 1 5\\n') == '11\\n'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 5\nassert solution(4) == 6\nassert solution(4) == 6\nassert solution(5) == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n6\" # expected output"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\", \"The solution is incorrect\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got {solution(input())}\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"The value of min_{i} \u2260 j\u00a0\u00a0f(i, j) should be 1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n', \"The output should be '1', but is '{}'\".format(solution(stdin))"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\n, but got: {}\".format(solution(stdin))\nassert solution(stdin) == \"2\\n\", \"Expected output: 2\\n, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 1\nassert solution(2) == 2\n\nfrom typing import List"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\\n\"\nassert solution(\"2\\n1 -1\") == \"2\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"Output\\n1\\n\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n', \"Output: {}\\nExpected: {}\".format(solution(stdin), '1')"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected 1, but got: \" + solution(stdin)"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.readlines(), output.readlines())"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\"\nassert solution(\"2 0 0\\n1 2\\n2 3\\n4 5\\n6 7\\n\") == \"2\\n\"\nassert solution(\"2 1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == \"2\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Output\\n0'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n0\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2\\n'\n\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0\\n'\n\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == str(output()), \"Test Failed\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"10 10\\n00101\\n00010\\n11101\\n\") == \"10\\n\"\nassert solution(\"1 10\\n00011\\n01110\\n01011\\n00001\\n\") == \"100\\n\"\nassert solution(\"10 1\\n00010\\n\") == \"10\\n\"\nassert solution(\"1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\", \"Expected 6, got {}\".format(solution(input()))"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"N M\\nS\\n\")) == 6\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"10 3\\n1\\n1 2\\n2 3\\n4 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n6 7\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"10 3\\n1\\n1 2\\n2 3\\n4 5\\n6 7\\n\") == \"6\\n\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n\nfrom typing import List"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\", \"Expected output 6, got: {}\".format(solution(\"1 1 1 1 1 1\"))\nassert solution(\"1 2 1 2 1 2\") == \"13\", \"Expected output 13, got: {}\".format(solution(\"1 2 1 2 1 2\"))\nassert solution(\"1 1 1 1 1 2\") == \"0\", \"Expected output 0, got: {}\".format(solution(\"1 1 1 1 1 2\"))\nassert solution(\"1 1 1 1 2 2\") == \"0\", \"Expected output 0, got: {}\".format(solution(\"1 1 1 1 2 2\"))\nassert solution(\"1 1 1 1 1 1\") == \"6\", \"Expected output 6, got: {}\".format(solution(\"1 1 1 1 1 1\"))"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {output}, expected: {solution(input())}\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Incorrect output for example 1.\"\nassert solution(\"1 2 1 2 1 2\") == 13, \"Incorrect output for example 2.\"\n\nprint(solution(input()))"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1 1 1') == '6', 'Expected output: 6'\nassert solution('1 2 1 2 1 2') == '13', 'Expected output: 13'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\", \"Test case 1 failed.\"\nassert solution(stdin) == \"13\", \"Test case 2 failed.\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"The given solution does not match the expected output.\\nInput: {input_data}\\nExpected output: {expected_output}\\n\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"0\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '4', 'Expected output: \"4\", but got \"{}\"'.format(solution(input()))"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'\n\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n'\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\", \"Test case 1 failed\"\nassert solution(input()) == \"SURGERY FAILED\", \"Test case 2 failed\"\nassert solution(input()) == \"DONE\", \"Test case 3 failed\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED', \"Expected 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED', but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\n\"\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n3\\n4 5 6\\n\") == \"SURGERY COMPLETE\\nI 4 5 6\\nDONE\\n\"\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n3\\n4 5 6\\n4\\n5 6 7\\n\") == \"SURGERY COMPLETE\\nI 4 5 6\\nI 5 6 7\\nDONE\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\n\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"3\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"3\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"DONE\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\"\n\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\n\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\"\n\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\n\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\"\n\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('10 10 10') == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 2 5\\n3 2 1\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"1 1 1\\n\") == \"-1\"\nassert solution(\"10 1 2\\n5 1 3\\n\") == \"1 2 3 5 9 7 6 4 8\"\nassert solution(\"100 100 100\\n\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"1000000000\") == -1\nassert solution(\"0 1000000000 2000000000\") == -1\nassert solution(\"0 0 0\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3 \""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6 5 8 3 4 1 9 2 7'\nassert solution(stdin) == '1 2 3'\n\nN = int(input())\nA = int(input())\nB = int(input())"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Test Case 1\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"Test Case 2\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000'\nassert solution('3 2\\n1 0 1\\n') == '2'\nassert solution('4 4\\n2 8 4 1\\n') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n2\\n3\\n5000000000\\n\"\nassert solution(stdin) == \"2\\n2\\n3\\n2\\n\"\nassert solution(stdin) == \"4\\n4\\n4\\n4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(3, 2, 1) == 2\nassert solution(5, 1, 1000000000, 1000000000, 1000000000, 1000000000) == 5000000000\nassert solution(3, 2, 1) == 2\nassert solution(4, 4, 2, 8, 4, 1) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n3 2 1') == '3'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'\nassert solution('3 2\\n1 0 1') == '2'\nassert solution('4 4\\n2 8 4 1') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == 5000000000\nassert solution(\"3 2\\n1 0 1\\n\") == 2\nassert solution(\"4 4\\n2 8 4 1\\n\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n3 2 1') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000\\n'\nassert solution('3 2\\n1 0 1') == '2\\n'\nassert solution('4 4\\n2 8 4 1') == '4\\n'\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"The output is incorrect.\"\nassert solution(\"bwwbwwb\") == \"3\", \"The output is incorrect.\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10, \"Solution does not work for first example\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7, \"Solution does not work for second example\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\nassert solution() == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n') == 10\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n') == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == \"10\\n\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\\n\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....') == '10\\n'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....') == '7\\n'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4 2 2\\n\") == \"2\"\nassert solution(\"6 1 2 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n4\\na_1 a_2 a_3 a_4\\n1 4 2 2\\nOutput\\n2\\n\") == \"2\\n\"\nassert solution(\"Input\\n6\\na_1 a_2 a_3 a_4 a_5 a_6\\n1 2 4 4 4 9\\nOutput\\n2\\n\") == \"2\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\" # Solution 1\nassert solution(input()) == \"2\" # Solution 2"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == 7\nassert solution(\"abcd\") == 4\nassert solution(\"aaaa\") == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"7\", \"Expected output: 7. Received: \" + str(solution(\"aba\"))\nassert solution(\"abcd\") == \"4\", \"Expected output: 4. Received: \" + str(solution(\"abcd\"))\nassert solution(\"aaaa\") == \"12\", \"Expected output: 12. Received: \" + str(solution(\"aaaa\"))"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\", \"Expected output: 7\\nGot: \" + solution(input())"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\n\nassert solution(\"3 1\") == \"2\\n\"\n\nassert solution(\"1 2\") == \"2\\n\"\n\nassert solution(\"1 3\") == \"3\\n\"\n\nassert solution(\"2 3\") == \"2\\n\"\n\nassert solution(\"1 4\") == \"3\\n\"\n\nassert solution(\"2 4\") == \"2\\n\"\n\nassert solution(\"3 4\") == \"1\\n\"\n\nassert solution(\"4 4\") == \"0\\n\"\n\nassert solution(\"5 4\") == \"3\\n\"\n\nassert solution(\"1 5\") == \"4\\n\"\n\nassert solution(\"2 5\") == \"2\\n\"\n\nassert solution(\"3 5\") == \"3\\n\"\n\nassert solution(\"4 5\") == \"2\\n\"\n\nassert solution(\"5 5\") == \"1\\n\"\n\nassert solution(\"6 5\") == \"4\\n\"\n\nassert solution(\"7 5\") == \"1\\n\"\n\nassert solution(\"8 5\") == \"4\\n\"\n\nassert solution(\"9 5\") == \"3\\n\"\n\nassert solution(\"10 5\") == \"2\\n\"\n\nassert solution(\"11 5\") == \"3\\n\"\n\nassert solution(\"12 5\") == \"2\\n\"\n\nassert solution(\"13 5\") == \"1\\n\"\n\nassert solution(\"14 5\") == \"4\\n\"\n\nassert solution(\"15 5\") == \"3\\n\"\n\nassert solution(\"16 5\") == \"2\\n\"\n\nassert solution(\"17 5\") == \"3\\n\"\n\nassert solution(\"18 5\") == \"2\\n\"\n\nassert solution(\"19 5\") == \"1\\n\"\n\nassert solution(\"20 5\") == \"4\\n\"\n\nassert solution(\"21 5\") == \"3\\n\"\n\nassert solution(\"22 5\") == \"2\\n\"\n\nassert solution(\"23 5\") == \"3\\n\"\n\nassert solution(\"24 5\") == \"2\\n\"\n\nassert solution(\"25 5\") == \"1\\n\"\n\nassert solution(\"26 5\") == \"4\\n\"\n\nassert solution(\"27 5\") == \"3\\n\"\n\nassert solution(\"28 5\") == \"2\\n\"\n\nassert solution(\"29 5\") == \"3\\n\"\n\nassert solution(\"30 5\") == \"2\\n\"\n\nassert solution(\"31 5\") == \"1\\n\"\n\nassert solution(\"32 5\") == \"4\\n\"\n\nassert solution(\"33 5\") == \"3\\n\"\n\nassert solution(\"34 5\") == \"2\\n\"\n\nassert solution(\"35 5\") == \"3\\n\"\n\nassert solution(\"36 5\") == \"2\\n\"\n\nassert solution(\"37 5\") == \"1\\n\"\n\nassert solution(\"38 5\") == \"4\\n\"\n\nassert solution(\"39 5\") == \"3\\n\"\n\nassert solution(\"40 5\") == \"2\\n\"\n\nassert solution(\"41 5\") == \"3\\n\"\n\nassert solution(\"42 5\") == \"2\\n\"\n\nassert solution(\"43 5\") == \"1\\n\"\n\nassert solution(\"44 5\") == \"4\\n\"\n\nassert solution(\"45 5\") == \"3\\n\"\n\nassert solution(\"46 5\") == \"2\\n\"\n\nassert solution(\"47 5\") == \"3\\n\"\n\nassert solution(\"48 5\") == \"2\\n\"\n\nassert solution(\"49 5\") == \"1\\n\"\n\nassert solution(\"50 5\") == \"4\\n\"\n\nassert solution(\"51 5\") == \"3\\n\"\n\nassert solution(\"52 5\") == \"2\\n\"\n\nassert solution(\"53 5\") == \"3\\n\"\n\nassert solution(\"54 5\") == \"2\\n\"\n\nassert solution(\"55 5\") == \"1\\n\"\n\nassert solution(\"56"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"4 3\") == \"2\\n3\\n\"\nassert solution(\"5 2\") == \"1\\n2\\n\"\nassert solution(\"6 1\") == \"1\\n\"\nassert solution(\"7 3\") == \"2\\n3\\n\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1234'\nassert solution('5 3') == '12345'\nassert solution('7 4') == '1234567'\nassert solution('10 5') == '123456789012345678901234567890'\n\nfrom typing import List\nimport collections\nfrom itertools import combinations, permutations\nimport math"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"3 1\\n\") == \"2\"\nassert solution(\"2 2\\n\") == \"3\"\nassert solution(\"1 3\\n\") == \"4\"\nassert solution(\"1 2\\n\") == \"4\"\nassert solution(\"1 1\\n\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1', 'Incorrect output'\nassert solution('3 5') == '7', 'Incorrect output'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"5 1\\n\") == \"5\\n\"\nassert solution(\"1 5\\n\") == \"1\\n\"\nassert solution(\"1 6\\n\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8\\n'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\n\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"The expected output is {expected_output}, but got {solution(input_string)}.\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"8\\n\"\nassert solution() == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8'\n\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2 2 2 2') == '8\\n'\nassert solution('4 -3\\n3 -6 -3 12') == '3\\n'\nassert solution('4 1\\n2 1 1 1') == '1\\n'\nassert solution('5 1\\n1 1 1 1 1') == '1\\n'\nassert solution('3 1\\n1 1 1') == '2\\n'\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Test failed: input_string = {input_string}, output_string = {output_string}\" for input_string, output_string in zip(input_strings, output_strings)"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA\\nA a\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nAaa A\\nAA A\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11'\nassert solution('4 2 1 300 1000\\na A\\nA aa\\naA aa\\nAaa') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\\n\") == \"5\"\n\nfrom typing import List\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, f\"The solution {solution(input_str)} does not match the expected output {output_str}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA aa\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naA aa\\nA aa\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA\\n\") == \"5\\n\"\nassert solution(\"\") == \"0\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA\\n\") == \"5\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1 1 4\\n') == 'YES'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n4\") == \"YES\"\nassert solution(\"5\\n1\\n5\\n2\\n1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\", \"Expected: YES, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 1 4\\n') == 'YES'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1000\", \"Solution should return 1000\"\nassert solution(input()) == \"1100\", \"Solution should return 1100\"\nassert solution(input()) == \"1\", \"Solution should return 1\"\nassert solution(input()) == \"5\", \"Solution should return 5\"\nassert solution(input()) == \"-5\", \"Solution should return -5\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\", \"Output should be -15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\", \"Output should be 1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\", \"Output should be -5\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\", \"Output should be 1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output\\n-15\\n\\nOutput\\n1\\n\\nOutput\\n-5\\n\\nOutput\\n1100\\n\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n\") == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 'NO'\nassert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(6) == 'NO'\nassert solution(7) == 'NO'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\nYES\\n\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\n\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\n\\n\") == \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"NO\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES'\nassert solution(open('input2.txt', 'r').read()) == 'NO'\nassert solution(open('input3.txt', 'r').read()) == 'NO'\nassert solution(open('input4.txt', 'r').read()) == 'NO'\nassert solution(open('input5.txt', 'r').read()) == 'YES'\nassert solution(open('input6.txt', 'r').read()) == 'NO'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 2\n''') == 'YES'\n\nassert solution('''\n3\n1 2\n2 3\n''') == 'NO'\n\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n''') == 'YES'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n2\\n2 6\\n\") == \"1\\n2 2\\n\"\nassert solution(\"Input\\n2\\n2 6\\n\") == \"0\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n1 4\\n\") == \"0\\n4 5\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n5 3\\n\") == \"1\\n4 5\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n5 2\\n\") == \"0\\n4 5\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed: {solution(stdin)!= expected_output}!= {expected_output}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2\\n'\nassert solution('2\\n2 6\\n') == '0\\n2'\n\nfrom typing import List"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {solution(stdin)}!= {expected}\"\nfor input, expected in [\n    (\"3\", \"1\\n2 \\n3\\n\"),\n    (\"2\", \"0\\n2\\n\"),\n]:\n    assert solution(input) == expected, f\"Test failed: {solution(input)}!= {expected}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# For each test case, print the number of erased elements and the list of erased elements\\n# If there are multiple answers, print any of them\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output\\n0\\n'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\ncab\\n\") == \"6\\n\"\nassert solution(\"3\\nabbc\\nabcc\\nabba\\n\") == \"6\\n\"\nassert solution(\"3\\naaba\\naabb\\naabc\\n\") == \"6\\n\"\nassert solution(\"3\\naaaaa\\naaaaa\\naaaaa\\n\") == \"1\\n\"\nassert solution(\"3\\naaaa\\naaaa\\naaaa\\n\") == \"1\\n\"\nassert solution(\"3\\naaa\\naaa\\naaa\\n\") == \"1\\n\"\nassert solution(\"3\\naaaaaa\\naaaaaa\\naaaaaa\\n\") == \"1\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\naab\\nccb') == '6'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nassert solution('4\\naab\\nbbb\\ncac') == '5'\nassert solution('5\\naab\\nbbb\\nbac\\ncac') == '4'\nassert solution('6\\naab\\nbbb\\nbac\\nbab\\ncac\\ndac\\neac\\nfac\\ngac') == '3'\nassert solution('7\\naab\\nbbb\\nbac\\nbab\\ncac\\ndac\\neac\\nfac\\ngac\\nhac\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie\\nie"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\naab\\ccb\") == \"6\\n\"\nassert solution(stdin=\"6\\naab\\ccb\") == \"6\\n\"\nassert solution(stdin=\"10\\naabbccddddeeee\") == \"6\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\naab\\ncbr\\n\") == \"6\\n\", \"Test 1\"\nassert solution(\"5\\naabb\\ncbrb\\ndbrb\\nebrb\\n\") == \"18\\n\", \"Test 2\"\nassert solution(\"1\\na\\n\") == \"1\\n\", \"Test 3\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\naab\\ncco\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"3\\naab\\ncco\") == \"6\\n\", \"Test 2 failed\"\nassert solution(\"3\\naba\\ncco\") == \"6\\n\", \"Test 3 failed\"\nassert solution(\"3\\nab\\ncco\") == \"6\\n\", \"Test 4 failed\"\nassert solution(\"3\\nab\\nca\") == \"6\\n\", \"Test 5 failed\"\nassert solution(\"3\\naba\\nco\") == \"6\\n\", \"Test 6 failed\"\nassert solution(\"3\\naba\\ncoo\") == \"6\\n\", \"Test 7 failed\"\nassert solution(\"3\\naba\\ncooo\") == \"6\\n\", \"Test 8 failed\"\nassert solution(\"3\\naba\\ncoooo\") == \"6\\n\", \"Test 9 failed\"\nassert solution(\"3\\naba\\ncooooo\") == \"6\\n\", \"Test 10 failed\"\nassert solution(\"3\\naba\\ncooooor\") == \"6\\n\", \"Test 11 failed\"\nassert solution(\"3\\naba\\ncooooorr\") == \"6\\n\", \"Test 12 failed\"\nassert solution(\"3\\naba\\ncooooorrr\") == \"6\\n\", \"Test 13 failed\"\nassert solution(\"3\\naba\\ncooooorrrr\") == \"6\\n\", \"Test 14 failed\"\nassert solution(\"3\\naba\\ncooooorrrrr\") == \"6\\n\", \"Test 15 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrr\") == \"6\\n\", \"Test 16 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrr\") == \"6\\n\", \"Test 17 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrr\") == \"6\\n\", \"Test 18 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrr\") == \"6\\n\", \"Test 19 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrr\") == \"6\\n\", \"Test 20 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrr\") == \"6\\n\", \"Test 21 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrr\") == \"6\\n\", \"Test 22 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrr\") == \"6\\n\", \"Test 23 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrr\") == \"6\\n\", \"Test 24 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 25 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 26 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 27 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 28 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 29 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 30 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 31 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 32 failed\"\nassert solution(\"3\\naba\\ncooooorrrrrrrrrrrrrrrrrrrrrrr\") == \"6\\n\", \"Test 33 failed\"\nassert solution(\"3\\"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\naabbc\\nccb\") == \"10\\n\"\nassert solution(\"5\\naabbcc\\nccb\") == \"14\\n\"\nassert solution(\"6\\naabbcccd\\nccb\") == \"18\\n\"\nassert solution(\"7\\naabbccdcdc\\nccb\") == \"22\\n\"\nassert solution(\"8\\naabbccdcdcddd\\nccb\") == \"26\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\naab\\nccb') == '6\\n'\nassert solution('5\\nbcd\\nefg') == '1\\n'\nassert solution('4\\nbcd\\nefg') == '3\\n'\nassert solution('2\\nbcd\\nefg') == '4\\n'\nassert solution('1\\nbcd\\nefg') == '5\\n'\nassert solution('3\\nabd\\nacd') == '2\\n'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == '6', 'Please provide the correct solution.'\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == 'YES'\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample1.in\", \"r\").read()) == \"YES\"\nassert solution(open(\"sample2.in\", \"r\").read()) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'\n\nprint('All tests passed!')"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES', \"Test failed\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample1) == \"YES\"\nassert solution(sample2) == \"NO\"\nassert solution(sample3) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == 4\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output', \"Solution failed!\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_case_0.txt', 'r')) == \"4\\n\"\nassert solution(open('test_case_1.txt', 'r')) == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4\\n'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\"\"\") == \"3\"\n\nassert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\"\n\nassert solution(r\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == \"4\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\"\nfor test in [\n    (5, 3, \"yes\"),\n    (1, 5, \"yes\"),\n    (1, 6, \"no\"),\n    (6, 3, \"no\"),\n    (3, 2, \"yes\"),\n    (1, 2, \"no\"),\n    (4, 3, \"no\"),\n    (3, 1, \"no\"),\n    (1, 2, \"no\"),\n    (10, 3, \"yes\"),\n]:\n    stdin = test[0]\n    n, k = map(int, test[1:])\n    expected = test[2]\n    actual = solution(stdin)\n    print(f\"{actual}\")"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"yes\\nno\"\nassert solution(\"\"\"\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"\nyes\nyes\nyes\nno\nyes\n\"\"\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed.\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"no\\nno\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"no\\nno\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"no\\nno\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"no\\nno\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\"\"\"\n) == \"no\\nno\\nno\\nno\\nno\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'no\\n'\nassert solution() == 'yes\\n'\nassert solution() == 'yes\\n'\nassert solution() == 'no\\n'\nassert solution() == 'yes\\n'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, 3, 1, 5, 2, 6, 1, 1, 6, 6, 3, 2, 1, 2, 3, 4, 3, 3, 1, 2, 3, 4, 3, 1, 2, 3, 4, 3, 1, 2, 3, 4, 3, 10, 3, 1, 2, 3, 4, 3, 1, 2, 3, 4, 3, 1, 2, 3) == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5\\n') == '2\\n1 0 2 1 0\\n'\n\nassert solution('4 2\\n1 4\\n2 4\\n') == '3\\n5 2 0 1\\n'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert \"def solution(stdin: str) -> str:\\n    pass\" == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2\n1 0 2 1 0\"\"\"\n\nassert solution() == \"\"\"3\n5 2 0 1\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n2\n1 0 2 1 0\n'''"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\"\n\nfrom typing import List"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\\n3\\n5 2 0 1\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 3\\n2 5\\n4 5') == '2\\n1 0 2 1 0'\nassert solution('4 2\\n1 4\\n2 4') == '3\\n5 2 0 1'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n1 3') == 'YES'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 1 3\\n1 2\\n2 1 2 3\\n\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3\n    1 0 1\n    2 1 3\n    2 1 2\n    2 2 3\n    ''') == 'NO'\n\nassert solution('''\n    3 3\n    1 0 1\n    3 1 2 3\n    1 2\n    2 1 3\n    ''') == 'YES'\n\nassert solution('''\n    3 3\n    1 0 1\n    3 1 2 3\n    2 1 2\n    1 3\n    ''') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\"\nassert solution(\"(()\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''(((#)((#)\n''') == 1\nassert solution('''()((#((#(#()\n''') == 2\nassert solution('''#\n''') == -1\nassert solution('''(#)\n''') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n'\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n'\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\"\nassert solution(\"abc\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\")) == 1, \"Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters '(', ')' and '#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '#' with one or more ')' characters so that the final string becomes beautiful. \")\nassert solution(\"()((#((#(#()\")) == 2, \"Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters '(', ')' and '#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '#' with one or more ')' characters so that the final string becomes beautiful. \")\nassert solution(\"#\") == -1, \"Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters '(', ')' and '#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '#' with one or more ')' characters so that the final string becomes beautiful. \")\nassert solution(\"()\") == -1, \"Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters '(', ')' and '#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '#' with one or more ')' characters so that the final string becomes beautiful. \")\nassert solution(\"(((#)\")) == -1, \"Malek has recently found a treasure map. While he was looking for a treasure he found a locked door. There was a string s written on the door consisting of characters '(', ')' and '#'. Below there was a manual on how to open the door. After spending a long time Malek managed to decode the manual and found out that the goal is to replace each '#' with one or more ')' characters so that the final string becomes beautiful. \")"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\nx\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '-1'\nassert solution(stdin) == 'xoxox'\nassert solution(stdin) == '16'\nassert solution(stdin) == '-16'\nassert solution(stdin) == 'xxxx'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1', 'The solution is incorrect.'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\", \"Input 1\"\nassert solution(\"4 0\") == \"16\\no\\nx\\no\\nx\\nx\\n\", \"Input 2\"\nassert solution(\"0 4\") == \"-16\\no\\no\\no\\no\\n\", \"Input 3\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == '-1\\nxoxox\\n', \"Test 1 failed\"\nassert solution(\"4 0\") == '16\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\nx\\no\\"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\") == \"-1\"\nassert solution(\"4 0\\n0 4\") == \"16\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\no\"\nassert solution(\"0 4\") == \"-16\\no\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\") == \"xoxox\\n\"\nassert solution(\"0 4\\n4 0\\n2 3\") == \"-16\\n\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == '16'\nassert solution(solution) == '0'\nassert solution(solution) == '9'\nassert solution(solution) == '-1'"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Incorrect output\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"17\"\nassert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('2 2 2') == '17'\nassert solution('3 3 3') == '17'\nassert solution('4 4 4') == '17'\nassert solution('5 5 5') == '17'\nassert solution('6 6 6') == '17'\nassert solution('7 7 7') == '17'\nassert solution('8 8 8') == '17'\nassert solution('9 9 9') == '17'\nassert solution('10 10 10') == '17'\nassert solution('11 11 11') == '17'\nassert solution('12 12 12') == '17'\nassert solution('13 13 13') == '17'\nassert solution('14 14 14') == '17'\nassert solution('15 15 15') == '17'\nassert solution('16 16 16') == '17'\nassert solution('17 17 17') == '17'\nassert solution('18 18 18') == '17'\nassert solution('19 19 19') == '17'\nassert solution('20 20 20') == '17'\nassert solution('21 21 21') == '17'\nassert solution('22 22 22') == '17'\nassert solution('23 23 23') == '17'\nassert solution('24 24 24') == '17'\nassert solution('25 25 25') == '17'\nassert solution('26 26 26') == '17'\nassert solution('27 27 27') == '17'\nassert solution('28 28 28') == '17'\nassert solution('29 29 29') == '17'\nassert solution('30 30 30') == '17'\nassert solution('31 31 31') == '17'\nassert solution('32 32 32') == '17'\nassert solution('33 33 33') == '17'\nassert solution('34 34 34') == '17'\nassert solution('35 35 35') == '17'\nassert solution('36 36 36') == '17'\nassert solution('37 37 37') == '17'\nassert solution('38 38 38') == '17'\nassert solution('39 39 39') == '17'\nassert solution('40 40 40') == '17'\nassert solution('41 41 41') == '17'\nassert solution('42 42 42') == '17'\nassert solution('43 43 43') == '17'\nassert solution('44 44 44') == '17'\nassert solution('45 45 45') == '17'\nassert solution('46 46 46') == '17'\nassert solution('47 47 47') == '17'\nassert solution('48 48 48') == '17'\nassert solution('49 49 49') == '17'\nassert solution('50 50 50') == '17'\nassert solution('51 51 51') == '17'\nassert solution('52 52 52') == '17'\nassert solution('53 53 53') == '17'\nassert solution('54 54 54') == '17'\nassert solution('55 55 55') == '17'\nassert solution('56 56 56') == '17'\nassert solution('57 57 57') == '17'\nassert solution('58 58 58') == '17'\nassert solution('59 59 "
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Sample Output\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 1 1') == '17'\nassert solution(stdin='1 1 2') == '4'\nassert solution(stdin='1 1 3') == '3'\nassert solution(stdin='1 1 4') == '2'\nassert solution(stdin='1 1 5') == '1'\nassert solution(stdin='1 1 6') == '1'\nassert solution(stdin='1 1 7') == '1'\nassert solution(stdin='1 1 8') == '1'\nassert solution(stdin='1 1 9') == '1'\nassert solution(stdin='1 1 10') == '1'\nassert solution(stdin='1 1 11') == '1'\nassert solution(stdin='1 1 12') == '1'\nassert solution(stdin='1 1 13') == '1'\nassert solution(stdin='1 1 14') == '1'\nassert solution(stdin='1 1 15') == '1'\nassert solution(stdin='1 1 16') == '1'\nassert solution(stdin='1 1 17') == '1'\nassert solution(stdin='1 1 18') == '1'\nassert solution(stdin='1 1 19') == '1'\nassert solution(stdin='1 1 20') == '1'\nassert solution(stdin='1 1 21') == '1'\nassert solution(stdin='1 1 22') == '1'\nassert solution(stdin='1 1 23') == '1'\nassert solution(stdin='1 1 24') == '1'\nassert solution(stdin='1 1 25') == '1'\nassert solution(stdin='1 1 26') == '1'\nassert solution(stdin='1 1 27') == '1'\nassert solution(stdin='1 1 28') == '1'\nassert solution(stdin='1 1 29') == '1'\nassert solution(stdin='1 1 30') == '1'\nassert solution(stdin='1 1 31') == '1'\nassert solution(stdin='1 1 32') == '1'\nassert solution(stdin='1 1 33') == '1'\nassert solution(stdin='1 1 34') == '1'\nassert solution(stdin='1 1 35') == '1'\nassert solution(stdin='1 1 36') == '1'\nassert solution(stdin='1 1 37') == '1'\nassert solution(stdin='1 1 38') == '1'\nassert solution(stdin='1 1 39') == '1'\nassert solution(stdin='1 1 40') == '1'\nassert solution(stdin='1 1 41') == '1'\nassert solution(stdin='1 1 42') == '1'\nassert solution(stdin='1 1 43') == '1'\nassert solution(stdin='1 1 44') == '1'\nassert solution(stdin='1 1 45') == '1'\nassert solution(stdin='1 1 46') == '1'\nassert solution(stdin='1 1 47') == '1'\nassert solution(stdin='1 1 48') == '1'\nassert solution(stdin='1 1 49') == '1'\nassert solution(stdin='1 1 50') == '1'\nassert solution(stdin='1 1 51') == '1'\nassert solution(stdin='1 1 52') == '1'\nassert solution(stdin='1 1 53') == '1'\nassert solution(stdin='1 1 54') == '1'\nassert solution(stdin='1 1 55') == '1'\nassert solution(stdin='1 1 56') == '1'\nassert solution(stdin='1 1 57') == '1'\nassert solution(stdin='1 1 58') == '1'\nassert solution(stdin='1 1 59') == '1'\nassert solution(stdin='1 1 60') == '1'\nassert solution(stdin='1 1 61') == '"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"17\", \"Solution should return 17.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"17\", \"Expected output not found.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"17\\n\", \"Error: Incorrect output.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The solution provided is not correct. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4') == '2 3 \\n3 2 '\n\nfrom typing import List"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '2 2 2\\n2 2 2\\n'\nassert solution == '2 3\\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\\n\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\\n\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 2 2\\n2 2 2\\n\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2 1\n    0 1\n    2 1\n    '''\n) == '332748119\\n'\n\nassert solution(\n    '''\n    1 2\n    1\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    3 3\n    0 1 1\n    4 3 5\n    '''\n) == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"11\"\nassert solution(5) == \"11\"\nassert solution(5) == \"11\"\nassert solution(5) == \"11\"\nassert solution(5) == \"11\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '11\\n'\nassert solution(5) == '6\\n'\nassert solution(5) == '102\\n'\n\nassert solution(1) == '1\\n'\nassert solution(1) == '0\\n'\nassert solution(1) == '100\\n'\n\nassert solution(2) == '2\\n'\nassert solution(2) == '1\\n'\nassert solution(2) == '100\\n'\n\nassert solution(3) == '3\\n'\nassert solution(3) == '2\\n'\nassert solution(3) == '100\\n'\n\nassert solution(4) == '4\\n'\nassert solution(4) == '3\\n'\nassert solution(4) == '100\\n'\n\nassert solution(5) == '6\\n'\nassert solution(5) == '5\\n'\nassert solution(5) == '100\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but it should be {expected_output}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5 2 6\") == \"11\", \"Test case 1 failed\"\nassert solution(\"5 1 2 3 4 5\") == \"6\", \"Test case 2 failed\"\nassert solution(\"1 100 101 100 1\") == \"102\", \"Test case 3 failed\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"Input\\n5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\nassert solution(\"\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\", \"Your implementation is incorrect.\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\\n\", \"Error\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\" # expected output: \"Yes\"\nassert solution() == \"No\" # expected output: \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##. \") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\\n\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\"\nassert solution(input4) == output4, \"Test 4 failed\"\nassert solution(input5) == output5, \"Test 5 failed\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.\\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"2\\n\"\nassert solution(\"2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####.#\\n.###.#\\n.#...\\n\") == \"2\"\nassert solution(\"2 1\\n.#\\n\") == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n.#\\n##.\\\"\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.\\\"\\n.###.\\\"\\n.#...\\\"\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\\"\\n#\\\"\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\\"\\n.....\\\"\\n.....\\\"\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    3 3\n        .#.\n        ##.\n        ##.\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    4 2\n        ##\n        .#\n        .#\n        ##\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    4 5\n        ....#\n        ####.\n        .###.\n        .#...\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    2 1\n        .\n        #\n        \"\"\") == \"1\"\nassert solution(\"\"\"\n    3 5\n        .....\n        .....\n        .....\n        \"\"\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n   .#.\n    ###\n    ##.\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4 2\n    ##\n    #.#\n    #.#\n    ##\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    4 5\n   ........\n   ........\n   ........\n   ........\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 1\n   .\n    #\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n    3 5\n   ..........\n   ..........\n   ..........\n   ..........\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###.\\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"-1\"\nassert solution(\"3 5\\n..... \\n..... \\n..... \\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == 1, example1\nassert solution(example2) == -1, example2\nassert solution(example3) == 2, example3\nassert solution(example4) == -1, example4\nassert solution(example5) == 2, example5\n\nfrom typing import List"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n6 5 6 2 2') == 'YES\\n5 4 2'\nassert solution('3 5\\n0 0 0') == 'YES\\n5 4 2'\nassert solution('4 3\\n1 0 2 3') == 'YES\\n1 2 2 3'\nassert solution('3 10\\n10 10 10') == 'YES\\n10 10 10'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == '''\nYES\n1 2 2 3\n'''\n\nassert solution('''\n3 10\n10 10 10\n''') == '''\nYES\n10 10 10\n'''\n\nassert solution('''\n5 6\n6 5 6 2 2\n''') == '''\nNO\n'''\n\nassert solution('''\n3 5\n0 0 0\n''') == '''\nYES\n5 4 2\n'''"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_result, f\"The solution is '{solution}', but it should be '{expected_result}'.\"\nfor i, (n, q) in enumerate(input().split()):\n    n = int(n)\n    q = int(q)\n    a = list(map(int, input().split()))\n    if q == 1:\n        a = [a[0]] + a + [a[-1]]\n        print(\"YES\")\n        print(*a)\n    else:\n        segments = []\n        for _ in range(q):\n            l, r = [int(x) for x in input().split()]\n            segments.append((l, r))\n        selected = set()\n        for i in range(1, n):\n            for l, r in segments:\n                if l <= i <= r:\n                    for j in range(i, min(i + q, n)):\n                        if j not in selected and a[j] == 0:\n                            a[j] = i\n                            selected.add(j)\n                            if i + q == n:\n                                print(\"YES\")\n                                print(*a)\n                            else:\n                                print(\"NO\")\n                                break\n        else:\n            print(\"NO\")\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'\nassert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'\nassert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'\nassert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\nassert solution('''\n3 5\n0 0 0\n''') == 'YES\\n5 4 2'\nassert solution('''\n4 3\n1 0 2 3\n''') == 'YES\\n1 2 2 3'\nassert solution('''\n3 10\n10 10 10\n''') == 'YES\\n10 10 10'\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed: {input()} -> {output()}\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n5 4 2\"  # Example 1\nassert solution() == \"YES\\n10 10 10\"  # Example 2\nassert solution() == \"NO\"  # Example 3\nassert solution() == \"YES\\n5 4 2\"  # Example 4\nassert solution() == \"YES\\n10 10 10\"  # Example 5\nassert solution() == \"YES\\n5 4 2\"  # Example 6\nassert solution() == \"YES\\n10 10 10\"  # Example 7\nassert solution() == \"YES\\n5 4 2\"  # Example 8"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4 3\n1 0 2 3\n\"\"\"\n) == \"YES\\n1 2 2 3\"\n\nassert solution(\n    \"\"\"\n3 10\n10 10 10\n\"\"\"\n) == \"YES\\n10 10 10\"\n\nassert solution(\n    \"\"\"\n5 6\n6 5 6 2 2\n\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"\n3 5\n0 0 0\n\"\"\"\n) == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output: '{output}', but got: '{solution(input())}'\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1 1 1\") == \"1 1\", \"Expected: 1 1\\nActual: \" + solution(\"2\\n1 1 1 1\")"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4 3 6 2'\nassert solution() == '42'\nassert solution() == '1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"6 4\"\nassert solution(5) == \"2 2 1\"\nassert solution(6) == \"2 2 1 1\"\nassert solution(7) == \"1 1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Test failed with input {stdin} and expected output {output}\"\n\nn = int(stdin.readline().strip())\na = list(map(int, stdin.readline().strip().split()))\n\nG = [[1] * n for _ in range(n)]\n\nfor i in range(1, n):\n    for j in range(i):\n        G[i][j] = a[j]\n\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        G[i][j] = max(a[i], a[j], key=lambda x: G[i][x])\n\nfor i in range(n):\n    for j in range(n):\n        print(G[i][j], end=' ')\n    print()\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Output\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '''\n4 3 6 2\n'''\n\nassert solution('''\n1\n42\n''') == '''\n42 \n'''\n\nassert solution('''\n2\n1 1 1 1\n''') == '''\n1 1\n'''"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == [4, 3, 6, 2]"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\", \"Test case 1 failed\"\n\nassert solution() == \"1 1\", \"Test case 2 failed\"\n\nassert solution() == \"1 1 1 1\", \"Test case 3 failed\"\n\nassert solution() == \"1 1\", \"Test case 4 failed\"\n\nassert solution() == \"1 1 1 1\", \"Test case 5 failed\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\"\nassert solution(\"4 2\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"The output should be '3\\n', but it is '{}'\".format(solution(\"3\\n1 1\\n1 2\\n1 3\"))\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"The output should be '6\\n', but it is '{}'\".format(solution(\"3\\n1 1\\n2 1\\n3 1\"))\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"The output should be '6\\n', but it is '{}'\".format(solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\"))"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\"\nassert solution(1) == \"3\"\nassert solution(1) == \"3\"\nassert solution(1) == \"3\"\nassert solution(2) == \"6\"\nassert solution(2) == \"6\"\nassert solution(3) == \"6\"\nassert solution(3) == \"6\"\nassert solution(4) == \"6\"\nassert solution(4) == \"6\"\nassert solution(4) == \"6\"\nassert solution(5) == \"12\"\nassert solution(5) == \"12\"\nassert solution(6) == \"12\"\nassert solution(6) == \"12\"\nassert solution(6) == \"12\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"There should be exactly one set having one point\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"There should be exactly one set having two points\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"There should be exactly one set having four points\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\", \"The expected output is '3', but it is '{}'\".format(solution(\"3\\n1 1\\n1 2\\n1 3\"))\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\", \"The expected output is '6', but it is '{}'\".format(solution(\"3\\n1 1\\n2 1\\n3 1\"))\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\", \"The expected output is '6', but it is '{}'\".format(solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\"))"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3\\n6\\n6\\n', \"Incorrect output\"\nprint(\"Test case passed.\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == \"3\\n6\"\nassert solution(open('input_2.txt', 'r')) == \"6\"\nassert solution(open('input_3.txt', 'r')) == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == -1\nassert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == [1, 1]\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == -1\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == [3, 3]\n\nfrom typing import List"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}, output: {output()}\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E.EE\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n.E.\\ne.E.\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\ne.\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '''\n1 1\n2 2\n3 3\n'''\n\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '''\n-1\n'''\n\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''\n3 3\n1 3\n2 2\n4 4\n5 3\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n.E.\\ne.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.''') == '1 1\\n2 2\\n3 3'\n\nassert solution('''3\nEEE\nE..\nE.E\n''') == '-1'\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution(stdin='3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution(stdin='5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\n\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"32\\n\"\nassert solution(input()) == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"10 2\n10 -1 2 2 2 2 2 2 -1 10\"\"\"\n) == \"32\"\n\nassert solution(\n    \"\"\"5 10\n-1 -1 -1 -1 -1\"\"\"\n) == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\\n\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\\n\") == \"-1\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 79\nprint(\"All test cases passed\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data} and output {output_data}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 79\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 3\") == \"10\\n10\\n5\\n10\\n10\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 5\") == \"15\\n15\\n7\\n15\\n15\\n\"\nassert solution(\"7 7\") == \"35\\n35\\n15\\n35\\n35\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 7\") == \"7\\n7\\n7\\n7\\n7\\n\"\nassert solution(\"8 2\") == \"1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n\"\nassert solution(\"2 4\") == \"1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n17\\n19\\n21\\n23\\n25\\n27\\n29\\n31\\n33\\n35\\n37\\n39\\n41\\n43\\n45\\n47\\n49\\n51\\n53\\n55\\n57\\n59\\n61\\n63\\n65\\n67\\n69\\n71\\n73\\n75\\n77\\n79\\n81\\n83\\n85\\n87\\n89\\n91\\n93\\n95\\n97\\n99\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 4\") == \"4\\n4\\n2\"\nassert solution(\"5 5\") == \"15\\n15\\n7\"\nassert solution(\"10 5\") == \"28\\n28\\n10\"\nassert solution(\"10 3\") == \"20\\n20\\n6\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"10 5\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3,3)==7\nassert solution(4,4)==4\nassert solution(5,5)==25\nassert solution(1000,2000)==2765\nassert solution(5000,10000)==283637293701099340722903018211037743580378416572306591656522767862923517476974402613428082509027365858617826306149689882595474709971255498675195031103070226505998195951527408423279127238044076520131345737778928261980798292661111331731511359774252254000881070395217723426469003506475292600018856465963211908745763605444071005480434785775099322771867633855538281246846845017550340144430337508319701048981585511257675193283961910158429663060467529260001885646596321190874576360544407100548043478577509932277186763385553828124684684501755034014443033750831970104898158551125767519328396191015842966306046752926000188564659632119087457636054440710054804347857750993227718676338555382812468468450175503401444303375083197010489815855112576751932839619101584296630604675292600018856465963211908745763605444071005480434785775099322771867633855538281246846845017550340144430337508319701048981585511257675193283961910158429663060467529260001885646596321190874576360544407100548"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\\n\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"4 3\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"3 4\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"3 5\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"4 5\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"4 6\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"5 6\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"5 7\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"6 7\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"7 8\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"8 9\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"9 10\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"10 11\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"11 12\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"12 13\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"13 14\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"14 15\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"15 16\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"16 17\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"17 18\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"18 19\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\"\nassert solution(\"19 20\") == \"7\\n7\\n4\\n7\\n7\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"6\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\"\nassert solution(\"7 3\\n1 5\\n2 3\\n4 2\\n1 4\\n\") == \"4\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed.\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == 6\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == 9"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\") == \"9\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''3\n3 1 3 4\n3 2 5 6\n1 7'''\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n1 3\\n2 5\\n3 4\"\nassert solution(\"111\") == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == -1 # empty input\nassert solution(\"111\") == -1 # no possible subsequences"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\"\n\nfrom typing import List"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1', \"Incorrect output\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1111"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == 1\nassert solution(\"1 3\\n3 1 2 3\\n\") == 6\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == 2\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == 1\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1'\nassert solution('1 3\\n3 1 2 3\\n') == '6'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\"\n\nassert solution() == \"1\\n\"\n\nassert solution() == \"6\\n\"\n\nassert solution() == \"2\\n\"\n\nassert solution() == \"1\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5)<|im_sep|>"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4 2 3 1\") == \"3\"\nassert solution(\"4 1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4 2 3 1') == '3\\n'\nassert solution('4\\n1 5 4 7') == '6\\n'\n\nprint('All test cases pass')"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4 2 3 1\\n') == '3\\n'\nassert solution('4\\n1 5 4 7\\n') == '6\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4, \"The output should be 4.\"\nassert solution(2) == 20, \"The output should be 20.\"\nassert solution(3) == 62, \"The output should be 62.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'TODO', 'Solution is not defined'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 4, \"Expected output: 4, but got: \" + str(solution(3))\nassert solution(5) == 20, \"Expected output: 20, but got: \" + str(solution(5))\nassert solution(10) == 62, \"Expected output: 62, but got: \" + str(solution(10))"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\n4\\n\\nInput\\n4\\n1 1 2 3\\n\\nOutput\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62\") == \"Output\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"4\\n20\\n62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '4\\n'\nassert solution('4\\n1 1 2 3\\n') == '20\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '62\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(read_input()) == \"4\\n20\\n62\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4', \"Test failed\"  # correct output\nassert solution() == '20', \"Test failed\"  # correct output\nassert solution() == '62', \"Test failed\"  # correct output\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4, \"The expected output is 4, but instead got {}\".format(solution())"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == '4', 'example1'\nassert solution(example2) == '20', 'example2'\nassert solution(example3) == '62', 'example3'\nassert solution(example4) == '16', 'example4'\nassert solution(example5) == '61', 'example5'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\") == \"7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == expected, f\"Test failed for input {input()}\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1\\n1 1\\n1\\n1 1\\n1 1\\n1 1\\n\") == \"6\\n\"\nassert solution(\"1\\n1 1\\n1 1\\n1\\n1 1\\n1 1\\n1 1\\n\") == \"6\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\"\nassert solution(\"1\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15'\nassert solution('1\\n5 6') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output\\n15\", \"The output is incorrect\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"2\\n1\\n1\\n\") == \"15\"\nassert solution(\"1\\n5\\n6\\n\") == \"7\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr'''\n1\n4\n2\n''') == '1\\n'\n\nassert solution(\nr'''\n2\n1\n4 4\n2\n''') == '3\\n'\n\nassert solution(\nr'''\n3\n3 3\n10 10 10\n17\n''') == '6\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"1\n    4\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"2\n    1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"3\n    3\n    3\n    \"\"\"\n) == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input: {}, Output: {}\".format(input(), output())"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"Incorrect output\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin, output)"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {stdin}, expected output: {expected_output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\") == \"6\"\n\nimport math\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('1\\n4\\n2\\n') == '1'\nassert solution('2\\n1\\n4 4\\n2\\n') == '3'\nassert solution('3\\n3 3\\n10 10 10\\n17\\n') == '6'\nassert solution('1\\n') == '1'\nassert solution('2\\n\\n') == '1'\nassert solution('3\\n\\n') == '1'\nassert solution('4\\n\\n') == '1'\nassert solution('5\\n\\n') == '1'\nassert solution('6\\n\\n') == '1'\nassert solution('7\\n\\n') == '1'\nassert solution('8\\n\\n') == '1'\nassert solution('9\\n\\n') == '1'\nassert solution('10\\n\\n') == '1'\nassert solution('11\\n\\n') == '1'\nassert solution('12\\n\\n') == '1'\nassert solution('13\\n\\n') == '1'\nassert solution('14\\n\\n') == '1'\nassert solution('15\\n\\n') == '1'\nassert solution('16\\n\\n') == '1'\nassert solution('17\\n\\n') == '1'\nassert solution('18\\n\\n') == '1'\nassert solution('19\\n\\n') == '1'\nassert solution('20\\n\\n') == '1'\nassert solution('21\\n\\n') == '1'\nassert solution('22\\n\\n') == '1'\nassert solution('23\\n\\n') == '1'\nassert solution('24\\n\\n') == '1'\nassert solution('25\\n\\n') == '1'\nassert solution('26\\n\\n') == '1'\nassert solution('27\\n\\n') == '1'\nassert solution('28\\n\\n') == '1'\nassert solution('29\\n\\n') == '1'\nassert solution('30\\n\\n') == '1'\nassert solution('31\\n\\n') == '1'\nassert solution('32\\n\\n') == '1'\nassert solution('33\\n\\n') == '1'\nassert solution('34\\n\\n') == '1'\nassert solution('35\\n\\n') == '1'\nassert solution('36\\n\\n') == '1'\nassert solution('37\\n\\n') == '1'\nassert solution('38\\n\\n') == '1'\nassert solution('39\\n\\n') == '1'\nassert solution('40\\n\\n') == '1'\nassert solution('41\\n\\n') == '1'\nassert solution('42\\n\\n') == '1'\nassert solution('43\\n\\n') == '1'\nassert solution('44\\n\\n') == '1'\nassert solution('45\\n\\n') == '1'\nassert solution('46\\n\\n') == '1'\nassert solution('47\\n\\n') == '1'\nassert solution('48\\n\\n') == '1'\nassert solution('49\\n\\n') == '1'\nassert solution('50\\n\\n') == '1'\nassert solution('51\\n\\n') == '1'\nassert solution('52\\n\\n') == '1'\nassert solution('53\\n\\n') == '1'\nassert solution('54\\n\\n') == '1'\nassert solution('55\\n\\n') == '1'\nassert solution('56\\n\\n') == '1'\nassert solution('57\\n\\n') == '1'\nassert solution('58\\n\\n') == '1'\nassert solution('59\\n\\n') == '1'\nassert solution('60\\n\\n') == '1'\nassert solution('61\\n\\n') == '1'\nassert solution('62\\n\\n') == '1'\nassert solution('63\\n\\n') == '1'\nassert solution('64\\n\\n')"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '10', 'Test case 1 failed'\nassert solution() == '0', 'Test case 2 failed'\nassert solution() == '0', 'Test case 3 failed'\nassert solution() == '0', 'Test case 4 failed'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 3 100\\n1 1 1\\n') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3\\n') == '0'\nassert solution('3 5 6 11\\n1 2 1\\n') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == '10'\nassert solution('Input') == '0'\nassert solution('Input') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == str(solution(input()))"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0\\n'\nassert solution() == '0\\n'\nassert solution() == '0\\n'\nassert solution() == '0\\n'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'YES\\n'\nassert solution('Input') == 'NO\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'NO\\n'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\nuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 3\\nimel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\ntobbeornottobesathequestion\\nwhethertisnoblerinthemindtodefertheslingsandarrowsofoutrageousfortune\\nortocutarmsagainstaseateafluestruggles\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 1 2 1\") == \"NO\"\nassert solution(\"4 13 11 15\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n3 1 5\\n\\n1\\n10\\n\") == \"26\"\nassert solution(stdin=\"1\\n10\\n\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"Test 1 failed\"\nassert solution(\"1\\n10\") == \"10\\n\", \"Test 2 failed\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\\n1\\n10\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 1 5\\n1\\n10') == '26'\nassert solution('1\\n10') == '10'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\nassert solution() == 32"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\", \"Test case 1 failed\"\nassert solution() == \"32\", \"Test case 2 failed\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected_output, f\"Test case {i+1} failed: got {solution(input)}, expected {expected_output}\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed. Output: {output_data}, Input: {input_data}\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"1 4 5 6 7 8 9\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"1 2 4\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"1 2\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 4 5 6 7 8 9\\n', 'Your function is not correct.'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == ['1', '4', '5', '6', '7', '8', '9'], \"Sample Input 1\"\nassert solution(sample_input2) == ['1', '2', '4'], \"Sample Input 2\"\nassert solution(sample_input3) == ['1', '2'], \"Sample Input 3\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2'\n\nfrom typing import List"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(stdin=\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(stdin=\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(stdin=\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5\\n1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"5\\n1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"5\\n1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"5\\n1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '''\n1 4 5 6 7 8 9\n'''\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '''\n1 2 4\n'''\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '''\n1 2\n'''\n\nassert solution('''\n10 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == '''\n1 2 3 4 5 6 7 8 9\n'''"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 4 5 6 7 8 9\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 4 5 6 7 8 9\", \"Your implementation is not correct.\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\nassert solution('''\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n\nassert solution(stdin) == '0'\n\nassert solution(stdin) == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == 1\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == 0\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == 2"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3\\n'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n3\\n'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 4 5 6 7 8\") == \"2\"\nassert solution(\"6 2\\n2 4 6 5 7 8\") == \"2\"\nassert solution(\"6 2\\n2 4 6 5 8 7\") == \"1\"\nassert solution(\"6 2\\n2 4 6 5 8 9\") == \"0\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"3\"\nassert solution(stdin=\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n'\n\nassert solution('6 2\\n2 3 6 5 4 10') == '3\\n'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 6 5 4 10\") == \"3\" # expected output: \"3\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"4\\n\"\nassert solution(\"9\") == \"10\\n\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Test 1 failed.\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"Test 2 failed.\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Test 3 failed.\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '4'\nassert solution('3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 2 3\\n') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\"\nassert solution(stdin) == \"4\", \"Test case 2 failed\"\nassert solution(stdin) == \"10\", \"Test case 3 failed\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1 3\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n\") == \"8\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 3\\n\") == \"2\\n4\\n10\\n\"\nassert solution(\"3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 3\\n\") == \"4\\n10\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 2\n    3\n    1 2 3\n    9\n    1 2 1 3 2 2 2 2 3\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 3\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    9\n    1 2 1 3 2 2 2 2 3\n    \"\"\"\n) == \"10\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 1 3 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected solution: {expected}, but got: {solution}\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4\\n', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n\"  # Sample Output"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"  # Test Case 1"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\\n\", \"Expected output: 4\\n\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are: \\n - 1, 1, 1,... \\n - 1, 2, 2,... \\n - 2, 1, 1,... \\n - 2, 2, 2,...\"\nassert solution(\"6\\n\") == \"16\\n\", \"The four sequences that satisfy the conditions are: \\n - 1, 1, 1, 1, 1, 1,... \\n - 1, 2, 2, 2, 2, 2,... \\n - 2, 1, 2, 2, 1, 2,... \\n - 2, 2, 1, 1, 2, 2,... \\n - 3, 1, 1, 1, 1, 1, 1,... \\n - 3, 2, 2, 2, 2, 2, 2,... \\n - 4, 1, 2, 2, 2, 2, 2,... \\n - 4, 2, 1, 2, 2, 2, 2,... \\n - 5, 1, 1, 2, 2, 2, 2,... \\n - 5, 2, 2, 1, 2, 2, 2,... \\n\"\nassert solution(\"7\\n\") == \"108\\n\", \"The four sequences that satisfy the conditions are: \\n - 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,... \\n - 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 3, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 3, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 4, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 4, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 5, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 5, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,... \\n - 6, 1, 1, 1, 2,"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Please enter the value of n\"\n\nn = int(stdin.strip())"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '4\\n', 'Test Failed'\nprint(solution('2'))"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"n m\\na_1 a_2 \u2026 a_n\\n\")) == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"3 5\\n2 3 1 2\") == \"3\"\nassert solution(\"2 4\\n1 3 1 2\") == \"2\"\nassert solution(\"4 5\\n1 3 1 2\") == \"2\"\nassert solution(\"5 4\\n1 3 1 2\") == \"3\"\nassert solution(\"3 3\\n1 3 1 2\") == \"2\"\nassert solution(\"3 2\\n1 3 1 2\") == \"2\"\nassert solution(\"4 4\\n1 3 1 2\") == \"2\"\nassert solution(\"4 1\\n1 3 1 2\") == \"2\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == 5\n\nsolution(\"4 6\\n1 5 1 4\") # Output: 5"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 10 10 10\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 10 10 10\\n\") == \"4\\n\"\nassert solution(\"4 6\\n1 5 1 4\\n1 10 10 10\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == 5\nassert solution(\"6 12\\n1 5 1 4\") == 6\nassert solution(\"5 8\\n1 5 1 4\") == 9\nassert solution(\"8 9\\n1 5 1 4\") == 9\nassert solution(\"3 7\\n1 5 1 4\") == 7"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4 1\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 2\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 3\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 5\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 6\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 7\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4 8\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 5 1 4 9\\n\") == \"6\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == 1, \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\") == 3, \"The police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\", \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\n\nassert solution(\"---\") == \"3\\n\", \"Right now the police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\"\n\nfrom typing import List"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('+-+-+') == '1\\n', \"Polycarpus just has been out of luck lately!\"\nassert solution('---') == '3\\n', \"Right now the police wonders what minimum number of distinct people Polycarpus could have seen.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('---') == '3'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"  # correct\nassert solution(\"---\") == \"3\\n\"  # correct"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n'+-+-+'\n) == 1, \"Expected output: 1, got: {}\".format(solution(\n'+-+-+'\n))\n\nassert solution(\n'---'\n) == 3, \"Expected output: 3, got: {}\".format(solution(\n'---'\n))"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"The solution is incorrect.\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(['10', 'AND 9 4', 'IN 1', 'IN 1', 'XOR 6 5', 'AND 3 7', 'IN 0', 'NOT 10', 'IN 1', 'IN 1', 'AND 2 8']) == '10110', \"Test failed\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110', 'Testcase 1 failed'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\") == \"10110\"  # expected output: \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n\"\"\"\n) == \"10110\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\n\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# tests\\nprint(solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\"))\\nprint(solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\"))\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"2\n1 3\"\"\"\n\ninput_data = \"\"\"5 3 1\n1 2 3 2 1\n1 2 3\n\n\"\"\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\\n\"\n\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n') == '2\\n1 2'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n4 4 2\\n3\\n1 2\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test case {i+1} failed\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\"  # Output: \"2\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n10 2 3 5 4 2\"\"\") == \"3\"\nassert solution(\"\"\"4\n100 100 100 100\"\"\") == \"1\"\nassert solution(\"\"\"8\n7 6 5 4 3 2 2 3\"\"\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('8') == '4'\nassert solution('6') == '3'\nassert solution('10 2 3 5 4 2') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'\nassert solution('6') == '3'\nassert solution('100 100 100 100') == '1'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\", \"Incorrect output for example 1\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\", \"Incorrect output for example 2\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\", \"Incorrect output for example 3\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"Yes\"\nassert solution(\"2\\n1\\n1\\n3\\n1\\n2\\n1\\n1\\n2\\n1\\n1\\n\") == \"Yes\"\nassert solution(\"6\\n2\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n\") == \"No\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n\") == \"No\"\nassert solution(\"4\\n3 2 2 1\\n3\\n3 3\\n2\\n3\\n1\\n\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\"\nprint(solution())\n\nassert solution() == \"No\"\nprint(solution())"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Expected output: {output_data}, but got: {solution(input_data)}\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3'\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'Yes\\n0'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\\n\"\n\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '20\\n0 2 1 4 3', 'The solution is incorrect.'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '20\\n0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 20, \"Expected 20, got {}\".format(solution(4))"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\"\nassert solution(5) == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"20\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 20\nassert solution(10) == 14\nassert solution(50) == 32\nassert solution(100) == 44\nassert solution(101) == 45"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\"\nassert solution() == \"40\\n0 3 2 1 4\"\nassert solution() == \"60\\n0 4 2 1 3\"\nassert solution() == \"100\\n0 3 4 2 1\"\nassert solution() == \"120\\n0 4 3 2 1\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 1\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 1\\n1 1\\n1 2\\n2 1\\n1 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1') == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\\n\"\nassert solution(stdin) == \"NO\\n\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\\n\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n\") == \"NO\\n\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES\\n'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO\\n'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES\\n'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES\\n'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO\\n'\n\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES\\n'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"1\\n0\\n1\\n0\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"1\\n0\\n1\\n0\") == \"1\\n4\\n10\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n3\\n1\\n1\\n1\\n\\nOutput\\n1\\n3\\n7\\n\\nInput\\n5\\n1\\n0\\n1\\n0\\n1\\n\\nOutput\\n1\\n4\\n10\\n22\\n43\\n\\nInput\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\\nOutput\\n1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\\nNote\\nThe first sample after all characters have been appended to S, so S is \"111\".') == ['1\\n3\\n7\\n', '1\\n4\\n10\\n22\\n43\\n']\nassert solution('Input\\n3\\n1\\n1\\n1\\n\\nOutput\\n1\\n3\\n7\\n\\nInput\\n5\\n1\\n0\\n1\\n0\\n1\\n\\nOutput\\n1\\n4\\n10\\n22\\n43\\n\\nInput\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\\nOutput\\n1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\\nNote\\nThe first sample after all characters have been appended to S, so S is \"111\".') == ['1\\n3\\n7\\n', '1\\n4\\n10\\n22\\n43\\n']"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('111') == '111'\nassert solution('11') == '011'\nassert solution('01') == '101'\nassert solution('101') == '0011'\nassert solution('0011') == '0011'\nassert solution('1110') == '1110'\nassert solution('1111') == '1111'\nassert solution('000') == '1000'\nassert solution('0111') == '1110'\nassert solution('1000') == '0111'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == '1\\n3\\n7'\nassert solution('5') == '1\\n4\\n10\\n22\\n43'\nassert solution('9') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\") == \"1\\n3\\n7\\n\"\nassert solution(\"Input\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"Input\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1068289920690372125\nprint(1068289920690372125)"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '1'\nassert solution(5) == '1'\nassert solution(9) == '1'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"1\\n0\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n0\\n0\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n0\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Output: {output}, Expected output: {output}\" for i, (input, output) in enumerate(tests)"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output for solution: {solution(input_data)}, expected {expected_output}\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Input:\\n{input}\\nExpected Output:\\n{expected}\\nOutput:\\n{solution(input)}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n3\") == \"Second\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n') == 'First\\nSecond\\nFirst\\n'\n\nassert solution('5\\n1 0\\n0 1\\n1 2\\n0 3\\n1 4\\n') == 'First\\nSecond\\nFirst\\n'\n\nassert solution('4\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n') == 'First\\nFirst\\nSecond\\n'\n\nassert solution('6\\n2 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\"\nassert solution() == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    3 0\n    6 2\n    1 2\n    2 3\n    15 10\n    12 14\n    8 3\n    10 1\n    14 6\n    12 6\n    1 9\n    13 1\n    2 5\n    3 9\n    7 2\n''') == 'First\\nSecond\\nFirst\\n'\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['Mike', 'Ann']\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == ['Mike', 'Ann', 'Ann', 'Mike', 'Mike']\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\", \"Test case 1 failed\"\n\nassert solution(input()) == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    8 3 8\n    1 2\n    2 3\n    \"\"\"\n) == '0'\n\nassert solution(\n    \"\"\"\n    3 2\n    8 12 8\n    1 2\n    2 3\n    \"\"\"\n) == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'ababacd'\nassert solution() == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ababacd\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7, 4) == \"ababacd\"\nassert solution(4, 7) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n\") == \"ababacd\"\nassert solution(\"4 7\\n\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    7 4\n    \"\"\"\n) == \"ababacd\"\n\nassert solution(\n    \"\"\"\n    4 7\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\"\nassert solution(\"4\\n1 2 3\") == \"1\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 4\nassert solution(10) == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n++-\"\nassert solution() == \"6\\n+++-\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6\\n++-2+-+'\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"2\n-\n2\n+\"\"\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test case 1 failed\"\nassert solution(\"18906\") == \"18690\", \"Test case 2 failed\"\nassert solution(\"0\") == \"0\", \"Test case 3 failed\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1\"\nassert solution(\"18906\") == \"18690\", \"Input 2\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test 1\"\nassert solution(\"18906\") == \"18690\", \"Test 2\"\nassert solution(\"0100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1\"\nassert solution(\"18906\") == \"18690\", \"Input 2\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"1234\") == 0\nassert solution(\"abc\") == 0"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"123\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"111\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\", \"Test case 1 failed.\"\nassert solution(\"18906\") == \"18690\", \"Test case 2 failed.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"18690\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"-1\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\") == 2\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\") == -1\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 5\\n5 6\\n6 1\\n\") == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\\n\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\\n\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The expected output is not found.\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3', \"Expected output: 3\\nActual output: {}\".format(solution(stdin))"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\", \"The solution should be 3\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"4\\n1 2\\n\") == \"4\\n\"\nassert solution(\"5\\n1 1 1\\n\") == \"60\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output: 3\\nActual output: \" + solution(stdin)"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\") == \"9\\n2\\n0\\n-1\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n1\\n1\") == \"2\\n-1\\n\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\") == \"0\\n-1\\n\"\nassert solution(\"1\\n1\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\") == \"0\\n\"\nassert solution(\"1\\n1\") == \"-1\\n\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"3\\n4 8 5\\n4\\n5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n\") == \"2\"\nassert solution(\"3\\n4 8 5\\n4\\n5\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\") == \"0\\n\"\nassert solution(\"1\\n1\") == \"-1\\n\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed for the given example.\\nExpected output: {output()}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 4 5\\n3 5 7 10') == '3'\nassert solution('13 4 5\\n7 8 9 10') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\nprint(\"Test Passed\")"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution() == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 3, \"Solution should return 3\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\"\nassert solution() == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"1111\\n3 4\\n5 2\\n3 1\\n3 2\\n3 1\") == \"4\"\nassert solution(\"011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n101\n3 3\n3 2\n3 1\n\"\"\") == '2'\n\nassert solution(\n\"\"\"\n4\n1111\n3 4\n5 2\n3 1\n3 2\n\"\"\") == '4'\n\nassert solution(\n\"\"\"\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n\"\"\") == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n101\\n3 3\\n3 2\\n3 1\\n\\nOutput\\n2\\n\\nInput\\n4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\\nOutput\\n4\\n\\nInput\\n6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\\nOutput\\n6\") == \"Output\\n6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    101\n    3 3\n    3 2\n    3 1\n    ''') == '2'\n\nassert solution('''\n    4\n    1111\n    3 4\n    5 2\n    3 1\n    3 2\n    ''') == '4'\n\nassert solution('''\n    6\n    011100\n    5 3\n    5 5\n    2 4\n    3 5\n    4 2\n    1 5\n    ''') == '6'\n\nprint('All tests passed!')"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1111'\nassert solution() == '01010'\nassert solution() == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1111'\nassert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1111\", \"Expected output: 1111, but got: \" + solution(stdin)"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1111'\nassert solution(input()) == '01010'\nassert solution(input()) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1111\", \"The solution is incorrect\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1/2\\n'\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\nassert solution(\"1\\n\") == \"0/1\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n\") == \"59/31\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1/2\", \"The correct output should be 1/2.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1/2\\n\", \"Expected: 1/2\\nActual: \" + solution(stdin)"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"Output\\n1 0 1 0 0\\n\"\nassert solution(\"Input\\n5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"Output\\n4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\"\nassert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n7 7\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n7 7\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 0 1 0 0\"\nassert solution() == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    2 5 1 4 6\n    1 7\n    1 1\n    3 5\n    3 6''') == '1 0 1 0 0\\n4 3 2 1 0'\n\nassert solution('''\n    5\n    9 7 8 6 5\n    1 1\n    2 1\n    3 1\n    4 1''') == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"Output\\n1 0 1 0 0\\n\"\nassert solution(\"Input\\n5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"Output\\n4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n1 0 1 0 0\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution()) == \"00110\"\nassert solution(solution(4)) == \"00110\"\nassert solution(solution(1)) == \"10100\"\nassert solution(solution(2)) == \"10100\"\nassert solution(solution(3)) == \"00110\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n4 5 1 7 4') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2\\n1 2') == '0\\n2\\n11\\n11'\nassert solution('3\\n1 1 1') == '1\\n0\\n11'\nassert solution('1\\n1\\n1\\n1\\n1') == '1\\n0\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == \"\"\"1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\n\"\"\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2\\n1 2\\n') == '0\\n2\\n11\\n11'\nassert solution('3\\n1 1 1\\n') == '1\\n0\\n11\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000'''"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\", \"Example 1\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\", \"Example 2\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\\n\", \"Example 3\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\\n\"\nassert solution(\"100\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1256\\n\"\nassert solution(\"500\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"19231\\n\"\nassert solution(\"1000\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"31893\\n\"\nassert solution(\"10000\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"124243\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"7\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"2\"\nassert solution(\"9\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"3\"\nassert solution(\"10\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"10\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"2\"\nassert solution(\"10\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"3\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Solution should return 1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '2'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\""
    }
]