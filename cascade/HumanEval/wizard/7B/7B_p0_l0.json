[
    {
        "number": 0,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert has_close_elements([1.0, 2.0, 3.0], 0.5) == False\nassert has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3) == True\nassert has_close_elements([1.0, 2.0, 3.0], 0.1) == False\nassert has_close_elements([1.0, 2.0, 3.0], 0.6) == False\nassert has_close_elements([1.0, 2.0, 3.0], 0.4) == False "
    },
    {
        "number": 1,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']\nassert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']\nassert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']\nassert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())']\nassert separate_paren_groups('( ) (( )) (( )( ))') == ['()', '(())', '(()())'] "
    },
    {
        "number": 2,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert truncate_number(3.5) == 0.5\nassert truncate_number(12.345) == 0.345\nassert truncate_number(4.0) == 0.0\nassert truncate_number(7.0) == 0.0\nassert truncate_number(0.12345) == 0.12345 "
    },
    {
        "number": 3,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert below_zero([1, 2, 3]) == False\nassert below_zero([1, 2, -4, 5]) == True\nassert below_zero([1, 2, -4, -5]) == True\nassert below_zero([1, 2, -4, 5, -6]) == True\nassert below_zero([1, 2, -4, 5, -6, 7]) == False "
    },
    {
        "number": 4,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0]) == 1.0\nassert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.25\nassert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0, 5.0, 6.0]) == 1.5\nassert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]) == 1.75\nassert mean_absolute_deviation([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]) == 2.0 "
    },
    {
        "number": 5,
        "checkpoint": "7B",
        "pass": 0,
        "answer": "assert intersperse([], 4) == []\nassert intersperse([1, 2, 3], 4) == [1, 4, 2, 4, 3]\nassert intersperse([1, 2, 3, 4], 0) == [1, 0, 2, 0, 3, 0, 4]\nassert intersperse([1, 2, 3, 4], 5) == [1, 5, 2, 5, 3, 5, 4]\nassert intersperse([1, 2, 3, 4], 10) == [1, 10, 2, 10, 3, 10, 4] "
    }
]