[
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    return stdin.replace('|', '')\n\nassert(solution('') == '')\nassert(solution('[::]') == '')\nassert(solution('[:||:]') == '')\nassert(solution('[:|||:]') == '')\nassert(solution('[:|||:|]') == '')\nassert(solution('[:|||:|:|]') == '')\nassert(solution('[:|||:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:|:|:|:|:|:|:|:|:|:|]') == '')\nassert(solution('[:|||:|:|:|:|:|:"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    x = int(stdin)\n    max_sum = 0\n    max_num = 0\n    for i in range(1, x + 1):\n        sum_of_digits = 0\n        for digit in str(i):\n            sum_of_digits += int(digit)\n        if sum_of_digits > max_sum:\n            max_sum = sum_of_digits\n            max_num = i\n    return str(max_num)"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    year = int(stdin)\n    years = 0\n    while year > 0:\n        if year % 10 == 0:\n            years += 1\n            year //= 10\n        else:\n            break\n    return str(years)"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "def solution(stdin: str) -> str:\n    n, q = map(int, stdin.split())\n    painters = [map(int, stdin.split()) for _ in range(q)]\n    painters.sort(key=lambda x: x[1])\n    painters.sort(key=lambda x: x[0])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x: x[1] - x[0])\n    painters.sort(key=lambda x: x[0] - x[1])\n    painters.sort(key=lambda x"
    }
]