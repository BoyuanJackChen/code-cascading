[
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('[a:b:|]') == 4\nassert solution('|]') == -1\nassert solution('|[:]') == -1\nassert solution('[::]') == 4\nassert solution('[:||:]') == 6\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('[a:b:|]') == 4\nassert solution('[]:[|:][:]') == -1\nassert solution('|][|:][|:][|') == -1\nassert solution('[|]|:|:|') == -1\nassert solution('[|][|:][|:][|') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('::') == '4'\nassert solution('[::]') == '4'\nassert solution('[:||:]') == '6'\nassert solution('[:|||:]') == '-1'\nassert solution('[::||]') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"|[a:b:|]\") == 4\nassert solution(\"|]:[|:]\") == -1\nassert solution(\"|][|]\") == -1\nassert solution(\"|][|:|]\") == -1\nassert solution(\"|]|]\") == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == -1\nassert solution('|[a:b:|]') == 4\nassert solution('|]:[|:]') == -1\nassert solution('|[a:b:c:d:|]') == -1\nassert solution('|||[]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"|[]a:b|\") == \"a:b\"\nassert solution(\"|[]a:b|:\") == \"a:b\"\nassert solution(\"|[]a:b|:c:\") == \"a:b\"\nassert solution(\"|[|]\") == \"\"\nassert solution(\"|:|\") == \"\"\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == -1\nassert solution('[::]') == 4\nassert solution('[::||:]') == 6\nassert solution('[::|||:]') == 7\nassert solution('[::|||:::]') == 7\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"|[a:b:|]\") == 4\nassert solution(\"|]:[|:]\") == -1\nassert solution(\"|]\") == -1\nassert solution(\"|[:|]|\") == -1\nassert solution(\"|][|]\") == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(':]') == \"4\"\nassert solution('[::]') == \"4\"\nassert solution('[:||:]') == \"6\"\nassert solution('[:|||:]') == \"7\"\nassert solution('[:|||:|]') == \"7\"\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('[::]') == '4'\nassert solution('[:||:]') == '6'\nassert solution('[:|||:]') == '7'\nassert solution('[:|||:]') == '7'\nassert solution('[:|||:|]') == '7'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('-3') == '-3'\nassert solution('-999') == '-999'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100''') == '99'\nassert solution('''48''') == '48'\nassert solution('''521''') == '499'\nassert solution('''987654321''') == '987654321'\nassert solution('''987654321''') == '987654321'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('100') == '99'\nassert solution('10^18') == '10^18'\nassert solution('999999999') == '999999999'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100''') == '99'\nassert solution('''48''') == '48'\nassert solution('''521''') == '499'"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100''') == '99'\nassert solution('''48''') == '48'\nassert solution('''521''') == '499'"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\n\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100') == '99'\nassert solution('48') == '48'\nassert solution('521') == '499'\nassert solution('-1') == '-1'\nassert solution('-10^9') == '-10^9'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '99'\nassert solution(input()) == '1000'\nassert solution(input()) == '1000'\nassert solution(input()) == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '99'\nassert solution(input()) == '1000'\nassert solution(input()) == '1000'\nassert solution(input()) == '1000'\nassert solution(input()) == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('10'*10**9) == '10'*10**9\nassert solution('100'*10**9) == '100'*10**9\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4) == \"1\"\nassert solution(201) == \"99\"\nassert solution(4000) == \"1000\""
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(4000) == 1000\nassert solution(12) == 1\nassert solution(4) == 1\nassert solution(100) == 99\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(4) == '1'\nassert solution(201) == '99'\nassert solution(4000) == '1000'\n\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(4) == 1\nassert solution(201) == 99\nassert solution(4000) == 1000\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(4) == 1\nassert solution(201) == 99\nassert solution(4000) == 1000"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(4000) == 1000\nassert solution(201) == 99\nassert solution(1) == 0\n\nassert solution('12345') == 4\nassert solution('11111') == 0\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"4 3\n1 1\n2 2\n3 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"6 5\n1 4\n4 5\n5 6\n6 7\n3 5\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"7 4\n1 1\n2 2\n3 4\n4 5\n5 6\n6 7\n7 8\n7 9\n6 8\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"8 4\n1 1\n2 2\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n7 9\n6 8\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7'\nprint('OK')\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1') == '2'\nassert solution('3\\n2\\n1\\n1') == '0'\nassert solution('2\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n1\\n2\\n3') == '3'\nassert solution('2\\n1\\n2\\n3\\n4') == '3'\nassert solution('3\\n2\\n1\\n2\\n3\\n4\\n5') == '2'\nassert solution('3\\n3\\n2\\n1\\n2\\n3\\n4\\n5\\n6') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n2 2\\n2 3\\n3 4') == '3'\nassert solution('1 1\\n2 2\\n3 4') == '2'\nassert solution('1 1\\n2 2\\n1 3\\n3 4') == '2'\nassert solution('1 1\\n2 2\\n3 4') == '3'\nassert solution('1 1\\n2 2\\n2 3\\n3 4') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 1') == '1'\nassert solution('5 4') == '3'\nassert solution('4 1') == '1'\nassert solution('10 5') == '4'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"3\"\nassert solution(\"4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"3 3\\n1 1\\n2 2\\n2 3\\n3 4\\n\") == \"3\"\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n11 23''') == '2'\nassert solution('''5\n01 07''') == '0'\nassert solution('''2\n2 2''') == '1'\nassert solution('''3\n5 59''') == '0'\nassert solution('''4\n1 1''') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('00') == 0\nassert solution('00:00') == 0\nassert solution('00:00:00') == 0\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/06/01-alarm.txt') == '0'\nassert solution('inputs/06/02-alarm.txt') == '1'\nassert solution('inputs/06/03-alarm.txt') == '1'\nassert solution('inputs/06/04-alarm.txt') == '2'\nassert solution('inputs/06/05-alarm.txt') == '2'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n11 23') == '2'\nassert solution('5\\n01 07') == '0'\nassert solution('2\\n01 07') == '0'\nassert solution('5\\n01 07') == '0'\nassert solution('10\\n10 10') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"3\n11 23\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5\n01 07\"\"\") == \"0\"\n\nassert solution(\n\"\"\"13\n07 27\"\"\") == \"2\"\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5\n01 07''') == '0'\nassert solution('''5\n23 07''') == '2'\nassert solution('''5\n03 07''') == '0'\nassert solution('''5\n25 07''') == '1'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n11 23\n''') == '2'\n\nassert solution('''5\n01 07\n''') == '0'\n\nassert solution('''30\n00 00\n''') == '1'\n\nassert solution('''60\n00 00\n''') == '1'"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11 23') == '2'\nassert solution('5 01') == '0'\nassert solution('13 17') == '2'\nassert solution('5 11') == '0'\nassert solution('13 19') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '0'\nassert solution('''5''') == '1'\nassert solution('''11 23''') == '2'\nassert solution('''5 01''') == '0'\nassert solution('''24 45''') == '1'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('123456789 10111213') == '10'\nassert solution('123456789 1011121345678910111213') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"6 7 2 5\") == \"4\"\nassert solution(\"7 1 1 7\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3 2 4''') == '5'\nassert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\nassert solution('''6 2 1 6''') == '0'\nassert solution('''7 2 1 7''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3 2 4\\n') == '5'\nassert solution('6 3 1 3\\n') == '1'\nassert solution('5 2 1 5\\n') == '0'\nassert solution('2 1 1 2\\n') == '0'\nassert solution('5 4 1 3\\n') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('12 34 25 43 22 35 22 22 34') == '7'\nassert solution('12 34 25 43 22 34 22 22 34') == '8'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 2 4''') == '5'\nassert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\n\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100''') == '2'\nassert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n14 5\n14 2\n14 1\n14 0\n14 1\n14 2\n14 3\n14 4\n14 5\n14 6\n14 7\n14 8\n14 9\n14 10\n14 11\n14 12\n14 13\n14 14\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n14 24\n14 25\n14 26\n14 27\n14 28\n14 29\n14 30\n14 31\n14 32\n14 33\n14 34\n14 35\n14 36\n14 37\n14 38\n14 39\n14 40\n14 41\n14 42\n14 43\n14 44\n14 45\n14 46\n14 47\n14 48\n14 49\n14 50\n14 51\n14 52\n14 53\n14 54\n14 55\n14 56\n14 57\n14 58\n14 59\n14 60\n14 61\n14 62\n14 63\n14 64\n14 65\n14 66\n14 67\n14 68\n14 69\n14 70\n14 71\n14 72\n14 73\n14 74\n14 75\n14 76\n14 77\n14 78\n14 79\n14 80\n14 81\n14 82\n14 83\n14 84\n14 85\n14 86\n14 87\n14 88\n14 89\n14 90\n14 91\n14 92\n14 93\n14 94\n14 95\n14 96\n14 97\n14 98\n14 99\n14 100\n14 101\n14 102\n14 103\n14 104\n14 105\n14 106\n14 107\n14 108\n14 109\n14 110\n14 111\n14 112\n14 113\n14 114\n14 115\n14 116\n14 117\n14 118\n14 119\n14 120\n14 121\n14 122\n14 123\n14 124\n14 125\n14 126\n14 127\n14 128\n14 129\n14 130\n14 131\n14 132\n14 133\n14 134\n14 135\n14 136\n14 137\n14 138\n14 139\n14 140\n14 141\n14 142\n14 143\n14 144\n14 145\n14 146\n14 147\n14 148\n14 149\n14 150\n14 151\n14 152\n14 153\n14 154\n14 155\n14 156\n14 157\n14 158\n14 159\n14 160\n14 161\n14 162\n14 163\n14 164\n14 165\n14 166\n14 167\n14 168\n14 169\n14 170\n14 171\n14 172\n14 173\n14 174\n14 175\n14 176\n14 177\n14 178\n14 179\n14 180\n14 181\n14 182\n14 183\n14 184\n14 185\n14 186\n14 187\n14 188\n14 189\n14 190\n14 191\n14 192\n14 193\n14 194\n14 195\n14 196\n14 197\n14 198\n14 199\n14 200\n14 201\n14 202\n14 203\n14 204\n14 205\n14 206\n14 207\n14 208\n14 209\n14 210\n14 211\n14 212\n14 213\n14 214\n14 215\n14 216\n14 217\n14 218\n14 219\n14 220\n14 221\n14 222\n14 223\n14 224\n14 225\n14 226\n14 227\n14 228\n14 229\n14 230\n14 231\n14 232\n14 233\n14 234\n14 235\n14 236\n14 237\n14 238\n14 239\n14 240\n14 241\n14 242\n14 243\n14 244\n14 245\n14 246\n14 247\n14 248\n14 249\n14 250\n14 251\n14 252\n14 253\n14 254\n14 255\n14 256\n14 257\n14 258\n14 259\n14 260\n14 261\n14 262\n14 263\n14 264\n14 265\n14 266\n14 267\n14 268\n14 269\n14 270\n14 271\n14 272\n14 273\n14 274\n14 275\n14 276\n14 277\n14 278\n14 279\n14 280\n14 281\n14 282\n14 283\n14 284\n14 285\n14 286\n14 287\n14 288\n14 289\n14 290\n14 291\n14 292\n14 293\n14 294\n14 295\n14 296\n14 297\n14 298\n14 299\n14 300\n14 301\n14 302\n14 303\n14 304\n14 305\n14 306\n14 307\n14 308\n14 309\n14 310\n14 311\n14 312\n14 313\n14 314\n14 315\n14 316\n14 317\n14 318\n14 319\n14 320\n14 321\n14 322\n14 323\n14 324\n14 325\n14 326\n14 327\n14 328\n14 329\n14 330\n14 331\n14 332\n14 333\n14 334\n14 335\n14 336\n14 337\n14 338\n14 339\n14 340\n14 341\n14 342\n14 343\n14 344\n14 345\n14 346\n14 347\n14 348\n14 349\n14 350\n14 351\n14 352\n14 353\n14 354\n14 355\n14 356\n14 357\n14 358\n14 359\n14 360\n14 361\n14 362\n14 363\n14 364\n14 365\n14 366\n14 367\n14 368\n14 369\n14 370\n14 371\n14 372\n14 373\n14 374\n14 375\n14 376\n14 377\n14 378\n14 379\n14 380\n14 381\n14 382\n14 383\n14 384\n14 385\n14 386\n14 387\n14 388\n14 389\n14 390\n14 391\n14 392\n14 393\n14 394\n14 395\n14 396\n14 397\n14 398\n14 399\n14 400\n14 401\n14 402\n14 403\n14 404\n14 405\n14 406\n14 407\n14 408\n14 409\n14 410\n14 411\n14 412\n14 413\n14 414\n14 415\n14 416"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"2\\n3\\n-1\"\n\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"3\\n3\\n-1\"\n\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"3\\n3\\n-1\"\n\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"3\\n3\\n-1\"\n\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"3\\n3\\n-1\""
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"8 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100') == '2'\nassert solution('3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '3'\nassert solution('3\\n3 10\\n6 3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '-1'\nassert solution('2\\n5 5\\n2 6\\n2 3\\n2 2\\n1 1') == '1'\nassert solution('2\\n5 5\\n2 6\\n2 3\\n2 2\\n1 1\\n2 2\\n2 2\\n1 1') == '2'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100''') == '2'\n\nassert solution('''1\n3 100\n3 2\n1 100\n2 1''') == '-1'\n\nassert solution('''1\n3 100\n3 2\n1 100\n2 1\n1 100\n2 1''') == '-1'\n'''\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\n'''"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == ''\nassert solution('1\\n2\\n') == '3'\nassert solution('1\\n3\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n2\\n2\\n') == '0'\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"2\\n3\\n-1\"\n\"\"\"\n    T = int(stdin.readline())\n    for _ in range(T):\n        N, X = list(map(int, stdin.readline().split()))\n        D = list(map(int, stdin.readline().split()))\n        H = list(map(int, stdin.readline().split()))\n        ans = \"-\"\n        curX = X\n        curH = max(H)\n        for d, h in zip(D, H):\n            if curX - d <= 0:\n                ans = \"0\"\n                break\n            elif curH - h <= 0:\n                curX -= d\n                curH = max(H)\n                H[H.index(max(H))] += h\n            else:\n                curX -= d\n                curH -= h\n        print(ans)\n\"\"\"\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 1\\n1 1\\n') == '2'\nassert solution('3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == '4'\nassert solution('10 100') == '5'\nassert solution('1 100') == '0'\nassert solution('1001 100') == '1'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('8 3') == '5'\nassert solution('100 101') == '50'\nassert solution('100 9') == '50'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('6 7') == '3'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '4'\nassert solution('8 1') == '5'\nassert solution('5 4') == '4'\nassert solution('1 2') == '1'\nassert solution('9 17') == '4'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 2\n\"\"\") == '4'\nassert solution(\n\"\"\"\n8 1\n\"\"\") == '5'\nassert solution(\n\"\"\"\n3 4\n\"\"\") == '1'\nassert solution(\n\"\"\"\n9 1\n\"\"\") == '0'\nassert solution(\n\"\"\"\n10 10\n\"\"\") == '1'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('1 1') == '0'\nassert solution('1 10') == '9'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '4'\nassert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('5 1') == '4'\nassert solution('8 0') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '4'\nassert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('3 1') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('3p') == 1\nassert solution('9m') == 1\nassert solution('3p 9m 2p') == 1\nassert solution('9m 9m 9m') == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('9s 9s 9s') == '0'\nassert solution('9m 9m 9m') == '0'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3p 9m 2p') == '1'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('3p 9m 2p') == 1\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('3p 9p 2p') == 2\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9m 9m 9m''') == '0'\nassert solution('''1s 2s 3s''') == '0'\nassert solution('''9m 9m 9m''') == '0'\nassert solution('''3p 9m 2p''') == '1'\nassert solution('''3p 9m 2p''') == '1'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('5p 6p 5p') == '2'\nassert solution('7p 8p 6p') == '2'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == ''\n\"\"\""
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1\\n'\nassert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 0\n''') == '-1\\n'\nassert solution('''2\n3 3\n3 1 3 2\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2\\n'\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1\\n'\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2\\n'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1') == '1'\nassert solution('2\\n2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0') == '2'\nassert solution('2\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0') == '2'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0') == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1\n2 2\n1 2 1 1\n1 0 0 1''') == '1'\n\nassert solution(\n'''2\n2 2\n1 2 1 1\n1 0 0 1\n''') == '2'\n\nassert solution(\n'''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0''') == '2'\n\nassert solution(\n'''3\n2 2\n1 2 1 1\n1 0 0 1\n''') == '-1'\n\nassert solution(\n'''2\n2 2\n1 2 1 1\n1 0 0 1''') == '-1'"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1') == '1'\nassert solution('2\\n2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0') == '-1'\nassert solution('2\\n2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0\\n1 1 1 1') == '2'\nassert solution('2\\n2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0') == '-1'\nassert solution('2\\n2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\\n1 1 1 1') == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5 4 3 2 1\\n1 2 2 2 2\\n1 0 0 0 0\\n2 0 1 0 1\\n1 2 1 2 1\\n1 2 1 2 2\\n1 0 0 0 0') == '1'\nassert solution('2\\n2 2\\n2 1 1 1\\n1 2 2 2 2\\n1 0 0 0 0\\n2 0 1 0 1\\n1 2 1 2 1\\n1 2 1 2 2\\n1 0 0 0 0') == '-1'\nassert solution('3\\n10 10\\n1 2 1 1 1\\n5 5 6 5 5\\n6 4 5 4 4\\n2 1 2 0 2\\n1 0 0 1 0\\n2 0 1 0 1\\n1 2 1 2 2\\n1 2 1 2 2\\n1 0 0 0 0') == '2'\nassert solution('3\\n2 2\\n2 1 1 1\\n1 2 2 2 2\\n1 0 0 0 0\\n2 0 1 0 1\\n1 2 1 2 1\\n1 2 1 2 2\\n1 0 0 0 0') == '-1'\nassert solution('3\\n10 10\\n1 2 1 1 1\\n5 5 6 5 5\\n6 4 5 4 4\\n2 1 2 0 2\\n1 0 0 1 0\\n2 0 1 0 1\\n1 2 1 2 2\\n1 2 1 2 2\\n1 0 0 0 0') == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13') == '3'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == expected('')\n'''"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 2\\n1 2 1 1\\n1 0 0 1\\n') == '1'\nassert solution('2\\n3 2\\n1 2 1 1\\n1 0 0 1\\n') == '2'\nassert solution('2\\n3 2\\n1 2 1 1\\n1 2 2 2\\n1 0 0 0\\n') == '-1'\nassert solution('2\\n2 2\\n1 2 1 1\\n1 0 0 0\\n') == '-1'\nassert solution('2\\n2 2\\n1 2 1 1\\n1 2 2 2\\n1 0 0 0\\n') == '2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''14''') == '0 2'\nassert solution('''2''') == '0 2'\nassert solution('''1''') == '0 1'\nassert solution('''3''') == '0 1'\nassert solution('''4''') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '0 2'\nassert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('7') == '1 1'\nassert solution('15') == '1 1'\nassert solution('3') == '1 1'"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('12') == '0 2'\nassert solution('0') == '0 0'\nassert solution('-12') == '0 0'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('0') == '0 0'\nassert solution('4') == '0 2'\nassert solution('5') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4 4\"\nassert solution(input()) == \"0 2\"\n\n\n\n\"\"\""
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"14\") == \"4 4\"\nassert solution(\"2\") == \"0 2\""
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\nassert solution('10000000000 1000000000 10000000 100000000') == '50000000000'\nassert solution('5 1 1 4 1') == '4'\nassert solution('3 2 2 1 2') == '6'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\nassert solution(\"5 2 3 8 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\nassert solution(\"3 1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 3 3 5\") == \"51\"\nassert solution(\"3 2 2 3 5\") == \"39\"\nassert solution(\"5 2 3 1 3\") == \"39\"\nassert solution(\"4 1 4 4 4\") == \"31\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3 12 15\n''') == '39'\nassert solution('''20 2 3 3 5\n''') == '51'\nassert solution('''20 2 3 3 5\n''') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"GGGG\") == \"4\"\nassert solution(\"SSS\") == \"0\"\nassert solution(\"GGGGGGG\") == \"4\"\nassert solution(\"SSSSSSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"G\") == \"1\"\nassert solution(\"GGGG\") == \"0\"\nassert solution(\"GGG\") == \"1\"\nassert solution(\"SSS\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"GGGG\") == \"4\"\nassert solution(\"GGGSGGGSGG\") == \"7\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"0\"\nassert solution(\"GGGG\") == \"0\"\nassert solution(\"GGGSGGGSGG\") == \"7\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10\nGGGSGGGSGG''') == '7'\nassert solution('''4\nGGGG''') == '4'\nassert solution('''3\nSSS''') == '0'\nassert solution('''2\nSS''') == '0'\nassert solution('''5\nSGGSGGG''') == '3'\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\\nGGGSGGGSGG\") == \"7\"\nassert solution(\"4\\nGGGG\") == \"4\"\nassert solution(\"3\\nSSS\") == \"0\"\nassert solution(\"3\\nGG\") == \"0\"\nassert solution(\"2\\nG\") == \"0\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('GG') == 'GG'\nassert solution('GGG') == 'GG'\nassert solution('GGGGG') == 'GG'\nassert solution('GGG' + 'G' * 1000) == 'GGG' + 'G' * 1000\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10\nGGGSGGGSGG''') == '7'\nassert solution('''4\nGGGG''') == '0'\nassert solution('''3\nSSS''') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\\nGGGSGGGSGG\") == \"7\"\nassert solution(\"4\\nSSS\") == \"0\"\nassert solution(\"3\\nSSS\") == \"0\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == \"6\"\nassert solution(\"3 3\\n1 2 3\\n1 2\\n1 3\\n1 1\") == \"-1\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"2\\n1 2\") == \"1 2\"\nassert solution(\"3\\n1 2 3\") == \"1 2\"\nassert solution(\"5\\n0\\n0\\n1 2 3 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n''') == '5'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '6'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\nassert solution('''1 3\n0\n0\n1 2\n2 1 2\n1 4\n1 5\n''') == '-1'\nassert solution('''9 9\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n1 7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n0\n0\n0\n2 2 1\n1 4\n1 5\n''') == '5'\nassert solution('''6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n''') == '5'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '6'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '-1'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 3\\n1 2\\n1 3\\n1 1') == '5\\n1 2 3 4 5'\nassert solution('3 3\\n1 2 3\\n1 2\\n1 3\\n1 1') == '6\\n1 2 3 9 4 5 3'\nassert solution('6 3\\n1 2 3 4 5 6\\n1 2 3\\n1 3\\n1 1') == '-1'\nassert solution('7 5\\n1 2 3 4 5 6 7\\n1 2 3\\n1 3\\n1 1') == '-1'\nassert solution('2 1\\n1') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '1 2 3 4 5'\nassert solution(input()) == '6'\nassert solution(input()) == '1 2 3 4 5 6'\nassert solution(input()) == '7'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"9 3\") == \"6\"\nassert solution(\"3 9 5\") == \"-1\"\nassert solution(\"3 9 4 5\") == \"-1\"\nassert solution(\"1 8\") == \"-1\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"2\"\nassert solution(\"3 9 5\") == \"6\"\nassert solution(\"3 9 4 5\") == \"1 2 3 4 5\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"3 9 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"2 1 2\") == \"1 2 9 4 5 3\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"0\") == \"-1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n3 2 1\\n') == '3 2 1 5 4'\nassert solution('5 1\\n3\\n') == '3 2 1 5 4'\nassert solution('5 2\\n3 4\\n') == '-1'\nassert solution('5 3\\n2 3 1\\n') == '3 2 1 5 4'\nassert solution('5 4\\n2 3 1\\n') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 2 4') == '1 2 3 4'\nassert solution('1 3 2 4') == '1 2 3 4'\nassert solution('1 4 3 2') == '1 2 3 4'\nassert solution('1 4 3 2') == '1 2 3 4'\nassert solution('1 4 3 2') == '1 2 3 4'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n3 2 1''') == '3 2 1 5 4'\nassert solution('''5 1\n3''') == '3 2 1 5 4'\nassert solution('''5 2\n3 4''') == '-1'\nassert solution('''5 2\n5\n''') == '3 2 1 5 4'\nassert solution('''5 2\n5 4\n''') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"3 2 1 5 4 \"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"5 1\") == \"3 2 1 5 4 \"\nassert solution(\"2 3 1\") == \"-1\"\nassert solution(\"5 2\") == \"-1\"\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n3 2 1') == '3 2 1 5 4'\nassert solution('5 1\\n3\\n') == '3 2 1 5 4'\nassert solution('5 2\\n3 4') == '-1'"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2 1'\nassert solution('2 1') == '1 2'\nassert solution('2 1 3') == '3 2 1'\nassert solution('3 2 1') == '1 2 3'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n3\\n') == '1\\n3'\nassert solution('5\\n3\\n') == '3\\n1\\n5'"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n3 2 1\n''') == '3 2 1 5 4'\nassert solution('''5 1\n3\n''') == '3 2 1 5 4'\nassert solution('''5 2\n3 4\n''') == '-1'\nassert solution('''6 3\n2 3 1\n''') == '2 3 1 6 4 5'\nassert solution('''6 3\n2 3 1\n3 4\n''') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"3 2 1\") == \"3 2 1 5 4\"\nassert solution(\"3 2 1\") == \"3 2 1 5 4\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 3') == \"YES\"\nassert solution('10 10 0') == \"YES\"\nassert solution('1 -4 5') == \"NO\"\nassert solution('0 60 50') == \"NO\"\nassert solution('0 1 2 3') == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\nassert solution(\"-10 -5 0\") == \"YES\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 7 3''') == 'YES'\nassert solution('''10 10 0''') == 'YES'\nassert solution('''0 60 50''') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('3 1 3') == 'YES'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('0 10 0') == 'YES'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"0 60 50\") == \"NO\"\nassert solution(\"0 -4 5\") == \"NO\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('0 60 50') == 'NO'\nassert solution('1 -4 5') == 'NO'\nassert solution('10 50 0') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('0 60 50') == 'NO'\nassert solution('-1 -4 5') == 'NO'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('((((((()))))))') == '1'\nassert solution('(()())()') == '1'\nassert solution('(()(()(()()(()()()))))') == '1'\nassert solution('((((()))))') == '1'\nassert solution('(()())()') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\" * 10 ** 3) == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"((()())()())\") == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"(((()))\") == \"0\"\nassert solution(\"(()(()))\") == \"0\"\nassert solution(\"(()()(()))\") == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('(())()()') == 1\nassert solution('()(())()') == 1\nassert solution(')(())(') == 0\n\n\n\"\"\"\n\ncnt_1, cnt_2, cnt_3, cnt_4 = [int(x) for x in stdin.strip().split(' ')]"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('(())') == '1'\nassert solution('(()(()')) == '0'\nassert solution('())(()') == '1'\nassert solution('(())((()') == '0'\nassert solution('(())()()') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"1\"\n\n\n\"\"\""
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n4\n3''') == '1'\nassert solution('''0\n0\n0\n0\n''') == '1'\nassert solution('''1\n2\n3\n4\n''') == '0'\nassert solution('''9\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''7\n5\n7\n8\n6\n9\n10\n11\n15\n14\n''') == '1'\n'''\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n'''\n'''\n\n6\n1\n4\n3\n2\n0\n5\n'''\n'''\n\n0\n0\n0\n0\n0\n0\n'''\n\n'''\n\n1\n\n1\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n1\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n1\n\n1\n\n1\n\n1\n\n0\n\n1\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n\n0\n'''\n\n'''\n\n0\n\n0"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 5 3\\n') == '3'\nassert solution('10 5 7\\n') == '5'\nassert solution('10 5 12\\n') == '3'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 5 3''') == '3'\nassert solution('''10 5 7''') == '5'\nassert solution('''10 5 12''') == '3'\nassert solution('''1000 0 0''') == '0'\nassert solution('''10 0 0''') == '0'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\nassert solution('10 3 17') == '2'\nassert solution('10 3 30') == '1'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\nassert solution(\"10 5 11\") == \"3\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\n\n\n##  Find the number of people who want to sit at the party on time t. \n##  For example, if there are 4 people, and they want to sit at the party on time 2, then answer should be 4. \n##  If there are 5 people, and they want to sit at the party on time 2, then answer should be 5. \n##  If there are 6 people, and they want to sit at the party on time 2, then answer should be 6. \n##  If there are 7 people, and they want to sit at the party on time 2, then answer should be 7. \n##  If there are 8 people, and they want to sit at the party on time 2, then answer should be 8. \n##  If there are 9 people, and they want to sit at the party on time 2, then answer should be 9. \n##  If there are 10 people, and they want to sit at the party on time 2, then answer should be 10. \n##  If there are 11 people, and they want to sit at the party on time 2, then answer should be 11.\n##  If there are 12 people, and they want to sit at the party on time 2, then answer should be 12.\n##  If there are 13 people, and they want to sit at the party on time 2, then answer should be 13.\n##  If there are 14 people, and they want to sit at the party on time 2, then answer should be 14.\n##  If there are 15 people, and they want to sit at the party on time 2, then answer should be 15.\n##  If there are 16 people, and they want to sit at the party on time 2, then answer should be 16.\n##  If there are 17 people, and they want to sit at the party on time 2, then answer should be 17.\n##  If there are 18 people, and they want to sit at the party on time 2, then answer should be 18.\n##  If there are 19 people, and they want to sit at the party on time 2, then answer should be 19.\n##  If there are 20 people, and they want to sit at the party on time 2, then answer should be 20.\n##  If there are 21 people, and they want to sit at the party on time 2, then answer should be 21.\n##  If there are 22 people, and they want to sit at the party on time 2, then answer should be 22.\n##  If there are 23 people, and they want to sit at the party on time 2, then answer should be 23.\n##  If there are 24 people, and they want to sit at the party on time 2, then answer should be 24.\n##  If there are 25 people, and they want to sit at the party on time 2, then answer should be 25.\n##  If there are 26 people, and they want to sit at the party on time 2, then answer should be 26.\n##  If there are 27 people, and they want to sit at the party on time 2, then answer should be 27.\n##  If there are 28 people, and they want to sit at the party on time 2, then answer should be 28.\n##  If there are 29 people, and they want to sit at the party on time 2, then answer should be 29.\n##  If there are 30 people, and they want to sit at the party on time 2, then answer should be 30.\n##  If there are 31 people, and they want to sit at the party on time 2, then answer should be 31.\n##  If there are 32 people, and they want to sit at the party on time 2, then answer should be 32.\n##  If there are 33 people, and they want to sit at the party on time 2, then answer should be 33.\n##  If there are 34 people, and they want to sit at the party on time 2, then answer should be 34.\n##  If there are 35 people, and they want to sit at the party on time 2, then answer should be 35.\n##  If there are 36 people, and they want to sit at the party on time 2, then answer should be 36.\n##  If there are 37 people, and they want to sit at the party on time 2, then answer should be 37.\n##  If there are 38 people, and they want to sit at the party on time 2, then answer should be 38.\n##  If there are 39 people, and they want to sit at the party on time 2, then answer should be 39.\n##  If there are 40 people, and they want to sit at the party on time 2, then answer should be 40.\n##  If there are 41 people, and they want to sit at the party on time 2, then answer should be 41.\n##  If there are 42 people, and they want to sit at the party on time 2, then answer should be 42.\n##  If there are 43 people, and they want to sit at the party on time 2, then answer should be 43.\n##  If there are 44 people, and they want to sit at the party on time 2, then answer should be 44.\n##  If there are 45 people, and they want to sit at the party on time 2, then answer should be 45.\n##  If there are 46 people, and they want to sit at the party on time 2, then answer should be 46.\n##  If there are 47 people, and they want to sit at the party on time 2, then answer should be 47.\n##  If there are 48 people, and they want to sit at the party on time 2, then answer should be 48.\n##  If there are 49 people, and they want to sit at the party on time 2, then answer should be 49.\n##  If there are 50 people, and they want to sit at the party on time 2, then answer should be 50.\n##  If there are 51 people, and they want to sit at the party on time 2, then answer should be 51.\n##  If there are 52 people, and they want to sit"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 5 3''') == '3'\nassert solution('''10 5 7''') == '5'\nassert solution('''10 5 12''') == '3'\nassert solution('''10 5 10''') == '4'\nassert solution('''10 5 1000000000''') == '3'\n\n\n--- 12.03.2017 ---\n'''\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"acdb\") == \"abdc\"\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    'cab'\n) == 'abc'\n\nassert solution(\n    'acdb'\n) == 'abdc'\n\nassert solution(\n    'acdc'\n) == 'abdc'\n\nassert solution(\n    'cab'\n) == 'abc'\n\nassert solution(\n    'acdb'\n) == 'abdc'"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nprint(solution(input()))\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == 'abc'\nassert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nassert solution('acdf') == 'abc'\nassert solution('ac') == 'ac'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'ab'\nassert solution('abc') == 'ab'\nassert solution('abcd') == 'abc'\nassert solution('abcde') == 'abc'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n1\\n1') == 'NO'\nassert solution('0\\n1\\n1\\n2\\n1\\n1000\\n3') == 'YES'\nassert solution('0\\n1\\n1\\n2\\n1\\n1000\\n3\\n4\\n4\\n3') == 'NO'\nassert solution('1\\n1\\n2\\n1\\n1000\\n3\\n4\\n4\\n3') == 'NO'\nassert solution('1\\n1\\n2\\n1\\n1000\\n3\\n4\\n4\\n3\\n4\\n3') == 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"0\n\"\"\") == \"\"\nassert solution(\"\"\"1\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"0\n2\n\"\"\") == \"NO\"\nassert solution(\"\"\"1\n2\n2\n2\n2\n\"\"\") == \"YES\"\nassert solution(\"\"\"1\n1\n1\n1\n1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO\\nYES\\nNO\\nNO\\nNO\\nYES'\n'''\n\n\"NO\" means that Polycarp has to make some guesses, and it is impossible to find out what he has guessed.\n\"YES\" means that Polycarp has figured it out.\n\nMore information on the algorithm can be found at Wikipedia:\nhttps://en.wikipedia.org/wiki/Super_Expert_level\n\n'''\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(''.join(input().splitlines())) == 'YES' or 'NO'\nassert solution(''.join(input().splitlines())) == 'YES' or 'NO'\nassert solution(''.join(input().splitlines())) == 'NO' or 'YES'\nassert solution(''.join(input().splitlines())) == 'NO' or 'YES'\nassert solution(''.join(input().splitlines())) == 'YES' or 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n\n'''\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    plays = []\n    for _ in range(n):\n        plays.append(list(map(int, input().split())))\n    total_plays = sum([x[0] for x in plays])\n    total_clears = sum([x[1] for x in plays])\n    if total_plays == total_clears:\n        print('YES')\n    else:\n        print('NO')"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n3\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n\nassert solution('''4\n2\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''4\n4\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''4\n4\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''4\n4\n0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\nassert solution(\"05:50\") == \"0\""
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n\nprint('All set!')\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('23:59') == 0\nassert solution('05:39') == 11\nassert solution('13:31') == 0\nassert solution('23:59') == 1\nassert solution('23:59') == 1\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\nassert solution('0:1') == '0'\nassert solution('23:59:59') == '60'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n\n\n'''\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\nassert solution('00:00') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n\n\n\n\n\"\"\""
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n\nassert solution(\"05:50\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3 4') == '1'\nassert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'\nassert solution('7\\n6 5 4 3 2 1') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 5 1 3 2''') == '3'\nassert solution('''7\n1 6 5 3 4 7 2''') == '6'\nassert solution('''6\n6 5 4 3 2 1''') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n4 5 1 3 2''') == '3'\nassert solution('''7\n1 6 5 3 4 7 2''') == '6'\nassert solution('''6\n6 5 4 3 2 1''') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 5 1 3 2\\n\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\\n\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\\n\") == \"5\"\nassert solution(\"6\\n1 5 4 3 2 6\\n\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1\"\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 1 3 2') == '3'\nassert solution('7 1 6 5 3 4 7 2') == '6'\nassert solution('6 5 4 3 2 1') == '5'\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n4 5 1 3 2\\n') == '3\\n'\nassert solution('7\\n1 6 5 3 4 7 2\\n') == '6\\n'\nassert solution('6\\n6 5 4 3 2 1\\n') == '5\\n'\nassert solution('0\\n0\\n') == '0\\n'\nassert solution('1\\n0\\n') == '0\\n'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '3'\nassert solution('''4 5 1 3 2''') == '3'\nassert solution('''7''') == '6'\nassert solution('''6 5 4 3 2 1''') == '5'\n\n\n\n\n'''\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'\nassert solution('6\\n6 5 4 3 2 1') == '5'\nassert solution('6\\n6 5 4 3 2 1') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '3'\nassert solution('''7''') == '6'\nassert solution('''6''') == '5'\nassert solution('''6''') == '5'\nassert solution('''1 6 5 3 4 7 2''') == '6'"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\""
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"NIE\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"L\") == \"NIE\"\nassert solution(\"o\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\nassert solution('a') == 'NIE'\nassert solution('abba') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''oXoxoXo''') == 'TAK'\nassert solution('''bod''') == 'NIE'\nassert solution('''ER''') == 'NIE'\nassert solution('''x''') == 'NIE'\nassert solution('''xoxoXo''') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abccba\") == \"NIE\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"bob\") == \"NIE\"\nassert solution(\"ola\") == \"NIE\"\nassert solution(\"oXoxoXo\") == \"TAK\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('oXoXoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\n\nprint('solution:', solution('oXoXoXo'))\nprint('solution:', solution('bod'))\nprint('solution:', solution('ER'))\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"oxoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"Zzzz\") == \"NIE\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"B\") == \"NIE\"\nassert solution(\"\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'NIE'\nassert solution('oXoXoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'TAK'\nassert solution('WoW') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'TAK'"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"123\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890\") == \"12345678901234567890123456789012345678901234567890123456789\"\nassert solution(\"1234567890\") == \"1234567890\"\nassert solution(\"9341234567890\") == \"9341234567890\"\nassert solution(\"934123456789\") == \"934123456789\"\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join(['123', '222'])) == '213'\nassert solution('\\n'.join(['3921', '10000'])) == '9321'\nassert solution('\\n'.join(['4940', '5000'])) == '4940'\nassert solution('\\n'.join(['123', '999'])) == '999'\nassert solution('\\n'.join(['5', '5'])) == '5'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123') == '123'\nassert solution('1234567890') == '987654321'\nassert solution('123456789') == '987654321'\nassert solution('1234567890123456789012345678901234567890') == '987654321012345678901234567890'\nassert solution('987654321') == '987654321'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123\") == \"321\"\nassert solution(\"012\") == \"021\"\nassert solution(\"12345\") == \"54321\"\nassert solution(\"9089\") == \"9899\"\nassert solution(\"908\") == \"9998\"\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('123') == '213'\nassert solution('1234') == '3412'\nassert solution('12345') == '124535'\nassert solution('123456789') == '987654321'\nassert solution('987654321') == '123456789'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1' * 10) == '1' * 10\nassert solution('1' * 100) == '1' * 100\nassert solution('1' * 1000) == '1' * 1000\n\nassert solution('2' * 10) == '2' * 10\nassert solution('2' * 100) == '2' * 100\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123') == '123'\nassert solution('111') == '111'\nassert solution('100') == '100'\nassert solution('921') == '3141'\nassert solution('99') == '99'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123') == '213'\nassert solution('123') == '213'\nassert solution('123456789') == '987654321'\nassert solution('99123456789') == '123456789'\nassert solution('987654321') == '987654321'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"213\"\nassert solution(\"123\") == \"213\"\nassert solution(\"123\") == \"213\"\nassert solution(\"123\") == \"213\"\nassert solution(\"123\") == \"213\"\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''XX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\n\nassert solution('''XXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4 5 6 7 8 9 10') == ''\nassert solution('..X..X.XX..XX..X.X..X.X..XX.X.X..XX..X.X..X.X.X.X.X..XX.X..XX..') == 'YES'\nassert solution
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"XX.XX.....\") == \"YES\"\nassert solution(\"XXOXX.....\") == \"NO\"\nassert solution(\"XXXXO.O....\") == \"YES\"\nassert solution(\"XXXXOO.O....\") == \"NO\"\nassert solution
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"XXXXXXXXX..\") == \"YES\"\nassert solution(\"XOOOXOXOXOOO.\") == \"NO\"\nassert solution(\".........\") == \"YES\"\nassert solution(\"X....OOO.O.\") == \"NO\"\nassert solution(\"X.O.OOOXOXOX.\") == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('XXOXX.....') == 'NO'\nassert solution('XX.XX.....') == 'YES'\nassert solution('....O.....') == 'YES'\nassert solution('..........') == 'YES'\nassert solution('..........') == 'YES'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\nX....\n...X.\n....X.\n.....X.\n...X..\nX.X.X.\n....X.\nX...X.\nX.X.X.\n''') == 'YES'\nassert solution('''\nX....\n...X.\n....X.\n.....X.\n...X..\nX.X.X.\n....X.\nX...X.\nX.X.X.\n''') == 'NO'\nassert solution('''\n.X..\nX...\nX...\n...X\n.X..\n''') == 'NO'\nassert solution('''\n.X..\n...X\n...X\n...X\n.X..\n''') == 'NO'\nassert solution('''\n.X.\nX.X\nX.X\nX.X\n''') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"NO\"\nassert solution(\"XXXXOOOO.\\nO.XOXOXOXO\\nX.X.OXOXO.\\nX.X.OXOXO.\\nX.X.OXOXO.\\nX.X.OXOXO.\\nX.X.OXOXO.\\nX.X.OXOXO.\\nX.X.OXOXO.\\n\") == \"YES\"\nassert solution(\"XXXXOO...\\n..X.O...\\n...X.O..\\nX.X.X...\\nX.X.X.X.\\nX.X.X.X.\\nX.X.X.X.\\nX.X.X.X.\\nX.X.X.X.\") == \"YES\"\nassert solution(\"XXXX.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\") == \"NO\"\nassert solution(\"XXXX.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\\n.X.X.X.\") == \"YES\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\nXXX.\n.OOOO\n........\n........\n........\n........\n........\n........\n........\n........\n''') == 'YES'\nassert solution('''\nXXXX.\n.XOOOO\n........\n........\n........\n........\n........\n........\n........\n........\n''') == 'NO'\nassert solution('''\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\n''') == 'YES'\nassert solution('''\nXOOXX\nOOOXX\nXOXOX\nXXOXO\nXOXOX\nXOXOX\nXOXOX\nXOXOX\nXOXOX\nXOXOX\nXOXOX\n''') == 'NO'\nassert solution('''\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\nX.X.X\n''') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\nX.X.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\nassert solution(\n'''\nXXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\nassert solution(\n'''\n.OX...XX.\nOO.OX....\nOX...XX..\nXX..X..XX\nX...OOOXX\n.O.XOXX.X\n..X.X.OOX\n.X.O.X..O\nX.OOX.X..\n''') == 'YES'\nassert solution(\n'''\n.OX...XX.\nOO.OX....\nOX...XX..\nXX..X..XX\nX...OOOXX\n.O.XOXX.X\n..X.X.OOX\n.X.O.X..O\nX.OOX.X..\n''') == 'NO'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"2 5\") == \"-1\"\nassert solution(\"3 7\") == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"2 5\") == \"-1\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\nassert solution('2 3') == '1 0'\nassert solution('3 2') == '1 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"1 1\\n\")) == \"1 0\\n0 0\"\nassert solution(input(\"2 1\\n\")) == \"1 0\\n0 0\"\nassert solution(input(\"3 2\\n\")) == \"1 0 0\\n0 1 0\\n0 0 0\"\nassert solution(input(\"2 5\\n\")) == \"-1\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"1 0 0\"\nassert solution(\"2 5\") == \"-1\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1 0 0 0 0\\n0 0 0 0 1 0\\n0 0 0 1 0 0\\n0 0 0 1 0 0'\n\"\"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1\n''') == '1 0'\nassert solution('''3 2\n''') == '1 0 0'\nassert solution('''2 5\n''') == '-1'\nassert solution('''5 3\n''') == '1 0 0 0'\nassert solution('''4 2\n''') == '1 0 0 0'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1.1, 3.4, 2.5) == 'x^y^z'\nassert solution(2.0, 2.0, 2.0) == 'x^y^z'\nassert solution(1.9, 1.8, 1.7) == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n\n\n\n------Google Hashcode-----\nInput:\n\n3 5 7\n\nOutput:\n\nx^y^z\n\nInput:\n\n2 3 5\n\nOutput:\n\n(x^y)^z\n\nInput:\n\n1.1 3.4 2.5\n\nOutput:\n\nz^y^x\n\n\"\"\""
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1.1 3.4 2.5''') == 'z^y^x'\nassert solution('''2.0 2.0 2.0''') == '(x^y)^z'\nassert solution('''1.9 1.8 1.7''') == '(x^y)^z'\n'''\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"x^y^z\"\nassert solution(\"2.0 2.0 2.0\") == \"(x^y)^z\"\nassert solution(\"1.9 1.8 1.7\") == \"x^y^z\""
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'z^y^x'\nassert solution('2.0 2.0 2.0') == '(x^y)^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\nassert solution('1.0 2.0 3.0') == 'x^y^z'\nassert solution('1.0 2.0 3.0') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[0] + stdin[2] + stdin[4]\n\nassert solution(\"1.1 3.4 2.5\") == \"(1.1)^(3.4)^(2.5)\"\nassert solution(\"2.0 2.0 2.0\") == \"((2.0)^(2.0))^(2.0)\"\nassert solution(\"1.9 1.8 1.7\") == \"((1.9)^(1.8))^(1.7)\"\n\nassert solution(\"1.1 3.4 2.5\") == \"(1.1)^(3.4)^(2.5)\"\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1.1 3.4 2.5''') == 'z^y^x'\nassert solution('''2.0 2.0 2.0''') == 'x^y^z'\nassert solution('''1.9 1.8 1.7''') == 'x^y^z'\nassert solution('''0.1 1.1 1.1''') == '(x^y)^z'\nassert solution('''1.0 1.0 1.0''') == 'z^y^x'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n\n\"\"\"\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == '(x^y)^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n'''\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\nassert solution('abcdefg') == 7\n\n\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcdefgh') == 8\nassert solution('abc') == 5\nassert solution('abcd') == 7\nassert solution('abca') == 5\nassert solution('abcabca') == 7\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"abcdefgh\") == 8\nassert solution(\"aa\") == 1\nassert solution(\"a\") == 0\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcdefgh\") == 8\nassert solution(\"abcabca\") == 5\nassert solution(\"aba\") == 2"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcdefgh') == 8\nassert solution('abcdef') == 5\n\n\n\n\"\"\""
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcdefgh') == 8\nassert solution('abcdef') == 7\nassert solution('abcd') == 4\nassert solution('abc') == 3\nassert solution('abc') == 3\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"abcdefgh\") == 8\n\n\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcabca') == '5'\nassert solution('abcdefgh') == '8'\nassert solution('abcdefgh') == '8'\nassert solution('abcdefgh') == '8'\nassert solution('abcdefgh') == '8'\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n\"\"\") == \"\"\"4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n\"\"\"\nassert solution(\"\"\"2\n1 0\n2 1\n\"\"\") == \"\"\"3\nmove 1 3\nmove 2 1\nmove 3 2\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n'\n\nassert solution('''2\n1 0\n2 1\n''') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n'\n\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 1114 3\\n'\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\nassert solution('''2\n1 0\n2 1''') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2'\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3'\nassert solution('''6\n1 0\n11 1\n111 0\n1111 1\n11111 0''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3'\nassert solution('''8\n1 0\n11 1\n111 0\n1111 1\n11111 0\n111111 1\n111111 0\n1111111 1\n11111111 0''') == '7\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\nmove 11111 5\\nmove 11111 4'\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\nassert solution('''2\n1 0\n2 1\n''') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2'\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3'\nassert solution('''6\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '5\\nmove 1 6\\nmove 1 5\\nmove 1 3\\nmove 1 2\\nmove 1 1'\nassert solution('''10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\"\nassert solution(\"2\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\"\nassert solution(\"5\") == \"4\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 1114 3\"\nassert solution(\"2\") == \"3\\nmove 1 3\\nmove 2 1\\nmove 3 2\"\nassert solution(\"5\") == \"4\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 1114 3\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '''4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n'''\n\nassert solution('''2\n1 0\n2 1\n''') == '''3\nmove 1 3\nmove 2 1\nmove 3 2\n'''\n\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '''5\nmove 1 5\nmove 11 1\nmove 1111 2\nmove 111 4\nmove 11111 3\n'''\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n\"\"\") == \"\"\"4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n\"\"\"\n\nassert solution(\"\"\"2\n1 0\n2 1\n\"\"\") == \"\"\"3\nmove 1 3\nmove 2 1\nmove 3 2\n\"\"\"\n\nassert solution(\"\"\"5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n\"\"\") == \"\"\"5\nmove 1 5\nmove 11 1\nmove 1111 2\nmove 111 4\nmove 11111 3\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '''4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n'''\nassert solution(\n'''2\n1 0\n2 1\n''') == '''3\nmove 1 3\nmove 2 1\nmove 3 2\n'''\nassert solution(\n'''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '''5\nmove 1 5\nmove 11 1\nmove 1111 2\nmove 111 4\nmove 11111 3\n'''\nassert solution(\n'''1\n0 0\n''') == '''1\nmove 0 1\n'''\nassert solution(\n'''5\n0 0\n1 1\n2 2\n3 3\n4 4\n''') == '''5\nmove 1 5\nmove 2 2\nmove 3 3\nmove 4 4\n'''\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0') == '3'\nassert solution('2 1') == '4'\nassert solution('2extra 0') == '3'\nassert solution('3 1') == '5'\nassert solution('99 0') == '7'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('000000') == 0\nassert solution('123456') == 2\nassert solution('111000') == 1\nassert solution('111111') == 0\nassert solution('912345') == 1\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('222222') == '0'\nassert solution('330330') == '2'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"000000\") == '0'\nassert solution(\"123456\") == '2'\nassert solution(\"111000\") == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('241310') == '1'\nassert solution('123321') == '2'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('012345') == '4'\nassert solution('99999') == '6'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('449958') == '1'\nassert solution('100000') == '5'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('11110') == '1'\nassert solution('11101') == '1'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('123400') == '2'\nassert solution('123456') == '2'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nprint(\"All set? Click 'Check' to review your code and earn rewards!\")\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"000000\") == 0\nassert solution(\"123456\") == 2\nassert solution(\"111000\") == 1\nassert solution(\"111111\") == 0\nassert solution(\"12341234\") == 2\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '3'\nassert solution('1 2') == '1'\nassert solution('2 4') == '3'\nassert solution('4 4') == '2'\nassert solution('10 8') == '7'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\n\n-----Alternative solutions-----\n* https://www.codewars.com/kata/55d2b1413a5c0e0a090008a1\n\n```javascript\nconst gcd = Math.gcd\n\nfunction solution(stdin) {\n  var [m, x] = parseInts(stdin);\n  return gcd(x, m) == 1? x - x % m : x - x % m + m\n}"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\nassert solution('5 10') == '5'\nassert solution('10 9') == '5'\nassert solution('11 7') == '7'\n\"\"\""
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"4 7\") == \"2\"\nassert solution(\"8 6\") == \"2\"\nassert solution(\"5 6\") == \"3\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\nassert solution('''0 1''') == '0'\nassert solution('''8 3''') == '3'\nassert solution('''20 12''') == '0'\n'''\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"5 1\") == \"2\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 3\") == \"2\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\n\n-----\n\n\"\"\"\n\nimport math\nm, x = list(map(int, stdin.split()))\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\nassert solution('''2 4''') == '1 3'\nassert solution('''1000000 1000000''') == '123456789 1010101'\nprint('Test passed')\n\n'''\n\nfrom fractions import gcd"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\nassert solution('''4 5''') == '23 185'\n'''\n>>> solution('''3 3''')\n'1 8'\n>>> solution('''1 1''')\n'1 1'\n>>> solution('''4 5''')\n'23 185'\n>>> solution('''100 10''')\n'23 173'\n'''\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n\n\n\"\"\"\n\nimport sys\nfrom math import gcd\nfrom fractions import Fraction"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\nassert solution('2 5') == '2 4'\nassert solution('1000 1000') == '2045 93'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\nassert solution(\"1 10\") == \"1 1\"\nassert solution(\"1 100\") == \"1 1\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\nassert solution('1 5') == '23 14'\nassert solution('2 4') == '1 1'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 2\n\"\"\") == \"1 8\"\n\nassert solution(\n\"\"\"\n1 3\n\"\"\") == \"1 1\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\nassert solution(\"15 4\") == \"1397 1632\"\nassert solution(\"15 5\") == \"1397 1632\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 1\" or solution(stdin) == \"1 8\" or solution(stdin) == \"23 128\"\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n''') == 'YES'\nassert solution('''2\n15000 South\n4000 East\n''') == 'NO'\nassert solution('''5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n''') == 'NO'\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North\n''') == 'YES'"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 South') == 'NO'\nassert solution('1000000 West') == 'NO'\nassert solution('20000 North') == 'NO'\nassert solution('1000 North') == 'NO'\nassert solution('1000 South') == 'YES'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n''') == \"YES\"\n\nassert solution('''2\n15000 South\n4000 East\n''') == \"NO\"\n\nassert solution('''5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 South\") == \"NO\"\nassert solution(\"10 East\") == \"NO\"\nassert solution(\"20000 South\") == \"YES\"\nassert solution(\"20000 North\") == \"YES\"\nassert solution(\"1000 North\") == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123') == 'YES'\nassert solution('1000000') == 'YES'\nassert solution('1000000') == 'NO'\nassert solution('1234') == 'NO'\nassert solution('1234') == 'NO'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North''') == 'YES'\nassert solution('''2\n15000 South\n4000 East''') == 'NO'\nassert solution('''5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North''') == 'NO'\nassert solution('''3\n20000 South\n10 East\n20000 North\n''') == 'NO'\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North''') == 'YES'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12') == 'NO'\nassert solution('10000') == 'NO'\nassert solution('1234') == 'NO'\nassert solution('1234 5678') == 'NO'\nassert solution('1234 5678 1') == 'YES'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('25000 South,25000 North,15000 South,15000 North') == 'YES'\nassert solution('50 South,50 North,15000 South,15000 North') == 'NO'\nassert solution('1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,1000 North,1000 South,"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000 South\\n1000 North') == 'NO'\nassert solution('1000 North\\n1000 South') == 'YES'\nassert solution('10000 South\\n10000 North') == 'NO'\nassert solution('10000 North\\n10000 South') == 'YES'\nassert solution('100000 South\\n100000 North') == 'NO'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\nassert solution('2 0 3 3 5 21 0') == '3'\nassert solution('2 4 3 0 6 17 0') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\nassert solution('1 4 6 5 8 2') == '1'\nassert solution('1 0 0 0 1 0') == '0'\nassert solution('1 0 0 1 0 1') == '1'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\nassert solution('2 0 3 3 2 17') == '-1'\nassert solution('2 4 3 0 2 17') == '-1'\nassert solution('2 0 3 4 0 17') == '-1'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('8 10 4') == '3'\nassert solution('8 10 6') == '5'\nassert solution('8 10 10') == '5'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('10 8 10') == '3'\nassert solution('10 10 10') == '3'\nassert solution('9 9 9') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\nassert solution(\"8 8 4\") == \"4\"\nassert solution(\"8 8 4\") == \"4\"\nassert solution(\"5 7 2\") == \"1\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('10 8 1') == '2'\nassert solution('1 2 1') == '1'\nassert solution('1 1 2') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('1 2 3') == '0'\nassert solution('1 1 1') == '1'\nassert solution('2 2 3') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\n\"\"\""
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\nassert solution(\"12 1 2\") == \"2\"\nassert solution(\"5 3 1\") == \"2\"\nassert solution(\"5 1 1\") == \"1\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 3\\n') == '1'\nassert solution('4 7 10\\n') == '3'\nassert solution('1 10 100\\n') == '0'\nassert solution('100 100 1000\\n') == '0'"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7 10') == '3'\nassert solution('5 2 3') == '1'\nassert solution('7 2 1') == '5'\nassert solution('1 1 1') == '1'\nassert solution('4 6 2') == '1'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG\n''') == 'NO'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'NO'\nassert solution('''2 3\nGBGB\nGBGB\n''') == 'YES'\nassert solution('''2 4\nGGGGB\nGGGGB\n''') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 5') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('6 7') == 'NO'\nassert solution('4 4') == 'NO'\nassert solution('RRRR') == 'YES'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG''') == 'YES'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG\\n') == 'YES'\nassert solution('4 3\\nBRG\\nBRG\\nBRG\\nBRG\\n') == 'NO'\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n') == 'NO'\nassert solution('5 4\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nBBBB\\nBBBB\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\n\nassert solution('''\n4 3\nBRG\nBRG\nBRG\nBRG\n''') == 'YES'\n\nassert solution('''\n6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'NO'\n\nassert solution('''\n4 4\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'NO'\n\n\"\"\""
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''3 4\nRRRR\nRRRR\nBBBB\nGGGG''') == 'YES'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG''') == 'YES'\nassert solution('''3 4\nRRRGG\nRRRGG\nRRRGG\nRRRBBB\nRRRBBB\nRRRBBB''') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RRRR\\nRRRR\\nBBBB\\nBBBB\\nGGGG\\nGGGG\\n') == 'YES'\nassert solution('BRG\\nBRG\\nBRG\\nBRG\\n') == 'YES'\nassert solution('RRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\\n') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('RRR') == 'YES'\nassert solution('RRRR') == 'NO'\nassert solution('RRRRR') == 'NO'\nassert solution('RRRRRR') == 'YES'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RRRGGGG') == 'YES'\nassert solution('RRRGGGG') == 'YES'\nassert solution('RRRBBBB') == 'NO'\nassert solution('RRRR') == 'NO'\nassert solution('RRRRRRRRRR') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'NO'\nassert solution('''3 3\nB\nB\nG\n''') == 'NO'\nassert solution('''3 3\nRB\nRB\nRB\n''') == 'NO'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == \"-2 0\"\nassert solution('7') == \"3 2\"\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('1') == '0 0'\nassert solution('-1') == '0 0'\nassert solution('2') == '1 0'\nassert solution('-2') == '0 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == [-1, 0]\nassert solution('3') == [0, 0]\nassert solution('5') == [1, -1]\nassert solution('6') == [-1, 1]\nassert solution('9') == [0, -2]\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == (-2, 0)\nassert solution('1') == (-1, 0)\nassert solution('2') == (0, -1)\nassert solution('3') == (1, 0)\nassert solution('4') == (0, 1)\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(3) == \"-2 0\"\nassert solution(7) == \"3 2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '-2 0'\nassert solution('''7''') == '3 2'\nassert solution('''10''') == '5 4'\nassert solution('''20''') == '10 5'\nassert solution('''30''') == '15 6'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '0 0'\nassert solution('''7''') == '3 2'\nassert solution('''3''') == '-2 0'\nassert solution('''4''') == '-1 0'\nassert solution('''5''') == '0 0'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2\\n') == 'No'\nassert solution('2 4 3\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'Yes'\nassert solution('2 3 1\\n') == 'No'\nassert solution('1 1 3\\n') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 6 15''') == 'No'\nassert solution('''3 2 7''') == 'Yes'\nassert solution('''6 11 6''') == 'Yes'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 6') == 'Yes'\nassert solution('5 3 17') == 'No'\nassert solution('6 11 6') == 'Yes'\n\n\n\"\"\"\n\n\"\"\"\n[Sample 1] 4 6 15\n\n- 1 bullet from Ebony gun, deals 4 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 6 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the ninth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the tenth bullet hits the shield\n\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the ninth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the tenth bullet hits the shield\n\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the ninth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the tenth bullet hits the shield\n\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the ninth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the tenth bullet hits the shield\n\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the ninth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the tenth bullet hits the shield\n\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 1 bullet from Ivory gun, deals 2 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the third bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fourth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the fifth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the sixth bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the seventh bullet hits the shield\n- 1 bullet from Ebony gun, deals 1 units of damage\n- 2 bullets from both pistols deals 1 units of damage\n- the eighth bullet hits the shield\n- 1 bullet from Ebony"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'No'\nassert solution('6 11 6') == 'Yes'\nassert solution('2 1 1') == 'No'\nassert solution('100 10 100') == 'No'\nassert solution('1 100 100') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 2 2\") == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('0 2 0') == 'No'\nassert solution('1 2 0') == 'Yes'\nassert solution('1 2 3') == 'Yes'\nassert solution('4 2 7') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 6 15''') == \"No\"\nassert solution('''3 2 7''') == \"Yes\"\nassert solution('''6 11 6''') == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\nassert solution('2 1 7') == 'No'\nassert solution('5 1 7') == 'No'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'YES'\nassert solution('2 4\\n1 3\\n1 2\\n') == 'NO'\nassert solution('2 4\\n0 1 3\\n0 1 2\\n') == 'NO'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 8\") == \"YES\"\nassert solution(\"4 9\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7''') == 'YES'\nassert solution('''3 9\n2 3 5 8\n0 1 3 6\n\nassert solution('''2 4\n1 3\n1 2\n\nassert solution('''5 10\n0 1 3 6 9 10\n7 8 9 10 11 12\n\nassert solution('''5 10\n3 1 4 5 8 9 10\n6 7 9 10 11 12"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('3 8\\n2 3 5 8\\n0 1 3 6\\n') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'NO'\nassert solution('3 4\\n0 1 2\\n2 1 3\\n') == 'YES'\nassert solution('4 4\\n0 1 2 3\\n2 1 3 4\\n') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 9') == 'NO'\nassert solution('2 3 5 8') == 'YES'\nassert solution('2 3 5 8\\n0 1 3 6') == 'YES'\nassert solution('4 9\\n1 3 4 2') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'YES'\nassert solution('2 4\\n1 3\\n1 2\\n') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 9') == 'YES'\nassert solution('2 4') == 'NO'\nassert solution('1 3') == 'NO'\nassert solution('1 2') == 'YES'\n\n\"\"\"\n\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nn, L = map(int, input().split())\nKefa = list(map(int, input().split()))\nSasha = list(map(int, input().split()))\n\nA = Kefa[0]\nB = Sasha[0]\n\nfor _ in range(n):\n    A = min(A, Kefa[A])\n    B = min(B, Sasha[B])"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1') == 'NO'\nassert solution('0 0') == 'YES'\nassert solution('1 0') == 'YES'\nassert solution('0 0 1') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3\\n1 2\") == \"YES\"\nassert solution(\"3 5\\n0 1 3 4\\n2 4 6\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\") == \"YES\"\nassert solution(\"1 1\\n0\") == \"YES\"\nassert solution(\"2 3\\n1 2\\n2 3\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('3 9\\n2 3 5 8\\n0 1 3 6\\n') == 'NO'\nassert solution('2 4\\n1 3\\n1 2\\n') == 'YES'\nassert solution('2 4\\n1 3\\n1 2\\n') == 'NO'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'YES'\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"3\"\nassert solution(\"wuffuw\") == \"5\"\nassert solution(\"qqqqqqqq\") == \"0\"\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == 'qqqqqqqq'\n\n\n\n\n\"\"\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"kek\") == \"kek\"\nassert solution(\"abb\") == \"abb\"\nassert solution(\"iq\") == \"iq\"\nassert solution(\"papicipap\") == \"papicipap\"\nassert solution(\"mew\") == \"mew\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('kek') == 'kek'\nassert solution('abacaba') == 'abacaba'\nassert solution('r') == 'r'\nassert solution('papicipap') == 'papicipap'\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == 'qqqqqqqq'\nassert solution('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff') == 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == '0'\nassert solution('qqqqqqq') == '0'\n\n\n-----Alternate solutions (2 points each)-----"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''mew''') == '3'\nassert solution('''wuffuw''') == '5'\nassert solution('''qqqqqqqq''') == '0'\nassert solution('''abb''') == '3'\nassert solution('''iq''') == '0'\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == None\nassert solution('a') == None\nassert solution('ab') == None\nassert solution('abcd') == None\nassert solution('abcde') == None\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"wuffuw\"\nassert solution(\"qqqqqqqq\") == \"\"\nassert solution(\"qqqqqqq\") == \"\"\nassert solution(\"w\") == \"\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"wuffuw\") == \"mew\"\nassert solution(\"qweqweqwe\") == \"qweqweqwe\"\nassert solution(\"qqqqqqqq\") == \"0\""
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699') =='maybe'\nassert solution('10\\n9234 9234\\n4632 46322\\n52778 52778\\n4535 4535\\n4897 4897\\n1417 1417\\n1185 1117\\n1560 1560\\n1602 1602\\n4648 4648\\n22993 22993') =='maybe'\nassert solution('10\\n9234 9234\\n4632 46322\\n52778 52778\\n4535 4535\\n4897 4897\\n1417 1417\\n1185 1117\\n1560 1560\\n1602 1602\\n4648 4648\\n22993 22993') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884''') == 'rated'\nassert solution('''4\n1500 1500\n1300 1300\n1200 1200\n1400 1400''') == 'unrated'\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699''') =='maybe'"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'rated'\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == 'unrated'\nassert solution('''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') =='maybe'\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') =='maybe'\nassert solution('''\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'unrated'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\n\nfor i in range(n):\n    a, b = map(int, stdin.readline().split())\n    if a < b:\n        stdout.write(\"rated\\n\")\n    elif a == b:\n        stdout.write(\"unrated\\n\")\n    else:\n        stdout.write(\"maybe\\n\")"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\n4060 4060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') == 'rated'\nassert solution('1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == 'unrated'\nassert solution('2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') =='maybe'\nassert solution('1\\n4060 4060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') =='maybe'\nassert solution('1\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == \"rated\"\nassert solution(\n'''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') == \"maybe\"\nassert solution(\n'''\n6\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == \"unrated\"\nassert solution(\n'''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == \"maybe\"\nassert solution(\n'''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') == \"unrated\"\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n    6\n    3060 3060\n    2194 2194\n    2876 2903\n    2624 2624\n    3007 2991\n    2884 2884\n''') == 'rated'\n\nassert solution(\n'''\n    4\n    1500 1500\n    1300 1300\n    1200 1200\n    1400 1400\n''') == 'unrated'\n\nassert solution(\n'''\n    5\n    3123 3123\n    2777 2777\n    2246 2246\n    2246 2246\n    1699 1699\n''') =='maybe'\n'''\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884''') == 'rated'\nassert solution('''4\n1500 1500\n1300 1300\n1200 1200\n1400 1400''') == 'unrated'\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699''') =='maybe'\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1600 1600''') =='maybe'\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1700 1700''') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699') == 'rated'\nassert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') == 'unrated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400') =='maybe'\nassert solution('3\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246') =='maybe'\nassert solution('2\\n2585 2585') =='maybe'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"9\\n2 1 0 3 0 0 3 2 4\\n\") == \"2 1 0 1 0 0 1 2 3\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"0 1 2 3 4\\n\"\nassert solution(\"7\\n5 6 0 1 -2 3 4\\n\") == \"2 1 0 1 2 3 4\\n\"\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '0 1'\nassert solution('2\\n1') == '0 1'\nassert solution('3\\n2\\n1') == '2 1 0'\nassert solution('4\\n2\\n1 2 3 4') == '2 1 0 1 2 3 4'\nassert solution('7\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 3 0 0 3 2 4\") == \"2 1 0 1 0 0 1 2 3\"\nassert solution(\"5\") == \"0 1 2 3 4\"\nassert solution(\"7\") == \"0 1 2 3 4\"\nassert solution(\"0 1 2 3 4\") == \"0 1 2 3 4\"\nassert solution(\"0 1 2 3 4 5 6\") == \"2 1 0 1 0 1 2 3 4\"\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 0 3 0 0 3 2 4\\n') == '2 1 0 1 0 0 1 2 3'\nassert solution('5\\n0 1 2 3 4\\n') == '0 1 2 3 4'\nassert solution('7\\n5 6 0 1 -2 3 4\\n') == '2 1 0 1 2 3 4'"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1 0 3 0 0 3 2 4\\n9\\n2 1 0 3 0 0 3 2 4\\n') == '2 1 0 1 0 0 1 2 3 4\\n'\nassert solution('1 2 3 4\\n0\\n1 2 3 4\\n') == '0 1 2 3 4\\n'\nassert solution('1 2 3 4\\n1\\n1 2 3 4\\n') == '0 1 2 3 4\\n'\nassert solution('7\\n5 6 0 1 -2 3 4\\n') == '2 1 0 1 2 3 4\\n'\nassert solution('7\\n5 6 0 1 -2 3 4\\n1\\n1 2 3 4\\n') == '2 1 0 1 2 3 4\\n'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n2 1 0 3 0 0 3 2 4''') == '2 1 0 1 0 0 1 2 3'\nassert solution('''5\n0 1 2 3 4''') == '0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"9\\n2 1 0 3 0 0 3 2 4\") == \"2 1 0 1 0 0 1 2 3\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"0 1 2 3 4\\n\"\nassert solution(\"7\\n5 6 0 1 -2 3 4\") == \"2 1 0 1 2 3 4\\n\"\nassert solution(\"7\\n5 6 0 1 -2 3 4\") == \"2 1 0 1 2 3 4\\n\""
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 1 0 3 0 0 3 2 4''') == '2 1 0 1 0 0 1 2 3'\n'''assert solution('''5''') == '0 1 2 3 4'\nassert solution('''7''') == '0 1 2 3 4 5 6 7'\nassert solution('''2''') == '0 1'\n'''assert solution('''0 1 2 3 4''') == '0 1 2 3 4'\n'''"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''9\n2 1 0 3 0 0 3 2 4'''\n    ) == '2 1 0 1 0 0 1 2 3'\n\nassert solution(\n'''5\n0 1 2 3 4'''\n    ) == '0 1 2 3 4'\n\nassert solution(\n'''7\n5 6 0 1 -2 3 4'''\n    ) == '2 1 0 1 2 3 4'\n\nassert solution(\n'''7\n-2 3 -4 -5 1 2 3'''\n    ) == '3 4 2 1 0 -1 -3'\n\nassert solution(\n'''2\n0 1'''\n    ) == '0 1'"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom __future__ import annotations\n\nfrom itertools import combinations\nfrom typing import List, Tuple\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"0\"\"\"\n) == \"\"\"3\"\"\"\n\nassert solution(\n\"\"\"1\"\"\"\n) == \"\"\"0\"\"\"\n\nassert solution(\n\"\"\"2\"\"\"\n) == \"\"\"0\"\"\"\n\nassert solution(\n\"\"\"4\"\"\"\n) == \"\"\"962\"\"\"\n\nassert solution(\n\"\"\"5\"\"\"\n) == \"\"\"0\"\"\""
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '3'\nassert solution('''4''') == '2'\nassert solution('''20''') == '962'\n'''\n\nfrom sys import stdin\nfrom functools import lru_cache\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"10\"\nassert solution(\"01\") == \"0110\"\nassert solution(\"10\") == \"1010\"\nassert solution(\"1010\") == \"0101\"\nassert solution(\"10101010101010\") == \"962\"\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"3\"\nassert solution(\"1010\") == \"2\"\nassert solution(\"10101010101010\") == \"962\"\nassert solution(\"01101010101010\") == \"2\"\nassert solution(\"10101010101010\") == \"962\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"01010\") == 3\nassert solution(\"10101010101010\") == 2\nassert solution
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0101') == 2\nassert solution('10101010101010') == 9622\nassert solution('1') == 1\nassert solution('01') == 1\nassert solution('11111') == 2\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"000111\") == \"3\"\nassert solution(\"1010\") == \"2\"\nassert solution(\"10101010101010\") == \"962\"\nassert solution(\"011011\") == \"2\"\nassert solution(\"11111111111111\") == \"3\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == 0\nassert solution('1') == 1\nassert solution('1010') == 2\nassert solution('10101010101010') == 96\nassert solution('100010001') == 2\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1\n''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6\n''') == '6 5'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\n\nassert solution(\n'''-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\n\nassert solution(\n'''-1 0\n0 -1\n1 0\n1 1\n-1 -2\n-1 -3''') == '4 5'\n\nassert solution(\n'''5\n-1 0\n0 -1\n1 0\n1 1\n-1 -2\n-1 -3\n1 2\n1 -2\n''') == '2 4'\n\n\n\nassert solution(\n'''5\n-1 0\n0 -1\n1 0\n1 1\n-1 -2\n-1 -3\n1 2\n1 -2\n''') == '2 4'"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"6 5\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\") == \"6 5\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-1 0\\n0 -1\") == \"6 5\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-1 0\\n0 -1\\n0 -1\") == \"6 5\"\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''2\n-1 0\n-1 0''') == '1 1'\nassert solution('''1\n0 0''') == '1 1'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '6 5'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '6 5'\nassert solution('''1 1\n-1 1\n0 1\n1 1''') == '1 1'"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1 0\\n0 -1\\n1 0\\n1 1') == '3 4'\nassert solution('-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6') == '6 5'"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n-1 0\\n0 -1\\n1 0\\n1 1\\n'\n    '1 2'\n) == '3 4'\n\nassert solution(\n    '6\\n-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6\\n'\n    '4 -5\\n-4 -6\\n'\n    '4 -5'\n) == '6 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''-1 0\n0 -1\n1 0\n1 1\n-1 -1\n0 0''') == '4 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''10\n-1 0\n0 -1\n1 0\n1 1\n2 -1\n-1 2\n-2 1\n1 2\n0 1''') == '1 2'\nassert solution('''5\n-1 0\n0 -1\n1 0\n1 1\n2 -1''') == '3 4'\nassert solution('''15\n-1 0\n0 -1\n1 0\n1 1\n2 -1\n-1 2\n-2 1\n1 2\n0 1\n-1 -1\n0 0\n0 1\n1 1\n1 2\n-1 1\n1 3\n0 1\n-1 0''') == '1 2'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\nassert solution(\"-1 0\\n0 -1\\n1 0\\n1 1\") == \"3 4\"\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.strip()\n'''\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\n\nprint('Test success!')\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 1 4 10''') == '14'\nassert solution('''5 2 1 4 5''') == '13'\nprint(solution('''5 2 1 4 5'''))\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\n'''\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"14\"\nassert solution(input()) == \"13\"\n\"\"\"\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\nassert solution('5 2 1 4 4') == '12'\nassert solution('5 2 1 4 5') == '13'\nassert solution('5 2 1 4 4') == '12'\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 1 4 10''') == '14'\nassert solution('''5 2 1 4 5''') == '13'\nassert solution('''1000000000 1000000000 10000 1000000 100000''') == '1000000000'\nassert solution('''5 10 2 10 50''') == '4'\nassert solution('''5 1 2 10 50''') == '5'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\nassert solution('1000000000 1000000000') == '1000000000'\nassert solution('1000000000000 1000') == '1000000000000'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3\\n') == '1 2 3\\n'\nassert solution('8 2\\n') == '2 6\\n'\nassert solution('5 3\\n') == '-1\\n'\n\nassert solution('4 5\\n') == '-1\\n'\nassert solution('1 1\\n') == '-1\\n'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3''') == '1 2 3'\nassert solution('''8 2''') == '2 6'\nassert solution('''5 3''') == '-1'\nassert solution('''8 4''') == '-1'\nassert solution('''5 2''') == '-1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3''') == '''1 2 3'''\nassert solution('''8 2''') == '''2 6'''\nassert solution('''5 3''') == '''2 3'''\nassert solution('''5 4''') == '''-1'''\nassert solution('''7 5''') == '''1 2 4 7'''\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '3'\nassert solution('7 2') == '2 6'\nassert solution('15 3') == '3 4 6'\nassert solution('100 3') == '-1'\nassert solution('1000 5') == '-1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '1 2 3'\nassert solution('3 2') == '-1'\nassert solution('10 5') == '5 6 7 8 9 10'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8') == '1 2 3 4 5 6'\nassert solution('1 2 3 4 5 6 7 8') == '2 6'\nassert solution('1 2 3 4 5 6 7 8') == '2 6'\nassert solution('1 2 3 4 5 6 7 8') == '2 6'\nassert solution('1 2 3 4 5 6 7 8') == '2 6'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3''') == '''1 2 3'''\nassert solution('''8 2''') == '''2 6'''\nassert solution('''5 3''') == '''2 6'''\nassert solution('''8 2''') == '''2 6'''\nassert solution('''3 2''') == '''-1'''\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('6 10') == '14'\nassert solution('11 14') == '31'\nassert solution('5 7') == '7'\nassert solution('21 21') == '88'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('21 21') == '88'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '3'\nassert solution('1 4') == '5'\nassert solution('1 5') == '5'\nassert solution('1 6') == '5'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('21 21') == '88'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5') == '5'\nassert solution('3 8') == '7'\nassert solution('5 7') == '88'\nassert solution('6 12') == '14'\nassert solution('11 14') == '31'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n') == 1\nassert solution('1 1\\n') == 1\nassert solution('2 3\\n') == 1\nassert solution('1 1\\n') == 0\nassert solution('1 2\\n') == 1\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('1 4') == '2'\nassert solution('1 5') == '1'\nassert solution('1 6') == '2'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 12''') == '14'\nassert solution('''11 14''') == '31'\nassert solution('''21 21''') == '88'\nassert solution('''1 5''') == '1'\nassert solution('''3 8''') == '5'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 12\\n') == '14'\nassert solution('11 14\\n') == '31'\nassert solution('21 21\\n') == '88'\nassert solution('5 7\\n') == '7'\nassert solution('3 8\\n') == '5'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6\n''') == '22'\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\n''') == '42'\nassert solution('''5 10\n-1 -2 -3 -4 -5\n''') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('2 -1') == '1'\nassert solution('3 -5') == '9'\nassert solution('-1 -5') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6\n''') == '22'\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\n''') == '42'\nassert solution('''5 10\n-1 -2 -3 -4 -5\n''') == '0'\nprint('Passed:'+ str(solution(stdin)))\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1\\n-2\\n1\\n1"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n2') == '6'\nassert solution('2\\n-1\\n2') == '0'\nassert solution('2\\n1\\n-2') == '1'\nassert solution('2\\n1\\n2') == '2'\nassert solution('2\\n-2\\n-1') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 -2') == '22'\nassert solution('12 -3') == '42'\nassert solution('5 10') == '0'\nassert solution('-1 -2 -3 -4 -5') == '0'\nassert solution('1 3 3 7 1 3 3 7 1 3 3 7') == '42'\n\n\n\"\"\"\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6\n''') == '22'\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\n''') == '42'\nassert solution('''5 10\n-1 -2 -3 -4 -5\n''') == '0'\n'''"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6''') == '22'\n\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\n''') == '42'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('10 100 1000') == '999'\nassert solution('1 100 1') == '1'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\nassert solution(\"3 9 9\") == \"9\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('3 2 4') == '4'\nassert solution('2 3 4') == '5'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n2') == '1'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('1 2 3') == '3'\n\n\n\"\"\"\nfrom __future__ import print_function\n\nimport sys\nimport numpy"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 2''') == '2'\nassert solution('''2 3 4''') == '3'\nassert solution('''1 10 5''') == '5'\nassert solution('''4 5 2''') == '3'"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '3'\nassert solution('2 3 1') == '1'\nassert solution('1 10 5') == '5'\nassert solution('3 7 2') == '2'\nassert solution('2 2 2') == '2'\n\n\"\"\"\n\"\"\"\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.split()]\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('4 2 6') == '6'\nassert solution('1 5 9') == '9'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('2 3 5') == '5'\nassert solution('2 3 5') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('\\n') == None\nassert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '7'\nassert solution('21') == '5'\nassert solution('42') == '3'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('32215') == '0'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(123456789101112131415161718192021222324252627282930313233343536) == '5'\nassert solution(123456789101112131415161718192021222324252627282930313233343536) == '5'\nassert solution(123456789101112131415161718192021222324252627282930313233343536) == '5'\nassert solution(123456789101112131415161718192021222324252627282930313233343536) == '5'\nassert solution(123456789101112131415161718192021222324252627282930313233343536) == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '0'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('21') == '5'\nassert solution('7') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('12345') == '5'\nassert solution('123456') == '6'\nassert solution('1234567') == '7'\nassert solution('12345678') == '8'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('-7') == '7'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7''') == '7'\nassert solution('''21''') == '5'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 5\\n4 4 5 4\\n') == '26'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\nassert solution('1 1 100\\n99 0\\n') == '100'\nassert solution('1 1 2\\n2 1 3\\n') == '2'\nassert solution('1 1 2\\n2 1 3\\n') == '2'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4 11\n4 2 5\n4 4 5 4''') == '26'\nassert solution('''2 2 50\n5 7\n4 2''') == '50'\nassert solution('''1 1 100\n3 3''') == '100'\nassert solution('''5 2 100\n2 3 2 2 2''') == '50'\nassert solution('''1 1 100\n1 1 100''') == '100'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n'''\n@test_algo\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 11') == '26'\nassert solution('2 2 50') == '50'\nassert solution('5 7') == '50'\nassert solution('5 1 4 4') == '20'\nassert solution('5 1 4 4 4') == '20'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 11''') == '26'\nassert solution('''2 2 50''') == '50'\nassert solution('''2 2 5''') == '26'\nassert solution('''2 1 5''') == '1'\nassert solution('''2 5 7''') == '1'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4\\n') == '26'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\nassert solution('1 7\\n5 6\\n5 3\\n5 7\\n') == '50'\nassert solution('2 1 2\\n4 2\\n5 6\\n3 7\\n') == '32'\nassert solution('2 2 2\\n1 7\\n5 6\\n5 3\\n5 7\\n') == '32'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4 11''') == '26'\nassert solution('''2 2 50''') == '50'\nassert solution('''5 7''') == '50'\nassert solution('''4 2 5 4''') == '26'\nassert solution('''4 4 5 4''') == '26'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '3'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '3'\nassert solution('''25''') == '20'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '3'\nassert solution('''25''') == '20'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '-1'\nassert solution('25') == '20'\nassert solution('25') == '20'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('25') == '20'\nassert solution('25') == '-1'"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"25\") == \"20\"\nassert solution(\"25\") == \"20\"\nassert solution(\"1\") == \"-1\"\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('25') == '20'\nassert solution('2') == '-1'\n\nassert solution('5') == '5'\nassert solution('15') == '10'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"3\"\nassert solution(\"25\\n\") == \"20\"\nassert solution(\"2\\n\") == \"-1\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('25') == '20'\nassert solution('2') == '-1'\nassert solution('1') == '1'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\nassert solution('''8\nabaccabca\n1 2 3 4 4 3 2 1\n''') == '17'\nassert solution('''5\nazazazaz\n1 1 1 1 1\n''') == '10'\nassert solution('''5\nazazazaz\n1 1 1 1 1\n''') == '6'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacabac') == 8\nassert solution('abaccaba') == 26\nassert solution('abacabca') == 17\nprint(\"tests passed\")\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacabac') == 8\nassert solution('abaccaba') == 26\nassert solution('abaccabca') == 17\nassert solution('abacabca') == 17\n\n\"\"\"\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''abaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abaccaba') == '17'\nassert solution('abaccabca') == '17'\nassert solution('abaccabca') == '26'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacabac') == 8\nassert solution('abaccaba') == 26\nassert solution('abaccaba') == 17"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\n\nassert solution('''8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\n\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\n\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\n\nassert solution('''8\nabacabca\n1 1 1 1 1 1 1 1\n''') == '26'"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abacabca') == '17'"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('2 7') == 'YES'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\"\nassert solution(\"100 1\") == \"NO\"\nassert solution(\"100 99\") == \"YES\"\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('5 17') == 'NO'\nassert solution('6 4') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('100 50') == 'NO'\nassert solution('1000 9') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 7''') == 'YES'\nassert solution('''100 99''') == 'YES'\nassert solution('''100 50''') == 'NO'\nassert solution('''100 1''') == 'NO'\nassert solution('''3 7''') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7\\n') == 'YES'\nassert solution('100 99\\n') == 'YES'\nassert solution('100 50\\n') == 'NO'\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'NO'\nassert solution('5 3') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('5 6') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2 2') == 'NO'\nassert solution('1 3 1') == 'YES'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''23 5''') == 'No'\nassert solution('''13 2''') == 'No'\nassert solution('''1 2''') == 'Yes'\nassert solution('''2 3''') == 'Yes'\nassert solution('''4 1''') == 'Yes'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes\\n1 1'\nassert solution('3 5') == 'Yes\\n3 3 2 1 0'\nassert solution('6 1') == 'No'\nassert solution('9 2') == 'Yes\\n2 2 1 0'\nassert solution('2 3') == 'Yes\\n1 1'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'No'\nassert solution('23 5') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes\\n-1 -1'\nassert solution('1 2') == 'Yes\\n-1 -1'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n') == 'No'\nassert solution('1 2\\n') == 'Yes\\n2 3 2 1 0'\nassert solution('13 2\\n') == 'No'\nassert solution('23 5\\n') == 'Yes\\n3 3 2 1 0'\nassert solution('2 2\\n') == 'No'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nimport sys\nfrom typing import List"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 2 1 0') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes\\n-1 -1'\nassert solution('2 2') == 'No'\nassert solution('2 2') == 'No'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"23 5\n\"\"\") == \"Yes\\n3 3 2 1 0\\n\"\n\nassert solution(\n\"\"\"13 2\n\"\"\") == \"No\\n\"\n\nassert solution(\n\"\"\"1 2\n\"\"\") == \"Yes\\n-1 -1\\n\"\n\nassert solution(\n\"\"\"2 4\n\"\"\") == \"Yes\\n1 2 3 4\\n\"\n\nassert solution(\n\"\"\"2 1\n\"\"\") == \"Yes\\n1 -1\\n\""
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n-----\n\"\"\""
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 2 1') == 'Yes\\n3 3 2 1'\nassert solution('6 4\\n3 2 1') == 'No'\nassert solution('7 4\\n3 2 1') == 'Yes\\n3 3 2 1'\nassert solution('2 2\\n2 1') == 'No'\nassert solution('10 10\\n10 9') == 'No'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\n\"\"\""
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\nassert solution('10 5') == '10'\nassert solution('6 7') == '5'\nassert solution('1000000 1') == '1'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n') == '4'\nassert solution('4 8\\n') == '6'\nassert solution('1 2\\n') == '1'\nassert solution('5 4\\n') == '5'"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\nassert solution('5 5') == '5'\nassert solution('5 1') == '1'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\n''') == '4'\nassert solution('''4 8\n''') == '6'\nassert solution('''3 1\n''') == '1'\nassert solution('''1 1\n''') == '2'\nassert solution('''2 1\n''') == '3'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5''') == '4'\nassert solution('''4 8''') == '6'\nassert solution('''5 10''') == '6'\nassert solution('''3 0''') == '0'\nassert solution('''3 1''') == '1'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\nassert solution('3 2') == '1'\nassert solution('4 1') == '2'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\nassert solution('2 7') == '7'\nassert solution('1 10') == '10'"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 3\n''') == '6'\n\nassert solution(\n'''4 8\n''') == '6'\n\nassert solution(\n'''7 4\n''') == '9'\n\nassert solution(\n'''4 2\n''') == '4'\n\nassert solution(\n'''7 1\n''') == '7'"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''2\n1 1\n0 0''') == '-1'\nassert solution('''3\n1 1\n1 1\n1 1''') == '-1'\nassert solution('''1\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1\n1 1\n1 1''') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n0 0\n1 1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n1\n1 1\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0 0\n1 1\n''') == '1'\nassert solution('''1\n1 1\n''') == '-1'\nassert solution('''4\n0 0\n-1 1\n2 1\n-1 -1\n''') == '4'\nassert solution('''2\n2 2\n1 1\n-1 -1\n''') == '4'\nassert solution('''2\n-1 -1\n-1 1\n''') == '4'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1 1\\n2 1\\n3 1\") == \"1\\n\"\nassert solution(\"0 0\\n1 1\\n2 1\\n3 1\\n4 1\") == \"-1\\n\"\nassert solution(\"0 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"-1\\n\"\nassert solution(\"0 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\") == \"-1\\n\"\nassert solution(\"0 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\") == \"-1\\n\"\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 1\n''') == '1'\nassert solution('''0 0\n1 1\n2 2\n0 0\n0 0\n''') == '-1'\nassert solution('''0 0\n-1 1\n1 1\n1 -1\n''') == '0'\nassert solution('''0 0\n1 1\n1 0\n1 0\n''') == '-1'\nassert solution('''1 1\n1 1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\nassert solution('''1\n1 2''') == '-1'\nassert solution('''2\n1 1\n1 2''') == '-1'\nassert solution('''1\n1 2\n1 3''') == '0'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n1 1\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n0 0\\n1 1') == '1'\nassert solution('3\\n1 1\\n0 0') == '0'\nassert solution('1\\n1 1') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"2\") == 1\nassert solution(\"1 1\") == -1\nassert solution(\"1 2 2 1\") == 1\nassert solution(\"3 3\") == 1\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n1 1''') == '1'\nassert solution('''1 1\n0 0''') == '-1'\nassert solution('''2\n0 0\n1 1''') == '-1'\nassert solution('''2\n0 0\n1 1\n0 1''') == '-1'\nassert solution('''2\n0 0\n1 1\n-1 1''') == '1'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n''') == '1'\n\nassert solution('''5\n3\n4\n''') == '6'\n\nassert solution('''20\n5\n6\n''') == '4'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''8\n1\n2\n'''\n    ) == '1'\n\nassert solution(\n'''5\n3\n4\n'''\n    ) == '6'\n\nassert solution(\n'''6\n4\n2\n'''\n    ) == '4'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n1\\n2\\n') == '1\\n'\nassert solution('5\\n3\\n4\\n') == '6\\n'\nassert solution('20\\n5\\n6\\n') == '4\\n'\n\n\n\n-----\n\nPetya has equal wooden bars of length n. He wants to make a frame for two equal doors. Each frame has two vertical (left and right) sides of length a and one top side of length b. A solid (i.e. continuous without breaks) piece of bar is needed for each side.\n\nDetermine a minimal number of wooden bars which are needed to make the frames for two doors. Petya can cut the wooden bars into any parts, but each side of each door should be a solid piece of a wooden bar (or a whole wooden bar).\n\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 1 000) \u2014 the length of each wooden bar.\n\nThe second line contains a single integer a (1 \u2264 a \u2264 n) \u2014 the length of the vertical (left and right) sides of a door frame.\n\nThe third line contains a single integer b (1 \u2264 b \u2264 n) \u2014 the length of the upper side of a door frame.\n\n\n-----Output-----\n\nPrint the minimal number of wooden bars with length n which are needed to make the frames for two doors.\n\n\n-----Examples-----\nInput\n8\n1\n2\n\nOutput\n1\n\nInput\n5\n3\n4\n\nOutput\n6\n\nInput\n20\n5\n6\n\nOutput\n4\n\nInput\n10\n5\n7\n\nOutput\n6\n\nInput\n20\n5\n5\n\nOutput\n7\n\n\n\n-----Note-----\n\nIn the first example one wooden bar is enough, since the total length of all six sides of the frames for two doors is 8.\n\nIn the second example 6 wooden bars is enough, because for each side of the frames the new wooden bar is needed.\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n1\n2\n''') == '1'\n\nassert solution('''5\n3\n4\n''') == '6'\n\nassert solution('''6\n4\n2\n''') == '4'\n\nassert solution('''20\n5\n6\n''') == '2'\n\nassert solution('''100\n300\n200\n''') == '2'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1\n2\n''') == '1'\n\nassert solution('''5\n3\n4\n''') == '6'\n\nassert solution('''6\n4\n2\n''') == '4'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1\n2\n''') == '1'\n\nassert solution('''5\n3\n4\n''') == '6'\n\nassert solution('''6\n4\n2\n''') == '4'\n'''\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n1\\n2') == '1'\nassert solution('5\\n3\\n4') == '6'\nassert solution('20\\n5\\n6') == '4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2') == '1\\n'\nassert solution('5\\n3\\n4') == '6\\n'\nassert solution('20\\n5\\n6') == '4\\n'\n\n\n-----\n\n-- Python 3.9 --"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n1\\n2') == '1'\nassert solution('5\\n3\\n4') == '6'\nassert solution('6\\n4\\n2') == '4'\nassert solution('20\\n5\\n6') == '2'\n\n'''"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 5 3 4 6\n01110\n''') == 'YES'\n\nassert solution('''6\n1 2 5 3 4 6\n01010\n''') == 'NO'\n'''\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nf = input()\n\nswaps = []\n\nfor i in range(n - 1):\n    if f[i] == '1':\n        swaps.append((i + 1, i))\n\nswaps = sorted(swaps, key=lambda x: (x[0], x[1]))\n\nj = 0\n\nfor i in range(n):\n    if a[i] == i + 1:\n        continue\n    while j < len(swaps) and swaps[j][1]!= i:\n        j += 1\n    if swaps[j][0]!= i + 1:\n        print('NO')\n        break\n    else:\n        a[i], a[swaps[j][1]] = a[swaps[j][1]], a[i]\n        j += 1\nelse:\n    print('YES')\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\n'''\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"01110\") == \"YES\"\nassert solution(\"01010\") == \"NO\"\nassert solution(\"1 2 5 3 4 6\") == \"NO\"\nassert solution(\"01010\") == \"NO\"\n\"\"\""
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n5\\n3\\n4\\n6') == 'YES'\nassert solution('1\\n2\\n5\\n3\\n4\\n6\\n0000') == 'NO'\nassert solution('1\\n2\\n5\\n3\\n4\\n6\\n00000') == 'NO'\nassert solution('1\\n2\\n5\\n3\\n4\\n6\\n00001') == 'NO'\nassert solution('1\\n2\\n5\\n3\\n4\\n6\\n00010') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n\n\n'''\nProblem 20\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n3\n\n----Output-----\n\n168\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n168 = 3 + 5 + 6 + 9 + 10 + 12 + 15 + 18\n\n'''\n\n\n'''\nProblem 21\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n7\n\n----Output-----\n\n105\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n105 = 3 + 5 + 6 + 9 + 10 + 12 + 15\n'''\n\n\n'''\nProblem 22\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n1\n\n----Output-----\n\n0\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n0\n'''\n\n\n'''\nProblem 23\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n101\n\n----Output-----\n\n55\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n55 = 3 + 5 + 6 + 9 + 10 + 12 + 15 + 18 + 21 + 24\n'''\n\n\n'''\nProblem 24\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n1000\n\n----Output-----\n\n4050\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n4050 = 3 + 5 + 6 + 9 + 10 + 12 + 15 + 18 + 21 + 24 + 27 + 30 + 33 + 36 + 39 + 42 + 45 + 48 + 51 + 54 + 57 + 60 + 63 + 66 + 69 + 72 + 75 + 78 + 81 + 84 + 87 + 90 + 93 + 96 + 99 + 102 + 105 + 108 + 111 + 114 + 117 + 120 + 123 + 126 + 129 + 132 + 135 + 138 + 141 + 144 + 147 + 150 + 153 + 156 + 159 + 162 + 165 + 168 + 171 + 174 + 177 + 180 + 183 + 186 + 189 + 192 + 195 + 198 + 201 + 204 + 207 + 210 + 213 + 216 + 219 + 222 + 225 + 228 + 231 + 234 + 237 + 240 + 243 + 246 + 249 + 252 + 255 + 258 + 261 + 264 + 267 + 270 + 273 + 276 + 279 + 282 + 285 + 288 + 291 + 294 + 297 + 300 + 303 + 306 + 309 + 312 + 315 + 318 + 321 + 324 + 327 + 330 + 333 + 336 + 339 + 342 + 345 + 348 + 351 + 354 + 357 + 360 + 363 + 366 + 369 + 372 + 375 + 378 + 381 + 384 + 387 + 390 + 393 + 396 + 399 + 402 + 405 + 408 + 411 + 414 + 417 + 420 + 423 + 426 + 429 + 432 + 435 + 438 + 441 + 444 + 447 + 450 + 453 + 456 + 459 + 462 + 465 + 468 + 471 + 474 + 477 + 480 + 483 + 486 + 489 + 492 + 495 + 498 + 501 + 504 + 507 + 510 + 513 + 516 + 519 + 522 + 525 + 528 + 531 + 534 + 537 + 540 + 543 + 546 + 549 + 552 + 555 + 558 + 561 + 564 + 567 + 570 + 573 + 576 + 579 + 582 + 585 + 588 + 591 + 594 + 597 + 600 + 603 + 606 + 609 + 612 + 615 + 618 + 621 + 624 + 627 + 630 + 633 + 636 + 639 + 642 + 645 + 648 + 651 + 654 + 657 + 660 + 663 + 666 + 669 + 672 + 675 + 678 + 681 + 684 + 687 + 690 + 693 + 696 + 699 + 702 + 705 + 708 + 711 + 714 + 717 + 720 + 723 + 726 + 729 + 732 + 735 + 738 + 741 + 744 + 747 + 750 + 753 + 756 + 759 + 762 + 765 + 768 + 771 + 774 + 777 + 780 + 783 + 786 + 789 + 792 + 795 + 798 + 801 + 804 + 807 + 810 + 813 + 816 + 819 + 822 + 825 + 828 + 831 + 834 + 837 + 840 + 843 + 846 + 849 + 852 + 855 + 858 + 861 + 864 + 867 + 870 + 873 + 876 + 879 + 882 + 885 + 888 + 891 + 894 + 897 + 900 + 903 + 906 + 909 + 912 + 915 + 918 + 921 + 924 + 927 + 930 + 933 + 936 + 939 + 942 + 945 + 948 + 951 + 954 + 957 + 960 + 963 + 966 + 969 + 972 + 975 + 978 + 981 + 984 + 987 + 990 + 993 + 996 + 999,\n\n'''\n\n\n'''\nProblem 25\n\nFind the sum of all the multiples of 3 or 5 below 1000.\n\n----Input-----\n\n100\n\n----Output-----\n\n5823\n\nExplanation\n\nThe sum of the multiples of 3 or 5 below 1000 is:\n5823 = 3 + 5 + 6 + 9 + 10 + 12 + 15 + 18 + 21 + 24 + 27 + 30 + 33 + 36 + 39 + 42 + 45 + 48 + 51 + 54 + 57 + 60 + 63 + 66 + 69 + 72 + 75 + 78 + 81 + 84 + 87 + 90 + 93 + 96 + 99 + 102 + 105 + 108 + 111 + 114 + 117 + 120 + 123 + 126 + 129 + 132 + 135 + 138 + 141 + 144 + 147 + 150 + 153 + 156 + 159 + 162 + 165 + 168 + 171 + 174 + 177 + 180 + 183 + 186 + 189 + 192 + 195 + 198 + 201 + 204 + 207 + 210 + 213 + 216 + 219 + 222 + 225 + 228 + 231 + 234 + 237 + 240 + 243 + 246 + 249 + 252 + 255 + 258 + 261 + 264 + 267 + 270 + 273 + 276 + 279 + 282 + 285 + 288 + 291 + 294 + 297 + 300 + 303 + 306 + 309 + 312 + 315 + 318 + 321 + 324 + 327 + 330 + 333 + 336 + 339 + 342 + 345 + 348 + 351 + 354 + 357 + 360 + 363 + 366 + 369 + 372 + 375 + 378 + 381 + 384 + 387 + 390 + 393 + 396 + 399 + 402 + 405 + 408 + 411 + 414 + 417 + 420 + 423 + 426 + 429 + 432 + 435 + 438 + 441 + 444 + 447 + 450 + 453 + 456 + 459 + 462 + 465 + 468 + 471 + 474 + 477 +"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nprint(solution(input()))\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1a') == '1'\nassert solution('2c') == '10'\nassert solution('3f') == '11'\nassert solution('4d') == '18'\nassert solution('5e') == '19'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1f\n''') == '1'\nassert solution('''2d\n''') == '10'\nassert solution('''4a\n''') == '11'\nassert solution('''5e\n''') == '18'\nassert solution('''6e\n''') == '25'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1f') == 1\nassert solution('2d') == 10\nassert solution('4a') == 11\nassert solution('5e') == 18\n\n\n\"\"\"\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2a') == '9'\nassert solution('4a') == '15'\nassert solution('5e') == '18'\nassert solution('6e') == '21'\nassert solution('7e') == '24'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nprint(solution(input()))\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nassert solution('6e') == '26'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''1f'''\n) == '1'\n\nassert solution(\n    '''2d'''\n) == '10'\n\nassert solution(\n    '''4a'''\n) == '11'\n\nassert solution(\n    '''5e'''\n) == '18'\n\nassert solution(\n    '''7s'''\n) == '24'"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 1\\n2 10\\n4 7') == '<'\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '='\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '>'\n\n\n\n=====solution=====\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 0 1 1 1\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '<'\nassert solution('0 0 0 0 1 1 1\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '='\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '<'\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '>'\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 2\n1 0 1 1 1 1\n2 10\n4 7''') == '<'\n\nassert solution('''3 3\n1 0 2\n2 5\n2 4''') == '<'\n\nassert solution('''7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '>'\n'''\n\n'''\n\n'''\n\n'''\nHint\n\nThink of the base of each number as the number of digits in it.\n\nFor example, the base of the number 10 is 10, the base of the number 100 is 2, the base of the number 1000 is 10, etc.\n\nIn the case of X and Y, their bases are the same.\n\nFrom the problem, you may assume that the base of X and Y are always equal.\n\nThis is a generalized version of the problem with n and m.\n\nThe digits of the numbers X and Y are both positive.\n\nThe digits of X are in the range 0 and 9.\n\nThe digits of Y are in the range 0 and 9.\n\nFind the smallest integer that, when represented in the same base as both numbers X and Y, is the same as the number Y.\n\nFor example, if X is 456_3 and Y is 765_5, then the base of X is 10, Y is 70_10, and the result is 7_10, which is 7.\n\nInput\n\nThe first line contains an integer n, the number of digits in the b_{x}-based representation of X.\n\nThe second line contains n space-separated integers x_{1}, x_{2},..., x_{n} (0 \u2264 x_{i} < b_{x}), where n is the number of digits in the b_{x}-based representation of X.\n\nThe third line contains an integer m, the number of digits in the b_{y}-based representation of Y.\n\nThe fourth line contains m space-separated integers y_{1}, y_{2},..., y_{m} (0 \u2264 y_{i} < b_{y}), where m is the number of digits in the b_{y}-based representation of Y.\n\nOutput\n\nOutput a single line containing the ASCII character corresponding to the result of the operation.\n\n'''"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \">\""
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2\n1 0 1 1 1 1\n2 10\n4 7''') == '<'\n\nassert solution('''3 3\n1 0 2\n2 5\n2 4\n''') == '<'\n\n\n\"\"\"\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1\\n1\\n2\\n2\\n0 1 1 1 1') == '<'\nassert solution('4 1\\n1\\n2\\n2\\n2 1 1 1 1') == '>'\nassert solution('4 1\\n1\\n2\\n2\\n2 1 1 1 1') == '='\nassert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7') == '<'"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \">\"\nassert solution(input()) == \"=\"\nassert solution(input()) == \"<\"\nassert solution(input()) == \">\"\nassert solution(input()) == \"=\"\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '<'\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '='\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '>'"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 0 2\\n2 5\\n2 4') == '<'\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '>'\nassert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '='\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '<'\n\n\n\"\"\"\n\nX, Y = map(int, stdin.read().split())"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 2') == '<'\nassert solution('5 10') == '>'\nassert solution('20 15') == '='\nassert solution('4 7') == '<'\nassert solution('7 9') == '>'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'BitLGM'\nassert solution(stdin) == 'BitAryo'\n\"\"\"\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'BitLGM'\nassert solution('1 2 1') == 'BitAryo'\nassert solution('2 1 1') == 'BitLGM'\nassert solution('1 1 1') == 'BitLGM'\nassert solution('1 1 1 1') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1 1''') == 'BitLGM'\nassert solution('''2\n1 2''') == 'BitAryo'\nassert solution('''3\n1 2 1''') == 'BitLGM'\nassert solution('''3\n1 2 3''') == 'BitAryo'\nassert solution('''2\n3 4\n2 3''') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1\n''') == 'BitLGM'\nassert solution('''1 2 1\n''') == 'BitAryo'\nassert solution('''2\n1 2 1\n''') == 'BitLGM'\nassert solution('''3\n1 2 1\n''') == 'BitLGM'\nassert solution('''4\n1 2 1 3\n''') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1\n''') == 'BitLGM'\nassert solution('''1 2\n''') == 'BitAryo'\nassert solution('''2 1\n''') == 'BitLGM'\nassert solution('''2 2\n''') == 'BitAryo'\nassert solution('''3 1\n''') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 1''') == 'BitLGM'\nassert solution('''2 2 1''') == 'BitLGM'\nassert solution('''1 1 1''') == 'BitAryo'\nassert solution('''2 1 1''') == 'BitAryo'\nassert solution('''2 2 1''') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == 'BitLGM'\nassert solution('1 1') == 'BitLGM'\nassert solution('2 1') == 'BitLGM'\nassert solution('2 2') == 'BitLGM'\nassert solution('3 1 1') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n1\n''') == 'BitLGM'\nassert solution('''\n1\n2\n1\n''') == 'BitAryo'\nassert solution('''\n1\n2\n3\n1\n''') == 'BitLGM'\nassert solution('''\n1\n2\n3\n4\n1\n''') == 'BitLGM'\nassert solution('''\n2\n1\n2\n3\n1\n''') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == 'BitLGM'\nassert solution('1 1') == 'BitAryo'\nassert solution('2 1') == 'BitAryo'\nassert solution('2 1 1') == 'BitAryo'\nassert solution('1 2 1') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 2\\n') == 'BitLGM'\nassert solution('1 2 1\\n2 2\\n') == 'BitAryo'\nassert solution('1 2 1\\n2 2\\n') == 'BitLGM'\nassert solution('1 2 1\\n2 2\\n') == 'BitAryo'\nassert solution('1 2 1\\n2 2\\n') == 'BitLGM'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6\\n9 1 14') == '1'\nassert solution('3 4\\n6 2 8') == '4'\nassert solution('3 6\\n9 1 14') == '1'\nassert solution('6 4\\n4 3 2 1 9') == '4'\nassert solution('5 4\\n1 5 3 4 2') == '0'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 2 8\\n6 2 8') == '4'\nassert solution('3 6\\n9 1 14') == '1'\nassert solution('3 6\\n9 1 14') == '1'\nassert solution('4 4\\n1 1 1 1\\n1 1 1 1') == '4'\nassert solution('4 4\\n1 1 1 1\\n1 1 1 1') == '4'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('3 3') == '1'\nassert solution('3 4') == '4'\nassert solution('7 7') == '1'\nassert solution('9 1 14') == '1'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('2\\n1') == '0'\nassert solution('3\\n2') == '0'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n6 2 8\\n\") == \"4\\n\"\nassert solution(\"3 6\\n9 1 14\\n\") == \"1\\n\"\nassert solution(\"5 4\\n12 45 8 7 3 2\\n\") == \"1\\n\"\n\n\n\"\"\"\n\n\nfrom math import gcd\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n6 2 8''') == '4'\nassert solution('''3 6\n9 1 14''') == '1'\n'''\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2 8\") == \"4\"\nassert solution(\"3 6\") == \"1\"\nassert solution(\"9 1 14\") == \"1\"\nassert solution(\"9 1 8\") == \"0\"\nassert solution(\"9 1 14 9 1 8\") == \"2\"\n\n\"\"\"\n\nN, K = map(int, stdin.readline().split())\n\nA = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\naabb''') == 'YES'\nassert solution('''6 3\naacaab''') == 'NO'\nassert solution('''3 4\naababab''') == 'YES'\nassert solution('''8 5\naacacac''') == 'NO'\nassert solution('''6 2\naacabaa''') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\naabb\n''') == 'YES'\nassert solution('''6 3\naacaab\n''') == 'NO'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\naabb') == 'YES'\nassert solution('6 3\\naacaab') == 'NO'\nassert solution('6 3\\nabaaab') == 'YES'\nassert solution('7 5\\naaaaaaab') == 'YES'\nassert solution('7 5\\nabcabcabc') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\naabb\") == \"YES\"\nassert solution(\"6 3\\naacaab\") == \"NO\"\nassert solution(\"4 3\\naabb\") == \"YES\"\nassert solution(\"4 4\\naabb\") == \"YES\"\nassert solution(\"4 4\\naaac\") == \"YES\"\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\naaab\\naaaa\\naaaa') == 'NO'\nassert solution('6 3\\naacaab\\naaabb\\naaaab\\naaaab\\naaaab') == 'YES'\n\n\n\n------Solutions------\n\"\"\"\n\nimport sys\nfrom collections import Counter\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\naa\\naa\") == \"NO\"\nassert solution(\"4 2\\naa\\naa\") == \"NO\"\nassert solution(\"3 3\\naa\\naa\\naa\") == \"YES\"\nassert solution(\"4 1\\naa\\naa\\naa\\naa\") == \"YES\"\nassert solution(\"6 3\\naa\\naa\\naa\\naa\\naa\") == \"YES\"\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5\\naaab\\n') == 'YES'\nassert solution('1 2\\nabcd\\n') == 'NO'\nassert solution('1 1\\nabcd\\n') == 'YES'\nassert solution('1 1\\nabcde\\n') == 'YES'\nassert solution('5 3\\naabb\\n') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == input\n\"\"\"\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '3'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('4\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('6\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n3 3\n''') == '1'\nassert solution('''5 2\n3 1 2 3 4\n''') == '2'\nassert solution('''5 5\n5 5\n''') == '0'\nassert solution('''5 6\n2 1 3 4 5\n''') == '2'\nassert solution('''3 5\n3 5\n''') == '0'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3 3\n''') == '1'\nassert solution('''3\n5 6 5\n''') == '2'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\nassert solution('''5\n2 1 3 4 5\n''') == '1'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n3 3\n''') == '1'\nassert solution('''2\n5 6 5\n''') == '2'\nassert solution('''3\n5 6 5\n''') == '2'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\nassert solution('''6\n4 3 1 6 7 4 2 5\n''') == '3'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n3 3\n''') == '1'\n\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\n\nassert solution('''3\n5 6 5\n''') == '2'\n\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\n\nassert solution('''5\n2 1 3 5 4 1 2 3 1\n''') == '2'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n3') == '2'\nassert solution('1\\n3\\n4') == '2'\nassert solution('1\\n3\\n4\\n5') == '1'\nassert solution('2\\n3\\n4') == '2'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\""
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n1000000000') == '0'\nassert solution('2\\n1 0') == '1'\nassert solution('2\\n1 0 1') == '1'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3\\n') == '1'\nassert solution('2\\n3 3\\n') == '1'\nassert solution('2\\n5 6 5\\n') == '2'\nassert solution('9\\n2 1 3 5 4 1 2 3 1\\n') == '3'\nassert solution('2\\n5 1 3 1 5 1 1 1 1\\n') == '2'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3') == '1'\nassert solution('2\\n5 6 5') == '2'\nassert solution('2\\n2 1 3 5 4 1 2 3 1') == '3'\nassert solution('2\\n1 2 3 4') == '2'\nassert solution('3\\n1 2 3 4') == '2'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n'''\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\n\n\"\"\"\n\nimport sys\nsys.path.append('../../')\nfrom code import get_input_as_strings\nfrom code import clear_screen\nfrom collections import deque"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('7 1 1') == '3/7'\nassert solution('10 3 1') == '3/10'\nassert solution('1 1 1') == '1/1'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 2 2') == '2/10'\nassert solution('10 3 2') == '3/10'\nassert solution('10 3 2') == '3/10'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '3/7'\nassert solution(input()) == '3/10'\nassert solution(input()) == '7/3'\nassert solution(input()) == '10/7'\nassert solution(input()) == '13/15'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expected\n\nIn the second sample Willman and Bolt will tie in case 7 is chosen as the length of the racetrack.\n\"\"\"\nfrom fractions import Fraction\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\nassert solution(\"5 4 3\") == \"2/3\"\nassert solution(\"9 2 3\") == \"1/3\"\nassert solution(\"10 2 1\") == \"1/2\"\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\n\n\n\"\"\"\n\nimport sys\nfrom fractions import Fraction\nfrom math import gcd"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 0 0') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 7 0\") == \"-\", \"Nauuo is a girl who loves writing comments\"\nassert solution(\"2 0 1\") == \"+\", \"Nauuo is a girl who loves writing comments\"\nassert solution(\"1 1 0\") == \"?\", \"Nauuo is a girl who loves writing comments\"\nassert solution(\"0 0 1\") == \"?\", \"Nauuo is a girl who loves writing comments\"\nassert solution(\"0 0 0\") == \"?\", \"Nauuo is a girl who loves writing comments\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 7 0\") == \"-\", \"3 7 0\"\nassert solution(\"2 0 1\") == \"+\", \"2 0 1\"\nassert solution(\"1 1 0\") == \"0\", \"1 1 0\"\nassert solution(\"0 0 1\") == \"?\", \"0 0 1\"\nassert solution(\"0 0 1\") == \"?\", \"0 0 1\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 7 0''') == '-'\nassert solution('''2 0 1''') == '+'\nassert solution('''1 1 0''') == '?'\nassert solution('''0 0 1''') == '?'\n\nassert solution('3 7 0') == '-'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 1 0') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 1\\n') == '?'\nassert solution('2 0 1\\n') == '+'\nassert solution('1 1 0\\n') == '+'\nassert solution('0 0 1\\n') == '-'\nassert solution('0 0 0\\n') == '0'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 7 0\") == '-', \"Nauuo is a girl who loves writing comments\"\nassert solution(\"2 0 1\") == '+', \"Nauuo is a girl who loves writing comments\"\nassert solution(\"1 1 0\") == '0', \"Nauuo is a girl who loves writing comments\"\nassert solution(\"0 0 1\") == '?', \"Nauuo is a girl who loves writing comments\"\n\n\"\"\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == '0'\nassert solution('0 0 1\\n') == '?'\nassert solution('0 1 0\\n') == '+'\nassert solution('3 7 0\\n') == '-'\n\"\"\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 1 0') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\nfrom collections import Counter\n\nN, M, X = map(int, input().split())\n\nA = Counter(map(int, input().split()))\nB = Counter(map(int, input().split()))\nC = Counter(map(int, input().split()))\n\nprint(\"?\" if N + M + X > A[1] + B[-1] + C[1] else \"+\" if N + M + X > A[-1] + B[1] + C[-1] else \"-\" if N + M + X > B[-1] + A[1] + C[1] else \"0\" if N + M + X > B[1] + A[-1] + C[-1] else \"\")\n\"\"\"\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5\nRURUU\n-2 3\n'''\n) == '3'\n\nassert solution(\n'''\n4\nRULR\n1 1\n'''\n) == '0'\n\nassert solution(\n'''\n3\nUUU\n100 100\n'''\n) == '-1'\n\nassert solution(\n'''\n4\nRULR\n-1 -1\n'''\n) == '-1'\n\nassert solution(\n'''\n6\nRRRRRRRRRRRR\n-2 -2\n'''\n) == '2'"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\nRURUU\\n-2 3\\n') == '3'\nassert solution('4\\nRULR\\n1 1\\n') == '0'\nassert solution('3\\nUUU\\n100 100\\n') == '-1'\nassert solution('5\\nRURRR\\n10 10\\n') == '1'\nassert solution('4\\nRURRL\\n1 1\\n') == '0'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\nRURUU\\n-2 3') == '3'\nassert solution('4\\nRULR\\n1 1') == '0'\nassert solution('3\\nUUU\\n100 100') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nRURUU\n-2 3\n''') == '3'\nassert solution('''4\nRULR\n1 1\n''') == '0'\nassert solution('''3\nUUU\n100 100\n''') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RURUU') == '3'\nassert solution('UUU') == '0'\nassert solution('RULR') == '-1'\nassert solution('DDDD') == '-1'\nassert solution('RRRRRRUUUU') == '3'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nRURUU\\n-2 3\\n') == 3\nassert solution('4\\nRULR\\n1 1\\n') == 0\nassert solution('3\\nUUU\\n100 100\\n') == -1\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('RRRRRRRRRRRRRRRRRRRRRRR') == 0\nassert solution('DDDDDDDDDDDDDDDDDDDDDDDDD') == -1\nassert solution('RURUUUUDD') == 3\nassert solution('LLLLRRRRRRRURRRRDDDDD') == 6\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('010010') == '3'\nassert solution('10101') == '0'\nassert solution('01') == '-1'\nassert solution('0') == '-1'\nassert solution('2 0') == '0'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"010010\") == \"3\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"01\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n010010\n''') == '3'\nassert solution('''5 3\n010010\n''') == '0'\nassert solution('''5 3\n10101\n''') == '1'\nassert solution('''7 12\n010010 010000 00000 010000 00000 00000 00000 010000 00000\n''') == '-1'\nassert solution('''7 12\n010010 010000 00000 010000 00000 00000 00000 010000 00000\n''') == '-1'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('010010') == 3\nassert solution('10101') == 1\nassert solution('101') == 0\nassert solution('01') == -1\nassert solution('0') == 0\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\n\nassert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '-1'\nassert solution('0111111') == '1'\nassert solution('0 1 1 1 1 1 0') == '2'\nassert solution('101') == '-1'\n\"\"\"\nfrom collections import defaultdict\n\nfrom solutions.kyu_8.find_the_prefix import find_prefix"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\nassert solution(\n'''4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '0'\nassert solution(\n'''7\n6 10\n010001\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '1'\nassert solution(\n'''8\n6 10\n010001\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '-1'\nassert solution(\n'''9\n6 10\n010001\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '-1'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10010') == '3'\nassert solution('1 0') == '0'\nassert solution('0101') == '1'\nassert solution('10101') == '1'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10100\") == \"3\"\nassert solution(\"10101\") == \"0\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"01\") == \"-1\""
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '2'\nassert solution(stdin) == '9'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\n\"\"\"\nfrom sys import stdin, stdout"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10203049 2') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '1'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"30020 3\"\n) == \"1\"\n\nassert solution(\n    \"100 9\"\n) == \"2\"\n\nassert solution(\n    \"10203049 2\"\n) == \"3\"\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10203049 3\") == '3'\nassert solution(\"100 9\") == '2'\nassert solution(\"10203049 2\") == '3'\nassert solution(\"100 9\") == '2'\nassert solution(\"10203049 3\") == '3'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\"\nassert solution(\"98765534 3\") == \"3\"\nassert solution(\"10005 6\") == \"1\"\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\nassert solution('5 4 1004 4 1') == '1 1 1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''1 1 1''') == '1010101010101 50505050505051'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 3 8 1 1''') == '''3 2 3'''\nassert solution('''4 2 9 4 2''') == '''1 1 1'''\nassert solution('''5 5 25 4 3''') == '''1 1 1'''\nassert solution('''100 100 1000000000000000000 100 100''') == '''1010101010101505050505051 50505050505051'''\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''5 6 4 1 3 1''') == '1 1 1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\nKuroo\\nShiro\\nKatie') == 'Kuro'\nassert solution('7\\ntreasurehunt\\nthreefriends\\nhiCodeforces') == 'Shiro'\nassert solution('1\\nabcabc\\ncbabac\\nababca') == 'Katie'\nassert solution('15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE') == 'Draw'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('abcdabc') == 'a'\nassert solution('a') == 'a'\nassert solution('aaaaaa') == 'a'\nassert solution('abcd') == 'abcd'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == 'Kuro'\nassert solution('''treasurehunt''') == 'Shiro'\nassert solution('''threefriends''') == 'Draw'\nassert solution('''foPaErcvJ''') == 'Kuro'\nassert solution('''mZaxowpbt''') == 'Shiro'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"a\\nb\") == \"\"\nassert solution(\"b\\na\") == \"\"\nassert solution(\"\\na\\nb\") == \"a\"\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == 'Kuro'\nassert solution('''treasurehunt''') == 'Kuro'\nassert solution('''threefriends''') == 'Kuro'\nassert solution('''hiCodeforces''') == 'Kuro'\nassert solution('''foPaErcvJ''') == 'Kuro'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == 'Kuro'\nassert solution('''treasurehunt''') == 'Shiro'\nassert solution('''foPaErcvJ''') == 'Kuro'\nassert solution('''mZaxowpbt''') == 'Kuro'\nassert solution('''mkuOlaHRE''') == 'Shiro'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\nkuro\\nshiro\\nkatie\\n') == 'kuro'\nassert solution('7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\\n') == 'Shiro'\nassert solution('1\\nabcabc\\ncbabac\\nababca\\n') == 'Katie'\nassert solution('15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\\n') == 'Draw'\nassert solution('2\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\nasdfasdf\\"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('7') == 'Shiro'\nassert solution('15') == 'Draw'\n\n\"\"\"\n\nn = int(input())\nribbons = []\nfor _ in range(3):\n    ribbons.append(input())\n\nribbon_dict = {}\nfor ribbon in ribbons:\n    ribbon_dict[ribbon] = ribbon_dict.get(ribbon, 0) + 1\n\nmax_beauty = max(ribbon_dict.values())\nmax_beauty_ribbon = None\nfor key, val in ribbon_dict.items():\n    if val == max_beauty:\n        max_beauty_ribbon = key"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\nKuroo\nShiro\nKatie\"\"\") == \"Kuro\"\nassert solution(\"\"\"7\ntreasurehunt\nthreefriends\nhiCodeforces\"\"\") == \"Shiro\"\nassert solution(\"\"\"1\nabcabc\ncbabac\nababca\"\"\") == \"Draw\"\nassert solution(\"\"\"15\nfoPaErcvJ\nmZaxowpbt\nmkuOlaHRE\"\"\") == \"Draw\"\nassert solution(\"\"\"1\naaaaaa\nbbbbbb\ncccccc\ndddddd\neeeeee\nffffff\ngggggg\nhhhhhh\niiiiiii\njjjjjjj\nkkkkkkk\nllllllll\nmmmmmmmm\nnnnnnnnn\nooooooo\npppppppp\nqqqqqqqq\nrrrrrrrr\nssssssss\ntttttttt\nuuuuuuuu\nvvvvvvvv\nwwwwwwwww\nxxxxxxx\nyyyyyyyy\nzzzzzzzzz\naaaaaaaa\nbbbbbbbbb\nccccccccc\nddddddddd\neeeeeeee\nffffffff\nggggggggg\nhhhhhhhh\niiiiiiiii\njjjjjjjjj\nkkkkkkkkk\nlllllllll\nmmmmmmmmmm\nnnnnnnnnnn\nooooooooo\npppppppppp\nqqqqqqqqqq\nrrrrrrrrrr\nssssssssss\ntttttttttt\nuuuuuuuuuu\nvvvvvvvvvv\nwwwwwwwww\nxxxxxx\nyyyyyyyyy\nzzzzzzzzzz\naaaaaaaaa\nbbbbbbbbbb\ncccccccccc\ndddddddddd\neeeeeeeeee\nffffffffff\nggggggggggg\nhhhhhhhhhhh\niiiiiiiiiii\njjjjjjjjjjj\nkkkkkkkkkkk\nlllllllllll\nmmmmmmmmmmm\nnnnnnnnnnnnn\nooooooooooo\npppppppppppp\nqqqqqqqqqqqq\nrrrrrrrrrrrr\nssssssssssss\ntttttttttttt\nuuuuuuuuuuuu\nvvvvvvvvvvvv\nwwwwwwwww\nxxxxx\nyyyyyyyyyy\nzzzzzzzzzzz\naaaaaaaaaa\nbbbbbbbbbbb\nccccccccccc\nddddddddddd\neeeeeeeeee\nffffffffff\ngggggggggggg\nhhhhhhhhhhh\niiiiiiiiiii\njjjjjjjjjjj\nkkkkkkkkkkk\nlllllllllll\nmmmmmmmmmmm\nnnnnnnnnnnnn\nooooooooooo\npppppppppppp\nqqqqqqqqqqqq\nrrrrrrrrrrrr\nssssssssssss\ntttttttttttt\nuuuuuuuuuuuu\nvvvvvvvvvvvv\nwwwwwwwww\nxxxxxx\nyyyyyyyyy\nzzzzzzzzzzz\naaaaaaaaaaa\nbbbbbbbbbbb\nccccccccccc\nddddddddddd\neeeeeeeeee\nffffffffff\ngggggggggggg\nhhhhhhhhhhh\niiiiiiiiiii\njjjjjjjjjjj\nkkkkkkkkkkk\nlllllllllll\nmmmmmmmmmm\nnnnnnnnnnnnn\nooooooooooo\npppppppppppp\nqqqqqqqqqqqq\nrrrrrrrrrrrr\nssssssssssss\ntttttttttttt\nuuuuuuuuuuuu\nvvvvvvvvvvvv\nwwwwwwwww\nxxxxxx\nyyyyyyyyy\nzzzzzzzzzzz\"\"\") == \"Kuro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\n\"\"\""
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'\nprint('Success')\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('0 0 0 0 0') == '0'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('16 1 100 0 0') == '17'\nassert solution('17 1 100 0 0') == '18'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''12 4 12 4 1'''\n) == '15'\nassert solution(\n'''15 1 100 0 0'''\n) == '15'\nassert solution(\n'''10 3 4 1 2'''\n) == '6'\n'''\n\n'''"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'\nassert solution('''27 12 6 14 0 0''') == '9'\nassert solution('''12 4 12 4 1''') == '3'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('1 1 1 1 1') == '1'\nassert solution('2 2 2 2 2') == '1'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 5 10 5 4'''\n) == '1'\n\nassert solution(\n'''12 4 12 4 1'''\n) == '3'\n\nassert solution(\n'''15 1 100 0 0'''\n) == '15'\n\nassert solution(\n'''10 1 1 2 2'''\n) == '10'\n\nassert solution(\n'''3 3 3 3 3'''\n) == '3'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"2 2 2 2\") == \"15\"\nassert solution(\"3 3 3 3\") == \"45\"\nassert solution(\"5 5 5 5 5\") == \"60\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"27\") == \"3\\n5 11 11\"\n\"\"\""
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('27') == '3'\nassert solution('2777') == '3'\nassert solution('4273') == '5'\nassert solution('7') == '3'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"27\") == \"3\\n5 11 11\"\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('27') == '3\\n5 11 11'\n\nassert solution('37') == '3\\n5 11 17'\n\nassert solution('41') == '3\\n5 11 17 17'\n\nassert solution('50') == '3\\n5 11 17 17 17'\n\nassert solution('71') == '3\\n5 11 17 17 17 17'"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('18') == '3\\n5 11'\nassert solution('18') == '3\\n5 11'\nassert solution('34') == '3\\n5'\nassert solution('27') == '3\\n5 11 11'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''27''') == '3'\nassert solution('''27''') == '3'\nassert solution('''9''') == '0'\nassert solution('''99''') == '3'\nassert solution('''100''') == '3'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('27') == '3'\nassert solution('28') == '3'\nassert solution('29') == '5 11 11'\nassert solution('30') == '5 11 11'\nassert solution('31') == '5 11 11'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('1000') == '1'\nassert solution('100000') == '0'\nassert solution('100003') == '2'\nassert solution('27') == '3\\n5 11 11'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".***..\\n\\n**.*..\\n\\n*.**.*\") == \"YES\"\nassert solution(\"..*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\") == \"YES\"\nassert solution(\"....\\n*....\\n....\\n....\\n....\\n....\") == \"YES\"\nassert solution(\".**.\\n.*.*\\n.*.*\\n.*.*\\n.*.*\") == \"NO\"\nassert solution(\"...\\n.*.*\\n.*.*\\n.*.*\\n.*.*\") == \"NO\"\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'NO'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'YES'\nassert solution('''5 4\n.****\n****.*\n.*.*.*\n.*.*.*\n''') == 'YES'\nassert solution('''6 5\n.*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"NO\"\nassert solution(\"1 1\") == \"YES 1 1\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1\") == \"YES 1 1\"\nassert solution(\"2 2\") == \"YES 2 2\"\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n.*..\\n....\\n.*..') == 'YES\\n1 2'\nassert solution('3 3\\n..*\\n.*.\\n*..\\n') == 'NO'\nassert solution('6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n..*..') == 'YES\\n3 3'\nassert solution('6 5\\n....\\n.*..\\n..*..\\n*.*.*') == 'YES\\n2 4'\nassert solution('5 5\\n*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*') == 'YES\\n3 3'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'YES'\n\nassert solution('''4 3\n***\n***\n***\n*..\n''') == 'NO'\n\nassert solution('''3 3\n..*\n***\n*..\n''') == 'YES'\n\nassert solution('''3 4\n*...\n.*..\n.*..\n''') == 'NO'\n\nassert solution('''1 1\n*\n''') == 'NO'"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('6 5') == 'YES'\nassert solution('1 1') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n\n\n-----You are given a sequence of operations on a line of text. Each operation is a command that\ntakes as an argument a number, and that number is interpreted as an index of a string. \n\nThe operation can either insert or remove characters from that string, or change its case, \nor replace a substring of the string by another substring.\n\nYou should process the operations in such a way that the final string consists of \nonly lower case characters.\n\nWhen you process the operations, your result should be stored in a string. Print it out on one line.\n\nInput\n\nThe first line contains an integer t (1\u2009\u2264\u2009t\u2009\u2264\u2009100) \u2014 the number of operations.\n\nThe next t lines contain an integer n (0\u2009\u2264\u2009n\u2009\u2264\u200910^9) \u2014 the length of the string to process.\n\nThen follow n lines:\n\na number x (0\u2009\u2264\u2009x\u2009\u2264\u2009n) \u2014 the index of the operation to apply.\n\nThen the next line contains the string to process.\n\nOutput\n\nPrint the result of the processing, one character per line.\n\n\n-----Example-----\n\nInput\n\n3\n\n4\n\n0\n\nsolution\n\n\"s\"\n\n1 1\n\n0\n\n\"S\"\n\nOutput\n\ns\n\n0\n\ns\n\n'''\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'NO'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'NO'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES'\nassert solution('''6 5\n..*.*\n.*.*\n.*.*\n.*.*\n.*.*\n.*.*\n''') == 'NO'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('20 1 1 1') == '4'\nassert solution('20 1 1 1') == '4'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '10'\nassert solution('5 6 7 8') == '0'\nassert solution('9 7 3 8') == '15'\nassert solution('30 6 17 19') == '0'\nassert solution('30 6 17 19') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\n\n-----\n\n\n'''"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 7 3 8\\n') == '15'\nassert solution('2 7 3 7\\n') == '14'\nassert solution('30 6 17 19\\n') == '0'\nassert solution('7 7 3 7\\n') == '14'\nassert solution('20 6 17 19\\n') == '0'\n\n\n\"\"\"\n\nn, m, a, b = [int(x) for x in input().split()]"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 5 6') == '1'\nassert solution('3 4 5 6') == '2'\nassert solution('8 5 7 9') == '0'\nassert solution('1 2 3 4') == '0'\nassert solution('9 10 11 12') == '3'\n\nprint('Test success!')\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('2 2 1 2') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('17 19 3 6 19') == '0'\nassert solution('5 8 6 7') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"9 7 3 8\") == \"15\"\nassert solution(\"2 7 3 7\") == \"14\"\nassert solution(\"30 6 17 19\") == \"0\"\nassert solution(\"4 2 5 3\") == \"3\"\nassert solution(\"10 1 2 3\") == \"3\"\n\n\n\"\"\"\n\nfrom collections import Counter\nimport sys"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\nimport sys"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n-5 -3') == '-1'\nassert solution('3\\n2 -5 -3') == '-1'\nassert solution('4\\n-2 2 -3 1') == '3'\nassert solution('5\\n2 -5 -3 1') == '-1'\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n-2 2 -3 1\n''') == '3'\n\nassert solution('''3\n2 -5 -3\n''') == '-1'\n\nassert solution('''5\n5 6 -7 8 9 -8\n''') == '5'\n\nassert solution('''1\n-2 3 -4 5\n''') == '-2'\n\nassert solution('''9\n1 2 3 4 5 6 7 8 9 10\n''') == '9'\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n-2 2 -3 1''') == '3'\nassert solution('''3\n2 -5 -3''') == '-1'\nassert solution('''10\n-2 -3 -4 -5 -6 -7 -8 -9 -10''') == '10'\nassert solution('''1000\n-30000 1 -40000 -50000 10 -60000 -70000 -80000 -90000 -100000 -110000 -120000 -130000 -140000 -150000 -160000 -170000 -180000 -190000 -200000''') == '-30000'\nassert solution('''100\n-30000 1 -40000 -50000 10 -60000 -70000 -80000 -90000 -100000 -110000 -120000 -130000 -140000 -150000 -160000 -170000 -180000 -190000 -200000''') == '-30000'\n'''\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n-2 2 -3 1\\n') == '3'\nassert solution('3\\n2 -5 -3\\n') == '-1'\nassert solution('3\\n2 -5 -3\\n') == '-1'\nassert solution('3\\n2 -5 -3\\n') == '-1'\nassert solution('3\\n2 -5 -3\\n') == '-1'\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(\"1 -2 2 -3 1\") == \"3\"\nassert solution(\"2 -5 -3\") == \"-1\"\nassert solution(\"1 -2 2 -3 1\") == \"3\"\nassert solution(\"1 1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 6\nassert solution('-2 -3 -5 -7 1') == 6\nassert solution('3 2 -5 -3') == -1\nassert solution('-2 -3 -5 -7 1') == 6\nassert solution('1 2 3 4 5') == 6\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n-2 2 -3 1') == 3\nassert solution('3\\n2 -5 -3') == -1\nassert solution('3\\n2 -5 -3\\n2 -5 -3') == -1\nassert solution('4\\n-2 2 -3 1') == 3\nassert solution('3\\n2 -5 -3') == -1\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n-2 2 -3 1') == 3\nassert solution('3\\n2 -5 -3') == -1\nassert solution('3\\n-2 -5 -3') == -1\nassert solution('1\\n-1') == -1\nassert solution('2\\n-1 -2') == 1\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n3\\n1') == '2'\nassert solution('3\\n1\\n1') == '3'\nassert solution('1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 3') == '6'\nassert solution('2 1\\n1 1\\n1 3') == '2'\nassert solution('3 2\\n5 1\\n2 1\\n3 2') == '10'\nassert solution('4 10\\n5 3\\n2 1\\n3 2') == '10'\nassert solution('4 10\\n5 3\\n2 1\\n3 2') == '10'\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"6\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3''') == '6'\nassert solution('''3 3\n1 1\n1 2\n1 3''') == '2'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\nassert solution('''7 9\n1 5\n2 1\n3 2\n4 1\n5 1\n6 1\n7 1\n8 2\n9 1''') == '7'\nassert solution('''8 30\n15 1\n1 1\n2 1\n3 2\n5 1\n6 1\n7 1\n8 2\n9 1\n10 1\n11 1\n12 2\n13 1\n14 1\n15 2\n16 2\n17 1\n18 1\n19 1\n20 1\n21 1\n22 2\n23 1\n24 1\n25 1\n26 1\n27 1\n28 2\n29 1\n30 1\n31 1\n32 2\n33 1\n34 1\n35 1\n36 1\n37 1\n38 2\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 2\n47 1\n48 1\n49 1\n50 1\n51 1\n52 2\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 2\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 2\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 2\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 2\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 2\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n1 2\\n1 3\\n') == '6'\nassert solution('3 3\\n1 1\\n1 1\\n1 3\\n') == '2'\nassert solution('4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n') == '10'\nassert solution('5 10\\n5 3\\n2 1\\n3 2\\n5 1\\n') == '7'\n\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 1\\n1 2\\n1 3\\n\") == \"6\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\\n\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n\") == \"10\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\\n\") == \"2\"\nassert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n\") == \"10\"\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '333333338'\nassert solution('5') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"33333333\"\nassert solution
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"333333338\"\nassert solution(\"42\") == \"333333338\"\nassert solution(\"22\") == \"333333338\"\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''4''') == '333333338'\nassert solution('''9''') == '99999999997'\nassert solution('''123456789''') == '9999999999989999999999999999999999999'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''4''') == '333333338'\nassert solution('''7''') == '922293894019046047'\nassert solution('''9''') == '43643799496043136'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4''') == '333333338'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''4''') == '333333338'\nassert solution('''7''') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '333333338'\nassert solution(stdin) == '6616'\nassert solution(stdin) == '10000000077'\nassert solution(stdin) == '9336961748'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('4') == 3333\nprint(solution(''))\nprint(solution('1'))\nprint(solution('2'))\nprint(solution('4'))\n\n\n-----JavaScript-----\n\n```js\nconst solution = (data) => {\n  let m = parseInt(data);\n\n  let a = [1];\n  let n = 1;\n  let result = 0;\n  let expected = 0;\n  let i = 0;\n  while (i < m) {\n    a.push(Math.random() * m + 1);\n    n += Math.gcd(a.length, 10^9 + 7) === 1;\n    if (n === 1) {\n      result += a.length;\n    }\n    i += 1;\n  }\n  expected = Math.pow(2, Math.floor(result / n));\n  return expected\n}\n\nsolution('')\n// => 0\n\nsolution('1')\n// => 1\n\nsolution('2')\n// => 2\n\nsolution('4')\n// => 3333\n\nconsole.log(solution(''))\n// => 0\n\nconsole.log(solution('1'))\n// => 1\n\nconsole.log(solution('2'))\n// => 2\n\nconsole.log(solution('4'))\n// => 3333\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2\\n') == '2'\nassert solution('1 12 1 12\\n') == '4'\nassert solution('50 100 3 30\\n') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'\n\n'''\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\n\nprint(solution(stdin))"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('40 50 33 27') == '0'\nassert solution('12 34 45 2 13') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'\nassert solution('''2 1 1 2''') == '0'\nassert solution('''1 3 1 3''') == '3'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 10\\n') == '2'\nassert solution('21 31\\n') == '9'\nassert solution('5 10\\n') == '0'\n\"\"\"\n\na, b = map(int, input().split())\n\nresult = 1\nwhile (a*result) % b or (b*result) % a:\n    result += 1\n\nprint(result)\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\nprint(solution(stdin))\nassert solution(stdin) == ''\nprint(solution(stdin))\nassert solution(stdin) == ''\nprint(solution(stdin))\nassert solution(stdin) == ''\nprint(solution(stdin))\nassert solution(stdin) == ''\nprint(solution(stdin))\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n\"\"\"\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n\n\n\"\"\""
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\nassert solution('7 7') == '0'\nassert solution('21 15') == '3'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 10\\n') == '2\\n'\nassert solution('21 31\\n') == '9\\n'\nassert solution('5 10\\n') == '0\\n'\n\n\n\"\"\""
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\nassert solution('2 3') == '3'\nassert solution('6 10') == '2'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 10\\n') == '2'\nassert solution('21 31\\n') == '9'\nassert solution('5 10\\n') == '0'\n\n\n-----\n\nTo know more about this problem, check the Wikipedia article on \"Least Common Multiple\".\nhttps://en.wikipedia.org/wiki/Least_common_multiple\n\n\"\"\"\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 10\\n') == '2\\n'\nassert solution('21 31\\n') == '9\\n'\nassert solution('5 10\\n') == '0\\n'\n\n\n\n'''\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == '5'\n\"\"\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 10\n8 9\n''') == '4'\nassert solution('''3 5\n4 4 4\n''') == '3'\n\nassert solution('''2 10\n8 9\n''') == '4'\nassert solution('''3 5\n5 5 5\n''') == '2'\n'''\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10') == '4'\nassert solution('2 10') == '3'\nassert solution('3 5') == '3'\nassert solution('4 4 4') == '3'\nassert solution('5 5 5') == '3'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 10\n8 9\"\"\") == \"4\"\nassert solution(\"\"\"3 5\n4 4 4\"\"\") == \"3\"\nassert solution(\"\"\"1 0\n1\"\"\") == \"1\"\nassert solution(\"\"\"1 1\n1\"\"\") == \"2\"\nassert solution(\"\"\"1 1\n1 1 1\"\"\") == \"3\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 10\n8 9\n''') == '4'\nassert solution('''3 5\n4 4 4\n''') == '3'\nassert solution('''2 10\n8 9\n9 9\n''') == '3'\nassert solution('''10 10\n5\n''') == '1'\nassert solution('''5 5\n5\n''') == '0'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 9\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\n\"\"\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/stdin/6.1.txt') == '6'\n\"\"\"\nfrom statistics import mean\nn, k = map(int, stdin.readline().split())\ns = stdin.readline().split()\n\nfor i in range(1, k + 1):\n    s[i - 1] = int(s[i - 1])\n\nprint(mean(s) - k)\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10') == '4'\nassert solution('5 10') == '3'\nassert solution('9 10') == '4'\nassert solution('6 9') == '3'\nassert solution('9 7') == '4'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 10\\n4 4 4') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('3 8\\n4 4 4') == '3'\nassert solution('3 7\\n4 4 4') == '4'\nassert solution('3 8\\n3 3 3') == '1'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n10 0 -7 2 6\\n') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n10 0 -7 2 6\n''') == '4'\n\nassert solution('''\n7\n0 0 1 -1 0 0 2\n''') == '0'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n10 0 -7 2 6\\n') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('9\\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10') == '-2'\nassert solution('9\\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10') == '-2'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 1') == '0'\nassert solution('3\\n1 1 1') == '0'\nassert solution('4\\n1 1 1 1') == '2'\nassert solution('5\\n1 1 1 1 1') == '2'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n10 0 -7 2 6\\n') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\n\nfor x in a:\n    if x >= (n/2):\n        ans += 1\n    else:\n        break"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n10 0 -7 2 6\n''') == '4'\nassert solution('''7\n0 0 1 -1 0 0 2\n''') == '0'\nassert solution('''8\n0 0 1 -1 0 0 2 0\n''') == '0'\nassert solution('''9\n0 0 1 -1 0 0 2 0 0\n''') == '0'\nassert solution('''10\n0 0 1 -1 0 0 2 0 0 0\n''') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n10 0 -7 2 6''') == '4'\nassert solution('''7\n0 0 1 -1 0 0 2''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 1''') == '0'\nassert solution('''4\n0 0 1 -1 0 0 2''') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '1'\nassert solution('7') == '0'\nassert solution('8') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\nassert solution(\"500\") == \"0\"\nassert solution(\"1000000\") == \"0\"\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"14\") == \"9\"\nassert solution(\"50\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7''') == '3'\nassert solution('''14''') == '9'\nassert solution('''50''') == '1'\nassert solution('''''') == '1'\nassert solution('''''') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7''') == '3'\nassert solution('''14''') == '9'\nassert solution('''50''') == '1'\nassert solution('''100''') == '0'\nassert solution('''100000''') == '2'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('9') == '0'\nassert solution('99') == '2'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7''') == '3'\nassert solution('''14''') == '9'\nassert solution('''50''') == '1'\nassert solution('''7''') == '3'\nassert solution('''14''') == '9'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6\\n2 3') == '1\\n1 6\\n2 3'\nassert solution('36 5\\n10 16\\n') == '3\\n16 5\\n5 16'\nassert solution('3 5\\n2 1\\n') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 6\n2 3\n''') == '1'\nassert solution('''36 5\n10 16\n''') == '3'\nassert solution('''3 5\n2 1\n''') == '-1'\nassert solution('''100 100\n2 3\n''') == '3'\nassert solution('''100 100\n2 100\n''') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 6') == '1\\n1 6\\n2 3'\nassert solution('36 5') == '3\\n16 5\\n5 16'\nassert solution('3 5') == '-1\\n16 5\\n5 16'\nassert solution('2 1') == '-1\\n-1\\n-1'\nassert solution('10 16') == '3\\n16 5\\n5 16'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n\nassert solution('1 2') == '1 1\\n2 2'\nassert solution('1 2 3') == '1 1\\n2 2\\n3 3'\nassert solution('1 2 3 4') == '1 1\\n2 2\\n3 3\\n4 4'\nassert solution('1 2 3 4 5') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 6\n2 3\n''') == '1\\n1 6\\n2 3'\nassert solution('''36 5\n10 16\n''') == '3\\n16 5\\n5 16'\nassert solution('''3 5\n2 1\n''') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\nassert solution(\"1 0 1 0\") == \"Polycarp\"\nassert solution(\"0 0 0 0\") == \"Polycarp\"\nassert solution(\"0 0 0 0\") == \"Polycarp\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('0 0 0 0') == 'Polycarp'\nassert solution('0 0 0 1') == 'Vasiliy'\nassert solution('0 0 0 1') == 'Polycarp'\nassert solution('1 1 1 0') == 'Vasiliy'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 2 2') == \"Polycarp\"\nassert solution('4 7 7 4') == \"Vasiliy\"\nassert solution('3 5 4 5') == \"Vasiliy\"\nassert solution('3 2 2 2') == \"Polycarp\"\n\n\"\"\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\n\"\"\"\nfrom sys import stdin\nstdin = open('./tests/01', 'r')\n\nx_p, y_p, x_v, y_v = map(int, stdin.readline().split())\nprint('Polycarp' if x_v - x_p == y_v - y_p else 'Vasiliy')\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''4 4 4 4''') == 'Vasiliy'\nassert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''2 2 2 2''') == 'Polycarp'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\nassert solution(\"1 4 7 3\") == \"Polycarp\"\nassert solution(\"1 1 2 2\") == \"Polycarp\"\nassert solution(\"1 1 1 1\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''1 1 2 2''') == 'Polycarp'\nassert solution('''2 2 2 2''') == 'Polycarp'\nassert solution('''1 2 1 2''') == 'Vasiliy'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''1 4 1 4''') == 'Vasiliy'\nassert solution('''4 2 1 4''') == 'Polycarp'\nassert solution('''1 2 2 4''') == 'Vasiliy'\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'\nassert solution('2 1') == '10'\nassert solution('2 2') == '5'\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5'\n\"\"\"\n\nfrom datetime import datetime, timedelta\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 7''') == '6'\nassert solution('''1 1''') == '5'\nassert solution('''11 6''') == '5'\nassert solution('''1 1''') == '5'\nassert solution('''1 1''') == '5'\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'\nprint('Testcases passed')\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 7\") == \"6\"\nassert solution(\"11 6\") == \"5\"\nassert solution(\"2 1\") == \"5\"\nassert solution(\"3 7\") == \"6\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\nassert solution('72057595000000000 72057596000000000') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2015 2015') == '0'\nassert solution('5 10') == '2'\nassert solution('100 105') == '1'\nassert solution('72057594000000000 72057595000000000') == '26'\n\"\"\"\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 10\\n') == '2'\nassert solution('2015 2015\\n') == '1'\nassert solution('72057594000000000 72057595000000000\\n') == '0'\nassert solution('100 105\\n') == '0'\nassert solution('72057594000000000 72057595000000000\\n') == '0'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\nassert solution('10_10') == '1'\n\n\n'''\n\nimport sys"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n\n'''"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '26'\n\"\"\"\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '26'\nassert solution('5 10') == '2'\nassert solution('100 105') == '0'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 10\") == \"2\"\nassert solution(\"2015 2015\") == \"1\"\nassert solution(\"100 105\") == \"0\"\nassert solution(\"72057594000000000 72057595000000000\") == \"26\"\nassert solution(\"72057596000000000 72057597000000000\") == \"25\"\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 2\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4''') == 2\nassert solution('''1''') == 1\nassert solution('''2''') == 2\nassert solution('''3''') == 3\nassert solution('''4''') == 4\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 1\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('1') == 1\nassert solution('42') == 3\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('10') == '10'\nassert solution('100') == '100'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 3\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 2\nassert solution('3') == 4\nassert solution('4') == 6\n\n'''\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n\"\"\"\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('4') == '6'\nassert solution('5') == '8'\nassert solution('10') == '8'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == 2\nassert solution('''3''') == 4\nassert solution('''4''') == 6\nassert solution('''10''') == 2\n\n\n\n\n\nfor _ in range(int(stdin.readline().strip())):\n    N = int(stdin.readline().strip())\n    print(solution(N))"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 30\\n4 3\\n') == '1'\nassert solution('2 2 7\\n4 3\\n') == '1'\nassert solution('3 1 1\\n1 1 1\\n') == '6'\nassert solution('3 1 1\\n1 1 1\\n') == '6'\nassert solution('2 1 7\\n1 1 1\\n') == '6'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 2 2\") == \"0\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 30\n4 3\n''') == '1'\nassert solution('''2 2 7\n4 3\n''') == '1'\nassert solution('''3 1 1\n1 1 1\n''') == '6'\nassert solution('''6 1 1\n1 1 1\n''') == '6'\n'''\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5 6 7') == '1'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3 30\") == \"1\"\nassert solution(\"2 2 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\nassert solution(\"4 3\") == \"6\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1 30\\n4 3\\n\") == \"1\\n\"\nassert solution(\"2 1 7\\n4 3\\n\") == \"1\\n\"\nassert solution(\"3 1 1\\n1 1 1\\n\") == \"6\\n\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 30\n4 3\n''') == '1'\nassert solution('''2 2 7\n4 3\n''') == '1'\nassert solution('''3 1 1\n1 1 1\n''') == '6'\nassert solution('''2 2 7\n4 3\n''') == '1'\nassert solution('''2 2 7\n2 1 4\n1 1 1\n''') == '6'\n'''\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 3\\n4 3') == '1'\nassert solution('2 1 4\\n4 3') == '0'\nassert solution('3 1 1\\n1 1 1') == '6'\nassert solution('3 1 2\\n1 1 1') == '2'\nassert solution('3 2 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n\nassert solution('''4\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n\nassert solution('''7\n2 1\n1\n1\n2\n1\n2\n1\n3\n''') == 'YES'\n\nassert solution('''7\n2 1\n1\n1\n2\n1\n2\n1\n3\n''') == 'NO'\n\nassert solution('''8\n7 3\n4 2\n1 3\n1\n4 5\n1\n5 2\n0 2\n5 6\n1 1\n3 4\n1 2\n''') == 'YES'"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n2\\n3\\n4') == 'YES'\nassert solution('1\\n2\\n3\\n4') == 'NO'\nassert solution('0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 'NO'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'\n\"\"\"\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\nassert solution('''4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'NO'\nassert solution('''5\n5 3\n0 0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\nassert solution('''5\n5 4\n0 0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'NO'\nassert solution('''6\n4 100\n0 0 0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\nassert solution('''5 7\n1 9\n0 7\n0 1 3\n1 1\n3 9\n0 59049 810''') == 'YES'\nassert solution('''5 7\n1 9\n0 7\n0 1 3\n1 1\n3 9\n0 59049 810''') == 'NO'\nassert solution('''5 7\n1 9\n0 7\n0 1 3\n1 1\n3 9\n0 59049 810''') == 'NO'\nassert solution('''5 7\n1 9\n0 7\n0 1 3\n1 1\n3 9\n0 59049 810''') == 'NO'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(open(0).read()) == 'YES'\nassert solution(open(1).read()) == 'YES'\nassert solution(open(2).read()) == 'NO'\nassert solution(open(3).read()) == 'NO'\nassert solution(open(4).read()) == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1') == 'NO'\nassert solution('1 2\\n1\\n1') == 'NO'\nassert solution('1 2\\n1 2\\n1') == 'NO'\nassert solution('1 2\\n1 2\\n1') == 'NO'\nassert solution('1 2\\n1 2\\n1\\n1') == 'YES'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"YES\"\nassert solution(\"2\\n8\\n2\\n4\\n2\\n1\\n2\\n2\\n3\\n2\\n1\\n1\\n1\\n2\\n2\\n3\\n3\\n4\\n2\\n1\\n1\\n2\\n2\\n3\\n4\\n4\\n3\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n2\\n2\\n3\\n1\\n2\\n1\\n3\\n1\\n2\\n2\\n1\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\n3\\n1\\n2\\n1\\n2\\"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n\n\"\"\"\n\nimport sys\nfrom math import factorial"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 2') == '20'\nassert solution('5 6 7') == '1520'"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('10 10 10') == '55100'\nassert solution('5 7 11') == '1575'\nassert solution('5 7 12') == '1576'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 2''') == '20'\nassert solution('''5 6 7''') == '1520'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('1 2 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\""
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\"\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"20\"\nassert solution(\"5 6 7\") == \"1520\"\n\n\n\n\"\"\"\n\nA = int(input().split()[0])\nB = int(input().split()[0])\nC = int(input().split()[0])\n\nmodulo = 1\nfor i in range(1,A+1):\n    for j in range(1,B+1):\n        for k in range(1,C+1):\n            modulo = modulo * (i*j*k)\n\nprint(modulo)"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nAB\nXC\nXB\nAC\n''') == 'YES'\n\nassert solution('''\nAB\nXC\nAC\nBX\n''') == 'NO'\n\nassert solution('''\nAB\nXC\nAC\n''') == 'NO'\n\nassert solution('''\nAB\nXC\nAC\n''') == 'NO'\n\nassert solution('''\nAB\nXC\n''') == 'NO'"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"NO\"\nassert solution(\"AB\\nXC\") == \"YES\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\nAB\nXC\nXB\nAC\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\nAB\nXC\nAC\nBX\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\nAB\nXC\nAC\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\nAB\nXC\nAC\n\nBX\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\nAB\nXC\nAC\n\nBX\n\"\"\") == \"YES\""
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AB') == 'YES'\nassert solution('XC') == 'NO'\nassert solution('XB') == 'NO'\nassert solution('AC') == 'NO'\nassert solution('AB') == 'YES'\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AB\") == \"YES\"\nassert solution(\"XC\") == \"YES\"\nassert solution(\"XB\") == \"NO\"\nassert solution(\"AC\") == \"NO\"\nassert solution(\"AB\") == \"YES\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AB\") == \"YES\"\nassert solution(\"XC\") == \"NO\"\nassert solution(\"XB\") == \"YES\"\nassert solution(\"AC\") == \"YES\"\nassert solution(\"BX\") == \"NO\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AB\") == \"YES\"\nassert solution(\"XC\") == \"NO\"\nassert solution(\"XB\") == \"YES\"\nassert solution(\"AC\") == \"YES\"\n\n\n'''\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(TEST) == TEST_OUT\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"12\"\n\n\n--- 5.7 seconds ---"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''13''') == '12'\nassert solution('''12''') == '12'\nassert solution('''16''') == '11311'\nassert solution('''2016''') == '475'\nassert solution('''17''') == '594'\n'''\n\n'''"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''13''') == '12'\nassert solution('''16''') == '11311'\nassert solution('''20''') == '999'\n'''\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''13\n12''') == '12'\nassert solution('''16\n11311''') == '475'\nassert solution('''20\n999''') == '3789'\nassert solution('''17\n2016''') == '594'\nassert solution('''27\n2300''') == '1258'\n'''\n\n>>> from io import StringIO\n\n>>> import sys\n>>> sys.stdin = StringIO(\n... '13\\n12')\n\n>>> solution()\n'12'\n\n>>> sys.stdin = StringIO(\n... '16\\n11311')\n\n>>> solution()\n'475'\n\n>>> sys.stdin = StringIO(\n... '20\\n999')\n\n>>> solution()\n'3789'\n\n>>> sys.stdin = StringIO(\n... '17\\n2016')\n\n>>> solution()\n'594'\n\n>>> sys.stdin = StringIO(\n... '27\\n2300')\n\n>>> solution()\n'1258'\n\n'''\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"13\"\n) == \"12\"\nassert solution(\n    \"12\"\n) == \"12\"\nassert solution(\n    \"16\"\n) == \"11311\"\nassert solution(\n    \"2016\"\n) == \"575\"\nassert solution(\n    \"20\"\n) == \"3789\"\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '7'\nassert solution('13') == '12'\nassert solution('100') == '99'\nassert solution('101') == '110'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 10') == '16'\nassert solution('3 10') == '26'\nassert solution('4 10') == '36'\nassert solution('5 10') == '46'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '3'\nassert solution('13') == '10'\nassert solution('123') == '12'\nassert solution('1234') == '14'\nassert solution('1234001') == '15'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"12\"\nassert solution(\"16\") == \"11311\"\nassert solution(\"20\") == \"999\"\nassert solution(\"17\") == \"2016\"\n\nIn the second example 16 could be obtained by converting two numbers to the system with base 17: 16 = 16\u00b717^0 or 19 = 1\u00b717^1 + 0\u00b717^0.\n\"\"\"\n\nn = int(input())\nk = input()\nfor i in range(n):\n    k = str(bin(int(k)))[2:]\n    if len(k) < n:\n        k = '0' + k\nprint(k)\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('13') == '12'\nassert solution('12') == '12'\nassert solution('16') == '11311'\nassert solution('2016') == '475'\nassert solution('20') == '3789'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n') == 'YES'\nassert solution('3\\n3\\n') == 'NO'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == 'YES'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'NO'\nassert solution('1 2 3 4 5 6 7') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 2\\n') == 'YES'\nassert solution('3 3 3 3 3 3 3\\n') == 'NO'\nassert solution('4\\n1 2 1 2\\n') == 'YES'\nassert solution('7\\n3 3 3 3 3 3 3\\n') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 5 5 4 2') == 'YES'\nassert solution('5') == 'NO'\nassert solution('10 20 30 20 10') == 'YES'\nassert solution('10 1 1 1 1 1 1 1') == 'NO'\nassert solution('3 3 3 3 3 3 3') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 5 5 5 4 2\\n') == 'YES'\nassert solution('1 2 1 2\\n') == 'YES'\nassert solution('4\\n1 2 1 2\\n') == 'NO'\nassert solution('7\\n3 3 3 3 3 3 3\\n') == 'YES'\nassert solution('3\\n3 3 3 3\\n') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == 'YES'\nassert solution(\"1 2 3 4 5 6\") == 'NO'\nassert solution(\"1 2 3 4 5 6 7\") == 'NO'\nassert solution(\"1 2 3 4 5 6 7 8\") == 'NO'\nassert solution(\"1 2 3 4 5 6 7 8 9\") == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 5 5 5 4 2\n''') == 'YES'\nassert solution('''5\n10 20 30 20 10\n''') == 'YES'\nassert solution('''4\n1 2 1 2\n''') == 'NO'\nassert solution('''7\n3 3 3 3 3 3 3\n''') == 'YES'\nassert solution('''8\n3 3 3 3 3 3 3 3\n''') == 'NO'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"NO\"\nassert solution(\"2\\n3\") == \"NO\"\nassert solution(\"1\\n4\") == \"NO\"\nassert solution(\"2\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n2\\n3\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5 5 5 4 2') == 'YES'\nassert solution('3 3 3 3 3 3 3') == 'NO'\nassert solution('6') == 'YES'\nassert solution('3 3 3 3 3 3 3') == 'YES'\nassert solution('10') == 'NO'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom math import log10, ceil"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('11 3\\n') == '5'\nassert solution('11 6\\n') == '4'\nassert solution('20 20\\n') == '1'\nassert solution('14 5\\n') == '6'\nassert solution('1000000 100\\n') == '31248'\n\n\"\"\""
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 3') == '5'\nassert solution('20 10') == '1'\nassert solution('10 100') == '31248'\nassert solution('14 5') == '4'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''11 3''') == '5'\nassert solution('''11 6''') == '4'\nassert solution('''20 20''') == '1'\nassert solution('''14 5''') == '6'\nassert solution('''1000000 100''') == '31248'\n'''\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11 3\n''') == '5'\nassert solution('''11 6\n''') == '4'\nassert solution('''20 20\n''') == '1'\nassert solution('''14 5\n''') == '6'\nassert solution('''1000000 100\n''') == '31248'\n\n\n\"\"\"\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 2 2 -1 1''') == '0 0'\nassert solution('''4 4 2 0 1 1''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1''''\n'''\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3 2 2 -1 1''') == '0 0'\nassert solution('''4 4 2 0 1 1''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1'\nassert solution('''10 10 10 1 0 0''') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == '-1'\nassert solution('3 3 3 1 3 3 3 3 3 3') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 3 2 2 -1 1'''\n) == '0 0'\nassert solution(\n'''4 4 2 0 1 1'''\n) == '-1'\nassert solution(\n'''10 10 10 1 -1 0'''\n) == '-1'\n\nassert solution(\n'''12 11 10 8 4 2 1'''\n) == '8 4'\nassert solution(\n'''12 11 10 8 4 2'''\n) == '8 4'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-\"\nassert solution(\"10 10 10 1 -1 0\") == \"-\"\nassert solution(\"10 10 10 1 1 1\") == \"-\"\nassert solution(\"10 10 10 -1 0 1\") == \"-\"\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nprint(solution(input()))\n\"\"\"\n\nimport sys\n\nn, m, x, y, vx, vy = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\n'''\n\nn, m, x, y, vx, vy = map(int, stdin.split())"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3\n2 1''') == 'YES'\nassert solution('''5 5\n3 3\n3 3''') == 'NO'\nassert solution('''4 2\n2 3\n1 2\n''') == 'YES'\nassert solution('''4 2\n3 3\n2 1\n''') == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_content) == output_content\n\"\"\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\n\n\n-----"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('5 5') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('2 3') == 'YES'\nassert solution('1 2') == 'YES'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''5 5''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''2 3''') == 'YES'\nassert solution('''1 2''') == 'YES'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 2'''\n) == 'YES'\n\nassert solution(\n'''5 3'''\n) == 'NO'\n\nassert solution(\n'''4 2'''\n) == 'YES'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n\nassert solution('''5 22 32 14 -3''') == 'inf'"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nb_1, q, l, m = map(int, stdin.split())\na_1, a_2, a_3 = map(int, stdin.split())\na_m = [int(i) for i in stdin.split()]\n\na_m = [abs(i) for i in a_m if abs(i) <= l]\nn = len(a_m)"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 30 4\\n6 14 25 48\\n') == '3'\nassert solution('123 1 2143435 4\\n123 11 -5453 141245\\n') == '0'\nassert solution('123 1 2143435 4\\n54343 -13 6 124\\n') == 'inf'\nassert solution('123 1 2143435 4\\n123 11 -5453 141245\\n') == 'inf'\nassert solution('123 1 2143435 4\\n54343 -13 6 124\\n') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"6 14 25 48\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"0\"\nassert solution(\"123 11 -5453 141245\") == \"inf\"\n\nassert solution(\"123 1 2143435 4\") == \"0\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4''') == '3'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == 'inf'\nassert solution('''123 1 2143435 4''') == '3'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 4 5 6') == 'inf'\nassert solution('1 2 3 4 5 6') == '3'\nassert solution('1 2 3 4 5 6 7') == 'inf'\nassert solution('1 2 3 4 5 6 7 8') == 'inf'\nassert solution('1 2 3 4 5 6 7 8 9') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3 2 30 4\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"6 14 25 48\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"6 14 25 48\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"6 14 25 48\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"6 14 25 48\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\nw..\\n.w...\\n....\\n.w...\\n.w...\\n') == 'w++w..\\n.+..+..\\n+.+..+..\\n++w++w..'\nassert solution('3 6\\nw..w.w\\n....w..\\n.w...\\n.w...\\n.w...\\n.w...\\n') == '-1'\nassert solution('3 4\\nw..\\n.w....\\n.w....\\n.w....\\n.w....\\n') == '....\\n.w....\\n....'\nassert solution('2 4\\n....\\n.w....\\n.w....\\n') == '....\\n.w....\\n....'\nassert solution('2 6\\nw..w.w\\n....w..\\n.w...\\n.w...\\n.w...\\n.w...\\n') == '-1'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 8\n..w..w..\n........\n........\n..w..w..\n''') == '''..w++w..\n..+..+..\n..+..+..\n..w++w..'''\n\nassert solution('''5 6\n......\n.w....\n......\n..w...\n......\n''') == '''......\n+w+...\n+.+...\n++w...\n......'''\n\nassert solution('''2 4\n....\n.w..\n''') == '''....\n.w..\n'''\n\nassert solution('''2 6\nw..w.w\n...w..\n''') == '''-1'''\n\nassert solution('''5 6\n..w....\n.w....\n..w....\n.w....\n..w....\n''') == '''......\n+w+...\n.+...\n..+...\n.+...\n..+...'''"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n.w') == '..w..'\nassert solution('2 3\\nw\\nw\\n.w') == '..w++w..'\nassert solution('1 3\\nw\\n.w') == '..w++w..'\nassert solution('2 5\\nw\\nw\\nw\\nw\\nw\\n.w') == '..w++w++w++w++w++w++w..'\nassert solution('3 4\\n..w\\nw\\nw\\nw\\n.w') == '..w++w++w++w++w++w++w++w++w++w++w..'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4\\n....\\nw..\\n...') == '....\\nw..\\n...\\n..w..\\n.+..+..\\n..+..+..\\n..w++w..\\n..+..+..\\n..+..+..\\n..w++w..'\nassert solution('2 6\\nw..w.w\\n...w..\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n') == '......\\n.+...\\n...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.....\\n.....\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\nw.+...\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n.....\\n.+...+...\\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom io import StringIO\nfrom unittest import TestCase\n\nfrom solutions.kyu_8.innocentius_has_a_problem import solution\n\nclass TestSolution(TestCase):\n    def test_1(self):\n        inp = StringIO(\"\"\"4 8\n..w..w..\n........\n........\n..w..w..\n\"\"\")\n        out = StringIO(\"\"\"..w++w..\n..+..+..\n..+..+..\n..w++w..\n\"\"\")\n        self.assertEqual(solution(inp), out.read())\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 8\n..w..w..\n........\n........\n..w..w..\n''') == '''..w++w..\n..+..+..\n..+..+..\n..w++w..\n'''\nassert solution('''5 6\n......\n.w....\n......\n..w...\n......\n''') == '''...\n.w..\n+.+..\n++w...\n......\n'''\nassert solution('''2 4\n....\n.w..\n''') == '''....\n.w..\n'''\nassert solution('''2 6\nw..w.w\n...w..\n''') == '''-1'''\nassert solution('''8 16\n....\n..wwwwwwwwwwwwwwwwwww.\n.www.w..wwww.w.wwwwwww\nwwwwwwwwwwwwwww.w.w.www\n.www.www.www.wwww.w.w\n.www.www.www.www.w.w\n.www.w.www.w.www.w.w\n.www.w.www.w.wwww.w\n.www.wwww.w.www.w.w\n.www.wwww.w.w.www.w\n.www.w.www.w.wwww.w\n.www.w.w.www.w.w.w\n''') == '''....\n.wwwwwwwwwwwwwwwww\n.www.w.www.w.wwww.w\n.www.w.www.w.www.w.w\n.www.w.www.w.www.w.w\n.www.w.www.w.www.w.w\n.www.w.www.w.wwww.w\n.www.w.wwww.w.www.w\n.www.w.www.w.www.w.w\n.www.w.www.w.w.www.w\n.www.w.w.www.w.www.w\n'''\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 4\"\n) == \"...\\nw...\\n...\"\n\nassert solution(\n    \"3 6\"\n) == \"..w..\\nw..\\n..w..\\nw..\\nw..\"\n\nassert solution(\n    \"2 6\"\n) == \"..w..\\nw..\\n..w..\"\n\nassert solution(\n    \"3 4\"\n) == \"....\\nw....\\n....\"\n\nassert solution(\n    \"5 7\"\n) == \"....w....\\nw....\\nw....\\nw....\\nw....\""
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n..w..w..\n........\n........\n..w..w..\n''') == '..w++w..\\n..+..+..\\n..+..+..\\n..w++w..'\nassert solution('''2 4\n....\n.w..\n''') == '....\\n.w..'\nassert solution('''2 6\nw..w.w\n...w..\n''') == '-1'\nassert solution('''4 6\n..w..w..\n....w..\n...w..\n...w..\n''') == '..w++w..\\n+.+..+..\\n++w...\\n..+...'\nassert solution('''2 4\n..w...\n.w..\n''') == '..w++w..\\n..+..+..\\n..+..+..\\n..w++w..'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 8\n..w..w..\n........\n........\n..w..w..\n''') == '..w++w..\\n..+..+..\\n..+..+..\\n..w++w..'\n\nassert solution('''5 6\n....\n.w..\n....\n..w..\n....\n''') == '....\\n.w..\\n....\\n.w..\\n....'\n\nassert solution('''2 4\n....\n.w..\n....\n''') == '....\\n.w..'\n\nassert solution('''2 6\nw..w.w\n...w..\n''') == '-1'\n\nassert solution('''3 3\n..w.w\n.w..w\n..w..w\n''') == '..w.w'"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == 'YES'\nassert solution('100') == 'YES'\nassert solution('15') == 'NO'\n\n'''\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n25\\n10') == 'YES\\n0 10'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('9960594\\n2551\\n2557') == 'NO'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"YES\\n2 1\"\nassert solution(\"100\") == \"YES\\n1951 1949\"\nassert solution(\"15\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n7\n2\n3\n\"\"\") == \"\"\"YES\n2 1\"\"\"\n\nassert solution(\n\"\"\"\n100\n25\n10\n\"\"\") == \"\"\"YES\n1951 1949\"\"\"\n\nassert solution(\n\"\"\"\n9960594\n2551\n2557\n\"\"\") == \"\"\"NO\"\"\"\n\nassert solution(\n\"\"\"\n100\n2\n3\n\"\"\") == \"\"\"YES\n2 1\"\"\"\n\nassert solution(\n\"\"\"\n2\n3\n\"\"\") == \"\"\"NO\"\"\""
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == 'YES\\n2 1'\nassert solution('100') == 'YES\\n1951 1949'\nassert solution('15') == 'NO'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"7\\n2\\n3\\n\") == \"YES\\n2 1\"\nassert solution(\n\"100\\n25\\n10\\n\") == \"YES\\n1951 1949\"\nassert solution(\n\"9960594\\n2551\\n2557\\n\") == \"YES\\n1951 1949\"\n\n\"\"\"\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7\n2\n3\n''') == 'YES'\nassert solution('''100\n25\n10\n''') == 'YES'\nassert solution('''9960594\n2551\n2557\n''') == 'YES'\nassert solution('''15\n4\n8\n''') == 'NO'\nassert solution('''100\n25\n10\n''') == 'YES'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7''') == 'YES'\nassert solution('''100''') == 'YES'\nassert solution('''9960594''') == 'YES'\nassert solution('''2551''') == 'YES'\nassert solution('''2557''') == 'NO'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(6) == \"six\"\nassert solution(99) == \"ninety-nine\"\nassert solution(20) == \"twenty\"\nassert solution(40) == \"forty\"\nassert solution(50) == \"fifty\"\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n\nprint('Test success!')\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == 'four'\nassert solution('20') == 'twenty'\nassert solution('99') == 'ninety-nine'\nassert solution('4') == 'four'\nassert solution('99') == 'ninety-nine'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\nassert solution(\"42\") == \"forty-two\"\nassert solution(\"99\") == \"ninety-nine\"\n\"\"\"\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\nassert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('5') == 'five'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-'\nassert solution('0') == '-'\nassert solution('1') == '-'\nassert solution('2') == '-'\nassert solution('3') == '-'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\n\n\n\"\"\""
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(6) == \"six\"\nassert solution(99) == \"ninety-nine\"\nassert solution(20) == \"twenty\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '1'\nassert solution('1\\n3') == '1'\nassert solution('2\\n998') == '1'\nassert solution('2\\n999') == '2'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '1'\nassert solution('2\\n4\\n') == '1'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8\\n1 3 4 5 6 7 8 9') == '2'\nassert solution('3\\n1 2 3') == '0'\nassert solution('5\\n1 2 3 4 5') == '4'\n\n\n-----Hint-----\n\nYou can use a sliding window to keep track of the length of the array you are working on. You can use a for loop to traverse the array and keep track of the current length of the array you are working on.\n\"\"\"\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 4 5 6\\n') == '2'\nassert solution('3\\n998 999 1000\\n') == '2'\nassert solution('1\\n1 2 3 4 5\\n') == '0'\nassert solution('2\\n998 999 1000\\n') == '4'\nassert solution('6\\n1 3 4 5 6 9\\n') == '2'\n\n\n\nThe judge will pick a random array, write a solution, and ask for the solution.\n\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '0'\nassert solution('3\\n1 3 4\\n') == '2'\nassert solution('4\\n1 2 3 4\\n') == '2'\nassert solution('4\\n9 7 8 7\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '4'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"99\") == \"\"\nassert solution(\"999\") == \"\"\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 3 4 5 6 9') == '2'\nassert solution('3\\n998 999 1000') == '2'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '0'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n1 3 4 5 6 9\\n') == '2\\n'\nassert solution('3\\n998 999 1000\\n') == '2\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '4\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '4\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n') == '0\\n'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 4 5') == '2'\nassert solution('5\\n1 3 4 5 6 9') == '2'\nassert solution('6\\n1 3 4 5 6 9') == '2'\nassert solution('7\\n1 3 4 5 6 9 7') == '2'\nassert solution('8\\n1 3 4 5 6 9 7 8') == '2'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 3 2 1''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''6\n1 1 1 1 1 1''') == '2'\nassert solution('''5\n2 2 2 2 2''') == '4'\nassert solution('''7\n2 2 2 2 2 2''') == '4'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4''') == ''\nassert solution('''6''') == ''\nassert solution('''10''') == ''\nassert solution('''15''') == ''\nassert solution('''2''') == ''\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 2 1') == '2'\nassert solution('6\\n2 2 2 2 2 2') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == ''\n\n\"\"\"\n\nN = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\nc = 0\n\nfor i in range(N):\n    c += a[i]\n    if c >= N/2:\n        break\n\nprint(i+1)\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 2 1\n''') == '2'\nassert solution('''\n6\n2 2 2 2 2 2\n''') == '3'\nassert solution('''\n6\n2 2 2 2 2 2\n''') == '3'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n2\n1\n''') == '1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '''1 1'''\nassert solution('''8''') == '''3 3'''\nassert solution('''5''') == '''3 3'''\nassert solution('''4''') == '''3 4'''\nassert solution('''8\n1 9 3\n8 6 7\n4 2 5''') == '''12 1'''\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '6 0'\nassert solution('7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n1 2 3 4 5 6 7\\n') == '21 19'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n') == '32 30'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n1 2 3 4 5 6 7 8 9\\n') == '43 22'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '0 1'\nassert solution('''8 3 1''') == '5 4'\nassert solution('''8 6 7''') == '11 3'\nassert solution('''4 2 5''') == '4 2'\nassert solution('''3''') == '0 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '''12 1'''\nassert solution('''3''') == '''12 1'''\nassert solution('''10''') == '''56 28'''\nassert solution('''10''') == '''56 28'''\nassert solution('''7''') == '''24 92'''\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '1 2'\nassert solution('''1''') == '0'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\nassert solution('''2''') == '5'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"2 2\") == \"2 1\"\nassert solution(\"2 3\") == \"2 2\"\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '''12 1'''\nassert solution('''8''') == '''12 1'''\nassert solution('''9''') == '''12 1'''\nassert solution('''10''') == '''12 1'''\nassert solution('''14''') == '''13 1'''\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8\\n1 9 3\\n8 6 7\\n4 2 5') == '12 1'\nassert solution('3\\n1 9 3\\n8 6 7\\n4 2 5') == '12 1'\nassert solution('2\\n1 9 3\\n8 6 7\\n4 2 5') == '2 3'\nassert solution('2\\n1 9 3\\n8 6 7\\n4 2 5') == '2 1'\nassert solution('2\\n1 9 3\\n8 6 7\\n4 2 5') == '2 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\n\"\"\"\n"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"1010\") == \"yes\"\nassert solution(\"101100100101001010100000100001011\") == \"yes\"\nassert solution(\"110010100001100101101101\") == \"yes\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"01000000\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"101\") == \"no\"\nassert solution(\"10\") == \"no\"\nassert solution(\"0\") == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"1000\") == \"yes\"\nassert solution(\"010001\") == \"yes\"\nassert solution(\"11\") == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('100000001') == 'yes'\nassert solution('1000000') == 'no'\nassert solution('1') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"101010111\") == \"no\"\nassert solution(\"100010101\") == \"yes\"\nassert solution(\"11111111\") == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'yes'\nassert solution('100') == 'no'\nassert solution('1000') == 'yes'\nassert solution('10100') == 'yes'\nassert solution('111111100') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\""
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('0') == 'no'\nassert solution('1') == 'no'\nassert solution('101') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(100010001) == \"yes\"\nassert solution(100) == \"no\"\nassert solution(\"100\") == \"no\""
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"00001\") == \"yes\"\nassert solution(\"10000010001\") == \"yes\"\nassert solution(\"0\") == \"yes\"\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(aacceeggiikkmmooqqssuuwwyy) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(thereisnoanswer) == '-1'\n\n\n\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(stdin) == '-1'\n\"\"\"\nfrom itertools import permutations\nfrom collections import Counter"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aacceegiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aaaaaaaaaaaaaaa') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(aacceeggiikkmmooqqssuuwwyy) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aaaaaaaaa') == '-1'\nassert solution('aaaabbbbbccccc') == '-1'\nassert solution('bbbbbbbbbb') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('thereisnooanswer') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('theqrnslaolwjmzahdvw') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(aacceeggiikkmmooqqssuuwwyy) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('mmmllqrrqk') == '-1'\nassert solution('bssscccq') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 3\") == \"2.0000000000\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\nassert solution(\"12 17 9 40\") == \"32.8333333333\"\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\nassert solution('1 1 1 1') == '1.0000000000'\nassert solution('1 1 1 10') == '10.0000000000'\nassert solution('3 3 2 3') == '2.0000000000'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 2 3\\n') == '2.0000000000'\nassert solution('12 17 9 40\\n') == '32.8333333333'\nassert solution('2 1\\n') == '2.0000000000'\nassert solution('9 9 7 7\\n') == '18.6714285714'\nassert solution('4 10 3 4\\n') == '3.33333333333'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2.0000000000'\nassert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\nassert solution('12 19 17 20') == '32.8333333333'\nassert solution('5 10 1 3') == '32.8333333333'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 2 3''') == '2.0000000000'\nassert solution('''12 17 9 40''') == '32.8333333333'\n'''"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2.0000000000'\nassert stdin == '3 5 2 3\\n'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, r, k = map(int, stdin.split())"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3 2 3\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"12 17 9 40\"\"\") == \"32.8333333333\"\n\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2 3''') == '2.0000000000'\nassert solution('''12 17 9 40''') == '32.8333333333'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''0''') == '0'\nassert solution('''3\n-3 -3 2''') == '-3 -3 2'\nassert solution('''1''') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '0'\nassert solution('4\\n') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''4\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''6\n-3 -3 2 2 2 2''') == '-3 -3 2 2 2 2'\nassert solution('''3\n0''') == '0'\nassert solution('''3\n-3 -3 2''') == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 2 2 2\") == \"-3 -3 -3 -3\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"3\\n-3 -3 2\") == \"-3 -3 2\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"3\\n-3 -3 2\") == \"-3 -3 2\"\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nprint(solution('8\\n-3 -3 2 -1 2 -2 -2 -2 3 -2 -1 -1 -2 -3 -4 -3\\n'))\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n0') == '0'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('2\\n1 1') == '-1'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('2\\n0\\n') == '0'\nassert solution('2\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n-3 -3 2\\n') == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('1\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '-3 -3 2'\nassert solution('2\\n1 2') == '-3 -3'\nassert solution('4\\n1 2 3 4') == '-3 -3 2'\nassert solution('1\\n0') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''1\n0''') == '0'\nassert solution('''3\n-3 -3 2''') == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('4\\n2 2 2 2\\n') == '-3 -3 -3 -3'\n\n\n\n'''\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 3''') == '-1'\nassert solution('''12 5''') == '6'\nassert solution('''300 707''') == '592'\nassert solution('''10 4''') == '4'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"12 5\") == \"6\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"5 4\") == \"-1\"\nassert solution(\"12 3\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('11 17') == '-1'\nassert solution('1 1000000') == '1'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"10 1\") == \"1\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"-1\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 5\") == \"6\"\n\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('4 3') == '-1'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 3''') == '-1'\nassert solution('''12 5''') == '6'\n\n\n'''\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('6 4') == '2'\nassert solution('9 7') == '-1'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 2 3 4 5') == 87\nassert solution('6 7 8 9 0 1') == 98\nassert solution('2 3 4 5 6 7') == 98\n\n\"\"\"\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\nassert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9') == '98'\nassert solution('3\\n3 0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0') == '98'\nassert solution('2\\n0 1 2 3 4 5\\n6 7 8 9 0 1') == '0'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\n\n\n\n'''\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '8'\nassert solution('7') == '12'\nassert solution('8') == '18'\nassert solution('9') == '27'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('4\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n8 0 2 4 6 8\\n') == '0'\nassert solution('5\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n8 9 0 1 3 4\\n') == '2'\nassert solution('6\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n8 9 0 1 3 4\\n9 0 1 2 3 4\\n') == '2'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '98'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '87'\nassert solution('5') == '98'\nassert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('10\\n0 1 3 5 6 8\\n9 2 4 5 7 8\\n2 3 4 6 7 9\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 0\\n') == '0'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\n\n\n\"\"\"\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('2\\n0 1 2 3 4 5\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n') == '0'\nassert solution('2\\n0 1 2 3 4 5\\n3 4 5 6 7 8\\n') == '0'\nassert solution('1\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"375 4\") == \"30000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"38101 0\") == \"38101\"\nassert solution(\"123456789 8\") == \"12345678900000000\"\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n375\\n4') == '30000'\nassert solution('10000\\n0\\n4') == '10000'\nassert solution('38101\\n0\\n4') == '38101'\nassert solution('123456789\\n8\\n4') == '12345678900000000'\n\nprint(solution(input()))"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n375 4\n\"\"\".strip()) == \"30000\"\n\nassert solution(\n\"\"\"\n10000 1\n\"\"\".strip()) == \"10000\"\n\nassert solution(\n\"\"\"\n38101 0\n\"\"\".strip()) == \"38101\"\n\nassert solution(\n\"\"\"\n123456789 8\n\"\"\".strip()) == \"12345678900000000\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1 3\") == \"4\"\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n1\n    \"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1\n2\n    \"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n2\n0\n    \"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3\n0\n    \"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n4\n0\n    \"\"\"\n) == \"4\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n') == '3'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n') == '0'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0'\nassert solution('3 2\\n1 1 1\\n1 1 1\\n0 0 0\\n') == '-1'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '-1'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == \"3\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '-1'\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"1 1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"0 1 0\") == \"0 1 1\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 1 1 0\\n1 1 1 0\\n0 1 1 1\\n1 1 1 1\") == \"2\"\nassert solution(\"3 3\\n1 1 1 0\\n1 1 1 0\\n0 1 1 1\\n1 1 1 1\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == '3'\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\\n\") == '-1'\n\"\"\""
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n0 0\\n0 0') == '0'\nassert solution('0 1\\n0 0\\n0 0') == '0'\nassert solution('0 0\\n0 0\\n0 0') == '-1'\nassert solution('1 0\\n0 0\\n0 0') == '-1'\nassert solution('0 1\\n0 0\\n0 0') == '0'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''3 2\n1 1 1\n1 1 1\n0 1 1\n''') == '0'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10000)\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 3\\n1 0 1\\n1 0 1\\n0 0 0\") == \"-1\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 3\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\nassert solution(\"3 3\\n0 0\\n0 0\\n0 0\\n0 0\") == \"0\"\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0.057142857143 0.657142857143 0.285714285714'\nassert solution('2 1 3') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('1 1 3') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('100 100 100') == '0.0000000000000000 0.0000000000000000 0.0000000000000000'\nassert solution('1000000 1000000 1000000') == '0.0000000000000000 0.0000000000000000 0.0000000000000000'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333\\n'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000\\n'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714\\n'"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 2''') == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution('''2 1 2''') == \"0.150000000000 0.300000000000 0.550000000000\"\nassert solution('''1 1 3''') == \"0.057142857143 0.657142857143 0.285714285714\""
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\nassert solution('2 3 2') == '0.181818181818 0.181818181818 0.1818181818182'\nassert solution('2 2 1') == '0.181818181818 0.1818181818182 0.1818181818182'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\") == \"0.333333333333 0.333333333333 0.333333333333\"\nassert solution(\"2 1 2\") == \"0.150000000000 0.300000000000 0.550000000000\"\nassert solution(\"1 1 3\") == \"0.057142857143 0.657142857143 0.285714285714\"\n\"\"\"\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''2 2 2'''\n) == '0.333333333333 0.333333333333 0.333333333333'\n\nassert solution(\n'''2 1 2'''\n) == '0.150000000000 0.300000000000 0.550000000000'\n\nassert solution(\n'''1 1 3'''\n) == '0.057142857143 0.657142857143 0.285714285714'\n\nassert solution(\n'''1000 0 0'''\n) == '0.0 0.0 0.0'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.333333333333 0.333333333333 0.333333333333'\n\n\n-----\n\n## SOLUTION\n\n'''\n\n'''\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 100 50 200 75') == '50'"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 10 9 0 0 0\") == \"0\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 100 50 200 75') == '50'\n\"\"\"\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n\"\"\""
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0\\n0 1 1\\n0 2 2\") == \"13\"\nassert solution(\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\") == \"13\"\nassert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\") == \"13\"\nassert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\") == \"13\"\nassert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\") == \"13\"\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4'''\n) == '13'\n\nprint(solution(\n'''1\n-2 2\n-1 -2'''\n))\nassert solution(\n'''1\n-2 2\n-1 -2'''\n) == 'INF'\nprint(solution(\n'''1\n-2 2\n-1 -2'''\n))\nassert solution(\n'''1\n-2 2\n-1 -2'''\n) == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\n\"\"\"\nfrom itertools import chain\nfrom math import sqrt, inf\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n\") == \"13\"\nprint(solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n\"))"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 -3 4 5\\n2 -3 4 5') == '13'\nassert solution('2 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()\n\n\"\"\""
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n8 9 7 8\\n9 10 8 9\\n10 11 7 10\\n11 12 6 11\\n12 13 5 12') == 'INF'\nassert solution('4 5\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == 'INF'\nassert solution('4 5\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == 'INF'\nassert solution('4 5\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\n\nassert solution('3 2\\n0 1 1\\n0 2 2\\n0 0 0\\n1 0 1\\n1 1 1') == 'INF'\nassert solution('4 4\\n0 1 1\\n0 2 2\\n0 0 0\\n1 0 1\\n1 1 1\\n-2 2 1\\n-2 3 2\\n1 0 1\\n0 1 2\\n2 0 2\\n1 1 2') == '13'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == 'INF'\nassert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 -2 -2') == 'INF'\nassert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 1 1') == 'INF'\nassert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 1 1') == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\n\"\"\"\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10 4\\n') == 'NO'\nassert solution('3 10 3\\n') == 'YES'\nassert solution('3 8 51\\n') == 'YES'\nassert solution('3 8 52\\n') == 'YES'\nassert solution('3 8 99\\n') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\n\n\n\n'''\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\n'''"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 9 0') == 'NO'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 8 53') == 'NO'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 0') == 'YES'\nassert solution('1 1 2') == 'NO'\nassert solution('10 0 1') == 'YES'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''5\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''1\n1 100\n''') == '-1 -1'\n\n\n-----"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''1\n3\n2\n''') == '2 1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\n\n'''"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n'''\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''2\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''6\n1 5\n2 6\n6 20\n''') == '2 1'\n\nassert solution('''6\n1 5\n2 6\n6 20\n''') == '-1 -1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('2\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'\nassert solution('3\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('3\\n1 10\\n2 9\\n6 20\\n') == '-1 -1'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''\n3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '1 1'\nassert solution('''\n5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''1\n1 10\n''') == '-1 -1'\n\nassert solution('''1\n1 10\n''') == '-1 -1'\n\nassert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9''') == '2 1'\n\nassert solution('''5\n1 2\n1 2\n2 4\n2 5\n1 5\n''') == '1 1'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n1 5\n''') == '-1 -1'\n\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '1 3'\n\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '-1 -1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''6\n1 5\n2 6\n6 20\n10 22\n10 24\n''') == '2 1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '2 1'\nassert solution('''3''') == '-1 -1'\nassert solution('''2''') == '1 2'\nassert solution('''4''') == '-1 -1'\nassert solution('''7''') == '4 5'\n'''"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\nAG?C??CT''') == 'AGACGTCT'\nassert solution('''4\nAGCT''') == 'AGCT'\nassert solution('''6\n????G?''') == '==='\nassert solution('''4\nAA??''') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n8\nAG?C??CT\n'''\n) == 'AGACGTCT'\n\nassert solution(\n'''\n4\nAGCT\n'''\n) == 'AGCT'\n\nassert solution(\n'''\n6\n????G?\n'''\n) == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ACGT') == 'ACGT'\nassert solution('???GG') == '==='\nassert solution('?AG?') == '==='\nassert solution('??G') == '==='\nassert solution('G?C') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A?C??CT') == 'AGACGTCT'\nassert solution('AA??') == 'AGACGTCT'\nassert solution('????G?') == '==='\nassert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AA??') == 'AGACGTCT'\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8\\nAG?C??CT') == 'AGACGTCT'\nassert solution('4\\nAGCT') == 'AGACGTCT'\nassert solution('6\\n????G?') == '==='\nassert solution('3\\n?C??') == '==='\nassert solution('6\\n?C?G') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('?*(C' == 'C?')\nassert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('GGGTC?A??') == 'GGAACGTA'\nassert solution('???GGGTCA') == '?==='\nassert solution('??T??G??TCA') == '?==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\nAG?C??CT''') == 'AGACGTCT'\nassert solution('''4\nAGCT''') == 'AGCT'\nassert solution('''6\n????G?''') == '==='\nassert solution('''4\nAA??''') == '==='\nassert solution('''9\nAAAAA?AAAA''') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8') == 'AGACGTCT'\nassert solution('4') == 'AGCT'\nassert solution('6') == '==='\nassert solution('????') == '==='\nassert solution('AAAA') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AGCT') == 'AGCT'\nassert solution('????G?') == '==='\nassert solution('AA??') == '==='\nassert solution('?A??') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n8\nAG?C??CT\n\"\"\") == \"\"\"\nAGACGTCT\n\"\"\"\n\nassert solution(\n\"\"\"\n4\nAGCT\n\"\"\") == \"\"\"\nAGCT\n\"\"\"\n\nassert solution(\n\"\"\"\n6\n????G?\n\"\"\") == \"\"\"\n===\n\"\"\"\n\nassert solution(\n\"\"\"\n4\nAA??\n\"\"\") == \"\"\"\n===\n\"\"\"\n\n\n\n\"\"\"\nfor _ in range(int(stdin.readline())):\n    n = int(stdin.readline())\n    d = stdin.readline()\n    s = ''.join(c for c in d if c in 'ATGC?')\n    s = s.replace('?', 'A')\n    print(s)\n\n\n\"\"\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xx..\\n.oo.\\nx...\\noox.\\n') == 'YES'\nassert solution('x.ox\\noo..\\nx.o.\\noo.x\\n') == 'NO'\nassert solution('o.x.\\no...\\n.x..\\nooxx\\n') == 'NO'\nassert solution('x..x\\n..oo\\no...\\nx.xo\\n') == 'YES'\n\"\"\"\nfrom itertools import zip_longest\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"x..\\n.oo.\\nx...\\noox.\") == \"YES\"\nassert solution(\"x.ox\\nox..\\nx.o.\\no.x\\n\") == \"YES\"\nassert solution(\"o.x.\\no...\\n.x..\\nooxx\\n\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"..o\") == \"YES\"\nassert solution(\"..x\") == \"NO\"\nassert solution(\"ox..\") == \"NO\"\nassert solution(\"ox.o\") == \"YES\"\nassert solution(\"..ox\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oox\") == \"NO\"\nassert solution(\"xox\") == \"NO\"\nassert solution(\"ox..\") == \"NO\"\nassert solution(\"...o\") == \"NO\"\nassert solution(\"oxx.\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('x..\\nx..\\nx..\\nx..') == 'YES'\nassert solution('oox\\nox..\\nox..\\nox..') == 'NO'\nassert solution('x.ox\\nox..\\nx.o.\\noo.x') == 'YES'\nassert solution('o.x.\\noo.x\\noo.x\\noo.x') == 'NO'\nassert solution('x..x\\n..oo\\nx..x\\nx..x') == 'YES'\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''xx..\n.oo.\nx...\noox.\n''') == 'YES'\nassert solution('''x.ox\no...\n.x..\nooxx\n''') == 'NO'\nassert solution('''o.x.\no...\n.x..\nooxx\n''') == 'NO'\nassert solution('''x..x\n..oo\no...\nx.xo\n''') == 'YES'\nassert solution('''o.x.\no...\n.x..\nooxx\n''') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('xx..\\n.oo.\\nx...\\noox.\\n') == 'YES'\nassert solution('x.ox\\no...\\n.x..\\nooxx\\n') == 'NO'\nassert solution('o.x.\\no...\\n.x..\\nooxx\\n') == 'NO'\nassert solution('x..x\\n..oo\\no...\\nx.xo\\n') == 'YES'\nassert solution('x..x\\n..oo\\no...\\nx.xo\\n') == 'YES'\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"xx..\\n.oo.\\nx...\\noox.\") == \"YES\"\nassert solution(\"x.ox\\noo..\\nx.o.\\noo.x\") == \"NO\"\nassert solution(\"o.x.\\no...\\n.x..\\nooxx\") == \"NO\"\nassert solution(\"x..x\\n..oo\\no...\\nx.xo\") == \"YES\"\n\n\n\n'''\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\nxx..\n.oo.\nx...\noox.\n''') == \"YES\"\n\nassert solution('''\nx..x\n..oo\no...\nx.xo\n''') == \"YES\"\n\nassert solution('''\no.x.\no...\n.x..\nooxx\n''') == \"NO\"\n\nassert solution('''\nx..x\n..oo\no...\nx.xo\n''') == \"NO\"\n'''\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\nxx..\n.oo.\nx...\noox.\n''') == 'YES'\nassert solution('''\nx.ox\no...\n.x..\nooxx\n''') == 'NO'\nassert solution('''\nx..x\n..oo\no...\nx.xo\n''') == 'YES'\nassert solution('''\no.x.\no...\n.x..\nooxx\n''') == 'NO'\nassert solution('''\no.x.\no...\n.x..\nooxx\n''') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == 'YES'\nassert solution('5') == 'NO'\nassert solution('2 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('2 1 3 4 5') == 'NO'\n\n\n-----\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 2''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''5\n2 2 3 4 5''') == 'YES'\nassert solution('''6\n1 2 3 4 5 6''') == 'NO'"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('3\\n1 3 2') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('3\\n2 2 3 4 5') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3 2\\n') == 'YES'\nassert solution('1\\n2 3\\n') == 'NO'\nassert solution('1\\n2 3\\n') == 'YES'\nassert solution('1\\n2 2\\n') == 'YES'\nassert solution('1\\n1 2\\n') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3\n1 3 2\n'''\n) == 'YES'\n\nassert solution(\n'''5\n1 2 3 4 5\n'''\n) == 'NO'\n\nassert solution(\n'''5\n2 2 3 4 5\n'''\n) == 'YES'\n\nassert solution(\n'''5\n2 2 3 4 1\n'''\n) == 'NO'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('2\\n3') == 'NO'\nassert solution('2\\n4') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 2\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'\nassert solution('''5\n1 2 2 3 4 5\n''') == 'NO'\nassert solution('''5\n1 2 3 4 4 5\n''') == 'NO'\n'''\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'YES'\nassert solution('1') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2') == 'YES'\nassert solution('2\\n2\\n2') == 'NO'\nassert solution('5\\n1 2 3 4 5') == 'YES'\nassert solution('5\\n2 2 3 4 5') == 'NO'\nassert solution('3\\n1 3 2') == 'YES'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 2\n11 0 0 14\n5 4\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"6 1\n2 3 0 8 9 10\n5\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n11 0 0 14\n5 4''') == 'Yes'\nassert solution('''6 1\n2 3 0 8 9 10\n5\n''') == 'Yes'\nassert solution('''4 1\n8 94 0 4\n89''') == 'No'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'\nassert solution('''2 4\n1 2 1 3 4\n6\n''') == 'No'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nimport sys"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10\\n5') == 'No'\n\n\n\"\"\"\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10\\n5') == 'No'\nassert solution('4 1\\n8 94 0 4\\n89\\n') == 'Yes'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('2 0 2 0') is None\nassert solution('1 0 1 1 1') is None\nassert solution('1 1 1') is None\nassert solution('1 1 1 1 1 1 1 1 1 1 1') is None\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4\\n') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10\\n5\\n') == 'No'\nassert solution('7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\\n') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\n11 0 0 14\n5 4''') == 'Yes'\nassert solution('''6 1\n2 3 0 8 9 10\n5''') == 'No'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'\nassert solution('''4 1\n8 94 0 4\n89\n''') == 'Yes'\nassert solution('''6 3\n1 0 0 0 0 0 0\n2 3 4 5 6 7\n''') == 'No'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 6 2''') == 'YES'\nassert solution('''5 1 1''') == 'NO'\nassert solution('''2 2 2''') == 'YES'\nassert solution('''10 10 10''') == 'YES'\nassert solution('''15 15 15''') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 6 2''') == 'YES'\nassert solution('''5 1 1''') == 'NO'\nassert solution('''5 1 3''') == 'NO'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''4 1 3''') == 'YES'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('5 3 2') == 'YES'\nassert solution('5 1 3') == 'NO'\nassert solution('1 1 1') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('4 3 3') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('4 2 4') == 'YES'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\") == \"YES\"\nassert solution(\"1 6 2\") == \"NO\""
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 6 2') == \"YES\"\nassert solution('5 1 1') == \"NO\"\nassert solution('4 3 2') == \"NO\"\nassert solution('4 3 3') == \"YES\"\nassert solution('6 1 1') == \"NO\"\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 6 2') == 'YES'\nassert solution('1 6 2') == 'NO'\nassert solution('5 1 1') == 'YES'\nassert solution('5 1 2') == 'NO'\nassert solution('5 1 3') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('1 2 1') == 'NO'\nassert solution('1 2 1') == 'NO'\nassert solution('1 1 1') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 6 2\") == \"YES\"\nassert solution(\"5 1 1\") == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n\") == \"YES\"\nassert solution(\"0 1 0 0\\n1 0 1 0\\n0 0 1 0\\n0 0 0 1\\n\") == \"NO\"\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n\") == \"NO\"\nassert solution(\"0 1 0 0\\n1 0 1 0\\n0 0 1 0\\n0 0 0 1\\n\") == \"NO\"\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n\") == \"YES\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 0') == 'NO'\nassert solution('0 0 0 1') == 'NO'\nassert solution('0 0 1 0') == 'NO'\nassert solution('0 0 1 1') == 'NO'\nassert solution('0 1 0 0') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1''') == \"NO\"\n\nassert solution('''0 1 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1''') == \"NO\"\n\nassert solution('''1 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 1 0''') == \"NO\"\n\nassert solution('''0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0''') == \"NO\"\n\nassert solution('''1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1''') == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0''') == 'NO'\nassert solution('''0 1 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0''') == 'NO'\nassert solution('''0 1 0 0\n1 0 1 0\n0 0 0 1\n1 0 1 0''') == 'NO'\nassert solution('''1 0 0 0\n1 0 1 0\n0 0 0 1\n0 0 1 0''') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n') == 'YES'\nassert solution('0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n') == 'NO'\nassert solution('0 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n') == 'NO'\nassert solution('1 0 0 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n') == 'YES'\nassert solution('0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n') == 'NO'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n') == 'NO'\nassert solution('0 1 1 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n0 1 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n1 0 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n0 1 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0\n\"\"\"\n) == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n'''\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n\") == \"YES\"\nassert solution(\"0 1 0 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n\") == \"NO\"\nassert solution(\"1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n586\\n\") == \"NO\"\nassert solution(\"2\\n09\\n\") == \"NO\"\nassert solution(\"9\\n123456789\\n\") == \"YES\""
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('3') == 'NO'\nassert solution('12') == 'YES'\nassert solution('123456789') == 'YES'\nassert solution('09') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('123') == 'YES'\nassert solution('23456') == 'NO'\nassert solution('123456789') == 'NO'\nassert solution('911') == 'YES'\nassert solution('09') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('  ') == ''\nassert solution('1') == 'YES'\nassert solution('0') == 'NO'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == \"NO\"\nassert solution('''9''') == \"YES\"\nassert solution('''123456789''') == \"NO\"\nassert solution('''09''') == \"NO\"\nassert solution('''911''') == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'NO'\nassert solution('9') == 'NO'\nassert solution('123456789') == 'YES'\nassert solution('91') == 'NO'\nassert solution('1234567891') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == ''\n\"\"\"\n\nimport sys"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\""
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n586''') == 'NO'\nassert solution('''2\n09''') == 'NO'\nassert solution('''9\n123456789''') == 'YES'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5\n''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6\n''') == '5'\nassert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '15'\nassert solution('''10 10\n0 0\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n''') == '10'\nassert solution('''10 10\n0 0\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n''') == '10'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"10\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"0 2\") == \"5\"\nassert solution(\"2 3\") == \"5\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\nassert solution('''4 0\n1 2\n2 3\n3 4\n0 5\n''') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1') == '10'\nassert solution('4 2') == '5'\nassert solution('4 3') == '5'\nassert solution('2 1') == '10'\nassert solution('2 2') == '5'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '10'\nassert solution('4 1') == '5'\nassert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"10\"\nassert solution(\"0 2\") == \"5\"\nassert solution(\"2 1\") == \"10\"\nassert solution(\"1 0\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"110\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"10\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"0 2\") == \"5\"\nassert solution(\"0 3\") == \"5\"\nassert solution(\"0 4\") == \"5\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1\\n0 2\\n0 3\\n3 5\\n0 6') == '5'\nassert solution('10 2\\n1 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10') == '9'\nassert solution('10 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == '1'\nassert solution('10 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == '1'\nassert solution('10 1\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0') == '1'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\nassert solution('''8 8\n2 3\n5 8\n6 7\n3 7\n8 5\n2 9\n6 7\n8 9''') == '32'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '32'\nassert solution('''10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '32'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1''') == '10'\nassert solution('''0 2''') == '5'\nassert solution('''0 3''') == '5'\nassert solution('''0 5''') == '5'\nassert solution('''2 1''') == '10'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\"\"\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == 0\nassert solution('2 10') == 10\nassert solution('2 2') == 0\nassert solution('2 2') == 0\nassert solution('1 10') == 0\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2''') == '10'\nassert solution('''1 10''') == '0'\nassert solution('''3 3''') == '0'\nassert solution('''5 1''') == '1'\nassert solution('''10 2''') == '0'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2''') == '10'\nassert solution('''1 10''') == '0'\nassert solution('''100 1''') == '0'\nassert solution('''10 100''') == '0'\nassert solution('''100 100''') == '0'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1\\n'\n    '4') == '0'\nassert solution('4 1\\n'\n    '5') == '0'\nassert solution('1 10\\n'\n    '4') == '10'\nassert solution('4 1\\n'\n    '1') == '0'\nassert solution('10 10\\n'\n    '1') == '0'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"10\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"7 10\") == \"0\"\nassert solution(\"10 5\") == \"1\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\n-----"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 15 2 3') == 1\nassert solution('10 11 2 4') == -1\n\n\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '-1'\nassert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\n\n\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\nassert solution('''10 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\nassert solution('''10000000000 10000000000 10000000000 10000000000''') == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 10 1 4') == '1'\nassert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\nassert solution('10 11 2 3') == '-1'\nassert solution('4 5 2 1') == '3'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 15 2 3\\n') == '1'\nassert solution('10 11 2 4\\n') == '-1'\n\"\"\"\n\nn, m, k, l = [int(x) for x in input().split()]\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3\\nWWWW\\nWWWB') == '1'\nassert solution('0 3\\nWWWW\\nWWWB') == '-1'\nassert solution('0 3\\nWWWW\\nWWWB') == '-1'\nassert solution('3 3\\nWWWW\\nWWWB') == '1'\nassert solution('3 3\\nWWWW\\nWWWB') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\\n') == '5'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW\\n') == '1'\nassert solution('3 2\\nWWW\\nWWW\\nWWW\\n') == '-1'\nassert solution('3 1\\nWWW\\nWWW\\nWWW\\n') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'\nassert solution('1 2\\nB') == '1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\\n') == '5'\nassert solution('1 2\\nBB\\n') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW\\n') == '1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW\\n') == '1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW\\n') == '1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW\n''') == '5'\n\nassert solution('''\n1 2\nBB\n''') == '-1'\n\nassert solution('''\n3 3\nWWW\nWWW\nWWW\n''') == '1'\n\nassert solution('''\n2 1\nBB\n''') == '-1'\n\nassert solution('''\n1 1\nBB\n''') == '1'"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"WWWW\") == \"-1\"\nassert solution(\"WWWB\") == \"-1\"\nassert solution(\"WWWW\") == \"-1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\") == \"5\"\n\nassert solution(\n\"3 3\\nWWW\\nWWW\\nWWW\") == \"1\"\n\nassert solution(\n\"3 3\\nWWW\\nWWW\\nWWW\") == \"-1\"\n\nassert solution(\n\"5 5\\nWBBWBWB\\nWWBBBBW\\nWWBBBBW\\nWWBBBBW\\nWWBBBBW\") == \"2\"\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''1 2\nBB''') == '-1'\nassert solution('''3 3\nWWW\nWWW\nWWW''') == '1'\n\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW\n''') == '5'\n\nassert solution('''1 2\nBB\n''') == '-1'\n\nassert solution('''3 3\nWWW\nWWW\nWWW\n''') == '1'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('2 1 1 1 1') == 'Yes'\nassert solution('1 0 1 0 1') == 'No'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"Yes\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\\n\") == \"Yes\\n\"\nassert solution(\"5\\n2 3 9\\n1 7 9\\n\") == \"No\\n\"\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 1 4 3 5\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n3\n2 3 9\n1 7 9\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n3\n3 9 9\n1 7 9\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n4\n2 1 2 3\n1 1 1 1\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n5\n1 1 1 1 1\n1 0 1 0 1\n\"\"\"\n) == \"Yes\""
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"2\\n1 2\") == \"Yes\"\nassert solution(\"3\\n1 1 1\") == \"Yes\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"No\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"Yes\"\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5\\n') == 'Yes'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5\\n') == 'Yes'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'\n\n'''"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1 2 3 4 5') == 'Yes'\nassert solution('2 1 4 3 5') == 'Yes'\nassert solution('1 7 9') == 'No'\nassert solution('2 3 9') == 'No'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution(' ') == 'No'\nassert solution('1 2 3 4 5') == 'Yes'\nassert solution('1 0 1 0 1') == 'Yes'\nassert solution('2 3 9') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"No\"\n\n\"\"\"\n\nfrom math import ceil\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''5\n1 2 3 4 5\n2 1 4 3 5\n'''\n) == 'Yes'\n\nassert solution(\n    '''5\n1 1 1 1 1\n1 0 1 0 1\n'''\n) == 'Yes'\n\nassert solution(\n    '''3\n2 3 9\n1 7 9\n'''\n) == 'No'\n\n\"\"\"\n\nfrom collections import Counter\nfrom typing import List\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n90 90 90 90\n''') == '0'\nassert solution('''3\n100 100 160\n''') == '40'\nassert solution('''1\n360\n''') == '360'\nassert solution('''4\n170 30 150 10\n''') == '0'\nassert solution('''2\n100 90\n''') == '40'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n360') == '0'\nassert solution('1\\n360') == '360'\nassert solution('1\\n90 90 90 90') == '0'\nassert solution('1\\n90 90 90 90') == '360'\nassert solution('3\\n100 100 160') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '0'\nassert solution('3\\n180') == '3'\nassert solution('4\\n180') == '0'\nassert solution('2\\n90 90') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n90 90 90 90\\n') == '0'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('1\\n360\\n') == '360'\nassert solution('4\\n170 30 150 10\\n') == '0'\nassert solution('2\\n360 360\\n') == '360'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n90 90 90 90') == '0'\nassert solution('3\\n100 100 160') == '40'\nassert solution('1\\n360') == '360'\nassert solution('4\\n170 30 150 10') == '0'\nassert solution('2\\n90 90') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('0') == '0'\nassert solution('1') == '360'\nassert solution('-1') == '-360'\nassert solution('-1.1') == '-360'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n90 90 90 90''') == '0'\nassert solution('''3\n100 100 160''') == '40'\nassert solution('''1\n360''') == '360'\nassert solution('''4\n170 30 150 10''') == '0'\n'''"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"360\"\nassert solution(\"1\") == \"360\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"540\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('2 3') == '9'\nassert solution('1 3') == '7'\nassert solution('10 10') == '1099511627775'\nassert solution('1000 1000') == '998999867090'"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n-----\n\nThe next example is about the infinite number of gifts:\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$\\{\\}$\n\n$"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('1 10') == '10'\nassert solution('2 1') == '10'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('3 5') == '7'\nassert solution('2 100000000') == '8'\nassert solution('10 9') == '0'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"1 2\") == \"9\"\nassert solution(\"2 1\") == \"9\"\nassert solution(\"4 2\") == \"16\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('1 2') == '9'\nassert solution('2 1') == '9'\nassert solution('1 1') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '7'\nassert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('2 2') == '9'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"10 9\") == \"15\"\nassert solution(\"10 10\") == \"20\"\nassert solution(\"10 10\") == \"20\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 3''') == '7'\nassert solution('''2 2''') == '9'\nassert solution('''2 4''') == '37'\nassert solution('''2 6''') == '49'\nassert solution('''4 5''') == '257'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\n\nassert solution(\"3\") == \"4 5\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\n\n-----"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4 5\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\n\n-----Best Practices-----"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\n\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('5 3') == 'Yes'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('5 5') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('5 3') == 'No'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == \"No\"\nassert solution('4 4') == \"Yes\"\nassert solution('5 3') == \"Yes\"\n\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"1000000 2\") == \"No\"\nassert solution(\"10000014 3\") == \"No\"\nassert solution(\"4 0\") == \"Yes\"\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('1 10') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1 10 2') == 'Yes'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('1 10') == 'No'\nassert solution('2 1') == 'No'\nassert solution('3 4') == 'No'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3''') == 'No'\nassert solution('''5 4''') == 'Yes'\nassert solution('''8 9 10''') == 'Yes'\nassert solution('''8 9 10''') == 'Yes'\nassert solution('''10 9 8''') == 'Yes'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '<'\nassert solution('10') == '>'\nassert solution('0123') == '='\nassert solution('012345') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '>'\nassert solution('100') == '<'\nassert solution('0123') == '='\nassert solution('1234') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('0123\\n12345') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9') == '<'\nassert solution('10') == '>'\nassert solution('11') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9,10\\n\") == \">\"\nassert solution(\"11,10\\n\") == \"<\"\nassert solution(\"0123,12345\\n\") == \"=\"\nassert solution(\"0123,111\\n\") == \">\"\nassert solution(\"00123,11111\\n\") == \">\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '>'\nassert solution(input()) == '<'\nassert solution(input()) == '='''"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12345') == '>'\nassert solution('00012345') == '<'\nassert solution('0123') == '='\nassert solution('012345') == '>'\nassert solution('123456789') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '=', \"The symbol '=' is expected\"\nassert solution('9') == '<', \"The symbol '<' is expected\"\nassert solution('11') == '>', \"The symbol '>' is expected\"\nassert solution('00012345') == '=', \"The symbol '=' is expected\"\nassert solution('12345') == '=', \"The symbol '=' is expected\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345\\n') == '='\nassert solution('0123\\n9\\n') == '>'\nassert solution('0123\\n111\\n') == '>'\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n-1 0 1\n''') == '6'\nassert solution('''2 1\n1 0\n''') == '1'\nassert solution('''1 1\n-1\n''') == '2'\n\n\n\"\"\""
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"-1\") == \"2\"\nassert solution(\"0 0\") == \"1\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3'\n\"\"\""
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n-1 0 1''') == '6'\nassert solution('''2 1\n1 0''') == '1'\nassert solution('''1 1\n-1''') == '2'\n'''\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"1\"\n\"\"\"\n\nfrom sys import stdin,stdout\nn,p = [int(x) for x in stdin.readline().strip().split(' ')]\ncolors = [int(x) for x in stdin.readline().strip().split(' ')]\ncolors = colors[::-1]"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1\\n-1 0 1') == '6'\nassert solution('2 1\\n1 0') == '1'\nassert solution('1 1\\n-1') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n-1 0 1\") == \"6\"\nassert solution(\"2 1\\n1 0\") == \"1\"\nassert solution(\"1 1\\n-1\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n'''\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\nassert solution('5 1 3 5') == '2'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1 3 4''') == '3'\nassert solution('''6 2 1 1''') == '1'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\nassert solution('''4 4 4 4''') == '0'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1 3 4''') == '3'\nassert solution('''6 2 1 1''') == '1'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\n\n\n\"\"\""
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\nprint('Testcases passed')"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n\"\"\"\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 3 4\\n') == '3'\nassert solution('6 2 1 1\\n') == '1'\nassert solution('4 4 4 4\\n') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000\\n') == '1000000000'\n\n\n\"\"\""
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\nassert solution(\"99999999999999999999999999999999999999999999999999999999999999999\") == \"999999999999999999999999999999999999999999999999999999999999999999999\"\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\nassert solution('100 4 1 1') == '1'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n1 3\\n2 1\\n4 5\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'YES'\nassert solution('4 2\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n') == 'NO'\nassert solution('2 2\\n1 2\\n2 1\\n') == 'YES'\nassert solution('2 2\\n1 2\\n2 1\\n2 1\\n') == 'NO'\nassert solution('4 2\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n3 2\\n2 1\\n') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'YES'\nassert solution('''5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'NO'\nassert solution('''3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n3 4\n1 4\n''') == 'NO'\nassert solution('''3 3\n1 2\n2 3\n3 2\n3 1\n2 1\n3 4\n1 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'NO'\nassert solution('5 4\\n1 2\\n2 3\\n3 2\\n3 1') == 'YES'\nassert solution('5 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'NO'\nassert solution('5 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'NO'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\"\"\") == \"YES\"\nassert solution(\"\"\"5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n\"\"\") == \"NO\"\nassert solution(\"\"\"4 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n2 2\n2 3\n3 4\n1 4\n4 2\n1 2\n4 5\n2 3\n2 1\n1 4\n4 2\n\"\"\") == \"YES\"\n\"\"\"\n\n## Task\n\nYour task is to determine whether it is possible to make the graph acyclic by removing at most one edge.\n\n## Input Format\n\nThe first line contains two space-separated integers n and m (2 \u2264 n \u2264 500, 1 \u2264 m \u2264 min(n(n - 1), 100000)), the number of vertices and the number of edges, respectively.\n\nThen m lines follow. Each line contains two space-separated integers u and v denoting an edge going from vertex u to vertex v (1 \u2264 u, v \u2264 n, u \u2260 v). Each ordered pair (u, v) is listed at most once (there is at most one directed edge from u to v).\n\n## Output Format\n\nIf it is possible to make the graph acyclic by removing at most one edge, print YES. Otherwise, print NO.\n\n## Constraints\n\n2 \u2264 n \u2264 500\n1 \u2264 m \u2264 min(n(n - 1), 100000)\n1 \u2264 u < v \u2264 n\n\n## Example\n\nInput\n\n3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n2 2\n2 3\n3 4\n1 4\n4 2\n1 2\n4 5\n2 3\n2 1\n1 4\n4 2\n\nOutput\n\nYES\n\nInput\n\n5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n2 2\n2 3\n3 4\n1 4\n4 2\n1 2\n4 5\n2 3\n2 1\n1 4\n4 2\n\nOutput\n\nNO\n\nInput\n\n3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n2 2\n2 3\n3 4\n1 4\n4 2\n1 2\n4 5\n2 3\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n\nOutput\n\nYES\n\nInput\n\n5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n2 2\n2 3\n3 4\n1 4\n4 2\n1 2\n4 5\n2 3\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2 1\n1 4\n4 2\n2"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"2 3\\n1 2\\n3 1\\n3 2\") == \"NO\"\nassert solution(\"2 3\\n1 2\\n2 1\\n1 1\\n2 1\") == \"NO\"\n\n\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 2\n2 3\n3 2\n3 1''') == 'YES'\n\nassert solution('''5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5''') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n\n-----Solution-----\n\nIt is obvious that there is a cycle in the graph and that is not acyclic.\n\nIf we follow this path in the graph, starting from a vertex u and following only one edge, we will never get back to u again, so it is acyclic.\n\nThis means that all paths from a vertex u to another vertex v must have at least one edge of the same direction from v to u.\n\nIn this case there is one edge that is not in the cycle: $2 \\rightarrow 3$.\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10') == '281'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 50\\n20 0\\n3 1\\n') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n') == '26'\nassert solution('1 100\\n11 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n') == '2861'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 50') == '30'\nassert solution('5 240') == '26'\nassert solution('43 2') == '281'\nassert solution('300 4') == '30'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 595\n43 2\n300 4\n554 10''') == '281'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''2 50\n20 0\n3 1\n''') == '30'\nassert solution('''5 240\n13 0\n50 25\n60 5\n155 70\n165 70''') == '26'\n'''\nThe hardest example.\n\nIt's guaranteed that each antenna covers all positions from $1$ to $m$. If we add a new antenna with the new scope, it will cost $1$, and if we add another new antenna with the new scope, it will cost $2$. However, if we add a new antenna with the new scope, it will cover a larger range and we will lose some coverage.\n\nIf we add a new antenna with the new scope, it will cost $2$, and if we add another new antenna with the new scope, it will cost $3$.\n\nIf we add a new antenna with the new scope, it will cost $3$, and if we add another new antenna with the new scope, it will cost $4$.\n\nIf we add a new antenna with the new scope, it will cost $4$, and if we add another new antenna with the new scope, it will cost $5$.\n\nSo it is not possible to cover all integer positions from $1$ to $m$ by using at least one antenna.\n\nHowever, if we add a new antenna with the new scope, it will cost $5$, and if we add another new antenna with the new scope, it will cost $6$.\n\nIf we add a new antenna with the new scope, it will cost $6$, and if we add another new antenna with the new scope, it will cost $7$.\n\nIf we add a new antenna with the new scope, it will cost $7$, and if we add another new antenna with the new scope, it will cost $8$.\n\nIf we add a new antenna with the new scope, it will cost $8$, and if we add another new antenna with the new scope, it will cost $9$.\n\nSo it is possible to cover all integer positions from $1$ to $m$ using at least one antenna.\n\nThe maximum possible coverage is the number of antennas needed.\n\n-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 80$ and $n \\le m \\le 100\\ 000$).\n\nThe $i$-th of the next $n$ lines contains two integers $x_i$ and $s_i$ ($1 \\le x_i \\le m$ and $0 \\le s_i \\le m$).\n\nOn each position, there is at most one antenna (values $x_i$ are pairwise distinct).\n\nIt is possible to achieve a maximum coverage of the street by adding the minimum amount of new antennas required.\n\nNote that the maximum possible coverage is the number of antennas needed.\n\nInput\n2 50\n20 0\n3 1\n\nOutput\n30\n\nInput\n5 240\n13 0\n50 25\n60 5\n155 70\n165 70\n\nOutput\n26\n\nNote that for each antenna we can cover all positions from $1$ to $m$ with the new antenna, but we can also cover some positions that we did not need to cover yet.\n\nInput\n2 50\n20 0\n3 1\n\nOutput\n30\n\nInput\n5 240\n13 0\n50 25\n60 5\n155 70\n165 70\n\nOutput\n26\n\nInput\n3 100\n0 0\n0 1\n1 2\n\nOutput\n0\n\nInput\n3 100\n0 0\n0 1\n1 2\n\nOutput\n0\n\nInput\n2 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n3 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n4 100\n0 0\n0 1\n1 2\n\nOutput\n0\n\nInput\n5 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n6 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n7 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n8 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n9 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n10 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n11 100\n0 0\n0 1\n1 2\n\nOutput\n1\n\nInput\n12 100\n0 0\n0 1\n1 2\n\nOutput\n2\n\nInput\n13 100\n0 0\n0 1\n1 2\n\nOutput\n2\n\nInput\n14 100\n0 0\n0 1\n1 2\n\nOutput\n2\n\nInput\n15 100\n0 0\n0 1\n1 2\n\nOutput\n2\n\nInput\n16 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n17 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n18 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n19 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n20 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n21 100\n0 0\n0 1\n1 2\n\nOutput\n3\n\nInput\n22 100\n0 0\n0 1\n1 2\n\nOutput\n4\n\nInput\n23 100\n0"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10\\n') == '281'\nassert solution('2 50\\n20 0\\n3 1\\n') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n') == '26'"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 595') == '281'\nassert solution('1 1') == '0'\nassert solution('2 50') == '30'\nassert solution('5 240') == '26'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 595\n43 2\n300 4\n554 10''') == '281'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''2 50\n20 0\n3 1''') == '30'"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10') == '281'\nassert solution('1 1\\n1 1') == '0'\nassert solution('2 50\\n20 0\\n3 1') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70') == '26'\nassert solution('3 10\\n8 0\\n3 1\\n9 0\\n4 1\\n6 1\\n5 1\\n7 1\\n9 1\\n10 1') == '2'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == '281'\nassert solution('1 1') == '0'\nassert solution('2 50') == '30'\nassert solution('5 240') == '26'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 595\n43 2\n300 4\n554 10''') == '281'\nassert solution('''1 1\n1 1\n''') == '0'\nassert solution('''2 50\n20 0\n3 1\n''') == '30'"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 595\") == \"281\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 50\") == \"30\"\nassert solution(\"5 240\") == \"26\"\nassert solution(\"5 40\") == \"30\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n10\n1 2 3 4 5 6 7 8\n'''\n) == '10'\nassert solution(\n'''\n0\n0 0 0 0 0 0 0 0\n'''\n) == '0'\nassert solution(\n'''\n3\n0 4 1 0 0 9 8 3\n'''\n) == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8\n''') == '10'\nassert solution('''0\n0 0 0 0 0 0 0 0\n''') == '0'\nassert solution('''3\n0 4 1 0 0 9 8 3\n''') == '3'"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8''') == '10'\nassert solution('''0\n0 0 0 0 0 0 0 0''') == '0'\nassert solution('''3\n0 4 1 0 0 9 8 3''') == '3'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('0 0 0 0 0 0 0 0') == 0\nassert solution('1 2 3 4 5 6 7 8') == 10\nassert solution('1 2 3 4 5 6 7 8 9') == 14\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n\"\"\") == \"\", \"First Test\"\nassert solution(\n\"\"\"\n\"\"\") == \"0\", \"Second Test\"\nassert solution(\n\"\"\"\n\"\"\") == \"0\", \"Third Test\"\nassert solution(\n\"\"\"\n\"\"\") == \"0\", \"Fourth Test\"\nassert solution(\n\"\"\"\n\"\"\") == \"0\", \"Fifth Test\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n0 4 1 0 0 9 8 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8') == '10'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8') == '10'\nassert solution('0 0 0 0 0 0 0 0') == '0'\nassert solution('3') == '3'\nassert solution('0 4 1 0 0 9 8 3') == '3'\nassert solution('-10 10 -10') == '-10'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"10\n1 2 3 4 5 6 7 8\n\"\"\") == \"10\"\nassert solution(\"\"\"0\n0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n0 4 1 0 0 9 8 3\n\"\"\") == \"3\"\nassert solution(\"\"\"10\n0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n0 4 1 0 0 9 8 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10''') == '10'\nassert solution('''0''') == '0'\nassert solution('''3''') == '3'\nassert solution('''4 5 6 7 8 9''') == '0'\nassert solution('''3 4 5 6 7 8 9''') == '3'\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 12\n20 30 70 90''') == '150'\nassert solution('''4 3\n10000 1000 100 10''') == '10'\nassert solution('''4 3\n10 100 1000 10000''') == '30'\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321''') == '44981600785557577'\n\n\"\"\"\n\nn, L = map(int, input().split())\nc = list(map(int, input().split()))\n\ndp = [0] * (L + 1)\n\nfor i in range(n):\n    dp[0] += 1\n    for j in range(c[i], L + 1):\n        dp[j] = min(dp[j], dp[j - c[i]] + 1)\n\nprint(dp[L])\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 12\\n20 30 70 90\\n\") == \"150\"\nassert solution(\"4 3\\n10000 1000 100 10\\n\") == \"10\"\nassert solution(\"5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n\") == \"44981600785557577\"\n\n\n\"\"\"\nimport sys\ninput = sys.stdin.readline"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 12''') == '150'\nassert solution('''4 3''') == '10'\nassert solution('''5 787787787''') == '44981600785557577'\nassert solution('''123456789 234567890 345678901 456789012 987654321''') == '987654321'\nassert solution('''10000 1000 100 10''') == '30'\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''4 3\n10000 1000 100 10\n''') == '30'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n\nassert solution('''4 3\n10 100 1000 10000\n''') == '30'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10 100 1000 10000\\n') == '30'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\n\n\n\"\"\"\n\nn, L = map(int, stdin.readline().split())\nc = list(map(int, stdin.readline().split()))\nc.sort()\n\ntot = 0\n\nfor i in range(n):\n    if tot + c[i] < L:\n        tot += c[i]\n    else:\n        tot += L - c[i]\n        break\n\nprint(tot)\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '30'\nassert solution('4 3\\n10 100 1000 10000\\n') == '30'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\n\n\n-----Show coder-----\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''4 3\n10000 1000 100 10\n''') == '10'\n\nassert solution('''4 3\n10 100 1000 10000\n''') == '30'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n\"\"\"\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''4 3\n10000 1000 100 10\n''') == '10'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n\nprint(solution('''6 10\n7 9 7 4 4 3\n'''))\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 12\\n20 30 70 90') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '30'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\n\n\"\"\"\nfrom math import log2\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 3 3 6''') == '5'\nassert solution('''2\n2 1''') == '3'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1') == '3'\nassert solution('5\\n2 1 3 3 4') == '5'\nassert solution('2\\n2 1') == '3'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 1') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 3 3 6\\n\") == \"5\"\nassert solution(\"2\\n2 1\\n\") == \"3\"\n\"\"\""
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\n\n\n\"\"\""
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '3'\nassert solution('1 1') == '1'\nassert solution('1 3 3 4 6') == '5'\nassert solution('2 1') == '3'\nassert solution('2 3 3 2 6') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 3 3 6\") == \"5\"\nassert solution(\"2\\n2 1\") == \"3\""
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 3 3 6') == '5'\nassert solution('2\\n2 1') == '3'\nassert solution('1\\n1') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '10'\nassert solution('7\\n1 2 3 4 5 6 7') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\"\n\nn = int(input())\na = [int(i) for i in input().split()]\n\nmax_ = a[0]\nfor i in a:\n    if i > max_:\n        max_ = i\nprint(max_)\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output(input(\"\"))\n\n\"\"\"\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n') == 'YES'\nassert solution('2\\n') == 'NO'\nassert solution('4\\n') == 'YES'\nassert solution('5\\n') == 'NO'\nassert solution('0\\n') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('9') == 'NO'\nassert solution('124') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('73452\\n1248') == 'NO'\nassert solution('73452\\n1249') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"73452\") == \"YES\"\nassert solution(\"1248\") == \"NO\"\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n73452\n''') == 'YES'\n\nassert solution('''4\n1248\n''') == 'NO'\n'''\n    pass\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n12') == 'YES'\nassert solution('3\\n1') == 'NO'\nassert solution('3\\n2') == 'NO'\nassert solution('3\\n3') == 'NO'\nassert solution('5\\n1234567') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n73452') == 'YES'\nassert solution('4\\n1248') == 'NO'\nassert solution('5\\n1248') == 'NO'\nassert solution('5\\n734579') == 'YES'\nassert solution('5\\n7346123') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n73452') == 'YES'\nassert solution('4\\n1248') == 'NO'\nassert solution('5\\n7534') == 'YES'\nassert solution('6\\n1125') == 'NO'\nassert solution('7\\n7342') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == 'NO'\nassert solution('3 4 6 2 0') == 'YES'\nassert solution('3 4 6 3 2 0') == 'NO'\nassert solution('3 4 6 3 4 2 0') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n101\\n') == 'YES'\nassert solution('4\\n112\\n') == 'NO'\nassert solution('5\\n1248\\n') == 'NO'\nassert solution('6\\n37362\\n') == 'NO'\nassert solution('7\\n227\\n') == 'YES'\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\nassert solution(\"t\") == \"IGNORE HIM!\"\nassert solution(\"\") == \"IGNORE HIM!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\nassert solution('sevenkplus') == 'CHAT WITH HER!'\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '9'\nassert solution('3 4') == '8'\nassert solution('3 2') == '4'\nassert solution('5 3') == '6'\nassert solution('7 4') == '7'\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 1 -1 1\\n') == 2\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n') == 9\nassert solution('14 4\\n-1 1 -1 -1 -1 1 -1 -1 1 -1 -1 1 1\\n') == 9\nassert solution('14 3\\n1 1 -1 1\\n') == 2\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n') == 9\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 1 -1 1') == '2'\nassert solution('2 2\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == '9'\nassert solution('2 1\\n1 1 -1 1') == '2'\nassert solution('1 1\\n1 1 -1 1') == '2'\nassert solution('1 1\\n-1 1 -1 1') == '2'\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''14 3''') == '9'\nassert solution('''-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1''') == '9'\n'''"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''14 3''') == '9'\nassert solution('''4 1 -1 1''') == '2'\nassert solution('''4 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1''') == '9'\nassert solution('''4 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1''') == '9'\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 1 -1 1\n''') == '2'\nassert solution('''14 3\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\n''') == '9'\n'''\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 1 -1 1''') == '2'\nassert solution('''14 3\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1''') == '9'\n'''\n    pass\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 1 -1 1\\n') == '2'\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n') == '9'\nassert solution('3 2\\n1 1 -1\\n') == '0'\nassert solution('4 5\\n-1 -1 -1 -1 -1 -1 1 -1 -1 1 -1 -1 1\\n') == '2'\nassert solution('3 1\\n1 1 -1\\n') == '1'\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 1 -1 1\\n\") == \"2\"\nassert solution(\"14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\\n\") == \"9\"\n\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '12'"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 2''') == '12'\nassert solution('''0 1 2''') == '12'\nassert solution('''1 0 2''') == '12'\nassert solution('''0 0 2''') == '12'\nassert solution('''2 1 2''') == '12'\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nfor line in stdin.splitlines():\n    assert solution(line) == line\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '12'\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\") == \"12\"\nassert solution(\"10 1 10\") == \"200\"\nassert solution(\"4 1 2\") == \"12\"\nassert solution(\"10 5 5\") == \"55\"\nassert solution(\"3 1 2\") == \"12\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0111'\nassert solution(stdin) == '10101'\nassert solution(stdin) == '1111'\nassert solution(stdin) == '11000111'\nassert solution(stdin) == '101001011'\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 2') == '12'\nassert solution('5 0 0') == '12'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 1') == '1'\nassert solution('0 0 1 0') == '1'\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == 12\nassert solution(\"1 1 2\") == 13\nassert solution(\"2 1 1\") == 6\nassert solution(\"1 1 1\") == 9\nassert solution(\"1 1 1\") == 10\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1 2''') == '12'\nassert solution('''5 1 2''') == '15'\nassert solution('''10 4 5''') == '30'\nassert solution('''1000 100000 100''') == '999999999'\nassert solution('''10 1 1''') == '10'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('9 1 8 7 6 5 4 3 2') == 'YES'\nassert solution('10 3 1 9 10') == 'NO'\nassert solution('9 1 6 7 8 5 4 3 2') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 1 4 3 2\n\"\"\") == 'YES'\n\nassert solution(\n\"\"\"\n10 2 1 9 10\n\"\"\") == 'NO'"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 4 3 2\\n') == 'YES'\nassert solution('10 2 1 9 10\\n') == 'NO'\n\n\"\"\""
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"5 1 4 3 2\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"10 2 1 9 10\"\"\"\n) == \"NO\""
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin[:1]\n\"\"\"\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 1 10''') == '1'\nassert solution('''3 5 10 22''') == '8'\nassert solution('''2 3 3 5''') == '0'\nassert solution('''1 1 1 1''') == '0'\nassert solution('''2 3 2 3''') == '0'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('5 7 15 22') == '8'\nassert solution('3 10 22') == '0'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 1 10''') == '1'\nassert solution('''3 5 10 22''') == '8'\nassert solution('''2 3 3 5''') == '0'\nassert solution('''3 5 3 6''') == '2'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('2 3 3 5') == '0'\nassert solution('2 3 3 5') == '0'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('27') == '3'"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6''') == '''3'''\nassert solution('''25''') == '''5'''\nassert solution('''2''') == '''1'''\nassert solution('''27''') == '''3'''\nassert solution('''1000''') == '''6'''\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4''') == '2'\nassert solution('''27''') == '3'\n\nassert solution('''1''') == '0'\nassert solution('''2''') == '1'\nassert solution('''27''') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '5'\nassert solution('''5''') == '6'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '1'\nassert solution('''5''') == '2'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"helllllooooo\") == \"helllllooooo\"\nassert solution(\"tobeornottobe\") == \"tobeornottobe\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"hello123\") == \"hello123\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"helllllooooo\") == \"helllllooooo\"\nassert solution(\"tobeornottobe\") == \"tobe or not tobe\"\nassert solution(\"oooooo\") == \"oooooo\"\nassert solution(\"helllllooooo\") == \"helllllooooo\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('qwertyuiop') == 'qwertyuiop'\nassert solution('hello') == 'hello'\nassert solution('123456789012345678901234567890') == '12345678901234567890'\nassert solution('1q2w3e4r5t6y7u8i9o0p') == '1q2w3e4r5t6y7u8i9o0p'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('hackcerrs') == 'hack cs errs'\nassert solution('backtothefutttture') == 'back to the futtture'\nassert solution('helllllooooo') == 'hell ll lo'\nassert solution('tobeornottobe') == 'to be or not to be'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('hello world') == 'hello world'\nassert solution('abcdefg') == 'abcdefg'\nassert solution('asdfasdf') == 'asdfasdf'\nassert solution('abcdefg') == 'abcdefg'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('asdfasdf') == 'asdf asd f asd f'\nassert solution('abc') == 'abc'\nassert solution('bac') == 'bac'\nassert solution('bbbac') == 'bbbac'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''the''') == 'the'\nassert solution('the') == 'the'\nassert solution('t') == 't'\nassert solution('a') == 'a'\nassert solution('b') == 'b'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"hellno\") == \"hell no \"\nassert solution(\"hackcerrs\") == \"hack cers \"\nassert solution(\"backtothefutttture\") == \"back to the futtture\"\nassert solution(\"tobeornottobe\") == \"tobe or not tobe\"\nassert solution(\"helllllooooo\") == \"helllllooo\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800') == '200'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n20 80''') == '200'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n3\\n5\\n2\\n2\\n2\\n2\\n2') == '200'\nassert solution('10\\n99\\n3\\n2\\n2\\n3\\n2\\n2\\n2') == '20'\nassert solution('20\\n99\\n1\\n2\\n1\\n2\\n2\\n2\\n2') == '20'\nassert solution('20\\n99\\n1\\n2\\n1\\n2\\n2\\n2\\n2') == '20'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\") == \"200\""
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80\n9 7 4 4\n2 2 2 2\n3 4 4 4\n5 5 5 5''') == '200'\n\n'''\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\") == \"200\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\") == \"200\"\n\n\"\"\""
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\n\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\n'''\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80\") == \"20\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\") == \"200\"\nassert solution(\"10 3 2\\n10 99\\n2 4 3\\n2 4 1\\n4 15\\n10 80\") == \"100\"\nassert solution(\"20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80\") == \"120\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\n\n\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.readline().strip().split()]\nx, s = [int(x) for x in stdin.readline().strip().split()]\na = [int(x) for x in stdin.readline().strip().split()]\nb = [int(x) for x in stdin.readline().strip().split()]\nc = [int(x) for x in stdin.readline().strip().split()]\nd = [int(x) for x in stdin.readline().strip().split()]"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800') == '200'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\\n4 10\\n20 10') == '200'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\\n4 10\\n400') == '400'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\\n4 10\\n400\\n20 10') == '400'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800\\n4 10\\n400\\n20 10\\n4 10\\n100') == '400'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 2 4 8 16\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 2 4 8 16\") == \"7\"\nassert solution(\"1 2 3 4\") == \"6\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n1 2 3 4\\n') == '6'\nassert solution('3 4 11\\n1 2 3 4\\n') == '7'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\nassert solution('5 5 11\\n1 2 4 8 16\\n') == '8'\nassert solution('5 5 12\\n1 2 4 8 16\\n') == '9'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 11\n1 2 3 4''') == '6'\nassert solution('''5 5 10\n1 2 4 8 16''') == '7'\nassert solution('''5 5 10\n1 2 4 8 16''') == '7'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 11\\n1 2 3 4') == '6'\nassert solution('5 5 10\\n1 2 4 8 16') == '7'\nassert solution('5 5 10\\n1 2 4 8 16') == '7'\nassert solution('5 5 10\\n1 2 4 8 16') == '7'\nassert solution('5 5 10\\n1 2 4 8 16') == '7'"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"7\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4 11\n1 2 3 4''') == '6'\nassert solution('''5 5 10\n1 2 4 8 16''') == '7'\nassert solution('''3 2 1\n1 2 3 4''') == '4'\nassert solution('''5 5 10\n1 2 4 8 16''') == '7'\n'''\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 4 11\n1 2 3 4\n''') == '6'\nassert solution('''5 5 10\n1 2 4 8 16\n''') == '7'\nassert solution('''7 7 7\n1 2 4 8 16\n''') == '8'\nassert solution('''6 7 7\n1 2 4 8 16\n''') == '8'\nassert solution('''5 4 7\n1 2 4 8 16\n''') == '8'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 0\nassert solution('1') == 1\nassert solution('4') == 0\nassert solution('5') == 1\nassert solution('6') == 0\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '1'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'\n\n'''\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '2'\nassert solution('7') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4''') == ''\nassert solution('''3''') == '0'\nassert solution('''2''') == '0'\nassert solution('''1''') == '1'\nassert solution('''9''') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '1'\nassert solution('''3''') == '0'\n\n\n--- But in this question, the exact answer will be 526. ---\n'''\n\n'''\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 0''') == '1 1'\nassert solution('''4 3 11''') == '1 2'\nassert solution('''4 3 7''') == '3 2'\nassert solution('''1 1''') == '1 1'\nassert solution('''2 3 2''') == '1 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('5 3 8') == '2 3'\nassert solution('5 4 19') == '5 4'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == output\n\n\"\"\"\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3 0''') == '1 1'\nassert solution('''4 3 11''') == '1 2'\nassert solution('''4 3 7''') == '3 2'\nassert solution('''4 3 11''') == '1 2'\nassert solution('''4 3 11''') == '1 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('4 3 0') == '1 1'\nassert solution('4 3 4') == '2 1'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('4 3 -4') == '1 1'\nassert solution('4 3 -43') == '2 1'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('4 3 8') == '1 2'\n\n\n\"\"\"\n\nfrom math import ceil, log10\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split()\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('4 3 0') == '1 1'\nassert solution('4 3 1') == '1 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3 0''') == '1 1'\nassert solution('''4 3 11''') == '1 2'\nassert solution('''4 3 7''') == '3 2'\nassert solution('''7 7 23''') == '1 2'\nassert solution('''7 7 17''') == '2 2'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''0''') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('100000000000000000') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '1 4'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''17''') == '7 17'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"6\") == \"2 3\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"9\") == \"2 3\"\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890''') == '1 4'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''4''') == '1 4'\nassert solution('''6''') == '2 3'\nassert solution('''1''') == '1 1'\nassert solution('''4''') == '1 4'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n7\") == \"7\"\nassert solution(\"2\\n7\\n13\") == \"21\"\nassert solution(\"2\\n3\\n2\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n4\\n5') == '7'\nassert solution('2\\n5\\n7') == '21'\nassert solution('4\\n7\\n13') == '21'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('2\\n7\\n13') == '21'\nassert solution('4\\n7\\n2') == '0'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('1\\n2\\n3') == '0'\nassert solution('5\\n7\\n10') == '21'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n7\\n\") == \"7\"\nassert solution(\"4\\n7\\n13\\n\") == \"21\"\nassert solution(\"2\\n3\\n2\\n\") == \"0\""
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('5\\n7\\n2') == '0'\nassert solution('2\\n3\\n3') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n7\") == \"7\"\nassert solution(\"4\\n7\\n13\") == \"21\"\nassert solution(\"2\\n3\\n2\") == \"0\"\nassert solution(\"2\\n2\\n2\") == \"0\"\nassert solution(\"2\\n4\\n2\") == \"0\"\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n7\\n') == '7'\nassert solution('4\\n7\\n13\\n') == '21'\nassert solution('2\\n3\\n2\\n') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2 4''') == 'YES'\nassert solution('''2\n1 3 2''') == 'YES'\nassert solution('''2\n1 3''') == 'NO'\nassert solution('''3\n1 3 2 4''') == 'NO'\nassert solution('''1\n3''') == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 3 2 4\n''') == 'YES'\nassert solution('''\n1\n3 3\n''') == 'NO'\nassert solution('''\n2\n1 3 2 4\n''') == 'YES'\nassert solution('''\n10\n1 3 2 4 3 5 6 7 8 9 10\n''') == 'NO'\nassert solution('''\n5\n1 3 2 4 3 5\n''') == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3 3') == \"NO\"\nassert solution('1\\n3 3') == \"YES\"\nassert solution('1\\n2 2') == \"NO\"\nassert solution('1\\n2 3') == \"YES\"\nassert solution('2\\n1 3') == \"NO\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 3 2 4''') == 'YES'\nassert solution('''1\n3 3''') == 'NO'\nassert solution('''2\n1 3 2 4\n2 1 3 4''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == 'YES'\nassert solution('''2\n1 2 3 4\n2 1 3 4''') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 3 2 4''') == 'YES'\nassert solution('''1\n3 3''') == 'NO'\nassert solution('''1\n1 1''') == 'YES'\nassert solution('''3\n1 1 1''') == 'NO'\nassert solution('''4\n1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]\na.sort()\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"test\") == \"NO\"\nassert solution(\"1\\ntest\") == \"YES\"\nassert solution(\"1\\n3 3\") == \"NO\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"1 3 2 4\") == \"\"\nassert solution(\"1 3 2 4\\n2 3 1 4\") == \"YES\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == 'YES'\nassert solution('2\\n1\\n2') == 'YES'\nassert solution('3\\n2\\n1') == 'YES'\nassert solution('3\\n3\\n2') == 'YES'\nassert solution('3\\n2\\n3') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 7 28''') == '1'\nassert solution('''3 5 7''') == '1'\nassert solution('''9 9 9''') == '2'\nassert solution('''11 3 11''') == '2'\nassert solution('''99 999 999''') == '10'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('2\\n1\\n') == '2'\nassert solution('3\\n1\\n') == '3'\nassert solution('4\\n1\\n') == '4'\nassert solution('5\\n1\\n') == '5'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n7\n28''') == '1'\nassert solution('''3\n2 7 28\n\n''') == '1'\nassert solution('''4\n2 7 28\n\n''') == '3'\nassert solution('''5\n2 7 28\n\n''') == '4'\nassert solution('''6\n2 7 28\n\n''') == '5'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n2') == '2'\nassert solution('3\\n1\\n2') == '2'\nassert solution('4\\n1\\n2') == '2'\nassert solution('5\\n1\\n2') == '3'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 7 28''') == '''1'''\n\n'''\n    int n = stdin.readline().strip();\n    int arr = [int(c) for c in stdin.readline().strip().split(' ')];\n    int k = getCoPrimeCount(arr, n);\n    stdout.write(str(k));\n    for i in range(k):\n        stdout.write(''+ str(arr[i]))\n'''"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 7 28\\n2 7 9 28') == '1\\n2 7 9 28'\nassert solution('4 11 12 15\\n4 11 12 15') == '0\\n4 11 12 15'\nassert solution('2 7 28\\n5 11 19 21\\n2 7 9 28') == '2\\n5 11 19 21'\nassert solution('8 9 9 10\\n
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 7 28') == '1'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == '2'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == '1'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == '1'\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n8 20') == '7'\nassert solution('1 1\\n1 1') == '1'\nassert solution('5 7\\n8 9 10 11 12') == '4'\nassert solution('5 6\\n2 4 3 5') == '1'\nassert solution('5 6\\n7 8 9 10 11') == '4'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 2 3 4') == '7'\nassert solution('10 3\\n1 2 3 4 5 6 7 8 9 10') == '7'\nassert solution('10 3\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10') == '7'"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n8 20\\n') == '7'\nassert solution('1 1000\\n1 1000\\n') == '1000'\nassert solution('5 6\\n1 2 3 4 5\\n3 2 4 1\\n') == '1'"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n8 20') == '7'\nassert solution('2 2\\n2 2') == '1'\nassert solution('1 4\\n3 2') == '2'\nassert solution('2 6\\n1 1') == '1'\nassert solution('2 3\\n1 2') == '2'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n8 20') == '7'\nassert solution('1 1\\n1') == '1'\nassert solution('2 3\\n3 3') == '1'\nassert solution('2 2\\n2') == '1'\nassert solution('2 3\\n1 3') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 3') == '7'\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 3\n8 20'''\n) == '7'\n\nassert solution(\n'''5 3\n4 4 5 1 3'''\n) == '1'\n\nassert solution(\n'''1 10\n
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"4 3\\n8 20\") == \"7\"\nassert solution(\"2 3\\n8 20\") == \"7\"\n\nimport sys"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution('1') == '0'\nassert solution('7') == '0'\nassert solution('39') == '4'\nassert solution('79') == '5 3'\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('39') == '4\\n5 3'\nassert solution('1') == '0'\nassert solution('7') == '0'\n\n\n-----Testcases-----\nInput\n39\nOutput\n4\n5 3 \nInput\n1\nOutput\n0\nInput\n7\nOutput\n0\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(39) == \"4\\n5 3\\n\"\nassert solution(1) == \"0\\n\"\nassert solution(7) == \"0\\n\"\n\n\n\n\n-----"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('39') == '5 3'\nassert solution('1') == '0'\nassert solution('7') == '0'\n\"\"\"\n\nfrom math import log"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9') == '4'\nassert solution('10') == '0'\nassert solution('100') == '40'\nassert solution('1000') == '40'\nassert solution('10000') == '40'\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''39''') == '''4\n5 3'''\nassert solution('''1''') == '''0'''\nassert solution('''7''') == '''0'''\nassert solution('''2''') == '''0'''\nassert solution('''4''') == '''0'''\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\"\nassert solution(\"1 2 3 4 5 6\") == \"7\"\nassert solution(\"3 4 4 4 4 4\") == \"3\"\nassert solution(\"3 6\") == \"2\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6\\n2 3 5\\n') == '2'\nassert solution('6 7\\n1 2 3 4 5 6\\n') == '7'\nassert solution('3 7\\n1 2 3 4 5 6 7\\n') == '7'\nassert solution('5 9\\n1 2 2 3 4 5 6\\n') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n2 3 5\\n\") == \"2\\n\"\nassert solution(\"6 7\\n1 2 3 4 5 6\\n\") == \"7\\n\"\nassert solution(\"5 10\\n1 2 3 4 5\\n\") == \"4\\n\"\nassert solution(\"6 5\\n2 3 4 5 6\\n\") == \"7\\n\"\nassert solution(\"5 10\\n1 1 1 1 1 1\\n\") == \"6\\n\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 6\n2 3 5\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6 7\n1 2 3 4 5 6\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n3 3\n3 1 2\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n3 6\n1 2 3 4 5 6\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n4 5\n1 2 3 4\n\"\"\") == \"4\""
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\"\nassert solution(\"6 7\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"6 7\") == \"7\"\nassert solution(\"1 2 3 4 5 6\") == \"7\"\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 3 4\\n') == '1'\nassert solution('6 7\\n1 2 3 4 5 6\\n') == '7'\nassert solution('2 3\\n2 3 2\\n') == '2'\nassert solution('1 2 3\\n1 2 3 2\\n') == '1'\nassert solution('4 7\\n1 1 1 1 1 1\\n') == '1'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2') == 'NO'\nassert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\nassert solution('7 3') == 'NO'\nassert solution('10 3') == 'YES'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n#G#T#') == 'YES'\nassert solution('6 1\\nT....G') == 'YES'\nassert solution('6 2\\n..GT..') == 'NO'\nassert solution('7 3\\nT..#..G') == 'NO'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n#G#T#\\n\") == \"YES\"\nassert solution(\"6 1\\n..GT..\\n\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\\n\") == \"NO\"\nassert solution(\"6 2\\n..GT..\\n\") == \"NO\"\nassert solution(\"7 4\\nG..T...G\\n\") == \"NO\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"YES\"\nassert solution(\"6 1\") == \"YES\"\nassert solution(\"7 3\") == \"NO\"\nassert solution(\"6 2\") == \"NO\"\nassert solution(\"..GT..\") == \"NO\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('#') is None\nassert solution('T') is None\nassert solution('TGTT') is None\nassert solution('GT') is None\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'YES'\nassert solution('7 3') == 'NO'\nassert solution('6 2') == 'NO'\nassert solution('..GT..') == 'NO'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == 'NO'\nassert solution('4\\nG...#..') == 'YES'\nassert solution('5\\n#G#.#.T#') == 'YES'\nassert solution('6\\n...GT..') == 'NO'\nassert solution('7\\nT...G..') == 'NO'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\nassert solution('0 1 2 0 1 1') == '1'\nassert solution('0 1 2 0 1 1') == '1'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\n\n'''"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 10 13 10 3 1''') == '4.375'\nassert solution('''1 4 6 2 2 1''') == '-1'\nassert solution('''3 10 15 17 9 2''') == '11.3333333333'\nassert solution('''4 10 13 10 3 1''') == '4.375'\nassert solution('''1 4 6 2 2 1''') == '-1'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 10 13 10 3 1\") == \"4.375\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"3 10 15 17 9 3\") == \"8.33333333333\"\nassert solution(\"3 10 15 17 9 4\") == \"9.33333333333\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\nassert solution('3 10 16 19 22 3') == '12.5'\nassert solution('3 10 17 22 19 3') == '12.5'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"2.5\"\nassert solution(\"1 4 6 2 2 1\") == \"-1\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"3 10 15 17 9 2\") == \"11.3333333333\"\nassert solution(\"4 10 13 10 3 1\") == \"4.375\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 10 13 10 3 1\"\n) == \"4.375\"\nassert solution(\n    \"1 4 6 2 2 1\"\n) == \"-1\"\nassert solution(\n    \"3 10 15 17 9 2\"\n) == \"11.3333\"\nassert solution(\n    \"4 10 1 1 2 2 1\"\n) == \"4.5\"\nassert solution(\n    \"2 1 3 1 2 1\"\n) == \"1.5\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 13 10 3 1') == '4.375'\nassert solution('2 10 15 17 9 2') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333'\nassert solution('3 10 15 17 9 2') == '11.3333'\nassert solution('1 4 6 2 2 1') == '4.375'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 10 13 10 3 1\"\"\") == \"4.3750000000\"\nassert solution(\"\"\"1 4 6 2 2 1\"\"\") == \"-1\"\nassert solution(\"\"\"3 10 15 17 9 2\"\"\") == \"11.3333333333\"\nassert solution(\"\"\"10 7 4 3 4 1\"\"\") == \"10.79999999999\"\nassert solution(\"\"\"3 4 2 2 3 2 1\"\"\") == \"3.50000000\""
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 10 13 10 3 1''') == '4.375'\nassert solution('''1 4 6 2 2 1''') == '-1'\nassert solution('''3 10 15 17 9 2''') == '11.3333333333'\nassert solution('''1 1 1 1 1 1''') == '1.0000000000'\nassert solution('''3 3 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1 1 1') == 0\nassert solution('1 0 0') == 1\nassert solution('1 1 1') == 0\nassert solution('1000000000000000000 0 1000000000000000000') == 9999999999999999999\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 0 0') == '1'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2 1''') == '1'\nassert solution('''1 0 0''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''1000000000000000000 0 1000000000000000000''') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nprint('All tests passed successfully')"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 6 9 8 5 2''') == 'NO'\nassert solution('''8\n1 2 3 6 9 8 5 2''') == 'YES'\nassert solution('''3\n1 2 1 2 5 3''') == 'NO'\nassert solution('''6\n1 2 1 2 5 3''') == 'YES'\nassert solution('''6\n1 2 1 2 5 3''') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6') == 'NO'\nassert solution('1 2 3 4 5 6 7') == 'NO'\nassert solution('1 2 3 4 5 6 8 9') == 'NO'\nassert solution('1 2 3 4 5 6 9') == 'NO'\nassert solution('1 2 3 4 5 6 7 8') == 'NO'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8''') == 'YES'\nassert solution('''6''') == 'NO'\nassert solution('''2''') == 'YES'\nassert solution('''1 10''') == 'YES'\nassert solution('''9''') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 2 5 3') == 'YES\\n3 3'\nassert solution('8') == 'NO'\nassert solution('1 2 1 2 5 3') == 'NO'\nassert solution('8') == 'NO'\nassert solution('1 10') == 'YES\\n4 9'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n8\n1 2 3 6 9 8 5 2\n''') == 'YES'\nassert solution('''\n6\n1 2 1 2 5 3\n''') == 'NO'\nassert solution('''\n2\n1 10\n''') == 'YES'\nassert solution('''\n1\n1\n''') == 'YES'\n'''\nTest always passes\n'''\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1 2 3 6 9 8 5 2''') == 'YES\\n3 3\\n'\nassert solution('''6\n1 2 1 2 5 3''') == 'NO\\n'\nassert solution('''2\n1 10''') == 'YES\\n4 9\\n'\nassert solution('''4\n1 2 1 2 5 3''') == 'NO\\n'\nassert solution('''5\n1 1 1 1 1 1''') == 'YES\\n5 5\\n'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8\n1 2 3 6 9 8 5 2''') == \"YES\\n3 3\"\nassert solution('''6\n1 2 1 2 5 3''') == \"NO\"\nassert solution('''2\n1 10''') == \"YES\\n4 9\"\nassert solution('''10\n1 2 1 2 5 3''') == \"NO\"\nassert solution('''10\n1 2 1 2 5 3''') == \"NO\"\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\nimport sys\nsys.path.append('/home/fabio/dev/github/kata/matrix/')\nfrom solutions.kyu_7.matrix.matrix_solve_path_in_matrix_1 import solution\n\n\"\"\"\n\nimport sys\nsys.path.append('/home/fabio/dev/github/kata/matrix/')\nfrom solutions.kyu_7.matrix.matrix_solve_path_in_matrix_1 import solution"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''8\n1 2 3 6 9 8 5 2\n''') == 'YES\\n3 3\\n'\n\nassert solution(\n    '''6\n1 2 1 2 5 3\n''') == 'NO\\n'\n\nassert solution(\n    '''2\n1 10\n''') == 'YES\\n4 9\\n'\n\nassert solution(\n    '''4\n1 2 1 2 5 3\n''') == 'NO\\n'\n\nassert solution(\n    '''7\n1 3 1 4 3 5 3\n''') == 'YES\\n2 2\\n'"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nprint('Tests passed')\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''hi\nbob''') == '-'\nassert solution('''abacaba\nabcdcba''') == 'abcba'\nassert solution('''abca\nbob''') == 'ac'\nassert solution('''abca\nbob''') == 'ac'\nassert solution('''abca\nbob''') == 'ac'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"hi\") == \"-\"\nassert solution(\"bob\") == \"-\"\nassert solution(\"abacaba\") == \"ac\"\nassert solution(\"abcdcba\") == \"abcba\"\nassert solution(\"xxx\") == \"-\"\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('hi\\nbob') == '-','should return -'\nassert solution('abca\\nbob') == 'ac','should return ac'\nassert solution('abacaba\\nbcdcba') == 'abcba','should return abcba'\nassert solution('abcba\\nbcdcba') == 'abcba','should return abcba'\nassert solution('abca\\nbob') == '-','should return -'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hi') == '-'\nassert solution('bob') == '-'\nassert solution('abca') == '-'\nassert solution('abacaba') == 'ac'\nassert solution('abcdcba') == 'ac'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hi', 'bob') == '-'\nassert solution('abacaba', 'abcdcba') == 'abcba'\nassert solution('abacaba', 'abcdcba') == 'abcba'\nassert solution('abacaba', 'abcdcba') == 'abcba'\nassert solution('abacaba', 'abcdcba') == 'abcba'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hi') == '-', \"First\"\nassert solution('bob') == 'b', \"Second\"\nassert solution('abca') == 'ac', \"Third\"\nassert solution('abacaba') == 'acba', \"Fourth\"\nassert solution('abcdcba') == 'abcba', \"Fifth\"\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('Hi') == 'Hi'\nassert solution('abca') == 'a'\nassert solution('abcdcba') == 'abcba'\nassert solution('HiBob') == 'Hi'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('h') == 'h'\nassert solution('hi') == 'hi'\nassert solution('haibei') == 'hi'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('++-++') == '3'\nassert solution('++++') == '4'\nassert solution('+++++') == '5'\nassert solution('+++++++') == '6'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"++-++\") == \"3\"\nassert solution(\"++-++\") == \"3\"\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('++-++') == '3'\nassert solution('+') == '3'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5++--') == '3'\n\n\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize = None)\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-\") == \"\"\nassert solution(\"++-\") == \"\"\nassert solution(\"++--\") == \"\"\nassert solution(\"++-++-\") == \"\"\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '3'\nassert solution('++-++') == '3'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5++-++\") == \"3\"\nassert solution(\"++-++\") == \"3\"\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '0'\nassert solution('''4''') == '4'\nassert solution('''2''') == '1'\nassert solution('''5''') == '3'\nassert solution('''++-++''') == '3'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n10\n11\n9\n8\n'''\n) == '2'\n\nassert solution(\n'''\n10\n5\n6\n1\n'''\n) == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '2'\nassert solution('10\\n11\\n9\\n8\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10\n11\n9\n8\n\"\"\"\n) == '2'\nassert solution(\n\"\"\"\n10\n5\n6\n1\n\"\"\"\n) == '2'\nassert solution(\n\"\"\"\n1000000000\n10000000\n999999999\n999999998\n999999999\n999999997\n999999996\n999999995\n999999994\n999999993\n999999992\n999999991\n999999990\n999999\n99999\n9999\n9999\n9999\n9999\n9999\n99999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n9999\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '2'\nassert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\nassert solution('10\\n5\\n6\\n1\\n4\\n3') == '1'\nassert solution('10\\n5\\n6\\n1\\n5\\n3') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n9\\n8') == '2'\nassert solution('2\\n11\\n9\\n8') == '2'\nassert solution('3\\n11\\n9\\n8') == '2'\nassert solution('4\\n11\\n9\\n8') == '3'\nassert solution('5\\n11\\n9\\n8') == '3'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n11\n9\n8''') == '2'\n\nassert solution('''10\n5\n6\n1''') == '2'"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n11\\n9\\n8\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\nassert solution('10\\n11\\n9\\n11\\n') == '2'\nassert solution('10\\n5\\n11\\n11\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"4\\n2\\n1\\n3\\n4\") == \"2\"\nassert solution(\"4\\n3\\n1\\n2\\n4\") == \"2\"\nassert solution(\"5\\n2\\n3\\n4\\n5\") == \"3\"\nassert solution(\"5\\n3\\n1\\n2\\n3\\n4\\n5\") == \"3\"\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10\n11\n9\n8\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n10\n5\n6\n1\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('3\\n1 2\\n2 1 3') == '-1'\nassert solution('3\\n2 1\\n1') == '-1'\nassert solution('3\\n2 2\\n2') == '-1'\nassert solution('3\\n2 2\\n1') == '-1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 3\\n2 4 2\\n\") == \"6 2\"\nassert solution(\"3\\n1 2\\n2 1 3\\n\") == \"-1\"\nassert solution(\"3\\n1 1\\n2 1 3\\n\") == \"-1\"\nassert solution(\"3\\n1 1\\n1 1\\n\") == \"1 1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n\") == \"1 2\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 1\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('3\\n1 2\\n2 1 3\\n') == '-1'\nassert solution('2\\n1 1\\n1') == '-1'\nassert solution('3\\n1 1 3\\n1') == '-1'\nassert solution('1\\n1 1\\n1') == '-1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('5\\n2 1 3\\n2 4 1') == '-1'\nassert solution('3\\n1 2\\n2 1 3') == '-1'\nassert solution('3\\n1 2\\n1 2 3') == '4 1'\nassert solution('10\\n1 1 2 3 4 4 5 5 6 6 7 7 7 8 8 8 9 9 9 10') == '10 2'\n\n\n-----"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == \"6 2\"\nassert solution('''3\n1 2\n2 1 3\n2 4 2''') == \"-1\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '0 2'\nassert solution('1') == '0 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 3\\n2 4 2') == '6 2'\nassert solution('3\\n1 2\\n2 1 3') == '-1'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nprint('Test case passed!')\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nprint('Test cases passed')\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"Too weak\"\nassert solution(\"abc\") == \"Too weak\"\nassert solution(\"abc!def\") == \"Too weak\"\nassert solution(\"abc?def\") == \"Too weak\"\nassert solution(\"abc,def\") == \"Too weak\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'Too weak'\nassert solution('abc') == 'Too weak'\nassert solution('X12345') == 'Correct'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('a!b_12') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"Too weak\"\nassert solution(\"X12345\") == \"Too weak\"\nassert solution(\"CONTEST_is_STARTED!!11\") == \"Correct\"\nassert solution(\"a\") == \"Too weak\"\nassert solution(\"a1\") == \"Too weak\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('abc') == 'Too weak'\nassert solution('ab') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('ab!') == 'Too weak'\nassert solution('_A') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('a') == 'Too weak'\nassert solution('!_12345!_qwerty_3456') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nprint('All set! Click \"Check\" to earn sweet rewards!')\n\"\"\""
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''\n6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''\n1\n5\n3\n''') == '-1'\n\nassert solution('''\n9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3') == -1\nassert solution('4\\n3 1 3 2') == 1\nassert solution('3\\n2 1 1') == -1\nassert solution('6\\n3 4 3 2 3 3 1') == 3\nassert solution('9\\n3 2 5 5 2 3 3 3 2') == 4\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''\n6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''\n1\n5\n3\n''') == '-1'\n\nassert solution('''\n9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''1\n5\n3\n''') == '-1'\n\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\nassert solution('''1\n5\n3\n''') == '-1'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nn = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n><>\nv^v''') == 'NO'\nassert solution('''4 6\n><>\nv^v^v^''') == 'YES'\nassert solution('''2 1\n<>\n<>''') == 'YES'\nassert solution('''2 3\n<>\n>v^''') == 'YES'\nassert solution('''2 3\n^v^\n<>''') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 6\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"1 4\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 6\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"<<>><^<v>>>\") == \"YES\"\nassert solution(\"<><>\") == \"YES\"\nassert solution(\"<><>^<v>\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\">^^^\") == \"YES\"\nassert solution(\"><\") == \"NO\"\nassert solution(\"<^^\") == \"YES\"\nassert solution(\"^^>\") == \"YES\"\nassert solution(\"<^v^v^\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('>v<') == 'NO'\nassert solution('<><>') == 'YES'\nassert solution('v^v') == 'YES'\nassert solution('vv^v^v') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('4 6') == 'YES'\nassert solution('<><>') == 'YES'\nassert solution('v^v^v^') == 'YES'\nassert solution('^v^v^v^v^v') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n><>\\nv^v\\n') == 'NO'\nassert solution('3 3\\n><>\\nv^v\\n') == 'YES'\nassert solution('4 6\\n<><>\\nv^v^v^\\n') == 'YES'\n\n\n'''\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n>><\\nv^v\\n\") == \"YES\"\nassert solution(\"2 4\\n><><\\nv^v\\n\") == \"NO\"\nassert solution(\"2 3\\n><>\\nv^v\\n\") == \"YES\"\nassert solution(\"3 4\\n><><\\n^v^v\\n\") == \"YES\"\nassert solution(\"3 4\\n>><\\nv^v\\n\") == \"NO\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 3\n><>\nv^v\n\n\"\"\") == \"NO\"\nassert solution(\"\"\"3 5\n><v<\nvvv^v\n\n\"\"\") == \"YES\"\n\"\"\"\ntry:\n    n, m = [int(x) for x in stdin.split()]\nexcept ValueError:\n    print(\"\"\"The number of horizontal streets and the number of vertical streets must be positive integers.\"\"\")\n    exit()\n\ndirections = stdin.strip()"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"NO\"\nassert solution(\"0\\n0\") == \"NO\"\nassert solution(\"0\\n1\") == \"NO\"\nassert solution(\"0\\n0\\n0\") == \"NO\"\nassert solution(\"0\\n0\\n1\") == \"NO\"\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n0 1 1 0\\n') == 'YES\\n(((0)->1)->(1->0))'\nassert solution('4\\n0 1 1 0\\n') == 'YES\\n0'\nassert solution('2\\n1 1\\n') == 'NO'\nassert solution('1\\n0\\n') == 'YES\\n0'\nassert solution('2\\n0\\n') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n1''') == 'YES'\nassert solution('''0\n1''') == 'NO'\nassert solution('''1\n1''') == 'NO'\nassert solution('''1\n0''') == 'NO'\nassert solution('''0\n0''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0->1') == 'YES'\nassert solution('0->1|0') == 'YES'\nassert solution('0->1|0') == 'YES'\nassert solution('0->(1->0)') == 'YES'\nassert solution('0->(1->0)') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0->1\n1->0''') == 'NO'\nassert solution('''1->0\n0->1''') == 'YES'\nassert solution('''1->0\n0->1''') == 'YES'\nassert solution('''0->1\n0->1''') == 'YES'\nassert solution('''1->0\n1->0''') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'NO'\nassert solution('0') == 'NO'\nassert solution('1') == 'YES'\nassert solution('0->1') == 'NO'\nassert solution('0->1->0') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == 'NO'\nassert solution('0 0') == 'NO'\nassert solution('0 1') == 'NO'\nassert solution('0 0 0') == 'NO'\nassert solution('0 0 1') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"YES\"\nassert solution(\"0 1 0 1\") == \"NO\"\nassert solution(\"0 0\") == \"YES\"\nassert solution(\"0 1 1\") == \"NO\"\nassert solution(\"0 0 1 1\") == \"NO\"\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0->0') == 'YES'\nassert solution('0->1') == 'NO'\nassert solution('1->0') == 'YES'\nassert solution('1->1') == 'NO'\nassert solution('0->0->0') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 -> 1\") == \"YES\"\nassert solution(\"0 -> 1\") == \"NO\"\nassert solution(\"1 -> 0\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0 1'\nassert solution('123 456') == '2 4'\nassert solution('123 1234') == '4 1234'\nassert solution('0 0') == '0 0'\nassert solution('1 1') == '0 1'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"0 1\"\nassert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\nassert solution(\"12 1\") == \"0 1\"\nassert solution(\"1 1\") == \"0 1\"\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 5') == '0 1'\nassert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('2 2') == '0 1'\nassert solution('12 1') == '1 1'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(12, 5) == '0 1'\nassert solution(31, 12) == '7 12'\n\"\"\"\n\n\"\"\"\nThis is the solution of the problem statement.\n\nAlgorithm:\n\n1. We initialize a and b as positive integers\n2. Then we keep on doing the following until a and b are either zero or both are positive integers\n3. If a and b are zero, we print the values of a and b\n4. If a is greater than 2*b, we set a to a - 2*b\n5. If b is greater than 2*a, we set b to b - 2*a\n6. If neither a nor b are positive integers, we end the process\n7. We return the values of a and b\n\nWhat is the time complexity of the algorithm?\n\nO(log(b) * log(a))\n\n\"\"\""
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n\n\n\"\"\"\nn, m = [int(x) for x in stdin.split()]\n\nwhile n or m:\n    if n == 0 or m == 0:\n        break\n    if n >= m*2:\n        n -= m*2\n    elif m >= n*2:\n        m -= n*2\n    else:\n        break\n\nprint(n, m)\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('10 5') == '0 1'\nassert solution('1 1') == '0 1'\nassert solution('4 4') == '1 1'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nprint('Test success!')\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('0 1') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('12 5') == '0 1'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('29 11') == '0 0'\nassert solution('15 22') == '2 0'\nassert solution('0 0') == '0 0'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('1000 1') == '1000 1'\nassert solution('1000 10') == '1000 0'\nassert solution('1 1') == '0 0'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 1 10\n\"\"\"\n) == \"10\"\nassert solution(\n\"\"\"\n2 -4 4\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n2 -4 7\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 2 3\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1 1 10\n\"\"\"\n) == \"10\"\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nassert solution('''1 1 10''') == '10'\nassert solution('''-1 1 10''') == '10'\nassert solution('''1 0 1''') == '1'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nprint(solution('''2 -4 4'''))\nassert solution('''3 -2 3''') == '1'\nassert solution('''1 2 3''') == '0'\nassert solution('''2 1 2''') == '0'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nassert solution('''3 -4 4''') == '6'\nassert solution('''10 -4 4''') == '1'\nassert solution('''2 -4 4''') == '5'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('15') == '0'\nassert solution('45') == '5'\nassert solution('101') == '1'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('0') == '0'\nassert solution('10') == '1'\nassert solution('26') == '6'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()[-1]\nassert solution(input()) == input()[-2]\nassert solution(input()) == input()[-3]\nassert solution(input()) == input()[-4]\nassert solution(input()) == input()[-5]\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '2'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nprint('Test success!')\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('8') == '6'\nassert solution('20') == '4'\nassert solution('100') == '9'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n'''\n) == '1'\n\nassert solution(\n'''\n2\n'''\n) == '0'\n\nassert solution(\n'''\n10\n'''\n) == '9'\n\nassert solution(\n'''\n1\n'''\n) == '1'\n\nassert solution(\n'''\n10\n'''\n) == '0'"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('12') == '2'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('100') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '8'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\" or solution(input()) == \"YES\" or solution(input()) == \"NO\"\n\n\"\"\"\n\n__author__ = \"codingcat\"\n__project__ = \"leetcode\"\n\n\"\"\"\n\nShortest time: 13 min\nProblem solved:\n\n\"\"\""
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8380011223344') == \"YES\"\nassert solution('807345619350641') == \"NO\""
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8380011223344\") == \"YES\"\nassert solution(\"807345619350641\") == \"NO\"\nassert solution(\"909065776981085\") == \"YES\"\nassert solution(\"539689873456699\") == \"NO\"\nassert solution(\"109764529661390\") == \"NO\"\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('22') == 'YES'\nassert solution('33') == 'YES'\nassert solution('55') == 'YES'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'NO'\nassert solution('0') == 'NO'\nassert solution('00') == 'NO'\nassert solution('1') == 'NO'\nassert solution('01') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('3') == 'NO'\nassert solution('8') == 'YES'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('2220342900000111') == 'NO'\nassert solution('8380011223344') == 'YES'\nassert solution('98803794999') == 'YES'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('5 3 2') == '1350'\nassert solution('4 1 2') == '6'\nassert solution('5 4 2') == '1350'\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('1324 235 57') == '62361729'"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 1 2''') == '6'\nassert solution('''123 42 24''') == '824071958'\nassert solution('''123 24 1''') == '1'\nassert solution('''2 4 1 2''') == '824071958'\nassert solution('''3 4 1 2''') == '1'\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 2') == '6'\nassert solution('123 42 24') == '824071958'\n\"\"\"\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\nassert solution(\"1 2\") == \"0\"\n\n\n-----\n\n'''\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('1 1 1') == '10'\n\n\"\"\"\nfrom math import factorial\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 1') == '2'\nassert solution('3 5 1') == '2'\nassert solution('4 5 1') == '3'\nassert solution('5 2 1') == '6'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abc*?') == ''\nassert solution('*?abc') == ''\nassert solution('abc?*') == 'abc'\nassert solution('*abc?') == 'abc'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('h?w?aw*?ee*') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == \"happynewyear\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'ab'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aba'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == \"happynewyear\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-60\") == 3\n\n\"\"\"\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"60\") == \"1\"\nassert solution(\"-60\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"60\") == \"1\"\nassert solution(\"-60\") == \"3\"\nassert solution(\"-20\") == \"0\"\n\"\"\"\n\nimport sys\nfrom datetime import datetime\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''60''') == '1'\nassert solution('''-60''') == '3'\nassert solution('''-60''') == '3'\nassert solution('''0''') == '0'\nassert solution('''9000000''') == '9000000'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('60') == '1'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '30'\nassert solution(input()) == '120'\nassert solution(input()) == '330'\nassert solution(input()) == '0'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''60''') == '1'\nassert solution('''-60''') == '3'\n\n\n-----\n\n## Best\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 0''') == 'Yes'\nassert solution('''5 6 1''') == 'No'\nassert solution('''3 3 3''') == 'Yes'\nassert solution('''2 2 2''') == 'Yes'\nassert solution('''2 5 5''') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('5 6 1') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('2 2 2') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('5 6 1') == 'No'\nassert solution('3 3 3') == 'Yes'"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 4 0\n2 1 2\n''') == 'Yes'\n\nassert solution('''5 6 1\n2 7 2\n''') == 'No'\n\nassert solution('''3 3 3\n2 2 2\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\n\n\n'''\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4 0''') == 'Yes'\nassert solution('''5 6 1''') == 'No'\nassert solution('''3 3 3''') == 'Yes'\nassert solution('''2 2 2''') == 'Yes'\n\n'''\n) == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('2 1 2') == 'No'\nassert solution('5 6 1') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 0''') == 'Yes'\nassert solution('''5 6 1''') == 'No'\nassert solution('''3 3 3''') == 'Yes'\nassert solution('''2 2 2''') == 'Yes'\nassert solution('''7 6 2''') == 'No'\n'''\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('5 1 1111') == '0'\nassert solution('5 2 1111') == '1'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1 2 1000') == None\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('2 2 1000') == '45'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\nassert solution(\"5 5 11\") == \"0\"\nassert solution(\"10 12 43\") == \"1\"\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\n\"\"\""
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\n\n\"\"\"\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('5 5 1103') == '590'\nassert solution('5 4 1103') == '290'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4 2''') == '6'\nassert solution('''5 5 5''') == '14'\nassert solution('''0 2 0''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''5 5 4''') == '12'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('5 5 5') == '14'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('2 2 3') == '14'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\nassert solution(\"0 2 0\") == \"0\"\nassert solution(\"5 5 5\") == \"14\"\n\n\n\"\"\"\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('0 0 0') == 0\nassert solution('0 0 0') == 0\nassert solution('0 1 1') == 1\nassert solution('5 3 2') == 6\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1 4 2'''\n) == '6'\n\nassert solution(\n'''5 5 5'''\n) == '14'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('0 1 0') == '0'\nassert solution('3 3 3') == '9'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('2 3 1') == '4'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('-1 2 -3') == '-3'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\nassert solution('5 5') == '0'\nassert solution('10 3') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n5\\n1') == '0'\nassert solution('1\\n5\\n5') == '6'\nassert solution('2\\n1\\n2') == '2'\nassert solution('2\\n3\\n1') == '2'\nassert solution('2\\n3\\n3') == '7'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\nassert solution('5 3') == '15'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"2 5\") == \"11\"\nassert solution(\"3 2\") == \"7\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''4 2''') == '13'\nassert solution('''5 1''') == '15'\nassert solution('''2 3''') == '4'\nassert solution('''4 4''') == '10'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1''') == '6'\nassert solution('''4 2''') == '13'\nassert solution('''5 1''') == '15'\nassert solution('''10 10''') == '0'\nassert solution('''8 4''') == '16'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"1 5\") == \"10\"\nassert solution(\"1 10\") == \"11\"\n\n\n\n-----"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"4 0\") == \"0\"\nassert solution(\"5 10\") == \"25\"\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '8'\nassert solution('5 0') == '10'\nassert solution('1 3') == '9'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"10 9\") == \"10\"\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\nassert solution('1 3 2') == '9'\nassert solution('3 2 5') == '9'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n\n\n\"\"\""
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n''') == '9'\nassert solution('''3 2\n''') == '8'\nassert solution('''10 0\n''') == '10'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3''') == '9'\nassert solution('''3 2''') == '8'\nassert solution('''5 0''') == '10'\nassert solution('''1 2''') == '3'\nassert solution('''5 5''') == '2'\n\n'''\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 3\n''') == '9'\nassert solution('''3 2\n''') == '8'\nassert solution('''5 0\n''') == '10'\nassert solution('''3 0\n''') == '10'\nassert solution('''0 0\n''') == '1'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\n\"\"\""
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3''') == '9'\nassert solution('''3 2''') == '8'\nassert solution('''5 0''') == '10'\nassert solution('''1 0''') == '0'\nassert solution('''1 1''') == '2'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'NO'\nassert solution('4\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"YES\\n11 27\"\nassert solution(\"2\\n6\\n6\\n\") == \"NO\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 'NO'\nassert solution('6') == 'NO'\nassert solution('6') == 'NO'\nassert solution('6') == 'NO'\nassert solution('6') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == \"NO\"\nassert solution('6') == \"YES\"\nassert solution('6\\n1\\n1') == \"NO\"\nassert solution('6\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'NO\\n11 27'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\n\n\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nHave fun coding it!!\n\n\"\"\""
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"YES\\n11 27\\n\"\nassert solution(\"2\\n6\\n6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\\n\""
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"4\"\"\"\n) == \"\"\"YES\"\"\"\n\nassert solution(\n\"\"\"6\"\"\"\n) == \"\"\"NO\"\"\"\n\nassert solution(\n\"\"\"2\"\"\"\n) == \"\"\"NO\"\"\"\n\nassert solution(\n\"\"\"6\"\"\"\n) == \"\"\"NO\"\"\"\n\nassert solution(\n\"\"\"\n1\n1\n2\n2\n3\n3\n\n\"\"\"\n) == \"\"\"NO\"\"\""
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\") == \"YES\\n11 27\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11\\n27') == 'YES\\n11 27'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == 'NO\\n1 1'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'YES\\n11 27'\nassert solution('2\\n6\\n6\\n') == 'NO'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == \"YES\"\nassert solution('''1 2''') == \"NO\"\nassert solution('''1 4''') == \"YES\"\nassert solution('''1 2 1 2''') == \"YES\"\nassert solution('''1 2 2 1 2''') == \"NO\"\n'''"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'NO'\nassert solution('1 4') == 'YES'\nassert solution('2 2 1 2') == 'YES'\nassert solution('1 4') == 'YES'\nassert solution('2 2 1 2') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 1\\n') == 'YES'\nassert solution('1 2\\n2 1\\n') == 'YES'\nassert solution('1 2\\n2 1\\n') == 'YES'\nassert solution('1 2\\n2 1\\n') == 'YES'\nassert solution('1 2\\n2 1\\n') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n5 8\n''') == 'YES'\nassert solution('''1 2\n7 1\n''') == 'NO'\nassert solution('''1 4\n2 2 1 2\n''') == 'YES'\nassert solution('''1 2\n4 4\n''') == 'YES'\nassert solution('''1 4\n4 4\n''') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1 2\"\"\") == \"NO\"\nassert solution(\"\"\"1 4\"\"\") == \"YES\"\nassert solution(\"\"\"1 4\"\"\") == \"NO\"\nassert solution(\"\"\"1 4\"\"\") == \"YES\"\nassert solution(\"\"\"1 4\"\"\") == \"YES\"\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 2 2') == 'YES'\nassert solution('3\\n1 1 1') == 'YES'\nassert solution('2\\n1 1') == 'NO'\nassert solution('3\\n1 1 1') == 'YES'\nassert solution('3\\n1 1 2') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 2') == 'YES'\nassert solution('2 4') == 'YES'\nassert solution('2 4 1 2') == 'YES'\nassert solution('2 4 1 2 1 2') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('1 4') == 'YES'\nassert solution('1 2 1 2') == 'YES'\nassert solution('1 4 1 2 1 2') == 'YES'\nassert solution('1 2 1 2') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n5 8\n''') == \"YES\"\nassert solution('''1 2\n7 1\n''') == \"NO\"\nassert solution('''1 4\n2 2 1 2\n''') == \"YES\"\nassert solution('''1 4\n2 1 2 2\n''') == \"NO\"\nassert solution('''2 3\n2 4 2 5\n''') == \"YES\"\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == \"0 0\"\nassert solution(\"2\\n2\\n2\\n2\\n2\\n2\") == \"0 1\"\nassert solution(\"3\\n1\\n3\\n1\\n1\\n3\") == \"0 2\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\") == \"0 3\"\nassert solution(\"5\\n1\\n3\\n1\\n1\\n1\") == \"0 1\"\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n') == '3\\n0'\nassert solution('1\\n1\\n') == '0\\n0'\nassert solution('4\\n1 1 1 1') == '1\\n0'\nassert solution('1\\n1') == '0\\n0'\nassert solution('1\\n2') == '1\\n0'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n10 1 4''') == '3 7'\nassert solution('''5\n1 1 2 2 3''') == '2 0'\nassert solution('''5\n1 1 2 2 3''') == '2 0'\nassert solution('''2\n1 1''') == '1 0'\nassert solution('''5\n1 1 2 2 3''') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1 1'\nassert solution('2\\n1\\n') == '2 0'\nassert solution('3\\n1\\n') == '3 1'\nassert solution('4\\n1\\n') == '4 0'\nassert solution('5\\n1\\n') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n0'\nassert solution('1\\n2\\n3\\n') == '0\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '0\\n1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '0\\n1'"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n10 1 4') == '3 7'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('4\\n1 1 2 2') == '2 0'\nassert solution('1\\n1') == '0 0'\nassert solution('2\\n1 1') == '1 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n10 1 4\n''') == '3 7'\nassert solution('''5\n1 1 2 2 3\n''') == '2 0'\nassert solution('''6\n1 1 2 2 3 4\n''') == '2 1'\nassert solution('''7\n1 1 2 2 3 4 5 6\n''') == '2 1'\nassert solution('''8\n1 1 2 2 3 4 5 6 7 8\n''') == '2 1'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n10 1 4') == '3 7'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('2\\n1 1') == '1 0'\nassert solution('2\\n1') == '1 0'\nassert solution('6\\n10 3 2 1 1 1') == '1 5'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n10 1 4''') == '3 7'\nassert solution('''5\n1 1 2 2 3''') == '2 0'\nassert solution('''4\n1 1 1 2''') == '2 1'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == '1 1'\nassert solution('''15\n1 1 1 1 1 1 1 1 1 1 1 1''') == '1 1'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1' == '1')\nassert solution('3 2' == '3')\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys\n\nstdin = sys.stdin.read().rstrip()\nn, m = map(int, stdin.split())\n\nstars = [row.strip() for row in stdin.split('\\n')]\n\nwidth = len(stars[0])\nheight = len(stars)"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\""
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n*\\n***\\n***') == 3\nassert solution('2 3\\n*..\\n***\\n***\\n****\\n****') == 2\nassert solution('3 4\\n**.*\\n*.*\\n*.*\\n*.*') == 1\n\n\n\n\n\"\"\""
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('....') == 3\nassert solution('.**') == 1\nassert solution('.*.*') == 1\nassert solution('..*') == 3\nassert solution('*.*') == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('....\\n..*.\\n...*\\n..**') == 3\nassert solution('1 3\\n*.*\\n') == 3\nassert solution('2 1\\n.\\n*') == 1\nassert solution('4 6\\n....\\n....\\n....\\n....\\n....\\n....\\n....') == 3\nassert solution('1 1\\n*\\n') == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('..*.\\n*.**\\n.**.\\n.*.*\\n.*.*\\n.*.*') == 3\nassert solution('*.**\\n***.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*\\n.*.*') == 1\nassert solution('*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*') == 3\nassert solution('*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*\\n.*.*.*') == 3\n\n\n\n\n\n\n\n\n\n'''"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n.\\n*.\\n.*\\n.*\\n.*\\n.*') == '3'\nassert solution('2\\n.\\n.*') == '1'\nassert solution('2\\n.*') == '1'\nassert solution('1\\n.\\n*') == '3'\n\n\n    \n\"\"\""
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n....\n..*.\n...*\n..**\n''') == '3'\n\nassert solution('''\n2 1\n.\n*\n''') == '1'\n\nassert solution('''\n3 3\n...\n**.\n.**\n''') == '3'\n\nassert solution('''\n4 5\n...\n..*.\n*.*\n..**\n''') == '4'\n\nassert solution('''\n1 1\n.\n*\n''') == '1'"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 4\n....\n..*.\n...*\n..**\n''') == \"3\"\nassert solution(\n'''\n1 3\n*.*\n''') == \"3\"\nassert solution(\n'''\n2 1\n.\n*\n''') == \"1\"\nassert solution(\n'''\n2 2\n....\n..*.\n..**\n''') == \"1\"\nassert solution(\n'''\n1 2\n*.*\n''') == \"2\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\n'''\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '333333336'\nassert solution('5 1') == '0'\nassert solution('6 4') == '968493834'\nassert solution('1 1 1 0 0') == '0'\nassert solution('1 0 0 1 1 0') == '0'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2\\n0 1 0\\n') == '333333336'\nassert solution('5 1\\n1 1 1 0 0\\n') == '0'\nassert solution('6 4\\n1 0 0 1 1 0\\n') == '968493834'\n'''\n\nfrom fractions import Fraction\nfrom fractions import gcd"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '0'\nassert solution('0 1 0') == '0'\nassert solution('0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '0'\nassert solution
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\"\n'''\n\nfrom math import gcd\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '0'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\nassert solution(\"100 100\") == \"0\"\nassert solution(\"100 000\") == \"0\"\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('5 5') == '5'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('8 10') == '3'\nassert solution('22 8') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nexpected = 3"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 3''') == '4'\nassert solution('''8 5''') == '3'\nassert solution('''22 4''') == '6'\n\n\n-----Add-ons (Not verified)-----\n\nA lot of people are wondering, why is there no square root?\n\nWe are now interested in the de-evolution of triangles. He starts with an equilateral triangle of side length x, and he wishes to perform operations to obtain an equilateral triangle of side length y.\n\nIn a single second, he can modify the length of a single side of the current triangle such that it remains a non-degenerate triangle (triangle of positive area). At any moment of time, the length of each side should be integer.\n\nWhat is the minimum number of seconds required for Memory to obtain the equilateral triangle of side length y?\n\nWhen the de-evolution is to start, he has to do the following operations:\n\nAt any second of time:\n    Given an equilateral triangle of side length x, modify the lengths of its sides such that the triangle remains a non-degenerate triangle (triangle of positive area).\n    For example, the triangle (1,2,2) can become (1,2,3).\n    (1,2,3) is non-degenerate because area = 3/4 * 2 * 1 = 1.5.\n    \nFor each second of time, Memory performs the following operations:\n    Perform the first operation.\n    For each non-degenerate triangle of side length x, modify the lengths of its sides such that it remains a non-degenerate triangle (triangle of positive area).\n    For example, the non-degenerate triangle (1,2,2) can become (1,2,3).\n    (1,2,3) is non-degenerate because area = 3/4 * 2 * 1 = 1.5.\n    \nWhat is the minimum number of seconds required for Memory to obtain the equilateral triangle of side length y?\n\nIn the first sample test, Memory starts with an equilateral triangle of side length 6 and wants one of side length 3. Denote a triangle with sides a, b, and c as (a, b, c). Then, Memory can do $(6,6,6) \\rightarrow(6,6,3) \\rightarrow(6,4,3) \\rightarrow(3,4,3) \\rightarrow(3,3,3)$.\n\nIn the second sample test, Memory can do $(8,8,8) \\rightarrow(8,8,5) \\rightarrow(8,5,5) \\rightarrow(5,5,5)$.\n\nIn the third sample test, Memory can do: $(22,22,22) \\rightarrow(7,22,22) \\rightarrow(7,22,16) \\rightarrow(7,10,16) \\rightarrow(7,10,4) \\rightarrow$\n\n$(7,4,4) \\rightarrow(4,4,4)$."
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4') == '3'\nassert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('10000 1001') == '10'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"10 1\") == \"9\"\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"6 3\"\"\") == \"4\"\n\nassert solution(\n\"\"\"8 5\"\"\") == \"3\"\n\nassert solution(\n\"\"\"22 4\"\"\") == \"6\"\n\nassert solution(\n\"\"\"8 10\"\"\") == \"7\"\n\nassert solution(\n\"\"\"2 2\"\"\") == \"1\""
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1 2\n3 4\n'''\n) == '0.2000000000'\nassert solution(\n'''\n1 0\n0 1\n'''\n) == '0.5000000000'\nassert solution(\n'''\n1 0\n0 0\n'''\n) == '0.5000000000'\nassert solution(\n'''\n0 0\n0 0\n'''\n) == '0.5000000000'\nassert solution(\n'''\n0 0\n0 0\n0 0\n'''\n) == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n3 4''') == '0.2000000000'\nassert solution('''1 0\n0 1''') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1 2') == 0\nassert solution('1 0') == 0.5\nassert solution('0 1') == 0.5\nassert solution('0 0') == 0\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''1 2\n3 4'''\n) == '0.2000000000'\n\nassert solution(\n'''1 0\n0 1'''\n) == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 4\") == \"0.2000000000\"\nassert solution(\"1 0\\n0 1\") == \"0.5000000000\"\nassert solution(\"2 2\\n3 4\\n4 5\") == \"0.049999997\"\nassert solution(\"1 0\\n0 1\\n1 0\") == \"0.25\"\nassert solution(\"2 2\\n3 4\\n4 5\\n5 6\") == \"0.049999997\"\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '1 2\\n3 4\\n') == '0.2000000000'\nassert solution(\n    '1 0\\n0 1\\n') == '0.5000000000'\nassert solution(\n    '1 1\\n1 1\\n') == '0.0000000000000000'\nassert solution(\n    '1 1\\n1 2\\n') == '0.0000000000000000'\nassert solution(\n    '2 1\\n1 1\\n') == '0.0000000000000000'\n\n\n-----Solutions Overview-----\n\n\"\"\""
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 2\\n0 1\\n') == '0.5000000000'\nassert solution('2 2\\n1 1\\n2 2\\n') == '0.040000038'\nassert solution('0 0\\n0 0\\n') == '0'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 2''') == '0'\nassert solution('''4 1 1''') == '2'\nassert solution('''10 10 20''') == '20'\nassert solution('''6 1 4''') == '4'\nassert solution('''7 1 4''') == '6'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"0\"\nassert solution(\"4 1 1\") == \"2\""
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 2 1 1\") == \"0\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\nassert solution(\"4 1 1\\n1 2 2 1\") == \"2\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\nassert solution(\"4 1 1\\n1 1 2 1\") == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\nassert solution('5 1 2') == '1'\nassert solution('5 1 1') == '5'\nassert solution('7 1 2') == '0'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1 2\n1 2 1 1''') == '0'\nassert solution('''4 1 1\n1 1 2 1''') == '2'\nassert solution('''4 1 3\n1 1 3 1''') == '2'\nassert solution('''2 0 1\n0 1 1''') == '2'\nassert solution('''1 0 1\n0 1 1''') == '2'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1 2\\n1 2 1 1') == '0'\nassert solution('4 1 1\\n1 1 2 1') == '2'\nassert solution('4 1 1\\n1 1 1 2') == '2'\nassert solution('4 1 1\\n1 1 1 1') == '1'\nassert solution('4 1 1\\n1 1 1 2 3') == '0'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 1 2\n1 2 1 1\n\"\"\") == \"0\"\nassert solution(\"\"\"4 1 1\n1 1 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4 1 1\n1 1 2 1\n1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"4 1 1\n1 1 2 1\n1 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"4 1 1\n1 1 2 1\n1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 10 5 20''') == '5'\nassert solution('''2 2 0 4''') == '-1'\nassert solution('''2 2 2 1''') == '-1'\nassert solution('''10 10 10 30''') == '10'\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"1 1 1 0\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"0 1 0 0\") == \"1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"10 10 5 20\") == \"5\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == -1\nassert solution('0 1 0 2') == -1\nassert solution('1 2 1 2') == -1\nassert solution('1 2 1 0') == 1\nassert solution('0 0 1 1') == -1\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 5\") == \"1\"\nassert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"3 3 3 5\") == \"1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"100 10 1 1\") == \"0\"\nassert solution(\"100 100 1 1\") == \"1\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('2 0') == '4'\nassert solution('2 1') == '7'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('1 0') == '0'\nassert solution('2 0') == '0'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == '21'\nassert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('10 10') == '40'\nassert solution('8 12') == '64'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 0''') == '4'\nassert solution('''2 1''') == '7'\nassert solution('''3 2''') == '21'\nassert solution('''4 3''') == '14'\nassert solution('''10 10''') == '36'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('10 5') == '29'\nassert solution('15 8') == '71'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"3 2\") == \"21\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"2\\n0\") == \"1\"\nassert solution(\"3\\n2\") == \"3\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\nprint(solution(''))\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('4 0') == '8'\nassert solution('5 1') == '16'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('1 0') == '2'\nassert solution('2 2') == '10'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3\n1 2\n1 2\n1 2'''\n) == '499122177'\nassert solution(\n'''2\n42 1337\n13 420'''\n) == '578894053'\nassert solution(\n'''2\n1 1\n1 1'''\n) == '1'\nprint(solution(stdin))\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '499122177'\nassert solution('''42 1337''') == '578894053'\nassert solution('''1 1''') == '1'\nassert solution('''42 13400''') == '578894053'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '499122177'\nassert solution('42 1337') == '578894053'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('0 0') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 1\nassert solution('1\\n2\\n1 2\\n1 2') == 1\nassert solution('2\\n42 1337\\n13 420') == 1\nassert solution('2\\n1 1\\n1 1') == 1\nassert solution('2\\n1 1\\n1 1') == 1\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '1'\nassert solution('3\\n1 2\\n1 2\\n1 2\\n') == '499122177'\nassert solution('2\\n42 1337\\n13 420\\n') == '578894053'\nassert solution('2\\n1 1\\n1 1\\n') == '1'"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '499122177'"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"499122177\""
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n1 2\\n1 2') == '499122177'\nassert solution('2\\n42 1337\\n13 420\\n') == '578894053'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"499122177\"\nassert solution(\"2\") == \"578894053\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"42 1337\\n13 420\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n0 0\") == \"1\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n') == '1'\nassert solution('20\\n') == '4'\n\n\n\"\"\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n') == '5'\nassert solution('100\\n') == '1'\nassert solution('15\\n') == '5'\nassert solution('15000000000\\n') == '999999999'\nassert solution('20\\n') == '4'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6''') == '1'\nassert solution('''20''') == '4'\n'''"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"6\"\"\"\n) == \"\"\"1\"\"\"\n\nassert solution(\n\"\"\"20\"\"\"\n) == \"\"\"4\"\"\""
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6''') == '1'\nassert solution('''20''') == '4'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3\\n'\nassert solution('3 4\\n5 3 4\\n') == '2\\n'\nassert solution('3 7\\n1 2 3\\n') == '-1\\n'\nassert solution('3 7\\n1 2 3\\n') == '-1\\n'\nassert solution('3 4\\n1 2 3\\n') == '-1\\n'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3') == '2'\nassert solution('3 4\\n5 3 4') == '2'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('3 3\\n4 3 5') == '3'\nassert solution('3 10\\n4 3 5') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 2 3') == '3'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('3 7\\n3 3 4') == '2'\nassert solution('3 7\\n5 3 4') == '-1'\nassert solution('3 7\\n1 2 3') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3\\n4 3 5') == '3'\nassert solution('3 4\\n5 3 4') == '2'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('2 2\\n2 1') == '1'\nassert solution('3 2\\n2 3') == '2'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3\\n'\nassert solution('3 7\\n1 2 3\\n') == '-1\\n'\nassert solution('3 4\\n5 3 4\\n') == '2\\n'\nassert solution('2 4\\n1 2 3\\n') == '-1\\n'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3'\nassert solution('3 4\\n5 3 4\\n') == '2'\nassert solution('3 7\\n1 2 3\\n') == '-1'"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3 4\n5 3 4'''\n) == '2'\n\nassert solution(\n'''3 7\n1 2 3'''\n) == '-1'\n\nassert solution(\n'''3 7\n4 3 5'''\n) == '2'\n\nassert solution(\n'''3 7\n1 5 4'''\n) == '-1'\n\nassert solution(\n'''10 10\n1 2 3 4 5 6 7 8 9 10'''\n) == '1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3 4\n5 3 4\"\"\"\n    ) == '2'\n\nassert solution(\n\"\"\"3 7\n1 2 3\"\"\"\n    ) == '-1'\n\nassert solution(\n\"\"\"3 4\n3 2 4\"\"\"\n    ) == '2'\n\nassert solution(\n\"\"\"3 7\n3 1 7\"\"\"\n    ) == '1'\n\nassert solution(\n\"\"\"4 4\n4 3 5 6\n\"\"\"\n    ) == '0'"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3'\nassert solution('3 7') == '-1'\nassert solution('3 4') == '2'\nassert solution('1 2 3') == '-1'\nassert solution('5 3 5') == '2'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 30\") == \"-1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"10 19\") == \"1\"\nassert solution(\"1 50\") == \"1\"\nassert solution(\"10 1\") == \"0\"\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 30\\n2 1\\n\") == \"1\"\nassert solution(\"10 13\\n1 1\\n\") == \"0\"\nassert solution(\"10 19\\n1 2\\n\") == \"-1\"\nassert solution(\"1 50\\n5 4\\n\") == \"1\"\nassert solution(\"1 19\\n5 4\\n\") == \"-1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 30\n2 1\n''') == '1'\n\nassert solution('''10 13\n1 1\n''') == '0'\n\nassert solution('''10 19\n1 2\n''') == '-1'\n\nassert solution('''1 50\n5 4\n''') == '1'\n\nassert solution('''2 4\n2 2\n''') == '2'"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"10 19\") == \"-1\"\nassert solution(\"1 50\") == \"1\"\nassert solution(\"1 5\") == \"-1\""
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 30') == '1'\nassert solution('10 13') == '0'\nassert solution('10 19') == '-1'\nassert solution('1 50') == '1'\nassert solution('1 50') == '1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\nassert solution('''5 50\n5 4''') == '0'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 30') == '1'\nassert solution('1 50') == '0'\nassert solution('10 19') == '-1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '-1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('10\\n1') == '1'\nassert solution('1\\n5') == '1'\nassert solution('10\\n5') == '0'\nassert solution('1\\n10') == '0'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\nassert solution('''10 19\n5 4''') == '-1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\nassert solution('''10 19\n1 2''') == '0'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('0 1') == None\nassert solution('1 1 0 1 1') == None\nassert solution('1 0 1 0 1') == None\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 3 5 2 3') == 16\nassert solution('2 3 4 4 5') == 2\nassert solution('2 3 4 4') == 8\nassert solution('1 1 1 1 1') == 5\nassert solution('100 10 10 10 10') == 100\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 16\n\"\"\""
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 3 5 2 3') == '16'\nassert solution('10 2 3 1 3') == '6'\nassert solution('10 1 1 1 1') == '1'\nassert solution('10 1 1 1 1') == '1'\nassert solution('10 1 1 1 1') == '1'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 3 5 2 3') == '16'\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 16\n\"\"\"\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 16\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 3 5 2 3') == 16\nassert solution('100000 10 1 10 10') == 100000\nassert solution('2 5 2 3 4') == 8\nassert solution('0 1000000 0') == 0\nassert solution('10000000 100000000 0 0 0') == 0\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 3 5 2 3''') == '16'\nassert solution('''3 1 3 3 2''') == '4'\nassert solution('''1 1 1 1 1''') == '5'\nassert solution('''1 1 1 1 1''') == '5'\nassert solution('''100 3 5 2 3''') == '16'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3 5 2 3') == 16\nassert solution('10 1 10 1 1') == 5\nassert solution('1 1 1 1 1') == 5\nassert solution('1 1 1 1 1') == 5\nassert solution('1 1 1 1 1') == 5\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '5'\nassert solution('4 5') == '5'\nassert solution('3 4') == '3'\nassert solution('6 1') == '3'\nassert solution('-1 -1') == '3'"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '5'\nassert solution('3 4') == '3'\nassert solution('6 1') == '3'\nassert solution('0 0') == '5'\nassert solution('2 2') == '5'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '5'\nassert solution('3 4') == '3'\nassert solution('6 1') == '3'\nassert solution('-3 -3') == '5'\nassert solution('-2 -3') == '5'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '5'\nassert solution('4 5') == '5'\nassert solution('3 4') == '3'\nassert solution('6 1') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('3 4') == ''\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0''') == '5'\nassert solution('''3 4''') == '3'\nassert solution('''6 1''') == '3'\nassert solution('''0 0''') == '5'\nassert solution('''3 4''') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0''') == '5'\nassert solution('''4 5''') == '5'\nassert solution('''3 4''') == '3'\nassert solution('''6 1''') == '3'\nassert solution('''-10 -10''') == '0'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\n\"\"\""
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\nassert solution('3 4\\n-1 2') == '3'\nassert solution('0 1\\n2 0') == '2'\nassert solution('0 1\\n-2 0') == '3'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == 'D'\nassert solution('DDRRR') == 'D'\nassert solution('DDRRRR') == 'R'\nassert solution('DDRRRRRD') == 'R'\nassert solution('DDRRRRRRRRRRRR') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nD') == 'D'\nassert solution('2\\nDR') == 'D'\nassert solution('3\\nDRR') == 'D'\nassert solution('4\\nDRRR') == 'D'\nassert solution('5\\nDRRRR') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"D\"\nassert solution(\"DDRRR\") == \"D\"\nassert solution(\"DDRRRR\") == \"R\"\nassert solution(\"DRDRDRDR\") == \"D\"\nassert solution
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\nDRDRR''') == 'D'\nassert solution('''6\nDRDRRRR''') == 'R'\nassert solution('''2\nDR''') == 'R'\nassert solution('''3\nDDRR''') == 'R'\nassert solution('''4\nDDRRR''') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == 'D'\nassert solution('RDD') == 'D'\nassert solution('DRRR') == 'D'\nassert solution('DRRRR') == 'D'\nassert solution('DDRRRR') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'D'\n'''\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('1\\nD') == 'D'\nassert solution('2\\nDRR') == 'R'\nassert solution('2\\nDDR') == 'D'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''17 15 5 3'''\n    ) == '3'\n\nassert solution(\n'''14 16 7 22'''\n    ) == '0'\n\nassert solution(\n'''4 2 6 4'''\n    ) == '1'\n\nassert solution(\n'''1000000000000000000 1000000000000000000 999999866000004473 999999822000007597'''\n    ) == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na, b, x, y = map(int, stdin.split())"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('17 15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\nassert solution('9 3 4 0') == '3'\n\n\"\"\""
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('17 15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('10 98') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('200 5') == '5'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('3723') == '8'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '1'\nassert solution('5 10') == '1'"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 9\n'''\n) == '1'\n\nassert solution(\n'''\n38 11\n'''\n) == '3'\n\nassert solution(\n'''\n5 2\n'''\n) == '3'\n\nassert solution(\n'''\n5 10\n'''\n) == '1'\n\nassert solution(\n'''\n4057\n'''\n) == '7'"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"6 9\"\n) == '1'\nassert solution(\n\"38 11\"\n) == '3'\nassert solution(\n\"5 2\"\n) == '3'\nassert solution(\n\"5 10\"\n) == '1'\n\nassert solution(\n\"5 5\"\n) == '0'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('9 9') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3'\n\n'''\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\nassert solution(input()) == '1'\nassert solution(input()) == '3'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1') == '5'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\nassert solution('7 19 1') == '19'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\nassert solution('1000000000 1 2019') == '500000001500000001'\n\n'''\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('100 100000 1') == '500000001500000001'\nassert solution('100 100000000 1') == '500000001500000001'\nassert solution('100 1000000 1') == '500000001500000001'\nassert solution('100 10000000 1') == '500000001500000001'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 5 3\\n') == '19'\nassert solution('1000000000 1 2019\\n') == '500000001500000001'\nassert solution('100 100000 1\\n') == '101'\nassert solution('6 4 5\\n') == '10'\nassert solution('1000000000 1000000000 1\\n') == '101'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\n\n\"\"\"\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\n\"\"\"\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\n\n\n\n\"\"\"\n\nimport sys\n\nMAX = 10 ** 9 + 1"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nm, a, b = [int(x) for x in input().split()]"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\nassert solution('6 4 5') == 10\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"Yes\"\nassert solution(\"5\\n1 0 1 5 1\") == \"Yes\"\nassert solution(\"3\\n4 3 1\") == \"No\"\nassert solution(\"4\\n3 9 9 3\") == \"No\"\nassert solution(\"3\\n3 9 9 3\") == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n5\\n') == 'Yes'\nassert solution('3\\n9\\n9\\n3') == 'No'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('3\\n9\\n9\\n3') == 'No'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3 5') == 'Yes'\nassert solution('5\\n1 0 1 5 1') == 'Yes'\nassert solution('3\\n4 3 1') == 'No'\nassert solution('4\\n3 9 9 3') == 'No'\nassert solution('3\\n3 3 3') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5\") == \"Yes\"\nassert solution(\"1 0 1 5 1\") == \"Yes\"\nassert solution(\"3 9 9 3\") == \"No\"\nassert solution(\"4 3 1\") == \"No\"\nassert solution(\"6 3 9 9 3\") == \"No\""
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 1 5 1\\n') == 'Yes'\nassert solution('5\\n3 9 9 3\\n') == 'No'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == 'Yes'\nassert solution('10\\n4 3 2 1 0 1 2 3 4 5 6 7 8 9 10\\n') == 'No'\nassert solution('10\\n4 3 2 1 0 1 2 3 4 5 6 7 8 9 10\\n') == 'Yes'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3 9 9 3') == 'Yes'\nassert solution('5\\n3 9 9 3\\n3 9 9 3') == 'No'\nassert solution('1\\n1') == 'Yes'\nassert solution('1\\n2') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"1 2 1\") == \"Yes\"\nassert solution(\"1 2 2\") == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n5') == 'Yes'\nassert solution('2\\n4\\n3') == 'No'\nassert solution('2\\n2\\n3') == 'Yes'\nassert solution('4\\n3\\n9\\n3') == 'Yes'\nassert solution('1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\n\nn = int(stdin.readline())\nnums = list(map(int,stdin.readline().split()))"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 5') == 'Yes'\nassert solution('5 1 3 5 1') == 'Yes'\nassert solution('4 3 1') == 'No'\nassert solution('3 9 9 3') == 'No'\nassert solution('3 9 9 9 3') == 'No'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 1 2') == '-1'\nassert solution('1 2 3 4') == '3 4 4 -1'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"-1\"\nassert solution(\"0 0 1 2\") == \"-1\"\nassert solution(\"0 0 1 2\") == \"-1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 1 1') == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(0, 0, 0, 1) == '1 0 1 1'\nassert solution(0, 0, 1, 1) == '0 1 1 0'\nassert solution(0, 1, 0, 1) == '0 1 1 0'\nassert solution(0, 1, 1, 0) == '0 0 1 1'\nassert solution(0, 1, 1, 1) == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"-1\""
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 0 1''') == '''1 0 1 1'''\nassert solution('''0 0 1 1''') == '''0 1 1 0'''\nassert solution('''0 0 1 2''') == '''-1'''\nassert solution('''1 1 1 0''') == '''1 1 1 0'''\nassert solution('''1 1 2 0''') == '''-1'''\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 2 2') == '-1'\nassert solution('0 1 2 2') == '-1'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(0, 0, 0, 1) == \"1 0 1 1\"\nassert solution(0, 0, 1, 1) == \"0 1 1 0\"\nassert solution(0, 0, 1, 2) == \"-1\"\nassert solution(0, 1, 0, 0) == \"1 0 1 1\"\nassert solution(0, 1, 0, 1) == \"1 0 1 0\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 -1') == '1000000006'\nassert solution('2 3') == '1'\nassert solution('0 1') == '1'\nassert solution('-1 -1') == '1'\nassert solution('-1 1') == '1000000006'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 -1') == '1000000006'\nassert solution('2 3') == '1'\nassert solution('0 -1\\n3') == '1000000006'\nassert solution('0 -1\\n3\\n2') == '1'\nassert solution('1 2\\n3') == '1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 -1') == '1000000006'\nassert solution('1 2') == '3'\nassert solution('1 2 3') == '6'\nassert solution('1 2 3 4') == '10'\nassert solution('1 2 3 4 5') == '15'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''1\n0''') == '1'\nassert solution('''1\n-1''') == '1'\nassert solution('''2\n1''') == '2'\nassert solution('''2\n0''') == '2'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\"\nassert solution(\"0 -1\") == \"1000000006\"\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''-1 -1''') == '1000000006'\n'''\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"0 -1\") == \"1000000006\"\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 -1\\n2\") == \"1000000006\"\nassert solution(\"2 3\\n3\") == \"1\"\nassert solution(\"2 0\\n3\") == \"1000000006\"\nassert solution(\"0 -1\\n0\") == \"1\"\nassert solution(\"1 2\\n2\") == \"1\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''0 -1''') == '1000000006'\nassert solution('''0 -1\n2''') == '1000000006'\nassert solution('''0 0''') == '0'\nassert solution('''0 0\n0''') == '0'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 -3\") == \"YES\\n2\\n1 2\\n3 3\\n\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\\n\"\nassert solution(\"1\\n0\") == \"NO\\n\"\nassert solution(\"4\\n1 2 3 -5\") == \"YES\\n2\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\nassert solution(\"9\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\\n\"\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n1 2 -3\n\"\"\") == \"YES\\n2\\n1 2\\n3 3\\n\"\nassert solution(\"\"\"8\n9 -12 3 4 -4 -10 7 3\n\"\"\") == \"YES\\n2\\n1 2\\n3 8\\n\"\nassert solution(\"\"\"1\n0\n\"\"\") == \"NO\\n\"\nassert solution(\"\"\"4\n1 2 3 -5\n\"\"\") == \"YES\\n4\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"NO\\n\"\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 -3') == 'YES\\n2\\n1 2\\n3 3'\nassert solution('3 4 -1') == 'YES\\n2\\n1 2\\n3 3'\nassert solution('8 3 -5') == 'YES\\n2\\n1 2\\n3 8'\nassert solution('-9 -12 3 4 -4 -10 7 3') == 'NO\\n2\\n1 2\\n3 8'\nassert solution('1 2 3 -5') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 -3\n''') == 'YES'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''1\n0\n''') == 'NO'\nassert solution('''4\n1 2 3 -5\n''') == 'YES'\nassert solution('''4\n1 2 3 -5\n''') == 'YES'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 -5\\n\") == \"YES\\n2\\n1 1\\n3 3\\n4 4\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\\n\") == \"YES\\n2\\n1 2\\n3 8\\n\"\nassert solution(\"4\\n1 2 3 -5\\n\") == \"NO\"\n\n\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 -3\\n') == 'YES\\n2\\n1 2\\n3 3\\n'\nassert solution('8\\n9 -12 3 4 -4 -10 7 3\\n') == 'YES\\n2\\n1 2\\n3 8\\n'\nassert solution('1\\n0\\n') == 'NO\\n'\nassert solution('4\\n1 2 3 -5\\n') == 'YES\\n2\\n1 1\\n2 2\\n3 3\\n4 4\\n'\nassert solution('2\\n1 2\\n') == 'NO\\n'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 -3\\n\") == \"NO\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\\n\") == \"YES\"\nassert solution(\"1\\n0\\n\") == \"NO\"\nassert solution(\"4\\n1 2 3 -5\\n\") == \"YES\"\nassert solution(\"7\\n-10 -7 -2 -5 -2 -3 -3 -1\\n\") == \"NO\"\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1 2 -3') == 'NO'\nassert solution('1 2 -3 4') == 'YES'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\") == \"NO\"\nassert solution(\"3\\n1 2 -3\") == \"YES\\n2\\n1 2\"\nassert solution(\"2\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\"\nassert solution(\"4\\n1 2 3 -5\") == \"YES\\n2\\n1 1\\n2 2\\n3 3\"\nassert solution(\"8\\n9 -12 3 4 -4 -10 7 3\") == \"YES\\n2\\n1 2\\n3 8\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 2''') == '3'\nassert solution('''5 4 2''') == '6'\nassert solution('''9 9 9 9 9''') == '1'\nassert solution('''10 10 10 10 10''') == '0'\nassert solution('''10 1000 1000 1000 1000''') == '0'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('99 1 100') == '1'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\nassert solution(\"5 5 3\") == \"4\"\nassert solution(\"5 7 2\") == \"8\"\nassert solution(\"5 5 5\") == \"0\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3 2''') == '3'\nassert solution('''5 4 2''') == '6'\nassert solution('''10 7 1''') == '0'\nassert solution('''10 0 1''') == '9'\nassert solution('''10 15 1''') == '9'\n'''\n    n, m, k = map(int, stdin.split())\n\n    if m == 0:\n        return '0'\n    elif n == k:\n        return '1'\n    else:\n        return str(10**9 + 9 - (n - k) % (10**9 + 9))\n\nprint(solution(input()))\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1000000001\"\n\"\"\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5 3 2\n''') == '3'\n\nassert solution('''\n5 4 2\n''') == '6'\n\nassert solution('''\n3 2 2\n''') == '3'\n\nassert solution('''\n5 5 2\n''') == '6'\n\nassert solution('''\n10 4 4\n''') == '0'"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\nassert solution(\"7 8 5\") == \"0\"\nassert solution(\"11 17 19\") == \"1\"\nassert solution(\"2 4 1\") == \"5\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == 3\nassert solution(\"5 3 2\") == 3\nassert solution(\"5 4 2\") == 6\nassert solution(\"5 4 4\") == 0\nassert solution(\"10 5 2\") == 6\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('45654') == 'YES'\nassert solution('14') == 'YES'\nassert solution('123456789') == 'NO'\nassert solution('111111') == 'YES'\nassert solution('0123456789') == 'NO'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1234567890\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"9999999999999\") == \"YES\"\nassert solution(\"111111\") == \"YES\"\nassert solution(\"100000\") == \"YES\"\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3454') == 'YES'\nassert solution('10') == 'YES'\nassert solution('111111') == 'NO'\nassert solution('100') == 'YES'\nassert solution('7') == 'YES'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4313') == 'YES'\nassert solution('4313') == 'NO'\nassert solution('434') == 'YES'\nassert solution('434') == 'NO'\nassert solution('1324') == 'YES'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3454') == 'YES'\nassert solution('10') == 'YES'\nassert solution('111111') == 'NO'\nassert solution('1234567') == 'NO'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(3454) == 'YES'\nassert solution(10) == 'YES'\nassert solution(111111) == 'NO'\nassert solution('') == ''\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3454') == 'YES\\n344\\n'\nassert solution('10') == 'YES\\n0\\n'\nassert solution('111111') == 'NO\\n'\nassert solution('112') == 'YES\\n10\\n'\nassert solution('1122') == 'NO\\n'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123456789') == 'YES'\nassert solution('111111') == 'NO'\nassert solution('67891234') == 'YES'\nassert solution('789123456789') == 'NO'\nassert solution('1234567890123456789') == 'NO'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\nassert solution(stdin) == None\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 3') == '3'\nassert solution('3 1') == '-1'\nassert solution('10 4') == '4'\nassert solution('5 2') == '-1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 3') == '4'\nassert solution('10 3') == '-1'\nassert solution('10 4') == '-1'\nassert solution('10 3') == '4'\nassert solution('10 4') == '-1'\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n4 2\\n6 2\\n2 1\") == \"4\"\nassert solution(\"10 3\\n6 2\\n2 1\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-1\"\nassert solution(\"10 9\\n9 3\\n6 3\\n2 4\\n5 1\\n6 3\\n2 3\\n6 2\\n5 2\\n2 1\") == \"-1\"\nassert solution(\"3 2\\n1 2\\n2 1\") == \"-1\"\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 3\\n6 2\\n2 1\\n7 3\\n') == 4\nassert solution('8 4\\n3 1\\n6 2\\n5 2\\n2 1\\n') == -1\nassert solution('5 2\\n1 1\\n2 2\\n3 3\\n4 4\\n') == 4\nassert solution('5 2\\n2 1\\n1 1\\n1 2\\n1 1\\n') == -1\nassert solution('3 2\\n1 1\\n1 1\\n') == -1\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4') == '-1'\nassert solution('10 3') == '4'\nassert solution('4 4') == '-1'\nassert solution('2 1') == '1'\nassert solution('4 2') == '-1'\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 3\") == 4\nassert solution(\"8 4\") == -1\nassert solution(\"3 1\") == 3\nassert solution(\"6 2\") == 2\nassert solution(\"5 2\") == 1\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer\n\n\n\"\"\"\n\nn, m = map(int, stdin.strip().split())\nmems = []\nfor i in range(m):\n    k, f = map(int, stdin.strip().split())\n    mems.append((k, f))"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n3\\n3\\n2\\n2\\n1\\n1\\n\") == \"2\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"1\"\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n00\n00\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n00X00X0XXX0\n0XXX0X00X00\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n0X0X0\n0X0X0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n0XXX0\n00000\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n00X00X00\n0X00X0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('00') == ''\nassert solution('00X00X0XXX0') == '1'\nassert solution('0XXX0X00X00') == '4'\nassert solution('0X0X0') == '0'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n00\n00\n''') == '1'\nassert solution('''\n00X00X0XXX0\n0XXX0X00X00\n''') == '4'\nassert solution('''\n0X0X0\n0X0X0\n''') == '0'\nassert solution('''\n0XXX0\n00000\n''') == '2'\nassert solution('''\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X0X00X00X0X00X00X0X00\n00X00X"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''00''') == '1'\nassert solution('''00X00X0XXX0''') == '1'\nassert solution('''0X0X0''') == '0'\nassert solution('''0XXX0''') == '0'\nassert solution('''0X0X0X0''') == '0'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('00') == '1'\nassert solution('00X00X0XXX0') == '1'\nassert solution('0XXX0X00X00') == '4'\nassert solution('0X0X0') == '0'\nassert solution('0XXX0') == '2'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00X00X0XXX0\") == \"1\"\nassert solution(\"00X0X00X00\") == \"4\"\nassert solution(\"0X0X0\") == \"0\"\nassert solution(\"0XXX0\") == \"2\"\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"00\") == \"1\"\nassert solution(\"0X0X0\") == \"0\"\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n00\n00\n''') == '1'\n\nassert solution('''\n00X00X0XXX0\n0XXX0X00X00\n''') == '4'\n\nassert solution('''\n0X0X0\n0X0X0\n''') == '0'\n\nassert solution('''\n0XXX0\n00000\n''') == '2'\n\nassert solution('''\n00\n00\n''') == '1'"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('00') == '1'\nassert solution('00X00X0XXX0') == '1'\nassert solution('0X0X0') == '0'\nassert solution('0X0X0X0') == '0'\nassert solution('0XXX0X00X00') == '4'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaaBaabAbA') == 2\nassert solution('zACaAbbaazzC') == 3\nassert solution('ABC') == 0\nassert solution('A') == 1\nassert solution('B') == 1\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11') == '2'\nassert solution('2') == '0'\nassert solution('aabc') == '3'\nassert solution('aaBc') == '0'\nassert solution('baaB') == '0'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12\\nAbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbacbdakjbac"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('AaBb') == 3\nassert solution('abBA') == 3\nassert solution('abBab') == 3\nassert solution('aaaaBaabAbA') == 2\nassert solution('zACaAbbaazzC') == 3\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11\\naaaaBaabAbA') == 2\nassert solution('12\\nzACaAbbaazzC') == 3\nassert solution('3\\nABC') == 0\nassert solution('0\\n') == 0\nassert solution('1\\n1') == 1\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11') == '2'\nassert solution('a') == '0'\nassert solution('aaaaBaabAbA') == '2'\nassert solution('zACaAbbaazzC') == '3'\nassert solution('ABC') == '0'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('13') == '0'\nassert solution('aaaaBaabAbA') == '2'\nassert solution('zACaAbbaazzC') == '3'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('test_1') == '2'\nassert solution('test_2') == '3'\nassert solution('test_3') == '0'\nassert solution('test_4') == '0'\nassert solution('test_5') == '2'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '2'\nassert solution('aaaaBaabAbA') == '2'\nassert solution('zACaAbbaazzC') == '3'\nassert solution('ABC') == '0'\nassert solution('aaa') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-2 0') == '3'\nassert solution('3\\n1 -2 0') == '120'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n\n\"\"\"\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n-2 0\\n') == '3'\nassert solution('6\\n16 23 16 15 42 8\\n') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 -2 0\n''') == '3'\nassert solution('''6\n16 23 16 15 42 8\n''') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n-2\\n0') == '3'\nassert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\nassert solution('8\\n2 4 7 6 2 3 3') == '120'\nassert solution('100\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '2498'"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3 4\") == \"9\"\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 -2 0') == '3'\nassert solution('16 23 16 15 42 8') == '120'\nassert solution('6') == '0'\nassert solution('16 -2 0') == '3'\nassert solution('-2 -2') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n-2 0') == '3'\nassert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\nassert solution('2\\n0 0') == '0'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n-2\\n0') == '3'\nassert solution('1\\n0') == '0'\nassert solution('1\\n-2\\n-3') == '-6'\nassert solution('3\\n0') == '0'\nassert solution('3\\n-2\\n-3') == '-6'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 10 2 4') == '4'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 7 2 4') == '2'\nassert solution('1 1 1 1') == '-1'\nassert solution('1 10 1 1') == '1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n\n\"\"\"\nPrime Problem:\n\nWe can solve this problem by converting the problem into a graph problem.\n\n1. The problem is as follows:\n\nGiven an undirected graph, find the number of connected components in the graph.\n\n2. Given a directed graph, find the number of connected components in the graph.\n\n3. An undirected graph with N vertices has N connected components.\n\n4. A directed graph has N vertices and M edges. Find the number of connected components in the graph.\n\n5. The given graph is represented using an adjacency list.\n\n6. The input is:\n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains two space-separated integers n and m.\nThe second line contains n space-separated integers, where the ith integer is the rank of vertex i, i.e., the number of neighbours of vertex i.\nThe third line of each test case contains m space-separated integers, where the ith integer is the rank of the edge (i, j), i.e., the number of neighbours of vertex i.\n\n7. For each test case, print a single line containing one integer, the number of connected components in the graph.\n\n8. Output for each test case will be printed on a separate line.\n\n9. The first line of each test case contains an integer N denoting the number of vertices in the graph.\n\n10. The second line contains N space-separated integers, where the ith integer is the rank of vertex i.\n\n11. The third line contains N space-separated integers, where the ith integer is the rank of the edge (i, j).\n\n12. The fourth line contains N space-separated integers, where the ith integer is the rank of the edge (j, i).\n\n13. The last line of each test case contains m space-separated integers, where the ith integer is the rank of the edge (i, j).\n\n14. If there is no edge between vertex i and vertex j, then the rank of the edge is -1.\n\n15. Example\n\nInput\n\n3\n3 2\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1 3\n4 2\n1 2\n2 3\n2 3\n3 4\n1 2\n1"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 6 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 9 2 4') == '4'\nassert solution('2 9 2 4') == '4'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\nassert solution(\"6 7 3 5\") == \"1\"\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 9 2 4\\n') == '4'\nassert solution('6 10 2 4\\n') == '2'\nassert solution('6 5 4 3\\n') == '-1'\n\"\"\"\n\nfrom fractions import Fraction\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 10 2 4') == '4'\nassert solution('6 5 4 3') == '-1'\nassert solution('100 100 1 1') == '100'\nassert solution('100 100 1 10') == '-1'\nassert solution('10 10 1 2') == '2'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"-1\"\nassert solution(\"6 5 4 3\") == \"2\"\nassert solution(\"6 6 5 4 3\") == \"3\"\nassert solution(\"6 5 6 3\") == \"3\"\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 2 3''') == '2'\nassert solution(\n'''10 9 5''') == '2'\nassert solution(\n'''6 4 5''') == '2'\nassert solution(\n'''Privet''') == '-1'\nassert solution(\n'''8 1 1''') == '8'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 3\\nHello') == '2\\nHe\\nllo'\nassert solution('10 9 5\\nCodeforces') == '2\\nCodef\\norces'\nassert solution('6 4 5\\nPrivet') == '2\\nPrivet'\nassert solution('8 1 1\\nabacabac') == '8\\na\\nb\\na\\nc\\na\\nb\\na\\nc'\nassert solution('9 4 5\\nop') == '-1'\n\n\n\n\n-----Alternative solutions (3rd largest voted by all users)-----\n\nfrom collections import Counter, defaultdict"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Hello') == '-1'\nassert solution('Codeforces') == '2'\nassert solution('Privet') == '8'\nassert solution('abacabac') == '2'\nassert solution('abacabac') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3''') == '''2\nHe\nllo'''\nassert solution('''10 9 5''') == '''2\nCodef\norces'''\nassert solution('''6 4 5''') == '''2\nCodef\norces'''\nassert solution('''8 1 1''') == '''8\na\nb\na\nc\na\nb\na\nc'''\nassert solution('''7 3 5''') == '''-1'''\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\nHello\\n') == '2\\nHe\\nllo\\n'\nassert solution('10 9 5\\nCodeforces\\n') == '2\\nCodef\\norces\\n'\nassert solution('6 4 5\\nPrivet\\n') == '2\\nPrivet\\n'\nassert solution('8 1 1\\nabacabac\\n') == '8\\na\\nb\\na\\nc\\na\\nb\\na\\nc\\n'\nassert solution('11 2 3\\nSubhankar\\n') == '2\\nSubh\\nankar\\n'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Hello\") == \"Hel\"\nassert solution(\"Codeforces\") == \"Codefor\"\nassert solution(\"Privet\") == \"Privet\"\nassert solution(\"abacabac\") == \"abacab\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"Hello\") == \"Hello\"\nassert solution(\"abcdefgh\") == \"abcdefgh\"\nassert solution(\"abacabac\") == \"abacabac\"\nassert solution(\"Privet\") == \"Privet\"\nassert solution(\"Codeforces\") == \"Codeforces\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == result\nprint(solution(stdin))\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10 1 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3') == 'IMPOSSIBLE'\nassert solution('3 10 2 4') == 'RUN 1\\nJUMP 1'\nassert solution('3 10 3 4') == 'RUN 2\\nJUMP 3'\nassert solution('2 9 1 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''2 9 2 3\n6 4''') == 'IMPOSSIBLE'\nassert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 10 1 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('3 4 7') == 'IMPOSSIBLE'\nassert solution('2 9 2 3') == 'IMPOSSIBLE'"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 10 1 3''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''\n\nassert solution('''3 4 7''') == '''IMPOSSIBLE'''\n\nassert solution('''3 4 7\n6 4''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''\n\nassert solution('''1 1 1 1''') == '''IMPOSSIBLE'''\n\nassert solution('''2 10 1 3\n3 4 7''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 10 1 3\\n3 4 7') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3\\n6 4') == 'IMPOSSIBLE'\nassert solution('2 9 2 3\\n3 4 7') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3\\n2 3 4 7') == 'IMPOSSIBLE'\nassert solution('3 10 1 3\\n3 4 7') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 10 1 3\\n3 4 7\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\\n6 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 10 1 3''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''3 4 7''') == 'RUN 2\\nJUMP 3'\nassert solution('''6 4''') == 'IMPOSSIBLE'\nassert solution('''2 9 2 3''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''2 3 2''') == 'RUN 2\\nJUMP 3'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == '''RUN 2\nJUMP 3\nRUN 1\nJUMP 2\nRUN 2'''\n\nassert solution('''2 9 2 3\n6 4''') == '''IMPOSSIBLE'''\n\nassert solution('''2 9 2 3\n7 8 9''') == '''RUN 4\nJUMP 8\nRUN 3\nRUN 2\nRUN 1\nJUMP 4'''"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 10 1 3''') == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution('''3 4 7''') == \"RUN 2\\nJUMP 3\"\nassert solution('''2 9 2 3''') == \"IMPOSSIBLE\"\nassert solution('''6 4''') == \"RUN 2\\nJUMP 3\"\nassert solution('''7 3 4 5''') == \"RUN 2\\nJUMP 3\"\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 10 1 3\\n3 4 7\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\\n6 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 1 3\\n3 4 7\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\\n6 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 10 1 3\\n3 4 7\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 5''') == '4'\nassert solution('''3 3''') == '2'\nassert solution('''5 2''') == '0'\nassert solution('''6 3''') == '2'\nassert solution('''5 3''') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"9 5\\n\") == \"4\"\nassert solution(\"3 3\\n\") == \"2\"\nassert solution(\"5 2\\n\") == \"0\"\n\"\"\""
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"2\"\nassert solution(\"1\\n4\") == \"3\"\nassert solution(\"1\\n5\") == \"4\"\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\nassert solution('5 3') == '2'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 5''') == '4'\nassert solution('''3 3''') == '2'\nassert solution('''5 2''') == '0'\nassert solution('''99999 99999''') == '1'\nassert solution('''99998 99999''') == '2'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"9 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"6 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 2') == '2\\n1 6'\nassert solution('5 1') == '2\\n1 4'\n\n\n\"\"\""
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '2\\n1 6'\nassert solution('5 1') == '2\\n1 4'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2') == '2\\n1 6'\nassert solution('5 1') == '2\\n1 4'\nassert solution('1 5') == '2\\n1 4'\nassert solution('5 2') == '2\\n1 4'\nassert solution('1 1') == '2\\n1 4'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == ''\n\"\"\"\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 1') == '2'\nassert solution('1 1') == '1'\nassert solution('5 1') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '2'\nassert solution('7 2') == '2 1'\nassert solution('7 3') == '2 1'\nassert solution('5 1') == '2 1'\nassert solution('5 0') == '2'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1 4\"\nassert solution(\"7 2\") == \"2\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"8 1\") == \"2\"\nassert solution(\"8 2\") == \"1 6\"\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2') == '2\\n1 6'\nassert solution('5 1') == '2\\n1 4'\nassert solution('7 2') == '2\\n1 6'\nassert solution('5 3') == '2\\n1 4'\nassert solution('4 3') == '2\\n1 4'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2') == '2'\nassert solution('5 1') == '2'\nassert solution('5 5') == '4'\nassert solution('7 9') == '4'\nassert solution('3 8') == '3'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\nassert solution('333') == '-1'\nassert solution('33333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\nassert solution('9') == '0'\nassert solution('26') == '1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n\n\n-----"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"9\") == 0\nassert solution(\"19\") == 2\nassert solution(\"77\") == -1\nassert solution(\"832\") == 3\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8314\") == \"-1\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\"\nassert solution(\"91857\") == \"1\"\nassert solution(\"9000\") == \"0\"\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8314') == '2'\nassert solution('125') == '0'\nassert solution('333') == '-1'\nassert solution('9') == '0'\nassert solution('25') == '0'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('625') == '0'\nassert solution('8314') == '2'\nassert solution('33333') == '-1'\nassert solution('3334') == '1'\nassert solution('3335') == '1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n8314\n''') == '2'\n\nassert solution('''\n625\n''') == '0'\n\nassert solution('''\n333\n''') == '-1'\nassert solution('''\n1\n''') == '0'\nassert solution('''\n0\n''') == '0'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('10') == '78'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"6\") == \"120\"\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\n\n\n\n\n\n##\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\n'''\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n') == '2'\nassert solution('3\\n') == '4'\nassert solution('6\\n') == '120'\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\n>>> def f(p):\n...     g = [1]\n...     for i in p:\n...         g.append(g[-1] * i // gcd(g[-1], i))\n...     return len(set(g))\n\n>>> from functools import reduce\n>>> g = lambda x: reduce(lambda a, b: a * b // gcd(a, b), x, 1)\n>>> def f(p):\n...     return len(set(f(p[1:]) for f in g(p)))\n\n>>> f(range(1, 7))\n6\n>>> f(range(1, 12))\n120\n>>> f(range(1, 100))\n982913828922\n>>> f(range(1, 1000))\n982913828922\n>>> f(range(1, 10000))\n982913828922\n>>> f(range(1, 100000))\n982913828922\n>>> f(range(1, 1000000))\n982913828922\n>>> f(range(1, 10000000))\n982913828922\n>>> f(range(1, 100000000))\n982913828922\n>>> f(range(1, 1000000000))\n982913828922\n>>> f(range(1, 10000000000))\n982913828922\n>>> f(range(1, 100000000000))\n982913828922\n>>> f(range(1, 1000000000000))\n982913828922\n>>> f(range(1, 1000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000))\n982913828922\n>>> f(range(1, 100000000000000000000000))\n982913828922\n>>> f(range(1, 1000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000))\n982913828922\n>>> f(range(1, 100000000000000000000000000))\n982913828922\n>>> f(range(1, 1000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000))\n982913828922\n>>> f(range(1, 100000000000000000000000000000))\n982913828922\n>>> f(range(1, 1000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000))\n982913828922\n>>> f(range(1, 100000000000000000000000000000000))\n982913828922\n>>> f(range(1, 1000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 100000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>> f(range(1, 10000000000000000000000000000000000))\n982913828922\n>>>"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\n\n-----Reference-----\n\n- https://en.wikipedia.org/wiki/Permutation#Permutation_cycle_system\n- https://www.math.mcgill.ca/~aassaf9/python/cycle.html\n- https://www.math.mcgill.ca/~aassaf9/python/perm.html\n- https://en.wikipedia.org/wiki/Permutation#First_few_permutations\n\n\"\"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('99999') == '10^9+7'\n\n\n\n\"\"\"\n\n\"\"\"\nstdin: input_string\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('AAABBCCDDEEFFGGHH') == 8\nassert solution('ABABBBACFEYUK') == 1\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABAABACFEYUKOTT') == 4\nassert solution('AAAA') == 1\nassert solution('ABABBBACFEYUKOTT') == 4\nassert solution('ABABBBACFEYUK') == 3\nassert solution('ABABBBACFE') == 2\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\nassert solution(\"AAA\") == 1\nassert solution(\"ABCD\") == 0\nassert solution(\"ABCDE\") == 1\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == 2\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('AAEIOUY') == 2\nassert solution('A') == 1\nassert solution('AA') == 1\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('ABABBA') == 3\nassert solution('AAAEAEAEAEAEAEAEAEAEAEAEAEAE') == 0\nassert solution
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('ABC') == 1\nassert solution('ABY') == 2\nassert solution('ABCABY') == 3\nassert solution('ABYAB') == 3\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == 4\nassert solution(\"AAA\") == 1\nassert solution(\"A\") == 1\nassert solution(\"\") == 0\nassert solution(\"ABBA\") == 2\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('AB') == 1\nassert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 7 11 5''') == 'YES'\nassert solution('''7 3 2 5''') == 'NO'\n'''\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2') == 'NO'\nassert solution('1') == 'YES'"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 7 11 5''') == 'YES'\nassert solution('''7 3 2 5''') == 'NO'\nassert solution('''7 3 2 6''') == 'YES'\nassert solution('''1 1 1 1''') == 'NO'\nassert solution('''1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\nassert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\nassert solution('1 7 11 5') == 'YES'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\nassert solution(\"1 7 11 5\") == \"YES\"\nassert solution(\"7 3 2 5\") == \"NO\"\nassert solution(\"1 7 11 5\") == \"YES\"\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('2 3 5 8') == 'NO'\nassert solution('2 3 5 7') == 'YES'\nassert solution('2 3 5 7') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'\nassert solution('2\\n21 21\\n') == '0 0'\nassert solution('1\\n1\\n') == '1'\nassert solution('50\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\\n') == '9742560'\n'''"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'\nassert solution('1\\n1\\n') == '1'\nassert solution('10\\n1\\n') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n141 592 653\\n\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\\n\") == \"31 41\"\nassert solution(\"1\\n1\\n\") == \"0 0\"\nassert solution(\"5\\n1 1001 1 1001 1 1001\\n\") == \"1001 0\"\n\n\n\"\"\""
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n141 592 653\"\"\") == \"653 733\"\nassert solution(\"\"\"5\n10 21 10 21 10\"\"\") == \"31 41\"\nassert solution(\"\"\"0\n0 0\"\"\") == \"0 0\"\nassert solution(\"\"\"1\n1 1\"\"\") == \"1 1\"\nassert solution(\"\"\"1\n0\"\"\") == \"0\"\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n141 592 653''') == '653 733'\nassert solution('''5\n10 21 10 21 10''') == '31 41'\nassert solution('''3\n10 21 10 21''') == '31 41'\nassert solution('''7\n1 5 9 14 13 17 19 26 36 42 49 61 64 71''') == '1517'\nassert solution('''12\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19''') == '1110'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\\n141\\n592\\n653\") == \"653 733\"\nassert solution(\"5\\n10\\n21\\n10\\n21\\n10\") == \"31 41\"\nassert solution(\"5\\n10\\n21\\n10\\n21\\n10\\n10\\n10\") == \"31 41\""
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n141 592 653\n''') == '653 733'\nassert solution('''5\n10 21 10 21 10\n''') == '31 41'\nassert solution('''0\n123456789\n''') == '0 123456789'\nassert solution('''100\n4554123413\n''') == '11111 0'\nassert solution('''1\n1\n''') == '1 0'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 6 8''') == '2'\nassert solution('''3\n3 6 5''') == '-1'\nassert solution('''6\n2 4 8 6 10 18''') == '3'\nassert solution('''6\n3 4 5 6 7''') == '-1'\nassert solution('''6\n1 2 3 4 5 6''') == '-1'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 6 8 10') == '2'\nassert solution('3 6 5') == '-1'"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '2'\nassert solution('''3''') == '-1'\nassert solution('''6''') == '3'\n'''\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 6 8') == '2'\nassert solution('3 6 5') == '-1'\nassert solution('2 4 8 6 10 18') == '3'\nassert solution('1 3 6 9 10') == '-1'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '2'\nassert solution('''3''') == '-1'\nassert solution('''6''') == '3'\nassert solution('''2 4 8 6 10 18''') == '3'\nassert solution('''1 2 3 6 8''') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == \"2\"\nassert solution(\"3\\n3 6 5\") == \"-1\"\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4 8 6 10 18') == '2'\nassert solution('3 6 5') == '-1'\nassert solution('1 2 3 6 8') == '2'\n\n\n-----Best Practice-----"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 6 8') == '2'\nassert solution('3 6 5') == '-1'\nassert solution('2 4 8 6 10 18') == '3'\nassert solution('1 3 5 7 9 11') == '5'\nassert solution('1 3 5 7 9 11') == '5'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 8\\n8 8') == 'Alice'\nassert solution('4\\n3 1 4 1') == 'Bob'\nassert solution('2\\n1 1') == 'Alice'\nassert solution('1\\n1') == 'Alice'\nassert solution('4\\n4 4 4 4') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 1 4 1') == \"Bob\"\nassert solution('8\\n8') == \"Alice\"\nassert solution('1\\n1') == \"Alice\"\nassert solution('2\\n1 1') == \"Alice\"\nassert solution('2\\n2') == \"Bob\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n8 8') == \"Bob\"\nassert solution('2\\n3 1 4 1') == \"Alice\"\nassert solution('4\\n3 1 4 1') == \"Alice\"\nassert solution('4\\n3 4 1 3') == \"Alice\"\nassert solution('4\\n3 2 1 2') == \"Bob\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == 'Bob'\nassert solution('2\\n2') == 'Bob'\nassert solution('2\\n4') == 'Alice'\nassert solution('4\\n1 3 1 1') == 'Alice'\nassert solution('4\\n3 1 4 1') == 'Bob'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 8') == 'Alice'\nassert solution('4 3 1 4 1') == 'Bob'\nassert solution('1 2 2 3 3') == 'Alice'\nassert solution('2 3 1 2 3') == 'Bob'\nassert solution('2 1 2 2') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2\n8 8'''\n) == 'Bob'\n\nassert solution(\n'''4\n3 1 4 1'''\n) == 'Alice'\n\nassert solution(\n'''8\n3 1 4 1'''\n) == 'Bob'\n\nassert solution(\n'''8\n3 1 4 1'''\n) == 'Alice'\n\nassert solution(\n'''8\n3 1 4 1'''\n) == 'Alice'"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 8') == 'Bob'\nassert solution('8 8') == 'Alice'\nassert solution('1 1 4 1') == 'Bob'\nassert solution('1 1 4 1') == 'Alice'\nassert solution('4 1 4 1') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n3 1 4 1') == 'Alice'\nassert solution('2\\n8 8') == 'Bob'\nassert solution('2\\n3 1 4 1') == 'Alice'\nassert solution('2\\n3 1 4 1') == 'Alice'\n\n\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n8 8''') == 'Alice'\nassert solution('''4\n3 1 4 1''') == 'Bob'\nassert solution('''6\n2 3 4 1 3 2''') == 'Alice'\nassert solution('''6\n2 1 4 1 3 2''') == 'Alice'\nassert solution('''4\n2 1 4 1''') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n8 8') == 'Bob'\nassert solution('2\\n3 1 4 1') == 'Alice'\nassert solution('3\\n4 1 2 2') == 'Alice'\nassert solution('3\\n3 1 4 1') == 'Bob'\nassert solution('4\\n3 1 4 1') == 'Alice'\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''3\n2 3 4 1''') == 'NO'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == 'NO'\n'''\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 3 2 1\\n') == 'YES'\nassert solution('1 2 3 4 5\\n') == 'NO'\n\n'''\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n1 3 3 2 1\") == \"YES\"\nassert solution(\"1\\n5\\n5 5 5 5 5\") == \"NO\"\nassert solution(\"1\\n5\\n1 5 5 5 5\") == \"YES\"\nassert solution(\"1\\n5\\n1 1 1 1 1\") == \"NO\"\n\"\"\"\n\n\"\"\"\n\n-------Solution 1-------\n\"\"\""
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == 'YES'\nassert solution('''7\n1 1 1 1 1 1 1 1''') == 'NO'\nassert solution('''5\n1 1 2 1 3 1''') == 'NO'\n'''\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 3 2 1') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"2\\n1 3\") == \"NO\"\nassert solution(\"2\\n1 3 1\") == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''7\n2 2 4 3 3 5 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''5\n1 3 3 2 1''') == 'YES'\n'''\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"YES\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nababa''') == '2'\nassert solution('''7\nabcabcabcabc''') == '3'\nassert solution('''10\nabcbabcbabcbab''') == '4'\nassert solution('''100\naababaa''') == '0'\nassert solution('''1000\naaabaa''') == '0'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ababa\") == \"2\"\nassert solution(\"aba\") == \"0\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"baa\") == \"0\"\nassert solution(\"baaba\") == \"2\"\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ababa') == 2\nassert solution('ababbc') == 0\nassert solution('abbbbb') == 0\nassert solution('abcdbcdbb') == 3\nassert solution('babad') == 0\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ababa\") == \"2\"\nassert solution(\"baaab\") == \"2\"\nassert solution(\"abcd\") == \"0\"\nassert solution(\"baaaaaaa\") == \"0\"\nassert solution(\"aabababab\") == \"3\"\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ababa') == '2'\nassert solution('abcdabc') == '3'\nassert solution('abcabcabcabc') == '4'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabc') == '7'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ababa') == '2'\nassert solution('ababba') == '2'\nassert solution('abbbbbbbbb') == '0'\nassert solution('abab') == '2'\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabca') == '2'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''ababa\n''') == '2'\nassert solution('''a\na\na\na\na\n''') == '0'\nassert solution('''\n''') == '0'\nassert solution('''\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 0\nassert solution('ab') == 1\nassert solution('aa') == 0\nassert solution('ababa') == 2\nassert solution('abaa') == 0\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ababa') == '2'\nassert solution('abcabc') == '3'\nassert solution('abcababac') == '4'\nassert solution('aaaaa') == '0'\nassert solution('aaaaaaaaaaaaa') == '8'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ababa') == '2'\nassert solution('abacbac') == '3'\nassert solution('ababab') == '2'\nassert solution('abacbac') == '3'\nassert solution('abacbac') == '3'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\nassert solution('1 2') == '0'\nassert solution('8 3') == '3'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''8 5''') == '3'\nassert solution('''9 6''') == '7'\nassert solution('''25 6''') == '10'\nassert solution('''10 17''') == '8'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n') == '3'\nassert solution('2\\n4\\n') == '2'\nassert solution('8\\n5\\n') == '3'\nassert solution('8\\n6\\n') == '4'\nassert solution('8\\n7\\n') == '5'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\nassert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '2'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 2\n\"\"\".rstrip()\n) == \"2\"\n\nassert solution(\n\"\"\"\n8 5\n\"\"\".rstrip()\n) == \"3\"\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"3\"\nassert solution(open(\"test_input2.txt\").read()) == \"1\"\nassert solution(open(\"test_input3.txt\").read()) == \"2\"\nassert solution(open(\"test_input4.txt\").read()) == \"2\"\nassert solution(open(\"test_input5.txt\").read()) == \"1\"\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n''') == '2'\n\nassert solution('''\n8 5\n''') == '3'"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''8 5''') == '3'\n'''\n\nimport sys"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 2\\n') == '2'\nassert solution('6 7\\n') == '7'\nassert solution('10 8\\n') == '9'\nassert solution('7 5\\n') == '6'\n\nassert solution('8 5\\n') == '3'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2\n''') == 'YES'\n\nassert solution('''5 1\n1\n''') == 'NO'\n\nassert solution('''5 1\n2\n''') == 'NO'\n\nassert solution('''5 4\n1 1 1 1 1\n2 2 2 1 1\n''') == 'YES'\n\nassert solution('''7 3\n1 1 1 1 1 1\n1 2 1 1\n1 3\n''') == 'YES'"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n\n-----Solution Summary-----\nSince it is possible to allocate k_1, k_2,..., k_m lightsabers, in any order,\nthe length of the longest contiguous interval will be at most 2k_1 + 2k_2 +... + 2k_m,\nso the maximum possible number of lightsabers is at most n.\n\nIf n = k_1 + k_2 +... + k_m = k_1 + k_2 +... + k_m, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + 2k_m.\n\nIf n = 2k_1 + 2k_2 +... + 2k_m, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + 2k_m - 1.\n\nIf n = 2k_1 + 2k_2 +... + k_m + 1, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + 2k_m + 1.\n\nIf n = 2k_1 + 2k_2 +... + k_m - 1, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + 2k_m - 1.\n\nIf n = 2k_1 + 2k_2 +... + k_m - 2, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + k_m - 2.\n\nIf n = 2k_1 + 2k_2 +... + k_m - 3, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + k_m - 3.\n\nIf n = 2k_1 + 2k_2 +... + k_m - 4, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + k_m - 4.\n\nIf n = 2k_1 + 2k_2 +... + k_m - 5, then k_1 + k_2 +... + k_m must be at most 2k_1 + 2k_2 +... + k_m - 5.\n\nThus, the maximum possible number of lightsabers is 2k_1 + 2k_2 +... + 2k_m.\n\nAs k_1, k_2,..., k_m are all integers, the maximum possible number of lightsabers is at most n.\n\nIf the number of lightsabers is not at least 1, then output NO.\n\nIf the number of lightsabers is at least 1, then output YES.\n\n\"\"\"\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2 2 1\\n1 2') == 'YES'\nassert solution('1 1 2 2 1\\n1 2') == 'NO'\nassert solution('1 1 1 1 1\\n1 1 1 1 1') == 'NO'\nassert solution('1 1 2 2 1\\n1 2') == 'NO'\nassert solution('1 1 2 2 1\\n1 2') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n'''\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2''') == 'YES'\nassert solution('''5 2\n1 1 2 2 1\n1 2''') == 'NO'\n'''"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 2\n1 1 2 2 1\n1 2\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n5 2\n1 1 2 2 1\n1 2\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n2 2\n1\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n1 2\n1\n'''\n    ) == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 2 2 1\n1 2\n''') == 'YES'\nassert solution('''5 2\n1 1 2 2 1\n1 2\n''') == 'YES'\nassert solution('''5 1\n1\n''') == 'YES'\nassert solution('''5 2\n1\n1\n''') == 'NO'\nassert solution('''5 1\n2\n1\n''') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n2\\n3\\n1\\n') == 'YES'\nassert solution('1\\n2\\n3\\n2\\n') == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\n\"\"\"\nidea:\n\nfor each interval, count the number of light sabers of each color"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2''') == \"YES\"\nassert solution('''1 2\n1 2''') == \"NO\"\nassert solution('''1 1 2 2 1\n1 2''') == \"YES\"\nassert solution('''1 1 2 2 1\n2 1''') == \"YES\"\nassert solution('''1 1 1 1 1\n2 2''') == \"NO\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'Mishka'\nassert solution('1\\n3\\n5') == 'Chris'\nassert solution('3\\n2\\n1') == 'Friendship is magic!'\nassert solution('3\\n1\\n2') == 'Friendship is magic!'\nassert solution('6\\n1\\n2') == 'Friendship is magic!'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Chris'\n\"\"\"\n\nimport sys\n\nn = int(input())"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Chris\" or solution(stdin) == \"Mishka\" or solution(stdin) == \"Friendship is magic!^^\"\n\"\"\"\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 5\\n2 1\\n4 2') == 'Mishka'\nassert solution('2\\n6 1\\n1 6') == 'Chris'\nassert solution('3\\n1 5\\n3 3\\n2 2') == 'Friendship is magic!^^'\nassert solution('1\\n6 1\\n1 6') == 'Friendship is magic!^^'\nassert solution('3\\n3 3\\n2 2') == 'Friendship is magic!^^'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == 'Mishka'\nassert solution('3 2') == 'Chris'\nassert solution('2 1') == 'Friendship is magic!^^'\nassert solution('1 6') == 'Chris'\nassert solution('3 3') == 'Friendship is magic!^^'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1\\n6') == \"Mishka\"\nassert solution('1\\n6\\n2') == \"Chris\"\nassert solution('3\\n3\\n2') == \"Friendship is magic!^^\"\nassert solution('2\\n1\\n6') == \"Mishka\"\nassert solution('3\\n3\\n2') == \"Chris\"\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Mishka'\nassert solution('''2\n6 1\n1 6''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!'\nassert solution('''5\n1 4\n2 2\n3 3\n4 1\n5 1''') == 'Mishka'\nassert solution('''10\n4 2\n3 3\n1 4\n2 1\n3 1\n4 5\n1 1\n2 3\n3 2\n4 1\n5 5\n4 2\n5 3\n4 2\n3 5\n4 1\n5 1''') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2\n''') == 'Mishka'\nassert solution('''2\n6 1\n1 6\n''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2\n''') == 'Friendship is magic!'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\n3 5\n2 1\n4 2\n\"\"\") == \"Mishka\"\nassert solution(\"\"\"2\n6 1\n1 6\n\"\"\") == \"Chris\"\nassert solution(\"\"\"3\n1 5\n3 3\n2 2\n\"\"\") == \"Friendship is magic!\"\n\"\"\""
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n1 1\\n2 2\\n3 2\") == \"Mishka\"\nassert solution(\"2\\n6 1\\n1 6\") == \"Chris\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\") == \"Friendship is magic!\"\nassert solution(\"3\\n1 5\\n3 3\") == \"Chris\"\nassert solution(\"1\\n6 1\\n1 6\") == \"Friendship is magic!\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"2 4\") == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 *1\\n111\\n2 *2\\n2*2\\n2*2\\n2*2\\n2*2\\n2*2\\n2*2\") == \"YES\"\nassert solution(\"5 4\\n1 *1\\n111\\n2 *2\\n2*2\\n2*2\\n2*2\\n2*2\\n2*2\\n2*2\") == \"NO\"\nassert solution(\"2 4\\n*.*.\\n1211\\n2*2\\n2*2\") == \"NO\"\nassert solution(\"4 5\\n*.*.\\n123*\\n4*2\\n4*2\\n4*2\\n4*2\") == \"YES\"\n\n\n-----Solution Details-----\n\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3\\n111\\n1*1\\n111\\n\"\n) == \"YES\"\n\nassert solution(\n    \"3 3\\n*.*.\\n1211\\n\"\n) == \"NO\"\n\nassert solution(\n    \"2 4\\n*.*.\\n1211\\n\"\n) == \"NO\"\n\n\n\nimport sys\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n111\n1*1\n111\n''') == 'YES'\nassert solution('''4 4\n111\n1211\n1*1\n111\n''') == 'NO'\nassert solution('''5 7\n123456789\n*2*2\n123456789\n1*2*3\n*1*1*1\n''') == 'YES'\nassert solution('''5 4\n1234\n1324\n2342\n1*12\n''') == 'YES'\nassert solution('''2 4\n111\n1*1\n''') == 'NO'\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n111\n1*1\n111\n''') == 'YES'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\n'''\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n111\n1*1\n111''') == 'YES'\nassert solution('''3 3\n1*1\n111\n''') == 'NO'\nassert solution('''3 4\n***\n*****\n***1''') == 'YES'\nassert solution('''3 4\n*1*1\n*****\n*****\n***1''') == 'NO'\nassert solution('''6 6\n***\n*1*1\n*1*1\n*1*1\n*1*1\n*1*1\n*1*1''') == 'NO'\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n111\n1*1\n111\n''') == 'NO'\nassert solution('''3 3\n111\n1*1\n111\n''') == 'YES'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\nassert solution('''3 3\n111\n1*1\n111\n''') == 'YES'\nassert solution('''2 4\n*.*.\n1211\n''') == 'YES'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('68') == '3'\nassert solution('69') == '3'\nassert solution('160') == '0'\nassert solution('170') == '1'\nassert solution('1800') == '2'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7'\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('68') == '3'\nassert solution('100') == '10'\nassert solution('100000000') == '1'\nassert solution('1000000000') == '1'\nassert solution('1000000001') == '2'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''68''') == '3'\n'''\n68\n'''\nassert solution('''10''') == '1'\n'''\n10\n'''\nassert solution('''12''') == '2'\n'''\n12\n'''\nassert solution('''15''') == '3'\n'''\n15\n'''\nassert solution('''3''') == '1'\n'''\n3\n'''\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9''') == 3\nassert solution('''10''') == 0\nassert solution('''1''') == 0\nassert solution('''10''') == 0\nassert solution('''10''') == 0\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('68') == '3'\nassert solution('14') == '0'\nassert solution('7696514') == '3'\nassert solution('9363') == '0'\nassert solution('369') == '1'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''68'''\n) == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''68''') == '3'\nassert solution('''68''') == '3'\nassert solution('''50''') == '0'\nassert solution('''100000000''') == '1'\n\nassert solution('''54''') == '1'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\n\nprint('all tests passed')\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\nassert solution('-o---o-o-o-') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ooo') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('-o-o--') == 'YES'\nassert solution('o---o') == 'YES'\nassert solution('o--o-') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\nassert solution('-o---oo-') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"ooo\") == \"YES\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-oo-\") == \"NO\"\nassert solution(\"-oo-oo\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\nassert solution('-o---oo-') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ooo\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o--o\") == \"YES\"\nassert solution(\"ooo\") == \"NO\"\nassert solution(\"-oo-o\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'NO'\nassert solution('ooo') == 'YES'\nassert solution('-o--') == 'NO'\nassert solution('-o---') == 'YES'\nassert solution('-o---o-') == 'NO'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 2') == '4'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n\"\"\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3 1') == '4'\nassert solution('3 10 3') == '4'\nassert solution('3 5 2') == '4'\nassert solution('3 10 2') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n\"\"\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\") == \"2\"\nassert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\"\nassert solution(\"3 6 9\") == \"2\"\nassert solution(\"3 10 9\") == \"2\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 6 2\") == \"2\"\nassert solution(\"3 10 3\") == \"4\"\nassert solution(\"3 6 1\") == \"3\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('1 10 0') == '0'\nassert solution('0 10 0') == '0'\n\"\"\"\n\nn, m, k = map(int, stdin.split())\n\nc = n - k\np = m - c"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('10 15 7') == '6'\nassert solution('1000 7 1000000000') == '7'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n\nprint('Test success!')\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\") == \"7\"\nassert solution(\"5 2 1000\\n-13 -4 -9 -20 -11\") == \"0\"\nassert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\") == \"7\"\nassert solution(\"5 2 1000\\n-13 -4 -9 -20 -11\") == \"0\"\nassert solution(\"8 3 10\\n-1 -2 -3 -4 -5 -6 -7 -8 -9\") == \"8\"\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 10\\n2 -4 15 -3 4 8 3\\n') == '7'\nassert solution('5 2 1000\\n-13 -4 -9 -20 -11\\n') == '0'\nassert solution('7 3 10\\n2 -4 15 -3 4 8 3\\n') == '7'\nassert solution('5 2 1000\\n-13 -4 -9 -20 -11\\n') == '0'\nassert solution('1 2 3 4\\n-1 2 -4 3 4\\n') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''3 1 100\n1 1 1 1 1 1''') == '6'\nassert solution('''5 2 1000\n1 1 1 1 1 1''') == '1'\nassert solution('''3 2 100\n1 -1 1''') == '1'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''-13 -4 -9 -20 -11''') == '0'\nassert solution('''3 2 1000''') == '0'\nassert solution('''2 2 1000''') == '2'\nassert solution('''2 2 -1000''') == '-1000'\nassert solution('''-13 -4 -9 -20 -11''') == '-11'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 10\") == \"0 1\\n0 10\\n0 0\\n0 9\"\nassert solution(\"1 1\") == \"1 1\\n0 0\\n1 0\\n0 1\"\nassert solution(\"1 10\") == \"0 1\\n0 10\\n0 0\\n0 9\"\nassert solution(\"1 1 2 2\") == \"1 1\\n0 0\\n1 0\\n0 1\"\nassert solution(\"1 1 2 2 3 3\") == \"1 1\\n0 0\\n1 0\\n0 1\"\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 1\\n0 0\\n1 0\\n0 1'"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\nassert solution('0 1') == '0 1\\n0 0\\n0 1\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1 0 10'\nassert solution('0 0') == '0 0 0 0'\nassert solution('10 10') == '0 0 0 0'\n\nprint('Test success!')"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == '1 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 10\\n0 9\\n0 0\\n0 1\\n1 0\\n0 1') == '0 1 0 1'\nassert solution('1 1\\n0 0\\n1 0\\n0 1') == '0 1 0 1'\nassert solution('0 10\\n0 9\\n0 0\\n0 1\\n1 0\\n0 1') == '0 1 0 1'\nassert solution('0 10\\n0 9\\n0 0\\n0 1\\n1 0\\n0 1') == '0 1 0 1'\nassert solution('1 1\\n0 0\\n1 0\\n0 1') == '0 1 0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1'\nassert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''003512\n021\n''') == '30021'\nassert solution('''199966633300\n63\n''') == '3036366999'\nprint(solution('''9000000007\n110000000111\n'''))\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"99966633300\") == \"3036366999\"\nassert solution(\"199966633300\") == \"3036366999\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"199966633300\") == \"3036366999\"\nprint(solution(input()))\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('11') == '10'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('003512') == '30021'\nassert solution('9998') == '99998'\nassert solution('99988') == '999888'\nassert solution('9988999889988') == '9998999889988'\nassert solution('9988998899889988') == '9998998899889988'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('9') == '9'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\""
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('003512') == '30021'\nassert solution('9999966633300') == '3036366999'\nassert solution('9999966633300') == '3036366999'\nassert solution('9999966633300') == '3036366999'\nassert solution('9999966633300') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\nassert solution('9') == '9'\nassert solution('999') == '99999'\nassert solution('123456789') == '123456789'\n\nprint(solution(input()))\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1 2\n1''') == 'Correct'\nassert solution('''3 1 1 3\n2''') == 'Correct'\nassert solution('''2 1 1 3\n2''') == 'Incorrect'\nassert solution('''1 1 1 1\n1''') == 'Incorrect'\nassert solution('''3 1 1 3\n3''') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1 1 2''') == 'Correct'\nassert solution('''3 1 1 3''') == 'Correct'\nassert solution('''2 1 1 3''') == 'Incorrect'\nassert solution('''2 2 1 2''') == 'Correct'\nassert solution('''3 2 1 3''') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 1') == 'Incorrect'\nassert solution('2 1 1 2') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Incorrect'\n\n\n\n'''\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('3 1 1 2') == 'Correct'\nassert solution('2 1 1 2 3') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 2\\n1') == 'Correct'\nassert solution('3 1 1 3\\n2') == 'Correct'\nassert solution('2 1 1 3\\n2') == 'Incorrect'\n\n\n'''"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Correct'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 2\\n1') == 'Correct'\nassert solution('2 1 1 3\\n2') == 'Correct'\nassert solution('2 1 1 3\\n1') == 'Incorrect'\nassert solution('2 1 1 3\\n3') == 'Correct'\nassert solution('2 1 1 3\\n3') == 'Correct'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"6\"\nassert solution(\"1000000\") == \"5\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '5 6 7 8 9'\nassert solution('10') == '0'\nassert solution('12') == '0 1 2 3 4 5'\nassert solution('100') == '0 1 2 3 4 5 6 7 8 9 10 11 12'\n\n\n-----Best Practice-----"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"5\") == \"5 6 7 8 9\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nm = int(input())\ncounter = 0"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"5\") == \"5 6 7 8 9\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"5\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '6'\nassert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('5') == '9'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '5'\nassert solution('5\\n') == '0'\nassert solution('1\\n') == '5'\nassert solution('5\\n') == '0'\nassert solution('1\\n') == '5'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '5 6 7 8 9'\nassert solution('15') == '0'\nassert solution('100000') == '0'\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '5 6 7 8 9'\nassert solution('5') == '0'\nassert solution('5') == '0 1 2 3 4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 2') == '2 2'\nassert solution('2 1') == '2'\nassert solution('2 2 1') == '3'\nassert solution('1 2 3') == '3'\nassert solution('2 2 1') == '3'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 2') == '2 2'\nassert solution('2 1') == '2 2'\nassert solution('2 3 2') == '2 2'\nassert solution('2 1') == '2 2'\nassert solution('1 2 3') == '3 3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '2 2'\nassert solution('2 1') == '2 1'\nassert solution('1 2 3') == '2 2'\nassert solution('1 2 5') == '3 3'\nassert solution('4 2 1') == '3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 2\\n2 1\\n1 2 3\\n1 2 2\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1\\n2 2 1"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n\n2 3 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n\nassert solution(\n'''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n\nassert solution(\n'''2 3 2\n1 2\n1 2''') == '1'\n\nassert solution(\n'''2 3 2\n1 2\n1 2''') == '1'\n\nassert solution(\n'''2 3 2\n2 1\n2 1\n2 1\n2 1\n\n1 2\n1 2\n1 2\n1 2\n1 2\n\n1 2\n1 2\n1 2\n1 2''') == '2 2'"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n''') == '2 2'\n\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\n'''\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n\n\"\"\") == \"\"\"3 3 3 \n\"\"\"\n\nassert solution(\"\"\"4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n\n\"\"\") == \"\"\"3 3 3 \n\"\"\"\n\nassert solution(\"\"\"7 9 13\n1 2 3\n1 2 5\n1 2 7\n1 3 2\n1 4 5\n1 5 6\n1 6 7\n1 7 8\n1 6 9\n1 4 11\n1 8 10\n1 4 9\n1 5 6\n1 1 1\n\n\"\"\") == \"\"\"3 5 2 \n\"\"\"\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2 2'\nassert solution('1 2 2') == '3 3'\nassert solution('2 3 1') == '2 2'\nassert solution('2 1 1') == '2 2'\nassert solution('1 2 3 4 5') == '1 2'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 2''') == '2 2'\nassert solution('''2 1\n1 2 3''') == '2 2'\nassert solution('''2 4 4\n1 2 2\n1 2 3\n1 4 4''') == '3 3 3'\nassert solution('''1 4 5\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n'''\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2''') == '1'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n0''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n2''') == '1'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 0\nassert solution('2') == 1\nassert solution('3') == 2\nassert solution('4') == 1\nassert solution('5') == 0\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('7\\n5') == '4'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('5\\n0\\n') == '2'\nassert solution('3\\n1\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4\n2\n''') == '1'\n\nassert solution(\n'''\n1\n1\n''') == '0'\n\nassert solution(\n'''\n5\n1\n''') == '2'\n\nassert solution(\n'''\n2\n2\n''') == '0'"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n3\") == \"2\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('3\\n1\\n') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2''') == '1'\nassert solution('''1\n1''') == '0'\n'''\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 0\nassert solution(\"3 1\") == 1\nassert solution(\"2\") == 0\nassert solution(\"2 1\") == 1\nassert solution(\"0 1\") == 0\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3') == 'YES'\nassert solution('1 2 3 5\\n4 5 6 7\\n1 0 3 5\\n3 2 4 7') == 'YES'\nassert solution('1 0 1 1\\n1 0 1 1\\n1 0 1 1\\n1 0 1 1') == 'YES'\nassert solution('2 0 3 4\\n4 3 5 6\\n0 1 2 3\\n0 1 2 3\\n0 1 2 3') == 'YES'\nassert solution('3 0 2 4\\n4 3 5 6\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4') == 'YES'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'YES'\nassert solution('2\\n0 0 2 2\\n0 2 2 5\\n2 2 5 2\\n') == 'NO'\nassert solution('5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 2 3 3\\n') == 'NO'\nassert solution('5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n') == 'NO'\nassert solution('5\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'YES'\nassert solution('2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2 2 3 3\\n2"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\""
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 9') == '0'\nassert solution('25 20') == '1'\nassert solution('10 9') == '1'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 9') == '0'\nassert solution('25 20') == '1'\nassert solution('10 9') == '1'\nassert solution('10 17') == '1'\nassert solution('7 13') == '2'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 1\\n') == '3'\nassert solution('25 20\\n') == '0'\nassert solution('10 9\\n') == '1'\nassert solution('10 22\\n') == '0'\nassert solution('10 27\\n') == '1'"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\nassert solution('50 100') == '0'\nassert solution('100 10') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '3'\nassert solution('3 3') == '0'\nassert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n\n\n\"\"\""
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n') == '0'\nassert solution('12 1\\n') == '3'\nassert solution('25 20\\n') == '0'\nassert solution('10 9\\n') == '1'\n\n\n\"\"\""
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''12 1''') == '3'\nassert solution('''25 20''') == '0'\nassert solution('''10 9''') == '1'\nassert solution('''1 10''') == '0'\nassert solution('''10 100''') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1') == '3'\nassert solution('5 1') == '0'\nassert solution('5 9') == '1'\nassert solution('10 9') == '0'\nassert solution('10 100') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12 1\\n') == '3'\nassert solution('25 20\\n') == '0'\nassert solution('10 9\\n') == '1'\nprint(solution(''))\nprint(solution('10 15\\n'))\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('3\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\nassert solution('2\\n2\\n2 1\\n1 1\\n') == 'NO'\nassert solution('2\\n2\\n1 1\\n2 2\\n') == 'YES'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"YES\"\nassert solution(\"0 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 -1\") == \"YES\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == 'NO'\nassert solution('2\\n0 0\\n0 1') == 'YES'\nassert solution('1\\n0 0\\n0 1') == 'YES'\nassert solution('2\\n0 0\\n1 1') == 'YES'\nassert solution('1\\n0 0\\n1 1\\n0 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2') == 'YES'\nassert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n2 0') == 'YES'\nassert solution('2 3\\n0 1\\n1 2\\n1 0') == 'NO'\nassert solution('2 3\\n0 1\\n1 2\\n1 0\\n2 3') == 'YES'\nassert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n2 0\\n2 3') == 'YES'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n0 1\n1 1\n1 -1\n2 2''') == 'YES'\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2''') == 'NO'\nassert solution('''0 0\n1 0\n2 1\n1 1\n2 3\n''') == 'NO'\nassert solution('''1\n1 1\n2 1\n1 1\n2 3\n''') == 'YES'\nassert solution('''0 0\n1 0\n2 1\n1 1\n2 3\n''') == 'NO'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0\\n0\\n1\\n1\\n2\") == \"YES\"\nassert solution(\"0\\n1\\n1\\n1\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n2\\n1\\n2\") == \"YES\"\nassert solution(\"0\\n0\\n1\\n1\\n2\\n2\") == \"NO\"\nassert solution(\"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom sys import stdin, stdout"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n0 0\n0 1\n1 1\n1 -1\n2 2\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"5\n0 0\n0 1\n1 1\n1 -1\n2 2\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"5\n0 0\n1 0\n2 1\n1 1\n2 3\n\"\"\") == \"NO\"\n\"\"\""
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == answer_stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 2 2 1') == '6'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 2 1''') == '6'\nassert solution('''1 1 1 2''') == '31'\nassert solution('''2 12 3 1''') == '0'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\nassert solution('2 12 3 1') == '0'\nassert solution('2 12 3 1') == '0'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\nassert solution('1 1 1 2') == '0'\nassert solution('1 1 1 2') == '0'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\nassert solution('3 3 3 3') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"2 12 3 1\") == \"0\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 250 185 230''') == '1'\nassert solution('''0 185 250''') == '230'\nassert solution('''0 300''') == '2'\n'''\n)"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 250 185 230''') == \"1\"\nassert solution('''0 185 250''') == \"230\"\nassert solution('''2 300 185 230''') == \"0\"\nassert solution('''0 300''') == \"185 230\"\nassert solution('''0 0 0''') == \"0\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 250 185 230\n0 185 250\n''') == '1\\n230'\n\nassert solution('''4 250 185 230\n0 20 185 250\n''') == '0\\n185 250'\n\nassert solution('''2 300 185 230\n0 300\n''') == '2\\n185 230'\n\nassert solution('''3 50 100 10\n0 5 45\n''') == '4\\n0 45'\n\n'''"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 250 185 230\n0 185 250\n\"\"\"\n) == \"\"\"\n1\n230\n\"\"\"\nassert solution(\n\"\"\"\n4 250 185 230\n0 20 185 250\n\"\"\"\n) == \"\"\"\n0\n185 230\n\"\"\"\n\nimport sys\nsys.path.append('/home/maksim/github/Algorithms/python')\n\nfrom math import ceil"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 250 185 230''') == '1'\nassert solution('''0 185 250''') == '230'\nassert solution('''2 300 185 230''') == '0'\nassert solution('''0 300''') == '185 230'\nassert solution('''4 250 185 230''') == '0'\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n100 30\n40 10\"\"\") == \"942477.796077000\"\n\nassert solution(\"\"\"4\n1 1\n9 7\n1 4\n10 7\"\"\") == \"3983.539484752\"\n\nassert solution(\"\"\"1\n100 30\n40 10\"\"\") == \"10030\"\n\nassert solution(\"\"\"2\n1 1\n9 7\n1 4\n10 7\"\"\") == \"9074\"\n\n\n\"\"\""
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n100 30\\n40 10') == '942477.796077000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7\\n1 4\\n10 7') == '3983.539484752'\nassert solution('1\\n1') == '0'\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n100 30\\n40 10') == '942477.796077000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\n\n\"\"\""
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n100 30\\n40 10') == '942477.796077000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 30\\n40 10\\n\") == \"942477.796077000\"\nassert solution(\"4\\n1 1\\n9 7\\n1 4\\n10 7\\n\") == \"3983.539484752\"\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n100 30\\n40 10') == '942477.796077000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\nassert solution('2\\n5 6\\n6 7\\n6 5') == '982458.30762833'\n\n\n\"\"\"\n\nimport sys\nsys.stdin = open(\"./Input.txt\")\nfrom math import log10"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n100 30\n40 10\n''') == '942477.796077000'\nassert solution('''4\n1 1\n9 7\n1 4\n10 7\n''') == '3983.539484752'\n'''\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n3 1 2 2 4\n''') == '2'\nassert solution('''4 5\n2 3 4 5\n''') == '2'\nassert solution('''7 7\n1 3 3 4 5 4 3 1\n''') == '7'\nassert solution('''9 9\n1 3 3 4 5 4 3 1 1 2\n''') == '2'\nassert solution('''30 1\nn"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 5') == '2'\nassert solution('1 2 2 2 4') == '2'\nassert solution('1 2 2 2') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('2 4 2 2 4') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n3 1 2 2 4''') == '2'\nassert solution('''4 5\n2 3 4 5''') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n2 3 4\") == \"2\"\nassert solution(\"2 4\\n2 3 4\\n2 3 4\") == \"2\"\nassert solution(\"3 3\\n1 2 3\") == \"2\"\nassert solution(\"1 1\\n1\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"3 1 2 2 4\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 1 2 2 4\") == \"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data\nprint(solution(input_data))\n\"\"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5\\n3 1 2 2 4\\n') == '2'\nassert solution('4 5\\n2 3 4 5\\n') == '2'\nassert solution('6 6\\n2 4 1 4 5 5\\n') == '1'\nassert solution('7 7\\n2 4 1 4 5 5 5 6\\n') == '0'\nassert solution('8 8\\n2 4 1 4 5 5 5 6 6 7\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\"\n\n\"\"\"\nThe correct answer:"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5\\n3 1 2 2 4\\n') == '2'\nassert solution('4 5\\n2 3 4 5\\n') == '2'\nassert solution('1 10\\n1 2 2 3 2\\n') == '3'\nassert solution('4 10\\n2 3 4 5\\n') == '3'\nassert solution('4 9\\n2 3 4 5\\n') == '2'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\nassert solution('4\\n-10 6 -5 10') == '5'\nassert solution('1\\n-10 6 -5 10') == '5'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6\\n'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10\\n'\nassert solution('3\\n-10 6 -15') == '0\\n'\n'''\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 -2 10 -1 4\\n') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9\\n') == '10'\nassert solution('3\\n-10 6 -15\\n') == '0'\nassert solution('2\\n1 2\\n') == '1'\nassert solution('6\\n5 3 5 -1\\n') == '4'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '6'\nassert solution('''8''') == '10'\nassert solution('''3''') == '0'\n\n\n\"\"\""
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '6'\nassert solution('5 -2 10 -1 4') == '6'\nassert solution('8') == '0'\nassert solution('8 -5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6\\n'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10\\n'\nassert solution('3\\n-10 6 -15') == '0\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '0\\n'\nassert solution('7\\n-1 1 -1 -1 1 1 1 1') == '0\\n'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"5 -2 10 -1 4\") == \"6\"\nassert solution(\"8\") == \"10\"\nassert solution(\"5 2 5 3 -30 -30 6 9\") == \"10\"\nassert solution(\"-10 6 -15\") == \"0\"\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\n\n\n\"\"\""
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('2 2 3') == 'NO'\nassert solution('4 2 3') == 'YES'\nassert solution('1 2 2') == 'YES'\nassert solution('5 2 2') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n''') == 'YES'\nassert solution('''4 2 3\n''') == 'NO'\n\n'''"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''3 2 3''') == 'NO'\nassert solution('''1 2 3''') == 'NO'\nassert solution('''1 1 1''') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('2 2 2') == 'YES'\nassert solution('2 2 3') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''2 4 3''') == 'YES'\nassert solution('''2 4 3''') == 'NO'\nassert solution('''2 4 3''') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('1 2 3') == 'YES'\nassert solution('2 2 1') == 'NO'\nassert solution('3 3 2') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('2 4 5') == 'NO'\nassert solution('4 2 3') == 'YES'\nassert solution('10 1 1') == 'YES'\nassert solution('4 1 1') == 'NO'\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('a') == 0\nassert solution('baab') == 1\nassert solution('baaba') == 1\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abaca\") == 3\nassert solution(\"abcddcba\") == 4"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('fwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwefwef"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abaca\") == 3\nassert solution(\"abcddcba\") == 4\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('ab') == 1\nassert solution('abc') == 1\nassert solution('abcd') == 2\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"ddc\"\nassert solution(stdin) == \"ddcc\"\nassert solution(stdin) == \"ddccdd\"\nassert solution(stdin) == \"cdcdcd\"\nassert solution(stdin) == \"cccdccccc\"\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\nabcdcba''') == '3'\nassert solution('''6\nabcdcba''') == '4'\nassert solution('''10\nbcbcbcbcb''') == '6'\nassert solution('''18\ncbbbccccccbcccccccccbcbcbcbcbccbcccccccccccccbcbcbcbcbccbcbcbcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('aaaaaa') == 0\n\n\n-----\n\nciphertext = \"abcdefghijklmnopqrstuvwxyz\"\n\nfor i in range(len(ciphertext)):\n    for j in range(i+1, len(ciphertext)):\n        if ciphertext[i] == ciphertext[j]:\n            ciphertext = ciphertext[:i] + ciphertext[j+1:]\n            break\n\nprint(len(ciphertext))"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('ab') == 0\nassert solution('abc') == 0\nassert solution('abcddcba') == 4\nassert solution('abcddcba') == 4\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '3'\n\nassert solution(\n'''\n4\n1 2 3 4\n4\n10 11 12 13\n''') == '0'\n\nassert solution(\n'''\n2\n1 2\n2\n1 1\n''') == '2'\n\nassert solution(\n'''\n1\n1\n''') == '0'\n\nassert solution(\n'''\n6\n1 2 3 4 5 6\n5\n1 2 3 4 5\n''') == '0'"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n1 2 3 4\\n5\\n5 1 5 7 9\\n') == '3'\nassert solution('2\\n1\\n1\\n1 1\\n1 1\\n') == '0'\nassert solution('2\\n1\\n1\\n1 1\\n1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n') == '1'\nassert solution('2\\n1\\n1\\n1 1\\n1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('4\\n1 4 6 2\\n5\\n5 1 5 7 9') == '3'\nassert solution('4\\n1 2 3 4\\n4\\n10 11 12 13') == '2'\nassert solution('5\\n1 1 1 1 1\\n3\\n1 2 3') == '0'\nassert solution('5\\n1 1 1 1 1\\n3\\n1 2 3') == '2'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\\n\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\\n\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n4\\n1 2 3 4\\n\") == \"2\""
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\\n\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n4\\n1 2 3\\n\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 4 6 2\n5\n5 1 5 7 9''') == '3'\nassert solution('''1 2 3 4\n4\n10 11 12 13''') == '0'\nassert solution('''1 1 1 1 1\n3\n1 2 3''') == '2'\nassert solution('''1 1 1 1 1\n3\n1 1 1 1 1''') == '4'\nassert solution('''1 1 1 1 1\n3\n1 1 1 1 1''') == '4'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1 4 6 2') == '3'\nassert solution('1\\n4\\n1 4 6 2\\n5\\n5 1 5 7 9') == '0'\nassert solution('1\\n4\\n1 2 3 4\\n4\\n10 11 12 13') == '2'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 6 2\") == \"3\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"1\"\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 100\\n100 1') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\nassert solution('2 2\\n1 1\\n2 2\\n3 3') == 'Draw'\nassert solution('1 1\\n1 1\\n2 2\\n3 3') == 'Team 1'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n2 2\") == \"Team 2\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\nassert solution(\"1 1\\n2 2\\n3 3\\n2 2\") == \"Draw\"\nassert solution(\"1 1\\n2 2\\n3 3\\n2 2\") == \"Draw\"\n\n\n-----\n\nNote:\n\nFirst line of input is the number of testcases, then testcases follow.\n\nEach testcase contains four lines of input, the first line is the number of players, the second line is the defence skill of the first player, the third line is the attack skill of the second player, the forth line is the defence skill of the third player.\n\nThe following are the player information, each player is defined by a line of input, the first line contains the first player information, the second line the second player information, the third line the third player information, and the forth line the fourth player information.\n\nFor each testcase, print the name of team that can definitely win, or \"Draw\", if there is no such team.\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == answer_data\n\n\"\"\"\n\nfrom itertools import zip_longest\nfrom sys import argv"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Team 1\"\n'''\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 2'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 1'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\nassert solution('5 10\\n10 10\\n5 10\\n15 5\\n5 10') == 'Team 1'\nassert solution('5 10\\n10 10\\n5 10\\n15 5\\n5 10') == 'Team 1'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99\\n') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2\\n') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2\\n') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 100\n100 1\n99 99\n99 99\n''') == 'Team 1'\nassert solution('''1 1\n2 2\n3 3\n2 2\n''') == 'Team 2'\nassert solution('''3 3\n2 2\n1 1\n2 2\n''') == 'Draw'\n'''\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''1 1\n2 2\n3 3\n2 2''') == 'Team 2'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Draw'"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Team 1\"\n\n\"\"\"\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n2 2\") == \"Team 2\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\n\n\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\n\n----MY ANSWER----"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '2.4'\n\"\"\""
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(Takahashi wants to grill N pieces of meat on a grilling net, which can be seen as a two-dimensional plane. The coordinates of the i-th piece of meat are \\left(x_i, y_i\\right), and its hardness is c_i.\nTakahashi can use one heat source to grill the meat. If he puts the heat source at coordinates \\left(X, Y\\right), where X and Y are real numbers, the i-th piece of meat will be ready to eat in c_i \\times \\sqrt{\\left(X - x_i\\right)^2 + \\left(Y-y_i\\right)^2} seconds.\nTakahashi wants to eat K pieces of meat. Find the time required to have K or more pieces of meat ready if he put the heat source to minimize this time.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 60\n - 1 \\leq K \\leq N\n - -1000 \\leq x_i, y_i \\leq 1000\n - \\left(x_i, y_i\\right) \\neq \\left(x_j, y_j\\right) \\left(i \\neq j \\right)\n - 1 \\leq c_i \\leq 100\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nx_1 y_1 c_1\n\\vdots\nx_N y_N c_N\n\n-----Output-----\nPrint the answer.\nIt will be considered correct if its absolute or relative error from our answer is at most 10^{-6}.\n\n-----Sample Input-----\n4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40\n\n-----Sample Output-----\n2.4\n\nIf we put the heat source at \\left(-0.2, 0\\right), the 1-st, 2-nd, and 3-rd pieces of meat will be ready to eat within 2.4 seconds. This is the optimal place to put the heat source.\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == \"0.43688536\"\nassert solution('3 3') == \"0.5882973\"\nassert solution('1 2 3 4') == \"0.58484928\"\nassert solution('1 4') == \"0.8\"\nassert solution('3 4') == \"0.85813693\"\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '2.4'\n'''\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40''') == '2.4'\n'''"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.4\""
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('')) == 'Bicarp'\n\n'''\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('')) == 'Bicarp'\n'''\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == 'Bicarp'\nassert solution('''5''') == 'Bicarp'\nassert solution('''2''') == 'Bicarp'\nassert solution('''7''') == 'Monocarp'\nassert solution('''6''') == 'Bicarp'\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Monocarp'\nassert solution(stdin) == 'Bicarp'\n\"\"\""
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"Bicarp\"\nassert solution(\"?5?4?\") == \"Bicarp\"\nassert solution(\"??00???\") == \"Bicarp\"\nassert solution(\"???00???\") == \"Bicarp\"\nassert solution(\"???00??\") == \"Monocarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == \"Bicarp\"\n\"\"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Bicarp\"\n\"\"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n2 2\") == \"1\"\nassert solution(\"2 2\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\\n\") == \"3\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"3 7\\n2 2\\n2 3\\n2 4\\n\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('2 2') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2') == '1'\nassert solution('2\\n2\\n3') == '2'\nassert solution('3\\n2\\n2') == '1'\nassert solution('3\\n2\\n3') == '2'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n1\\n1') == '2'\nassert solution('1\\n3\\n1\\n1\\n1') == '1'\nassert solution('1\\n3\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('3 4') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n6 4') == '1'\nassert solution('2 2\\n2 3\\n2 4') == '1'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n5 6\\n4 9\\n6 1') == '3'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1') == '1'\nassert solution('1 5\\n5 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 7\n2 2\n2 3\n2 4\n''') == '1'\nassert solution('''5 5\n3 3\n2 5\n5 6\n4 9\n6 1\n''') == '1'\nassert solution('''3 7\n2 2\n2 3\n2 4\n''') == '1'\nassert solution('''3 7\n2 2\n2 3\n2 4\n''') == '1'\nassert solution('''4 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n2 101\n2 102\n2 103\n2 104\n2 105\n2 106\n2 107\n2 108\n2 109\n2 110\n2 111\n2 112\n2 113\n2 114\n2 115\n2 116\n2 117\n2 118\n2 119\n2 120\n2 121\n2 122\n2 123\n2 124\n2 125\n2 126\n2 127\n2 128\n2 129\n2 130\n2 131\n2 132\n2 133\n2 134\n2 135\n2 136\n2 137\n2 138\n2 139\n2 140\n2 141\n2 142\n2 143\n2 144\n2 145\n2 146\n2 147\n2 148\n2 149\n2 150\n2 151\n2 152\n2 153\n2 154\n2 155\n2 156\n2 157\n2 158\n2 159\n2 160\n2 161\n2 162\n2 163\n2 164\n2 165\n2 166\n2 167\n2 168\n2 169\n2 170\n2 171\n2 172\n2 173\n2 174\n2 175\n2 176\n2 177\n2 178\n2 179\n2 180\n2 181\n2 182\n2 183\n2 184\n2 185\n2 186\n2 187\n2 188\n2 189\n2 190\n2 191\n2 192\n2 193\n2 194\n2 195\n2 196\n2 197\n2 198\n2 199\n2 200\n2 201\n2 202\n2 203\n2 204\n2 205\n2 206\n2 207\n2 208\n2 209\n2 210\n2 211\n2 212\n2 213\n2 214\n2 215\n2 216\n2 217\n2 218\n2 219\n2 220\n2 221\n2 222\n2 223\n2 224\n2 225\n2 226\n2 227\n2 228\n2 229\n2 230\n2 231\n2 232\n2 233\n2 234\n2 235\n2 236\n2 237\n2 238\n2 239\n2 240\n2 241\n2 242\n2 243\n2 244\n2 245\n2 246\n2 247\n2 248\n2 249\n2 250\n2 251\n2 252\n2 253\n2 254\n2 255\n2 256\n2 257\n2 258\n2 259\n2 260\n2 261\n2 262\n2 263\n2 264\n2 265\n2 266\n2 267\n2 268\n2 269\n2 270\n2 271\n2 272\n2 273\n2 274\n2 275\n2 276\n2 277\n2 278\n2 279\n2 280\n2 281\n2 282\n2 283\n2 284\n2 285\n2 286\n2 287\n2 288\n2 289\n2 290\n2 291\n2 292\n2 293\n2 294\n2 295\n2 296\n2 297\n2 298\n2 299\n2 300\n2 301\n2 302\n2 303\n2 304\n2 305\n2 306\n2 307\n2 308\n2 309\n2 310\n2 311\n2 312\n2 313\n2 314\n2 315\n2 316\n2 317\n2 318\n2 319\n2 320\n2 321\n2 322\n2 323\n2 324\n2 325\n2 326\n2 327\n2 328\n2 329\n2 330\n2 331\n2 332\n2 333\n2 334\n2 335\n2 336\n2 337\n2 338\n2 339\n2 340\n2 341\n2 342\n2 343\n2 344\n2 345\n2 346\n2 347\n2 348\n2 349\n2 350\n2 351\n2 352\n2 353\n2 354\n2 355\n2 356\n2 357\n2 358\n2 359\n2 360\n2 361\n2 362\n2 363\n2 364\n2 365\n2 366\n2 367\n2 368\n2 369\n2 370\n2 371\n2 372\n2 373\n2 374\n2 375\n2 376\n2 377\n2 378\n2 379\n2 380\n2 381\n2 382\n2 383\n2 384\n2 385\n2 386\n2 387\n2 388\n2 389\n2 390\n2 391\n2 392\n2 393\n2 394\n2 395\n2 396\n2 397\n2 398\n2 399\n2 400\n2 401\n2 402\n2 403\n2 404\n2 405\n2 406\n2 407\n2 408\n2 409\n2 410\n2 411\n2 412\n2 413\n2 414\n2 415\n2 416\n2 417\n2 418\n2 419\n2 420\n2 421\n2 422\n2 423\n2 424\n2 425\n2 426\n2 427\n2 428\n2 429\n2 430\n2 431\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"3 7\") == \"1\"\nassert solution(\"5 3\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 2\n2 3''') == '1'\nassert solution('''5 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100''') == '1'\n\nassert solution('''3 7\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100''') == '3'\n\nassert solution('''3 3\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n5 11\n5 12\n5 13\n5 14\n5 15\n5 16\n5 17\n5 18\n5 19\n5 20\n5 21\n5 22\n5 23\n5 24\n5 25\n5 26\n5 27\n5 28\n5 29\n5 30\n5 31\n5 32\n5 33\n5 34\n5 35\n5 36\n5 37\n5 38\n5 39\n5 40\n5 41\n5 42\n5 43\n5 44\n5 45\n5 46\n5 47\n5 48\n5 49\n5 50\n5 51\n5 52\n5 53\n5 54\n5 55\n5 56\n5 57\n5 58\n5 59\n5 60\n5 61\n5 62\n5 63\n5 64\n5 65\n5 66\n5 67\n5 68\n5 69\n5 70\n5 71\n5 72\n5 73\n5 74\n5 75\n5 76\n5 77\n5 78\n5 79\n5 80\n5 81\n5 82\n5 83\n5 84\n5 85\n5 86\n5 87\n5 88\n5 89\n5 90\n5 91\n5 92\n5 93\n5 94\n5 95\n5 96\n5 97\n5 98\n5 99\n5 100\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n3 13\n3 14\n3 15\n3 16\n3 17\n3 18\n3 19\n3 20\n3 21\n3 22\n3 23\n3 24\n3 25\n3 26\n3 27\n3 28\n3 29\n3 30\n3 31\n3 32\n3 33\n3 34\n3 35\n3 36\n3 37\n3 38\n3 39\n3 40\n3 41\n3 42\n3 43\n3 44\n3 45\n3 46\n3 47\n3 48\n3 49\n3 50\n3 51\n3 52\n3 53\n3 54\n3 55\n3 56\n3 57\n3 58\n3 59\n3 60\n3 61\n3 62\n3 63\n3 64\n3 65\n3 66\n3 67\n3 68\n3 69\n3 70\n3 71\n3 72\n3 73\n3 74\n3 75\n3 76\n3 77\n3 78\n3 79\n3 80\n3 81\n3 82\n3 83\n3 84\n3 85\n3 86\n3 87\n3 88\n3 89\n3 90\n3 91\n3 92\n3 93\n3 94\n3 95\n3 96\n3 97\n3 98\n3 99\n3 100''') == '1'\n\nassert solution('''3 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''5 5''') == '1'\nassert solution('''3 7''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''5 5''') == '1'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('6 2') == '7'\nassert solution('8 2') == '9'\nassert solution('9 2') == '11'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('0 3') == '-1'\nassert solution('3 2') == '5'\nassert solution('0 1') == '-1'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 4\") == \"7\"\nassert solution(\"1 6\") == \"8\"\nassert solution(\"1 16\") == \"17\"\nassert solution(\"1 62\") == \"62\"\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 1\nassert solution('3 2') == 5\nprint(solution(stdin))\nassert solution(stdin) == 5\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 1') == 1\nassert solution('1 1\\n') == 1\nassert solution('1 1\\n1 1\\n') == 1\nassert solution('1 1\\n2 2\\n') == 1\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '5'\nassert solution('1 1') == '1'\nassert solution('1 3') == '5'\nassert solution('10 5') == '21'\nassert solution('6 3') == '15'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 1\nassert solution('1 1') == 1\nassert solution('2 2') == 2\nassert solution('3 2') == 5\nassert solution('4 2') == 7\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('.*..**.*') == 'yes'\nassert solution('.**.*.*.*.*.*.*.*.*.*.*.*.*.*.*') == 'yes'\nassert solution('.***.*.*.*.*.*.*.*.*.*.*.*.*.*.*') == 'yes'\nassert solution('.***.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*') == 'no'\nassert solution('.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*') == 'no'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"16\\n.**.*..*.***.**.\") == \"yes\"\nassert solution(\"11\\n.*.*...*.*.\") == \"no\"\n\"\"\"\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16\\n.*.*..*.***.**.\\n') == 'yes'\nassert solution('11\\n.*.*...*.*.\\n') == 'no'\nassert solution('16\\n.**.*..*.***.**.\\n') == 'yes'\nassert solution('11\\n.*.*...*.*.\\n') == 'no'\nassert solution('6\\n.**.**.*.**.*\\n') == 'no'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('.**.*..*.***.**.') == 'yes'\nassert solution('.*.*...*.*.\\n') == 'no'\nassert solution('\\n'.join(['.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**.\\n', '.**.*..*.***.**"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('16\\n.**.*..*.***.**.\\n') == 'yes'\nassert solution('11\\n.*.*...*.*.\\n') == 'no'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('no' == solution('no'))\nassert solution('no' == solution('yes'))\nassert solution('yes' == solution('yes'))\nassert solution('no' == solution('no'))\nassert solution('yes' == solution('yes'))\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n..**.\n''') == 'yes'\nassert solution('''2\n.**..\n''') == 'no'\nassert solution('''3\n.**.**\n''') == 'no'\nassert solution('''4\n.**.**.\n.**.*..\n''') == 'no'\nassert solution('''5\n.**.**.**.\n.*.*.**.*\n''') == 'no'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n**.*.*.*.*.*.*.\\n\") == \"yes\\n\"\nassert solution(\"4\\n.*.*.*.*.*.*.*.\\n\") == \"no\\n\"\nassert solution(\"1\\n.\\n\") == \"no\\n\"\nassert solution(\"4\\n.*.*.*.*.*.*.*.\\n\") == \"yes\\n\"\nassert solution(\"4\\n.**.*.*.*.*.*.*.\\n\") == \"no\\n\"\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n.*.*...*.*.\\n') == 'yes'\nassert solution('9\\n.**.**.*.*.*.*.\\n') == 'no'\nassert solution('1\\n.*.*...*.*.*.*.\\n') == 'yes'\nassert solution('2\\n.**.*...*.*.*.*.\\n') == 'yes'\nassert solution('1\\n.*.*...*.*.*.*.\\n') == 'yes'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 0 2\n3 5 7\n8 1 6\n''') == \"9\"\n\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == \"-1\"\n'''\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n4 0 2\\n3 5 7\\n8 1 6') == '9'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 0 2\n3 5 7\n8 1 6\n''') == '9'\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 1 1\n1 1 1 1\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\n'''\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n4 0 2\\n3 5 7\\n8 1 6') == '9'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '1'\n\n\n-----Testcases-----\n\n\"\"\"\n\nn = int(input())\nlst = []\nfor _ in range(n):\n    lst.append(list(map(int,input().split(' '))))"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1\") == \"-1\"\nassert solution(\"3\\n4 0 2\\n3 5 7\\n8 1 6\") == \"9\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 0 2\\n3 5 7\\n8 1 6\\n') == '9'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1\\n') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\\n') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\\n') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\\n') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4 0 2\\n3 5 7\\n8 1 6') == '9'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 1 1\\n1 1 1 1') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1') == '-1'\nassert solution('5\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n4 0 2\n3 5 7\n8 1 6\n\"\"\") == '9'\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == '-1'\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == '-1'\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == '-1'\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n\"\"\") == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4 0 2\\n3 5 7\\n8 1 6\") == \"9\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\") == \"-1\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\") == \"-1\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n6\n1\n1\n1\n1\n'''\n) == '3 7'\nassert solution(\n'''\n1\n10\n5\n'''\n) == '15 15'\nassert solution(\n'''\n3\n6\n1\n6\n5\n'''\n) == '6 12'\nassert solution(\n'''\n3\n7\n1\n6\n5\n'''\n) == '7 13'\nassert solution(\n'''\n10\n8\n3\n3\n4\n4\n3\n5\n3\n3\n2\n1\n'''\n) == '3 4 9 13 16'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1') == '3 7'\nassert solution('1\\n10\\n5\\n') == '15 15'\nassert solution('3\\n7\\n1\\n6\\n5\\n') == '7 13'\n\n\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\n\nfrom sys import stdin, stdout\n\nn = int(stdin.readline())\nm = int(stdin.readline())"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1''') == '3 7'\nassert solution('''1\n10\n5''') == '15 15'\nassert solution('''3\n7\n1\n6\n5''') == '7 13'\n'''\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1''') == '3 7'\nassert solution('''1\n10\n5''') == '15 15'\nassert solution('''3\n6\n1\n6\n5''') == '7 13'\nassert solution('''3\n7\n1\n6\n5''') == '7 13'\nassert solution('''3\n8\n3\n4\n3\n3\n4\n2\n3\n3\n2\n3\n4''') == '4 9'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1''') == '3 7'\n\nassert solution('''1\n10\n5\n''') == '15 15'\n\nassert solution('''3\n6\n1\n6\n5\n''') == '7 13'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n6\\n1\\n1\\n1\\n1') == '3 7'\nassert solution('1\\n10\\n5\\n') == '15 15'\nassert solution('3\\n7\\n1\\n6\\n5\\n') == '6 12'\n\n\n\"\"\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n\"\"\") == '128'\nassert solution(\"\"\"4 4\n\"\"\") == '256'\nassert solution(\"\"\"7 4\n\"\"\") == '1680'\nassert solution(\"\"\"9 4\n\"\"\") == '58160'\nassert solution(\"\"\"10 4\n\"\"\") == '98720'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == '128'\nassert solution('3 4') == '256'\nassert solution('3 4\\n1 B\\n1 F\\n2 F') == '256'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == '128'\n\nassert solution('2 4') == '10'\n\nassert solution('3 10') == '20'\n\nassert solution('2 2') == '1'\n\nassert solution('1 5') == '0'"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n\") == \"128\"\nassert solution(\"3 2\\n\") == \"10\"\nassert solution(\"3 1\\n\") == \"6\"\nassert solution(\"2 2\\n\") == \"2\"\nassert solution(\"2 1\\n\") == \"2\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"128\"\nassert solution(\"10 10\") == \"1024\"\nassert solution(\"100 1000\") == \"4194304\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n\") == \"128\"\nassert solution(\"2 2\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"0\"\nassert solution(\"2 1\\n\") == \"0\"\nassert solution(\"1 1\\n\") == \"0\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"20 2\") == \"8\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 3') == '4'\nassert solution('2 4') == '8'\nassert solution('2 2') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4') == '18'\nassert solution('1 1') == '1'\nassert solution('3 3') == '128'\nassert solution('3 2') == '64'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"4 4\") == \"256\"\nassert solution(\"4 4\") == \"256\"\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4''') == '''2 3'''\nassert solution('''1 5''') == '''1 2'''\nassert solution('''4 3''') == '''1 2'''\nassert solution('''2 3''') == '''1 2'''\nassert solution('''4 3''') == '''1 2'''\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\\n') == '1 2'\nassert solution('3 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '2 4'\nassert solution('1 3\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\\n') == '1 2'\nassert solution('4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\\n') == '1 2'\nassert solution('2 1\\n1 1') == '1 1'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5''') == '2 3'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '2 3'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '2 3'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '2 3'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5''') == '2 3'\nassert solution('''2 1\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''5 4\n1 1\n1 2\n1 3\n1 4\n1 5\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''7 4\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 2'\n\n'''\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4''') == '2 3'\nassert solution('''10 4 1 2 3 4''') == '1 2'\nassert solution('''10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\n\nassert solution('''4 3''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5\n''') == '2 3'\nassert solution('''2 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''3 4\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n''') == '1 2'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2 6 7\\n4 2 3 9 5\\n3 2 3 9\\n100 1 7\\n400 3 3 2 5\\n100 2 9 2\\n500 3 2 9 5\") == \"2 3\"\nassert solution(\"4 3\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\") == \"1 2\"\nassert solution(\"1 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\") == \"2 4\"\nassert solution(\"1 5\\n9 9 8 7 6 5 4 3 2 1\\n3 4 1 2 3 4\\n1 4 5 6 7 8\\n4 4 1 3 5 7\\n1 4 2 4 6 8\\n5 4 1 9 2 8\") == \"2 4\"\nassert solution(\"3 4\\n1 1\\n1 2\\n1 3\\n1 4\\n10 4 1 2 3 4\\n20 4 1 2 3 4\\n30 4 1 2 3 4\") == \"1 2\"\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 15\n''') == '69 96'\nassert solution('''3 0\n''') == '-1 -1'\nassert solution('''2 12\n''') == '59 68'\nassert solution('''10 0\n''') == '59 68'\nassert solution('''13 22\n''') == '59 68'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 15''') == '69 96'\nassert solution('''3 0''') == '-1 -1'\nassert solution('''5 0''') == '-1 -1'\nassert solution('''0 100''') == '-1 -1'\nassert solution('''100 10''') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('2 5') == '1 26'\nassert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('3 1') == '3 4'\nassert solution('5 1') == '1 6'\nassert solution('8 1') == '3 9'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 0') == '-1 -1'\nassert solution('2 15') == '69 96'\nassert solution('2 13') == '69 31'\nassert solution('3 15') == '69 96'\nassert solution('3 26') == '69 96'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('0 2') == '-1 -1'\nassert solution('1 9') == '-1 -1'\nassert solution('2 1') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == input(\"\")\n\"\"\"\nimport sys\nsys.setrecursionlimit(10000)\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 15''') == '69 96'\nassert solution('''3 0''') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"0 0\"\nassert solution(\"1 1\") == \"0 0\"\nassert solution(\"2 4\") == \"-1 -1\"\nassert solution(\"2 15\") == \"69 96\"\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 50 2''') == \"1230\"\nassert solution('''1 2345 10''') == \"2750685\"\nassert solution('''101 154 2''') == \"2189\"\nassert solution
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[2:-2]\n\"\"\"\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 50 2''') == '1230'\nassert solution('''1 2345 10''') == '2750685'\nassert solution('''101 154 2''') == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 50 2''') == '1230'\nassert solution('''1 2345 10''') == '2750685'\nassert solution('''101 154 2''') == '2189'\nprint('tests passed')\n\"\"\""
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\nassert solution('101 11 15 2') == '228977'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\n\n\"\"\""
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''3 2 5\n10 16 22\n''') == 'NO'\nassert solution('''6 1 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''6 2 3\n10 16 22\n''') == 'NO'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3 10\") == \"YES\"\nassert solution(\"6 2 3\") == \"YES\"\nassert solution(\"3 2 5\") == \"NO\"\nassert solution(\"10 16 22\") == \"YES\"\nassert solution(\"7 2 7 7 4 2\") == \"YES\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3 10\n7 2 7 7 4 2''') == 'YES'\nassert solution('''3 2 5\n10 16 22''') == 'NO'\nassert solution('''3 2 5\n7 2 7 7 4 2''') == 'YES'\nassert solution('''4 3 10\n4 5 3 13 4 10''') == 'NO'\nassert solution('''5 2 3\n15 8 19 14 19 16''') == 'YES'\n'''\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''3 2 5\n10 16 22\n''') == 'NO'\nassert solution('''6 2 3\n4 5 3 13 4 10\n''') == 'NO'\nassert solution('''4 2 5\n7 2 7 7 4 2\n''') == 'YES'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3 10''') == 'YES'\nassert solution('''6 2 3''') == 'YES'\nassert solution('''3 2 5''') == 'NO'\nassert solution('''10 16 22''') == 'YES'\nassert solution('''10 16 22''') == 'YES'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3 10\\n7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\\n4 5 3 13 4 10\") == \"YES\"\nassert solution(\"3 2 5\\n10 16 22\") == \"YES\"\nassert solution(\"3 2 5\\n10 16 22\") == \"YES\"\nassert solution(\"3 2 5\\n10 16 22\") == \"NO\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 3 10''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 2 7 7 4 2''') == 'YES'\nassert solution('''10 2 3''') == 'NO'\nassert solution('''10 1 10''') == 'YES'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"BGRYB\") == \"1 1 0 0\"\nassert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"GBG\") == \"1 1 0 0\"\nassert solution(\"BGRYBYGR\") == \"2 1 0 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('R') == '0 0 0 0'\nassert solution('RYBGRYBGRY') == '0 0 0 0'\nassert solution('BGYBGY') == '1 1 1 1'\nassert solution('BGB') == '1 1 0 0'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RRRBB\") == \"0 0 0 0\"\nassert solution(\"RRYYBGRYBG\") == \"0 0 0 0\"\nassert solution(\"BGRYB\") == \"0 1 0 0\"\nassert solution(\"BGYBGY\") == \"1 1 1 1\"\nassert solution(\"RRRRBB\") == \"0 0 0 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RYBGRYBGRY\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\nassert solution(\"RBYYBGRYGB\") == \"1 1 0 1\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"BGYBGY\") == \"1 1 1 1\"\nassert solution(\"BGBGYR\") == \"0 0 0 0\"\nassert solution(\"GRBGYB\") == \"1 1 1 1\"\nassert solution(\"BGBGYR\") == \"0 0 0 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '0 0 0 0'\nassert solution('a') == '0 0 0 0'\nassert solution('RRYB') == '0 0 0 0'\nassert solution('GRBYB') == '0 0 0 0'\nassert solution('RRYBGB') == '0 0 0 0'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!!RGYB\") == \"0 1 0 0\"\nassert solution(\"GRYYB\") == \"1 1 1 1\"\nassert solution(\"!!GB!\") == \"2 1 1 0\"\nassert solution(\"!!!YGRB\") == \"1 1 1 1\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RYBGRYBGR\") == '0 0 0 0'\nassert solution(\"!RG\") == '0 1 0 0'\nassert solution(\"!GB!RG!Y!\") == '2 1 1 1'\nassert solution(\"!!!YGRB\") == '1 1 1 1'\nassert solution(\"!!RGYB\") == '0 0 0 0'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.5000000000\"\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 6\n1 4\n2 3\n1 3\n1 2\n3 4\n2 4\n''') == '1.5000000000'\n'''\n\nn,m=map(int,stdin.split())\nl=[]\nfor _ in range(m):\n    a,b=map(int,stdin.split())\n    l.append((a,b))\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4\\n1 4') == '1.5000000000'\nassert solution('2 3\\n1 3\\n1 2\\n3 4\\n2 4') == '1.5000000000'\nassert solution('2 5\\n2 4\\n3 5\\n4 5\\n2 4\\n3 5\\n4 5') == '1.2500000'\nassert solution('2 5\\n2 4\\n3 5\\n4 5\\n2 4\\n3 5\\n4 5\\n2 5') == '1.2500000'\nassert solution('2 6\\n2 6\\n3 6\\n4 6\\n2 6\\n3 6\\n4 6\\n2 6\\n3 6\\n4 6') == '1.499999999'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4\\n1 3\\n1 2') == '1.5000000000'\nassert solution('4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4') == '1.5000000000'\nassert solution('3 4\\n1 2\\n1 2\\n2 3\\n2 3\\n3 4') == '2.0'\nassert solution('3 6\\n1 3\\n2 4\\n1 4\\n2 4\\n1 4\\n2 4\\n1 4\\n2 4') == '2.0'\nassert solution('3 3\\n1 2\\n1 2\\n2 3\\n2 3\\n3 4') == '2.0'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    stdin) == '1.5000000000'\nprint(solution(\n    stdin))\n\n\"\"\"\n\n\"\"\"\n\na = int(input())\nb = int(input())"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.5000000000\"\nassert solution(stdin) == \"1.5000000000\"\nassert solution(stdin) == \"1.5000000000\"\nassert solution(stdin) == \"1.5000000000\"\nassert solution(stdin) == \"1.5000000000\"\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\\n') == '1.5000000000'\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4') == '1.5000000000'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '2.0000000000'\nprint('Test success!')\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 10\\n1 2\\n1 3\\n2 3\\n1 2\\n1 3\\n2 3\\n3 4\\n2 4\\n3 4\\n4 5\\n2 4\\n3 4\\n4 5\\n5 6\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12') == '1.5000000000'"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('5432359') == '5432360'\nassert solution('1000000000') == '1000000000'\nassert solution('3') == '3'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '0'\nassert solution('''113''') == '110'\nassert solution('''1000000000''') == '1000000000'\nassert solution('''5432359''') == '5432360'"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\nassert solution(\"112\") == \"110\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '0'\nassert solution('5432359') == '5432360'\nassert solution('11000001100') == '11000001110'\n\n\n\n\"\"\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(5) == \"0\"\nassert solution(113) == \"110\"\nassert solution(1000000000) == \"1000000000\"\nassert solution(5432359) == \"5432360\"\nassert solution(0) == \"0\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(5) == \"0\"\nassert solution(113) == \"110\"\nassert solution(5432359) == \"5432360\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '10'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(5) == 0\nassert solution(113) == 110\nassert solution(1000000000) == 1000000000\nassert solution(5432359) == 5432360\n\nassert solution(59) == 60\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('hello world') == '-1'\nassert solution('he loba loba') == '0'\nassert solution('merry christmas') == '-1'\nassert solution('hastalavistababy') == '3'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('s') =='s'\nassert solution('a') == 'a'\nassert solution('ab') == 'ba'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''helloworld''') == '-1'\nassert solution('''ehoolwlroz''') == '3'\nassert solution('''hastalavistababy''') == '0'\nassert solution('''merrychristmas''') == '-1'\nassert solution('''hastalavistababy''') == '-1'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e a t a l a v i s t a b y'\nassert solution('merrychristmas') =='m r e y c r i s t m r a y'"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"helloworld\") == \"helloworld\"\nassert solution(\"hastalavistababy\") == \"hastalavistababy\"\nassert solution(\"merrychristmas\") == \"merrychristmas\"\nassert solution(\"christmastemerry\") == \"christmastemerry\"\nprint(solution(stdin))"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('hastalavistababy') == 'h e l o'\nassert solution('merrychristmas') == 'c h r e s t r i s m'\nassert solution('hello') == 'h e l l o'\nassert solution('helloworld') == 'h e l l o'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"helloworld\") == \"h e l l o w o r l d z\"\nassert solution(\"hastalavistababy\") == \"h e l l o w o r l d z\"\nassert solution(\"merrychristmas\") == \"-1\"\nassert solution(\"christmasmerry\") == \"-1\""
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\nharry potter\n''') == 'hap'\n\nassert solution(\n'''\ntom riddle\n''') == 'tomr'\n\nassert solution(\n'''\nlucy king\n''') == 'lucyk'\n\nassert solution(\n'''\ngabby giulini\n''') == 'gabbygi'\n\nassert solution(\n'''\nwhiskey pharrell\n''') == 'whiskeph'"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nprint(\"Tests passed successfully\")\n\n'''\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('abracadabra') == 'abracad'\nassert solution('z') == 'z'\nassert solution('abracadabra') == 'abracad'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('asdf') == 'asdf'\nassert solution('a' * 10) == 'a' * 10\nassert solution('qwertyuio') == 'qwertyuio'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nassert solution(\"harry riddle\") == \"harryr\"\nassert solution(\"peter piper\") == \"ppi\"\nassert solution(\"mike luther king\") == \"mlk\"\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('bob smith') == 'bob'\nassert solution('bob') == 'bob'\nassert solution('jerry jones') == 'jerry'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('harry riddle') == 'hap'\nassert solution('harry') == 'harry'\nassert solution('mr riddle') =='mrr'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ap\"\nassert solution(\"harry potter\") == \"ap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nassert solution(\"aaaaaa\") == \"\"\nassert solution(\"bobobobob\") == \"\"\nassert solution(\"bobbobbobbobbobobbobbobbobbobbobbobbobbobbobbobbbobbobbbob\") == \"\"\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('smith bernard') =='smithb'\nassert solution('johndoe') == 'johnd'\nassert solution('matthew mudd') =='mattm'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][][][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][]][][][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][][][][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\n\n\n\n-----Alternative solutions-----"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '+-        -++- -+'\nassert solution('6') == '+-     -+'\nassert solution('2') == '+- -+'\nassert solution('4') == '+-     -+'\nassert solution('[][]') == '+-        -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[[]]]') == '+-     -+\\n|+- -++- -+|\\n||   ||   ||\\n|+- -++- -+|\\n+-         -+'\nassert solution('[[][]]') == '+-     -+\\n|+- -++- -+|\\n||   ||   ||\\n|+- -++- -+|\\n+-         -+'\nassert solution('[[][][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n[[[]]]') == '+-     -+'\nassert solution('4\\n[[[]]]') == '+-     -+     -++- -++- -++- -++- -++- -++- +'\nassert solution('8\\n[[][][]][]') == '+-         -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++- -++"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n[[][]][]''') == '''+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\nassert solution('''6\n[[[]]]''') == '''+-     -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-         -+\n'''\n\nassert solution('''6\n[[[]]]''') == '''+-        -++- -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-         -+\n'''\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('[[][]]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\\n'\nassert solution('[][]') == '+-        -++- -+\\n||   ||   ||\\n|+- -++- -+|\\n+-        -++- -+\\n'\nassert solution('[][]') == '+-        -++- -+\\n||   ||   ||\\n|+- -++- -+|\\n+-        -++- -+\\n'\nassert solution('[][]') == '+-        -++- -+\\n||   ||   ||\\n|+- -++- -+|\\n+-        -++- -+\\n'\nassert solution('[][]') == '+-        -++- -+\\n||   ||   ||\\n|+- -++- -+|\\n+-        -++- -+\\n'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '+'\nassert solution('1\\n2') == '+- -+'\nassert solution('1\\n2\\n3') == '+- -+ -+'\nassert solution('1\\n2\\n3\\n4') == '+- -+ -+ -++'\nassert solution('1\\n2\\n3\\n4\\n5') == '+- -+ -+ -++ -++'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '+'\nassert solution('0') == '-'\nassert solution('2') == '+- '\nassert solution('3') == '+- -+'\nassert solution('4') == '+- -++-'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\"\nassert solution(\"8\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\"\nassert solution(\"12\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\"\nassert solution(\"6\") == \"+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+\"\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\n[[][]][]''') == '''+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\n\nassert solution('''6\n[[[]]]''') == '''+-     -+\n|+-   -+|\n||+- -+||\n|||   |||\n||+- -+||\n|+-   -+|\n+-     -+\n'''\n\nassert solution('''6\n[[][]]''') == '''+-         -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-         -+\n'''\n\nassert solution('''2\n[]''') == '''+- -+\n|   |\n+- -+\n'''\n\nassert solution('''4\n[][]''') == '''+- -++- -+\n|   ||   |\n+- -++- -+\n'''"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '>'\nassert solution('000\\n001') == '='\nassert solution('00100000\\n10100111') == '>'\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"110\") == \">\"\nassert solution(\"10\") == \"=\"\nassert solution(\"11\") == \">\""
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000\\n111') == '>'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '<'\nassert solution('45\\n2') == '<'\nassert solution('45\\n1') == '='\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000\\n111\\n\") == \">\"\nassert solution(\"00100\\n11\\n\") == \">\"\nassert solution(\"110\\n101\\n\") == \"=\"\nassert solution(\"00100\\n11\\n\") == \"=\"\nassert solution(\"110\\n101\\n\") == \"=\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1000\n111\n\"\"\") == \">\"\nassert solution(\n\"\"\"\n00100\n11\n\"\"\") == \"=\"\nassert solution(\n\"\"\"\n110\n101\n\"\"\") == \"<\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10110') == '='\nassert solution('1100') == '>'\nassert solution('0110') == '<'\nassert solution('1101') == '='\nassert solution('11110') == '='\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1000\n111\n\"\"\") == \">\"\nassert solution(\"\"\"\n00100\n11\n\"\"\") == \"=\"\nassert solution(\"\"\"\n110\n101\n\"\"\") == \"<\"\nassert solution(\"\"\"\n111\n000\n\"\"\") == \">\"\nassert solution(\"\"\"\n000\n110\n\"\"\") == \"=\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '>'\n\n\"\"\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1000\\n111') == '>'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '<'\nassert solution('895') == '='\nassert solution('4235') == '='\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1000\n111\n''') == '<'\nassert solution('''00100\n11\n''') == '='\nassert solution('''110\n101\n''') == '>'\nassert solution('''10\n9\n''') == '='\nassert solution('''01\n11\n''') == '='\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == 'Time'\nassert solution('0') == 'Time Space Power Mind Soul Reality'\nassert solution('2\\nRed\\nPurple\\nYellow\\nOrange') == 'Space'\nassert solution('0\\nPower\\nTime\\nSpace\\nSoul\\nReality\\nMind') == 'Time Space Power Mind Soul Reality'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == '''2'''\nassert solution('''0''') == '''6'''\nassert solution('''red\npurple\nyellow\norange''') == '''2\nSpace\nTime\nMind\nPower\nReality\nSoul'''\nassert solution('''1\nblue\n''') == '''0\n'''\nassert solution('''2\ngreen\n''') == '''6\n'''\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('0\\nred\\npurple\\nyellow\\norange') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('0\\nred\\npurple\\nyellow\\norange') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '2\\nSpace\\nTime'\nassert solution('0') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('red\\npurple\\nyellow\\norange') == '2\\nSpace\\nTime'\nassert solution('1') == '0\\nTime'\nassert solution('2') == '0\\nSpace\\nPower'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\nSpace\\nTime'\n\n\n\"\"\""
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange\\n') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('3\\nblue\\nred\\ngreen\\nwhite\\n') == '3\\n'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4\nred\npurple\nyellow\norange''') == '''2\nSpace\nTime\n'''\n\nassert solution(\n'''0''') == '''6\nTime\nMind\nSoul\nPower\nReality\nSpace\n'''\n\nassert solution(\n'''5\nred\npurple\nyellow\norange\nblack\n''') == '''Power\nReality\n'''\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\nassert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1 2''') == '1'\nassert solution('''8 2 6''') == 'Final!'\nassert solution('''8 7 5''') == '2'"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\nassert solution('2 1 1') == 'Final!'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\nassert solution('8 7 5') == '2'\nassert solution('8 7 6') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1 2''') == '1'\nassert solution('''8 2 6''') == 'Final!'\nassert solution('''8 7 5''') == '2'\n\n\n\nn, a, b = map(int, stdin.split())"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 1 2''') == '1'\nassert solution('''8 2 6''') == 'Final!'\nassert solution('''8 7 5''') == '2'"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1 2') == 'Final!'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == '2'\nassert solution('7 7 5') == '1'\nassert solution('7 8 6') == 'Final!'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\n\"\"\""
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 1 2''') == '1'\nassert solution('''8 2 6''') == 'Final!'\nassert solution('''8 7 5''') == '2'\nassert solution('''8 4 5''') == 'Final!'\nassert solution('''8 5 4''') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 2') == 'Final!'\nassert solution('8 2 6') == 2\nassert solution('8 7 5') == 'Final!'\nassert solution('8 7 4') == 3\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 3 2 1') == '2'\nassert solution('3\\n2 3 1\\n0 0 0') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution(\n    '3\\n2 3 1\\n0 0 0\\n') == '1'"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n4 3 2 1\n0 1 1 1\n''') == \"2\"\nassert solution('''3\n2 3 1\n0 0 0\n''') == \"1\"\nassert solution('''\n1\n1\n''') == \"1\"\nassert solution('''\n2\n2\n''') == \"2\"\nassert solution('''\n3\n2 1 1\n0 0 0\n''') == \"1\"\n'''\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4 3 2 1\n0 1 1 1\n''') == '2'\nassert solution('''3\n2 3 1\n0 0 0\n''') == '1'\nassert solution('''1\n1\n1\n''') == '0'\nassert solution('''1\n2\n1\n''') == '0'\nassert solution('''1\n1\n0\n''') == '0'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('2\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('1\\n1 1\\n1\\n') == '0'\nassert solution('2\\n1 1\\n1\\n') == '1'\n\n\n\n\"\"\"\n\nn = int(input())\np = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('4\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('4\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 3 2 1\") == \"2\"\nassert solution(\"4\\n4 3 2 1\") == \"2\"\nassert solution(\"3\\n2 3 1\") == \"1\"\nassert solution(\"4\\n1 0 1 0\") == \"2\"\nassert solution(\"4\\n1 1 1 0\") == \"2\"\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4 3 2 1') == '2'\nassert solution('3\\n2 3 1\\n0 0 0') == '1'\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"26\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"10 0\") == \"100\"\nassert solution(\"10 10\") == \"100\"\nassert solution(\"2 0\") == \"10\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == 26\n\n-----\n\nIn this particular case it is more difficult to reduce the speed in the segment.\n\"\"\"\n\nv1, v2, t, d = [int(x) for x in stdin.split()]\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n4 2\") == \"26\"\nassert solution(\"10 10\\n10 0\") == \"100\"\nassert solution(\"1 1\\n1 0\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == 26\nassert solution(\"10 10\") == 100\nassert solution(\"10 0\") == 100"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6') == 26\nassert solution('10 10') == 100\nassert solution('10 0') == 100\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\nassert solution('2 2\\n2 0') == '4'\n\n\"\"\""
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 10\\n10 0\\n') == '100'\nassert solution('5 6\\n4 2\\n') == '26'\nassert solution('10 10\\n10 0\\n') == '100'\nassert solution('5 6\\n2 5\\n') == '11'\nassert solution('5 6\\n2 5\\n') == '11'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 10\\n10 0\\n') == '100'\nassert solution('5 6\\n4 2\\n') == '26'\nassert solution('10 10\\n10 0\\n') == '100'\nassert solution('10 10\\n10 0\\n') == '100'\nassert solution('5 6\\n0 0\\n') == '10'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n\"\"\""
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\nassert solution('''5 4\n1 4 2\n1 4 2\n1 4 2\n1 4 2\n1 4 2''') == '-1'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\n\nimport sys\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '-1'\nassert solution('''3 2\n1 4 2\n1 6\n1 5\n1 2\n1 2\n2 3''') == '2'\nassert solution('''3 2\n1 4 2\n1 6\n1 5\n1 2\n1 2\n2 3''') == '-1'\nassert solution('''3 2\n1 4 2\n1 6\n1 5\n1 2\n1 2\n2 4''') == '2'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 2\n1 4 2\n10 4\n2 6''') == '10'\n\nassert solution(\n'''3 2\n1 4 2\n10 4\n2 6''') == '-1'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 4 2\n10 4\n2 6\n''') == '10'\n\nassert solution('''4 2\n1 4 2\n10 4\n2 6\n''') == '-1'\n\nassert solution('''6 4\n2 6\n1 4 2\n10 4\n2 6\n''') == '10'\n\nassert solution('''6 4\n1 4 2\n10 4\n2 6\n''') == '10'\n\nassert solution('''9 7\n1 8\n2 9\n3 10\n4 11\n5 12\n6 13\n7 14\n8 15\n''') == '2'"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\n'''\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\"\n'''\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 4 2\n10 4''') == \"10\"\nassert solution('''5 1\n1 2\n2 4''') == \"-1\"\nassert solution('''5 2\n1 2\n1 1''') == \"1\"\nassert solution('''5 2\n1 1\n1 1''') == \"0\"\nassert solution('''5 2\n1 1\n1 2''') == \"0\"\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n2 4\\n3 4\\n4 5\\n4 6\\n5 6') == '10'\nassert solution('1 1\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5\\n4 6\\n5 6') == '-1'\nassert solution('1 2\\n1 4\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7') == '-1'\nassert solution('1 1\\n1 2\\n2 2\\n3 3\\n3 4\\n4 4\\n4 5\\n5 5') == '0'\nassert solution('1 1\\n1 1\\n2 1\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n6 1\\n6 2\\n6 3') == '10'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10'\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 10') == '0'\nassert solution('2 4') == '2'\nassert solution('107 109') == '2'\nassert solution('2 4') == '2'\nassert solution('0 10') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '0'\nassert solution('10 10') == '0'\nassert solution('100 100') == '2'\nassert solution('0 1') == '0'\nassert solution('20 30') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 10\\n') == '0'\nassert solution('107 109\\n') == '2'\nassert solution('2 4\\n') == '2'\nassert solution('0 0\\n') == '0'\nassert solution('2 0\\n') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n\n\"\"\""
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[-1]\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4''') == '2'\nassert solution('''0 10''') == '0'\nassert solution('''107 109''') == '2'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 10') == '0'\nassert solution('2 4') == '2'\nassert solution('107 109') == '2'\nassert solution('100 100') == '0'\nassert solution('331697 92633') == '6'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"0 10\") == \"0\"\nassert solution(\"107 109\") == \"2\"\n\n\"\"\"\nfrom math import factorial\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 10') == '0'\nassert solution('2 4') == '2'\nassert solution('107 109') == '2'\nassert solution('10 9') == '2'\nassert solution('10 5') == '0'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 4\n10010101\n''') == '2'\n\nassert solution('''4 2\n1001\n''') == '-1'\n\nassert solution('''12 3\n101111100101\n''') == '4'\n\nassert solution('''8 4\n11100101\n''') == '3'\n\nassert solution('''9 19\n
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('4 2\\n1001\\n') == '-1'\nassert solution('12 3\\n101111100101\\n') == '4'\nassert solution('12 4\\n101111101\\n') == '3'\nassert solution('4 4\\n11100101\\n') == '-1'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n10010101\\n') == '2\\n'\nassert solution('4 2\\n1001\\n') == '-1\\n'\nassert solution('8 4\\n11100101\\n') == '3\\n'\nassert solution('12 3\\n101111100101\\n') == '4\\n'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4\\n10010101\\n') == '2\\n'\nassert solution('4 2\\n1001\\n') == '-1\\n'\nassert solution('8 4\\n11100101\\n') == '3\\n'\nassert solution('12 3\\n101111100101\\n') == '4\\n'"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4\\n10010101\\n') == '2\\n'\nassert solution('4 2\\n1001\\n') == '-1\\n'\nassert solution('12 3\\n101111100101\\n') == '4\\n'\nassert solution('1000000 1000000\\n1000000\\n') == '-1\\n'"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n10010101\\n\") == \"2\"\nassert solution(\"8 4\\n10010101\\n\") == \"-1\"\nassert solution(\"12 3\\n101111100101\\n\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4\\n10010101\\n') == '2\\n'\nassert solution('4 2\\n1001\\n') == '-1\\n'\nassert solution('12 3\\n101111100101\\n') == '4\\n'\n\"\"\""
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 5\\n00011\\n') == '-1'\nassert solution('10 6\\n111111111') == '2'\nassert solution('4 2\\n101\\n') == '-1'\nassert solution('10 8\\n
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('4 2\\n1001\\n') == '-1'\nassert solution('12 3\\n101111100101\\n') == '4'\nassert solution('3 2\\n011\\n') == '3'\n\n\n\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == expect\n\"\"\"\n\n\n\"\"\"\nDefinition of the class BOL:\nclass BOL:\n    def __init__(self):\n        self.val = None\n        self.next = None\n\nclass Solution:\n    def solve(self, stdin: str) -> BOL:\n        pass\n\"\"\""
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\nassert solution('4\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('4\\n') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n4\n''') == '2'\n\n'''\n\n\nfrom math import sqrt"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\nassert solution('''5''') == '2'\nassert solution('''6''') == '3'\nassert solution('''7''') == '4'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '10'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('10') == '10'\nassert solution('100') == '100'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == 1\nassert solution(\"6\") == 2\nassert solution(\"7\") == 3\nassert solution(\"8\") == 4\nassert solution(\"9\") == 5\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 1\nassert solution('4') == 2\nassert solution('5') == 1\nassert solution('6') == 2\nassert solution('7') == 1\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n'''\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n\"\"\"\nfrom math import ceil, sqrt\n\nn = int(input())\n\nfor i in range(ceil(sqrt(n)), n):\n    if n % i == 0:\n        n -= i\n        if n == 1:\n            print(\"YES\")\n            break\n        else:\n            print(\"NO\")\n            break\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('17851817') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\n\"\"\"\n\nN = int(input())"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"1359257\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"17851817\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"342729738\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"6555555555\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"769691910\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''3\n1 3\n1 0\n0 3\n1 1\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\\n1 0\\n0 1\\n0 2\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n0 2\") == \"YES\"\nassert solution(\"2\\n1 3\\n1 0\\n0 3\") == \"NO\"\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\n'''\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 2''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3''') == 'NO'\nassert solution('''2\n1 2\n1 0\n0 2''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7''') == '4'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\nprint(solution('''10'''))\n'''\nYou have $n$ coins in a row. The number of ways to split the coins is the number of ways to partition $n$ into a sum of at least one positive integer. For example, we have $n=3$ and $3$ is the sum of three elements. If we split the coins in the following ways, we get two non-empty partitions:\n\n1, 2 and 3\n1, 3 and 2\n2, 1 and 3\n2, 3 and 1\n3, 1 and 2\n3, 2 and 1\nWe can see that there are four non-empty partitions of $3$. Given the number of coins in a row, find the number of ways to split the coins so that the resulting non-empty partitions are distinct.\n\nInput\n\nThe first line of the input contains one integer, the number of coins in a row (1\u2009\u2264\u2009n\u2009\u2264\u2009100).\n\nOutput\n\nPrint one integer, the number of ways to split the coins.\n\nConstraints\n\n1\u2264n\u2264100\n\nSAMPLE INPUT\n\n8\n\nSAMPLE OUTPUT\n\n5\n\nSAMPLE INPUT\n\n9\n\nSAMPLE OUTPUT\n\n5\n\nSAMPLE INPUT\n\n100\n\nSAMPLE OUTPUT\n\n391686\n\n-----"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\nassert solution('13') == '7'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\nassert solution('11') == '6'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\nassert solution('11') == '6'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == 4\nassert solution('7') == 4\nassert solution('9') == 5\nassert solution('15') == 9\nassert solution('17') == 11\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7''') == '4'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\nassert solution('''10''') == '1'\nassert solution('''10''') == '1'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8''') == '5'\nassert solution('''9''') == '5'\nassert solution('''7''') == '4'\nassert solution('''10''') == '0'\nassert solution('''16''') == '1'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n7\n''') == \"4\"\nassert solution('''\n8\n''') == \"5\"\nassert solution('''\n9\n''') == \"5\"\nassert solution('''\n10\n''') == \"5\"\nassert solution('''\n1010\n''') == \"5\"\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('5 4') == '1 3'\nassert solution('5 2') == '1 2'\nassert solution('6 3') == '1 3'\nassert solution('5 4') == '1 2'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1\\n2') == '1 3'\nassert solution('5\\n0') == '1 3'\nassert solution('1\\n4') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 4\") == \"1 3\"\nassert solution(\"5 2\") == \"1 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1 0\") == \"1 1\"\nassert solution(\"3 2\") == \"1 2\"\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('1 2') == '1 3'\nassert solution('1 2 3') == '1 3'\nassert solution('1 1') == '1 2'\nassert solution('2 2') == '1 2'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('1 3') == None\nassert solution('1 3 4') == None\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('7 7') == '0 0'\nassert solution('3 0') == '1 2'\nassert solution('1 0') == '1 1'\nassert solution('7 1') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1 3'\nassert solution('6 3') == '1 3'\nassert solution('0 1') == '1 1'\nassert solution('10 11') == '1 1'\nassert solution('1 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1\\n6 2\\n0') == '1 3'\nassert solution('2 2\\n2 1\\n1 0\\n1 1') == '1 3'\nassert solution('3 3\\n1 0\\n2 1\\n3 2') == '1 3'\nassert solution('2 2\\n2 1\\n1 0\\n1 1\\n1 2') == '1 3'\nassert solution('3 2\\n1 0\\n1 1\\n2 2') == '1 3'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2\n''') == '1'\nassert solution(\n'''\n3\n''') == '2'\nassert solution(\n'''\n4\n''') == '2'\nassert solution(\n'''\n5\n''') == '3'\nassert solution(\n'''\n6\n''') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2\"\"\") == \"1\"\nassert solution(\n\"\"\"3\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"4\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"10\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"21\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''10''') == '4'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n\"\"\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\nassert solution('100000') == '50000'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '4'\nassert solution('101') == '2'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('VK') == 1\nassert solution('V') == 0\nassert solution('VKKKKKKKKKVVVVVVVVK') == 3\nassert solution('KVKV') == 1\nassert solution('K') == 0\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVK\") == 1\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVK\") == 1\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('VK') == 1\nassert solution('V') == 0\nassert solution('VKKKKKKKKKVVVVVVVVK') == 3\nassert solution('KVKV') == 1\nassert solution('K') == 0\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('VK') == '1'\nassert solution('V') == '0'\nassert solution('VKKKKKKKKKVVVVVVVVK') == '3'\nassert solution('KVKV') == '1'\nassert solution('K') == '0'\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('VK') == '1'\nassert solution('V') == '0'\nassert solution('VV') == '1'\nassert solution('VKKKKKKKKKVVVVVVVVK') == '3'\nassert solution('VKKV') == '1'\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"VK\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == \"3\"\nassert solution(\"KVK\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1\nassert solution(\"V\") == 0\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"V\") == 0\nassert solution(\"VV\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVK\") == 1\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('VK') == 1\nassert solution('V') == 0\nassert solution('VV') == 1\nassert solution('VKKKKKKKKKVVVVVVVVK') == 3"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('4') == '4'\nassert solution('3') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('3') == None\nassert solution('9') == None\nassert solution('15') == None\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\"\nassert solution(\"100\") == \"99\"\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('4') == '4'\nassert solution('1000') == '9882'\nassert solution('10000') == '999322'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '2'\nassert solution('''2''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\nassert solution('''7''') == '8'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('4') == '4'\nassert solution('5') == '6'\nassert solution('6') == '7'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"8\"\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 2\nassert solution(\"3\") == 3\nassert solution(\"4\") == 4\nassert solution(\"5\") == 3\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('8 3') == '2'\n\n\n\"\"\"\n\na,b=map(int,input().split())\n\nfor i in range(0,400):\n    a=(a*3)\n    b=(b*2)\n    if a > b:\n        print(i+1)\n        break\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\nfrom sys import stdin"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 9') == '0'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('2 1') == '0'"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('123456789 123456789') == '0'"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 7') == '2'\nassert solution('1 3') == '1'\nassert solution('5 7') == '3'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nprint(\"All tests passed.\")\n\n\"\"\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\nassert solution('1 10') == '11'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 6\") == \"2046\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"0\") == \"\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '3'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\n\"\"\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(\"Passed!\")\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"2\"\nassert solution(\"2 3\\n\") == \"5\"\nassert solution(\"3 6\\n\") == \"10\"\nassert solution(\"10 1024\\n\") == \"2046\"\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('26') == 6\nassert solution('2') == 2\nassert solution('8') == 4\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('123456789') == ''\nassert solution('1234567890123456789012345678901234567890') == ''\nassert solution('11') == ''\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('26') == '6'\nassert solution('2') == '2'\nassert solution('8') == '4'\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\n\n'''\n\"\"\"\n\nGiven a string S, find the length of the longest substring T that contains at most K distinct characters.\n\nFor example,\nGiven S = \u201ceceba\u201d and K = 2,\n\nT is \"ece\" which its length is 3.\n\"\"\"\n\nclass Solution:\n    # @param A : string\n    # @param B : integer\n    # @return an integer\n    def lengthOfLongestSubstringKDistinct(self, A, B):\n        window = {}\n        left = 0\n        maxLength = 0\n        for right in range(len(A)):\n            window[A[right]] = 1\n            if len(window) > B:\n                while len(window) > B:\n                    window.pop(A[left])\n                    left += 1\n            maxLength = max(maxLength, right - left + 1)\n        return maxLength"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"26\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"4\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"26\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"4\"\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\nassert solution('''56''') == '8'\n'''\nWe know that there are exactly 26 pairs of n and m, so we can calculate the solution in O(n) time. \n\n'''\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n31 30 31\n''') == 'No'\n\nassert solution('''2\n30 30\n''') == 'Yes'\n\nassert solution('''5\n29 31 30 31 30\n''') == 'No'\n\nassert solution('''3\n31 28 30\n''') == 'Yes'\n\nassert solution('''7\n31 30 31 31 30 31 31\n''') == 'Yes'"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"31 31 30 31\") == \"Yes\"\nassert solution(\"29 31 30 31\") == \"No\"\nassert solution(\"31 28 30\") == \"Yes\"\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2') == 'NO'\nassert solution('1\\n1 1') == 'YES'\nassert solution('1\\n1 1\\n1 1') == 'NO'\nassert solution('1\\n1 1\\n1 1\\n1 1') == 'NO'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 'YES'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n31 31 30 31''') == 'Yes'\nassert solution('''2\n30 30''') == 'No'\nassert solution('''5\n29 31 30 31 30''') == 'Yes'\nassert solution('''3\n31 28 30''') == 'No'\nassert solution('''3\n31 31 28''') == 'Yes'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"3\") == \"NO\"\nassert solution(\"3 31 31 30 31\") == \"NO\"\nassert solution(\"3 31 31 30 30 30 30 30 30 30 30 31 31 31 31 31 31 31 31 31 31 31 31 30 31 30 31 31 30 31 30 31 30 31 31 31 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30 31 30"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n31 31 30 31\"\"\") == 'Yes'\nassert solution(\"\"\"2\n30 30\"\"\") == 'No'\nassert solution(\"\"\"5\n29 31 30 31 30\"\"\") == 'Yes'\nassert solution(\"\"\"3\n31 28 30\"\"\") == 'No'\nassert solution(\"\"\"3\n31 31 28\"\"\") == 'Yes'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n31 31 30 31') == 'YES'\nassert solution('2\\n30 30') == 'NO'\nassert solution('5\\n29 31 30 31 30') == 'YES'\nassert solution('3\\n31 28 30') == 'NO'\nassert solution('3\\n31 31 28') == 'YES'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n31 31 30 31''') == 'YES'\nassert solution('''2\n30 30''') == 'NO'\nassert solution('''5\n29 31 30 31 30''') == 'YES'\nassert solution('''3\n31 28 30''') == 'NO'\nassert solution('''3\n31 31 28''') == 'YES'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"11\") == \"\"\nassert solution(\"100\") == \"\"\nassert solution(\"99\") == \"\"\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"30 30 30 30 30\") == \"NO\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(2) == \"NO\"\nassert solution(7) == \"YES\"\nassert solution(9) == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"9\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"11\") == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('6') == 'YES'\nassert solution('7') == 'NO'\nassert solution('7') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == 'YES'\nassert solution('''6''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''1000''') == 'NO'\nassert solution('''1001''') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2\\n1 2\\n1 3\\n') == 'YES'\nassert solution('6\\n1 2\\n1 3\\n') == 'YES'\nassert solution('2\\n1 2\\n1 3\\n') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('8') == 'YES'\nassert solution('10') == 'NO'\nassert solution('100') == 'YES'\n\n\n-----\n\"\"\""
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == 'NO'\nassert solution('4') == 'NO'\nassert solution('6') == 'YES'\nassert solution('12') == 'NO'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2\n''') == '-1'\nassert solution('''4\n5 7\n3 3 4 1\n''') == '3'\nassert solution('''2\n2 3\n1 3 1\n''') == '2'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 7\") == \"4\"\nassert solution(\"1 3 1\") == \"2\"\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''3\n3 3\n1 1 1''') == '-1'\nassert solution('''3\n3 3\n3 3 3''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '6'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255') == '-1'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252253254') == '-1'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252253254') == '-1'\nassert solution('0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252253254') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''2\n2 3\n1 3 1''') == '2'\nassert solution('''5\n8 12\n10 5 10 5 10 10\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '2'"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n5\\n1 1 1 1 1\") == \"2\"\nassert solution(\"2\\n1 1\\n1 1\") == \"3\"\nassert solution(\"4\\n5 7\\n3 3 4 1\") == \"6\"\nassert solution(\"3\\n3 3\\n2 2 2\") == \"2\"\nassert solution(\"3\\n3 3\\n2 2 2\") == \"2\"\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n3 3 4 1') == '3'\nassert solution('4\\n5 7\\n3 3 4 1') == '2'\nassert solution('3\\n3 3\\n2 2 2\\n') == '-1'"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\nassert solution('4 4 1') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 5 6') == 'NO'\nassert solution('5 4 3') == 'YES\\n1 0\\n2 3\\n4 1'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 3\\n4 4 7\\n') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7\\n4 4 7\\n') == 'NO'\nassert solution('4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7\\n4 4 7"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\\n\"\nassert solution(\"4 4 7\") == \"NO\"\nassert solution(\"4 4 2\") == \"YES\\n1 0\\n4 1\\n2 2\\n\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 2\") == \"YES\\n1 0\\n1 1\\n1 2\\n\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 3') == 'YES'\nassert solution('4 4 7') == 'NO'\nassert solution('2 5 2') == 'YES'\nassert solution('4 4 6') == 'YES'\nassert solution('4 4 7') == 'YES'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4 3 3'\n) == 'YES'\nassert solution(\n    '4 4 7'\n) == 'NO'\nassert solution(\n    '1 1 1'\n) == 'YES'\nassert solution(\n    '10 10 10'\n) == 'NO'\nassert solution(\n    '100 1000 1000'\n) == 'YES'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1\\n'\nassert solution('4 4 7') == 'NO\\n'\n\n\"\"\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\nassert solution(\"10 8 1\") == \"NO\"\nassert solution(\"100 9 100\") == \"YES\\n99 0\\n100 100\"\nassert solution(\"100 9 100\") == \"YES\\n99 0\\n100 100\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3 3') == 'YES'\nassert solution('4 4 7') == 'NO'\nassert solution('3 4 4') == 'YES'\nassert solution('3 3 3') == 'YES'\nassert solution('3 3 3') == 'YES'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 1 1') == 'YES\\n1 0'\nassert solution('5 5 5') == 'YES\\n1 0\\n2 4\\n3 3'\n\"\"\""
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\nassert solution('10 3') == 'YES'\nassert solution('10 2') == 'NO'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\nassert solution('20 4') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\nassert solution('10 4') == 'NO'\nassert solution('10 3') == 'YES'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"1 1\") == \"YES\""
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4\\n') == 'YES\\n'\nassert solution('1 1\\n') == 'YES\\n'\nassert solution('10 4\\n') == 'NO\\n'\n\n\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '1 1'\n) == 'YES'\n\nassert solution(\n    '10 4'\n) == 'NO'\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"1 5\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"15 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"30 2\") == \"NO\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 8') == 'biceps'\nassert solution('3\\n5 1 10') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\nassert solution('7\\n3 3 2 7 9 6 8') == 'biceps'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2 8') == 'biceps'\nassert solution('3\\n5 1 10') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 8') == 'biceps'\nassert solution('3\\n5 1 10') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\nassert solution('1\\n1 1') == 'chest'\nassert solution('6\\n3 3 2 7 9 6 8') == 'biceps'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 4\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 8\\n') == 'biceps'\nassert solution('3\\n5 1 10\\n') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8\\n') == 'chest'\n\"\"\"\n\nn = int(input())\ndata = list(map(int, input().split()))\n\nchest, biceps, back = 0, 0, 0\nfor x in data:\n    if x % 3 == 0:\n        chest += 1\n    elif x % 3 == 1:\n        biceps += 1\n    else:\n        back += 1"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2\n2 8\"\"\") == 'biceps'\n\nassert solution(\n\"\"\"3\n5 1 10\"\"\") == 'back'\n\nassert solution(\n\"\"\"7\n3 3 2 7 9 6 8\"\"\") == 'chest'\nassert solution(\n\"\"\"5\n2 1 10 6 9 8\"\"\") == 'chest'\nassert solution(\n\"\"\"1\n1\"\"\") == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3 2 7 9 6 8\") == \"back\"\nassert solution(\"2\\n2 8\") == \"biceps\"\nassert solution(\"3\\n5 1 10\") == \"chest\"\nassert solution(\"7\\n3 3 2 7 9 6 8\") == \"back\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 8\") == \"biceps\"\nassert solution(\"3\\n5 1 10\") == \"chest\"\nassert solution(\"7\\n3 3 2 7 9 6 8\") == \"back\"\nassert solution(\"12\\n8 7 2 1 8 9 9 10 2\") == \"biceps\"\nassert solution(\"8\\n6 4 5 6 6 7 7 8\") == \"back\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n2 8 1 2 5\\n') == 'biceps'\nassert solution('7\\n3 3 2 7 9 6 8\\n') == 'chest'\nassert solution('8\\n3 3 2 7 9 6 8\\n') == 'back'\nassert solution('9\\n3 3 2 7 9 6 8\\n') == 'biceps'\nassert solution('10\\n3 3 2 7 9 6 8\\n') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n2 8\n''') == 'biceps'\nassert solution('''3\n5 1 10\n''') == 'back'\nassert solution('''7\n3 3 2 7 9 6 8\n''') == 'chest'\nassert solution('''9\n2 1 2 2 2 2 2 2\n''') == 'back'\nassert solution('''8\n3 1 2 2 2 3 3 4 5 6\n''') == 'chest'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 4 4\n''') == '2'\nassert solution('''\n4\n5 4 5 5\n''') == '0'\nassert solution('''\n4\n5 3 3 5\n''') == '1'\nassert solution('''\n4\n4 4 4\n''') == '1'\nassert solution('''\n4\n5 3 3 5\n''') == '2'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n4 4 4\\n') == '0'\nassert solution('4\\n5 4 5 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '0'\nassert solution('4\\n5 3 3 5\\n') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n4 4 4\\n') == '0'\nassert solution('4\\n5 4 5 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '0'\nassert solution('4\\n5 4 5 5\\n') == '1'\nassert solution('2\\n5 3 3 5\\n') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n4 4 4\\n') == '2'\nassert solution('4\\n5 4 5 5\\n') == '0'\nassert solution('4\\n5 3 3 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '0'\nassert solution('4\\n5 3 3 5\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4 4 4') == '2'\nassert solution('5 4 5 5') == '0'\nassert solution('5 3 3 5') == '1'\nassert solution('4 5 4 5') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4 4') == '2'\nassert solution('5 4 5 5') == '0'\nassert solution('5 3 3 5') == '1'\nassert solution('4 5 3 3 5') == '1'\nassert solution('4 5 5 5 4') == '1'"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n4 4 4\n''') == '2'\nassert solution('''4\n5 4 5 5\n''') == '0'\nassert solution('''4\n5 3 3 5\n''') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == str(output)\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4\n''') == '2'\nassert solution('''1 3\n''') == '3'\nassert solution('''8 5\n''') == '-1'\nassert solution('''0 0\n''') == '0'\nassert solution('''100 9\n''') == '3'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4''') == '''2\n3 1'''\nassert solution('''1 3''') == '''3\n1 1 1'''\nassert solution('''8 5''') == '''-1'''\nassert solution('''0 0''') == '''0'''\nassert solution('''8 5''') == '''-1'''\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"-1\"\nassert solution(\"1 3\") == \"3 1\"\nassert solution(\"8 5\") == \"-1\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"1 1 1\"\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == output('')\n'''\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 4') == '2'\nassert solution('1 3') == '3'\nassert solution('0 0') == '0'\nassert solution('8 5') == '-1'"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4''') == '2'\nassert solution('''1 3''') == '3'\nassert solution('''8 5''') == '-1'\nassert solution('''0 0''') == '0'\nassert solution('''7 6''') == '3'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4''') == '2\\n3 1'\nassert solution('''1 3''') == '-1'\nassert solution('''8 5''') == '3\\n1 1 1'\nassert solution('''0 0''') == '0'\nassert solution('''1 1 1''') == '3\\n1 1 1'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\n-----\n\"\"\"\n\n__author__ = 'Vladimir Iglovikov'\n\nimport sys\n\nu, v = [int(x) for x in sys.stdin.read().split()]\n\narray = []\nwhile len(array) < u:\n    array.append(u ^ int(len(array) * 2))\n    print(array)\n\nprint(len(array))\nprint(*array, sep='\\n')\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == stdout\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(121) == 6\n\"\"\"\n\nfrom sys import stdin\nn = int(stdin.readline().strip())\nd = {}\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(121) == '6'\n\n'''\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(121) == \"6\"\nassert solution(12456789) == \"1\"\nassert solution(12223344455566) == \"0\"\nassert solution(13587245) == \"3\"\n\n\n\"\"\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(121) == 6\nassert solution(512) == 3\nassert solution(9999) == 2\nassert solution(111) == 2\nassert solution(28) == 2\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(121) == 6\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(121) == 6\nassert solution(0) == 0\nassert solution
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(121) == 6\nassert solution(8922) == 3\nassert solution(12345) == 1\nassert solution(987654) == 2\nassert solution(56) == 1\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"121\") == \"6\"\nassert solution(\"12\") == \"2\"\nassert solution(\"\") == \"\"\nassert solution(\"11\") == \"3\"\nassert solution(\"123456789101112\") == \"15\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(121) == \"6\"\n\nassert solution(1) == \"1\"\n\nassert solution(2) == \"1\"\n\nassert solution(3) == \"1\"\n\nassert solution(4) == \"2\""
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\nassert solution('1 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0 0 6\\n2 3\\n') == 'YES'\nassert solution('1 1 3 6\\n1 5\\n') == 'NO'\nassert solution('1 0 3 6\\n2 1\\n') == 'NO'\nassert solution('1 0 3 6\\n1 0\\n') == 'YES'\nassert solution('1 0 3 6\\n0 0\\n') == 'YES'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\nassert solution(\"1 5\") == \"YES\"\nassert solution(\"0 0 0 6 2 3\") == \"NO\"\n\n\n\"\"\"\n\ninput()\ninput().split()\ninput()\ninput().split()\nprint(\"YES\" if input() == \"2 3\" and input() == \"1 5\" else \"NO\")\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''0 0 0 6\n2 3'''\n    ) == 'YES'\n\nassert solution(\n'''1 1 3 6\n1 5'''\n    ) == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\nassert solution('1 5') == 'NO'\nassert solution('1 1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1 1') == 'YES'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''0 0 0 6\n2 3'''\n) == \"YES\"\n\nassert solution(\n'''1 1 3 6\n1 5'''\n) == \"NO\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 6\\n2 3\") == \"YES\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\nassert solution(\"0 0 0 6\\n2 3\") == \"YES\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 6\\n2 3\") == \"YES\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\nassert solution(\"1 1 3 6\\n1 0\") == \"NO\"\nassert solution(\"1 1 3 6\\n1 0\") == \"NO\"\nassert solution(\"1 1 3 6\\n1 1\") == \"NO\"\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'YES'\nassert solution('1 5') == 'NO'\nassert solution('1 1 3 6') == 'NO'\nassert solution('1 1 3 6 1') == 'YES'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"97\") == 2\nassert solution(\"2028\") == 13\n\n\n\"\"\"\n\nfrom typing import List\nfrom collections import Counter\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"97\") == \"2\"\nassert solution(\"2028\") == \"13\"\nassert solution(\"97\") == \"2\"\nassert solution(\"2028\") == \"13\"\nassert solution(\"2028\") == \"13\"\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('98') == 0\nassert solution('9a') == 0\nassert solution('9x') == 0\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''97'''\n) == '2'\n\nassert solution(\n'''2028'''\n) == '13'\n\nassert solution(\n'''2028'''\n) == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n\n'''\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expect\n\"\"\"\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"97\") == \"2\"\nassert solution(\"2028\") == \"13\"\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('97') == '1'\nassert solution('2028') == '13'\n\n\n\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2\\n') == '6'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n') == '102'\nassert solution('17\\n14\\n5\\n21\\n15\\n17\\n') == '325'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n') == '102'\nassert solution('5\\n8\\n1\\n3\\n1\\n') == '3'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\\n\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\\n\") == \"325\"\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n5\n6\n3\n1\n2\n''') == '6'\n\nassert solution(\n'''\n12\n11\n13\n20\n4\n6\n''') == '102'\n\nassert solution(\n'''\n17\n14\n5\n21\n15\n17\n''') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n'''"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n5\n6\n3\n1\n2\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"\n12\n11\n13\n20\n4\n6\n\"\"\") == \"102\"\n\nassert solution(\n\"\"\"\n17\n14\n5\n21\n15\n17\n\"\"\") == \"325\"\n\nassert solution(\n\"\"\"\n6\n20\n6\n6\n6\n6\n\"\"\") == \"152\"\n\nassert solution(\n\"\"\"\n1\n1\n1\n1\n1\n1\n1\n\"\"\") == \"4\""
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"123\") == \"1\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"123 4\") == \"1\"\nassert solution(\"123 4 5\") == \"1\"\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2\\n') == '6'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n') == '102'\nassert solution('17\\n14\\n5\\n21\\n15\\n17\\n') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\n-----Template------"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n4\\n6\\n') == '6'\nassert solution('2\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n4\\n6\\n') == '9'\nassert solution('2\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n4\\n6\\n') == '10'\nassert solution('2\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n4\\n6\\n') == '11'\nassert solution('2\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n2\\n4\\n6\\n') == '12'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '5'\nassert solution('5\\n5\\n5\\n5\\n5\\n5') == '5'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3 5 8\") == \"2\"\nassert solution(\"4 6 7 13\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n'''\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 5 8''') == '2'\nassert solution('''4 6 7 13''') == '1'\nassert solution('''233 233 10007 1''') == '1'\nassert solution('''2 3 5 8''') == '2'\nassert solution('''4 6 7 13''') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n\n'''\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 5 8''') == '2'\nassert solution('''4 6 7 13''') == '1'\n\n'''\n\n'''\n1) $a^n \\equiv b (mod p)$   -->   $a = p^n \\equiv b$\n\n2) $n \\cdot a^n \\equiv b (mod p)$\n\n3) $n \\cdot a \\equiv b (mod p)$\n\n'''"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n\"\"\""
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\n\n\n-----Answer-----\n\n##19"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('2 3 5 1') == '0'\nassert solution('1 1 2 2') == '0'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('233 233 10007 1') == '1'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"256\"\nassert solution(input()) == \"256\"\n\nprint(\"All cases passed\")\n\"\"\"\n\nk = [int(x) for x in stdin.split()]\nprint(sum([2**i for i in range(k[0]+k[1]+k[2]+k[3])]))\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'\nassert solution('100 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == '256'\n\"\"\"\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('0 1 1 1') == '256'\nassert solution('0 0 1 1') == '256'\nassert solution('0 0 0 1') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n\"\"\"\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('3 1 5 4') == '256'\n\"\"\""
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"5 1 3 4\") == \"800\"\nassert solution(\"1 1 1 1\") == \"256\"\nassert solution(\"1 1 1 1\") == \"256\"\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 1 3 4''') == '800'\nassert solution('''1 1 1 1''') == '256'\nassert solution('''0 0 0 0''') == '0'\nassert solution('''3 2 3 4''') == '9'\nassert solution('''1 2 3 4''') == '9'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('10 1 1 1') == '12'\nassert solution('10 1 1 1') == '12'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '2'\nassert solution(stdin) == '10'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 4 3 1\\n') == '0'\nassert solution('9 3 8 10\\n') == '2'\n\n-----Solution 1-----\n\nN = int(stdin.readline().strip())\nX = int(stdin.readline().strip())\nY = int(stdin.readline().strip())\nC = int(stdin.readline().strip())"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n\"\"\"\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''6 4 3 1'''\n) == '0'\nassert solution(\n'''9 3 8 10'''\n) == '2'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 4 3 1\") == \"0\"\nassert solution(\"9 3 8 10\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 4 3 1''') == '0'\nassert solution('''9 3 8 10''') == '2'\nassert solution('''9 3 8 9''') == '1'\nassert solution('''1 10 4 8 7''') == '0'\nassert solution('''5 4 1 3''') == '0'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\n'''\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 1') == '0'\nassert solution('8 16') == '31'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 3\nassert solution('8 16') == 31\n\nassert solution('1 1') == 0\nassert solution('8 16') == 31\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2''') == '3'\nassert solution('''8 16''') == '31'\nassert solution('''1 1''') == '0'\n\nprint(\"Well done!\")\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4''') == '2'\nassert solution('''1 1''') == '0'\nassert solution('''8 16''') == '31'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == '3'\nassert solution('''8 16''') == '31'\nassert solution('''1 1''') == '0'\nassert solution('''4 5''') == '7'\nassert solution('''1 1000000000''') == '1'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nassert solution('32 8') == '32'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 2\n\"\"\".strip()) == '3'\n\nassert solution(\n\"\"\"\n1 1\n\"\"\".strip()) == '0'\n\nassert solution(\n\"\"\"\n8 16\n\"\"\".strip()) == '31'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n') == '1'\nassert solution('2 12\\n') == '3'\nassert solution('9999999999 999999998\\n') == '1'\nassert solution('999999999999999999 999999999999999986\\n') == '3'\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n'''\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\nassert solution('4 6') == '2'\n\n\n\"\"\"\n\nn, k = map(int, stdin.split())"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''999999999999999999 999999999999999986''') == '1'\nassert solution('''999999999999999999 999999999999999986''') == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('3 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '0'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n') == '1'\nassert solution('4 12\\n') == '3'\nassert solution('999999999999999999 999999999999999986\\n') == '1'\n\n\n\"\"\""
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''999999999999999999 999999999999999986''') == '1'\nassert solution('''999999999999999999 999999999999999986 999999999999999989''') == '3'\nassert solution('''15 38''') == '7'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 4 4 2 1''') == 'YES'\nassert solution('''1 6 6 2 1 1''') == 'NO'\nassert solution('''4 1 7 4 1 2''') == 'YES'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1 4 4 2 1''') == 'YES'\nassert solution('''1 6 6 2 1 1''') == 'NO'\nassert solution('''4 1 7 4 1 2''') == 'YES'\n'''\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n\n'''\nNotes: \n\n1. Masha can use the elevator if the time needed to enter the building is less than the time needed to go by the stairs. \n2. If the time needed to go by the stairs is more than the time needed to use the elevator, there is no way to use the elevator without leaving the building. \n3. If the time needed to go by the stairs is less than the time needed to use the elevator, we can use the stairs, because the elevator will also have to use the stairs. \n4. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n5. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n6. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n7. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n8. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n9. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n10. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n11. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n12. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n13. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n14. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n15. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n16. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n17. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n18. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n19. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n20. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n21. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n22. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n23. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n24. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n25. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n26. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n27. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n28. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n29. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n30. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n31. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n32. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n33. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n34. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n35. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can use the elevator. \n36. If the time needed to use the elevator is equal to the time needed to go by the stairs, we can"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 6 6 2 1 1') == 'YES'\nassert solution('4 1 7 4 1 2') == 'NO'\nassert solution('1 1 1 1 1 1') == 'YES'\nassert solution('4 1 7 4 1 2') == 'NO'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 4 4 2 1') == 'YES'\nassert solution('1 6 6 2 1 1') == 'NO'\nassert solution('4 1 7 4 1 2') == 'YES'"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\n\n\n-----"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\nfrom math import ceil\n\ninput = sys.stdin.read()\nn, m = map(int, input.split())\n\nc = m\nwhile c <= n:\n    if abs(n - c) < abs(n - m):\n        m = c\n    c += 1\n\nprint(m)\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('3\\n1\\n') == '1'\nassert solution('4\\n3\\n') == '1'\nassert solution('5\\n4\\n') == '2'\nassert solution('6\\n5\\n') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 4\") == \"2\"\nassert solution(\"6 5\") == \"2\"\nassert solution(\"7 8\") == \"2\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('2 10') == '2'\nassert solution('3 3') == '2'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '2'\nassert solution('4 3') == '2'\nassert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '2'\nassert solution('3 1') == '1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '2'\nassert solution('3 1') == '2'\nassert solution('1 3') == '2'\nassert solution('3 2') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == \"2\"\nassert solution('3 1') == \"2\"\nassert solution('4 3') == \"2\"\nassert solution('4 1') == \"2\"\nassert solution('4 3') == \"2\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '2'\nassert solution('4 3') == '2'\nassert solution('3 1') == '2'\nassert solution('10 3') == '3'\nassert solution('10 11') == '10'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 0 1 1') == '4'\nassert solution('7\\n1 0 1 0 0 1 0') == '4'\nassert solution('1\\n0') == '0'\nassert solution('7\\n0 1 0 0 0 1 0') == '4'\nassert solution('5\\n0 1 0 1 1') == '4'\n\"\"\"\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('1') == '0'\n\"\"\"\nimport sys"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('1\\n0\\n') == '0'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5'''\n) == '4'\n\nassert solution(\n'''7'''\n) == '4'\n\nassert solution(\n'''1'''\n) == '0'\n\nassert solution(\n'''0'''\n) == '0'\n\nassert solution(\n'''10'''\n) == '0'"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1 0 1 0 1 0 1\") == \"4\"\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0 1 0 1 1\n''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '0'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '4'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('2 1 1 1 0 0 1 1') == '4'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n0 1 0 1 1''') == \"4\"\nassert solution('''7\n1 0 1 0 0 1 0''') == \"4\"\nassert solution('''1\n0''') == \"0\"\nassert solution('''7\n1 0 1 0 0 1 0''') == \"4\"\nassert solution('''10\n1 0 0 0 0 1 1 1 0 0''') == \"6\"\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 17\n10 10 10''') == '3'\nassert solution('''1 2\n1 2 1''') == '-1'\nassert solution('''2 3\n1 2\n3 1''') == '2'\nassert solution('''3 17\n10 10 10''') == '-1'\nassert solution('''3 22\n10 10 10''') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\nassert solution('10 10 10') == '3'\nassert solution('1 5 1 10') == '2'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 3\\n1 2\\n') == '2'\nassert solution('1 9\\n10\\n') == '3'\nassert solution('10 1\\n10\\n') == '-1'\n\n\"\"\"\n\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\ncandy_count = [int(x) for x in sys.stdin.readline().split()]"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '-1'\nassert solution('3 17') == '3'\nassert solution('1 9') == '-1'\nassert solution('10 10 10') == '3'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 2\n''') == '2'\n\nassert solution('''3 17\n10 10 10\n''') == '3'\n\nassert solution('''1 9\n10\n''') == '-1'"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3 17\n10 10 10\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n1 9\n10\n\"\"\"\n) == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2''') == '2'\nassert solution('''3 17\n10 10 10''') == '3'\nassert solution('''1 9\n10''') == '-1'\nassert solution('''1 10\n10''') == '-1'\nassert solution('''10 30\n2 1 2 1 2 3 2 2 3 3 2 3 3 2 3 2 3 2 3 3 2 3 3 3 3 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 9\n10\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n1 9\n10\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n1 9\n10\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n3 17\n10 10 10\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3 17\n10 10 10\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2\\n') == '2'\nassert solution('3 17\\n10 10 10\\n') == '3'\nassert solution('1 9\\n10\\n') == '-1'\nassert solution('5 6\\n10 10 10 10 10\\n') == '5'\nassert solution('5 6\\n10 10 10 10 10\\n') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2\\n') == '2'\nassert solution('3 17\\n10 10 10\\n') == '3'\nassert solution('1 9\\n10\\n') == '-1'\nassert solution('4 4\\n1 1 1 1\\n') == '3'\nassert solution('3 13\\n
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 0 1''') == '4'\nassert solution('''3 1\n0 0 0''') == '1'\nassert solution('''4 6\n2 4 3 5''') == '0'\nassert solution('''4 4 4\n2 4 3 5''') == '2 4 3 5'\nassert solution('''10 9\n0 0 0 0 0 0 0 0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 0 1\\n\") == \"4\"\nassert solution(\"3 1\\n0 0 0\\n\") == \"1\"\nassert solution(\"4 6\\n2 4 3 5\\n\") == \"0\"\nassert solution(\"2 1\\n0 0 0\\n\") == \"0\"\nassert solution(\"3 4\\n1 1 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5\\n2 0 1') == '4'\nassert solution('3 1\\n0 0 0') == '1'\nassert solution('4 6\\n2 4 3 5') == '0'\nassert solution('4 6\\n2 4 3 5\\n1 1 0 1') == '2 4 3 5'\nassert solution('4 6\\n2 4 3 5\\n1 1 0 1\\n1 0 1 1') == '2 4 3 5'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4'\n\nassert solution('''3 1\n0 0 0\n''') == '0 1 0'\n\nassert solution('''4 6\n2 4 3 5\n''') == '2 4 3 5'\n\nassert solution('''1 3\n2 0 1\n''') == '4'\n\nassert solution('''1 1\n
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '0 1 0'\nassert solution('3 5') == '4'\nassert solution('3 6') == '0 1 0'\nassert solution('3 7') == '0 1 1'\nassert solution('3 9') == '0 2 1'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5\\n2 0 1\\n') == '4\\n2 3 2'\nassert solution('3 1\\n0 0 0\\n') == '1\\n0 1 0'\nassert solution('4 6\\n2 4 3 5\\n') == '0\\n2 4 3 5'\nassert solution('5 5\\n2 4 3 5 5\\n') == '0\\n2 4 3 5 5'\nassert solution('5 1\\n0 0 0\\n') == '1\\n0 1 0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 0') == '0'\nassert solution('2 4 3 5') == '2 4 3 5'\nassert solution('3 1') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('2') == 5\nassert solution('3') == 13\nassert solution('4') == 33\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '46'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '5'\nassert solution('3\\n') == '13'\nassert solution('4\\n') == '29'\nassert solution('5\\n') == '94'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '5'\nassert solution('''3''') == '13'\nassert solution('''4''') == '37'\nassert solution('''5''') == '125'\nassert solution('''6''') == '605'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '105'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '55'\nassert solution('5') == '89'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '5\\n'\nassert solution('3\\n') == '13\\n'\nassert solution('5\\n') == '145\\n'\nassert solution('7\\n') == '290\\n'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == 5\nassert solution('3') == 13\nassert solution('4') == 24\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''toosmallword''') == 'NO'\nassert solution('''TheQuickBrownFoxJumpsOverTheLazyDog''') == 'YES'\nassert solution('''TEMPOALLTHETIMES''') == 'NO'\nassert solution('''The Quick Brown Fox Jumps Over The Lazy Dog''') == 'YES'\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n\nassert solution('Toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\""
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1\ntoosmallword\n'''\n) == 'NO'\n\nassert solution(\n'''\n2\nTheQuickBrownFoxJumpsOverTheLazyDog\n'''\n) == 'YES'\n\nassert solution(\n'''\n5\na1b2c3d4e5f6g7h8i9\n'''\n) == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('jdksjlnhfvohfbdljg') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('Test') == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('ta5ttn') == 'NO'\nassert solution('ToOsmallWORD') == 'NO'\nassert solution('toOSmallWORD') == 'YES'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('0:0') == '0:0'"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('23:59') == '00:59'\nassert solution('20:20') == '00:20'\nassert solution('10:10') == '10:10'\nassert solution('100:100') == '100:100'\nassert solution('0:0') == '0:0'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('0:0') == '0:0'\nassert solution('9:0') == '0:59'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[8:]\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('23:59') == '00:00'\nassert solution('10:10') == '11:09'\nassert solution('0:0') == '00:00'\nassert solution('0:40') == '00:41'\nassert solution('1:10') == '01:11'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('23:59') == '00:59'\nassert solution('20:20') == '22:20'\nassert solution('10:10') == '22:10'\nassert solution('0:0') == '23:59'\nassert solution('100:100') == '23:59'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('23:59') == '00:59'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nprint('Test success!')\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"23:59\") == \"00:59\"\nassert solution(\"10:10\") == \"00:10\"\nassert solution(\"20:20\") == \"22:20\"\nassert solution(\"10:10\") == \"00:10\"\nassert solution(\"0\") == \"00:00\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1\n0 0\n1 1\n0 0\"\"\") == \"YES\"\nassert solution(\"\"\"4 5\n01101\n01010\n00111\n10000\n\"\"\") == \"NO\"\nassert solution(\"\"\"4 4\n1 0\n0 1\n1 1\n0 0\n\"\"\") == \"YES\"\nassert solution(\"\"\"1 1\n0 0\n0 1\n1 1\n0 0\n\"\"\") == \"NO\"\nassert solution(\"\"\"1 1\n0 0\n0 0\n1 1\n0 0\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4\\n0110\\n0000\\n0000') == 'NO'\nassert solution('2 4\\n10101\\n01000\\n00111\\n10000') == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1\n0\n1\n0''') == \"YES\"\nassert solution('''0\n1\n1\n1\n''') == \"YES\"\nassert solution('''1\n0\n0\n0\n1\n''') == \"NO\"\nassert solution('''1\n0\n1\n0\n1\n0''') == \"NO\"\nassert solution('''0\n0\n1\n1\n1\n''') == \"YES\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3') == 'YES'\nassert solution('1 2\\n0 1') == 'NO'"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == 'YES'\nassert solution('''4 5\n10100\n01000\n00110\n00101''') == 'NO'\nassert solution('''4 3\n111\n000\n001\n''') == 'YES'\nassert solution('''5 5\n1000000001\n0010000001\n1000000001\n00000010100\n0001000001\n''') == 'NO'\nassert solution('''10 10\n0000000000\n0000000010\n0000000001\n0000000011\n00000011100\n0011001100\n0011001110\n0011001111\n0011001110\n0011001100\n''') == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10101') == 'YES'\nassert solution('01000') == 'YES'\nassert solution('00110') == 'NO'\nassert solution('10100') == 'YES'\nassert solution('01010') == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n0 1\\n1 1\\n1 2\\n\") == \"NO\"\nassert solution(\"1 2\\n0 1\\n1 1\\n1 2\\n\") == \"YES\"\nassert solution(\"2 3\\n0 0\\n0 1\\n1 1\\n1 1\\n1 2\\n\") == \"NO\"\nassert solution(\"2 3\\n0 0\\n0 1\\n1 1\\n1 2\\n\") == \"YES\"\nassert solution(\"2 3\\n0 0\\n0 1\\n1 1\\n1 1\\n1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1\n0 0\n0 1\n1 0''') == 'YES'\nassert solution('''2 2\n1 0\n0 1\n0 1''') == 'NO'\nassert solution('''3 3\n0 0\n0 1\n0 1\n1 0\n1 0''') == 'YES'\nassert solution('''3 4\n1 1\n1 1\n0 0\n1 0\n0 0''') == 'NO'\nassert solution('''2 1\n0 1\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10001000\") == \"NO\"\nassert solution(\"10001001\") == \"YES\"\nassert solution(\"1110010\") == \"NO\"\nassert solution(\"1110011\") == \"YES\"\nassert solution(\"1111101\") == \"NO\"\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4 2\n6 4''') == '0'\n\nassert solution('''1\n2 3\n4 4\n''') == '-1'\n\nassert solution('''3\n1 4\n2 3\n4 4\n''') == '1'\n\nassert solution('''3\n1 4\n2 3\n1 2\n''') == '-1'\n\nassert solution('''3\n1 4\n2 3\n1 2\n3 3\n''') == '1'"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4 2') == '0'\nassert solution('1\\n2 3') == '-1'\nassert solution('3\\n1 4') == '1'\nassert solution('4\\n4 4') == '0'\nassert solution('5\\n2 3') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6') == '0'\nassert solution('2 4 6 8 10 12 14 16') == '-1'\nassert solution('3 4 5 6 9') == '0'\nassert solution('6 7 8 9 10 11') == '1'\nassert solution('4 4 4 4') == '0'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2\\n2') == '-1'\nassert solution('2\\n3\\n4\\n4') == '1'\nassert solution('3\\n1 2\\n4 1') == '2'\nassert solution('3\\n1 2\\n4 1') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3') == '0'\nassert solution('2\\n4 2') == '-1'\nassert solution('3\\n1 4\\n2 3') == '1'\nassert solution('4\\n2 3\\n4 4') == '1'\nassert solution('5\\n2 3\\n4 4\\n5 4') == '2'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n4 2\\n6 4\\n') == '0'\nassert solution('2\\n4 2\\n3 4\\n') == '-1'\nassert solution('2\\n4 2\\n1 4\\n') == '1'\nassert solution('4\\n1 4\\n2 3\\n4 4\\n') == '1'\nassert solution('3\\n1 4\\n2 3\\n4 4\\n') == '2'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 0\nassert solution('1\\n2') == 1\nassert solution('2\\n2') == -1\nassert solution('4\\n4') == 1\nassert solution('5\\n5') == -1\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n4 2\n6 4''') == '0'\nassert solution('''1\n2 3\n4 4''') == '-1'\nassert solution('''3\n1 4\n2 3\n4 4''') == '1'\nassert solution('''4\n1 4\n2 3\n4 4\n5 5''') == '0'\nassert solution('''6\n1 4\n2 3\n4 4\n5 5\n6 6\n7 7''') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n6 4\\n\") == \"0\"\nassert solution(\"1 4\\n2 3\\n4 4\\n\") == \"-1\"\nassert solution(\"2 3\\n1 4\\n\") == \"1\"\nassert solution(\"3\\n1 4\\n2 3\\n4 4\\n\") == \"-1\"\nassert solution(\"3\\n1 4\\n2 3\\n4 4\\n\") == \"1\"\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"6 4\") == \"0\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n6 5\n16 13\n61690850361 24777622630\n34 33\n''') == 'YES'\n\nassert solution(\n'''\n2\n16 13\n61690850361 24777622630\n34 33\n''') == 'YES'\n\nassert solution(\n'''\n5\n1 2\n8 5\n9 9\n7 7\n4\n''') == 'NO'\n\nassert solution(\n'''\n4\n8 5\n7 7\n4\n''') == 'YES'\n'''\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4\\n6\\n8\\n10\\n') == 'YES\\nNO\\nNO\\nYES'\nassert solution('2\\n1\\n3\\n4\\n6\\n8\\n9\\n10\\n') == 'YES\\nNO\\nNO\\nYES'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'YES\\nNO\\nNO\\nYES'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'YES\\nNO\\nNO\\nYES'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == 'YES\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 5') == 'NO'\nassert solution('16 13') == 'YES'\nassert solution('61690850361 24777622630') == 'YES'\nassert solution('34 33') == 'NO'\nassert solution('16 13 16 13 16 13 16 13') == 'YES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2\n6 5\n16 13\n61690850361 24777622630\n34 33\n'''\n    ) == 'NO\\nYES\\nNO\\n'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n4\\n') == 'NO'\nassert solution('4\\n3\\n') == 'NO'\nassert solution('5\\n2\\n') == 'YES'\nassert solution('5\\n3\\n') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n5 5''') == \"NO\"\nassert solution('''3\n16 13''') == \"YES\"\nassert solution('''3\n61690850361 24777622630''') == \"YES\"\nassert solution('''3\n34 33''') == \"NO\"\nassert solution('''1\n10 1000000000''') == \"YES\"\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n16 13\n61690850361 24777622630\n34 33\n''') == 'YES'\nassert solution('''6\n16 13\n61690850361 24777622630\n34 33\n''') == 'NO'\nassert solution('''4\n6 13\n61690850361 24777622630\n34 33\n''') == 'NO'\nassert solution('''6\n16 13\n61690850361 24777622630\n34 33\n''') == 'YES'\nassert solution('''6\n16 13\n61690850361 24777622630\n34 33\n''') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n2\\n3\\n1') == 'YES'\nassert solution('2\\n3\\n1\\n2') == 'NO'\nassert solution('2\\n1\\n1\\n1') == 'YES'\nassert solution('2\\n2\\n2\\n2') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n6\\n16\\n13\\n61690850361 24777622630\\n34 33\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == 'NO\\nNO\\nNO\\nYES'\nassert solution('2\\n16\\n5\\n13\\n4\\n2\\n1\\n4\\n6\\n3\\n5\\n7\\n2\\n6\\n1\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n4\\n3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n-1 -1\\n2 -1\\n') == 'Yes\\n'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2\\n') == 'No\\n'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2\\n4 60\\n') == 'Yes\\n'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('-1 -1') == 'No'\nassert solution('2 -1') == 'Yes'\nassert solution('4 60') == 'No'\nassert solution('1 2') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('-1 -1') == 'Yes'\nassert solution('2 -1') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('-1 1') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 'Yes'\nassert solution('''-1 -1\n2 -1\n-1 1''') == 'Yes'\nassert solution('''-1 -1\n2 -1\n-1 -1''') == 'No'\nassert solution('''4\n1 1\n2 2\n-1 1\n-2 2''') == 'Yes'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n-1 2''') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n-1 -1\\n2 -1\\n') == 'Yes'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2\\n') == 'No'\nassert solution('3\\n1 2\\n2 1\\n4 60\\n') == 'Yes'\n\n\n-----Solution Overview-----\n\nFor each point, we keep the two absolute values (in tuple), and compare them with the absolute values of the coordinates of other points. If the absolute values of the coordinates of the point are greater than the absolute values of other points, then we have to keep the point.\n\nNow, we need to check each pair of points in the list. In order to do so, we sort the list by the absolute values of the coordinates of the points.\n\nNote that the absolute values of the coordinates of the points are the same as the absolute values of the coordinates of the list. So, the sorting is just to compare the pairs of points.\n\nFor each pair of points, we check the condition described above. If the condition is satisfied, we can remove the pair.\n\nWe can do it in O(n^2).\n\n\"\"\"\n\nimport sys\n\nN = int(sys.stdin.readline().strip())\n\nfor i in range(N):\n    x, y = tuple(int(n) for n in sys.stdin.readline().split())\n    if abs(x) > abs(y):\n        print(\"No\")\n        break\n    else:\n        print(\"Yes\")\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'Yes'\nassert solution('2\\n1\\n2\\n1') == 'No'\nassert solution('3\\n1\\n2\\n1') == 'Yes'\nassert solution('4\\n1\\n2\\n1\\n2\\n1') == 'No'\nassert solution('3\\n1\\n2\\n1') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n-1\\n2\\n-1') == 'Yes'\nassert solution('2\\n1\\n2\\n-1') == 'No'\nassert solution('1\\n2\\n1\\n-1') == 'Yes'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2\\n') == 'No'\nassert solution('4\\n1 1\\n-1 1\\n-2 2\\n') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n-1 -1\\n2 -1\\n\") == \"Yes\"\nassert solution(\"4\\n1 1\\n2 2\\n-1 1\\n-2 2\\n\") == \"No\"\nassert solution(\"3\\n1 2\\n2 1\\n4 60\\n\") == \"Yes\"\n\n\n-----"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == 'Yes'\nassert solution('''4''') == 'No'\nassert solution('''1 1''') == 'Yes'\nassert solution('''2 2''') == 'No'\nassert solution('''1 2''') == 'Yes'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == '6'\nassert solution('2 3\\n4 5') == '6'\nassert solution('1 2\\n1 2') == '2'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1\\n1 1') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''1 0''') == '0'\nassert solution('''4 8''') == '4'\nassert solution('''100 19''') == '1'\nassert solution('''2704 824''') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4') == '1'\nassert solution('1 5') == '5'\nassert solution('10 100') == '10'\nassert solution('100 1000') == '100'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '6'\nassert solution('5 5') == '10'\nassert solution('3 1') == '1'\nassert solution('1 1000000000') == '1'\nassert solution('0 1000000000') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '6'\nassert solution('2 3') == '3'\nassert solution('3 2') == '1'\nassert solution('4 5') == '4'\n\n'''\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 3') == '3'\nassert solution('10 4') == '2'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3') == '6'\nassert solution('10 6') == '6'\nassert solution('1000 4') == '1'\nassert solution('12 14') == '6'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3') == '6'\n'''\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"6\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"8 5\") == \"8\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '9 8'\nassert solution('2') == '9 40'\nassert solution('3') == '9 45'\nassert solution('4') == '9 46'\nassert solution('5') == '9 47'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '2 1'\nassert solution('512') == '4608 4096'\nprint(\"Tests passed successfully\")\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"1024\") == \"4608 4096\"\nassert solution(\"512\") == \"4608 4096\"\nassert solution(\"108\") == \"4096 108\"\nassert solution(\"5696\") == \"3840 5696\"\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('10') == ''\nassert solution('100') == ''\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '9 8'\nassert solution('1') == '2 3'\nassert solution('512') == '4608 4096'"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '2 3'\nassert solution('3') == '3 3'\nassert solution('4') == '3 4'\nassert solution('5') == '5 5'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m, p = map(int, stdin.split())\ncoins = [[int(stdin.split()[i]) for i in range(3)] for j in range(m)]"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2 6\") == \"35\"\nassert solution(\"4 2 8\") == \"35\"\nassert solution(\"2 1 10\") == \"35\"\nassert solution(\"2 2 3\") == \"35\"\nassert solution(\"2 3 3\") == \"35\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n') == '35'\nassert solution('1 1 0\\n1 2 10\\n2 3 1\\n1 3 5\\n') == '5'\nassert solution('4 10 0\\n1 2 10\\n2 3 3\\n1 3 2\\n') == '8'\nassert solution('3 3 10\\n1 2 10\\n2 3 3\\n1 3 2\\n') == '35'\nassert solution('1 1 0\\n1 2 10\\n2 3 3\\n1 3 2\\n') == '5'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3 10\n1 2 20\n2 3 30\n1 3 45\n\"\"\"\n    ) == \"35\"\n\nassert solution(\n\"\"\"\n3 3 10\n1 2 10\n2 3 50\n1 3 60\n\"\"\"\n    ) == \"-1\"\n\nassert solution(\n\"\"\"\n3 2 10\n1 2 20\n2 3 30\n1 3 40\n\"\"\"\n    ) == \"40\"\n\nassert solution(\n\"\"\"\n3 2 10\n1 2 10\n2 3 50\n1 3 60\n\"\"\"\n    ) == \"10\"\n\nassert solution(\n\"\"\"\n5 5 10\n1 2 30\n2 3 40\n1 3 50\n2 4 50\n2 5 60\n\"\"\"\n    ) == \"40\""
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('3 3 10\\n1 2 1\\n2 3 2\\n1 3 1') == '-1'\nassert solution('1 1 1000000000') == '-1'\nassert solution('1 1 1000000000\\n1 1 1') == '1'\nassert solution('1 1 1000000000\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('1 2 1\\n1 2 10') == '-1'\n\"\"\"\n\n\nfrom sys import stdin"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 10\n1 2 20\n2 3 30\n1 3 45''') == '35'\nassert solution('''2 2 10\n1 2 20\n2 3 30''') == '-1'\nassert solution('''3 3 10\n1 2 20\n2 3 30\n1 3 45\n2 4 40\n3 5 50\n4 5 60\n5 6 70\n6 7 80\n7 8 90\n8 9 100\n9 10 110\n10 11 120\n11 12 130\n12 13 140\n13 14 150''') == '210'\n'''\n\nfrom sys import stdin\n\ninput = stdin.readline"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('1 2 3\\n1 3 2\\n3 1 2') == '-1'\nassert solution('2 3 3\\n1 2 3\\n1 3 2') == '-1'\nassert solution('1 1 1\\n1 1 1') == '0'\nassert solution('2 3 3\\n1 2 3\\n1 3 2') == '1'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == 35\nassert solution(\"3 4 2\\n1 2 30\\n2 3 10\\n1 3 15\") == -1\n\n\n\n\n\nn, m, p = map(int, stdin.split())\narr = [list(map(int, stdin.split())) for _ in range(m)]\n\nT = int(stdin)\n\ndp = [0 for _ in range(n + 1)]\n\nfor a, b, c in arr:\n    dp[a] += c\n    dp[b] -= c\n\nfor i in range(n - 1, -1, -1):\n    if i == n - 1:\n        dp[i] += T * p\n    else:\n        dp[i] += dp[i + 1]"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ba 3\\nabc 4\\ncbaa 5') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\nabc 4\\nba 3') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\nabc 4\\nba 3\\nba 3') == '7'\n\"\"\"\n\nN = int(input())\nstrings = [input() for _ in range(N)]\ncosts = [int(input()) for _ in range(N)]\n\nmin_cost = 10**10\nmin_cost_string = []\nfor i in range(N):\n    curr_cost = sum(costs[:i+1])\n    if curr_cost < min_cost:\n        min_cost = curr_cost\n        min_cost_string = strings[:i+1]"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n\n\"\"\"\n\n\"\"\"\nTakahashi wants to make a string that is a palindrome by choosing one or more of these strings - the same string can be chosen more than once - and concatenating them in some order of his choice.\nThe cost of using the string S_i once is C_i, and the cost of using it multiple times is C_i multiplied by that number of times.\nFind the minimum total cost needed to choose strings so that Takahashi can make a palindrome.\nIf there is no choice of strings in which he can make a palindrome, print -1.\n\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N.\nThe second line contains N space-separated strings, each of which consists of lowercase English letters.\nThe third line contains a single integer C.\n\nOutput\n\nFor each test case, output a single line containing the minimum total cost to make a palindrome, or -1 if there is no choice of strings that makes a palindrome.\n\nConstraints\n1\u2264T\u2264105\n1\u2264N\u226450\n1\u2264|S_i|\u226420\n1\u2264C\u226410^9\nS_i consists of lowercase English letters.\n\nSample Input\n2\n3\nba 3\nabc 4\ncbaa 5\n2\nabc abc\n7\n\nSample Output\n7\n-1\n\nExplanation\nIn the first case, we can use ba three times to make a palindrome, and concatenate them in the order abc. Also, we can use abc once and cbaa five times to make a palindrome. So, the cost is 7.\n\nIn the second case, we cannot make a palindrome for a cost less than 7.\n\"\"\"\n\nimport sys"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abcde\") == \"abcd\"\nassert solution(\"abcdea\") == \"abcd\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ba 3\\ncbaa 5\") == \"7\"\nassert solution(\"abc 4\\ncbaa 5\") == \"9\"\nassert solution(\"cbaa 3\\ncbaa 5\") == \"-1\"\n\"\"\"\n\nN = int(input())\nstrings = []\nfor i in range(N):\n    strings.append(input())\n\ndp = [0] * (N+1)\n\nfor i in range(N):\n    for j in range(i+1):\n        if strings[j][0] == strings[i][N-1-j]:\n            dp[i+1] = max(dp[i+1], dp[j]+len(strings[j])*10**(N-j-2))\n        else:\n            dp[i+1] = max(dp[i+1], dp[j])\n\nprint(dp[N])\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ba 3\\nabc 4\\ncbaa 5') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4') == '9'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4\\nabc 4\\ncbaa 5') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4\\nabc 4\\ncbaa 5\\ncccc 4\\nfghg 4') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\n3bcbaa 5\\n') == '9'\nassert solution('abc 4\\n3bcbaa 5\\n') == '7'\nassert solution('abc 4\\n3bcbaa 5\\n') == '-1'\nassert solution('abc 4\\n3bcbaa 5\\n') == '-1'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '7'\n\n'''\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('2 2') == '0'\nassert solution('5 2') == '3'\nassert solution('5 2') == '3'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('1 1') == '0'\nassert solution('2 5') == '7'\nassert solution('3 6') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '7'\nassert solution('3 3') == '7'\nassert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('10 10') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('3 3') == '6'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('2 1') == '2'\nassert solution('2 3') == '5'\nassert solution('1000000000 1') == '1'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('2 2') == '3'\nassert solution('4 2') == '5'\nassert solution('3 3') == '7'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1\\n') == 3\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2\\n') == 4\nassert solution('1\\n1\\n1\\n1\\n') == 0\nassert solution('10\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n3 4\\n4 1\\n4 2\\n4 3\\n4 4') == 3\n\n\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1') == '3'\nassert solution('3\\n1 1\\n1 2\\n2 1') == '4'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\nassert solution('5\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3') == '3'\nassert solution('5\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 1\\n1 2') == '3'\nassert solution('3\\n1 1\\n1 2\\n2 1') == '4'\nassert solution('5\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\nassert solution('10\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2') == '6'\n\n\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n1 1\n1 2\n2 1'''\n) == 3\n\nassert solution(\n'''4\n1 1\n1 2\n2 1\n2 2'''\n) == 4\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1\n1 2\n2 1''') == 3\nassert solution('''4\n1 1\n1 2\n2 1\n2 2''') == 4\nassert solution('''5\n1 1\n1 2\n2 1\n2 2\n3 1''') == 2\n\n\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn = int(input())\n\nxs, ys = [], []\nfor i in range(n):\n    x, y = map(int, input().split())\n    xs.append(x)\n    ys.append(y)"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('1\\n1\\n1\\n2\\n2') == '2'\nassert solution('1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n2\\n2\\n2\\n2') == '4'\nassert solution('10\\n10\\n10\\n10\\n10') == '10'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 2\") == 3\nassert solution(\"3\\n1 1\\n1 2\\n2 1\") == 3\nassert solution(\"4\\n1 1\\n1 2\\n2 1\\n2 2\") == 4\nassert solution(\"10\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 1\\n4 1\") == 5\nassert solution(\"10\\n1 1\\n1 2\\n2 1\\n2 2\\n2 3\\n3 1\\n4 1\\n5 1\") == 6\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == 3\nassert solution('''3\n1 1\n1 2\n2 1''') == 3\nassert solution('''4\n1 1\n1 2\n2 1\n2 2''') == 4\n'''\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\nprint(\"All tests past. Click 'Check' to earn cool rewards!\")\n\"\"\"\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == None\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\n\nprint(solution(stdin))\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"nineteenineteen\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nniinneetteeeenn\") == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"nineteenineteen\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\nprint('Test success!')\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\nassert solution('nineteenineteen') == 2\nassert solution('s') == 0\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('2 5') == '6'\nassert solution('4 9') == '9'\nassert solution('4 10') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == -1\nassert solution('2 4') == -1\nassert solution('1 2') == -1\nassert solution('1 2 3') == -1\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 17\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n\n\n\n'''\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('3 4') == '-1'\nassert solution('3 4') == '-1'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('1 2') == '-1'"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 6\") == 5\nassert solution(\"3 4\") == -1\nassert solution(\"2 4\") == -1\nassert solution(\"2 5\") == -1\nassert solution(\"2 5 7\") == -1\n\"\"\"\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n\") == \"1\"\nassert solution(\"3 4\\n\") == \"-1\"\nassert solution(\"2 3\\n\") == \"2\"\nassert solution(\"2 2\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"1\"\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('1 1') == '-1'\nassert solution('5 3') == '5'\nassert solution('10 4') == '5'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('2 7') == '6'\nassert solution('4 3') == '-1'\nassert solution('5 2') == '5'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('1 1') == '1'\nassert solution('5 5') == '-1'\nassert solution('2 4') == '-1'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 20''') == '40'\nassert solution('''7 3 50''') == '30'\nassert solution('''10 5 100''') == '20'\n\n\n\n'''\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1 20\n0 27 32 21 19''') == '40'\nassert solution('''7 3 50\n62 0 0 0 99 33 22''') == '30'\nassert solution('''10 5 100\n1 0 1 0 0 0 0 0 1 1''') == '20'\n\n'''\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 1 20\n0 27 32 21 19\n''') == '40'\n\nassert solution('''7 3 50\n62 0 0 0 99 33 22\n''') == '30'\n\nassert solution('''10 5 100\n1 0 1 0 0 0 0 0 1 1\n''') == '20'\n'''\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\nassert solution('5 3 50\\n0 0 0 0 99 33 22\\n') == '40'\n\n\"\"\""
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 1 20\\n0 27 32 21 19\\n\") == \"40\\n\"\nassert solution(\n    \"7 3 50\\n62 0 0 0 99 33 22\\n\") == \"30\\n\"\nassert solution(\n    \"10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n\") == \"20\\n\"\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '2 2' +\n    '1 1' +\n    '6 1' +\n    '1 6' +\n    '1 1'\n) == 'YES'\nassert solution(\n    '2 2' +\n    '4 4' +\n    '4 5' +\n    '5 4' +\n    '4 4'\n) == 'NO'\nassert solution(\n    '3 3' +\n    '1 2 3' +\n    '4 5 6' +\n    '7 8 9' +\n    '1 4 7' +\n    '2 5 6' +\n    '3 8 9'\n) == 'YES'\nassert solution(\n    '3 3' +\n    '1 2 3' +\n    '4 5 6' +\n    '7 8 9' +\n    '1 4 7' +\n    '2 5 6' +\n    '3 8 9' +\n    '1 2 3' +\n    '4 5 6' +\n    '7 8 9'\n) == 'YES'\nassert solution(\n    '4 4' +\n    '1 2 3 4' +\n    '5 6 7 8' +\n    '9 1 2 3' +\n    '4 5 6 7' +\n    '8 9 1 2' +\n    '3 4 5 6' +\n    '7 8 9 1' +\n    '2 3 4 5' +\n    '6 7 8 9'\n) == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2\n1 1\n6 1''') == 'YES'\nassert solution(\n'''2 2\n4 4\n4 5\n5 4''') == 'NO'\nassert solution(\n'''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'YES'\nassert solution(\n'''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'NO'\nassert solution(\n'''4 4\n4 4\n4 5\n5 4\n4 4\n1 4 7\n2 5 6\n3 8 9\n10 11 12\n13 14 15\n16 17 18\n19 20 21\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"2 2\n1 1\n6 1\"\"\"\n) == \"YES\"\nassert solution(\n    \"\"\"2 2\n4 4\n4 5\n5 4\n4 4\"\"\"\n) == \"NO\"\nassert solution(\n    \"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\"\"\"\n) == \"YES\"\nassert solution(\n    \"\"\"4 2\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n1 4 13\n2 5 14\n3 6 15\n4 7 16\"\"\"\n) == \"YES\""
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 1\n6 1\n1 6\n1 1''') == 'YES'\nassert solution('''2 2\n4 4\n4 5\n5 4\n4 4''') == 'NO'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'YES'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'NO'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n1 4 5 6 7 8 9 10 11 12\n1 6 7 8 9 10 11 12 13\n1 8 9 10 11 12 13 14 15\n1 10 11 12 13 14 15 16 17\n1 12 13 14 15 16 17 18 19\n1 14 15 16 17 18 19 20 21\n1 16 17 18 19 20 21 22 23\n1 18 19 20 21 22 23 24 25\n1 20 21 22 23 24 25 26 27''') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"4 2\n1 1\n6 1\n1 6\n1 1\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"2 2\n1 1\n4 4\n4 5\"\"\"\n) == 'NO'\n\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\"\"\"\n) == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n6 1\\n1 6\\n1 1\") == \"YES\"\nassert solution(\"2 2\\n4 4\\n4 5\\n5 4\\n4 4\") == \"NO\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\") == \"YES\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n6 1\n1 6\n1 1''') == 'YES'\nassert solution('''2 2\n4 4\n4 5\n5 4\n4 4''') == 'NO'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'YES'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n1 1 1\n2 2 2\n3 3 3\n1 2 3\n4 5 6\n7 8 9''') == 'NO'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 8 7 6\n5 6 7 8\n9 8 7 6\n9 8 7 6\n9 8 7 6\n9 8 7 6''') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('4 4') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('4 4') == 'NO'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcd\\ndefgh\\n') == '5'\nassert solution('a\\na\\n') == '-1'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcd', 'defgh') == '5'\nassert solution('a', 'a') == '-1'\nassert solution('abc', 'def') == '-1'\nassert solution('abc', 'abc') == '-1'\nassert solution('abc', 'abc') == '-1'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcd\",\"defgh\") == \"5\"\nassert solution(\"a\",\"a\") == \"-1\"\nassert solution(\"cc\",\"ab\") == \"-1\"\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcd') == '5'\nassert solution('defgh') == '-1'\nassert solution('a') == '-1'\nassert solution('a') == '-1'\nassert solution('aaaaa') == '-1'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcd\", \"defgh\") == 5\nassert solution(\"a\", \"a\") == -1\nassert solution(\"\", \"\") == -1\nassert solution(\"abcd\", \"a\") == -1\nassert solution(\"abcd\", \"defgh\") == -1\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''abcd\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcd\", \"defgh\") == \"5\"\nassert solution(\"a\", \"a\") == \"-1\"\nassert solution(\"a\", \"b\") == \"1\"\nassert solution(\"abbc\", \"acb\") == \"3\"\nassert solution(\"abbc\", \"acd\") == \"2\"\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcd\\ndefgh') == 5\nassert solution('a\\na') == -1\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\n\"\"\"\n\nOver the top, this question is a bit tricky, but it's relatively straightforward: it's basically a binary search.\n\nThe first scenario we can definitely see is when Rick and Morty each scream at the same time. To see this, we\nstart by calculating the earliest time at which Rick and Morty will be able to scream together. If we know that Rick\nwill scream at time a, then we can easily calculate that Rick and Morty will scream at time a + b, where a = b and b is\nthe time that Rick and Morty have in common. In other words, a = b + (b - a) / 2, and a = b + (2 * b - a) / 4, and so on.\n\nIt's then obvious that Rick and Morty will always scream at the same time if they're at the same time.\n\nThe second scenario is when Rick and Morty will never scream at the same time. In that case, we can use the same\nscenario as above, but we can't easily calculate a. Since a = d + c, we can instead calculate a = b + (b - a) / 2, or\na = b + (2 * b - a) / 4, or a = b + (3 * b - 2 * a) / 8, or a = b + (4 * b - 3 * a) / 16, and so on.\n\nSince there's always a constant difference between the time they will scream at the same time, we can finally calculate\nthe answer.\n\nTime - O(log(N))\nSpace - O(1)\n\n\"\"\""
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 2\n9 19''') == '82'\nassert solution('''2 1\n16 12''') == '-1'\nassert solution('''20 22\n10 12''') == '-1'\nassert solution('''20 22\n20 12''') == '-1'\nassert solution('''20 22\n30 12''') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 2\\n9 19\\n') == '82'\nassert solution('2 1\\n16 12\\n') == '-1'\nassert solution('1 1\\n1 1\\n') == '-1'\nassert solution('1 1\\n1 1\\n') == '-1'\nassert solution('1 1\\n1 1\\n') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 2''') == '-1'\nassert solution('''9 19''') == '82'\nassert solution('''2 1''') == '-1'\nassert solution('''16 12''') == '-1'\nassert solution('''0 0''') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'\nassert solution('2 1\\n4 19') == '-1'\nassert solution('2 1\\n4 19') == '-1'\nassert solution('2 1\\n1 19') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'\nassert solution('20 1\\n21') == '1'\nassert solution('2 1\\n16 12') == '-1'\nassert solution('20 1\\n21') == '1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1\\n9 19\\n') == '-1'\nassert solution('2 1\\n16 12\\n') == '82'\nassert solution('20 2\\n9 19\\n') == '82'\n\n\n\n##\n\n---1---\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 2\\n9 19\\n\") == \"82\"\nassert solution(\"2 1\\n16 12\\n\") == \"-1\"\nassert solution(\"2 1\\n6 5\\n\") == \"7\"\nassert solution(\"2 1\\n8 6\\n\") == \"7\"\nassert solution(\"2 1\\n1 1\\n\") == \"1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 2\\n9 19\\n') == '82'\nassert solution('2 1\\n16 12\\n') == '-1'\nassert solution('2 1\\n16 19\\n') == '-1'\nassert solution('2 1\\n9 19\\n') == '-1'\nassert solution('2 1\\n9 19\\n') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('1000') == '10000001 10000001 10000011'\nassert solution('100') == '1 1 1'\nassert solution('1') == '1 1 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''4''') == '1 1 1 1'\nassert solution('''3\n3\n3\n3''') == '3 3 3'\nassert solution('''4\n4\n4\n4\n4''') == '1 1 1 1'\nassert solution('''2\n3\n3\n4\n4\n5\n5\n5\n6\n6''') == '1 1 1 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('233') == '77 79 79'\nassert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''233''') == '77 77 79'\nassert solution('''33''') == '99 99 99'\nassert solution('''333''') == '77 77 79'\nassert solution('''33333''') == '9999999 999999 9999999'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''233''') == '77 77 79'\nassert solution('''10''') == '1 1 1'\nassert solution('''25''') == '3 3 3'\nassert solution('''1001''') == '1 1 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''233''') == '77 77 79'\nassert solution('''233''') == '77 77 79'\nassert solution(''''32''') == '1 1 1'\nassert solution(''''243''') == '2 2 2'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('233') == '77 77 79'\nassert solution('233') == '77 77 79'\nassert solution('233') == '77 77 79'\nassert solution('233') == '77 77 79'\nassert solution('233') == '77 77 79'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2 2\") == \"2\"\nassert solution(\"3 1 1 2 3\") == \"6\"\nassert solution(\"3 3 1 2 3\") == \"6\"\nassert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"6\"\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('3 3 1 2 3') == '6'\nassert solution('3 3 1 2 3') == '6'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('1 1 1 1 2') == '2'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1 1 2\\n'\n                '2 1 1 1 2') == '2'\n\nassert solution('3 3 1 2 3\\n'\n                '3 3 1 2 3\\n'\n                '3 3 1 2 3\\n'\n                '3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('3 3 1 2 1') == '0'\nassert solution('1 1 1 1 2') == '2'\nassert solution('1 1 1 1 2') == '2'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('1 1 1 1 2') == '2'\nassert solution('2 3 1 2 3') == '6'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('3 3 1 2 1') == '0'\nassert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"6\"\nassert solution(\"2 1 1 1 2\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"6\"\nassert solution(\"2 3 1 2 3\") == \"6\"\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"20\"\nassert solution(input()) == \"34\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"8\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 1\\n1 2\") == \"8\"\nassert solution(\"4 3\\n9 2\\n0 1\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"1\"\nassert solution(\"1 2\\n1 2\") == \"0\"\nassert solution(\"3 4\\n1 1\\n2 2\") == \"1\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '8'\nassert solution('5 6') == '0'\nassert solution('1 1') == '1'\nassert solution('4 3') == '1'\nassert solution('9 2') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"8\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"9 2\") == \"0\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"8 1\") == \"2\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"8\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '8'\nassert solution('4 3') == '1'\nassert solution('8 4') == '2'\nassert solution('4 3') == '1'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n') == '8'\nassert solution('1 1\\n1 2\\n') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1 2') == '8'\nassert solution('2 2\\n0 1\\n0 1') == '1'\nassert solution('3 4\\n1 2\\n2 1') == '1'\nassert solution('4 3\\n9 2\\n0 1') == '1'\nassert solution('4 3\\n1 1\\n0 1') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3') == '8'\nassert solution('9 2') == '1'\nassert solution('2 2') == '1'\nassert solution('0 1') == '1'\nassert solution('4 3') == '8'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 1\\n1 2\\n') == '8'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\nassert solution('4 3\\n1 1\\n0 2\\n') == '0'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\nassert solution('4 3\\n1 1\\n9 2\\n') == '1'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n3 4 3 2 1\n6 8''') == '3'\n\nassert solution('''5\n0 3 3 4 2\n3 10''') == '4'\n\nassert solution('''2\n2 5\n3 6''') == '0'\n\nassert solution('''2\n2 5\n3 7''') == '1'\n\nassert solution('''2\n2 5\n3 7\n''') == '1'"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n3 4 3 2 1\\n6 8') == '3'\nassert solution('5\\n0 3 3 4 2\\n3 10') == '4'\nassert solution('2\\n2 5\\n3 6\\n') == '0'\nassert solution('1\\n1 1\\n1 1\\n') == '0'\nassert solution('5\\n0 3 3 4 2\\n6 8\\n') == '3'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('0 1 2 3 4 5') == None\nassert solution('0 1 2 3 4 5 6 7') == None\nassert solution('0 1 2 3 4 5 6') == None\nassert solution('0 1 2 3 4 5 6 7 8 9 10') == None\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5\\n3 4 3 2 1\") == \"\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\") == \"3\"\nassert solution(\"2\\n2 5\\n3 6\") == \"0\"\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3 4 3 2 1\\n6 8') == '3'\nassert solution('5\\n0 3 3 4 2\\n3 10') == '4'\nassert solution('2\\n2 5\\n3 6\\n3 7') == '0'\nassert solution('3\\n2 5\\n3 6\\n3 7') == '0'\nassert solution('4\\n2 5\\n3 6\\n3 7') == '0'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"3 4 3 2 1\") == 3\nassert solution(\"5 4 3 2 1\") == 3\nassert solution(\"6 8\") == 3\nassert solution(\"2 5\") == 0\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('4\\n3 2 1\\n5 4 3 2') == '3'\nassert solution('2\\n1 10') == '0'\nassert solution('2\\n3 10') == '2'\nassert solution('2\\n5 8') == '0'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('5\\n3 4 3 2 1') == '3'\nassert solution('5\\n0 3 3 4 2') == '0'\nassert solution('5\\n0 3 3 4 2\\n3 10') == '4'\nassert solution('5\\n0 3 3 4 2\\n3 10\\n0') == '4'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('5\\n5\\n2\\n20\\n') == '8'\nassert solution('19\\n3\\n4\\n2\\n') == '12'\nassert solution('10\\n3\\n2\\n1\\n') == '6'\n\n\n\"\"\"\n\n\"\"\"\npublic class Main {\n    public static void main(String[] args) {\n        int n = Integer.parseInt(readLine());\n        int k = Integer.parseInt(readLine());\n        int a = Integer.parseInt(readLine());\n        int b = Integer.parseInt(readLine());\n        int x = n;\n        while (x!= 1) {\n            if (x % k == 0) {\n                x /= k;\n                a -= 1;\n            } else {\n                x -= 1;\n                b -= 1;\n            }\n        }\n        write(a);\n        write(b);\n    }\n}\n\"\"\""
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin)\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n9\n2\n3\n1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5\n5\n2\n20\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n19\n3\n4\n2\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n10\n3\n1\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n1\n1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'\n\n'''\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n1\\n1\\n1\\n\") == \"6\"\nassert solution(\"3\\n1\\n1\\n1\\n\") == \"12\"\nassert solution(\"4\\n1\\n1\\n1\\n\") == \"12\"\nassert solution(\"5\\n1\\n1\\n1\\n\") == \"12\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 3 2 1\") == \"6\"\nassert solution(\"15 2 2 1\") == \"9\"\nassert solution(\"15 3 2 2\") == \"15\"\nassert solution(\"19 3 2 2\") == \"12\"\nassert solution(\"15 19 2 2\") == \"16\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('5\\n5\\n2\\n20\\n') == '8'\nassert solution('19\\n3\\n4\\n2\\n') == '12'\nassert solution('9\\n2\\n3\\n1\\n') == '6'\nassert solution('4\\n2\\n2\\n1\\n') == '2'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''34523452345''') == '4524 2'\nassert solution('''998244353''') == '4632 3'\nassert solution('''5924341''') == '5223 4'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('20') == None\nassert solution('5184') == None\nassert solution('0') == None\nassert solution('1') == None\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"100\") == \"1 2\"\nassert solutionn"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'\nassert solution('9999999') == '9 54'\nassert solution('1838391') == '6 26'\nassert solution('8888888888') == '8 40'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''1488960000000000''') == '10 12'\nassert solution('''200000099''') == '10 30'\nassert solution('''1000000000''') == '5 15'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''5''') == '5 1'\nassert solution('''6''') == '7 4'\nassert solution('''4096''') == '8 9'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''15''') == '10 2'\nassert solution('''10''') == '10 1'\nassert solution('''14''') == '10 2'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'10'\n) == '10 1'\nassert solution(\n'20'\n) == '10 1'\nassert solution(\n'5184'\n) == '6 4'\nassert solution(\n'1000'\n) == '2 9'\nassert solution(\n'123456789'\n) == '1 123456789'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 7 6\\nrsrpr\\n') == '27'\nassert solution('5 2\\n8 7 6\\nrsrpr') == '27'\nassert solution('10 10\\n1 9 8 9 7 6\\nzzz') == '45'\nassert solution('6 2\\n1 2 3 4 5 6\\nzzzzz') == '42'\nassert solution('3 3\\n1 2 3\\n2 2 3\\n1 2 3\\n1 1 1') == '6'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\n8 7 6\\nrsrpr') == '27'\nassert solution('3 3\\n4 5 6\\nzzppp') == '9'\nassert solution('3 2\\n4 5 6\\nrrrpr') == '0'\nassert solution('5 3\\n5 3 5 5\\nppppppppp') == '45'\nassert solution('5 4\\n5 5 5 5\\nppppppppp') == '55'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n8 7 6\\nrsrpr\") == \"27\"\n\"\"\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"27\"\nassert solution(\"5 2\") == \"27\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 1\") == \"5\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n8 7 6\\nrsrpr\\n') == '27'\n\"\"\""
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rsrpr') == '27'\nassert solution('rsrprr') == '27'\nassert solution('rsrprrp') == '27'\nassert solution('rsrprrps') == '27'\nassert solution('rsrprrpsrrp') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 2\\n8 7 6\\nr sr p r\\nrsrpr') == '27'\nassert solution('5 2\\n8 7 6\\nrsrpr') == '27'\nassert solution('5 5\\n8 7 6\\nrsrpr') == '27'\nassert solution('5 5\\n8 7 6\\nrsrpr') == '27'\nassert solution('5 5\\n8 7 6\\nrsrpr') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2\\n8 7 6\\nrrspr\\n') == '27'"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"2 2 1\") == 6\nassert solution(\"1000000000 1000000000 1000000000\") == 4000000000\n\"\"\"\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\"\nassert solution(\"2 2 1\") == \"6\"\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 1 2') == '7'\nassert solution('3 5 2') == '11'\nassert solution('2 2 1') == '6'\nassert solution('1000000000 1000000000 1000000000') == '4000000000'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"1000000000 1000000000 1000000000\") == 4000000000\n\n\"\"\"\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''2 1 2''') == '7'\nassert solution('''3 5 2''') == '11'\nassert solution('''2 2 1''') == '6'\nassert solution('''1000000000 1000000000 1000000000''') == '4000000000'"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 1 2') == '7'\nassert solution('3 5 2') == '11'\nassert solution('2 2 1') == '6'\nassert solution('1000000000 1000000000 1000000000') == '4000000000'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 1''') == 4\nassert solution('''2 1 2''') == 7\nassert solution('''3 5 2''') == 11\nassert solution('''1000000000 1000000000 1000000000''') == 4000000000\nprint(\"\")"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 1 2') == '7'\nassert solution('3 5 2') == '11'\nassert solution('1000000000 1000000000 1000000000') == '4000000000'"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"1000000000 1000000000 1000000000\") == 4000000000\nassert solution(\"10000000 50000000 1000000000\") == 100000004\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 5 18 4') == '4 1'\nassert solution('5 5 5') == '-1'\nassert solution('5 3 5 16 4') == '-1'\nassert solution('5 5 5 2 1') == '4 2'\nassert solution('5 3 5 18 4') == '4 2'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '4 1'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '-1'\nassert solution(stdin) == '4 1'\nassert solution(stdin) == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\nassert solution(\"5 3 5 15 4\") == \"4 1\"\nassert solution(\"5 3 5 12 4\") == \"4 1\"\nassert solution(\"5 3 5 11 4\") == \"4 1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 5 18 4') == '4 1'\nassert solution('5 3 5 16 4') == '-1'\n\n\n\"\"\"\n\nfrom collections import Counter, defaultdict"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 5 15 4') == '4 1'\nassert solution('5 3 5 18 4') == '4 1'\nassert solution('1 2 3 4 5') == '-1'\nassert solution('2 2 3 4 4') == '-1'\nassert solution('5 3 5 19 4') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '-1'\nassert solution('3 5 5 18 4') == '4 1'\nassert solution('5 3 5 16 4') == '-1'\nassert solution('2 3 2 4') == '-1'\nassert solution('5 3 5 16 4') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3 5 18 4\n3 5 4''') == '4 1'\nassert solution('''5 3 5 16 4\n5 5 5''') == '-1'\nassert solution('''1 3 5 16 4\n1 5 5''') == '-1'\nassert solution('''2 3 3 1\n1 3 4''') == '-1'\nassert solution('''1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3 5 18 4\\n3 5 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\\n5 5 5\") == \"2 4\"\nassert solution(\"5 3 5 16 4\\n5 5 5\") == \"-1\"\nassert solution(\"5 3 5 16 4\\n5 5 5\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"harakiri\") == \"YES\"\nassert solution(\"yupie\") == \"YES\"\nassert solution(\"man\") == \"YES\"\nassert solution(\"nbo\") == \"NO\"\nassert solution(\"horse\") == \"NO\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('hkqsw') == 'YES'\nassert solution('kpizkqp') == 'YES'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ninja') == 'YES'\nassert solution('ninja') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('sumimasen') == 'YES'\nassert solution('horse') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('kajibok') == 'YES'\nassert solution('kubut') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('codeforces') == 'NO'\nassert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codechef') == 'YES'\nassert solution('cope') == 'YES'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'YES'\nassert solution('a') == 'NO'\nassert solution('man') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\n\"\"\""
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('codeforces') == 'NO'\n\"\"\""
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"4\"\nassert solution(\"7 0\\n\") == \"0\"\nassert solution(\"3 1\\n1 3\\n\") == \"1\"\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\") == \"16\"\nprint(solution(stdin.read()))\n\"\"\"\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4''') == '4'\nassert solution('''7 0''') == '0'\nassert solution('''3 1''') == '1'\nassert solution('''7 21''') == '16'\nassert solution('''5 10''') == '16'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"4\"\nassert solution(\"7 0\\n\") == \"0\"\nassert solution(\"3 1\\n1 3\\n\") == \"1\"\nassert solution(\"7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n\") == \"16\"\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4\\n1 2\\n2 3\\n3 4') == '4'\nassert solution('4 3\\n1 2\\n2 3\\n3 4') == '0'\nassert solution('7 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '1'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '16'\nassert solution('8 3\\n1 2\\n2 3\\n3 4\\n4 1\\n5 6\\n6 7\\n7 8\\n8 1\\n2 4\\n3 5\\n4 6\\n5 6') == '0'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 2\\n2 3\\n3 1') == '2'\nassert solution('7 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '0'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '1'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1') == '4'\nassert solution('7 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '0'\n\"\"\"\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 4\n1 2\n2 3\n3 4\n4 1\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n7 0\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 1\n1 3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1') == '4'\nassert solution('7 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '0'\nassert solution('3 1\\n1 3\\n') == '1'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7') == '16'\n\n\n'''\nfrom sys import stdin\nfrom collections import Counter"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == '4'\nassert solution('''7 0\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '0'\nassert solution('''3 1\n1 3\n''') == '1'\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\nassert solution('''6 0\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1\n''') == '0'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\n\nprint('solution:', solution('''7 5\n1 3 7 5\n3\n'''))\nprint('solution:', solution('''3 2\n10 3 8\n2 3\n'''))\nprint('solution:', solution('''2 2\n100 200\n1 2\n'''))\nprint('solution:', solution('''7 5\n1 3 7 5\n3\n'''))\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3\\n') == '18'\nassert solution('3 2\\n10 3 8\\n2 3\\n') == '40'\nassert solution('2 2\\n100 200\\n1 2\\n') == '400'\nassert solution('5 1\\n6 2 3 4 5\\n5\\n') == '60'\nassert solution('3 1\\n4 2 6\\n2\\n') == '2'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1\\n1 3 7 5\\n3\\n') == 18\nassert solution('3 2\\n10 3 8\\n2 3\\n') == 40\nassert solution('2 2\\n100 200\\n1 2\\n') == 400\nassert solution('4 10\\n1 3 7 5\\n3\\n') == 1772\nassert solution('2 3\\n10 3 8\\n2 3\\n') == 30\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\nassert solution('''1 2\n1 2\n''') == '400'\nassert solution('''3 2\n100 200\n1 2\n''') == '400'\nassert solution('''3 2\n1 2\n100 200\n1 2\n''') == '400'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\n\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\n\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\n\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\n\nassert solution('''3 1\n1 1 1\n2\n''') == '2'"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[9:-1]\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\nassert solution('''2 2\n100 200\n1 2\n''') == '400'"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\nassert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"40\"\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\""
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 7 5\\n3\\n') == '18'\nassert solution('1 3 7 5\\n3\\n') == '40'\nassert solution('2 3\\n10 3 8\\n2 3\\n') == '400'\nassert solution('2 3\\n100 200\\n1 2\\n') == '400'\nassert solution('1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\n\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\n\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\n\nassert solution('''3 2\n1 3 7 5\n3\n''') == '18'\n\nassert solution('''5 2\n1 5 4 3 9 8\n3\n''') == '40'"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\nfrom functools import reduce\nfrom operator import add\n\nm = [int(x) for x in sys.stdin.readline().split()]\nw = [int(x) for x in sys.stdin.readline().split()]\nh = [int(x) for x in sys.stdin.readline().split()]"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n20 40 60 80 100\n0 1 2 3 4\n1 0\n\"\"\") == \"4900\"\n\nassert solution(\n\"\"\"\n119 119 119 119 119\n0 0 0 0 0\n10 0\n\"\"\") == \"4930\"\n\nassert solution(\n\"\"\"\n119 119 119 119 119\n0 0 0 0 0\n10 0\n\"\"\") == \"4930\"\n\nassert solution(\n\"\"\"\n20 40 60 80 100\n0 1 2 3 4\n1 0\n\"\"\") == \"4930\"\n\nassert solution(\n\"\"\"\n20 40 60 80 100\n0 1 2 3 4\n0 0 0 0 0\n10 0\n\"\"\") == \"4930\""
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''20 40 60 80 100''') == '4900'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''20 40 60 80 100''') == '4930'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''20 40 60 80 100''') == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n\nfrom __future__ import annotations\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20 40 60 80 100''') == '4900'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''20 40 60 80 100''') == '4930'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''119 119 119 119 119''') == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 40 60 80 100''') == '4930'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''119 119 119 119 119''', '0 1 2 3 4', '1 0') == '4930'\n'''\n\n'''\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n') == '4900'\nassert solution('119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n') == '4930'\nassert solution('119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n') == '4930'\nassert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n') == '4900'\nassert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n') == '4900'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 40 60 80 100') == '4900'\nassert solution('20 40 60 80 100\\n0 0 0 0 0\\n10 0') == '4930'\nassert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0') == '4930'\nassert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n10 0') == '4930'\nassert solution('20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n0 0') == '4930'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"20 40 60 80 100\") == \"4900\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\nassert solution(\"119 119 119 119 119\") == \"4930\"\nassert solution(\"20 40 60 80 100\") == \"4930\"\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('2 3 2 3') == '2'\nassert solution('2 3 2 3') == '2'\nassert solution('2 3 2 3') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''2 1 1 2''') == '1'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 2 1 1'''\n) == '1'\n\nassert solution(\n'''1 2 1 2'''\n) == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('2 2 1 2') == '2'\nassert solution('1 2 1 2') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\"\n\n\"\"\"\n\ni\n\n---\n\nj\n\n\"\"\"\n\nn,m,l,r = map(int,stdin.split())"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 2 2') == '4'\nassert solution('1 2 2 3') == '5'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"2 2 1 1\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"1 2 1 2\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''3 3 1 1''') == '6'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Possible'\nassert solution('1\\n1') == 'Possible'\nassert solution('2\\n2\\n1') == 'Possible'\nassert solution('1\\n1\\n2') == 'Possible'\nassert solution('1\\n1\\n1') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n'''\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('3 2') == 'Possible'\nassert solution('3 3') == 'Possible'\nassert solution('2 1') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12') == 'Possible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n') == 'Impossible'\nassert solution('2 3\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n') == 'Possible'\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n9 4\\n3 1 3\\n3 6 7') == \"Impossible\"\nassert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n3 1 3\\n3 6 7\\n8 10 11') == \"Possible\"\nassert solution('3 3\\n1 3 4\\n2 4 5\\n5 6 7\\n6 7 8\\n8 9 10\\n9 10 11\\n11 12') == \"Possible\"\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('1 1') == 'Possible'\nassert solution('2 2') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\n2 10\n11 5\n9 4\n3 12''') == 'Possible'\nassert solution('''2 3\n2 4 5\n4 5 6\n3 6 7\n8 10 11\n3 1 3\n3 6 7\n4 8 10\n4 5 6\n4 5 6\n''') == 'Impossible'\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n8 10\\n11 5\\n9 4') == 'Possible'\nassert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n3 6\\n4 8\\n8 10\\n11 5\\n9 4') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n8 10\\n11 5\\n9 4') == 'Impossible'\nassert solution('4 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n8 10\\n11 5\\n9 4') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n8 10\\n11 5\\n9 4') == 'Possible'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'cbc'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\", ) == \"\"\nassert solution(\"a\", ) == \"a\"\nassert solution(\"a\", \"b\") == \"\"\nassert solution(\"a\", \"b\", \"c\") == \"\"\nassert solution(\"a\", \"b\", \"c\", \"d\") == \"\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 5 5\") == \"11\"\nassert solution(\"3\\n2 5 5\") == \"3\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"2\\n1 1 2\") == \"3\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 2') == '3'\nassert solution('2 5 5') == '11'\nassert solution('3') == '3'\nassert solution('1 1 2') == '3'\nassert solution('2 1 1') == '3'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1 1\\n') == '1'\nassert solution('3\\n1 1 2\\n') == '3'\nassert solution('3\\n2 3 3\\n') == '4'\nassert solution('3\\n1 3 2\\n') == '4'\nassert solution('3\\n1 1 1\\n') == '4'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('a') == 'a'\nassert solution('bbbbb') == 'b'\nassert solution('ccccccccc') == 'c'\nassert solution('bccccccccc') == 'b'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aabcbcbcbcb\") == \"aabcbcbcbcb\"\nassert solution(\"acc\") == \"acc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"bbbbbbbbbb\") == \"bbbbbbbbbb\"\nassert solution(\"aabbbb\") == \"aabbbb\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 5 5\") == \"11\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"3\"\nassert solution(\"3\\n3 3 2\") == \"6\"\nassert solution(\"3\\n4 2 4\") == \"5\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('c') == 1\nassert solution('cc') == 2\nassert solution('aabc') == 3\nassert solution('aabcbcbcbcb') == 11\nassert solution('aaaa') == 1\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\nTest Results\n----------"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 9\") == \"1\"\nassert solution(\"4 20\") == \"0\"\n\n\n\"\"\"\n\nimport sys\nfrom itertools import accumulate"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 20\n10 3 6 3\"\"\"\n) == '0'\n\"\"\"\n'''"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input('')) == input('')\n'''\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nd = sorted(a)"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"\"\nassert solution(\"2 1 9\") == \"1\"\nassert solution(\"4 20\") == \"0\"\nassert solution(\"10 3 6 3\") == \"0\"\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n\n\n-----Details-----\n\n\"\"\"\n\nn,k = (int(s) for s in stdin.split())\na = list(int(s) for s in stdin.split())"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 9') == '1'\nassert solution('4 20\\n10 3 6 3') == '0'\nassert solution('3 3\\n2 1 9') == '1'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n2 1 9\n''') == '1'\nassert solution('''4 20\n10 3 6 3\n''') == '0'\nassert solution('''5 8\n8 9 10 11\n''') == '1'\nassert solution('''5 8\n1 2 3 4 5\n''') == '1'\nassert solution('''3 2\n2 1 9\n''') == '1'\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 1 9\") == \"1\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\nassert solution(\"2 3\\n1 2 3\") == \"1\"\nassert solution(\"1 10\\n10 2 2\") == \"0\"\nassert solution(\"4 20\\n10 3 6 3\") == \"0\"\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n2 1 9\\n') == '1'\nassert solution('4 20\\n10 3 6 3\\n') == '0'\nassert solution('5 7\\n1 2 3 4 5\\n') == '5'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"1 2 3\"\nassert solution(input(\"\")) == \"2 2 2\"\nassert solution(input(\"\")) == \"2 3 5\"\nassert solution(input(\"\")) == \"1 2 3\"\nassert solution(input(\"\")) == \"2 2 2\"\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n1 5\\n2 6\\n3 7') == '1 2 3'\nassert solution('10\\n1 2\\n1 3\\n1 5\\n') == '2 3 5'\nassert solution('1\\n1\\n1\\n') == '1 1 1'\nassert solution('6\\n1 3\\n2 2\\n2 2\\n') == '2 2 2'\nassert solution('6\\n1 5\\n2 6\\n3 7') == '1 2 3'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\n1 3\n1 5\n''') == '2 2 2'\nassert solution('''6\n1 5\n2 6\n3 7\n''') == '1 2 3'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2\\n1 3\\n1 5\\n') == '2 3 5'\nassert solution('2\\n1 2\\n1 3\\n1 5\\n') == '2 2 2'\nassert solution('10\\n1 2\\n1 3\\n1 5\\n') == '2 3 5'\nassert solution('10\\n1 2\\n1 3\\n1 5\\n') == '2 2 2'\nassert solution('3\\n1 2\\n2 2\\n2 2\\n') == '2 2 2'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 5\n2 6\n3 7''') == '1 2 3'\nassert solution('''10\n1 2\n1 3\n1 5\n''') == '2 3 5'\nassert solution('''6\n1 3\n2 2\n2 2\n''') == '2 2 2'\nassert solution('''10\n1 2\n1 3\n1 5\n''') == '2 2 2'\nassert solution('''4\n1 2\n2 2\n3 3\n''') == '2 2 2'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n1\n''') == '2 2 2'\nassert solution('''\n2\n1\n2\n1\n''') == '2 2 2'\nassert solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '1 1 1 1'\nassert solution('''\n5\n2 2\n2 2\n2 2\n2 2\n''') == '2 2 2'\nassert solution('''\n5\n3 3\n3 3\n3 3\n3 3\n''') == '3 3 3'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n6\n1 5\n2 6\n3 7\n'''\n    ) == '2 2 2'\n\nassert solution(\n'''\n10\n1 2\n1 3\n1 5\n'''\n    ) == '2 2 2'\n\nassert solution(\n'''\n6\n1 3\n2 2\n2 2\n'''\n    ) == '2 2 2'\n\nassert solution(\n'''\n10\n1 3\n2 1\n2 2\n2 2\n'''\n    ) == '2 2 2'\n\nassert solution(\n'''\n6\n1 2\n1 3\n1 5\n'''\n    ) == '2 2 2'"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 5\n2 6\n3 7''') == '1 2 3'\nassert solution('''10\n1 2\n1 3\n1 5\n''') == '2 3 5'\nassert solution('''6\n1 3\n2 2\n2 2\n''') == '2 2 2'\nassert solution('''1\n1\n1\n''') == '1 1 1'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 'UP'\nassert solution('5') == 'DOWN'\nassert solution('7') == '-1'\nassert solution('9') == '-1'\nassert solution('1') == 'UP'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n3 4 5 6 7') == 'UP'\nassert solution('7\\n12 13 14 15 14 13 12') == 'DOWN'\nassert solution('1\\n8') == '-1'\nassert solution('7\\n18 19 18 19 18 19 18') == '-1'\nassert solution('7\\n7') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 1\") == \"UP\"\nassert solution(\"4\\n2 1 1 1\") == \"DOWN\"\nassert solution(\"4\\n3 1 1 1\") == \"-1\"\nassert solution(\"4\\n4 1 1 1\") == \"DOWN\"\nassert solution(\"4\\n5 1 1 1\") == \"UP\"\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[1:]\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == 'UP'\nassert solution('''7''') == 'DOWN'\nassert solution('''1''') == '-1'\nassert solution('''9''') == '-1'\nassert solution('''12''') == 'UP'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n3 4 5 6 7''') == \"UP\"\nassert solution('''7\n12 13 14 15 14 13 12''') == \"DOWN\"\nassert solution('''1\n8''') == \"-1\"\n'''\n\nprint(solution(input()))\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3 4 5 6 7\\n') == 'UP'\nassert solution('7\\n12 13 14 15 14 13 12\\n') == 'DOWN'\nassert solution('1\\n8\\n') == '-1'\n\n\"\"\""
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"UP\"\nassert solution(\"7\") == \"DOWN\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"12\") == \"DOWN\"\nassert solution(\"12\") == \"DOWN\"\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('akm') == 'No'\nassert solution('ua') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('e') == 'Yes'\nassert solution('i') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('a') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"akm\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"m\") == \"No\"\nassert solution(\"akma\") == \"Yes\"\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == \"Yes\"\nassert solution('u') == \"Yes\"\nassert solution('abc') == \"Yes\"\nassert solution('akm') == \"No\"\nassert solution('ua') == \"No\"\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'Yes'\nassert solution('e') == 'Yes'\nassert solution('i') == 'Yes'\nassert solution('o') == 'Yes'\nassert solution('u') == 'Yes'"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"Yes\"\nassert solution(\"u\") == \"Yes\"\nassert solution(\"akm\") == \"No\"\nassert solution(\"ka\") == \"No\"\nassert solution(\"kak\") == \"Yes\"\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('a-bc') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('akm') == 'Yes'\nassert solution('ua') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('e') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('akm') == 'Yes'\nassert solution('ak') == 'No'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('........\\n....W....\\n........\\n..W.....\\n........\\n........\\n........') == 'A'\nassert solution('..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\nassert solution('......B.\\n......B.\\n........\\n........\\n........\\n........\\n........') == 'B'\n\n\n\"\"\"\n\nfrom collections import Counter, defaultdict\n\nclass Solution:\n    def solution(self, board: str) -> str:\n        rows = len(board)\n        if rows == 0:\n            return ''\n        cols = len(board[0])\n        if cols == 0:\n            return ''\n        \n        rows_idx = defaultdict(set)\n        cols_idx = defaultdict(set)\n        \n        for r in range(rows):\n            for c in range(cols):\n                if board[r][c] == 'B':\n                    rows_idx[r].add(c)\n                if board[r][c] == 'W':\n                    cols_idx[c].add(r)\n        \n        steps = 0\n        for r in range(rows):\n            for c in range(cols):\n                if board[r][c] == 'B':\n                    steps += len(rows_idx[r])\n                    rows_idx[r].clear()\n                if board[r][c] == 'W':\n                    steps += len(cols_idx[c])\n                    cols_idx[c].clear()\n        \n        return 'A' if steps == 0 else 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n........\\n') == 'B'\nassert solution('..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'A'\nassert solution('........\\n........\\n........\\n........\\n........\\n........\\n........\\n') == 'B'\nassert solution('...B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n........\\n') == 'B'\nassert solution('.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n.......\\n') == 'A'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('.B.....\\n.W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'A'\nassert solution('.B.....\\n.W.....\\n.B....B.\\n........\\n.W.....\\n.B....B.\\n........\\n........') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n......B.\n..W.....\n......B.\n........\n.....W..\n.....B..\n........\n........\n''') == 'B'\nassert solution(\n'''\n..B.....\n..W.....\n......B.\n........\n.....W..\n.....B..\n........\n........\n''') == 'A'\n'''\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''........\n......B.\n........\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\nassert solution('''B.....\n..W.....\n......B.\n........\n....W...\n........\n........\n........\n''') == 'A'\nassert solution('''B.....\n..W.....\n......B.\n........\n....W...\n........\n........\n........\n''') == 'B'\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"........\\n....W...\\n........\\n..W.....\\n........\\n........\\n........\") == \"A\"\nassert solution(\"..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........\") == \"B\"\n\n\n\n'''\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('...B.\\n....W.\\n.B.....\\n........\\n........\\n........\\n........\\n........') == 'A'\nassert solution('..W.....\\n..B.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\nassert solution('.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........\\n........\\n') == 'A'\nassert solution('.B....B.\\n....W...\\n........\\n..B.....\\n........\\n........\\n........\\n') == 'B'\nassert solution('.B....B.\\n....W...\\n........\\n..B.....\\n........\\n........\\n........\\n') == 'A'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........''') == 'A'\nassert solution('''B.....\n....W...\n........\n..W.....\n........\n........\n........\n........''') == 'B'\nassert solution('''......B.\n........\n..W.....\n........\n........\n....W...\n........\n..B.....''') == 'B'\nassert solution('''........\n........\n........\n........\n........\n......B.\n........\n..B.....''') == 'A'\nassert solution('''.......\n...B...\n...W...\n........\n....W...\n....W...\n.......''') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"A\"\n\"\"\"\n\nfrom typing import Iterable\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\n\nassert solution('''\n.......\n......B.\n.....W..\n....W...\n......B.\n.......\n''') == 'B'\n\nassert solution('''\n.......\n......B.\n.....W..\n....W...\n....B...\n.......\n''') == 'B'\n\nassert solution('''\n..B.....\n..W.....\n......B.\n........\n........\n........\n''') == 'A'\n\nassert solution('''\n..B.....\n..W.....\n......B.\n.........\n.........\n''') == 'B'\n'''\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == \"3\"\nassert solution('''2\n1 2\n1\n100\n''') == \"-1\"\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == \"3\"\nassert solution('''7\n1 2 3 4 5 6 7\n1\n1\n''') == \"3\"\nassert solution('''4\n1 2 3 4\n1\n1\n1\n1\n1\n1\n''') == \"-1\"\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n5\\n1 2 3 5 7\\n4\\n1 2 3 5 7\\n') == '3'\nassert solution('2\\n1 2\\n1\\n100') == '-1'\nassert solution('2\\n1 2\\n1\\n1000') == '-1'\nassert solution('3\\n1 2 3\\n3\\n1 2 3\\n') == '3'\nassert solution('3\\n1 2 3\\n3\\n1 2 3\\n') == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n') == '-1'\nassert solution('3\\n1 2\\n1\\n1\\n') == '-1'\nassert solution('3\\n1 2\\n1\\n1\\n') == '3'\nassert solution('3\\n1 2\\n1\\n1\\n') == '3'\nassert solution('2\\n1 2\\n1\\n1\\n') == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer()\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n\nassert solution('''7\n1 2 3 4 5 6 7\n2\n1 2 3 4 5\n''') == '5'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '-1'"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '-1'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n\n\n\n'''\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\nassert solution('Alex_And_Break_contest') == 'NO'\nassert solution('Alex_And_Olya_') == 'YES'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(Alex_and_broken_contest) == \"NO\"\nassert solution(Nikita_and_String) == \"YES\"\nassert solution(Alex_and_Olya) == \"YES\"\nassert solution(Nikita_and_Nikita) == \"NO\"\nassert solution(Nikita_and_Danil) == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\""
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(Alex_and_broken_contest) == \"NO\"\nassert solution(Nikita_and_String) == \"YES\"\nassert solution(Nikita_and_Text_2) == \"YES\"\nassert solution(Nikita_and_Text_3) == \"YES\"\nassert solution(Nikita_and_Text_4) == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(Alex_and_broken_contest) == \"NO\"\nassert solution(NikitaAndString) == \"YES\"\nassert solution(Danil_and_Olya) == \"NO\"\nassert solution(Kalin_and_Kolya) == \"NO\"\n\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 3') == '4'\nassert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('10 10 5') == '-1'\nassert solution('13 9 11') == '7'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4 2''') == '3'\nassert solution('''6 13 1''') == '4'\nassert solution('''1 4 3''') == '-1'\nassert solution('''1 1 1''') == '-1'\nassert solution('''4 5 4''') == '4'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4 2''') == '3'\nassert solution('''6 13 1''') == '4'\nassert solution('''1 4 3''') == '-1'\nprint('Test cases passed')"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n\n\"\"\""
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4'\nassert solution('1 2 3') == '-1'\nassert solution('1 1 1') == '1'\nassert solution('6 13 1') == '4'\nassert solution('2 4 2') == '3'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == -1\nassert solution('6 13 1') == 4\nassert solution('2 4 2') == 3\nassert solution('6 13 1') == 4\nassert solution('1 4 3') == -1\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\nassert solution('15 1 2') == '2'\nassert solution('1 10 2') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n'''"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n\"\"\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 18 13\") == \"0.5\"\nassert solution(\"4 4 4\") == \"-1\"\nassert solution(\"3 4 3\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 18 13\") == \"0.5\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"3 4 3\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 18 13\") == \"0.5\"\nassert solution(\"4 4 4\") == \"0\"\nassert solution(\"3 4 3\") == \"-1\"\nassert solution(\"5 4 3\") == \"-1\"\nassert solution(\"5 9 9\") == \"-1\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 18 13''') == '0.5'\nassert solution('''4 4 4''') == '0'\nassert solution('''3 4 3''') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 18 13''') == '0.5'\nassert solution('''4 4 4''') == '0'\nassert solution('''3 4 3''') == '-1'\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'\nassert solution('1000000000 1000000000 1000000000\\n') == '-1'\nassert solution('1000 1000000000 1000000000\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 18 13''') == '0.5'\nassert solution('''4 4 4''') == '0'\nassert solution('''3 4 3''') == '-1'\nassert solution('''2 1 1''') == '0.5'\nassert solution('''1 10 10''') == '0.5'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''1\n1 7\n4\n''') == '1'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''2\n1 4\n5 9\n10 12\n9\n''') == '1'\nassert solution('''2\n1 4\n7\n''') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n4 7\\n8 11\\n2') == '3'\nassert solution('1\\n4\\n5 9\\n10 12\\n9') == '2'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9') == '1'\nassert solution('1\\n1 7\\n4') == '1'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9') == '0'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9\\n') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''1\n1 7\n4\n''') == '1'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '0'\nassert solution('''3\n1 4\n5 9\n10 12\n11\n''') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9''') == '2'\nassert solution('''1\n1 7\n4''') == '1'\nassert solution('''10\n1 7\n4\n1 3\n5 9\n10 12\n9\n2\n6\n5\n4\n3\n2\n1\n''') == '1'\nassert solution('''5\n1 3\n4 7\n8 11\n2\n6''') == '3'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('1\\n1 7\\n4') == '1'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('2\\n1 7\\n4') == '2'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('1 4\\n5 9\\n10 12\\n9') == '2'\nassert solution('1\\n1 7\\n4') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('TEMPLATE') == 'TEMPLE'\nassert solution('TEMPLATE') == 'TEMPLE'\nassert solution('TEMPLE') == 'TEMPLE'\nassert solution('TEMPLE') == 'TEMPLE'\nassert solution('TEMPLE') == 'TEMPLE'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('TEMPLATE') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nprint(\"OK\")\n\n\"\"\"\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('foo') == ''\nassert solution('hello, world!') == ''\nassert solution('FORCES') == 'NO'\nassert solution('CODEFORCES') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'YES'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DOGEFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'NO'\nprint('All set! Click \"Check\" now')\n\"\"\"\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DOGEFORCES') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('TEMPLE') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n\nprint(solution(input()))\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('TEMPLATE') == 'YES'\nassert solution('ATCODEE') == 'NO'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\n\"\"\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\n\n\"\"\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\nassert solution(\"5\") == \"36\"\nassert solution(\"6\") == \"72\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\nassert solution(\"5\") == \"10\"\nassert solution(\"6\") == \"18\"\nassert solution(\"7\") == \"26\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '6'\nassert solution('4\\n') == '18'\nassert solution('10\\n') == '0'\n\n\n-----"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\nassert solution(\"5\") == \"23\"\nassert solution(\"6\") == \"34\"\nassert solution(\"7\") == \"49\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"18\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1 3\") == \"2\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\"\"\") == \"6\"\nassert solution(\"\"\"4\"\"\") == \"18\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"9\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n13\n\"\"\"\n) == '17'\n\nassert solution(\n\"\"\"\n4\n\"\"\"\n) == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('10') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"13\") == \"17\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"9\") == \"2\"\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('13\\n') == '17'\nassert solution('4\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n') == '17'\nassert solution('4\\n1\\n2\\n3\\n') == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\nassert solution('14') == '18'\nassert solution('10') == '10'\nassert solution('1') == '1'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n13\n\"\"\") == \"17\"\nassert solution(\"\"\"\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n2\n3\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6\n7\n8\n9\n10\n11\n\"\"\") == \"6\"\nassert solution(\"\"\"\n0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13') == '17'\nassert solution('4') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('3 2') == '1'\nassert solution('2 2') == '-1'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n2 1 4 2\n''') == '2'\n\nassert solution('''5 2\n2 2 4 5 3\n''') == '-1'\n\nassert solution('''3 10\n1 2 3\n''') == '4'\n\nassert solution('''5 3\n1 2 3 4 5\n''') == '1'\n\nassert solution('''5 3\n5 2 3 4 5\n''') == '2'"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1\\n2 1 4 2\\n') == '2'\nassert solution('5 2\\n2 2 4 5 3\\n') == '-1'\nassert solution('3 10\\n1 2 3\\n') == '4'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1\n2 1 4 2''') == '2'\nassert solution('''5 2\n2 2 4 5 3''') == '-1'\nassert solution('''3 10\n1 2 3''') == '4'\nassert solution('''4 10\n2 2 4 5 3''') == '-1'\nassert solution('''4 2\n2 2 4 5 3''') == '4'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1\n2 1 4 2''') == '2'\nassert solution('''5 2\n2 2 4 5 3''') == '-1'\nassert solution('''3 10\n1 2 3''') == '4'\nassert solution('''1 1 1 1 1 1\n1 1 1 1 1 1''') == '1'\nassert solution('''2 1\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1') == '2'\nassert solution('5 2') == '-1'\nassert solution('3 10') == '4'\nassert solution('3 1') == '2'\nassert solution('1 2 3') == '-1'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 3\nassert solution('2\\n2\\n3') == -1\nassert solution('3\\n2\\n3') == -1\nassert solution('4\\n2\\n3') == 2\nassert solution('5\\n2\\n3') == -1\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1') == '2'\nassert solution('5 2') == '-1'\nassert solution('3 10') == '4'\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == 1\nassert solution(\"1\\n1\") == 1\nassert solution(\"1\\n1\") == 1\nassert solution(\"1\\n1\") == 1\nassert solution(\"2\\n1 2 4 2\") == 2\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1\n2 1 4 2''') == '2'\nassert solution('''5 2\n2 2 4 5 3''') == '-1'\nassert solution('''3 10\n1 2 3''') == '4'\nassert solution('''2 2 1\n2 1 4 2''') == '4'\nassert solution('''1 1 1\n1 1 1''') == '1'"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''2 10\n3 3 2\n''') == 'YES'\nassert solution('''4 5\n1 2 3 4\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'NO'\nassert solution('''2 10\n2 1 3\n''') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n1 3') == 'NO'\nassert solution('2 4\\n1 3') == 'NO'\nassert solution('2 4\\n1 3\\n2 4') == 'NO'\nassert solution('2 4\\n1 3\\n2 4\\n1 2') == 'NO'\nassert solution('2 4\\n1 3\\n2 4\\n1 2\\n3 4') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 3\n\"\"\".strip()) == \"YES\"\n\nassert solution(\n\"\"\"\n4 8\n3 1 2 3 4\n\"\"\".strip()) == \"NO\"\n\nassert solution(\n\"\"\"\n4 8\n3 1 2 3\n\"\"\".strip()) == \"NO\"\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 3\n\"\"\"\n) == 'NO'\n\nassert solution(\n\"\"\"\n3 10\n3 3 2\n\"\"\"\n) == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''2 10\n1 3\n''') == 'NO'\nassert solution('''3 8\n6 3 4\n''') == 'YES'\nassert solution('''3 6\n4 6 6\n''') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"NO\"\nassert solution(\"2\\n1 3\") == \"NO\"\nassert solution(\"3\\n1 3\") == \"YES\"\nassert solution(\"2\\n3 2\") == \"NO\"\nassert solution(\"3\\n3 2\") == \"YES\"\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''2 10\n1 3\n''') == 'NO'\nassert solution('''5 10\n5 3 1 2\n''') == 'YES'\nassert solution('''3 10\n3 3 2\n''') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'NO'\nassert solution('1 3') == 'YES'\nassert solution('2 4') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10\\n') == 1\nassert solution('1 1\\n') == 1\nassert solution('2 100\\n') == 1\nassert solution('1 100\\n') == 2\nassert solution('2 100\\n') == 2\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('10 23') == '3'\n\n\"\"\"\n\nimport sys\nfrom math import floor, ceil"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('4 1') == '1'\nassert solution('6 17') == '2'\nassert solution('5 9') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('10 10') == '3'\nassert solution('10 1000') == '3'\nassert solution('1000 100') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 11''') == '3'\nassert solution('''6 16''') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 11') == '3'\nassert solution('6 16') == '3'\nassert solution('1 100') == '-1'\nassert solution('2 10') == '-1'\nassert solution('7 100') == '1'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('1 2') == '-1'\nassert solution('4 5') == '-1'\nassert solution('5 17') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 11''') == '3'\nassert solution('''6 16''') == '3'\nassert solution('''1 2''') == '-1'\nassert solution('''1 2 3''') == '-1'\nassert solution('''1 2 3 4''') == '-1'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 8') == 3\nassert solution('5 11') == 3\nassert solution('6 16') == 3\nassert solution('5 2') == 0\nassert solution('5 3') == 2\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabc') == 'abcabc'\nassert solution('aabcd') == 'abcba'\nassert solution('aabcdefg') == 'abcba'\nassert solution('aaaaaaaa') == 'aaaaaaaa'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\nassert solution('a') == 'a'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aab') == 'baa'\nassert solution('aba') == 'aba'\nassert solution('baa') == 'baa'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\nassert solution('x') == 'x'\nassert solution('xxxxxx') == 'xxxxxx'\nassert solution('xabx') == 'abxab'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcabc') == 'aabbc'\nassert solution('abcd') == 'aabcd'\nassert solution('abcdabc') == 'aabcdabc'\nassert solution('aa') == 'aa'\nassert solution('ab') == 'ba'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(aabc) == abba\nassert solution(aabcd) == abcba\nassert solution(a) == abba\nassert solution(abcd) == abcba\nassert solution('') == abba\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"abcdcba\") == \"abcba\"\nassert solution(\"abba\") == \"abba\"\nassert solution(\"abcdcba\") == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\nassert solution('zzzz') == 'zzzz'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rnbqkbnr/pppppppp/......../......../......../PPPPPPPP/RNBQKBNR w KQkq - 0 1') == 'Black'\nassert solution('rnbqkbnr/pppppppp/......../......../......../PPPPPPPP/RNBQKBNR w KQkq - 0 1') == 'Draw'\nassert solution('rnbqkbnr/pppppppp/......../......../......../PPPPPPPP/RNBQKBNR w KQkq - 0 1') == 'White'\nassert solution('rnbqkbnr/pppppppp/ppppppppp/pppppppp/PPPPPPPP/RNBQKBNR/8/4PPPP/8/8/8/8 w KQkq - 0 1') == 'White'\nassert solution('rnbqkbnr/pppppppp/ppppppppp/pppppppp/PPPPPPPP/RNBQKBNR/8/4PPPP/8/8/8/8 w KQkq - 0 1') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n.........\\npppppppp\\nrnbqkbnr\") == \"White\"\nassert solution(\"rnbqkbnr\\npppppppp\\n.........\\n.........\\n.........\\n.........\\npppppppp\\nrnbqkbnr\") == \"Black\"\nassert solution(\"rnbqkbnr\\npqpppppp\\n.........\\n.........\\n.........\\n.........\\npppppppp\\nrnbqkbnr\") == \"Draw\"\nassert solution(\"rnbqkbnr\\npqpppppp\\n..k....p\\n.........\\n.........\\n.........\\n.........\\npppppppp\\nrnbqkbnr\") == \"Black\"\nassert solution(\"rnbqkbnr\\npqpppppp\\n..r....k\\n.........\\n.........\\n.........\\n.........\\npppppppp\\nrnbqkbnr\") == \"Draw\"\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR''') == 'Black'\n\nassert solution('''rnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr''') == 'Draw'\n\nassert solution('''rppppppr\n........\n........\n........\n........\nK...Q...\n........\nk......\n........''') == 'White'\n\n\n'''\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n.........\\n.........\\npppppppp') == 'White'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n.........\\n.........\\npppppppp') == 'Black'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n.........\\n.........\\nBPPPPRPP') == 'Black'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n.........\\n.........\\npppppppp') == 'Draw'\nassert solution('rnbqkb1nr\\nkppp1ppp\\n.........\\n.........\\n.........\\n.........\\n.......b\\nPPPPPPPP') == 'White'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"White\"\n\"\"\"\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\n........\\nrnbqkbnr\\nrnbqkbnr\\nrnbqkbnr\\nrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbqrnbq"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('rnbqkbnr') == 'Black'\nassert solution('rnbqkbnr') == 'Black'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rnbqkbnr') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('rnbqkbnr\\n'\n                 'pppppppp\\n'\n                 '........\\n'\n                 '........\\n'\n                 '........\\n'\n                 '........\\n'\n                 'P...K...\\n'\n                 '........\\n'\n                 '...R...\\n') == 'Black'\nassert solution('rnbqkbnr\\n'\n                 'pppppppp\\n'\n                 '........\\n'\n                 '........\\n'\n                 '........\\n'\n                 'P...Q...\\n'\n                 '...R...\\n'\n                 '...Q...\\n') == 'Black'\nassert solution('rnbqkbnr\\n'\n                 'pppppppp\\n'\n                 '........\\n'\n                 'b....k...\\n'\n                 '.......p\\n'\n                 '..R...R..\\n'\n                 '........\\n'\n                 '..RR.PP..\\n'\n                 '......R..\\n'\n                 '......R..\\n') == 'Black'\nassert solution('rnbqkbnr\\n'\n                 'pppppppp\\n'\n                 'kppppppp\\n'\n                 'p....p..\\n'\n                 '.P......\\n'\n                 '.P......\\n'\n                 'pppppppp\\n'\n                 '......K..\\n'\n                 '..PPPPPP..\\n'\n                 '..PPPPPP..\\n'\n                 '.......R..\\n'\n                 '.......R..\\n') == 'White'\nassert solution('rnbqkbnr\\n'\n                 'pppppppp\\n'\n                 '........\\n'\n                 '........\\n'\n                 'kppppppp\\n'\n                 '...p...\\n'\n                 '.P....\\n'\n                 '........\\n'\n                 'PPPPPPPP\\n'\n                 'PPPPPPPP\\n'\n                 'PPPPPPPP\\n'\n                 'PPPPPPPP\\n'\n                 'PPPPPPPP\\n') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR''') == \"White\"\nassert solution('''rnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr''') == \"Draw\"\nassert solution('''rnbqkbnr\nkppppppp\npRNBQKBNR\nrnbppppr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr''') == \"Black\"\nassert solution('''rnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr''') == \"Black\"\nassert solution('''rnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr\nrnbqkbnr''') == \"Black\"\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"QK...\n........\n........\n........\n........\n........\n........\n...rk...\n\"\"\") == \"White\"\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR\n\"\"\") == \"Draw\"\nassert solution(\n\"\"\"rppppppr\n...k....\n........\n........\n........\n........\nK...Q...\n........\n\"\"\") == \"Black\"\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nrnbqkbnr\n\"\"\"\n) == \"Draw\"\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n...P...\n...P...\n...P...\nPPPPPPPP\n..P..PPP\n.P..PPP.\n.......\n.......\n\"\"\"\n) == \"White\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 3 2 3\"\nassert solution(\"0 0 1 0 0 0 0 1 1 1 1\") == \"1 3 2 3\"\nassert solution(\"0 0 1 0 0 0 0 1 1 1 1\") == \"1 3 2 3\"\nassert solution(\"1 0 1 0 0 0 0 1 1 1 1\") == \"1 3 2 3\"\nassert solution(\"1 0 1 0 0 0 0 1 1 1 1\") == \"1 3 2 3\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9 3\n0001000100''') == '1 3 2 3'\nassert solution('''9 3\n0001000100''') == '-1'\nassert solution('''9 3\n01111100''') == '1 3 2 3'\nassert solution('''9 3\n111111001''') == '-1'\nassert solution('''9 3\n0001000100''') == '1 3 2 3'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == -1\nassert solution('0') == -1\nassert solution('111') == -1\nassert solution('0 0') == -1\nassert solution('01234567') == -1\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9 3\\n0001000100\\n\") == \"1 3 2 3\"\nassert solution(\"2 1\\n001\") == \"-1\"\nassert solution(\"5 1\\n00000010000\\n\") == \"2 3 4 5\"\nassert solution(\"4 1\\n0001000001\\n\") == \"2 4 1 2\"\nassert solution(\"3 1\\n0001000001\\n\") == \"-1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution(\n'''6 5\n11111\n01110\n''') == '1 3 2 4'\nassert solution(\n'''6 5\n11111\n00100\n''') == '1 2 3 4'\nassert solution(\n'''6 5\n11111\n00100\n00100\n00100\n''') == '1 3 4 5'\nassert solution(\n'''6 5\n11111\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n00100\n''') == '1 3 4 5'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"2\"\nassert solution(\"11\") == \"1 2\"\nassert solution(\"111\") == \"1 1 1\"\nassert solution(\"1111\") == \"1 1 1 1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9 3\n0001000100''') == '1 3 2 3'\nassert solution('''7 7\n1 1 1 0 0 1 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '-1'\nassert solution('''6 8\n1 1 1 0 1 0 1\n1 1 1 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '1 3 2 3'\nassert solution('''6 8\n1 1 1 0 1 0 1\n1 1 1 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '-1'\nassert solution('''5 7\n1 1 1 0 1 0 1\n1 1 1 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n1 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0''') == '1 3 2 3'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"9 3\\n0001000100\") == \"1 3 2 3\"\nassert solution(\"5 5\\n010111\") == \"-1\"\nassert solution(\"7 4\\n000000\") == \"-1\"\nassert solution(\"4 2\\n0000\") == \"-1\"\nassert solution(\"1 3\\n\") == \"-1\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 0\") == \"-1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 0 1\") == \"2\"\nassert solution(\"1 0 1 1\") == \"2 3\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"1 3 2 3\"\nassert solution
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n-1 2\\n-1 -1\\n3 0\\n4 4\\n-1 -1\\n2 0\\n2 0') == '3\\n7 4\\n2 10'\nassert solution('6\\n-1 2\\n-1 -1\\n3 0\\n4 4\\n-1 -1\\n2 0\\n2 0') == '-1'\nassert solution('7\\n1 1\\n-1 -1\\n1 2\\n-1 0\\n0 2\\n2 0') == '4\\n4 4\\n2 10'\nassert solution('7\\n1 1\\n-1 -1\\n1 2\\n-1 0\\n0 2\\n2 0') == '-1'\nassert solution('7\\n1 1\\n-1 -1\\n1 2\\n-1 0\\n0 2\\n2 0') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"2\") == \"-1 2\"\nassert solution(\"10\") == \"3\\n7 4\\n2 10\\n-1 2\"\nassert solution(\"-1\") == \"-1 2\"\nassert solution(\"11\") == \"3\\n7 4\\n2 10\\n-1 2\"\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"-1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"-1 2\") == \"7 4\"\nassert solution(\"0 0\") == \"0 0\"\nassert solution(\"1 2\") == \"-1 2\"\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10'\nassert solution('11\\n-1 2\\n3 1\\n-2 -2\\n4 -4\\n4 5') == '-1 2\\n3 1\\n2 -2\\n4 -4\\n4 5'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-1\\n2\\n2') == '-1 2\\n2 10\\n2 9'\nassert solution('2\\n-1\\n2\\n2') == '-1 2\\n2 9\\n2 8'\nassert solution('1\\n-1\\n2\\n2') == '3\\n7 4\\n2 10'\nassert solution('2\\n-1\\n2\\n2') == '-1 2\\n2 8\\n2 7'\nassert solution('3\\n-1\\n2\\n2') == '-1 2\\n2 8\\n2 6'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('11\\n-1 2\\n9 0') == '9\\n9 9\\n7 9\\n7 9\\n7 9'\nassert solution('11\\n-1 2\\n9 0\\n9 0') == '-1'\nassert solution('11\\n-1 2\\n9 0\\n9 0\\n9 0') == '-1'\nassert solution('11\\n-1 2\\n9 0\\n9 0\\n9 0\\n9 0') == '9'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11\\n-1 2\\n') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('11\\n0 0\\n') == '-1'\nassert solution('11\\n0 0\\n') == '-1'\nassert solution('11\\n-1 2\\n') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('11\\n0 0\\n') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''11\n-1 2\n''') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution(\n'''11\n2 1\n''') == '-1'\nassert solution(\n'''11\n7 1\n''') == '-1'\nassert solution(\n'''11\n2 1\n''') == '-1'\nassert solution(\n'''11\n7 2\n''') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('11\\n1 2') == '3\\n7 4\\n2 -1'\nassert solution('11\\n1 0') == '3\\n-1 1\\n-1 0'\nassert solution('11\\n-1 0') == '3\\n-1 1\\n0 0'\nassert solution('11\\n0 0') == '3\\n0 0\\n0 0'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('10') == '-1'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('100') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('1\\n1') == '8'\nassert solution('8\\n1') == '54'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('1') == '8'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '8'\nassert solution('8\\n') == '54'\nassert solution('10\\n') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"8\"\nassert solution(\"8\\n\") == \"54\"\nassert solution(\"10\\n\") == \"-1\"\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '8'\nassert solution('''8''') == '54'\nassert solution('''10''') == '-1'\nassert solution('''10''') == '-1'\nassert solution('''1''') == '8'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '1'\nassert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('12') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('12') == '-1'\nassert solution('13') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"8\") == \"54\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 4\\n0 0 4\\n') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5\\n') == '0.00000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4\\n6 0 4\") == \"7.25298806364175601379\"\nassert solution(\"0 0 5\\n11 0 5\") == \"0.00000000000000000000\"\nassert solution(\"0 0 5\\n1 0 5\") == \"0.00000000000000000000\"\nassert solution(\"0 0 5\\n1 0 5\") == \"0.00000000000000000000\"\nassert solution(\"0 0 5\\n1 0 5\") == \"0.00000000000000000000\"\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 4\\n6 0 4\\n') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5\\n') == '0.00000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''11 0 5''') == '0.00000000000000000000'\nassert solution('''1 1 1''') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 4\\n6 0 4\\n') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5\\n') == '0.00000000000000000000'\n\n'''\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''3 1 1''') == '0.7853981633974483'\nassert solution('''3 5 2''') == '1.9901328679998'\nassert solution('''-2 3 -1''') == '0.7853981633974483'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0 4\n6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5\n11 0 5''') == '0.00000000000000000000'\nprint(solution('''0 0 4\n6 0 4'''))\nprint(solution('''0 0 5\n11 0 5'''))\nprint(solution('''1 2 2\n3 3 1'''))\nprint(solution('''1 2 2\n3 3 2'''))\nprint(solution('''1 1 1\n1 1 1'''))\n\n\n'''"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\nassert solution('0 0 4\\n11 0 5') == '0.00000000000000000000'\nassert solution('0 0 4\\n0 0 4') == '0.00000000000000000000'\nassert solution('0 0 5\\n0 0 5') == '0.00000000000000000000'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''11 0 5''') == '0.00000000000000000000'"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\nassert solution('1') == 1\nassert solution('1') == 1\nassert solution('1') == 1\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 1\nassert solution('4') == 0\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"3\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('6') == '2'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1000000\") == \"1\"\nassert solution(\"100000000\") == \"1\"\nassert solution(\"1000000000000000000\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('10') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('5') == '2'\nassert solution('8') == '2'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n3 1 2\\n\") == \"3\"\nassert solution(\"3\\n1 1\\n3 1 3\\n\") == \"4\"\nassert solution(\"2\\n1\\n1\\n\") == \"2\"\nassert solution(\"1\\n1\\n1\\n\") == \"2\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n1 1\n3 1 2\n'''\n    ) == 3\n\nassert solution(\n'''3\n1 1\n3 1 3\n'''\n    ) == 4\n\nassert solution(\n'''4\n1 1\n3 1 3\n4 1 2\n'''\n    ) == 5\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n3 1 2''') == '3'\nassert solution('''3\n1 1\n3 1 3''') == '4'\nassert solution('''3\n1 1\n3 1 2''') == '4'\nassert solution('''2\n1 1\n3 1 1''') == '2'\nassert solution('''2\n1 1\n2 1 1''') == '3'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n\n\n'''\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n3 1 3\\n') == '4'\nassert solution('4\\n1 1 1 1\\n3 1 2 3\\n') == '4'\nassert solution('10\\n8 9 8 9 7 7 7 8 9 7\\n') == '4'\n\n\n-----\n\n\"\"\"\n\nn = int(input())\n\nroads = [list(map(int, input().split())) for _ in range(n - 1)]\nn = int(input())\n\ncitizens = [int(input()) for _ in range(n)]\n\ncount = 0\nvisited = set()"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == 3\nassert solution('''3\n1 1\n3 1 3''') == 4\nassert solution('''3\n1 1\n3 1 3''') == 4\nassert solution('''3\n1 2\n3 1 3''') == 2\nassert solution('''3\n1 2\n2 1 3''') == 2\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n3 1 2\n''') == '3'\nassert solution('''\n5\n1 1 2 3 4\n2 2 1 1 4\n1 3\n1 4\n''') == '7'\nassert solution('''\n11\n1 1 2 3 4 5 6 7 8 9 10\n2 1 1 2 3 4 5 6 7 8 9 10\n1 1 1 1 1 1 1 1 1 1 1\n''') == '6'\n\n\n-----"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1\n3 1 2\n''') == '3'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''5\n1 1\n1 1 1 1\n''') == '5'\nassert solution('''5\n1 1\n1 1 1 1\n''') == '5'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('reading\\nreading\\n') == '2'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\n\n\n\n-----\n\npolycarpus suggested to be able to use a number of edits to make two words identical.\n\na word X can be obtained by performing at most k edits.\n\nThe number of distinct words of length n + 1 is a Catalan number.\n\nMore information: http://en.wikipedia.org/wiki/Catalan_number\n\n\n-----\n\na number of words of length n + 1 is a Catalan number.\n\nmore information: http://en.wikipedia.org/wiki/Catalan_number\n\n------\n\n\n------\n\n\n\n------\n\n------\n\n\n------\n\n\n------\n\n------\n\n------\n\n------\n\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n\n------\n\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"hello world\") == \"hello_wor\"\nassert solution(\"I am an NLPer\") == \"I_am_an_NL_per\"\nassert solution(\"Hello\") == \"HeLlO\"\nassert solution(\"PyNaTive\") == \"Python_NaTive\"\n\n\n\n\"\"\""
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('reading\\ntrading\\n') == '1'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('try\\ntry\\n') == '1'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nreading\\ntrading\\n') == '1\\n'\nassert solution('5\\nsweet\\nsheep\\n') == '0\\n'\nassert solution('3\\ntoy\\ntry\\n') == '2\\n'\n\n\n'''"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('reading') =='reading'\nassert solution('trading') == 'trading'\nassert solution('toy') == 'try'\nassert solution('try') == 'try'\nassert solution('sweet') =='sheep'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('reading\\n') =='reading'\nassert solution('trading\\n') == 'trading'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('reading' == 'treading')\nassert solution('sheep' =='sheep')\nassert solution('toy' == 'try')\nassert solution('toy' == 'toy')\nassert solution('toy' == 'troy')\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"reading\\nreading\\ntreading\") == \"1\\n\"\nassert solution(\"toy\\ntry\\ntry\") == \"0\\n\"\nassert solution(\"sheep\\ntry\\ntry\") == \"0\\n\"\nassert solution(\"sweet\\ntry\\ntry\") == \"0\\n\"\n\n\n\"\"\""
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('reading') == 1\nassert solution('toy') == 0\nassert solution('toy') == 0\nassert solution('try') == 2\n\n\n-----\n\n'''\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"reading\n    trading\n\"\"\") == \"1\"\n\nassert solution(\"\"\"sweet\n    sheep\n\"\"\") == \"0\"\n\nassert solution(\"\"\"toy\ntry\n\"\"\") == \"2\"\n\nassert solution(\"\"\"toy\n    try\n\"\"\") == \"0\"\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\n''') == '93'\nassert solution('''\n7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\n''') == '93'\nassert solution('''\n5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n\n''') == '8'\nassert solution('''\n7\n50 33 97 17 82 43 16 15\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\n''') == '66'\nassert solution('''\n5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\n''') == '5'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2') == '1'\nassert solution('38 -29 87 93 39 28 -55') == '93'\nassert solution('1 2 7 6 7') == '8'\nassert solution('1 5') == '1'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2') == '5'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\nassert solution('5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n') == '8'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('1\\n2\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6''') == '93'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6''') == '8'\nassert solution('''7\n-14 -16 17 -23 15 -13 22 -7 -1 -14\n1 1\n1 2\n2 3\n2 4\n3 5\n4 6\n5 7\n6 7\n\n1 5\n5 3\n3 2\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6''') == '7'\nassert solution('''7\n9 10 -13 -12 -10 -8 -5 -4 -2 -1\n1 1\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n6 7\n\n1 5\n5 3\n3 2\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6''') == '7'\nassert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\n2 4\n1 7\n7 6\n\n3 4\n2 4\n1 7\n7 6''') == '8'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\nassert solution('''1\n0\n1\n2\n3\n4\n''') == '0'\nassert solution('''4\n1 2 3 4\n1 2\n2 3\n2 4\n2 3\n''') == '4'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2') == '2'\nassert solution('2 3') == '3'\nassert solution('3 4') == '4'\nassert solution('4 5') == '5'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\nassert solution('''7\n98 -57 37 -24 -7 -19 -15 -27 -11 -18 -16 -17 -4 -20 -21 -3 -19 -10 -5 -2 -9 -29 -22 -11 -28 -17 -18 -8 -3 -18 -2 -22 -18 -13 -6 -12 -5 -11 -1 -3 -20 -21 -9 -15 -20 -1 -27 -15 -22 -14 -19 -2 -7 -10 -7 -24 -15 -18 -29 -12 -18 -22 -6 -20 -4 -1 -2 -21 -18 -11 -5 -17 -9 -2 -18 -13 -11 -9 -14 -12 -20 -3 -27 -14 -24 -1 -26 -3 -5 -24 -18 -11 -18 -1 -13 -10 -9 -6 -3 -17 -19 -17 -6 -8 -1 -18 -9 -14 -18 -7 -5 -8 -6 -17 -2 -17 -16 -10 -13 -13 -1 -6 -10 -29 -22 -15 -8 -2 -5 -8 -10 -11 -7 -19 -7 -12 -1 -11 -5 -8 -13 -17 -11 -13 -26 -18 -19 -15 -10 -14 -2 -6 -10 -8 -1 -3 -7 -5 -18 -13 -6 -8 -6 -3 -14 -1 -15 -13 -10 -16 -8 -22 -1 -22 -17 -2 -1 -9 -2 -16 -6 -12 -18 -16 -4 -1 -19 -3 -3 -4 -8 -3 -18 -17 -13 -20 -10 -16 -13 -17 -1 -8 -14 -22 -13 -18 -10 -1 -22 -17 -5 -12 -10 -3 -13 -14 -11 -15 -9 -18 -6 -4 -10 -11 -3 -15 -10 -7 -11 -3 -8 -2 -14 -14 -6 -11 -5 -3 -14 -1 -9 -18 -5 -15 -3 -9 -9 -4 -5 -16 -1 -2 -5 -17 -15 -12 -15 -6 -9 -14 -6 -8 -9 -14 -11 -8 -18 -4 -7 -10 -6 -4 -14 -14 -15 -18 -19 -18 -15 -12 -14 -14 -7 -9 -18 -13 -13 -12 -13 -5 -7 -9 -17 -14 -14 -9 -7 -10 -18 -8 -16 -16 -13 -15 -11 -3 -12 -17 -3 -9 -7 -5 -18 -9 -18 -3 -10 -10 -12 -4 -5 -8 -8 -14 -9 -18 -3 -18 -15 -4 -18 -3 -8 -14 -12 -5 -11 -12 -8 -10 -14 -10 -12 -16 -11 -10 -18 -4 -12 -18 -10 -8 -8 -17 -7 -15 -5 -11 -5 -12 -8 -13 -9 -5 -16 -13 -11 -10 -6 -10 -12 -10 -4 -10 -15 -10 -12 -4 -10 -5 -13 -12 -17 -4 -12 -4 -11 -13 -15 -3 -18 -15 -7 -15 -9 -13 -10 -18 -3 -10 -8 -17 -12 -9 -11 -6 -18 -7 -13 -10 -11 -10 -9 -5 -7 -16 -16 -11 -9 -17 -5 -15 -3 -5 -5 -17 -4 -7 -13 -15 -7 -9 -9 -14 -7 -11 -6 -8 -16 -4 -15 -9 -13 -7 -8 -11 -5 -4 -6 -8 -10 -8 -4 -13 -9 -7 -17 -10 -16 -11 -9 -5 -15 -10 -7 -10 -10 -18 -4 -12 -13 -4 -13 -16 -5 -6 -11 -15 -3 -12 -5 -11 -7 -10 -8 -10 -5 -10 -16 -17 -10 -13 -13 -10 -5 -15 -5 -16 -11 -10 -10 -13 -10 -5 -10 -17 -11 -10 -8 -9 -17 -8 -14 -15 -6 -15 -11 -10 -11 -10 -14 -"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n-9 -3 7 -1\\n1 2\\n2 1\\n1 -2\\n-2 -1') == '3'\nassert solution('5\\n-9 -3 7 -1 8\\n1 2\\n2 3\\n3 4\\n4 5\\n1 5\\n3 4') == '3'\nassert solution('7\\n-9 -3 7 -1 8 9 -5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n2 6\\n5 7') == '8'\nassert solution('5\\n-9 -3 7 -1 8\\n1 2\\n2 3\\n3 4\\n4 5\\n1 5\\n3 4') == '3'\nassert solution('7\\n-9 -3 7 -1 8 9 -5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n2 6\\n5 7') == '8'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0\\n\") == \"2\"\nassert solution(\"5 3\\n1\\n\") == \"0\"\nassert solution(\"3 0\\n0\\n\") == \"1\"\nassert solution(\"5 5\\n1\\n\") == \"0\"\nassert solution(\"1 1\\n0\\n\") == \"0\"\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 2') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('7 4') == '3'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('7 0') == '1'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('7 5') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7 4''') == '3'\nassert solution('''6 2''') == '2'\nassert solution('''3 0''') == '1'\nassert solution('''2 2''') == '0'\nassert solution('''7 1''') == '1'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n\") == \"3\"\nassert solution(\"6 2\\n\") == \"2\"\nassert solution(\"3 0\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"0\"\nassert solution(\"1 1\\n\") == \"1\"\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\nprint('all tests passed successfully')\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 4\n''') == '3'\nassert solution('''6 2\n''') == '2'\nassert solution('''3 0\n''') == '1'\nassert solution('''2 2\n''') == '0'\nassert solution('''1 1\n''') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7\\n') == '9'\nassert solution('3 7\\n') == '1'\nassert solution('2 2\\n') == '2'\nassert solution('15 2\\n') == '1'\nassert solution('16 2\\n') == '2'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\n\n\n\"\"\""
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''117 3'''\n) == '9'\n\nassert solution(\n'''237 7'''\n) == '1'\n\nassert solution(\n'''15 2'''\n) == '2'"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\nassert solution('25 11') == '2'\nassert solution('56 81') == '2'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''117 3''') == '9'\nassert solution('''237 7''') == '1'\nassert solution('''15 2''') == '2'\nprint(\"all tests passed\")"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"1\"\nassert solution(\"1 15\") == \"1\"\nassert solution(\"1 11\") == \"2\"\nassert solution(\"10 11\") == \"2\"\nassert solution(\"100 11\") == \"1\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 2''') == '1'\nassert solution('''11 3''') == '2'\nassert solution('''24 8''') == '2'\nassert solution('''3 1''') == '1'\nassert solution('''20 7''') == '2'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''117 3''') == '9'\nassert solution('''237 7''') == '1'\nassert solution('''15 2''') == '2'\nassert solution('''27 5''') == '3'\nassert solution('''25 7''') == '1'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''117 3''') == '9'\nassert solution('''237 7''') == '1'\nassert solution('''15 2''') == '2'\nassert solution('''15 2''') == '2'\nassert solution('''1''') == '1'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 6\\nXXX\\nXXX\\nXXX\\nXXX\\nXXX\\nXXX\\nXXX') == 'NO'\nassert solution('5 3\\n.....\\n.....\\n.....\\n.....\\n') == 'YES'\nassert solution('8 8\\n.XX.\\n.X.X\\n.XX.\\n.X.X\\n.XX.\\n.X.X\\n.XX.\\n.XX.\\n') == 'NO'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nXXX\\nXXX\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\") == \"NO\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\\n\") == \"YES\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\\n\") == \"NO\"\nassert solution(\"2 2\\n.X\\nXX\") == \"NO\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2''') == 'YES'\nassert solution('''2 3''') == 'YES'\nassert solution('''2 4''') == 'NO'\nassert solution('''3 2''') == 'NO'\nassert solution('''5 5''') == 'YES'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('1') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 5\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\") == \"YES\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\nX.X\n.XX\n...''') == 'YES'\n\nassert solution('''3 3\nX..\nX..\nX..\n''') == 'YES'\n\nassert solution('''2 3\nX..\n..X\n''') == 'NO'\n\nassert solution('''3 3\n.X.\nX.X\nX.X\n''') == 'NO'\n\nassert solution('''3 3\n.X.\nX.X\n.X.\n''') == 'NO'"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3\nXXX\nXXX''') == 'YES'\nassert solution('''2 2\n.X\nXX''') == 'NO'\nassert solution('''5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'YES'\n'''\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"YES\"\nassert solution(\"1 1\\nX\") == \"YES\"\nassert solution(\"3 3\\nX..\\nX..\\nX\") == \"YES\"\nassert solution(\"3 3\\n..\\nX..\\nX\") == \"NO\"\nassert solution(\"3 3\\nX..\\n..X\\nX\") == \"NO\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"5 3\") == \"YES\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n1 503\n1 504\n1 505\n1 506\n1 507\n1 508\n1 509\n1 510\n1 511\n1 512\n1 513\n1 514\n1 515\n1 516\n1 517\n1 518\n1 519\n1 520\n1 521\n1 522\n1 523\n1 524\n1 525\n1 526\n1 527\n1 528\n1 529\n1 530\n1 531\n1 532\n1 533\n1 534\n1 535\n1 536\n1 537\n1 538\n1 539\n1 540\n1 541\n1 542\n1 543\n1 544\n1 545\n1 546\n1 547\n1"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 -1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n\nassert solution(\"-1 -1\") == \"2\"\nassert solution(\"-1 3\") == \"3\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 -1''') == '1'\nassert solution('''-1 -1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''-1 -1''') == '1'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\n\nassert solution('-1 -1') == '2'\nassert solution('-1 3') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 -1\"\"\") == \"1\"\nassert solution(\"\"\"-1 -1\"\"\") == \"2\"\nassert solution(\"\"\"1 1\"\"\") == \"1\"\nassert solution(\"\"\"1 2\"\"\") == \"2\"\nassert solution(\"\"\"-1 2\"\"\") == \"3\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 -1\\n1 1\\n1 2\\n') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\nassert solution('1 1\\n2 3\\n3 4\\n') == '4'\nassert solution('1 1\\n1 2\\n1 3\\n') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 -1\\n1 1\\n1 2\\n') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\n\nassert solution('-1 -1') == '1'\nassert solution('-1 3') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 -1\\n1 1\\n1 2') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n1 2\\n1 3') == '3'\nassert solution('1 -1\\n-1 3\\n4 3') == '3'\nassert solution('-1 -1\\n-1 3\\n4 3') == '3'\nassert solution('1 1\\n2 3\\n3 2') == '3'\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2 1') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('2 1') == 'NO'\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2 1') == 'YES\\n2 1'\nassert solution('2') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2 3\\n1 2\\n2 3\\n') == 'YES\\n1 2\\n2 3\\n3 1'\n\n\n\"\"\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 1\") == \"YES\\n2 1\"\nassert solution(\"1 2\") == \"YES\\n2 1\"\nassert solution(\"1 2 3 4\") == \"YES\\n2 1\\n1 2\"\nassert solution(\"1 2 3 4 5\") == \"YES\\n2 1\\n1 2\\n3 4\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\\n0\") == \"NO\"\nassert solution(\"1\\n0\\n1\") == \"NO\"\nassert solution(\"1\\n0\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 1\") == \"YES\\n1 2\\n2 1\"\nassert solution(\"3 1\") == \"YES\\n1 3\\n2 1\\n3 1\"\nassert solution(\"4 1\") == \"YES\\n1 2\\n1 3\\n1 4\\n2 3\\n3 4\"\nassert solution(\"5 1\") == \"YES\\n1 2\\n1 4\\n1 3\\n2 4\\n3 4\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"3 1\") == \"YES\"\nassert solution(\"2 1\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\\nn=1 m=1\\n1 1\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"YES\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n2 1\n1 2\n\n''') == 'NO'\n\nassert solution('''1\n1 1\n\n''') == 'YES'\n\nassert solution('''3\n4 3\n1 2\n2 3\n3 4\n\n''') == 'YES'\n\nassert solution('''3\n3 1\n1 2\n2 3\n1 3\n\n''') == 'NO'\n\nassert solution('''4\n4 3\n1 2\n2 3\n1 3\n\n''') == 'NO'"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3 4\\ncodeforces\\nfor\\n1 3\\n3 10\\n5 6\\n5 7') == '0\\n1\\n0\\n1\\n'\nassert solution('15 2 3\\naaa\\naab\\nba\\nbab\\n1 15\\n3 4\\n2 14\\n') == '4\\n0\\n3\\n0\\n'\n\n\n'''"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6''') == ''\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14''') == '0\\n1\\n0\\n1\\n'\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1''') == '0\\n0\\n3\\n'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 3 4''') == ''\nassert solution('''codeforces''') == '0'\nassert solution('''for''') == '0'\nassert solution('''1 3''') == '0'\nassert solution('''3 10''') == '0'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7\n''') == '0\\n1\\n0\\n1\\n'\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14\n''') == '4\\n0\\n3\\n'\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1\n''') == '0\\n0\\n3\\n'\n'''\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7''') == '0\\n1\\n0\\n1\\n'\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14''') == '4\\n0\\n3\\n'\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1''') == '0\\n0\\n3\\n'\nassert solution('''3 2 5\nacacd\nacacacac\n1 3\n1 1''') == '3\\n'\n\n'''\nassert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7''') == '0\\n1\\n0\\n1\\n'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\nabc\\nabc\\n') == '0'\nassert solution('1\\nabc\\nabc\\n') == '1'\nassert solution('1\\nabc\\nabc\\n') == '0'\nassert solution('1\\nabc\\nabc\\n') == '1'\nassert solution('1\\nabc\\nabc\\n') == '0'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('codeforces') == '1'\nassert solution('aa') == '0'\nassert solution('aba') == '1'\nassert solution('ba') == '0'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7''') == '0\\n1\\n0\\n1'\n\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14''') == '4\\n0\\n3'\n\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1''') == '0\\n0\\n3'\n\n'''\n    def solution(stdin: str) -> str:\n        pass\n'''\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"6\"\nassert solution(\"4 5 2\") == \"7\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('10 6 3') == '22'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('2 2 1') == '2'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"6\"\nassert solution(\"4 5 2\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('3 1 2') == '1'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('10 7 1') == '8'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3 2''') == '3'\nassert solution('''3 3 3''') == '1'\nassert solution('''4 3 2''') == '6'\nassert solution('''4 5 2''') == '7'\nassert solution('''6 4 2''') == '8'\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('BBWW') == '0'\nassert solution('WWWW') == '1'\nassert solution('BBBB') == '1'\nassert solution('WWWWWW') == '2'\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3\nBBW\n''') == '1\\n2\\n'\n\nassert solution(\n'''5\nBWBWB\n''') == '3\\n1 1 1\\n'\n\nassert solution(\n'''4\nWWWW\n''') == '0\\n4 1 3\\n'\n\nassert solution(\n'''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3\\n'\n\nassert solution(\n'''123\nWWWWWWWWWWWW\n''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bbwb') == '1'\nassert solution('WWWW') == '0'\nassert solution
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BBW') == \"1\"\nassert solution('BWBW') == \"1\"\nassert solution('WWWW') == \"1\"\nassert solution('BBBB') == \"1\"\nassert solution('BWBWBWB') == \"1\"\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nBBW\n''') == '1\\n2'\nassert solution('''5\nBWBWB\n''') == '3\\n1 1 1'\nassert solution('''4\nWWWW\n''') == '0\\n4'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3'\nassert solution('''13\nWBBBBWWBWBBWW\n''') == '3\\n4 1 3'\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('WWWW') == ''\nassert solution('BBBBB') == ''\nassert solution
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\nBBW\n''') == '''1\n2 \n'''\nassert solution('''5\nBWBWB\n''') == '''3\n1 1 1 \n'''\nassert solution('''4\nWWWW\n''') == '''0\n4 \n'''\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '''3\n4 1 3 \n'''\nassert solution('''13\nBBBB\n''') == '''1\n4 \n'''\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nBBW\n''') == '1\\n2\\n'\nassert solution('''5\nBWBWB\n''') == '3\\n1 1 1\\n'\nassert solution('''4\nWWWW\n''') == '0\\n4\\n1 1 1\\n'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3\\n'\n'''\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nBBW\n''') == '1\\n2\\n'\nassert solution('''5\nBWBWB\n''') == '3\\n1 1 1\\n'\nassert solution('''4\nWWWW\n''') == '0\\n4 1 3\\n'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3\\n'\n'''\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('W') == None\nassert solution('WBBW') == 1\nassert solution('WWW') == 3\nassert solution
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 4 5\") == \"()\"\nassert solution(\"12 5 3\") == \"(()())(())\"\nassert solution(\"8 8 8\") == \"()()()\"\nassert solution(\"(())()()\") == \"()()()\"\nassert solution(\"(()(()))\") == \"()()()\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"(()(()))\") == \"()()\"\nassert solution(\"(()()())\") == \"()()\"\nassert solution(\"(()())((()(())))((()(()))(()))\") == \"(()(()))()(()())\"\nassert solution(\"(()(())((()(())))((()(()))(())))((()(()))(())(())())\") == \"()()()()(()()()()(()()()()()()()()())(()()()()()()()()())()()()(()()())()()()(()()()()()()()()())(()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()())(()()()()()()()()()()"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('(())()') == '()'\nassert solution('()(())') == '()()'\nassert solution(')()()') == '()'\nassert solution('()()()') == '()'\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 4 5\\n((()())(()))\\nRDLD\") == \"()()()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()(()))\"\nassert solution(\"8 8 8\\n((())()())L\\nLLLLLLDD\\nRLLLLLLRLD\\nLLLLLLRRLD\\nLLLLLLRRLD\\nLLLLLLRRLD\\nLLLLLLRLD\\nLLLLLLRLD\\nLLLLLLRLD\\nLLLLLLRLD\\nLLLLLLRLD\") == \"(()(()))\"\nassert solution(\"4 6 5\\n(()()())(())\\nLRLRDDLRLDDRRLLRLLLRLDD\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\\nRRDRRRRRRRRRRDRRRRRRRRRRRRR\") == \"(()(()))\"\n\n\n-----Solution 1-----\nfrom math import log10\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"()()\"\n\nassert solution(stdin) == \"(())()\"\n\nassert solution(stdin) == \"()\"\n\nassert solution(stdin) == \"(()())\"\n\nassert solution(stdin) == \"()\""
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\\n\") is None\nassert solution(\"> 100 Y\\n\") is None\nassert solution(\"< -100 Y\\n\") is None\nassert solution(\"2\\n\") == \"Impossible\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\">= 1 Y\") == '17'\nassert solution(\"< 3 N\") == '-3'\nassert solution(\"<= -3 N\") == '-3'\nassert solution(\"> 55 N\") == '55'\nassert solution(\"< 100 Y\") == '-100'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\\n\") == \"17\"\nassert solution(\"2\\n> 100 Y\\n< -100 Y\\n\") == \"Impossible\"\nassert solution(\"2\\n> 100 Y\\n< -100 Y\\n\") == \"Impossible\"\nassert solution(\"2\\n> 100 Y\\n< -100 Y\\n\") == \"Impossible\"\nassert solution(\"2\\n> 100 Y\\n< -100 Y\\n\") == \"Impossible\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 Y\\n\") == \"17\"\nassert solution(\"2 Y\\n\") == \"17\"\nassert solution(\"3 N\\n\") == \"17\"\nassert solution(\"4 N\\n\") == \"17\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n2\n> 100 Y\n< -100 Y\n''') == 'Impossible'\nassert solution('''\n1\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n3\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N''') == '17'\nassert solution('''2\n> 100 Y\n< -100 Y''') == 'Impossible'\n'''\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"Y\"\nassert solution(\"2\") == \"Y\"\nassert solution(\"3\") == \"Y\"\nassert solution(\"4\") == \"Y\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100 Y') == '17'\n\nassert solution('1 Y') == '17'\n\nassert solution('-1 N') == '17'\n\nassert solution('-4 N') == '17'\n\nassert solution('-5 N') == '17'"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\nfrom math import ceil"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('2 3') == '2'\nassert solution('2 4') == '4'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n\"\"\""
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3''') == '5'\nassert solution('''5 3''') == '5'\nassert solution('''1 4''') == '4'\nassert solution('''2 4''') == '5'\nassert solution('''3 4''') == '6'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''2 4''') == '4'\nassert solution(\n    '''5 3''') == '5'\nassert solution(\n    '''5 3''') == '5'\nassert solution(\n    '''5 5''') == '5'\nassert solution(\n    '''5 6''') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 4\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n5 3\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n6 3\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n6 2\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n3 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 3') == '5'\nassert solution('3 2') == '5'\nassert solution('5 3') == '5'\nassert solution('7 8') == '15'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2') == 'Na Na Na'\nassert solution('8 3') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('9 8') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('3 2') == 'Na Na Na'\n\n\"\"\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO\n''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('''9 8\nYES NO\n''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('''3 2\nNO NO\n''') == 'Na Na Na'\nassert solution('''3 2\nNO NO\n''') == 'Na Na Na'\nassert solution('''3 2\nYES NO\n''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n'''\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\\n\"\nassert solution(\"9 8\\nYES NO\\n\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\\n\"\nassert solution(\"3 2\\nNO NO\\n\") == \"Na Na Na\\n\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 3\\nNO NO YES YES YES NO\\n') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('9 8\\nYES NO\\n') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('3 2\\nNO NO\\n') == 'Na Na Na'\nassert solution('5 2\\nNO NO YES\\n') == 'Zhfgvbztujqijihmtk'\nassert solution('6 2\\nNO NO YES\\n') == 'Ybcebvxzqgqeuvzs'\n\n\n\"\"\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\\n\") == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\\n'\nassert solution(\"9 8\\nYES NO\\n\") == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\\n'\nassert solution(\"3 2\\nNO NO\\n\") == 'Na Na Na\\n'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 3') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('9 8') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('3 2') == 'Na Na Na'\nassert solution('NO NO') == 'Na Na Na'\nassert solution('YES NO') == 'Na Na Na'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('''9 8\nYES NO''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('''3 2\nNO NO''') == 'Na Na Na'\nassert solution('''3 2\nYES NO''') == 'Na Na Na'\n'''\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8 3\\nNO NO YES YES YES NO\\n') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\\n'\nassert solution('9 8\\nYES NO\\n') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\\n'\nassert solution('3 2\\nNO NO\\n') == 'Na Na Na\\n'\nassert solution('9 8\\nYES NOYES\\n') == 'Na Na Na\\n'\nassert solution('10 9\\nYES YESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES YESYESYESYES Yes\\n') == 'Na Na Na\\n'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\nNO NO YES YES YES NO') == 'Na Na Na'\nassert solution('8 3\\nNO NO YES YES YES NO') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('9 8\\nYES NO\\n') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('3 2\\nNO NO\\n') == 'Na Na Na'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\nassert solution('8 12') == '2'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\nassert solution('1000000000 10000000') == '0'\nassert solution('1008104768 1111014255') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"5 4\") == \"-1\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(input())\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '-1'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"15 20\") == \"3\"\nassert solution(\"14 8\") == \"-1\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 5\") == \"0\"\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 100 1\\n0 1 2 1 2') == '101\\n'\nassert solution('3 10 12\\n1 2 0') == '-1\\n'\nassert solution('3 12 1\\n0 1 0') == '0\\n'\nassert solution('3 12 1\\n1 1 0') == '0\\n'\nassert solution('3 12 1\\n0 1 2\\n') == '0\\n'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 100 1\\n0 1 2 1 2\\n') == '101'\nassert solution('3 10 12\\n1 2 0\\n') == '-1'\nassert solution('3 12 1\\n0 1 0\\n') == '0'\nassert solution('3 16 7\\n0 1 0\\n') == '1'\nassert solution('3 7 8\\n0 1 0\\n') == '2'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 100 1\\n0 1 2 1 2') == '101'\nassert solution('3 10 12\\n1 2 0') == '-1'\nassert solution('3 12 1\\n0 1 0') == '0'\nassert solution('3 12 1\\n0 1 0') == '0'\nassert solution('5 100 1\\n0 1 2 1 2') == '101'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, a, b = map(int, stdin.split())\n\ns = stdin.split()\nc = [int(x) for x in s]"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 100 1\n0 1 2 1 2\n''') == '101'\nassert solution('''3 10 12\n1 2 0\n''') == '-1'\nassert solution('''3 12 1\n0 1 0\n''') == '0'\nassert solution('''3 11 2\n1 1 1\n''') == '0'\nassert solution('''2 8 4\n2 4 0\n''') == '0'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 10 1\") == \"-1\"\nassert solution(\"3 12 1\") == \"0\"\nassert solution(\"3 10 12\") == \"101\"\nassert solution(\"5 100 1\") == \"101\"\nassert solution(\"3 12 1\") == \"0\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1'''\n) == '-1'\nassert solution(\n'''2'''\n) == 'bb\\nww'\nassert solution(\n'''3'''\n) == 'bw\\nwwb\\nwbw'\nassert solution(\n'''4'''\n) == 'bw\\nwbw\\nwwb\\nwbw'\nassert solution(\n'''5'''\n) == 'bw\\nwbw\\nwbw\\nwbb\\nwbw'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"No solution\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"bb\\nww\\nbb\\nww\\n\"\nassert solution(\"3\") == \"bbb\\nbbw\\nbbb\\nbbw\\n\"\nassert solution(\"4\") == \"bbbb\\nbbwb\\nbbbb\\nbbwb\\n\"\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution(' ') == None\nassert solution('\\t') == None\nassert solution('\\r') == None\nassert solution('\\n') == None\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == 'bb\\nww\\n'\nassert solution('3') == 'ww\\nbw\\n'\nassert solution('4') == 'ww\\nbw\\n'\nassert solution('5') == 'ww\\nbw\\n'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == 'bb'\nassert solution('''2''') == 'bb\\nww'\n\nprint(solution('''3'''))"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('1') == 'bb'\nassert solution('2') == 'ww'\nassert solution('3') == 'bbww'\nassert solution('4') == 'wwbb'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == 'bb'\nassert solution('''1''') == 'ww'\nassert solution('''3''') == 'bw\\nbw\\nbw'\nassert solution('''10''') == 'bw\\nbw\\nbw\\nbw\\nbw\\nbw\\nbw\\nbw\\nbw\\nbw'\nassert solution('''5''') == 'ww\\nww\\nww\\nww\\nww'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == 'bb\\nww'\nassert solution('''3''') == 'bbb\\nbbw\\nbbb\\nbbw\\nwwb\\nwwb\\nwwb\\nwwb'\nassert solution('''4''') == 'bbbb\\nbbbb\\nbbbb\\nbbbb\\nbbbb\\nbbbb\\nbbbb\\nbbbb'\nassert solution('''5''') == 'bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == 'ww'\nassert solution('3') == 'wbbbwbbw'\nassert solution('4') == 'wwwwwww'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"bb\"\nassert solution(\"3\") == \"ww\"\nassert solution(\"4\") == \"bw\"\nassert solution(\"5\") == \"wb\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"9\") == \"4\"\nassert solution(\"10\") == \"2\"\nassert solution(\"12\") == \"6\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == None\nassert solution('10') == 10\nassert solution('12') == None\nassert solution('1') == 1\nassert solution('13') == None\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\nn = int(input())\nans = 1\n\nfor i in range(1,n):\n    if n % i == 0:\n        ans = i\n        break\nprint(ans)"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('2 ') == ''\nassert solution('2 3') == ''\nassert solution('1234567890') == ''\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"6\"\nassert solution(\"9\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('100') == '5'\nassert solution('1000') == '4'\nassert solution('9999') == '3'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('10') == '6'\n\nfrom math import sqrt\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"3\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"3\"\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1011') == 'Yes'\nassert solution('1000') == 'No'\nassert solution('10001') == 'Yes'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('1011') == 'No'\nassert solution('1000') == 'Yes'\nassert solution('10001') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'No'\nassert solution('101') == 'Yes'\nassert solution('10001') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10001\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"0101\") == \"Yes\"\nassert solution(\"10111\") == \"No\"\nassert solution(\"10101\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n101') == 'Yes'\nassert solution('4\\n1011') == 'No'\nassert solution('5\\n10001') == 'No'\nassert solution('6\\n01001') == 'Yes'\nassert solution('7\\n000111') == 'Yes'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n101\\n') == 'Yes'\nassert solution('4\\n1011\\n') == 'No'\nassert solution('5\\n10001\\n') == 'Yes'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('01') == 'Yes'\nassert solution('0111') == 'Yes'\nassert solution('101') == 'No'\nassert solution('11') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n101\") == \"Yes\"\nassert solution(\"4\\n1011\") == \"No\"\nassert solution(\"5\\n10001\") == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12345\\n1111111') == 'No'\nassert solution('101\\n101') == 'Yes'\nassert solution('11101101\\n10110101') == 'No'\nassert solution('101\\n000001') == 'Yes'\nassert solution('101\\n001000') == 'Yes'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\"\nassert solution(\"5\\n1 3 5 6 8\\n\") == \"2\\n3 5\"\nassert solution(\"3\\n1 5 3\\n\") == \"1\\n3\"\n\n\n\n\"\"\""
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"5\\n1 3 5 6 8\\n\") == \"5\\n1 3\\n\"\nassert solution(\"3\\n1 5 3\\n\") == \"2\\n1 3 5\\n\"\nassert solution(\"3\\n1 3 5 6\\n\") == \"1\\n1 3\\n\"\nassert solution(\"5\\n1 3 5 6 8\\n\") == \"2\\n1 3\\n\"\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\nassert solution(\"1 2 3 4 5 7\") == \"\"\nassert solution(\"1 2 3 4 5 6 7\") == \"\"\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8\\n') == '2\\n3 5'\nassert solution('3\\n1 5 3\\n') == '1\\n3'\nassert solution('5\\n1 5 3\\n') == '1\\n3'\n\"\"\"\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''5\n1 3 5 6 8''') == '5'\nassert solution('''3\n1 5 3''') == '2'\nassert solution('''3\n1 5 3''') == '1'\nassert solution('''6\n1 3 5 6 8''') == '2'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '5\\n1 2 3 4 5\\n'\nassert solution('5\\n1 3 5 6 8\\n') == '2\\n3 5\\n'\nassert solution('5\\n1 5 3\\n') == '1\\n3 5\\n'\nassert solution('3\\n1 5 3\\n') == '1\\n3\\n'\n\n\n-----Best Practice-----"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '2\\n3\\n'\nassert solution('3\\n1 4 -2') == '1\\n2\\n'\nassert solution('5\\n1 3 5 6 8') == '5\\n1 3 5\\n'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5\\n'\nassert solution('3\\n1 3 5') == '1\\n2\\n'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 3 5 6 8') == '2'\nassert solution('1 3 5 6 8') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '1\\n2 3'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1 2') == '1'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n\n\n-----\n\nIn a small but very proud high school it was decided to win ACM ICPC. This goal requires to compose as many teams of three as possible, but since there were only 6 students who wished to participate, the decision was to build exactly two teams.\n\nAfter practice competition, participant number i got a score of a_{i}. Team score is defined as sum of scores of its participants. High school management is interested if it's possible to build two teams with equal scores. Your task is to answer that question.\n\n\n-----Input-----\n\nThe single line contains six integers a_1,..., a_6 (0 \u2264 a_{i} \u2264 1000) \u2014 scores of the participants\n\n\n-----Output-----\n\nPrint \"YES\" (quotes for clarity), if it is possible to build teams with equal score, and \"NO\" otherwise.\n\nYou can print each character either upper- or lowercase (\"YeS\" and \"yes\" are valid when the answer is \"YES\").\n\n\n-----Examples-----\nInput\n1 3 2 1 2 1\n\nOutput\nYES\n\nInput\n1 1 1 1 1 99\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample, first team can be composed of 1st, 2nd and 6th participant, second \u2014 of 3rd, 4th and 5th: team scores are 1 + 3 + 1 = 2 + 1 + 2 = 5.\n\nIn the second sample, score of participant number 6 is too high: his team score will be definitely greater.\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 3 2 1 2 1''') == 'YES'\nassert solution('''1 1 1 1 1 99''') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\n\"\"\"\n\n- Brute force solution:\n\nfor each participant, try to make 2 teams, but if participant score is bigger than expected, break and try the next participant\n\n- Time complexity: O(n^2)\n- Space complexity: O(1)\n\n\"\"\""
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 2\") == \"NO\"\nassert solution(\"1 1 1 1 1 1\") == \"YES\"\n\"\"\"\n\n\"\"\"\nSimple and brilliant solution:\n\nThe important observation is that there can be at most 3 different scores in a match.\nThe scores of all participants are in range [1, 1000].\n\nWe have two groups (one with 3 and one with 2 participants).\nGroup 3 always wins, because it has the highest score.\n\nSo we are going to use a greedy algorithm to start with the highest score, and keep adding one to the highest score,\nand the lowest score (2 in this example), and checking if the groups have equal score.\n\nIf we keep adding 1 to the highest score, and the lowest score,\nwe'll get a different groups, which will lead to a different outcome.\nWe'll repeat the procedure until we have equal groups with equal scores.\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"100 200\") == \"5\"\nassert solution(\"1 2000000000\") == \"326\"\n\n\"\"\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_1) == '7'\nassert solution(input_2) == '5'\nassert solution(input_3) == '326'\nassert solution(input_4) == '18'\nassert solution(input_5) == '1429'\n\n\"\"\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10\\n') == '7'\nassert solution('100 200\\n') == '5'\nassert solution('1 2000000000\\n') == '326'\nassert solution('100 200\\n') == '5'"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"100 200\") == \"5\"\nassert solution(\"1 2000000000\") == \"326\"\n\n\"\"\""
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('-1000000000 1000000000') == '0'\nassert solution('1 -1000000000 1000000000') == '0'\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n\"\"\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 10''') == '7'\nassert solution('''100 200''') == '5'\nassert solution('''1 2000000000''') == '326'\nassert solution('''100 200''') == '7'\nassert solution('''1 9999999999''') == '0'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1\\n') == '0'\nassert solution('9 11\\n') == '4'\nassert solution('5 0\\n') == '3'\nassert solution('3 2\\n') == '1'\nassert solution('3 5\\n') == '3'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1\"\n) == \"0\"\n\nassert solution(\n    \"9 11\"\n) == \"4\"\n\nassert solution(\n    \"5 0\"\n) == \"3\"\n\nassert solution(\n    \"3 2\"\n) == \"1\"\n\nassert solution(\n    \"3 0\"\n) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\nassert solution('4 2') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''9 11''') == '4'\nassert solution('''5 0''') == '3'\nassert solution('''3 2''') == '1'"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 0') == '3'\nassert solution('5 0') == '3'\nassert solution('1 1') == '0'\nassert solution('5 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\n\n'''\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 3 2 4''') == \"YES\"\nassert solution('''3\n4 1 2''') == \"NO\"\nassert solution('''7\n7 1 4 2 6 7''') == \"NO\"\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2''') == \"NO\"\nassert solution('''10\n4 1 2 2 2 2 2 2 2 2''') == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 5 3 2 4\") == \"YES\\n\"\nassert solution(\"3\\n4 1 2\") == \"NO\\n\"\n\n\n\"\"\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n3 2 4\") == \"YES\\n\"\nassert solution(\"2\\n1 2\\n1 1\") == \"NO\\n\"\nassert solution(\"2\\n1 2\\n2 3\") == \"NO\\n\"\nassert solution(\"3\\n1 1\\n1 1\") == \"NO\\n\"\nassert solution(\"3\\n1 1\\n1 1\") == \"NO\\n\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2') == 'NO'\nassert solution('2\\n2 1') == 'YES'\nassert solution('3\\n2 4 1') == 'YES'\nassert solution('3\\n4 2 1') == 'NO'\nassert solution('4\\n2 3 4 1') == 'YES'\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 5 3 2 4\") == \"NO\"\nassert solution(\"3\\n1 5 3 2 4\\n1 5 4 2 3\") == \"YES\"\n\nassert solution(\"4\\n1 1 1 1\") == \"YES\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\") == \"NO\"\n\nassert solution(\"5\\n1 1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1 1\") == \"NO\"\nassert solution(\"1 1 1 1 1\") == \"NO\"\n\n\n\n\n\n'''\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 5 3 2 4') == 'YES'\nassert solution('2\\n4 1 2') == 'YES'\nassert solution('2\\n2 1') == 'NO'\nassert solution('2\\n2 4 1') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 2\") == \"YES\"\nassert solution(\"1\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n1\") == \"NO\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"4 3\") == \"Yes\"\nassert solution(\"1000 1000\") == \"Yes\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 2\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"10000 10001\") == \"Yes\"\nassert solution(\"1000000 10000001\") == \"No\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"1000 10\") == \"No\"\nassert solution(\"1 2\") == \"Yes\""
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import deque\n\nstdin = '6 3'\nstdout = 'Yes'\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('6 3') == 'Yes'\nassert solution('1 1001') == 'Yes'\nassert solution('1000 1001') == 'No'\nassert solution('1000 10000') == 'No'\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\nassert solution(\"10 3\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1\") == \"Yes\"\nassert solution(\"3 2\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"1000 100\") == \"No\""
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\n\n'''\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4\n7 9''') == '2'\nassert solution('''3 8\n17 15 19''') == '5'\nassert solution('''2 2\n99 100''') == '20'\nassert solution('''2 3\n17 15 19''') == '5'\nassert solution('''2 4\n99 100''') == '20'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 4') == '2'\nassert solution('3 8') == '5'\nassert solution('2 2') == '20'\nassert solution('100 99') == '20'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solutionnassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4\\n7 9') == '2'\nassert solution('3 8\\n17 15 19') == '5'\nassert solution('2 2\\n99 100') == '20'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n7 9\") == \"2\"\nassert solution(\"3 8\\n17 15 19\") == \"5\"\nassert solution(\"2 2\\n99 100\") == \"20\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('2 2') == '4'\nassert solution('2 3') == '2'\nassert solution('2 100') == '200'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 4\n7 9\n\"\"\".strip()) == '5'\n\nassert solution(\n\"\"\"\n3 8\n17 15 19\n\"\"\".strip()) == '20'\n\nassert solution(\n\"\"\"\n2 2\n99 100\n\"\"\".strip()) == '20'\n\nassert solution(\n\"\"\"\n4 5\n11 22 34 45\n\"\"\".strip()) == '60'\n\nassert solution(\n\"\"\"\n4 3\n2 2 1 1\n\"\"\".strip()) == '5'"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4\\n7 9\\n') == '2'\nassert solution('3 8\\n17 15 19\\n') == '5'"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 2\\n5 7 6\\n\") == \"25\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\n\n\n-----"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '25'\nassert solution('8 8') == '1'\nassert solution('1 2 3 4 5 6 7 8') == '25'\nassert solution('8 7 6 5 4 3 2 1') == '1'\n\"\"\""
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6\\n') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n') == '1'\nprint('Test success!')\n\n\n\"\"\""
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n5 7 6\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2') == '1'"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6\\n') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n') == '1'\n\"\"\"\nfrom itertools import combinations\nfrom functools import reduce"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n4 2\\n5 7 6\\n\") == '25'\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == '1'\nassert solution(\"3 3\\n4 2\\n5 7 6\\n\") == '1'\nassert solution(\"5 1\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == '1'\nassert solution(\"3 3\\n4 2\\n5 7 6\\n\") == '25'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '25'\nassert solution('8 8') == '1'\nassert solution('3 3') == '42'\nassert solution('5 7 6') == '46'\nassert solution('8 7 6 5 4 3 2 1') == '1'"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\n\n'''"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\n\n\"\"\""
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('0 0') is None\nassert solution('1 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 222\") == \"2\"\nassert solution(\"4 190\") == \"4\"\nassert solution(\"7 1\") == \"7\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('4 2') == '2'\nassert solution('7 1') == '7'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\n\n'''\n\n'''\nNotes:\nI think the logic for the solution is: "
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('1000000 1') == '1000000'\n\"\"\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('3 6') == '1'\nassert solution('7 3') == '4'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 19\") == \"7\"\nassert solution(\"7 1\") == \"7\"\nassert solution(\"7 4\") == \"6\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 22') == '2'\nassert solution('4 19') == '4'\nassert solution('7 1') == '7'\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nimport sys\nfrom functools import reduce"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n\n\n\"\"\"\n\na = int(input())\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\"\n) == \"1\"\nassert solution(\n    \"2\"\n) == \"2\"\nassert solution(\n    \"2\"\n) == \"4\"\nassert solution(\n    \"9\"\n) == \"81\"\nassert solution(\n    \"99\"\n) == \"99\"\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 1\n\n'''\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == 1\nassert solution('2\\n') == 2\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '2'\nassert solution('100') == '4'\nassert solution('1000') == '8'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''10''') == '2'\nassert solution('''1000''') == '2'\nassert solution('''10000''') == '4'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('9') == '4'\nassert solution('998') == '8'\nassert solution('1099') == '9'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('<<><') == ''\nassert solution('<><') == ''\nassert solution('<<><>') == '3'\nassert solution('<<<><><') == '3'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('<><') == 2\nassert solution('<<><') == 2\nassert solution('<<>>') == 0\nassert solution('<<<><') == 2\nassert solution('<<>><') == 3\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n<<<<\\n\"\n) == \"2\"\nassert solution(\n    \"5\\n>>>>>\\n\"\n) == \"5\"\nassert solution(\n    \"4\\n>><<\\n\"\n) == \"0\"\nassert solution(\n    \"5\\n<<>>\\n\"\n) == \"5\"\n\n\n\"\"\"\n\n\"\"\"\n\u9898\u76ee\u63cf\u8ff0\n\n\u6e38\u620f\u4e3b\u7a0b\u5e8f\uff0c\u542f\u52a8\u540e\u53ef\u4ee5\u76f4\u63a5\u63a5\u53d7\u7528\u6237\u8f93\u5165\uff0c\u6309\u7a7a\u683c\u952e\u7ee7\u7eed\u56de\u5408\u3002\n\n\"\"\"\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('<<><') == '2'\nassert solution('>>>>>') == '5'\nassert solution('>><<') == '0'\n\"\"\"\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('<<><') == 2\nassert solution('>><<') == 5\nassert solution('<<<<<<<') == 15\nassert solution('>>>>>>') == 0\n'''"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == input\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('<<><') == '2'\nassert solution('>>>>>') == '5'\nassert solution('>><<') == '0'"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('<<><') == '2'\nassert solution('>><<') == '5'\nassert solution('>>>>>') == '0'\nassert solution('<><><>') == '2'\nassert solution('>><<<>') == '5'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '4'\nassert solution('2\\n3') == '6'\nassert solution('2\\n4') == '8'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\nassert solution('''4\n100003 100004 100005 100006''') == '10000800015'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 4 4 2''') == \"8\"\nassert solution('''4\n2 2 3 5''') == \"0\"\nassert solution('''4\n100003 100004 100005 100006''') == \"10000800015\""
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 4 4 2') == '8'\nassert solution('2\\n2 4 4 2') == '0'\nassert solution('4\\n2 4 4 2') == '8'\nassert solution('4\\n2 4 4 2') == '0'\nassert solution('2\\n
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 4 4 2\n''') == '8'\nassert solution('''4\n2 2 3 5\n''') == '0'\nassert solution('''4\n100003 100004 100005 100006\n''') == '10000800015'\nassert solution('''4\n1000000000 1000000 1 10000000\n''') == '9999999999999999999999999999'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4 4 2') == '8'\nassert solution('2 4 4 2\\n') == '8'\nassert solution('4\\n2 4 4 2\\n') == '0'\nassert solution('4\\n2 2 3 5\\n') == '0'\nassert solution('4\\n100003 100004 100005 100006\\n') == '10000800015'"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2 4 4 2\n''') == '8'\n\nassert solution('''4\n2 2 3 5\n''') == '0'\n\nassert solution('''4\n100003 100004 100005 100006\n''') == '10000800015'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 4 4 2\\n\") == \"8\"\nassert solution(\"4\\n2 4 4 2\\n\") == \"0\"\nassert solution(\"4\\n2 2 3 5\\n\") == \"10000800015\"\n\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 4 4 2\n''') == '8'\nassert solution('''4\n2 2 3 5\n''') == '0'\nassert solution('''3\n1 2 2\n''') == '0'\nassert solution('''4\n1 2 3 4\n''') == '8'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ab') == '13'\nassert solution('ab') == '13'\nassert solution('abc') == '26'\nassert solution('abc') == '26'\nassert solution('abc') == '26'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ab') == '10'\nassert solution('de') == '23'\nassert solution('aj') == '14'\nassert solution('abcdef') == '2345'\nassert solution('ghij') == '3'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\naa\\nab\\njj\\nbba\\njbb\\njb\\njbbb\\njbbbbb\") == \"136542\"\nassert solution(\"2\\nab\\nab\\njbbb\\njbbbbb\") == \"44\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == '47'\nassert solution('ab') == '47'\nassert solution('abcdef') == '136542'\nassert solution('ghij') == '136542'\nassert solution('aa') == '44'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nab\nde\naj\n''') == '47'\nassert solution('''5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542'\nassert solution('''3\naa\njj\naa\n''') == '44'\nassert solution('''4\nabc\nd\ng\nx\n''') == '56'"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\nab\\nde\\naj\") == \"47\"\nassert solution(\"5\\nabcdef\\ngij\\nbdef\\naccbd\\ng\") == \"136542\"\nassert solution(\"3\\naa\\njj\\naa\") == \"44\"\nassert solution(\"3\\naa\\njj\\naa\\nabcd\") == \"4542\"\nassert solution(\"3\\naa\\njj\\naa\\nabcd\\naa\") == \"4645\"\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '10'\nassert solution('3\\n') == '22'\nassert solution('4\\n') == '44'\nassert solution('5\\n') == '11'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nab\nde\naj\n''') == '47'\nassert solution('''5\nabcdef\nghij\nbdef\naccbd\ng\n''') == '136542'\nassert solution('''3\naa\njj\naa\n''') == '44'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '47'\nassert solution('''5''') == '136542'\nassert solution('''3''') == '44'\nassert solution('''ab''') == '47'\nassert solution('''de''') == '47'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('1 1') == 0\nassert solution('1 1 1') == 0\nassert solution('1 1 1 1') == 0\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 6\\n\") == \"2\"\nassert solution(\"4 5\\n\") == \"3\"\nassert solution(\"4 8\\n\") == \"3\"\nassert solution(\"1 3\\n\") == \"1\"\nassert solution(\"2 5\\n\") == \"2\"\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('10 100') == '2'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('6 7') == '3'\nassert solution('7 8') == '3'\nassert solution('9 10') == '3'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 5') == '3'\nassert solution('1 2') == '1'\nassert solution('0 10') == '1'\nassert solution('10 10') == '2'\nassert solution('0 10 0') == '1'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('2 10') == '2'\n\nprint('Test cases passed')\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'NO'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AB') == 'NO'\nassert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('ABA') == 'NO'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABBA\") == \"NO\"\nassert solution(\"ABA\") == \"YES\"\nassert solution(\"ABABA\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('AAAB') == 'YES'\nassert solution('ABB') == 'YES'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('GRIEBMUT') == 'YES'\n\n'''\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"NO\"\nassert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4 5\\n1\\n15\") == \"YES\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n\nassert solution('''\n5\n1 2 3 4 5\n1\n15\n''') == 'YES'\n\nassert solution('''\n5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == \"YES\"\nassert solution('''5\n1 2 3 4 5\n1\n15\n''') == \"YES\"\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == \"NO\"\nassert solution('''5\n1 1 1 3 3\n2\n2 1 6\n''') == \"NO\"\nassert solution('''7\n1 2 3 4 5 6 7\n1\n7\n''') == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 1 3 3\\n3') == 'YES\\n5 L\\n4 L\\n3 L\\n2 L'\nassert solution('3\\n1 2 3\\n3') == 'NO'\nassert solution('4\\n1 2 2 2 1\\n1') == 'YES\\n1 L\\n4 L\\n3 L\\n2 L'\nassert solution('7\\n1 2 2 2 2 1 2\\n1') == 'YES\\n1 L\\n4 L\\n3 L\\n2 L\\n5 L\\n2 R'\nassert solution('9\\n1 1 1 1 1 1 1\\n1') == 'YES\\n1 L\\n4 L\\n3 L\\n2 L\\n5 L\\n2 R\\n3 R\\n4 R\\n5 R'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\nassert solution(\n'''5\n1 2 3 4 5\n1\n15\n''') == 'YES'\nassert solution(\n'''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\nassert solution(\n'''6\n1 2 2 2 1 2\n2\n2 1 6\n''') == 'NO'\nassert solution(\n'''6\n1 2 2 2 1 2\n2\n1 3\n''') == 'NO'\n\n'''"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 2 3 4 5') == 'YES'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"6\n1 2 2 2 1 2\n2\n5 5\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"5\n1 2 3 4 5\n1\n15\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"5\n1 1 1 3 3\n3\n2 1 6\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n2\\n2\\n1\\n2\\n1') == 'NO'\nassert solution('1\\n2\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'No'\nassert solution('2 2') == 'Yes'\nassert solution('3 3') == 'Yes'\nassert solution('3 3\\n2 2\\n0 0\\n-2 1\\n0 3\\n2 2') == 'Yes'\nassert solution('2 1\\n1 0\\n2 2\\n3 1') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('1 0') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('1 1') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 3\n0 0\n2 0\n3 1\n-2 1\n0 3\n2 2''') == 'Yes'\nassert solution('''2 1\n1 0\n2 2\n3 1''') == 'No'\nassert solution('''3 3\n0 0\n2 0\n3 1\n-2 1\n0 3\n2 2''') == 'Yes'\nassert solution('''3 3\n-2 1\n0 3\n2 2\n1 0''') == 'No'\nassert solution('''2 1\n1 0\n2 2\n3 1''') == 'No'\n'''"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('-2 1') == 'Yes'\nassert solution('0 0') == 'Yes'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\nassert solution(\"1 0\") == \"Yes\"\nassert solution(\"0 3\") == \"Yes\"\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2') == 'Yes'\nassert solution('2 1\\n1 0\\n2 2\\n3 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('0 0') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('1 1') == 'Yes'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom typing import Tuple\n\nR, B = list(map(int, input().split()))\n\nspaceships = {}\nbases = {}\nfor _ in range(B):\n    x, y = list(map(int, input().split()))\n    bases[(x, y)] = 1\n\nfor _ in range(R):\n    x, y = list(map(int, input().split()))\n    spaceships[(x, y)] = 1\n\nfor b in bases:\n    for s in spaceships:\n        if abs(s[0] - b[0]) + abs(s[1] - b[1]) > 10000:\n            continue\n        if (s[0] - b[0]) == 0:\n            if (s[1] - b[1]) == 0:\n                continue\n            elif (s[1] - b[1]) > 0:\n                if (s[1] - b[1]) % 2 == 0:\n                    continue\n            else:\n                if (s[1] - b[1]) % 2 == 1:\n                    continue\n        elif (s[1] - b[1]) == 0:\n            if (s[0] - b[0]) == 0:\n                continue\n            elif (s[0] - b[0]) > 0:\n                if (s[0] - b[0]) % 2 == 0:\n                    continue\n            else:\n                if (s[0] - b[0]) % 2 == 1:\n                    continue\n        elif (s[1] - b[1]) > 0:\n            if (s[1] - b[1]) % 2 == 0:\n                if (s[0] - b[0]) > 0:\n                    if (s[0] - b[0]) % 2 == 1:\n                        continue\n                else:\n                    if (s[0] - b[0]) % 2 == 0:\n                        continue\n            else:\n                if (s[1] - b[1]) % 2 == 1:\n                    if (s[0] - b[0]) > 0:\n                        if (s[0] - b[0]) % 2 == 1:\n                            continue\n                    else:\n                        if (s[0] - b[0]) % 2 == 0:\n                            continue\n        else:\n            if (s[1] - b[1]) % 2 == 0:\n                if (s[0] - b[0]) > 0:\n                    if (s[0] - b[0]) % 2 == 1:\n                        continue\n                else:\n                    if (s[0] - b[0]) % 2 == 0:\n                        continue\n            else:\n                if (s[1] - b[1]) % 2 == 1:\n                    if (s[0] - b[0]) > 0:\n                        if (s[0] - b[0]) % 2 == 1:\n                            continue\n                    else:\n                        if (s[0] - b[0]) % 2 == 0:\n                            continue\nprint(\"Yes\") if len(spaceships) == len(bases) else print(\"No\")\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2') == 'Yes'\nassert solution('2 1\\n1 0\\n2 2\\n3 1') == 'No'\nassert solution('1 3\\n0 0\\n2 0\\n3 1') == 'No'\nassert solution('1 3\\n0 0\\n2 0\\n3 1') == 'No'\nassert solution('1 3\\n0 0\\n2 0\\n3 1') == 'No'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('80 7 16 4 48') == '16 3'\nassert solution('21 5 3 33') == '1 4'\nassert solution('10 10 1 10 1') == '1 4'\nassert solution('100 99 99 99 99') == '0 0'\nassert solution('1 1 1 1 1') == '1 4'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n-4 3 -1 1\\n1 2 4 8\\n-2 -5 2 -5\\n0 -1 0 0 0') == '1 4\\n'\nassert solution('4\\n-1 2 -5 1\\n0 0 -1 0\\n0 -1 0 0\\n0 -1 0 0') == '1 4\\n'\nassert solution('3\\n1 2 -1\\n-2 -1 1\\n1 1 -1') == '1 2\\n'\nassert solution('4\\n1 2 -5 1\\n0 0 -1 0\\n0 -1 0 0\\n0 -1 0 0') == '1 4\\n'\nassert solution('5\\n0 0 -2 0 0\\n0 0 0 0 0\\n0 -2 0 0 0\\n0 0 0 0 0') == '1 1\\n'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '16 3'\nassert solution('4') == '1 4'\n\n\n\nfrom math import log\n\nn = int(stdin.readline().strip())\na = sorted(map(int, stdin.readline().strip().split(' ')))\n\nbest_r = None\nbest_c = 0\n\nfor r in range(1, 10):\n    c = sum(1 for ai in a if ai % r == 0)\n    if c > best_c:\n        best_r = r\n        best_c = c\n\nprint(best_r, best_c)"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n' + '23 37 61 72 22 15\\n') == '16 3'\nassert solution('2\\n' + '3\\n') == '1 4'\nassert solution('10\\n' + '15 31 42 52 49 47 46 45 43 45 49 44 47 43 46 45 44 45 47 45 47 46\\n') == '1 4'\nassert solution('7\\n' + '1 3 2 5 4 3 2 1\\n') == '4 3'\nassert solution('1\\n' + '2\\n') == '1 1'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 5 6 7 11 16 22 27 40 52 64 80') == '2 1'\nassert solution('1\\n2 2 4 6 8 10 12 14 16 17 22 24 26 28 30 32') == '0 1'\nassert solution('2\\n2 3 4 6 9 10 12 13 15 16 19 22 25 26 28 30 31') == '1 2'\nassert solution('3\\n3 4 6 9 10 12 15 17 19 22 25 26 28 30 31 34') == '0 1'\nassert solution('4\\n4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 23 24 25 26 27 28 29 30 31 32 33') == '1 2'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('9') == '0'\nassert solution('7') == '0'\nassert solution('13') == '1'\nassert solution('16') == '2'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3\\n'\nassert solution('4\\n21 5 3 33') == '1 4\\n'\nassert solution('5\\n5 5 5 5 5') == '0 5\\n'\n\n\n\"\"\"\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '16 3'\nassert solution('4') == '1 4'\nassert solution('21 5 3 33') == '1 4'\n\"\"\"\n\nfrom itertools import count"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '16 3'\nassert solution('4') == '1 4'\nassert solution('21 5 3 33') == '1 4'\nassert solution('80 7 16 4 48') == '16 3'\n\nassert solution('1'*10**6) == '0'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n80 7 16 4 48\n''') == '16 3'\nassert solution('''4\n21 5 3 33\n''') == '1 4'"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('10 10') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('1 10') == '1'\nassert solution('10 10') == '0'\nassert solution('1 100') == '0'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 6''') == '2'\nassert solution('''10 1''') == '9'\nassert solution('''10 10''') == '0'\nassert solution('''2 1''') == '0'\nassert solution('''2 5''') == '3'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 9\") == \"0\"\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 6''') == '2'\nassert solution('''10 1''') == '9'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 6\") == \"2\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"10 5\") == \"9\"\nassert solution(\"10 5\") == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('4 1') == '3'\nassert solution('10 1') == '9'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\"\nimport sys\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == 'NO'\nassert solution('5\\n1 3\\n2 4\\n3 5\\n4 5\\n') == 'NO'\nassert solution('5\\n5 7\\n3 6\\n2 9\\n7 10\\n1 4\\n') == 'YES'\nassert solution('5\\n5 7\\n3 6\\n2 9\\n7 10\\n1 4\\n6 8\\n') == 'NO'\nassert solution('5\\n5 7\\n3 6\\n2 9\\n7 10\\n1 4\\n6 8\\n4 10\\n') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 5\\n4 8\\n9 10\\n5 7\\n8 6') == 'NO'\nassert solution('2\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10') == 'NO'\nassert solution('2\\n2 3\\n4 5\\n6 7\\n8 9\\n10') == 'YES'\nassert solution('1\\n3\\n4 5\\n6 7\\n8 9\\n10') == 'NO'\nassert solution('2\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n11 12\\n13 14\\n15 16\\n17 18') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == None"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n9 12\n2 11\n1 3\n6 10\n5 7\n4 8\n''') == 'YES'\nassert solution('''5\n1 3\n2 4\n5 9\n6 8\n7 10\n''') == 'NO'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''3\n2 2\n1 2\n3 1\n''') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n1 2\\n') == 'NO'\nassert solution('1\\n1 2\\n') == 'YES'\nassert solution('1\\n1 1\\n') == 'NO'\nassert solution('1\\n1 1\\n1 1\\n') == 'YES'\nassert solution('2\\n1 1\\n1 1\\n') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8\") == \"YES\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\") == \"NO\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n5 7\") == \"NO\"\nassert solution(\"3\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\") == \"YES\"\nassert solution(\"3\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n1 4\") == \"NO\"\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == 'NO'\nassert solution('1 2\\n1 3\\n2 3\\n1 3\\n2 3\\n1 3\\n1 3') == 'NO'\nassert solution('1 2\\n1 3\\n2 3\\n1 3') == 'YES'\nassert solution('1 2\\n1 3\\n2 3') == 'YES'\nassert solution('5 6\\n2 4\\n3 4\\n4 5\\n5 6\\n5 6\\n6 7\\n6 7') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n4 8\\n') == 'YES'\nassert solution('5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n4 8\\n') == 'NO'\nassert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n') == 'NO'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n' + '9' * 10 + '\\n' + '8' * 10 + '\\n' + '7' * 10 + '\\n' + '6' * 10 + '\\n' + '4' * 10 + '\\n' + '3' * 10 + '\\n') == 'NO'\nassert solution('1\\n' + '9' * 10 + '\\n' + '8' * 10 + '\\n' + '7' * 10 + '\\n' + '6' * 10 + '\\n' + '4' * 10 + '\\n' + '3' * 10 + '\\n') == 'NO'\nassert solution('2\\n' + '9' * 10 + '\\n' + '8' * 10 + '\\n' + '7' * 10 + '\\n' + '6' * 10 + '\\n' + '4' * 10 + '\\n' + '3' * 10 + '\\n') == 'NO'\nassert solution('3\\n' + '9' * 10 + '\\n' + '8' * 10 + '\\n' + '7' * 10 + '\\n' + '6' * 10 + '\\n' + '4' * 10 + '\\n' + '3' * 10 + '\\n') == 'NO'\nassert solution('4\\n' + '9' * 10 + '\\n' + '8' * 10 + '\\n' + '7' * 10 + '\\n' + '6' * 10 + '\\n' + '4' * 10 + '\\n' + '3' * 10 + '\\n') == 'NO'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n100 200 1 1 1') == '3'\nassert solution('2\\n101 99') == '0'\nassert solution('3\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('0 0') == 0\nassert solution('0 0 0') == 0\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n100 200 1 1 1\\n') == '3'\nassert solution('5\\n1 2 3 4 5\\n') == '0'\nassert solution('2\\n101 99\\n') == '1'\nassert solution('1\\n1\\n') == '0'\n\n\n\"\"\"\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('1\\n1\\n2') == '1'\nassert solution('1\\n1\\n1\\n2') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\nassert solution('''5\n100 100 100 1 1 1''') == '3'\nassert solution('''5\n100 100 100 1 1 1''') == '3'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n101 99') == '1'\nassert solution('1\\n101 99') == '0'\nassert solution('5\\n100 200 1 1 1') == '3'\nassert solution('1\\n1') == '0'\nassert solution('1\\n10') == '0'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\nassert solution('''3\n100 200 100''') == '1'\nassert solution('''4\n100 100 100 100''') == '0'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\n100 200 1 1 1\n''') == '3'\nassert solution(\n'''2\n101 99\n''') == '0'\nassert solution(\n'''3\n1 2 3\n''') == '1'"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\nassert solution('''5\n1 1 1 1 1''') == '0'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1 1') == '1'\nassert solution('1\\n2 2') == '1'\nassert solution('2\\n3 4') == '1'\nassert solution('2\\n5 6') == '2'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\nNYNNY\\n\") == \"YES\"\nassert solution(\"6 1\\n????NN\\n\") == \"NO\"\nassert solution(\"4 2\\nYYYNN\\n\") == \"YES\"\nassert solution(\"4 2\\nYYYNN\\n\") == \"YES\"\nassert solution(\"7 3\\nYYYNNNNNNNNYNNN\\n\") == \"YES\"\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\nNYNNY\\n') == 'YES'\nassert solution('6 1\\n????NN\\n') == 'NO'\n\n\n\"\"\"\n\nn, k = map(int, stdin.readline().strip().split())\nseries = stdin.readline().strip()\n\nans = \"NO\"\n\nfor i in range(0, n, 2):\n    if series[i] == \"N\":\n        if series[i+1] == \"Y\":\n            ans = \"YES\"\n        else:\n            ans = \"NO\"\n            break\n    elif series[i] == \"Y\":\n        if series[i+1] == \"N\":\n            ans = \"NO\"\n            break\n    elif series[i] == \"?\":\n        if series[i+1] == \"Y\":\n            ans = \"NO\"\n            break\n        else:\n            ans = \"YES\"\n            break"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n\n\n\n--- 0.1s ---"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\nassert solution('6 2') == 'YES'\nassert solution('7 4') == 'YES'\nassert solution('7 3') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"2 0\") == \"NO\"\nassert solution(\"3 0\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\nNYNNY\\n') == 'YES'\nassert solution('6 1\\n????NN\\n') == 'NO'\nassert solution('2 2\\nYYYYYYYY\\n') == 'YES'\nassert solution('4 3\\nYYYYYYYYYYYYYYY\\n') == 'NO'\nassert solution('7 3\\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\\n') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nNYNNY\\n\") == \"YES\"\nassert solution(\"5 1\\nNN\\n\") == \"NO\"\nassert solution(\"6 1\\n??NN\\n\") == \"NO\"\nassert solution(\"8 2\\nYYYYYYYYYYYYYYYYYYY\\n\") == \"YES\"\nassert solution(\"10 3\\n????NNNNNNNNNNNNNNNNNNNNNNNN\\n\") == \"YES\"\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2\\nNYNNY\\n') == 'YES'\nassert solution('6 1\\n????NN\\n') == 'NO'\nassert solution('6 2\\nYYYYYY\\n') == 'YES'\nassert solution('3 1\\nYYYYY\\n') == 'NO'\nassert solution('3 2\\nYYYYY\\n') == 'YES'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nNYNNY\") == \"YES\"\nassert solution(\"6 1\\n????NN\") == \"NO\"\nassert solution(\"5 2\\nNNNN\") == \"YES\"\nassert solution(\"2 1\\nY\") == \"YES\"\nassert solution(\"5 3\\nYYYYYY\") == \"YES\"\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3 4 2'\n) == '8'\nassert solution(\n    '10 5 2'\n) == '1'\nassert solution(\n    '100 200 100'\n) == '0'\nassert solution(\n    '10 5 4'\n) == '1'\nassert solution(\n    '10000000000 1000000000 1000000000'\n) == '1'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 2') == '8'\nassert solution('5 3 2') == '28'\nassert solution('8 4 2') == '64'\nassert solution('5 3 2') == '28'\nassert solution('1000000 1') == '1'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2\") == \"8\"\nassert solution(\"3 5 2\") == \"0\"\nassert solution(\"3 2 2\") == \"0\"\nassert solution(\"3 2 0\") == \"0\"\nassert solution(\"3 4 1\") == \"1\"\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '8'\nassert solution('3 4 2') == '8'\nassert solution('3 4') == '8'\nassert solution('3 4 2') == '8'\nassert solution('2 10 4') == '-18'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('1 2 2') == '-1'\nassert solution('1 3 2') == '0'\nassert solution('-1 -1 0') == '-1'\nassert solution('1 1 2') == '-3'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('-10 4 2') == '8'\n\"\"\"\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(3, 4, 2) == \"8\"\nassert solution(6, 8, 2) == \"0\"\nassert solution(3, 4, 1) == \"1\"\nassert solution(6, 8, 1) == \"8\"\nassert solution(3, 4, 5) == \"4\"\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 4 2') == '8'\nassert solution('3 4 2') == '8'\nassert solution('4 1 1') == '8'\nassert solution('3 4 2') == '8'\nassert solution('1 1 1') == '4'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(input().strip() for _ in range(int(input().strip())))) == 'YES'\n\"\"\""
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('burunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749') == 'YES'\nassert solution('Applejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450') == 'NO'\n\n\"\"\"\n\nn = int(input())\n\na = []\n\nfor _ in range(n):\n    a.append(input().split())\n\nm = min(int(a[i][1]) for i in range(n))\n\nfor i in range(n):\n    if int(a[i][1]) >= m:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('burunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749') == 'YES'\nassert solution('Applejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450') == 'NO'\n\"\"\"\n\nN = int(input())\nh_p = {}\nfor _ in range(N):\n    hp, _, r = input().rpartition(' ')\n    r = int(r)\n    h_p[hp] = r\n\nprint('NO' if max(h_p.values()) < 2400 else 'YES')\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749') == 'YES'\nassert solution('1\\nDorina-7-5-3\\nGosho-7-7-4') == 'NO'\nassert solution('3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450') == 'NO'\n\n\n\n\"\"\"\n\nn = int(input())\n\npre = set()\nafter = set()\n\nfor _ in range(n):\n    lst = input().split()\n    pre.add(lst[0])\n    after.add(lst[1])\n\npre = list(pre)\nafter = list(after)\n\nres = set(pre) & set(after)"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'NO'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'YES'\nassert solution('''3\n547-123-4567\nDagmire245-123-4567\n547-123-4567\nDagmire245-123-4567\n547-123-4567\nDagmire245-123-4567\n547-123-4567\nDagmire245-123-4567\n547-123-4567\nDagmire245-123-4567\n547-123-4567\nDagmire245-123-4567''') == 'YES'\nassert solution('''1\nDagmire245-123-4567''') == 'NO'\nassert solution('''0\nDagmire245-123-4567''') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n2\\n1\\n') == 'NO'\nassert solution('2\\n3\\n1\\n') == 'NO'\nassert solution('2\\n4\\n1\\n') == 'NO'\nassert solution('2\\n5\\n1\\n') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n2\\n2\") == \"NO\"\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n'\n    'BudAlNik 2144 2214\\n'\n    'subscriber 2833 2749\\n'\n    'Burunduk1 2526 2537\\n'\n    'Pinkie_Pie -2500 -2450\\n'\n    'Applejack 2400 2400\\n'\n    'Fluttershy 2390 2431') == 'YES'\n\nassert solution('2\\n'\n    'BudAlNik 2144 2214\\n'\n    'subscriber 2833 2749\\n'\n    'Burunduk1 2526 2537') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'YES'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2473 2431\nsubscriber 2944 2749\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2473 2431\nsubscriber 2944 2749\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2473 2431\nsubscriber 2944 2749\nPinkie_Pie -2500 -2450''') == 'NO'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0b100000000) == 1\nassert solution(0b101) == 2\nassert solution(0b10100) == 3\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0111') == 4\nassert solution('1011') == 2\nassert solution('0111') == 3\nassert solution('10101') == 3\nassert solution('10100') == 2\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('101') == 2\nassert solution('100000000') == 4\nassert solution('10100') == 3\nassert solution('1001011') == 1\nassert solution('0') == 0\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(100000000) == 4\nassert solution(101) == 2\nassert solution(10100) == 3\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\nassert solution('11111110100') == '6'\nassert solution('00011111000101') == '6'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10000') == 4\nassert solution('101') == 2\nassert solution('10100') == 3\nassert solution('10101') == 4\nassert solution('1011') == 4\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\nassert solution('10011010000') == '5'\nassert solution('011010100100') == '2'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1000110') == 2\nassert solution('0') == 0\nassert solution('00') == 1\nassert solution('1000000') == 1\nassert solution('101') == 2\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\nassert solutionn"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1\\n1 1 1\\n1 1 1') == '2'\nassert solution('2 2\\n0 0 0\\n0 0 0') == '2'\nassert solution('2 3\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('4 3\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '2'"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == '4'\nassert solution('''5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == '2'\nassert solution('8 5\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n') == '7'\nassert solution('8 1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n') == '3'\n\n\n-----My Analysis-----\n\nSuppose that we have a matrix a, which is defined as:\n\na = [ [0, 0, 0, 1, 1, 0, 0, 0, 0],\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\n      [0, 0, 0, 0, 1, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]]\n\nFor the given matrix, we have the following symmetry lines:\n\n    1- 2- 3- 4- 5- 6- 7- 8- 9- 10- 11- 12- 13- 14- 15- 16- 17- 18- 19- 20- 21- 22- 23- 24- 25- 26- 27- 28- 29- 30- 31- 32- 33- 34- 35- 36- 37- 38- 39- 40- 41- 42- 43- 44- 45- 46- 47- 48- 49- 50- 51- 52- 53- 54- 55- 56- 57- 58- 59- 60- 61- 62- 63- 64- 65- 66- 67- 68- 69- 70- 71- 72- 73- 74- 75- 76- 77- 78- 79- 80- 81- 82- 83- 84- 85- 86- 87- 88- 89- 90- 91- 92- 93- 94- 95- 96- 97- 98- 99- 100- 101- 102- 103- 104- 105- 106- 107- 108- 109- 110- 111- 112- 113- 114- 115- 116- 117- 118- 119- 120- 121- 122- 123- 124- 125- 126- 127- 128- 129- 130- 131- 132- 133- 134- 135- 136- 137- 138- 139- 140- 141- 142- 143- 144- 145- 146- 147- 148- 149- 150- 151- 152- 153- 154- 155- 156- 157- 158- 159- 160- 161- 162- 163- 164- 165- 166- 167- 168- 169- 170- 171- 172- 173- 174- 175- 176- 177- 178- 179- 180- 181- 182- 183- 184- 185- 186- 187- 188- 189- 190- 191- 192- 193- 194- 195- 196- 197- 198- 199- 200- 201- 202- 203- 204- 205- 206- 207- 208- 209- 210- 211- 212- 213- 214- 215- 216- 217- 218- 219- 220- 221- 222- 223- 224- 225- 226- 227- 228- 229- 230- 231- 232- 233- 234- 235- 236- 237- 238- 239- 240- 241- 242- 243- 244- 245- 246- 247- 248- 249- 250- 251- 252- 253- 254- 255- 256- 257- 258- 259- 260- 261- 262- 263- 264- 265- 266- 267- 268- 269- 270- 271- 272- 273- 274- 275- 276- 277- 278- 279- 280- 281- 282- 283- 284- 285- 286- 287- 288- 289- 290- 291- 292- 293- 294- 295- 296- 297- 298- 299- 300- 301- 302- 303- 304- 305- 306- 307- 308- 309- 310- 311- 312- 313- 314- 315- 316- 317- 318- 319- 320- 321- 322- 323- 324- 325- 326- 327- 328- 329- 330- 331- 332- 333- 334- 335- 336- 337- 338- 339- 340- 341- 342- 343- 344- 345- 346- 347- 348- 349- 350- 351- 352- 353- 354- 355- 356- 357- 358- 359- 360- 361- 362- 363- 364- 365- 366- 367- 368- 369- 370- 371- 372- 373- 374- 375- 376- 377- 378- 379- 380- 381- 382- 383- 384- 385- 386- 387- 388- 389- 390- 391- 392- 393- 394- 395- 396- 397- 398- 399- 400- 401- 402- 403- 404- 405- 406- 407- 408- 409- 410- 411- 412- 413- 414- 415- 416- 417- 418- 419- 420- 421- 422- 423- 424- 425- 426- 427- 428- 429- 430- 431- 432- 433- 434- 435- 436- 437- 438- 439- 440- 441- 442- 443- 444- 445- 446- 447- 448- 449- 450- 451- 452- 453- 454- 455- 456- 457- 458- 459- 460- 461- 462- 463- 464- 465- 466- 467- 468- 469- 470- 471- 472- 473- 474- 475- 476- 477- 478- 479- 480- 481- 482- 483- 484- 485- 486- 487- 488- 489- 490- 491- 492- 493- 494- 495- 496- 497- 498- 499- 500- 501- 502- 503"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1') == '2'\nassert solution('8 4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '3'\nassert solution('8 8\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '4'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\\n\") == \"2\"\nassert solution(\"3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"3\"\nassert solution(\"8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n\") == \"2\"\nassert solution(\"3 1\\n0\\n1\\n1\\n0\\n\") == \"3\"\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1\"\"\"\n) == '2'\nassert solution(\n    \"\"\"3 3\n0 0 0\n0 0 0\n0 0 0\"\"\"\n) == '3'\nassert solution(\n    \"\"\"8 1\n0\n1\n1\n0\n0\n1\n1\n0\n\"\"\"\n) == '2'\nassert solution(\n    \"\"\"4 3\n0 0 0\n0 0 0\n0 0 0\"\"\"\n) == '3'\nassert solution(\n    \"\"\"7 5\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\"\"\"\n) == '5'"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''8 1\n0\n0\n0\n0\n0\n0\n0\n0\n''') == '2'\nassert solution('''8 1\n0\n0\n0\n0\n0\n0\n0\n0\n''') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('123') == '123'\nassert solution('123 456 789') == '789'\nassert solution('1234 5678 9') == '123'\nassert solution('1234567890') == '1234567890'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1'\nassert solution('2 8\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n7 11\n4 7\n''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\nassert solution('''7\n10 13\n1 3\n4 6\n3 5\n5 7\n9 10\n6 8\n''') == '4'\nassert solution('''8\n10 17\n1 3\n4 6\n3 5\n5 7\n9 10\n6 8\n8 9\n10 11\n''') == '5'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n7 11\n4 7\n''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n7 11\\n4 7') == '1'\nassert solution('3\\n4 8\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '3'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n2\\n2') == '2'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4 4\\n4 4\\n2 3') == '1'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 1') == '1'\nassert solution('2\\n3 4\\n2 1') == '1'\nassert solution('1\\n1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n7 11\n4 7\n\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n5 6\n\n\"\"\"\n    ) == \"3\"\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\nprint(expected_output)\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n5 6\n2 2''') == \"YES\"\nassert solution('''2 1\n5 6\n2 2''') == \"NO\"\nassert solution('''3 4\n3 3 4 3\n3 2 1 2''') == \"YES\"\nassert solution('''3 4\n5 6\n2 2''') == \"NO\"\nassert solution('''3 2\n2 3 4\n3 2''') == \"NO\"\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n5 5\\n2 2') == 'YES'\nassert solution('2 2\\n5 6\\n2 2') == 'NO'\nassert solution('2 2\\n3 2 10 1\\n3 2 10 1') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'NO'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == 'YES'\nassert solution('''2 2\n5 6\n2 2''') == 'NO'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n''') == 'YES'\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n''') == 'NO'\nassert solution('''4 1\n4 1 10 1\n5 2 10 1\n''') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n5 5\\n2 2') == 'YES'\nassert solution('2 2\\n5 6\\n2 2') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 2') == 'NO'\nassert solution('2 2\\n5 6\\n2 2') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1\\n4 1 10 1\\n3 2 10 1') == \"YES\"\nassert solution('3 2\\n2 1 10 1\\n2 2 10 1\\n2 3 10 1\\n2 4 10 1\\n2 5 10 1\\n2 6 10 1\\n2 7 10 1\\n2 8 10 1\\n2 9 10 1\\n3 2 10 1\\n3 3 10 1\\n3 4 10 1\\n3 5 10 1\\n3 6 10 1\\n3 7 10 1\\n3 8 10 1\\n3 9 10 1\\n4 1 10 1\\n4 2 10 1\\n4 3 10 1\\n4 4 10 1\\n4 5 10 1\\n4 6 10 1\\n4 7 10 1\\n4 8 10 1\\n4 9 10 1\\n5 1 10 1\\n5 2 10 1\\n5 3 10 1\\n5 4 10 1\\n5 5 10 1\\n5 6 10 1\\n5 7 10 1\\n5 8 10 1\\n5 9 10 1\\n6 1 10 1\\n6 2 10 1\\n6 3 10 1\\n6 4 10 1\\n6 5 10 1\\n6 6 10 1\\n6 7 10 1\\n6 8 10 1\\n6 9 10 1\\n7 1 10 1\\n7 2 10 1\\n7 3 10 1\\n7 4 10 1\\n7 5 10 1\\n7 6 10 1\\n7 7 10 1\\n7 8 10 1\\n7 9 10 1\\n8 1 10 1\\n8 2 10 1\\n8 3 10 1\\n8 4 10 1\\n8 5 10 1\\n8 6 10 1\\n8 7 10 1\\n8 8 10 1\\n8 9 10 1\\n9 1 10 1\\n9 2 10 1\\n9 3 10 1\\n9 4 10 1\\n9 5 10 1\\n9 6 10 1\\n9 7 10 1\\n9 8 10 1\\n9 9 10 1\\n10 1 10 1\\n10 2 10 1\\n10 3 10 1\\n10 4 10 1\\n10 5 10 1\\n10 6 10 1\\n10 7 10 1\\n10 8 10 1\\n10 9 10 1\\n11 1 10 1\\n11 2 10 1\\n11 3 10 1\\n11 4 10 1\\n11 5 10 1\\n11 6 10 1\\n11 7 10 1\\n11 8 10 1\\n11 9 10 1\\n12 1 10 1\\n12 2 10 1\\n12 3 10 1\\n12 4 10 1\\n12 5 10 1\\n12 6 10 1\\n12 7 10 1\\n12 8 10 1\\n12 9 10 1') == \"NO\"\nassert solution('2 1\\n4 1 10 1\\n3 2 10 1\\n2 2 10 1\\n2 3 10 1\\n2 4 10 1\\n2 5 10 1\\n2 6 10 1\\n2 7 10 1\\n2 8 10 1\\n2 9 10 1\\n3 2 10 1\\n3 3 10 1\\n3 4 10 1\\n3 5 10 1\\n3 6 10 1\\n3 7 10 1\\n3 8 10 1\\n3 9 10 1\\n4 1 10 1\\n4 2 10 1\\n4 3 10 1\\n4 4 10 1\\n4 5 10 1\\n4 6 10 1\\n4 7 10 1\\n4 8 10 1\\n4 9 10 1\\n5 1 10 1\\n5 2 10 1\\n5 3 10 1\\n5 4 10 1\\n5 5 10 1\\n5 6 10 1\\n5 7 10 1\\n5 8 10 1\\n5 9 10 1\\n6 1 10 1\\n6 2 10 1\\n6 3 10 1\\n6 4 10 1\\n6 5 10 1\\n6 6 10 1\\n6 7 10 1\\n6 8 10 1\\n6 9 10 1\\n7 1 10 1\\n7 2 10 1\\n7 3 10 1\\n7 4 10 1\\n7 5 10 1\\n7 6 10 1\\n7 7 10 1\\n7 8 10 1\\n7 9 10 1\\n8 1 10 1\\n8 2 10 1\\n8 3 10 1\\n8 4 10 1\\n8 5 10 1\\n8 6 10 1\\n8 7 10 1\\n8 8 10 1\\n8 9 10 1\\n9 1 10 1\\n9 2 10 1\\n9 3 10 1\\n9 4 10 1\\n9 5 10 1\\n9 6 10 1\\n9 7 10 1\\n9 8 10 1\\n9 9 10 1\\n10 1 10 1\\n10 2 10 1\\n10 3 10 1\\n10 4 10 1\\n10 5 10 1\\n10 6 10 1\\n10 7 10 1\\n10 8 10 1\\n10 9 10 1\\n11 1 10 1\\n11 2 10 1\\n11 3 10 1\\n11 4 10 1\\n11 5 10 1\\n11 6 10 1\\n11 7 10 1\\n11 8 10 1\\n11 9 10 1\\n12 1 10 1\\n12 2 10 1\\n12 3 10 1\\n12 4 10 1\\n12 5 10 1\\n12 6 10 1\\n12 7 10 1\\n12 8 10 1\\n12 9 10 1') == \"NO\"\nassert solution('3 2\\n2 1 10 1\\n2 2 10 1\\n2 3 10 1\\n2 4 10 1\\n2 5 10 1\\n2 6 10 1\\n2 7 10 1\\n2 8 10 1\\n2 9 10 1\\n3 2 10 1\\n3 3 10 1\\n3 4 10 1\\n3 5 10 1\\n3 6 10 1\\n3 7 10 1\\n3 8 10"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == \"YES\"\nassert solution('''2 2\n5 6\n2 2''') == \"NO\"\nassert solution('''4 1\n4 1 10 1\n3 2 10 1''') == \"YES\""
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"4 1 10 1\") == \"YES\"\nassert solution(\"3 2 10 1\") == \"NO\"\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n5 5\\n2 2\\n') == 'YES'\nassert solution('2 2\\n5 6\\n2 2\\n') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1\\n') == 'YES'\nassert solution('3 2\\n3 2 10 1\\n3 2 10 1\\n') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1\\n') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == 'YES'\n\nassert solution('''2 2\n5 6\n2 2''') == 'NO'\n\n\n'''\n\nn,k=map(int,stdin.split())\nl=sorted(list(map(int,stdin.split())),reverse=True)\nl2=sorted(list(map(int,stdin.split())),reverse=True)\ns=0\nfor i in l:\n    s+=i\nfor i in l2:\n    s+=i\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 4') == 'NO'\nassert solution('3 4\\n4 1 3 2') == 'NO'\nassert solution('4 1\\n3 2 10 1') == 'YES'\nassert solution('5 6\\n2 2 10 1') == 'YES'\nassert solution('5 6\\n2 2 10 1') == 'NO'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2''') == 'Yes'\nassert solution('''-1''') == 'Yes'\nassert solution('''?''') == 'No'\nassert solution('''1''') == 'Yes'\nassert solution('''1?''') == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('')) == ''\n\n\n\"\"\"\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('-1') == 'Yes'\nassert solution('?') == 'Yes'\nassert solution('-1 2') == 'No'\nassert solution('1 2 -1') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2\n-1\n?''') == 'Yes'\nassert solution('''2 100\n-10000\n0\n1\n''') == 'Yes'\nassert solution('''4 5\n?\n1\n?\n1\n?\n''') == 'No'\nassert solution('''4 100\n-10000\n0\n1\n''') == 'Yes'\nassert solution('''5 4\n?\n1\n?\n1\n?\n''') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 100') == 'Yes'\nassert solution('4 5') == 'No'\nassert solution('?', '?', '?') == 'No'\n\n\n\"\"\""
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('4 5') == 'No'\nassert solution('-1') == 'Yes'\nassert solution('?1?1?1?') == 'No'\nassert solution('1 2') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 100') == 'Yes'\nassert solution('4 5') == 'No'\nassert solution('? 1') == 'Yes'\nassert solution('? 0') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2\n-1\n?\n''') == 'Yes'\nassert solution('''2 100\n-10000\n0\n1\n''') == 'Yes'\nassert solution('''4 5\n?\n1\n?\n1\n?\n''') == 'No'\n'''\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n-1\n?\n''') == 'Yes'\nassert solution('''2 100\n-10000\n0\n1\n''') == 'Yes'\nassert solution('''4 5\n?\n1\n?\n1\n?\n''') == 'No'\nassert solution('''2 2\n?\n1\n?\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''14''') == '6'\nassert solution('''20''') == '15'\nassert solution('''8192''') == '8191'\nassert solution('''14''') == '6'\nassert solution('''20''') == '15'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\nassert solution(\"5\"*10**6) == \"5\"*10**6\n\n\n\"\"\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''14''') == '6'\nassert solution('''20''') == '15'\nassert solution('''8192''') == '8191'"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"14\") == \"6\"\nassert solution(\n\"20\") == \"15\"\nassert solution(\n\"8192\") == \"8191\"\n\n\"\"\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\nassert solution(\"303334\") == \"303333\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(14) == 6\nassert solution(20) == 15\nassert solution(8192) == 8191\n\nprint('All test cases passed successfully.')\n\"\"\"\n\nfrom math import sqrt, ceil\nfrom typing import Tuple"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('14') == 6\nassert solution('20') == 15\nassert solution('8192') == 8191\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'\nassert solution('8') == '7'\nassert solution('22222') == '2223'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n\n'''\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n\n-----"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''24 0''') == '2'\nassert solution('''24 1''') == '3'\nassert solution('''24 -1''') == '4'\nassert solution('''4 -7''') == '2'\nassert solution('''1 1''') == '-1'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('15 6\\n51528') == '10028'\nassert solution('1 1\\n102') == '100'\nassert solution('2 3\\n102') == '1000'\nassert solution('1 1\\n1') == '0'\nassert solution('4 5\\n331946') == '100003'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n51528\\n') == '10028\\n'\nassert solution('3 2\\n102\\n') == '100\\n'\nassert solution('1 1\\n1\\n') == '0\\n'\nassert solution('3 3\\n
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n51528') == '10028'\nassert solution('3 2\\n102') == '100'\nassert solution('1 1\\n1') == '0'\nassert solution('5 2\\n1') == '0'\nassert solution('5 3\\n999999999999') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n51528\n''') == '10028'\nassert solution('''3 2\n102\n''') == '100'\nassert solution('''1 1\n1\n''') == '0'\nassert solution('''1 1\n101\n''') == '101'\nassert solution('''5 7\n0101\n
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n51528\\n') == '10028'\nassert solution('3 2\\n102\\n') == '100'\nassert solution('1 1\\n1\\n') == '0'\nassert solution('1 1\\n0\\n') == '0'\nassert solution('2 1\\n11\\n') == '3'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '100'\nassert solution('5 3') == '10028'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('6 3') == '1010'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 3\n51528\n''') == '10028'\n\nassert solution('''3 2\n102\n''') == '100'\n\nassert solution('''1 1\n1\n''') == '0'\n\nassert solution('''5 2\n101\n''') == '101'\n\nassert solution('''7 2\n1089\n''') == '8910'"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"10028\"\nassert solution(\"3 2\") == \"100\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1010\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"3 1 5 2 3\") == \"5\"\nassert solution(\"1 3 5 2 3\") == \"4\"\nassert solution(\"1 3 5 2 3\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('3 4 4 4') == '1'\nassert solution('3 2 2 3') == '0'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('3 1 2 3') == '4'\nassert solution('3 2 2 3') == '4'\nassert solution('3 1 1 2') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"3 1 2 3\") == \"4\"\nassert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"2 3 1 3\") == \"4\""
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('3 1 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 4') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 4') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1 2 3''') == '5'\nassert solution('''1 3 2 3''') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 4') == '4'\nassert solution('1 3 4 2') == '4'\nassert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 4') == '4'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('5 6 3 -5 -1 0') == '2 1'\nassert solution('6 8 -5 -1 0') == '5 3'\nassert solution('3 5 5 0 3') == '2 5'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 1 2 0 1 2\n\"\"\"\n) == \"3 1\"\n\nassert solution(\n\"\"\"\n1 1 1 -1 -1 2\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n1 1 1 -1 -1 2\n\"\"\"\n) == \"1 1\"\n\nassert solution(\n\"\"\"\n2 1 2 0 1 2\n\"\"\"\n) == \"3 1\"\n\nassert solution(\n\"\"\"\n4 1 1 2 0 1 2\n\"\"\"\n) == \"3 1\""
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3 1\"\nassert solution(input()) == \"1 1\"\nassert solution(input()) == \"2 2\"\n\"\"\""
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"5 2 -2 2 -2 0 1\") == \"1 1\""
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"5 1 2 0 1 2\n\"\"\") == \"3 1\"\n\nassert solution(\n    \"\"\"1 1 1 -1 -1 2\n\"\"\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom math import gcd\n\nn, sx, sy, dx, dy, t = map(int, stdin.split())\n\nwhile t > 0:\n    sx, sy = (sx + dx - 1) % n + 1, (sy + dy - 1) % n + 1\n    t -= 1\n\nprint(sx, sy)\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1 2 0 1 2''') == '3 1'\nassert solution('''1 1 1 -1 -1 2''') == '1 1'\nassert solution('''4 2 3 1 -1 1''') == '5 4'\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\") == \"-1\"\nassert solution(\"??????????????????????????\") == \"-1\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(INPUT) == EXPECTEDOUT\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"-1\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\"??????????????????????????\\n\") == \"-1\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\\n\"\nassert solution(\"??????????????????????????\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\"??????????????????????????\\n\") == \"-1\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\\n\"\nassert solution(\"???GHIJKLMNOPQRSTUVWXYZ\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\n'''\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\"\nassert solution(\"??????????????????????????\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\n\"\"\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == '-1'\nassert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n100 200 100\n\"\"\") == \"YES\"\nassert solution(\"\"\"4\n100 100 100 200\n\"\"\") == \"NO\"\nassert solution(\"\"\"10\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"YES\"\n\"\"\"\n\nfrom sys import stdin\nn = int(stdin.readline().strip())\nweights = list(map(int, stdin.readline().strip().split()))"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n100 200 100\\n') == 'YES'\nassert solution('4\\n100 100 100 200\\n') == 'NO'\nassert solution('3\\n100 100 100\\n') == 'YES'\nassert solution('4\\n100 100 100 200\\n') == 'NO'\nassert solution('3\\n100 100 100\\n') == 'YES'\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n100 200 100\\n') == 'YES'\nassert solution('4\\n100 100 100 200\\n') == 'NO'\nassert solution('3\\n100 100 100\\n') == 'YES'\nassert solution('3\\n100 100 100\\n') == 'NO'\nassert solution('4\\n100 100 100 200\\n') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n100 200 100\n''') == 'YES'\n\nassert solution('''4\n100 100 100 200\n''') == 'NO'\n\nassert solution('''3\n100 200 100\n''') == 'NO'\n\nassert solution('''4\n100 100 100 200\n''') == 'YES'\n\nassert solution('''5\n9 9 9 9 9 9\n''') == 'YES'"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"5 4\") == \"11\"\nassert solution(\"4 3\") == \"17\"\nassert solution(\"7 5\") == \"19\"\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n001000\n000010\n000010\n''') == '12'\nassert solution('''5 2\n001000\n01100\n00100\n01100\n10010\n01100\n''') == '18'\nassert solution('''3 2\n01110\n01110\n01110\n01110\n''') == '18'\nassert solution('''2 1\n01010\n''') == '1'\nassert solution('''2 1\n00010\n''') == '1'\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"18\"\nassert solution(\"3 4\") == \"12\"\nassert solution(\"3 4\") == \"18\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 5\") == \"6\"\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"3 4\") == \"12\"\nassert solution(\"4 3\") == \"18\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"15 16\") == \"10\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n00100\\n01010') == '5'\nassert solution('5 5\\n001000\\n000010\\n000010\\n000010\\n000010') == '12'\nassert solution('5 3\\n01110\\n01110\\n01110\\n01110\\n01110') == '18'\nassert solution('3 4\\n01110\\n01110\\n01110\\n01110') == '18'\nassert solution('3 3\\n000010\\n000010\\n000010') == '6'\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n0010\n0100''') == '5'\nassert solution('''3 4\n01110\n01110\n01110\n01110''') == '18'\nassert solution('''4 3\n01110\n01110\n01110\n01110''') == '18'\nassert solution('''2 3\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n001000\\n000010\\n000010\\n000010\") == \"12\"\nassert solution(\"3 2\\n0010\\n0100\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 4\n0010\n0100\n''') == '5'\nassert solution('''3 4\n01110\n01110\n01110\n01110\n''') == '18'\nassert solution('''5 4\n01110\n01110\n01110\n01110\n''') == '12'\nassert solution('''4 3\n01110\n01110\n01110\n01110\n''') == '18'\nassert solution('''10 10\n00010\n00010\n00010\n00010\n00010\n00010\n00010\n00010\n00010\n00010\n00010\n''') == '80'\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n1 2 3 2 10\n1 3 4 3 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"4\n1 10 2 10\n2 4 2 2\n\"\"\") == \"10\"\n\nassert solution(\"\"\"7\n1 1 1 1 1 1 1\n2 2 2 3 6 7 6\n\"\"\") == \"2\"\n\nassert solution(\"\"\"8\n1 1 1 1 1 1 1 1\n2 2 2 3 6 7 6 7\n\"\"\") == \"1\"\n\nassert solution(\"\"\"9\n1 1 1 1 1 1 1 1 1\n2 2 2 3 6 7 6 7 7\n\"\"\") == \"1\""
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '10'\nassert solution('2\\n1\\n3\\n4\\n4\\n3') == '15'\nassert solution('3\\n1\\n3\\n1\\n3') == '4'\nassert solution('4\\n1\\n1\\n2\\n3') == '9'\nassert solution('5\\n1\\n1\\n1\\n1') == '10'\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 2 10\\n1 3 4 3 3\\n') == '3'\nassert solution('4\\n1 10 2 10\\n2 4 2 2 2\\n') == '10'\nassert solution('7\\n1 1 1 1 1 1 1\\n2 2 2 3 6 7 6\\n') == '2'"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5\n1 2 3 2 10\n1 3 4 3 3\n\"\"\") == '3'\nassert solution(\"\"\"4\n1 10 2 10\n2 4 2 2\n\"\"\") == '10'\nassert solution(\"\"\"7\n1 1 1 1 1 1 1\n2 2 2 3 6 7 6\n\"\"\") == '2'\nassert solution(\"\"\"1\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('1 1 1') == '1'\nassert solution('2 2 1') == '3'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\n\n'''\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2 -5') == 3\nassert solution('5 1 3') == 4\nassert solution('3 2 7') == 3\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('4 1 2') == '1'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == '3'\nassert solution(input(\"\")) == '3'\nassert solution(input(\"\")) == '3'\nassert solution(input(\"\")) == '3'\nassert solution(input(\"\")) == '3'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('4 6 -8') == '3'\nassert solution('1 9 0') == '1'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('0 0 0') == '1'\nassert solution('0 1 1') == '2'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('2 2 3') == '4'\nassert solution('5 -1 3') == '4'\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('7 3 6') == '3'\nassert solution('8 4 6') == '4'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n9\n8 6 4 2 1 4 7 10 2\n\n\"\"\"\n) == '3'\n\nassert solution(\n\"\"\"\n5\n-1 -1 -1 -1 -1\n\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n7\n-1 -1 4 5 1 2 3\n\n\"\"\"\n) == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n8 6 4 2 1 4 7 10 2''') == '3'\nassert solution('''9\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''5\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-1 -1 -1 -1 -1') == '1'\nassert solution('5') == '1'\nassert solution('-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1') == '3'\nassert solution('-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n-1 -1 4 5 1 2 3') == '2'\nassert solution('9\\n8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9\\n-1 -1 -1 -1 -1') == '1'\nassert solution('7\\n-1 -1 -1 -1 -1') == '1'\nassert solution('8\\n1 1 1 1 1 1 1 1 1 1') == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\n8 6 4 2 1 4 7 10 2''') == '3'\nassert solution('''9\n-1 6 -1 2 -1 4 7 -1 2''') == '3'\nassert solution('''5\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\nassert solution('''10\n
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8\\n8 6 4 2 1 4 7 10 2\\n') == '3'\nassert solution('9\\n8 6 4 2 1 4 7 10 2\\n') == '3'\nassert solution('10\\n8 6 4 2 1 4 7 10 2\\n') == '3'\nassert solution('11\\n8 6 4 2 1 4 7 10 2\\n') == '3'\nassert solution('12\\n8 6 4 2 1 4 7 10 2\\n') == '3'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9\\n8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9\\n-1 6 -1 2 -1 4 7 -1 2') == '3'\nassert solution('9\\n-1 -1 -1 -1 -1') == '1'\nassert solution('9\\n8 -1 4 5 1 2 3') == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"8 6 4 2 1 4 7 10 2\") == \"3\"\nassert solution(\"9\\n8 6 4 2 1 4 7 10 2\") == \"3\"\nassert solution(\"-1 -1 -1 -1 -1\") == \"1\"\nassert solution(\"-1 -1 4 5 1 2 3\") == \"2\"\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9\n8 6 4 2 1 4 7 10 2''') == '3'\nassert solution('''9\n-1 6 -1 2 -1 4 7 -1 2''') == '3'\nassert solution('''5\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 6 4 2 1 4 7 10 2') == '3'\nassert solution('9 -1 6 -1 2 -1 4 7 -1 2') == '3'\nassert solution('9 -1 6 -1 2 -1 4 7 -1 2') == '3'\nassert solution('5 -1 -1 -1 -1 -1') == '1'\nassert solution('7 -1 -1 4 5 1 2 3') == '2'\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abba') == '4'\nassert solution('aabaabaa') == '5'\nassert solution('aabaa') == '4'\nassert solution('aaaa') == '4'\nassert solution('bbbb') == '4'\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 2\nabba''') == '4'\nassert solution('''8 1\naabaabaa''') == '5'\nassert solution('''10 1\naaaaaaaaaaaaaa''') == '10'\nassert solution('''1000 1\nbaaabaaabbababa''') == '6'"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\nabba') == '4'\nassert solution('8 1\\naabaabaa') == '5'\nassert solution('4 2\\nabba') == '4'\nassert solution('6 3\\naababa') == '6'\nassert solution('2 3\\naab') == '3'\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\nabba\\n') == '4'\nassert solution('8 1\\naabaabaa\\n') == '5'\n\n\"\"\""
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7\\naaabaa') == '5'\nassert solution('7\\naabaaaaa') == '5'\nassert solution('7\\naaabbbaa') == '5'\nassert solution('7\\naaabbaaaaa') == '5'\nassert solution('7\\naaabbbbbbaa') == '5'\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[4:8]\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == \"0\"\nassert solution('8 1') == \"5\"\nassert solution('4 2') == \"4\"\nassert solution('8 1\\naabaabaa') == \"5\"\nassert solution('8 1\\naaabbbba') == \"10\"\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1\\nabba') == 4\nassert solution('1 1\\nabba') == 5\nassert solution('2 2\\nabba') == 5\nassert solution('1 1\\naabaabaa') == 5\nassert solution('2 1\\naabaabaa') == 5\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\nabba''') == '4'\nassert solution('''4 1\naabaabaa''') == '5'\nassert solution('''8 1\naabaabaa''') == '5'\nassert solution('''3 4\nabcdabcd''') == '4'\nassert solution('''8 1\nabcdabcd''') == '4'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"0 0\"\nassert solution(input(\"1 1\\n\")) == \"1 1\"\nassert solution(input(\"2\\n1 1\\n\")) == \"1 2\"\nassert solution(input(\"2\\n1 1\\n1 1\")) == \"1 1 1\"\nassert solution(input(\"2\\n2 1\\n1 1\")) == \"2 1\"\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n100 50 50') == '2\\n1 2'\nassert solution('3\\n51 25 99 25') == '0\\n1 1'\nassert solution('4\\n51 25 99 25\\n50 30 30 30') == '3\\n1 2 3'\nassert solution('4\\n11 2 2 2') == '1\\n2 2'\nassert solution('5\\n31 10 10 10 10') == '0\\n0 1'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('inputs/hw3/test_1') == '0 1 2'\nassert solution('inputs/hw3/test_2') == '1 2'\nassert solution('inputs/hw3/test_3') == '1 2'\nassert solution('inputs/hw3/test_4') == '0'\nassert solution('inputs/hw3/test_5') == '1'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n100 50 50') == '2\\n1 2'\nassert solution('3\\n80 60 60') == '0\\n1 2'\nassert solution('2\\n6 5') == '1\\n1 2'\nassert solution('4\\n51 25 99 25') == '3\\n1 2 4'\nassert solution('4\\n21 76 64 70') == '0\\n1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n100 50 50') == '2\\n1 2'\nassert solution('2\\n100 50 50') == '0\\n0'\nassert solution('2\\n6 5') == '1\\n1 2'\nassert solution('3\\n80 60 60') == '3\\n1 2 3'\nassert solution('4\\n51 25 99 25') == '3\\n1 2 4'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n100 50 50\\n') == '2\\n1 2'\nassert solution('3\\n80 60 60\\n') == '0\\n1 2'\nassert solution('3\\n50 50 50\\n') == '1\\n1 2'\nassert solution('3\\n51 25 99 25\\n') == '2\\n1 2 4'\nassert solution('2\\n5 2\\n1 3 2') == '1\\n1'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n3') == '0'\nassert solution('1\\n3\\n4') == '0'\nassert solution('1\\n3\\n4\\n6') == '0'\nassert solution('1\\n3\\n4\\n6\\n8') == '0'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n0\\n') == '1'\nassert solution('1\\n2\\n0\\n') == '0'\nassert solution('1\\n3\\n0\\n') == '0'\nassert solution('2\\n3\\n1\\n0\\n') == '1'\nassert solution('2\\n3\\n1\\n1\\n0\\n') == '2'\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.500000000000\"\nassert solution(\"3\") == \"2.000000000000\"\nassert solution(\"4\") == \"2.500000000000\"\nassert solution(\"5\") == \"3.000000000000\"\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1\n\"\"\") == \"1.000000000000\"\n\nassert solution(\n\"\"\"\n2\n\"\"\") == \"1.500000000000\"\n\nassert solution(\n\"\"\"\n10\n\"\"\") == \"2.000000000000\"\n\nassert solution(\n\"\"\"\n100\n\"\"\") == \"1.000000000000\"\n\nassert solution(\n\"\"\"\n1000\n\"\"\") == \"1.000000000000\""
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1.500000000000'\n\n\"\"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1.000000000000\"\nassert solution(\"2\") == \"1.500000000000\"\n\n\"\"\""
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"2\\n\") == \"\"\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1.500000000000'\n\n\"\"\""
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('1 1') == 0.5\nassert solution('2 2') == 1\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'\nassert solution('3') == '2.833333333333'\nassert solution('4') == '3.785714285714'\nassert solution('5') == '4.642857142857'\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('9') == '3'\nassert solution('2') == '1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '2'\nassert solution('''9''') == '3'\nassert solution('''2''') == '1'\nassert solution('''3''') == '3'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '''2\n2 3'''\nassert solution('''9''') == '''3\n3 5 1'''\nassert solution('''2''') == '''1\n2'''\n\nprint('solution:', solution(input()))\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '2\\n2 3'\nassert solution('9') == '3\\n3 5 1'\nassert solution('2') == '1\\n2'\n\nprint('All tests passed successfully')\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n') == '2\\n2 3'\nassert solution('9\\n') == '3\\n3 5 1'\nassert solution('2\\n') == '1\\n2'\n\n\n\"\"\""
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\\n2 3\"\nassert solution(\"9\") == \"3\\n3 5 1\"\nassert solution(\"2\") == \"1\\n2\"\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('9\\n') == '3'\nassert solution('2\\n') == '1'\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n\") == \"1\\n2\"\nassert solution(\"2\\n1\\n\") == \"1\\n1\"\nassert solution(\"2\\n2\\n\") == \"1\\n1\"\nassert solution(\"3\\n3\\n\") == \"1\\n2\"\nassert solution(\"4\\n2\\n\") == \"1\\n1\"\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '''2\n2 3\n'''\nassert solution('''9''') == '''3\n3 5 1\n'''\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n42''') == '10'\nassert solution('''1\n58''') == '0'\nassert solution('''98765432\n23456789''') == '23456789'\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n42') == '10'\nassert solution('1\\n58') == '0'\nassert solution('98765432\\n23456789') == '23456789'\nassert solution('4\\n42') == '10'\nassert solution('1\\n58') == '0'\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('3') == None\nassert solution('42') == 10\nassert solution('2\\n42') == 10\nassert solution('2\\n98765432') == 0\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n42') == '10'\nassert solution('1\\n58') == '0'\nassert solution('98765432\\n23456789') == '23456789'\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n42''') == '10'\nassert solution('''1\n58''') == '0'\nassert solution('''987654321\n23456789''') == '23456789'\nassert solution('''123456789\n98765432''') == '98765432'\nassert solution('''123456789\n8135211344''') == '8135211344'\n\n\n\n\n\n\n\n\n\nprint(solution(input()))"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n42\\n') == '10'\nassert solution('1\\n58\\n') == '0'\nassert solution('98765432\\n23456789\\n') == '23456789'\n\n\n-----Test cases-----\n3\n47\n11\n47\n'''\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''42''') == '10'\nassert solution('''58''') == '0'\nassert solution('''98765432''') == '23456789'\n\n\n\"\"\""
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n42\\n') == '10'\nassert solution('1\\n58\\n') == '0'\nassert solution('98765432\\n23456789\\n') == '23456789'\n\n\n-----Note-----\n\nThis question is inspired by a number of related problems:\n\nDigit factorials\nhttps://www.hackerrank.com/challenges/digit-factorials\n\n\n\n------Hint------\n\nLook at the hint given in the problem statement.\n\n\"\"\"\nfrom fractions import Fraction\nfrom functools import reduce\n\nn = int(input())\nm = int(input())"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '10'\nassert solution('''1''') == '0'\nassert solution('''98765432''') == '23456789'\nassert solution('''1\n58''') == '0'\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n42\n''') == '10'\n\nassert solution('''1\n58\n''') == '0'\n\nassert solution('''98765432\n23456789\n''') == '23456789'\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\nweird\n''') == 'werd'\nassert solution('''\n4\nword\n''') == 'word'\nassert solution('''\n5\naaeaa\n''') == 'a'\nassert solution('''\n0\n''') == ''\nassert solution('''\n1\na\n''') == 'a'\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"word\") == \"word\"\nassert solution(\"weird\") == \"werd\"\nassert solution(\"aaeaa\") == \"a\"\nassert solution(\"aaaaaaaa\") == \"a\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'aa'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\nassert solution('a') == 'a'"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\nassert solution('there') == 'there'\nassert solution('y') == 'y'\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\nweird\n''') == 'werd'\nassert solution('''\n4\nword\n''') == 'word'\nassert solution('''\n5\naaeaa\n''') == 'a'"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\n\n\n'''\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\nassert solution('abcdefg') == 'abcdefg'\n\n\n\"\"\"\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n5\nweird\n''') == 'werd'\n\nassert solution(\n'''\n4\nword\n''') == 'word'\n\nassert solution(\n'''\n5\naaeaa\n''') == 'a'\n"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('*...*.***.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('3 2 3') == '0'\nassert solution('*...*.**.**.*') == '7'\n"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('*...*') == '0'\nassert solution('*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('*...*.**.*.*') == '0'\nassert solution
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 1 1\\n*...*') == '2'\nassert solution('6 2 3\\n*...*.\\n') == '4'\nassert solution('11 3 10\\n.*....**.*.\\n') == '7'\nassert solution('3 2 3\\n***\\n') == '0'\nassert solution('3 2 3\\n*.*.\\n') == '0'\n"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\") == \"2\"\nassert solution(\"6 2 3\") == \"4\"\nassert solution(\"11 3 10\") == \"7\"\nassert solution
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n*...*\") == \"2\"\nassert solution(\"6 2 3\\n*...*.\\n\") == \"4\"\nassert solution(\"11 3 10\\n.*....**.*.\\n\") == \"7\"\nassert solution(\"3 2 3\\n***\\n\") == \"0\"\nprint(\"Tests passed successfully\")"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 1\\n*...*\\n') == '2'\nassert solution('6 2 3\\n*...*.\\n') == '4'\nassert solution('11 3 10\\n*....*.**.*.\\n') == '7'\n\n\n\n\n\"\"\""
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('3 2 3') == '0'\nassert solution('*...*.***.**.**.*') == '7'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution('100000 100000 100000') == '1'\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(16) == 'NO'\nassert solution(18) == 'NO'\nassert solution(2) == 'NO'\nassert solution(19) == '1 8'\nassert solution(5) == 'NO'\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''19''') == '1 8'\nassert solution('''16''') == 'NO'\nassert solution('''6''') == 'NO'\nassert solution('''3''') == 'NO'\nassert solution('''10''') == 'NO'\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"19\") == \"1 8\"\nassert solution(\"16\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1 8\"\nassert solution(\"16\") == \"NO\"\nassert solution(\"14\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"7\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1 8\"\n\n\"\"\"\n\nfrom datetime import datetime\nfrom itertools import combinations"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''19''') == '1 8'\nassert solution('''16''') == 'NO'\nassert solution('''15''') == 'NO'\nassert solution('''2''') == 'NO'\nassert solution('''13''') == '1 5'\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9\\n') == '1 2'\nassert solution('16\\n') == 'NO'\nassert solution('16\\n') == 'NO'\nassert solution('1\\n') == 'NO'\nassert solution('18\\n') == 'NO'\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n19\") == \"1 8\"\nassert solution(\"1\\n16\") == \"NO\"\nassert solution(\"1\\n36\") == \"NO\"\nassert solution(\"1\\n5\") == \"NO\"\nassert solution(\"1\\n6\") == \"NO\"\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 1') == '2\\n1 2'\nassert solution('2\\n5 5') == '-1'\nassert solution('1\\n10') == '-1'\nassert solution('3\\n5 5') == '2\\n1 2'\nassert solution('3\\n2 2') == '3\\n1 2'\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"1 2 1\") == \"-1\"\nassert solution(\"1 2 1 3\") == \"-1\"\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n1 2 1\"\"\") == \"2\\n1 2\"\nassert solution(\"\"\"10\n5 5\"\"\") == \"-1\"\nassert solution(\"\"\"2\n5 5\"\"\") == \"-1\"\nassert solution(\"\"\"3\n10 10\"\"\") == \"-1\"\nassert solution(\"\"\"3\n1 2 1\"\"\") == \"2\\n1 2\"\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 1\n''') == '2 1'\nassert solution('''2\n5 5\n''') == '-1'\nassert solution('''1\n10\n''') == '-1'\nassert solution('''3\n1 2 1\n''') == '2 1'\nassert solution('''2\n5 5\n''') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 1\n''') == '2 1'\nassert solution('''2\n5 5\n''') == '-1'\nassert solution('''1\n10\n''') == '-1'\nassert solution('''1\n11\n''') == '-1'\nassert solution('''1\n1\n''') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 1''') == '2\\n1 2'\nassert solution('''2\n5 5''') == '-1'\nassert solution('''1\n10''') == '-1'\nassert solution('''2\n5 5''') == '-1'\nassert solution('''1\n10''') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 1\\n') == '2\\n1 2'\nassert solution('2\\n5 5\\n') == '-1'\nassert solution('1\\n10\\n') == '-1'\nassert solution('3\\n1 2 1\\n') == '2\\n1 2'\nassert solution('2\\n5 5\\n') == '-1'\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1\\n1\\n'\nassert solution('4') == '3\\n9 9 9\\n'\nassert solution('27') == '3\\n9 9 9\\n'\nassert solution('27') == '3\\n9 9 9\\n'\nassert solution('9') == '1\\n1\\n'\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1\\n1'\nassert solution('4\\n') == '2\\n2 2'\nassert solution('27\\n') == '3\\n9 9 9'\nassert solution('1000000007\\n') == '8\\n7 7 7'\n\n\n-----"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1''') == '1\\n1'\nassert solution('''4''') == '2\\n2 2\\n'\nassert solution('''27''') == '3\\n9 9 9'\nassert solution('''10''') == '2\\n1'\nassert solution('''100''') == '1\\n'\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == '1\\n1'\nassert solution('''4''') == '2\\n2 2'\nassert solution('''27''') == '3\\n9 9 9'\nassert solution('''1\n4\n3\n2\n1\n''') == '1\\n1\\n1 2 2\\n1 2 3\\n1 2 4\\n1 2 5\\n1 2 6\\n1 3\\n1 4\\n1 5\\n1 6\\n'\n'''\n\n'''\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"123456789\") == \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n''') == '1 1'\nassert solution('''4\n''') == '2 2 2'\nassert solution('''27\n''') == '9 9 9 9 9 9 9 9 9 9 9 9 9 9'\nassert solution('''10\n''') == '0 0 0 0 0 0 0 0 0 0 0'\nassert solution('''100\n''') == '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''4''') == '3'\nassert solution('''27''') == '3'\nassert solution('''28''') == '4'\nassert solution('''29''') == '5'\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2 2\"\nassert solution(\"27\") == \"3 9 9\"\nassert solution(\"27\") == \"9 9 9\"\nassert solution(\"274\") == \"3 9 9\"\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''4''') == '2 2'\nassert solution('''27''') == '3 9 9'\n'''\n\n'''"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 3') == '2'\nassert solution('2 2\\n2 3') == '1'\nassert solution('3 2\\n2 1 1') == '3'\nassert solution('3 2\\n2 1 1') == '1'\nassert solution('2 1 1\\n2 1 1') == '1'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3') == '2\\n3 2'\nassert solution('2\\n2 2') == '1\\n2'\nassert solution('2\\n1 1') == '1\\n1'\nassert solution('2\\n2 2') == '2'\nassert solution('2\\n2 1 1') == '1'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3\n''') == '2'\nassert solution('''2\n2 2\n''') == '1'\nassert solution('''3\n2 1 1\n''') == '3'\nassert solution('''3\n2 1 1\n''') == '1'\nassert solution('''4\n2 1 1 1\n''') == '2'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n3\\n3\\n1') == '3'\nassert solution('2\\n2\\n2\\n2\\n3\\n3\\n1') == '2'\nassert solution('2\\n2\\n2\\n2\\n3\\n3\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n3\\n3\\n1') == '3'\nassert solution('2\\n2\\n2\\n2\\n3\\n3\\n1') == '2'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 1') == '3\\n1 1 2'\nassert solution('2\\n2 3') == '1\\n3 2'\nassert solution('3\\n2 3') == '1\\n2 3'\nassert solution('3\\n1 3') == '1\\n3'\nassert solution('3\\n3 3') == '1\\n3'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer_stdin"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3 4\") == \"\"\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n2 3\n''') == '2'\nassert solution('''2\n2 2\n''') == '1'\nassert solution('''3\n2 1 1\n''') == '3'\nassert solution('''2\n83 14\n''') == '2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2') == '2'\nassert solution('2 2') == '1'\nassert solution('2 1 1') == '3'\nassert solution('2 83 14') == '2'\nassert solution('2 83 14') == '2'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n''') == '1'\nassert solution(\n'''\n992\n''') == '496'\nassert solution(\n'''\n1\n''') == '1'\nassert solution(\n'''\n14\n''') == '7'\nassert solution(\n'''\n11\n''') == '5'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"1_2\") == 2\nassert solution(\"11_2\") == 2\nassert solution(\"11111_2\") == 4\nassert solution(\"11112_2\") == 5\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '1'\nassert solution('''7''') == '7'\nassert solution('''10''') == '10'\nassert solution('''9''') == '9'\nassert solution('''100''') == '10'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n2''') == '1'\nassert solution('''0\n1''') == '1'\nassert solution('''1\n2\n3''') == '3'\nassert solution('''2\n4''') == '2'\nassert solution('''3\n5''') == '5'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '10'\nassert solution('12') == '12'\nassert solution('100') == '100'\nassert solution('999999') == '999999'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('0') == None\nassert solution('0 0') == None\nassert solution('1 1') == None\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('96') == '64'\nassert solution('812') == '512'\nassert solution('1') == '1'\nassert solution('110101') == '10'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '10'\nassert solution('7') == '14'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n''') == '1'\n\nassert solution('''\n1\n1\n''') == '1'\n\nassert solution('''\n1\n2\n''') == '2'\n\nassert solution('''\n2\n2\n''') == '1'\n\nassert solution('''\n2\n3\n''') == '2'"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('3') == None\nassert solution('5') == None\nassert solution('9') == None\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\nassert solution('10 11') == '4'\nassert solution('10000 10001') == '9'\nassert solution('10000000 1000000000') == '1'\nassert solution('99 0') == '0'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n2\") == \"\"\nassert solution(\"2\\n3\") == \"\"\nassert solution(\"1\\n4\") == \"\"\nassert solution(\"1\\n5\") == \"\"\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 6\") == \"0\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"19 7\") == \"6\"\nassert solution(\"1000 9999\") == \"6\"\nassert solution(\"100 999\") == \"6\"\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('inputs/01/01.in') == '2'\nassert solution('inputs/01/02.in') == '0'\nassert solution('inputs/01/03.in') == '3'\nassert solution('inputs/01/04.in') == '8'\nassert solution('inputs/01/05.in') == '18'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12\") == \"0\"\nassert solution(\"23\") == \"1\"\nassert solution(\"24\") == \"2\"\nassert solution(\"2434\") == \"24\"\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/20-2.txt') == '7'\nassert solution('inputs/20-3.txt') == '8'\nassert solution('inputs/20-4.txt') == '6'\nassert solution('inputs/20-5.txt') == '9'\nassert solution('inputs/20-6.txt') == '1'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 6\\n10\\n99') == '8'\nassert solution('5 3\\n9\\n15') == '4'\nassert solution('2 0\\n1\\n9\\n15\\n19\\n20\\n25') == '6'\nassert solution('10 7\\n1\\n9') == '4'\nassert solution('2 0\\n1\\n3\\n4\\n5\\n7\\n9') == '8'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"8\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 6\\n10\\n99\\n') == '8'\nassert solution('2 0\\n1\\n9\\n') == '4'\nassert solution('19 7\\n1000\\n9999\\n') == '6'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 6') == '8'\nassert solution('2 0') == '4'\nassert solution('19 7') == '6'\nassert solution('1000 1000') == '0'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 2''') == '4'\nassert solution(\n'''6 4''') == '6'\nassert solution(\n'''8 4''') == '4'\nassert solution(\n'''5 2''') == '4'\nassert solution(\n'''6 4''') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '5'\nassert solution('4\\n1\\n2\\n3\\n4') == '5'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2\n1 3 1 4 2''') == '4'\nassert solution('''6 4\n1 1 2 2 3 3''') == '6'\nassert solution('''9 0\n1 9 0 0 1 0 0 0 1''') == '1'\nassert solution('''10 2\n10 10 10 10 10 10 10 10 10 10''') == '10'\nassert solution('''10 10\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10''') == '9'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 2\n1 3 1 4 2'''\n) == '4'\nassert solution(\n'''6 4\n1 1 2 2 3 3'''\n) == '6'\nassert solution(\n'''10 4\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9'''\n) == '9'\nassert solution(\n'''10 5\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10'''\n) == '10'\nassert solution(\n'''30 4\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30'''\n) == '29'"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3 1 4 2\\n') == 4\nassert solution('6 4\\n1 1 2 2 3 3\\n') == 6\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"6 4\") == \"6\"\n\n\n\"\"\"\n\n\"\"\"\nsolution:\n\n\"\"\"\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '4'\nassert solution('2\\n1') == '4'\nassert solution('3\\n4') == '4'\nassert solution('5\\n4') == '4'\nassert solution('6\\n4') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 2\n1 3 1 4 2'''\n) == '4'\n\nassert solution(\n'''6 4\n1 1 2 2 3 3'''\n) == '6'\n\nassert solution(\n'''4 2\n1 1 2 2'''\n) == '1'\n\nassert solution(\n'''10 5\n1 1 1 1 1 1 1 1 1 1 1 1'''\n) == '10'\n\nassert solution(\n'''5 4\n2 3 2 1 3'''\n) == '3'"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 1') == '2'\nassert solution('3 4') == '3'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '4'\nassert solution('5 4') == '6'\nassert solution('1 1 2 2 3 3') == '6'\nassert solution('1 1 2 2 3 3 4 4 4 4 4 4 4 4') == '7'\nassert solution('1 1 2 2 3 3') == '6'\n\n\"\"\""
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\nassert solution('21754557225726697687') == '45'\nassert solution('21754557225726697687') == '45'\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"8\") == \"\"\nassert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('5') == '0'\nassert solution('10') == '1'\nassert solution('1000000000') == '10000000'\nassert solution('100000000000') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1000000000\") == 1000000000\nassert solution(\"43\") == 5\nassert solution(\"125\") == 3\nassert solution(\"100000000\") == 10000000\n\n\n\"\"\"\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\nassert solution('34567') == '4'\nassert solution('-123') == '-3'\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"125\") == \"3\"\nassert solution(\"43\") == \"5\"\nassert solution(\"1000000000\") == \"10000000\"\nassert solution(\"1000000000\") == \"10000000\"\nassert solution(\"123456789\") == \"123456789\"\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123') == '3'\nassert solution('2') == '1'\nassert solution('15') == '5'\nassert solution('1000000000') == '10000000'\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\n\"\"\"\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(125) == \"3\"\nassert solution(43) == \"5\"\nassert solution(1000000000) == \"10000000\"\nassert solution(1) == \"10000000\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"7 4\") == \"328\"\n\n\n\"\"\"\nfrom math import factorial\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\nprint(\"solution(): Pass.\")\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1 0') == ''\nassert solution('2 1') == ''\nassert solution('3 2') == ''\nassert solution('4 1') == ''\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '-1'\nassert solution('5 2') == '11'\nassert solution('1 1') == '0'\nassert solution('4 3 2 1 6') == '11'\nassert solution('RROWW') == '11'\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 3\\n') == '-1'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9 10\\nRRRR') == '28'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9 10\\nRROOW') == '-1'\nassert solution('5 3\\n4 3 4 1 6\\nROWW') == '11'\nassert solution('5 2\\n10 20 14 20 11\\nRWOORWORROW') == '-1'\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '-1'\nassert solution('5 2') == '-1'\nassert solution('5 3') == '11'\nassert solution('5 4') == '11'\nassert solution('5 5') == '11'\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n10 20 14 20 11\nRRRRR''') == '-1'\nassert solution('''11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWOORWORROW''') == '28'"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"11\"\nassert solution(\"5 2\") == \"-1\"\nassert solution(\"11 5\") == \"28\"\nassert solution(\"7 5\") == \"-1\"\nassert solution(\"10 4 3 5 1 4\") == \"10\"\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n4 3 4 1 6\nRROWW\n''') == '11'\nassert solution('''5 2\n10 20 14 20 11\nRRRRR\n''') == '-1'\nassert solution('''11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWOORWORROW\n''') == '28'\n\n'''\nimport sys"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 3\n4 3 4 1 6\nRROWW\n\"\"\") == \"11\"\n\nassert solution(\n\"\"\"5 2\n10 20 14 20 11\nRRRRR\n\"\"\") == \"-1\"\n\nassert solution(\n\"\"\"11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWOORWORROW\n\"\"\") == \"28\"\n\nassert solution(\n\"\"\"11 5\n5 6 3 2 3 4 7 5 4 5 6\nRRRRRRR\n\"\"\") == \"-1\"\n\nassert solution(\n\"\"\"11 1\n1\nR\n\"\"\") == \"1\"\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '28'\nassert solution('5 5') == '-1'\nassert solution('5 1') == '7'\nassert solution('5 3') == '11'\nassert solution('11 5') == '28'\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == ''\n\n\"\"\"\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('9 4') == 'NO'\nassert solution('9 4') == 'NO'\nassert solution('9 4') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('3 2 1') == 'YES'\nassert solution('2 3 1') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9 4\n2\n2 4\n''') == 'YES'\nassert solution('''9 4\n3\n2 3 1\n''') == 'YES'\nassert solution('''9 4\n3\n1 2 4\n''') == 'NO'\nassert solution('''9 2\n1\n2\n''') == 'NO'\nassert solution('''9 4\n1\n2 1 2\n''') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'YES'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nimport sys"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 4\\n2\\n2 4') == 'YES'\nassert solution('9 4\\n3\\n2 3 1') == 'NO'\nassert solution('9 4\\n3\\n1 2 4') == 'NO'\nassert solution('9 4\\n3\\n1 2 3 1') == 'NO'\nassert solution('9 4\\n3\\n1 2 4 1') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('9 4') == 'NO'\nassert solution('3 2 1') == 'NO'\nassert solution('3 2 1') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('9 4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2 3 1') == 'YES'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 2\\n2 4\\n\") == \"YES\"\nassert solution(\"6 1\\n1 2 3 1\\n2 4 5 2 1\\n3 6 4 1 1\\n4 8 4\\n\") == \"YES\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9 10 1\\n2 4 6 4 1 1 2 1 1\\n3 6 9 9 2 1 1 1 2 1 1\\n4 8 12 3 2 1 1 2 1 2 1 1 1\\n5 10 10 3 2 1 1 2 1 2 1 1 2 1 1\\n6 12 4 1 1 2 1 1 2 1 1 2 2 1 1 1\\n7 16 5 1 1 2 1 1 2 1 2 1 2 2 1 1 1\\n8 19 6 1 1 2 1 1 2 1 1 2 2 1 1 1\\n9 22 7 1 1 2 1 1 2 1 2 1 2 2 1 1 1\\n10 25 8 1 1 2 1 1 2 1 1 2 2 1 1 1\\n\") == \"NO\"\nassert solution(\"9 1\\n1 2 3 4 5 6 7 8 9 1\\n2 4 6 4 1 1 2 1 1\\n3 6 9 9 2 1 1 1 2 1 1\\n4 8 12 3 2 1 1 2 1 2 1 1 1\\n5 10 10 3 2 1 1 2 1 2 1 1 2 1 1\\n6 12 4 1 1 2 1 1 2 1 2 1 2 2 1 1 1\\n7 16 5 1 1 2 1 1 2 1 2 1 2 2 1 1 1\\n8 19 6 1 1 2 1 1 2 1 1 2 2 1 1 1\\n9 22 7 1 1 2 1 1 2 1 2 1 2 2 1 1 1\\n10 25 8 1 1 2 1 1 2 1 1 2 2 1 1 1\\n\") == \"NO\"\nassert solution(\"6 1\\n1 2 3 1\\n2 4 5 2 1\\n3 6 4 1 1\\n4 8 4\\n\") == \"YES\"\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('||+|=|||||') == '|||+|=||||'\nassert solution('|||||+||=||') == '||||+||=||'\nassert solution('|||||+||=||') == '||||+||=||'\nassert solution('|||||+||=||') == '||||+||=||'\nassert solution('|||||+||=||') == '||||+||=||'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('|+|=|||||') == '|||+|=||||'\nassert solution('|||||+||=||') == '||||+||=||||'\nassert solution('||||+||=||') == '||||+||=||'\nassert solution('|||||+||=||') == '||||+||=||||'\nassert solution('||||+||=||') == '||||+||=||'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('||+|=|||||') == '|||+|=||||'\nassert solution('|||||+||=||') == 'Impossible'\nassert solution('||||+||=||') == '||||+||=||'\nassert solution('||||||+||=||') == '||||||+||=||'\nassert solution('||||||+||=||') == '||||||+||=||'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||+|=||||||\") == \"||||+||=||||||\"\nassert solution(\"|||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||+||=|||||\") == \"||||+||=||||\"\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input().strip()) == input().strip()"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"||+|=|||||\"\n) == \"|||+|=||||\"\n\nassert solution(\n    \"|||||+||=||\"\n) == \"||||+||=||\"\n\nassert solution(\n    \"||||+||=||||||\"\n) == \"||||+||=||||||\"\n\nassert solution(\n    \"||||||+|||\"\n) == \"||||||+|||\"\n\nassert solution(\n    \"|||||||+||\"\n) == \"|||||||+||\""
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||\") == \"||||+||=||\"\nassert solution(\"||||+||=||||||\") == \"||||+||=||||||\"\nassert solution(\"||||||+|||=||\") == \"||||||+|||=||\"\nassert solution(\"||||||+|||=\") == \"Impossible\"\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('||+|=||||||') == '|||+|=||||||'\nassert solution('|+|=||||||') == '||||+|=|||'\nassert solution('|||+|=||||||') == '||||+|=||||||'\nassert solution('||||+|=||||||') == '|||||+|=||||||'\nassert solution('||||||+|=||||||') == '||||||+|=||||||'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''||+|=|||||''') == '|||+|=||||'\nassert solution('''|||||+||=||''') == '||||+||=||'\nassert solution('''||||+||=||||||''') == '||||+||=||||||'\nassert solution('''|+|=|||||||''') == '|+|=|||||||'\nassert solution('''||||||+||=|||''') == '||||||+||=|||'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('||+|=||||||') == '|||+|=||||||'\nassert solution('|||+|=||||||') == '||||+|=||||||'\nassert solution('|||||+||=||||||') == '||||+||=||||||'\nassert solution('||||+||=||||||') == '||||+||=||||||'\nassert solution('|+|=||||||') == '|+|=||||||'\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 3\") == \"0\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 3\") == \"0\"\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n''') == '2'\n\nassert solution('''3 3\n''') == '0'\n\nassert solution('''5 1\n''') == '0'\n\nassert solution('''3 3\n''') == '3'\n\nassert solution('''15 1\n''') == '7'\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('3 0') == '1'\nassert solution('7 2') == '2'\nassert solution('5 5') == '2'\nassert solution('13 13') == '2'\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n''') == '2'\nassert solution('''3 4\n''') == '1'\nassert solution('''7 4\n''') == '10'\nassert solution('''5 9\n''') == '13'\n'''\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '2'\nassert solution('''2 3''') == '0'\nassert solution('''3 1''') == '1'\nassert solution('''1 2''') == '1'\nassert solution('''4 4''') == '2'\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3') == \"2\"\nassert solution('2 4') == \"0\"\nassert solution('2 5') == \"2\"\nassert solution('2 6') == \"4\"\nassert solution('2 7') == \"6\"\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 2') == '2'\nassert solution('2 2') == '2'\nassert solution('1 2 3') == '0'\nassert solution('1 2 4') == '2'\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''-1 0\n0 3\n2 -1''') == '''2\n1 2\nRL\nUU\nDR'''\n\nassert solution(\n'''2\n0 0\n0 1\n-1 1''') == '-1'\n\nassert solution(\n'''3\n-1 0\n0 3\n2 -1''') == '-1'\n\nassert solution(\n'''-10**9\n1 -10**9\n0 1\n10**9 1''') == '-1'\n\nassert solution(\n'''1\n0 0''') == '-1'"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '''-1 0\n0 3\n2 -1'''\n) == '2\\n1 2\\nRL\\nUU\\nDR'\nassert solution(\n    '''-1 0\n0 3\n2 -1'''\n) == '-1\\n1 2\\nRL\\nUU\\nDR'\nassert solution(\n    '''-1 -1\n0 0\n1 1'''\n) == '2\\n1 2\\nRL\\nRR\\nLL\\nUU\\nUL'\nassert solution(\n    '''-1 -1\n-1 0\n-1 -1'''\n) == '2\\n1 2\\nLL\\nUU\\nUR'\nassert solution(\n    '''-1 -1\n0 -1\n0 0'''\n) == '-1\\n1 2\\nLL\\nUU\\nUR'\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(open('test_01').read()) == '4\\n2 0 1 3'\nassert solution(open('test_02').read()) == '-1'\nassert solution(open('test_03').read()) == '2\\n1 2'\nassert solution(open('test_04').read()) == '3\\n1 0 2 -1'\nassert solution(open('test_05').read()) == '2\\n1 0 1 2'\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-1 0\\n0 3\\n2 -1') == '2\\n1 2\\nRL\\nUU\\nDR'\nassert solution('-1 0\\n0 3\\n2 -1\\n0 1') == '-1'\nassert solution('-1 0\\n0 3\\n2 -1\\n0 1\\n-1 0') == '-1'\nassert solution('-1 0\\n0 3\\n2 -1\\n1 2') == '-1'\nassert solution('-1 0\\n0 3\\n2 -1\\n1 2\\n-1 0') == '-1'\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"-1 0\") == \"-1\"\nassert solution(\"0 3\") == \"2 1\"\nassert solution(\"2 -1\") == \"2 1\"\nassert solution(\"4 -1\") == \"-1\"\n\nassert solution(\"-1 0\") == \"-1\"\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1 0') == '2\\n1 2\\nRL\\nUU'\nassert solution('0 3') == '2\\n1 2\\nRL\\nUU'\nassert solution('2 -1') == '2\\n1 2\\nRL\\nUU'\nassert solution('-1 0') == '2\\n1 2\\nRL\\nUU'\nassert solution('0 3') == '2\\n1 2\\nRL\\nUU'\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0') == '1 2'\nassert solution('0 3') == '1 2'\nassert solution('2 -1') == '1 2'\nassert solution('-1 0') == '1 2'\nassert solution('0 3') == '1 2'\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n-1 0\n0 3\n2 -1\n\"\"\") == \"\"\"\n2\n1 2\nRL\nUU\nDR\n\"\"\"\n\nassert solution(\n\"\"\"\n3\n-1 0\n0 3\n2 -1\n\"\"\") == \"\"\"\n2\n1 2\nRL\nUU\nDR\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n-1 0\n0 3\n2 -1\n\"\"\") == \"\"\"\n-1\n-1\n-1\n-1\n\"\"\"\n\nassert solution(\n\"\"\"\n5\n-1 0\n0 3\n2 -1\n\"\"\") == \"\"\"\n-1\n-1\n-1\n-1\n-1\n\"\"\"\n\nassert solution(\n\"\"\"\n6\n-1 0\n0 3\n2 -1\n\"\"\") == \"\"\"\n2\n1 2\nRL\nUU\nDR\n\"\"\""
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"-1 0\\n0 3\\n2 -1\") == \"2\\n1 2\\nRL\\nUU\\nDR\"\n\"\"\""
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0') == '1 2'\nassert solution('-1 0') == '2 1'\nassert solution('0 3') == '2 1'\nassert solution('2 -1') == '2 1'\nassert solution('2 1') == '2 1'\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\nassert solution(\"ogoogoogo\") == \"*********\"\nassert solution(\"aogogob\") == \"a***b\"\nassert solution(\"aogogob\") == \"a***b\"\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\nassert solution('ogoogoogo') == '*********'\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('aogogob') == 'a***b'\nassert solution('aogogog') == 'a***g'\nassert solution('aogogog') == 'a***g'\nassert solution('aogog') == 'a***g'\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\nassert solution(\"ogoogoogo\") == \"*********\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aogogob') == \"a***b\"\nassert solution('ogogmgogogogo') == \"***gmg***\"\nassert solution('ogoogoogo') == \"*********\"\n\"\"\"\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n7\naogogob\n\n''') == '''a***b\n'''\n\nassert solution('''\n13\nogogmgogogogo\n\n''') == '''***gmg***\n'''\nassert solution('''\n9\nogoogoogo\n\n''') == '''*********\n'''\nassert solution('''\n6\naogogb\n\n''') == '''a***b\n'''\nassert solution('''\n5\nogeo\n\n''') == '''o***o\n'''\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7\\naogogob\") == \"a***b\"\nassert solution(\"13\\ngogogmgogogogo\") == \"***gmg***\"\nassert solution(\"9\\nogoogoogo\") == \"*********\"\n\n\"\"\"\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aogogob\") == \"a***b\"\nassert solution(\"ogogmgogogogo\") == \"***gmg***\"\nassert solution(\"ogoogoogo\") == \"*********\"\n"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogoogoogo') == '*********'\nassert solution('ogogmgogogogo') == '***gmg***'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\nassert solution('ogoogoogo') == '*********'\nassert solution('ogogmgogogogo') == '*********'\nassert solution('ogogmgogogogo') == '*********'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == ''\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'\nassert solution('947 987654321987654321 10') == '593574252'\nassert solution('947 987654321987654321 1000000000') == '593574252'\n\"\"\"\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '20880118'\n\"\"\"\nfrom math import log"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 2''') == '2'\nassert solution('''947 987654321987654321''') == '593574252'\nassert solution('''4599999 699999874''') == '2'\nassert solution('''947 987654321987654321''') == '593574252'\n\n\n'''"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''947 987654321987654321''') == '593574252'\nassert solution('''10 2''') == '2'\nassert solution('''1000000009 7''') == '5'\nassert solution('''2 2''') == '4'\nassert solution('''100000009 7''') == '4'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100\n0''') == '1'\nassert solution('''12\n100''') == '1'\nassert solution('''1000\n0''') == '0'\nassert solution('''10\n9''') == '1'\nassert solution('''100\n1''') == '2'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('20161228 123456 789012 345678 987654 321987654321') == '593574252'\nassert solution('20161228 123456 789012 345678 987654 321987654321') == '593574252'\nassert solution('20160630 2345678901234567890123456789012345678901234567890') == '593574252'\nassert solution('20160630 2345678901234567890123456789012345678901234567890') == '593574252'\nassert solution('20160630 2345678901234567890123456789012345678901234567890') == '593574252'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('1000000000000 1000000000') == '1000000000000'\nassert solution('2 7') == '48'\nassert solution('1000010001001') == '1'\nassert solution('5 5') == '25'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 11'): '6'\nassert solution('999'): '1'\nassert solution('900000'): '1'\nassert solution('90000000'): '1'\nassert solution('900000000'): '1'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('947 987654321987654321\\n') == '593574252'\nassert solution('1549 1364\\n') == '610636804'\nassert solution('1000 1000\\n') == '9183'\nassert solution('5050 50\\n') == '1462'\nassert solution('100 100\\n') == '1462'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 8''') == '3'\nassert solution('''1 2 -18''') == '0'\nassert solution('''2 2 -1''') == '4'\nassert solution('''3 1 1''') == '-1'\nassert solution('''10 5 2''') == '0'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 8''') == '3'\nassert solution('''1 2 -18''') == '0'\nassert solution('''2 2 -1''') == '4'\nassert solution('''2 1 -10''') == '1'\nassert solution('''1 1 -10''') == '0'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 8') == '3'\nassert solution('1 2 -18') == '0'\nassert solution('2 2 -1') == '4'\nprint(solution('5 1 2'))\nprint(solution('3 2 8'))\nprint(solution('1 2 -18'))\nprint(solution('2 2 -1'))\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 -18') == '3\\n1 31 337 967'\nassert solution('2 2 -1') == '4\\n1 31 337 967'\nassert solution('1 2 2') == '0'\nassert solution('1 2 1') == '0'\nassert solution('1 2 0') == '0'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 -1''') == '4'\nassert solution('''3 2 8''') == '3'\nassert solution('''3 2 -8''') == '1'\nassert solution('''2 2 -18''') == '0'\nassert solution('''3 2 4''') == '4'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2 8''') == '3'\nassert solution('''1 2 -18''') == '0'\nassert solution('''2 2 -1''') == '4'\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_sample(self):\n        pass"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(\"tests passed\")\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2 -18''') == '0'\nassert solution('''3 2 8''') == '3'\nassert solution('''1 2 -18''') == '10 2008 13726'\nassert solution('''2 2 -1''') == '4'\nassert solution('''2 2 -2''') == '0'\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2 8\") == \"3\"\nassert solution(\"1 2 -18\") == \"0\"\nassert solution(\"2 2 -1\") == \"4\"\nassert solution(\"3 1 -17\") == \"0\"\nassert solution(\"3 2 8\") == \"3\"\n"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2 2 1 1 2 2 1 2 1 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 1 1 1 2 2 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4\") == \"NO\"\nassert solution(\"5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3\") == \"YES\"\n\"\"\"\nfrom functools import reduce\nfrom itertools import product\n"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == \"YES\"\nassert solution('''2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4''') == \"NO\"\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == \"YES\"\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == \"NO\"\n''' ) == \"YES\"\nassert solution('''5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3''') == \"NO\"\n"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4'\n) == 'NO'\nassert solution(\n    '5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3'\n) == 'YES'\nassert solution(\n
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution('5 2 1 5 3 2 6 1 6 1 1 2 2 1 4 2 3 2 3 1 6 1 6 1 4 4 1') == 'YES'\nassert solution('4 2 1 3 2 1 3 1 2 2 2 2 4 2 2 4 2 1 1 3 1 1 2 1 2 2 2 1 1 1 1 1 2 2 1 2 1 2 1 3 1 2 1 3 1') == 'YES'\nassert solution
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n\n\n\"\"\"\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '0'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('329 19913 19900') == '8'\nassert solution('101 6800 6500') == '0'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''239 10880 9889\n''') == '0'\n\nassert solution('''26 7258 6123\n''') == '2'\n\nassert solution('''493 8000 8000\n''') == '0'\n\nassert solution('''329 19913 19900\n''') == '8'\nassert solution('''101 6800 6500\n''') == '0'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '0'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"239 10880 9889\") == \"0\"\nassert solution(\"26 7258 6123\") == \"2\"\nassert solution(\"493 8000 8000\") == \"0\"\nassert solution(\"101 6800 6500\") == \"0\"\nassert solution(\"329 19913 19900\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('239 10880 9889') == '0'\nassert solution('26 7258 6123') == '2'\nassert solution('493 8000 8000') == '24'\nassert solution('101 6800 6500') == '0'\nassert solution('329 19913 19900') == '8'"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''239 10880 9889''') == '0'\nassert solution('''26 7258 6123''') == '2'\nassert solution('''493 8000 8000''') == '0'\nassert solution('''329 19913 19900''') == '8'\nassert solution('''101 6800 6500''') == '0'\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n5') == '0'\nassert solution('2\\n3\\n5\\n1') == '3'\nassert solution('2\\n3\\n5\\n1') == '0'\nassert solution('1\\n2\\n3\\n5') == '0'\nassert solution('2\\n3\\n5\\n1') == '0'\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n2\n3\n5'''\n) == \"3\"\n\nassert solution(\n'''1\n2\n3\n5'''\n) == \"0\"\n\nassert solution(\n'''2\n2\n3\n5'''\n) == \"1\"\n\nassert solution(\n'''2\n1\n2\n3'''\n) == \"0\"\n\nassert solution(\n'''2\n1\n4\n6'''\n) == \"3\"\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"3 1 3 2\") == \"0\"\nassert solution(\"3 2 3 1\") == \"3\"\nassert solution(\"2 2 1 1\") == \"3\"\nassert solution(\"2 3 3 1\") == \"3\"\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n2\\n3\\n1') == '3'\nassert solution('1\\n2\\n3\\n5') == '0'\nassert solution('1\\n2\\n3\\n5\\n10') == '11'\nassert solution('2\\n3\\n5\\n10\\n20') == '12'\nassert solution('1\\n3\\n5\\n10\\n20') == '12'\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '3'\nassert solution('''2''') == '0'\nassert solution('''3\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''3\n2\n3\n5\n7\n10''') == '3'\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''2\n3\n5\n1''') == '0'\nassert solution('''3\n2\n5\n1''') == '1'\nassert solution('''3\n2\n3\n3''') == '0'\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n3\\n1\") == \"3\"\nassert solution(\"1\\n2\\n3\\n5\") == \"0\"\nassert solution(\"2\\n3\\n1\\n5\") == \"2\"\nassert solution(\"1\\n2\\n3\\n5\") == \"1\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"0\"\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 1 4''') == '6'\nassert solution('''30 20 10''') == '20'\nassert solution('''7 100 200''') == '29'\nassert solution('''-1 1 -2''') == '0'\nassert solution('''30 70 10''') == '29'\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\"\nprint(solution(stdin))\n\n\n\"\"\"\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 1 4''') == '6'\nassert solution('''30 20 10''') == '20'\n'''\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 1 4''') == '6'\nassert solution('''30 20 10''') == '20'\nassert solution('''10 50 10''') == '0'"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\"\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\"\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 7 4') == '6'\nassert solution('30 20 10') == '20'\nassert solution('1 1 3') == '3'\nassert solution('7 1 4') == '6'\nassert solution('50 10 100') == '120'\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 1 4') == '6'\nassert solution('30 20 10') == '20'\nassert solution('60 50 30') == '60'\nassert solution('1 2 3') == '0'"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 1 4\") == \"6\"\nassert solution(\"30 20 10\") == \"20\"\nprint(solution(input()))\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 1 4''') == '6'\nassert solution('''30 20 10''') == '20'\nassert solution('''45 21 22''') == '47'\nassert solution('''1 2 3''') == '6'\nassert solution('''70 71 72''') == '71'\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2 3 4 5 6 7 8') == '2'\nassert solution('1 2 3 4 5') == '-1'\nassert solution
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == '1\\n'\nassert solution('2 228\\n1 1\\n') == '0\\n'\nassert solution('3 7\\n1 2 3\\n') == '-1\\n'\nassert solution('4 3\\n1 2 3 7\\n') == '1\\n'\nassert solution('5 2\\n1 2 3 4\\n') == '0\\n'\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 7\\n\") == \"1\"\nassert solution(\"2 228\\n1 1\\n\") == \"0\"\nassert solution(\"3 7\\n1 2 3\\n\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 228') == '0'\nassert solution('2 1') == '-1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 228\") == \"0\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"3 7\") == \"-1\"\n\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 3 4 5\") == \"-1\"\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7\n1 2 3\n''') == '0'\nassert solution('''2 228\n1 1\n''') == '-1'\nassert solution('''2 2\n1 1\n''') == '0'\nassert solution('''5 2\n1 2 3 4 5\n''') == '1'\nassert solution('''2 2\n1 1\n''') == '0'\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 2 1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 2 3 2 3 4 4 5\") == \"2\"\nassert solution(\"1 2 2 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nimport sys\nfrom itertools import combinations\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2 3 7\n''') == '1'\n\nassert solution('''\n2 228\n1 1\n''') == '0'\n\nassert solution('''\n3 7\n1 2 3\n''') == '-1'\n\nprint(solution('''\n4 7\n1 2 3 4 5\n'''))\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('3 5\\n..*...\\n.*...\\n') == 'NO'\nassert solution('3 7\\n.*...*.\\n.*...*.\\n.*...*.\\n.*...*.\\n.*...*.\\n') == 'NO'\nassert solution('7 7\\n.......\\n...*...\\n..****.\\n...*...\\n.......\\n.....*.\\n') == 'NO'\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"7 7\") == \"NO\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"3 7\") == \"NO\"\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n') == 'YES'\nassert solution('2 3\\n') == 'NO'\nassert solution('2 4\\n') == 'YES'\nassert solution('2 5\\n') == 'NO'\nassert solution('3 6\\n') == 'NO'\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"NO\"\nassert solution(\"3 7\") == \"NO\"\nassert solution(\"5 10\") == \"NO\"\nassert solution(\"3 8\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"1\\n2\") == \"NO\"\nassert solution(\"3\\n4\") == \"YES\"\nassert solution(\"2\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n..*..\\n.*...\") == \"NO\"\nassert solution(\"5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\") == \"YES\"\nassert solution(\"7 7\\n.......\\n...*...\\n..****.\\n...*...\\n.......\\n.*.....\\n\") == \"NO\"\nassert solution(\"5 10\\n..........\\n..*.......\\n.*.******.\\n..*.......\\n..........\\n\") == \"NO\"\nassert solution(\"5 10\\n.*.*.*.*.\\n.*.*.*.*.\\n.*.*.*.*.\\n.*.*.*.*.\\n.*.*.*.*.\\n\") == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"input/test\").readlines()) == \"YES\"\nassert solution(open(\"input/test1\").readlines()) == \"NO\"\nassert solution(open(\"input/test2\").readlines()) == \"YES\"\nassert solution(open(\"input/test3\").readlines()) == \"YES\"\nassert solution(open(\"input/test4\").readlines()) == \"YES\"\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'YES'\nassert solution('3 7') == 'NO'\nassert solution('5 10') == 'NO'"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('2 3') == 'NO'\nassert solution('3 4') == 'NO'\nassert solution('3 5') == 'NO'\nassert solution('5 5') == 'YES'\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 6\\n......\\n..*...\\n.****.\\n..*...\\n..*...\\n') == 'YES'\nassert solution('3 5\\n..*..\\n****.\\n.*...\\n') == 'NO'\nassert solution('7 7\\n.......\\n...*...\\n..****.\\n...*...\\n.......\\n.*.....\\n') == 'NO'\nassert solution('5 6\\n..**..\\n..**..\\n******\\n..**..\\n..**..\\n') == 'NO'\nassert solution('3 7\\n.*...*.\\n.*...*.\\n.*...*.\\n.*...*.\\n.*...*.\\n.*...*.\\n') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"3 3 2\") == \"NO\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"4 3 5\") == \"NO\"\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"3 3 4\") == \"YES\"\nassert solution(\"3 3 4\") == \"NO\"\nassert solution(\"4 1 2\") == \"YES\"\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == 'YES\\n001\\n001\\n110'\nassert solution('3 3 3') == 'NO'\nassert solution('3 4 2') == 'NO'\nassert solution('3 4 3') == 'NO'\nassert solution('3 3 4') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1 2') == 'NO'\nassert solution('3 3 3') == 'NO'\nassert solution('3 3 1') == 'YES'\nassert solution('2 2 2') == 'YES'\nassert solution('1 1 1') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1 2''') == 'YES'\nassert solution('''3 3 3''') == 'NO'\nassert solution('''3 3 2''') == 'NO'\nassert solution('''3 5 4''') == 'YES'\nassert solution('''3 5 4''') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 2''') == 'YES'\nassert solution('''3 3 3''') == 'NO'\nassert solution('''4 1 2''') == 'NO'\nassert solution('''3 1 3''') == 'YES'\nassert solution('''6 1 2''') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1 2''') == 'YES'\nassert solution('''3 3 3''') == 'NO'\n\nassert solution('''4 2 1''') == 'YES'\nassert solution('''5 5 2''') == 'NO'\nassert solution('''5 6 1''') == 'YES'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"YES\"\nassert solution(\"3 3 3\") == \"NO\"\nassert solution(\"2 1 2\") == \"NO\"\n\n\n-----\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1 2''') == 'YES'\nassert solution('''3 3 3''') == 'NO'\nassert solution('''3 1 2''') == 'YES'\nassert solution('''3 4 4''') == 'NO'\nassert solution('''4 1 2''') == 'YES'\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 10\n7 2\n1\n''') == '2'\n\nassert solution('''2 2\n2 1\n2\n''') == '0'\n\nassert solution('''3 3\n3 1\n3\n''') == '4'\n\nassert solution('''3 2\n3 1\n3\n''') == '2'\n\nassert solution('''3 4\n3 1\n3\n''') == '1'"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 10\n7 2\n1\n''') == '2'\n\nassert solution('''3 3\n3 2\n2 1\n1 0\n''') == '0'\n\nassert solution('''5 2\n3 2\n1 0\n2 0\n2 0\n''') == '4'\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10\\n7 2\\n1') == '2'\nassert solution('2 2\\n2 1\\n2') == '0'\nassert solution('1 10\\n7 2\\n1') == '2'\nassert solution('2 2\\n2 1\\n2') == '0'\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == 0\nassert solution(\"1 10\") == 2\nassert solution(\"2 10\") == 1\nassert solution(\"3 3\") == 2\nassert solution(\"2 2\") == 0\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10\\n7 2\\n1\") == \"2\"\nassert solution(\"1 10\\n7 2\\n2\") == \"0\"\nassert solution(\"2 2\\n2 1\\n2\") == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 10\n7 2\n1''') == '2'\nassert solution('''2 2\n2 1\n2''') == '0'\nassert solution('''3 4\n9 9\n1''') == '1'\nassert solution('''10 5\n5 3\n1''') == '0'\nassert solution('''100 10\n10 9\n1''') == '1'\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10\\n7 2\\n1') == '2'\nassert solution('2 2\\n2 1\\n2') == '0'\nassert solution('1 10\\n7 2\\n2') == '0'\nassert solution('1 10\\n7 2\\n2') == '0'\nassert solution('1 10\\n7 2\\n2') == '0'\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 10\n7 2\n1''') == '2'\nassert solution('''2 2\n2 1\n2''') == '0'\nassert solution('''1 1\n1\n2''') == '0'\nassert solution('''2 100000\n1 100000\n2 100000''') == '0'\nassert solution('''1 100000\n2 100000\n2 100000''') == '0'\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSGTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\nassert solution('XABCYZ') == 'Impossible'"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"ZABCDEFSRQPON\"\nassert solution(\"XKWVUTGHIJKLMNOPQRSSTUVXYZ\") == \"Impossible\"\n\n\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'Impossible'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\n\n\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"ZABCDEFSRQPON\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"ZABCDEFSRQPON\"\nassert solution(\"ABTNYRCWNLSWWEZXJWNFHLKZJTUYIVFJXDPBMQKYIOLU\") == \"Impossible\"\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(ABCDEFGHIJKLMNOPQRSTUVWXYZ) == \"YXWVUTGHIJKLM\"\nassert solution(BUVTYZFQSNRIWOXXGJLKACPEMDH) == \"ZABCDEFSRQPON\"\n\n\"\"\""
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(ABCDEFGHIJKLMNOPQRSTUVWXYZ) == \"YXWVUTGHIJKLM\"\nassert solution(BUVTYZFQSNRIWOXXGJLKACPEMDH) == \"ZABCDEFSRQPON\"\n\"\"\"\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSGTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\n\n---\n\n## Submitting\n\n1. Use `PyPy3` for Python 3: `pypy3`, `Python3`, `CPython3`\n2. Download the files from the following URLs:\n    https://www.python.org/downloads/release/python-370/\n    https://www.python.org/ftp/python/3.7.7/Python-3.7.7.amd64.exe\n    https://www.python.org/ftp/python/3.7.7/Python-3.7.7.amd64.msi\n3. Use `pip` to install the above two dependencies (`pyperclip` and `Pillow`)\n4. Fill in the `solution` function below and submit it.\n\nUse `PyPy3` for Python 3: `pypy3`, `Python3`, `CPython3`\n\"\"\"\n\nfrom collections import deque\nfrom pyperclip import copy\nfrom PIL import Image, ImageDraw, ImageFont\n\nCOLORS = {\n    'A': '#EEF1F0',\n    'B': '#FDF1E6',\n    'C': '#FFFFB2',\n    'D': '#D4D6E7',\n    'E': '#E0E8F0',\n    'F': '#B0B6BD',\n    'G': '#6C8D8D',\n    'H': '#FFBAB9',\n    'I': '#EEDF8E',\n    'J': '#C0C0C0',\n    'K': '#5B9F7F',\n    'L': '#F7F7F7',\n    'M': '#FFEFA3',\n    'N': '#DDD5D9',\n    'O': '#FFFFFF',\n    'P': '#D0D0D0',\n    'Q': '#D6D6D6',\n    'R': '#B9B9B9',\n    'S': '#F4F4F4',\n    'T': '#FCFCFC',\n    'U': '#D9D9D9',\n    'V': '#C2C2C2',\n    'W': '#FFF5EE',\n    'X': '#FFE7C6',\n    'Y': '#FFDB8D',\n    'Z': '#E5E8E2',\n}\n\nFONT = 'Helvetica'"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"ZABCDEFSRQPON\"\nassert solution(\"ZZZZZZZZZZZZZZZZZZ\") == \"Impossible\"\nassert solution(\"HJZXVVYBQWMXEKSKFQT\") == \"HIJKLMNOPQRST\"\nassert solution(\"DATAMHSZHRWUPLRJIOTQNZYC\") == \"HIJKLMNOPQRS\"\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABCDEFGHIJKLMNOPQRSGTUVWXYZ\") == \"YXWVUTGHIJKLM\"\nassert solution(\"BUVTYZFQSNRIWOXXGJLKACPEMDH\") == \"ZABCDEFSRQPON\"\n\n\n\"\"\""
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == \"YXWVUTGHIJKLM\"\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == \"ZABCDEFSRQPON\"\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == \"YXWVUTGHIJKLM\"\nassert solution('ABDEHGFIYNZXMJSTUQNOPK') == \"ABDEHGFIYNZXMJSTUQNOPK\"\nassert solution('BACDEGHIJKLMNOPQRSTUVWXYZ') == \"Impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nassert solution('3 5') == '<'\nassert solution('20 21') == '>'\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nassert solution('10 4') == '<'\n\"\"\"\nfrom math import log10"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '>'\n\"\"\"\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '<'\nassert solution('6 3') == '>'\nassert solution('10 3') == '='\nassert solution('10 10') == '='"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\n\n\n\n\n\"\"\""
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\nassert solution('2 3') == '4'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1''') == '3'\nassert solution('''2 1''') == '5'\nassert solution('''1 2''') == '2'\nassert solution('''10 10''') == '30'\nassert solution('''6 1''') == '5'\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '2'\nassert solution('1 1') == '3'\nassert solution('1 2') == '5'\nassert solution('2 1') == '2'\nassert solution('1 1') == '3'\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 1') == '5'\nassert solution('2 2') == '2'\nassert solution('1 2') == '5'\nassert solution('1 1') == '3'\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1, 1) == \"3\"\nassert solution(1, 2) == \"5\"\nassert solution(2, 1) == \"2\"\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\nassert solution(\"3 1 4 3 8\") == \"9\"\nassert solution(\"5 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('7 3 7 3 1 8') == '28'\nassert solution('7 3 7 3 10') == '20'\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\nassert solution(\"1 1 1 1 1\") == \"20\"\nassert solution(\"1 2 3 4 5\") == \"20\"\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('7 11 7 7 7 7') == '28'\nassert solution('7 11 7 7 7 7') == '28'\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('9 3 7 1 8') == '28'\nassert solution('2 3 3 4 4') == '24'\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('10 10 10 10 10') == '20'\nassert solution('10 10 10 10 10') == '20'\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 7 3 20''') == '26'\nassert solution('''7 9 3 1 8''') == '28'\nassert solution('''10 10 10 10 10''') == '20'"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"7 3 7 3 20\") == \"26\"\nassert solution(\"7 9 3 1 8\") == \"28\"\nassert solution(\"10 10 10 10 10\") == \"20\"\nprint(solution(input()))\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('4 5 10 2 3') == '5'\nassert solution('1 5 10 2 4') == '10'\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 5\\n10 -10') == '0'\nassert solution('1 3\\n10 -10') == '1'\nassert solution('1 1\\n0 0') == '0'\nassert solution('1 1\\n1 1') == '0'\nassert solution('1 0\\n1 0') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 10''') == '7'\nassert solution('''2 0''') == '10'\nassert solution('''5 0''') == '0'\nassert solution('''1 2 3 4 5 6 7 8 9 10''') == '2'\nassert solution('''2 0''') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 10\\n1 7 12') == '7'\nassert solution('2 0\\n11 -10') == '10'\nassert solution('5 0\\n0 0 1000 0 0') == '0'\nassert solution('4 2\\n1 2 3 4') == '4'\nassert solution('5 0\\n0 0 100000 0 0') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 7 12\\n') == '7'\nassert solution('2 0\\n11 -10\\n') == '10'\nassert solution('5 0\\n0 0 1000 0 0\\n') == '0'\nassert solution('3 0\\n0 0 1000 0 0\\n') == '0'\nassert solution('5 0\\n0 0 10 -1 1 1 1 1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 10\\n1 7 12') == '7'\nassert solution('2 0\\n11 -10') == '10'\nassert solution('5 0\\n0 0 1000 0 0') == '0'\nassert solution('3 0\\n1 7 12') == '7'\nassert solution('3 0\\n0 0 0') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 7 12\n1 7 12''') == '7'\nassert solution('''0 0 1000 0 0\n11 -10''') == '0'\nassert solution('''5 0\n0 0 1000 0 0\n''') == '0'"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == expected\n\n\"\"\"\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == 1\nassert solution(\"1 1 1 1 1\") == 0\nassert solution(\"2 0\") == 0\nassert solution(\"1 0\") == 0\nassert solution(\"1 100\") == 1\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0\\n11 -10') == '0'\nassert solution('3 10\\n1 7 12') == '7'\nassert solution('5 0\\n0 0 1000 0 0\\n') == '0'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\nassert solution('5\\n0') == '0'\nassert solution('5\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''110''') == '10'\nassert solution('''4''') == '-1'\nassert solution('''120''') == '-1'\nassert solution('''10''') == '1'\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n\n\"\"\""
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n\n\n-----Note-----\n\nThis is a much more difficult version of the problem \"Minimum root of linear equation\".\n\nYou can find the given test data and input in the editor.\n\n-----Alternate Solutions-----"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == 1\nassert solution('''110''') == -1\nassert solution('''4''') == -1\nassert solution('''1''') == 1\nassert solution('''9''') == 10\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\nassert solution('100') == '-1'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1'\nassert solution('''110''') == '10'\nassert solution('''4''') == '-1'\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"110\") == \"10\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"2*3\") == \"1\"\nassert solution(\"3*7\") == \"-1\"\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == '1'\nassert solution('''110''') == '10'\nassert solution('''4''') == '-1'\nassert solution('''110''') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\") == -1\nassert solution(\"2\") == 1\nassert solution(\"4\") == -1\nassert solution(\"110\") == 10\n\n\n-----"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"23:59\") == \"0:59\"\nassert solution(\"23:59\") == \"23:59\"\nassert solution(\"00:00\") == \"23:59\"\nassert solution(\"00:01\") == \"23:59\"\nassert solution(\"00:01\") == \"23:59\"\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'\n\nassert solution('05:40') == '00:05'\nassert solution('05:39') == '00:04'\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''05:50''') == '''00:06'''\nassert solution('''05:44''') == '''00:06'''\nassert solution('''00:00''') == '''23:00'''\nassert solution('''00:01''') == '''00:01'''\nassert solution('''00:00''') == '''00:01'''\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin.split()[-1]"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"05:50\") == \"00:06\"\nassert solution(\"00:00\") == \"23:00\"\nassert solution(\"00:01\") == \"00:01\""
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"05:45\") == \"00:00\"\nassert solution(\"05:55\") == \"00:00\"\nassert solution(\"00:00\") == \"00:00\"\nassert solution(\"00:00\") == \"00:00\"\nassert solution(\"00:01\") == \"00:01\"\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'\nassert solution('00:00') == '00:01'\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('05:44') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'\nassert solution('01:00') == '23:00'\nassert solution('01:01') == '00:01'"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'\nassert solution('00:02') == '00:02'\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n6 1 6 6 0') == 2\nassert solution('2\\n6 1 6 6 0') == 2\nassert solution('2\\n1 6 6 6 0') == 2\nassert solution('2\\n0 6 6 6 0') == 2\nassert solution('2\\n1 2 2 2 0') == 2\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n1 2\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n1 2\\n1 2\\n1 2\\n\") == \"1\"\nassert solution(\"2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '3'\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5\n6 1 6 6 0\n'''\n) == '2'\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"10\\n10\\n10\\n10\") == \"1\"\nassert solution(\"100\\n100\\n100\\n100\\n100\") == \"3\"\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 3 4') == 2\nassert solution('6\\n1 6 6 6 0') == 2\nassert solution('3\\n1 2 3') == 1\nassert solution('10\\n9 8 7 6 5 4 3 2 1 0') == 1\nassert solution('2\\n1 2') == 1\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n') == '2'\nassert solution('3\\n6 6 0\\n') == '2'\nassert solution('3\\n6 6 6\\n') == '2'\nassert solution('3\\n6 6 6 6\\n') == '3'\nassert solution('4\\n6 6 6 6 6\\n') == '3'\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n6 1 6 6 0''') == '2'\nassert solution('''6\n6 1 6 6 0''') == '2'\nassert solution('''7\n6 1 6 6 0''') == '3'\nassert solution('''8\n6 1 6 6 0''') == '4'\nassert solution('''9\n6 1 6 6 0''') == '4'\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"3 2 1\") == \"4\"\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == 3\nassert solution('3 2 3') == 1\nassert solution('3 2 0') == 0\nassert solution('5 1 2') == 1\nassert solution('1000 1 2000') == 60\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 0') == '3'\nassert solution('3 2 1') == '4'\nassert solution('2 1 0') == '0'\nassert solution('4 1 3') == '6'\nassert solution('2 1 1') == '4'\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 0''') == '3'\nassert solution('''3 2 1''') == '4'\nassert solution('''3 2 2''') == '5'\nassert solution('''3 2 3''') == '8'\nassert solution('''3 2 4''') == '13'\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0\\n3\\n0\") == \"1\"\nassert solution(\"1\\n0\\n0\") == \"0\"\nassert solution(\"2\\n1\\n1\") == \"2\"\nassert solution(\"1\\n1\\n0\") == \"1\"\nassert solution(\"2\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"0 1 2\n1 0\n\"\"\") == \"0\"\nassert solution(\"\"\"0 0 0\n0 1 0\n\"\"\") == \"1\"\nassert solution(\"\"\"0 0 0\n0 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"0 0 0\n0 1 0\n\"\"\") == \"2\"\nassert solution(\"\"\"0 0 0\n0 1 0\n\"\"\") == \"3\"\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 0\\n') == '3'\nassert solution('3 2 1\\n') == '4'\nassert solution('2 1 1\\n') == '2'\nassert solution('3 3 1\\n') == '4'\nassert solution('3 4 1\\n') == '12'\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m, k = map(int, stdin.readline().split())\n\na = [[0] * (m + 1) for _ in range(n + 1)]\na[0][0] = 1\n\nfor i in range(1, n + 1):\n    for j in range(m + 1):\n        if j == 0:\n            a[i][j] = a[i - 1][j]\n        elif j == m:\n            a[i][j] = a[i - 1][j - 1]\n        else:\n            a[i][j] = a[i - 1][j] + a[i - 1][j - 1]\n\nprint(a[n][m] % 1000000007)\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 0\") == \"3\"\nassert solution(\"3 2 1\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\nassert solution('11112') == 'NO'\nassert solution('0001') == 'NO'\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(str(1444)) == \"YES\"\nassert solution(str(414)) == \"NO\"\nassert solution(str(144)) == \"YES\"\nassert solution(str(141241)) == \"NO\"\nassert solution(str(1414)) == \"YES\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('114114') == \"YES\"\nassert solution('1111') == \"YES\"\nassert solution('441231') == \"NO\"\nassert solution('121234') == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1151443\") == \"YES\"\nassert solution(\"111414\") == \"YES\"\nassert solution(\"114444\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"100000\") == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(114114) == \"YES\"\nassert solution(1111) == \"YES\"\nassert solution(441231) == \"NO\"\nassert solution(10**5) == \"YES\"\n\nprint('Test success!')"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1444\") == \"YES\"\nassert solution(\"414\") == \"NO\"\nassert solution(\"5114\") == \"NO\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\""
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"114114\") == \"YES\"\nassert solution(\"1111\") == \"YES\"\nassert solution(\"441231\") == \"NO\"\nassert solution(\"99973\") == \"NO\"\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('114114') == 'YES'\nassert solution('1111') == 'YES'\nassert solution('441231') == 'NO'\nassert solution('4242424242424242') == 'NO'\nassert solution('12345') == 'NO'\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\n\n'''\n\nfrom collections import deque"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'Poor Inna and pony!'\nassert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\nassert solution('''1 1 1 1 1 1''') == 'Poor Inna and pony!'\n\n\n\"\"\""
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 7 1 3 2 2') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\nassert solution('5 5 4 4 3 3') == 'Poor Inna and pony!'\nassert solution('2 2 1 1 1 1') == 'Poor Inna and pony!'\nassert solution('1 1 1 1 1 1') == 'Poor Inna and pony!'"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 7 1 3 2 2\\n') == '2'\nassert solution('5 5 2 3 1 1\\n') == 'Poor Inna and pony!'\nassert solution('5 5 3 1 1 1\\n') == 'Poor Inna and pony!'\nassert solution('5 5 3 1 3 1\\n') == 'Poor Inna and pony!'\nassert solution('5 5 3 1 3 1\\n') == 'Poor Inna and pony!'\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\n'''\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 7 1 3 2 2\") == \"2\"\nassert solution(\"5 5 2 3 1 1\") == \"Poor Inna and pony!\"\n'''\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 3 2 1') == '2'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\nassert solution('5 5 2 3 1 1') == 'Poor Inna and pony!'\n\"\"\"\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\"\n\nn = int(stdin.readline())\ns = stdin.readline().strip()\ndp = [0] * (n + 1)\n\nfor i in range(1, n):\n    dp[i] = dp[i - 1] + 1\n    if s[i - 1] == s[i]:\n        dp[i] = min(dp[i], dp[i - 2] + 1)\n\nprint(dp[-1])\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('bacabcab') == 4\nassert solution('bcda') == 3\nassert solution('abbbbb') == 5\nassert solution('abccccdd') == 5\nassert solution('abcdefg') == 0\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bacabcab') == '4'\nassert solution('bcda') == '3'\nassert solution('abbbbb') == '5'\nassert solution('bbbbaa') == '4'\nassert solution('aaa') == '0'\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"bacabcab\") == 4\nassert solution(\"bcda\") == 3\nassert solution(\"abbbbb\") == 5\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\n\n'''\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '4'\n\n\"\"\"\n\n\"\"\"\n\nIf you want to know if you can get the maximum number of characters you can remove, you need to know the maximum number of characters you can remove in order to get the maximum number of characters you can remove.\n\nLet us call the maximum number of characters you can remove $k$, the number of characters you can remove to get the maximum number of characters you can remove.\n\nIf $s$ is the original string, then the maximum number of characters you can remove is $k = \\log_2(|s|)$ because there are $2^{\\log_2(|s|)}$ possible combinations of $k$.\n\nFor example, consider the original string $s=\\sigma_1^{\\sigma_2^{\\sigma_3^{\\sigma_4^{\\sigma_5^{\\sigma_6^{\\sigma_7^{\\sigma_8^{\\sigma_9^{\\sigma_10^{\\sigma_11^{\\sigma_12^{\\sigma_13^{\\sigma_14^{\\sigma_15^{\\sigma_16^{\\sigma_17^{\\sigma_18^{\\sigma_19^{\\sigma_20^{\\sigma_21^{\\sigma_22^{\\sigma_23^{\\sigma_24^{\\sigma_25^{\\sigma_26^{\\sigma_27^{\\sigma_28^{\\sigma_29^{\\sigma_30^{\\sigma_31^{\\sigma_32^{\\sigma_33^{\\sigma_34^{\\sigma_35^{\\sigma_36^{\\sigma_37^{\\sigma_38^{\\sigma_39^{\\sigma_40^{\\sigma_41^{\\sigma_42^{\\sigma_43^{\\sigma_44^{\\sigma_45^{\\sigma_46^{\\sigma_47^{\\sigma_48^{\\sigma_49^{\\sigma_50^{\\sigma_51^{\\sigma_52^{\\sigma_53^{\\sigma_54^{\\sigma_55^{\\sigma_56^{\\sigma_57^{\\sigma_58^{\\sigma_59^{\\sigma_60^{\\sigma_61^{\\sigma_62^{\\sigma_63^{\\sigma_64^{\\sigma_65^{\\sigma_66^{\\sigma_67^{\\sigma_68^{\\sigma_69^{\\sigma_70^{\\sigma_71^{\\sigma_72^{\\sigma_73^{\\sigma_74^{\\sigma_75^{\\sigma_76^{\\sigma_77^{\\sigma_78^{\\sigma_79^{\\sigma_80^{\\sigma_81^{\\sigma_82^{\\sigma_83^{\\sigma_84^{\\sigma_85^{\\sigma_86^{\\sigma_87^{\\sigma_88^{\\sigma_89^{\\sigma_90^{\\sigma_91^{\\sigma_92^{\\sigma_93^{\\sigma_94^{\\sigma_95^{\\sigma_96^{\\sigma_97^{\\sigma_98^{\\sigma_99^{\\sigma_100^{\\sigma_101^{\\sigma_102^{\\sigma_103^{\\sigma_104^{\\sigma_105^{\\sigma_106^{\\sigma_107^{\\sigma_108^{\\sigma_109^{\\sigma_110^{\\sigma_111^{\\sigma_112^{\\sigma_113^{\\sigma_114^{\\sigma_115^{\\sigma_116^{\\sigma_117^{\\sigma_118^{\\sigma_119^{\\sigma_120^{\\sigma_121^{\\sigma_122^{\\sigma_123^{\\sigma_124^{\\sigma_125^{\\sigma_126^{\\sigma_127^{\\sigma_128^{\\sigma_129^{\\sigma_130^{\\sigma_131^{\\sigma_132^{\\sigma_133^{\\sigma_134^{\\sigma_135^{\\sigma_136^{\\sigma_137^{\\sigma_138^{\\sigma_139^{\\sigma_140^{\\sigma_141^{\\sigma_142^{\\sigma_143^{\\sigma_144^{\\sigma_145^{\\sigma_146^{\\sigma_147^{\\sigma_148^{\\sigma_149^{\\sigma_150^{\\sigma_151^{\\sigma_152^{\\sigma_153^{\\sigma_154^{\\sigma_155^{\\sigma_156^{\\sigma_157^{\\sigma_158^{\\sigma_159^{\\sigma_160^{\\sigma_161^{\\sigma_162^{\\sigma_163^{\\sigma_164^{\\sigma_165^{\\sigma_166^{\\sigma_167^{\\sigma_168^{\\sigma_169^{\\sigma_170^{\\sigma_171^{\\sigma_172^{\\sigma_173^{\\sigma_174^{\\sigma_175^{\\sigma_176^{\\sigma_177^{\\sigma_178^{\\sigma_179^{\\sigma_180^{\\sigma_181^{\\sigma_182^{\\sigma_183^{\\sigma_184^{\\sigma_185^{\\sigma_186^{\\sigma_187^{\\sigma_188^{\\sigma_189^{\\sigma_190^{\\sigma_191^"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('bacabcab') == 4\nassert solution('bcda') == 3\nassert solution('abbbbb') == 5\nassert solution('bbbbbbb') == 1\nassert solution('abcbacbac') == 1\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bacabcab\") == 4\nassert solution(\"bcda\") == 3\nassert solution(\"abbbbb\") == 5\nassert solution(\"abbbbbbb\") == 1\nassert solution(\"bacabcab\") == 4\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('bacabcab') == 4\nassert solution('bcda') == 3\nassert solution('abbbbb') == 5\nassert solution('bbbbbbb') == 4\nassert solution('bbbccbbbcc') == 4\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950''') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1'\nassert solution(\n'''4 2\n1 2 3 4\n2\n3\n4\n5\n8\n7\n9\n10\n11\n12\n13\n15\n16\n17\n19\n20\n21\n23\n25\n26\n29\n30\n31\n32\n34\n37\n38\n39\n41\n42\n44\n45\n47\n49\n50\n51\n53\n55\n58\n59\n60\n62\n65\n68\n69\n70\n72\n74\n77\n79\n81\n83\n85\n87\n89\n90\n92\n94\n95\n97\n99\n101\n103\n105\n107\n109\n110\n112\n114\n116\n118\n120\n122\n124\n126\n128\n130\n132\n134\n136\n138\n140\n142\n144\n146\n148\n150\n152\n154\n156\n158\n160\n162\n164\n166\n168\n170\n172\n174\n176\n178\n180\n182\n184\n186\n188\n190\n192\n194\n196\n198\n200\n202\n204\n206\n208\n210\n212\n214\n216\n218\n220\n222\n224\n226\n228\n230\n232\n234\n236\n238\n240\n242\n244\n246\n248\n250\n252\n254\n256\n258\n260\n262\n264\n266\n268\n270\n272\n274\n276\n278\n280\n282\n284\n286\n288\n290\n292\n294\n296\n298\n300\n302\n304\n306\n308\n310\n312\n314\n316\n318\n320\n322\n324\n326\n328\n330\n332\n334\n336\n338\n340\n342\n344\n346\n348\n350\n352\n354\n356\n358\n360\n362\n364\n366\n368\n370\n372\n374\n376\n378\n380\n382\n384\n386\n388\n390\n392\n394\n396\n398\n400\n402\n404\n406\n408\n410\n412\n414\n416\n418\n420\n422\n424\n426\n428\n430\n432\n434\n436\n438\n440\n442\n444\n446\n448\n450\n452\n454\n456\n458\n460\n462\n464\n466\n468\n470\n472\n474\n476\n478\n480\n482\n484\n486\n488\n490\n492\n494\n496\n498\n500\n502\n504\n506\n508\n510\n512\n514\n516\n518\n520\n522\n524\n526\n528\n530\n532\n534\n536\n538\n540\n542\n544\n546\n548\n550\n552\n554\n556\n558\n560\n562\n564\n566\n568\n570\n572\n574\n576\n578\n580\n582\n584\n586\n588\n590\n592\n594\n596\n598\n600\n602\n604\n606\n608\n610\n612\n614\n616\n618\n620\n622\n624\n626\n628\n630\n632\n634\n636\n638\n640\n642\n644\n646\n648\n650\n652\n654\n656\n658\n660\n662\n664\n666\n668\n670\n672\n674\n676\n678\n680\n682\n684\n686\n688\n690\n692\n694\n696\n698\n700\n702\n704\n706\n708\n710\n712\n714\n716\n718\n720\n722\n724\n726\n728\n730\n732\n734\n736\n738\n740\n742\n744\n746\n748\n750\n752\n754\n756\n758\n760\n762\n764\n766\n768\n770\n772\n774\n776\n778\n780\n782\n784\n786\n788\n790\n792\n794\n796\n798\n800\n802\n804\n806\n808\n810\n812\n814\n816\n818\n820\n822\n824\n826\n828\n830\n832\n834\n836\n838\n840\n842\n844\n846\n848\n850\n852\n854\n856\n858\n860\n862\n864\n866\n868\n870\n872\n874\n876\n878\n880\n882\n884\n886\n888\n890\n892\n894\n896\n898\n900\n902\n904\n906\n908\n910\n912\n914\n916\n918\n920\n922\n924\n926\n928\n930\n932\n934\n936\n938\n940\n942\n944\n946\n948\n950\n952\n954\n956\n958\n960\n962\n964\n966\n968\n970\n972\n974\n976\n978\n980\n982\n984\n986\n988\n990\n992\n994\n996\n998\n1000\n\n''') == '20\\n19\\n19\\n20\\n-1\\n3\\n-1\\n-1'\nassert solution(\n'''6 2\n1 2 3 4 5\n2\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25\n27\n29\n31\n33\n35\n37\n39\n41\n43\n45\n47\n49\n51\n53\n55\n57\n59\n61\n63\n65\n67\n69\n71\n73\n75\n77\n79\n81\n83\n85\n87\n89\n91\n93\n95\n97\n99\n101\n103\n105\n107\n109\n111\n113\n115\n117\n119\n121\n123\n125\n127\n129\n131\n133\n135\n137\n139\n141\n143\n145\n147\n149\n151\n153\n155\n157\n159\n161\n163\n165\n167\n169\n171\n173\n175\n177\n179\n181\n183\n185\n187\n189\n191\n193\n195\n197\n199\n201\n203\n205\n207\n209\n211\n213\n215\n217\n219\n221"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n2\\n2\\n2\\n2\\n2\\n2\\n2'"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(example)\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\\n\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\nassert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n9950\\n\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\"\nassert solution(\"7 1\\n4 9 9 7 1\\n10\\n1\\n8\\n7\\n9\\n10\\n13\\n15\\n20\\n\") == \"-1\"\nassert solution(\"5 2\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n9950\\n\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\"\nassert solution(\"7 1\\n4 9 9 7 1\\n10\\n1\\n8\\n7\\n9\\n10\\n13\\n15\\n20\\n\") == \"-1\"\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n'\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 20\") == \"6\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"1 5\") == \"-1\"\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 5 8\") == \"6\"\nassert solution(\"1 2 3 5 8\") == \"6\"\nassert solution(\"1 2 3 5 8\") == \"6\"\nassert solution(\"1 2 3 5 8\") == \"6\"\nassert solution(\"1 2 3 5 8\") == \"6\"\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 20\\n10 50 100 500 1000 5000\\n8\\n4200\\n100000\\n95000\\n96000\\n99000\\n10100\\n2015\\n9950\") == \"6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\"\nassert solution(\"5 2\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n-1\"\nassert solution(\"5 3\\n1 2 3 5 8\\n8\\n1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\") == \"1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\"\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950''') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1'\nprint(solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15'''))\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950''') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2'\nassert solution('''3 2\n3\n3\n3\n3\n3''') == '-1\\n3\\n-1\\n-1\\n-1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3'\nassert solution('''6 3\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n''') == '6\\n-1\\n-1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('''8 4\n1 2 3 4 5 6 7 8\n9\n4\n2\n5\n9\n10\n11\n12\n13\n14\n15\n16\n17\n''') == '3\\n3\\n3\\n3\\n-1\\n-1\\n-1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('''8 2\n1 2 3 4 5 6 7 8\n9\n5\n4\n2\n6\n9\n10\n11\n12\n13\n14\n15\n16\n17\n''') == '3\\n3\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 4\\n3 4\\n1 1\\n') == '8'\nassert solution('10 4 0\\n1 2\\n3 1\\n') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n'''"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n\nimport sys"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4\\n3 4\\n1 1\") == \"8\"\nassert solution(\"5 4 0\\n1 2\\n3 1\") == \"7\"\nassert solution(\"4 2 4\\n3 4\\n1 1\") == \"8\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 4\\n3 4\\n1 1\\n') == '8'\nassert solution('5 4 0\\n1 2\\n3 1\\n') == '7'\nassert solution('5 4 0\\n1 2\\n1 1\\n') == '7'\nassert solution('5 4 0\\n1 2\\n1 1\\n') == '7'\nassert solution('5 4 0\\n1 2\\n3 1\\n') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\nassert solution('''1 2 0\n1 2\n0 1\n''') == '7'\nassert solution('''1 2 0\n1 2\n3 1\n''') == '7'\nassert solution('''1 2 0\n2 2\n3 1\n''') == '4'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2 4\\n3 4\\n1 1\\n') == '8'\nassert solution('5 4 0\\n1 2\\n3 1\\n') == '7'\nassert solution('5 5 0\\n1 2\\n1 1\\n') == '7'\nassert solution('5 5 1\\n1 2\\n1 1\\n') == '8'\nassert solution('5 5 2\\n1 2\\n3 1\\n') == '8'\n"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2 4\\n3 4\\n1 1\\n\") == \"8\"\nassert solution(\"5 4 0\\n1 2\\n3 1\\n\") == \"7\"\nassert solution(\"5 4 1\\n1 2\\n3 1\\n\") == \"7\""
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 2 4\n3 4\n1 1\n'''\n) == '8'\nassert solution(\n'''5 4 0\n1 2\n3 1\n'''\n) == '7'\nassert solution(\n'''5 3 2\n2 2\n2 1\n'''\n) == '6'\nassert solution(\n'''5 3 1\n2 2\n2 1\n'''\n) == '5'\nassert solution(\n'''5 4 0\n2 2\n2 1\n'''\n) == '7'\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 5') == '4'\nassert solution('5 13') == '0'\nassert solution('6 12') == '2'\nassert solution('5 89') == '0'\nassert solution('10 100') == '5'\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50') == '8'\nassert solution('5\\n5') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n\") == \"2\\n\"\nassert solution(\"6 12\\n\") == \"4\\n\"\nassert solution(\"5 13\\n\") == \"0\\n\"\n\"\"\"\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 5''') == '2'\nassert solution('''6 12''') == '4'\nassert solution('''5 13''') == '0'\n\n'''\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 5') == '2'\nassert solution('6 12') == '4'\nassert solution('5 13') == '0'\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 5''') == 2\nassert solution('''6 12''') == 4\nassert solution('''5 13''') == 0\n'''"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[0], 'Input mismatch'\n\n\"\"\"\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'jav'\nassert solution('6 2') == 'pyth'\nassert solution('5 2') == 'phphp'\n\n'''\n\n'''\n    A = int(stdin.readline().split()[0])\n    B = int(stdin.readline().split()[0])\n    return ''.join([stdin.readline().strip() for _ in range(A) if set(stdin.readline().strip()) == set(stdin.readline().strip())])\n'''\n\n'''\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'python'\nassert solution(stdin) == 'phphp'\nassert solution(stdin) == 'java'\n\n'''\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n') == 'java'\nassert solution('6 6\\n') == 'python'\nassert solution('5 2\\n') == 'phphp'\nassert solution('1 1\\n') == 'a'\nassert solution('6 6\\n') == 'b'\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3''') == 'java'\nassert solution('''6 6''') == 'python'\nassert solution('''5 2''') == 'phphp'\nassert solution('''2 2''') == 'z'\nassert solution('''10 10''') == 'abcdefgh'\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n''') == 'java'\nassert solution('''6 6\n''') == 'python'\nassert solution('''5 2\n''') == 'phphp'\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == None\nassert solution('2 2') == None\nassert solution('3 2') == 'ab'\nassert solution('4 2') == None\nassert solution('5 2') == None\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\nassert solution('5 3') == 'java'\nassert solution('7 3') == 'jython'\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == 'java'\nassert solution('6 6') == 'python'\nassert solution('5 2') == 'phphp'\nassert solution('1 26') == 'abcd'\nassert solution('1 28') == 'abab'\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"RLRL\") == \"\"\nassert solution(\"2 4 6 10\") == \"\"\nassert solution(\"LLR\") == \"\"\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '-1'\nassert solution('LLR') == '-1'\nassert solution('LRLR') == '1'\nassert solution('LLRRRLRRL') == '1'\nassert solution('LLRRRLRLRLRRRRRLLRR') == '1'\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\\n\") == \"1\\n\"\nassert solution(\"3\\nLLR\\n40 50 60\\n\") == \"-1\\n\"\nassert solution(\"4\\nRLLL\\n1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"6\\nRLRLRLRL\\n1 2 3 4 5 6\\n\") == \"1\\n\"\nassert solution(\"6\\nRLLRRRL\\n1 2 3 4 5 6\\n\") == \"0\\n\"\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\nLLR\n40 50 60''') == '1'\n\nassert solution('''3\nLLR\n40 50 60''') == '-1'\n\nassert solution('''3\nRLR\n2 4 6 10''') == '1'\n\nassert solution('''3\nRRL\n3 2 5 7''') == '-1'\n\nassert solution('''3\nLLL\n5 4 3 2''') == '1'\n\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\nRR\") == \"1\"\nassert solution(\"2\\nRL\") == \"-1\"\nassert solution(\"3\\nLLR\") == \"-1\"\nassert solution(\"3\\nRRR\") == \"1\"\nassert solution(\"3\\nRR\") == \"-1\"\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\nRLRL\\n2 4 6 10\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\nassert solution(\"3\\nLLR\\n40 50 60\\n0 1 2\") == \"0\"\nassert solution(\"3\\nRRR\\n10 11 12\") == \"-1\"\nassert solution(\"3\\nLLR\\n1 2 3\") == \"0\"\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\nRLRL\n2 4 6 10\n''') == '1'\n\nassert solution('''\n3\nLLR\n40 50 60\n''') == '-1'\n\nassert solution('''\n4\nRLRL\n2 4 6 10\n''') == '1'\n\nassert solution('''\n5\nRLRRL\n4 2 3 6 10\n''') == '1'\n\nassert solution('''\n5\nLLRL\n2 4 3 6 10\n''') == '-1'\n\n\n-----"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nRLRL\n2 4 6 10\n''') == '1'\n\nassert solution('''3\nLLR\n40 50 60\n''') == '-1'\n\nassert solution('''6\nLLLRLRL\n1 4 9 5 8 7\n''') == '1'\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\nLLR\\n40 50 60\") == \"-1\"\nassert solution(\"3\\nLLR\\n2 4 6 10\\n\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\\n\") == \"1\"\nassert solution(\"3\\nLLR\\n1 2 3\\n\") == \"1\"\nassert solution(\"3\\nLLR\\n40 50 60\\n\") == \"1\"\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 2''') == '4'\nassert solution('''1 2\n2 1''') == '4'\nassert solution('''2 10 9''') == '56'\nassert solution('''4 10 9''') == '0'\nassert solution('''3 10 10''') == '0'\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 2\\n2 1') == '4'\nassert solution('2 1 1\\n1 1\\n1 1') == '4'\nassert solution('1 2\\n2 1\\n1 1') == '0'\nassert solution('4 10 9') == '56'\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n1 2\\n2 1\\n') == '4'\nassert solution('4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\\n') == '56'\nassert solution('3 10 10\\n6 6\\n7 7\\n20 5\\n') == '0'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n') == '0'\nassert solution('4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\\n') == '56'\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 2\\n2 1\") == \"4\"\nassert solution(\"2 3\\n1 1\") == \"0\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\") == \"0\"\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n\"\"\""
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('4 10 9') == '56'\nassert solution('3 10 10') == '0'\nassert solution('10 10 10') == '0'\nassert solution('3 10 9') == '0'\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 2\\n2 1') == '4'\nassert solution('2 3\\n1 1') == '0'\nassert solution('4 10 9') == '56'\nassert solution('3 10 10\\n6 6\\n7 7\\n20 5') == '0'\n\n\n\"\"\""
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\") == 4\nassert solution(\"1 2\") == 0\nassert solution(\"2 1\") == 4\nassert solution(\"4 10 9\") == 56\nassert solution(\"3 10 10\") == 0\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n2 1\\n\") == \"4\"\nassert solution(\"4 10 9\\n2 3\\n1 1\\n5 10\\n9 11\\n\") == \"56\"\nassert solution(\"3 10 10\\n6 6\\n7 7\\n20 5\\n\") == \"0\"\nassert solution(\"2 3 4\\n1 2\\n2 3\\n3 4\\n\") == \"4\"\nassert solution(\"3 4 4\\n1 2\\n2 3\\n3 4\\n\") == \"4\"\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('4 10 9') == '56'\nassert solution('3 10 10') == '0'\nassert solution('4 10 10') == '0'\nassert solution('5 10 10') == '0'\n"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 2\n1 2\n2 1''') == '4'\nassert solution('''4 10 9\n2 3\n1 1\n5 10\n9 11''') == '56'\nassert solution('''3 10 10\n6 6\n7 7\n20 5''') == '0'\nassert solution('''2 1 1\n1 1\n1 1''') == '0'\nassert solution('''4 6 5\n1 2\n1 2\n1 2\n1 2\n1 2''') == '8'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2'''\n    ) == '1 1'\n\nassert solution(\n'''0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2'''\n    ) == '0 3'\n\nassert solution(\n'''0 0\n0 1\n0 2\n0 3\n1 0\n1 1\n1 2\n1 3\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3'''\n    ) == '0 3'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 2'\nassert solution('''1\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 2'\nassert solution('''1\n1 1\n1 2\n2 1\n2 2''') == '0 2'\nassert solution('''2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 2'\nassert solution('''3\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 2'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1 2'\n\"\"\"\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == \"0 1\"\nassert solution('''0 0''') == \"0 1\"\nassert solution('''0 1''') == \"0 2\"\nassert solution('''0 2''') == \"1 0\"\nassert solution('''0 3''') == \"1 2\"\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '0 1'\nassert solution('1 0') == '0 2'\nassert solution('2 0') == '0 3'\nassert solution('0 1') == '1 2'\nassert solution('1 1') == '1 2'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '1 1'\n\nassert solution(\n'''\n2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '0 3'\n\nassert solution(\n'''\n3\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2\n''') == '0 2'\n\nassert solution(\n'''\n4\n0 0\n0 1\n0 2\n0 3\n1 0\n1 1\n1 2\n1 3\n2 0\n2 1\n2 2\n2 3\n''') == '0 2'\n\nassert solution(\n'''\n8\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 0\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 0\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n''') == '0 4'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 0\n    0 1\n    0 2\n    1 0\n    1 1\n    1 2\n    2 0\n    2 1\n    2 2\n    \"\"\"\n) == \"1 1\"\n\nassert solution(\n    \"\"\"\n    5\n    0 0\n    0 1\n    0 2\n    0 3\n    0 4\n    1 0\n    1 1\n    1 2\n    1 3\n    1 4\n    2 0\n    2 1\n    2 2\n    2 3\n    2 4\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    4 0\n    4 1\n    4 2\n    4 3\n    4 4\n    \"\"\"\n) == \"0 2\"\n\nassert solution(\n    \"\"\"\n    6\n    0 0\n    0 1\n    0 2\n    0 3\n    0 4\n    0 5\n    1 0\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    2 0\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    3 5\n    4 0\n    4 1\n    4 2\n    4 3\n    4 4\n    4 5\n    5 0\n    5 1\n    5 2\n    5 3\n    5 4\n    5 5\n    \"\"\"\n) == \"0 4\"\n\nassert solution(\n    \"\"\"\n    10\n    0 0\n    0 1\n    0 2\n    0 3\n    0 4\n    0 5\n    0 6\n    0 7\n    0 8\n    0 9\n    1 0\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    2 0\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    2 7\n    2 8\n    2 9\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    3 5\n    3 6\n    3 7\n    3 8\n    3 9\n    4 0\n    4 1\n    4 2\n    4 3\n    4 4\n    4 5\n    4 6\n    4 7\n    4 8\n    4 9\n    5 0\n    5 1\n    5 2\n    5 3\n    5 4\n    5 5\n    5 6\n    5 7\n    5 8\n    5 9\n    6 0\n    6 1\n    6 2\n    6 3\n    6 4\n    6 5\n    6 6\n    6 7\n    6 8\n    6 9\n    7 0\n    7 1\n    7 2\n    7 3\n    7 4\n    7 5\n    7 6\n    7 7\n    7 8\n    7 9\n    8 0\n    8 1\n    8 2\n    8 3\n    8 4\n    8 5\n    8 6\n    8 7\n    8 8\n    8 9\n    9 0\n    9 1\n    9 2\n    9 3\n    9 4\n    9 5\n    9 6\n    9 7\n    9 8\n    9 9\n    \"\"\"\n) == \"0 9\"\n\nassert solution(\n    \"\"\"\n    12\n    0 0\n    0 1\n    0 2\n    0 3\n    0 4\n    0 5\n    0 6\n    0 7\n    0 8\n    0 9\n    0 10\n    0 11\n    1 0\n    1 1\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    1 7\n    1 8\n    1 9\n    1 10\n    1 11\n    2 0\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    2 7\n    2 8\n    2 9\n    2 10\n    2 11\n    3 0\n    3 1\n    3 2\n    3 3\n    3 4\n    3 5\n    3 6\n    3 7\n    3 8\n    3 9\n    3 10\n    3 11\n    4 0\n    4 1\n    4 2\n    4 3\n    4 4\n    4 5\n    4 6\n    4 7\n    4 8\n    4 9\n    4 10\n    4 11\n    5 0\n    5 1\n    5 2\n    5 3\n    5 4\n    5 5\n    5 6\n    5 7\n    5 8\n    5 9\n    5 10\n    5 11\n    6 0\n    6 1\n    6 2\n    6 3\n    6 4\n    6 5\n    6 6\n    6 7\n    6 8\n    6 9\n    6 10\n    6 11\n    7 0\n    7 1\n    7 2\n    7 3\n    7 4\n    7 5\n    7 6\n    7 7\n    7 8\n    7 9\n    7 10\n    7 11\n    8 0\n    8 1\n    8 2\n    8 3\n    8 4\n    8 5\n    8 6\n    8 7\n    8 8\n    8 9\n    8 10\n    8 11\n    9 0\n    9 1\n    9 2\n    9 3\n    9 4\n    9 5\n    9 6\n    9 7\n    9 8\n    9 9\n    9 10\n    9 11\n    10 0\n    10 1\n    10 2\n    10 3\n    10 4\n    10 5\n    10 6\n    10 7\n    10 8\n    10 9\n    10 10\n    10 11\n    11 0\n    11 1\n    11 2\n    11 3\n    11 4\n    11 5\n    11 6\n    11 7\n    11 8\n    11 9\n    11 10\n    11 11\n    \"\"\"\n) == \"1 11\"\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 1'\n\nassert solution('''2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '0 2'\n\nassert solution('''3\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '1 1'\n\nassert solution('''4\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n1 3\n2 0\n2 1\n2 2\n2 3''') == '1 1'\n\nassert solution('''5\n0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n2 2\n2 3\n2 4\n3 0\n3 1\n3 2\n3 3\n3 4\n4 0\n4 1\n4 2\n4 3\n4 4''') == '1 1'"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2') == '1 1'\nassert solution('3\\n0 0\\n0 1\\n0 2\\n0 3\\n1 0\\n1 2\\n1 3\\n2 0\\n2 2\\n2 3\\n3 0\\n3 2\\n3 3') == '0 3'\nassert solution('1\\n0 0') == '0 0'\n\"\"\"\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('389') == '216'\nassert solution('7') == '7'\nassert solution('999999999') == '387420489'\nassert solution('1000000000') == '216'\nassert solution('30000000') == '489'\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''390''') == '''216'''\nassert solution('''7''') == '''7'''\nassert solution('''1000000000''') == '''387420489'''\n\n\"\"\"\n\nfrom functools import reduce\n\nn = int(input())\n\nnums = [int(x) for x in str(n)]"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('999999999') == '387420489'\n\n\"\"\"\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"390\") == \"216\"\nassert solution(\"7\") == \"7\"\nassert solution(\"1000000000\") == \"387420489\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n390\n''') == '216'\nassert solution('''\n7\n''') == '7'\nassert solution('''\n1000000000\n''') == '387420489'\n'''\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '6'\nassert solution('4\\n') == '24'\nassert solution('5\\n') == '120'\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '1'\nassert solution('''390''') == '216'\nassert solution('''7''') == '7'\nassert solution('''999999999''') == '387420489'\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''390''') == '216'\nassert solution('''7''') == '7'\nassert solution('''999999999''') == '387420489'\nassert solution('''1000000000''') == '387420489'\n\"\"\"\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\n\n\n-----"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 5 1\\n\") == \"5\"\nassert solution(\"5\\n2 2 3 2 2\\n\") == \"5\"\nassert solution(\"5\\n2 2 3 2 2\\n\") == \"5\""
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 5 1') == '5'\nassert solution('2 2 3 2 2') == '5'\nassert solution('5') == '5'\nassert solution('1 1 1 5 1') == '5'\nassert solution('2 2 3 2 2') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 1 5 1') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'\nassert solution('5\\n1 1 1 5 1\\n') == '5'\nassert solution('5\\n2 2 3 2 2') == '5'\n\n\n\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n\n\"\"\"\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 1 5 1\\n') == '5'\nassert solution('5\\n2 2 3 2 2\\n') == '5'\nassert solution('5\\n1 1 1 5 1\\n') == '5'\nassert solution('5\\n2 2 3 2 2\\n') == '5'\nassert solution('5\\n1 1 1 5 1\\n') == '5'\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 1 1 5 1''') == '5'\nassert solution('''5\n2 2 3 2 2''') == '5'\nassert solution('''6\n1 1 1 1 1 1''') == '5'\nassert solution('''5\n1 1 1 5 1''') == '5'\nassert solution('''5\n2 2 3 2 2''') == '5'\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 1 1 5 1''') == '5'\nassert solution('''5\n2 2 3 2 2''') == '5'\nassert solution('''7\n1 2 3 4 5 6 7''') == '7'\n'''"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n5 4 2') == '3'\nassert solution('3\\n2 4 2') == '3'\nassert solution('2\\n2 3 4') == '3'\nassert solution('2\\n2 3') == '1'\nassert solution('1\\n2 2') == '1'\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 5 1\") == \"5\"\nassert solution(\"5\\n2 2 3 2 2\") == \"5\"\nassert solution(\"5\\n2 2 2 2 2\") == \"5\"\nassert solution(\"5\\n1 1 1 1 1\") == \"5\"\nassert solution(\"5\\n2 2 2 2 2\") == \"5\"\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aabcaa\") == \"1\"\nassert solution(\"aabb\") == \"2\"\nassert solution(\"baaaab\") == \"0\"\nassert solution(\"aaaaab\") == \"0\"\n\n\n\"\"\"\n\nfrom collections import Counter\nfrom math import ceil, floor\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('z') == '1'\nassert solution('zwvuq') == '0'\nassert solution('abcdefghijklmnop') == '0'\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('aab') == '2'\nassert solution('aaa') == '2'\nassert solution('a') == '1'\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('baa') == '1'\nassert solution('aabcaa') == '1'\nassert solution('aabbbbaab') == '4'\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aabb') == 2\nassert solution('aabcaa') == 1\nassert solution('aabca') == 2\nassert solution('ab') == 0\nassert solution('aa') == 1\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('aabb') == 2\nassert solution('aabcaa') == 1\nassert solution('aabcaaa') == 0\nassert solution('aabcaaaaaaabcaaab') == 4\nassert solution('aabcaaaaaaabcaaaabbbaaaabcaa') == 4\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('aabccbbbbaa') == '0'\nassert solution('aa') == '1'\nassert solution('abc') == '1'\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('baaab') == '2'\nassert solution('baabca') == '1'\nassert solution('aabcba') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 1 1\n\n''') == '4'\nassert solution('''5\n1 3 2 3 4\n\n''') == '2'\nassert solution('''6\n1 3 3 1 3 2\n\n''') == '1'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1 1 1\\n') == '4'\nassert solution('3\\n1 3 2 3\\n') == '2'\nassert solution('4\\n1 3 2 3 4\\n') == '1'\nassert solution('5\\n1 3 2 3 4 1\\n') == '1'\nassert solution('6\\n1 3 3 1 3 2\\n') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '4'\n\nassert solution('''\n5\n1 3 2 3 4\n''') == '2'\n\nassert solution('''\n6\n1 3 3 1 3 2\n''') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '4'\n\nassert solution('''5\n1 3 2 3 4\n''') == '2'\n\nassert solution('''6\n1 3 3 1 3 2\n''') == '1'\n\nassert solution('''6\n1 2 3 1 3 2\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1\n''') == '4'"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '4'\nassert solution('''5''') == '2'\nassert solution('''6''') == '1'\n'''\n\nassert solution('''1 3 3 1 3 2''') == '2'\nassert solution('''1 3 2 3 4''') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\nassert solution(\"1\\n2\") == \"\"\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1 1 1') == '4'\nassert solution('5\\n1 3 2 3 4') == '2'\nassert solution('6\\n1 3 3 1 3 2') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 1 1\\n') == '4'\nassert solution('5\\n1 3 2 3 4\\n') == '2'\nassert solution('6\\n1 3 3 1 3 2\\n') == '1'\nassert solution('7\\n1 3 3 1 3 2 3\\n') == '0'\nassert solution('8\\n1 3 3 1 3 2 3 3\\n') == '0'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '4'\nassert solution('''5''') == '2'\nassert solution('''6''') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('12') == '5'\nassert solution('123') == '9'\nassert solution('1234') == '13'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('7') == '12'\nassert solution('10') == '17'\nassert solution('15') == '22'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('1') == '0'\nassert solution('1000') == '100'\nassert solution('10000') == '1000'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '5'\nassert solution('7') == '15'\nassert solution('9') == '25'\nassert solution('16') == '49'\nassert solution('24') == '97'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'\nassert solution('10') == '0'\nassert solution('10000000000') == '10000000000'\nassert solution('100009999998') == '0'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '2'\nassert solution('''4''') == '5'\nassert solution('''16''') == '11'\nassert solution('''27''') == '15'\nassert solution('''35''') == '17'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '2'\nassert solution('''4''') == '5'\n'''\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('3') == 0\nassert solution('3') == 0\nassert solution('3') == 0\nassert solution('5') == 1\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2230\") == \"2230\"\nassert solution(\"-10\") == \"0\"\nassert solution(\"-100003\") == \"-100003\"\nassert solution(\"-100000000\") == \"-100000000\"\nassert solution(\"-10000099\") == \"-10000099\"\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == input()\n'''\n'''\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2230') == '2230'\nassert solution('-10') == '0'\nassert solution('-100003') == '-10000'\nassert solution('-9-4-1') == '0'\nassert solution('-6-3-4-1') == '0'\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-10') == '0'\nassert solution('2230') == '2230'\nassert solution('-100003') == '-100003'\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2230\") == \"2230\"\nassert solution(\"-10\") == \"0\"\nassert solution(\"-100003\") == \"-100003\"\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2230\") == \"2230\"\nassert solution(\"-10\") == \"0\"\nassert solution(\"-100003\") == \"-10000\"\nassert solution(\"-1234567890\") == \"-12345678\"\nassert solution(\"-1356376563\") == \"-135658\"\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"v >\") == \"cw\"\nassert solution(\"< >\") == \"undefined\"\nassert solution(\"^ >\") == \"ccw\"\nassert solution(\"< ^\") == \"cw\"\nassert solution(\"< v\") == \"cw\"\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('< v') == 'cw'\nassert solution('< >') == 'undefined'\nassert solution('^ > 1') == 'cw'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\n\n\n\n\"\"\""
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ccw\"\nassert solution(input()) == \"cw\"\nassert solution(input()) == \"undefined\"\nassert solution(input()) == \"undefined\"\nassert solution(input()) == \"undefined\"\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"^ >\") == \"cw\"\nassert solution(\"< ^\") == \"ccw\"\nassert solution(\"^ v\") == \"undefined\"\nassert solution(\"< ^\") == \"undefined\"\nassert solution(\"^ v\") == \"undefined\"\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\nassert solution('< ^') == 'undefined'\nassert solution('< v') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\nassert solution('< v') == 'undefined'\nassert solution('< >') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('^ >') == 'cw'\nassert solution('< ^') == 'ccw'\nassert solution('^ v') == 'undefined'\nassert solution('< ^') == 'undefined'\nassert solution('< ^') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('< ^') == 'cw'\nassert solution('^ >') == 'ccw'\nassert solution('^ >< >') == 'undefined'\nassert solution('v > ^ < ^') == 'undefined'\nassert solution('v > ^ > ^') == 'undefined'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"^ >\") == \"cw\"\nassert solution(\"< ^\") == \"ccw\"\nassert solution(\"<v>\") == \"undefined\"\nassert solution(\"v< ^\") == \"undefined\"\nassert solution(\"< ^ >\") == \"undefined\"\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n.L.R...LR..L..\") == 4\nassert solution(\"5\\nR....\") == 0\nassert solution(\"1\\n.\") == 1\nassert solution(\"1\\nL\") == 0\nassert solution(\"1\\nR\") == 0\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == 0\nassert solution(\"..L.R...LR..L..\") == 4\nassert solution(\"R....\") == 0\nassert solution(\"R.....\") == 0\nassert solution(\"L....\") == 0\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 3\nassert solution('2.L') == 2\nassert solution('2.L.L') == 1\nassert solution('3.L.L.L') == 3\nassert solution('2.RR.LL') == 3\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Hello, World!') == 'Hello, World!', 'Hello, World!'\nassert solution('Hello World') == 'World Hello', 'Hello World'\nassert solution('LL') == 'LL', 'LL'\nassert solution('R..') == '.', 'R..'\nassert solution('R....L') == '....', 'R....L'\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\".L.R...LR..L..\") == \"4\"\nassert solution(\"R....\") == \"0\"\nassert solution(\"\") == \"1\"\nassert solution(\"L....\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\".L.R...LR..L..\") == 4\nassert solution(\"R....\") == 0\nassert solution(\"L....\") == 1\nassert solution(\"..L....\") == 1\n\n\n\n## Challenge ##\n\nO(n) time and O(1) space\n\n\"\"\"\n\nfrom collections import deque\nfrom typing import List"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('.L.R...LR..L..') == '4'\nassert solution('R....') == '0'\nassert solution('L....') == '1'\nassert solution('..') == '1'\nassert solution('..') == '1'\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('.L.R...LR..L..') == \"4\"\nassert solution('R....') == \"0\"\nassert solution('L....') == \"1\"\nassert solution('..') == \"1\"\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\".L.R...LR..L..\") == \"4\"\nassert solution(\"R....\") == \"0\"\nassert solution(\"R.....\") == \"0\"\nassert solution(\"R.....\") == \"0\"\nassert solution(\"L.....\") == \"0\"\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n...') == '4'\nassert solution('5\\nR....') == '0'\nassert solution('1\\n.') == '1'\nassert solution('1\\n.\\n') == '1'\nassert solution('1\\n.\\n.\\n') == '1'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 1 4 4') == '3 1 2 4'\nassert solution('3 3\\n3 1 2') == '-1'\nassert solution('5 5\\n1 2 3 4 5') == '1 2 3 4'\nassert solution('4 3\\n2 1 3') == '-1'\nassert solution('5 5\\n1 2 3 4 5') == '1 2 3 4'\n\n\n\n-----\n\n## Solution\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"4 1 2\"\nassert solution(\"4 5\") == \"3 1 2 4\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"2 3 1 4 4\") == \"3 1 2 4\"\nassert solution(\"3 1 2\") == \"-1\"\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 1 2') == '3 1 2'\nassert solution('3 3\\n3 1 2') == '-1'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 1 4 4') == '3 1 2 4'\nassert solution('3 3\\n3 1 2') == '-1'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5\\n2 3 1 4 4') == '3 1 2 4'\nassert solution('3 3\\n3 1 2') == '-1'\nassert solution('1 1\\n1') == '1'\nassert solution('3 3\\n3 1 2') == '-1'\nassert solution('4 4\\n2 3 1 4 4') == '3 1 2 4'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '4\\n'\nassert solution('2\\n1\\n') == '-1\\n'\nassert solution('1\\n2\\n') == '1\\n'\nassert solution('2\\n2\\n') == '2\\n'\nassert solution('2\\n3\\n') == '2\\n'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1\\n1') == '1'\nassert solution('1 2\\n1') == '1'\nassert solution('1 2 3\\n1') == '1'\nassert solution('1 2 3 4\\n1') == '1'\nassert solution('1 2 3 4 5\\n1') == '1'\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3 1 2 4'\nassert solution('3 3') == '-1'"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n4\\n3') == '4'\nassert solution('2\\n2\\n4') == '4'\nassert solution('1\\n2\\n4\\n3') == '4'\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1990 1''') == '9190'\nassert solution('''300 0''') == '300'\nassert solution('''1034 2''') == '3104'\nassert solution('''9090000078001234 6''') == '9907000008001234'\nassert solution('''99092909290929099 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 90909090909090909 909090909090909"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n\n\"\"\"\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1990 1') == '9190'\nassert solution('300 0') == '300'\nassert solution('1034 2') == '3104'\nassert solution('9090000078001234 6') == '9907000008001234'\n\n\"\"\"\n\nimport sys\nsys.path.append('/home/drilladugr/github/practical-programming-labs/basic-binary-search-tree/')\nfrom tree import Tree"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(''.join(stdin.splitlines())) == ''.join(stdin.splitlines())\n'''\n\na, k = map(int, stdin.split())\na = str(a)\n\nc = 0\nfor i in range(len(a) - 1):\n    if a[i] > a[i + 1]:\n        a = a[:i] + a[i + 1] + a[i] + a[i + 2:]\n        c += 1\n        if c >= k:\n            break\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '9190000078001234'\nassert solution(input()) == '9907000008001234'\nassert solution(input()) == '3104'\nassert solution(input()) == '9090000078001234'\nassert solution(input()) == '9090000078001234'\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1990 1''') == '9190'\nassert solution('''300 0''') == '300'\nassert solution('''1034 2''') == '3104'\nassert solution('''9090000078001234 6''') == '9907000008001234'\n\nprint('Test cases passed')\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 0\") == \"1\"\nassert solution(\"2 3\") == \"9\"\nassert solution(\"3 4\") == \"77\"\nassert solution(\"10 7\") == \"77\"\nassert solution(\"15 6\") == \"195\"\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''836 624 412 200''') == '-12'\nassert solution('''1 334 667 1000''') == '1333'\n'''"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''836 624 412 200''') == -12\nassert solution('''1 334 667 1000''') == 1333\nassert solution('''836 624 412 200''') == 42\nassert solution('''1 334 667 1000''') == 1333\nassert solution('''1 2 3 4 5 6 7 8 9 10''') == 42\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"836 624 412 200\") == -12\nassert solution(\"1 334 667 1000\") == 1333\nassert solution(\"836 624 412 200\") == -12\nassert solution(\"1 334 667 1000\") == 1333\nassert solution(\"836 624 412 200\") == -12\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expect\n\n'''"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('1 2 4 5') == 42\n\"\"\"\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('1 5 8 22') == '5'\nassert solution('-1 -2 -3 -4 -5') == '42'\nassert solution('-1 -2 -3 -4 -5') == '42'\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('836 624 412 100') == '42'\nassert solution('836 624 412 1000') == '42'\nassert solution('836 624 412 10') == '42'\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\n\n\n\"\"\"\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''836 624 412 200''') == '-12'\nassert solution('''1 334 667 1000''') == '1333'\nassert solution('''1 2 2 3''') == '42'\nassert solution('''1 2 3 4''') == '42'\nassert solution('''1 2 3 4 5''') == '42'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 1') == '1'\nassert solution('3\\n1 2 3') == '4'\nassert solution('5\\n1 2 3 2 3') == '4'\nassert solution('5\\n1 1 3 2 3') == '4'\nassert solution('7\\n1 1 3 1 1 1 1') == '4'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 2 3\n''') == '4'\nassert solution('''3\n1 2 1\n''') == '1'\nassert solution('''7\n1 1 3 1 1 1 1\n''') == '4'\nassert solution('''9\n1 1 3 1 1 1 1 1 1 1\n''') == '5'\nassert solution('''1\n1\n''') == '1'"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '4'\nassert solution('''3''') == '1'\nassert solution('''7''') == '4'\nassert solution('''1 1 3 1 1 1''') == '1'\nassert solution('''7''') == '4'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 2 3''') == '4'\nassert solution('''3\n1 2 1''') == '1'\nassert solution('''7\n1 1 3 1 1 1 1''') == '4'\nassert solution('''10\n4 6 3 2 1 4 6 7 2 1''') == '4'\n\n\n\n'''\n\nN = int(input())\nC = list(map(int, input().split()))\n\nfor i in range(N-1):\n    for j in range(i+1,N):\n        if C[i] == C[j]:\n            print(j-i)\n            exit()\nprint(N-1)"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 2 3\") == \"4\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"7\\n1 1 3 1 1 1\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '''4'''\nassert solution('''3''') == '''1'''\nassert solution('''7''') == '''4'''\nassert solution('''1''') == '''1'''\nassert solution('''1 2 1''') == '''1'''\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n1\\n2\\n3') == '2'\nassert solution('4\\n1\\n2\\n3\\n4') == '2'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('5\\n1 2 3 2 3\\n') == '4'\nassert solution('7\\n1 1 3 1 1 1\\n') == '4'\nassert solution('1\\n1\\n') == '1'\nassert solution('3\\n1 2 1\\n') == '1'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"4\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2 1\") == \"1\"\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 9\\n') == '2 2 L\\n'\nassert solution('4 3 24\\n') == '4 3 R\\n'\nassert solution('2 4 4\\n') == '1 2 R\\n'\nassert solution('5 10 10\\n') == '1 5 L\\n'\nassert solution('5 10 24\\n') == '5 5 R\\n'\n\n\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 4 4\") == \"1 2 R\"\nassert solution(\"2 4 4\") == \"1 2 R\"\nassert solution(\"1 2 3\") == \"1 2 L\"\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3 9\") == \"2 2 L\"\nassert solution(\"4 3 24\") == \"4 3 R\"\nassert solution(\"2 4 4\") == \"1 2 R\"\nassert solution(\"1 1 1\") == \"1 1 L\"\nassert solution(\"2 2 2\") == \"1 2 R\"\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'\nassert solution('4 4 2') == '1 2 R'"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"4 3 9\") == stdin\nassert solution(\"4 3 24\") == stdin\nassert solution(\"2 4 4\") == stdin\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3 9') == '2 2 L'\nassert solution('4 3 24') == '4 3 R'\nassert solution('2 4 4') == '1 2 R'\nassert solution('2 4 4') == '1 2 R'\nassert solution('2 4 4') == '1 2 R'\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 9\\n') == '2 2 L'\nassert solution('4 3 24\\n') == '4 3 R'\nassert solution('2 4 4\\n') == '1 2 R'"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"B\"\nassert solution(\"RB\") == \"G\"\nassert solution(\"GRG\") == \"BR\"\nassert solution(\"BBBBB\") == \"B\"\nassert solution
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('BBBB') == 'B'\nassert solution('RB') == 'G'\nassert solution('GGRG') == 'BR'\nassert solution('GGGB') == 'BR'\nassert solution('RRGB') == 'BR'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"GBG\") == \"G\"\nassert solution(\"RGB\") == \"B\"\nassert solution(\"BBR\") == \"R\"\nassert solution(\"BBBB\") == \"B\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RB') == 'G'\nassert solution('GRG') == 'BR'\nassert solution('BBBBB') == 'B'\nassert solution('RRRRR') == 'RRRRR'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('RB') == 'G'\nassert solution('GRG') == 'BR'\nassert solution('BBBBB') == 'B'\nassert solution('RRRBB') == 'G'\nassert solution('RRRRR') == 'G'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RBG') == 'G'\nassert solution('GRG') == 'BR'\nassert solution('BBBB') == 'B'\nassert solution('BBRB') == 'R'\nassert solution('GGRR') == 'BR'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RB') == 'G'\nassert solution('GRG') == 'BR'\nassert solution('BBBBB') == 'B'\nassert solution('RBGBRBGBRB') == 'GB'\nassert solution('BRGRGR') == 'GB'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2\nRB''') == 'G'\nassert solution(\n'''3\nGRG''') == 'BR'\nassert solution(\n'''5\nBBBBB''') == 'B'"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('RB') == 'G'\nassert solution('GB') == 'BR'\nassert solution('GRG') == 'B'\nassert solution('BBBB') == 'B'\nassert solution('RBR') == 'RB'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\nRB') == 'G'\nassert solution('3\\nGRG') == 'BR'\nassert solution('5\\nBBBBB') == 'B'\nassert solution('3\\nRBGB') == 'BG'\nassert solution('10\\nBBBRRRBRRB') == 'BG'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4''') == 'YES'\nassert solution('''4\n1 2\n2 3\n3 4\n3 1''') == 'NO'\nassert solution('''4\n1 2\n2 3\n3 4\n1 3''') == 'NO'\nassert solution('''4\n1 2\n1 3\n2 3\n2 4''') == 'YES'\nassert solution('''8\n1 2\n1 3\n2 3\n2 4\n1 5\n2 6\n3 7\n4 7''') == 'YES'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == 'YES'\nassert solution('7') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == 'YES'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n''') == 'NO'\nassert solution('''1\n1 2\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == 'YES'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n3 4\n1 4\n''') == 'YES'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\\n1 2\") == \"YES\\n0 0\"\nassert solution(\"3\\n1 2\\n2 3\") == \"YES\\n0 0\\n1 0\\n2 0\"\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == 'YES'\nassert solution('''6\n1 2\n2 3\n2 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == 'YES'\nassert solution('''7\n1 2\n2 3\n3 4\n2 5\n2 6\n2 7\n''') == 'NO'\nassert solution('''9\n1 2\n1 3\n1 4\n2 4\n1 5\n2 5\n3 5\n2 6\n2 7\n2 8\n2 9\n''') == 'YES'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n\nIn the second sample, there is no solution.\n\nIn the third sample, there is only one possible solution.\n\n\n\"\"\"\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2\n2 3\n2 4\n3 4\n2 5''') == 'YES'\n\nassert solution('''1\n1 2\n''') == 'NO'\n\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n4 5\n4 6''') == 'NO'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7''') == 'YES'\nassert solution('''4\n1 2\n2 3\n2 4\n2 5\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == 'YES'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == 'NO'\nassert solution('''10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 6\n3 6\n3 8\n3 9\n4 9\n6 7\n7 8\n7 9\n7 10\n8 9\n9 10\n''') == 'NO'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"2 5\") == \"NO\"\nassert solution(\"3 6\") == \"NO\"\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(read_input('')) == ''\n\nIn the second sample one of the possible positions of tree is: [Image]\n\n\n\"\"\"\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('5 6') == '5'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3\\n') == '7'\nassert solution('5 14\\n') == '105'\nassert solution('88005553535 99999999999\\n') == '761141116'\nassert solution('4 7\\n') == '9'\nassert solution('2 7\\n') == '3'\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('88000') == '0'\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('66616974435 7422761317 2877172536') == '82333932'\nassert solution('9873319656 4436740248 115152653') == '00353434'\n\n\"\"\""
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 3''') == '7'\nassert solution('''5 14''') == '105'\nassert solution('''88005553535 99999999999''') == '761141116'"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('0 0') == '0'\nassert solution('1000000000 1000000000') == '1'\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\nsys.setrecursionlimit(10000)\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"5 14\") == \"105\"\nassert solution(\"88005553535 99999999999\") == \"761141116\"\nassert solution(\"152211100010 282646262310\") == \"127060269734\"\nassert solution(\"156923186368 29308053340\") == \"144429697867\"\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1 1 1 0') == \"Yes\"\nassert solution('1 1 0 0 1000 1000') == \"No\"\nassert solution('0 1 1 1 1 0') == \"Yes\"\nassert solution('1 1 0 0 1000 1000') == \"No\"\nassert solution('1 1 1 1 1 1') == \"Yes\"\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1 1 1 1 0') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\nassert solution('0 0 1 1 1 0') == 'Yes'\nassert solution('1 0 1 0 1000 1000') == 'No'\nassert solution('0 0 0 1 1 0') == 'Yes'\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nfrom math import acos, pi\nfrom sys import stdin"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 1 1 1 0') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\nassert solution('1 1 0 0 100 100') == 'No'\nassert solution('1 1 0 0 100 1000') == 'No'\nassert solution('1 1 0 0 1000 1000') == 'No'\n\"\"\"\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 1 1 1 0') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\nassert solution('1 1 0 0 1000 1000') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 1 1 1 0') == 'Yes'\nassert solution('1 1 0 0 1000 1000') == 'No'\nassert solution('1 1 0 0 1 1') == 'Yes'\nassert solution('1 1 0 0 1 1 1') == 'No'\nassert solution('1 1 0 0 1 1 1') == 'Yes'\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\na = [int(x) for x in stdin.split()]\n\nax, ay, bx, by, cx, cy = a"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\"\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1 1 1 0\") == \"Yes\"\nassert solution(\"1 1 0 0 1000 1000\") == \"No\"\nassert solution(\"1 1 0 0 -1 -1\") == \"No\"\n\"\"\""
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '4'\nassert solution('''3 1''') == '1'\nassert solution('''10 3''') == '6'\nassert solution('''1 2 6 2 3 6 9 18 3 9''') == '6'\n\n'''"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''3 1\n1 1 1\n''') == '1'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\nassert solution('''2 2\n1 1 2\n''') == '0'\nassert solution('''3 4\n1 1 1 2 2 3\n''') == '2'\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 4\\n') == '4'\nassert solution('3 1\\n1 1 1\\n') == '1'\nassert solution('10 3\\n1 2 6 2 3 6 9 18 3 9\\n') == '6'\n\n\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()[1:]]"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''3 1\n1 1 1\n''') == '1'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n2\\n4') == '4'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 1 2 2 4') == '4'\nassert solution('1 2\\n1 1 1') == '1'\nassert solution('3 1\\n1 1 1') == '1'\nassert solution('3 1\\n1 1 1') == '1'\nassert solution('1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 2 4\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"10 3\") == \"6\"\nassert solution(\"1 2 6 2 3 6 9 18 3 9\") == \"6\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 2 2 4\\n') == '4'\nassert solution('3 1\\n1 1 1\\n') == '1'\nassert solution('10 3\\n1 2 6 2 3 6 9 18 3 9\\n') == '6'\nassert solution('1\\n1 1 1\\n') == '1'\nassert solution('\\n') == '\\n'\n\n\"\"\""
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 0 3') == '26'\nassert solution('2 1 1') == '27'\nassert solution('10 15\\n6 1\\n6 1\\n5 2') == '26'\nassert solution('10 8\\n7 11\\n5 2') == '26'\nassert solution('10 8\\n7 11\\n5 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3 2\\n3"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 1 1''') == '26'\nassert solution('''3 0 3''') == '26'\nassert solution('''6 1\n10 15\n6 1''') == '26'\nassert solution('''3 0 3''') == '26'\nassert solution('''6 1\n10 8\n7 11\n5 2''') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == '26'\nassert solution('3 0 3') == '26'\nassert solution('10 8 1') == '26'\nassert solution('10 8 0') == '26'\nassert solution('10 8 1') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1\\n10 15\\n6 1') == '27'\nassert solution('3 0 3\\n10 8\\n7 11\\n5 2') == '26'\nassert solution('3 0 0\\n10 8\\n7 11\\n5 2') == '26'\n\n\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"26\"\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()[1:-1]\n\n\"\"\"\n\nn, a, b = map(int, input().split())\n\ns1 = 0\ns2 = 0\nd = 0\nfor i in range(n):\n    hp1, dmg1 = map(int, input().split())\n    hp2, dmg2 = map(int, input().split())\n    s1 += hp1 * 2\n    s2 += hp2\n    d += dmg1 + dmg2\nprint(d+max(s1, s2)*a)"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1 1\n10 15\n6 1''') == '27'\nassert solution('''3 0 3\n10 8\n7 11\n5 2''') == '26'\nassert solution('''3 1 0\n10 8\n7 11\n5 2''') == '26'\nassert solution('''3 0 0\n10 8\n7 11\n5 2''') == '26'\nassert solution('''3 1 1\n10 8\n7 11\n5 2''') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 1''') == '26'\nassert solution('''3 0 3''') == '26'\nassert solution('''10 8\n7 11\n5 2''') == '26'\nassert solution('''3 1 1''') == '25'\nassert solution('''2 1 1''') == '26'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '27'\nassert solution('3 0 3') == '26'\nassert solution('6 1') == '26'\nassert solution('9 0 3') == '24'\nassert solution('6 0 1') == '25'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1\n10 15\n6 1\n''') == '26'\n\nassert solution('''3 0 3\n10 8\n7 11\n5 2\n''') == '26'\n\nassert solution('''3 0 4\n10 8\n7 11\n5 2\n''') == '27'\n\nassert solution('''3 0 4\n10 8\n7 11\n5 2\n5 2\n''') == '26'\n\nassert solution('''3 0 4\n10 8\n7 11\n5 2\n4 1\n''') == '27'"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 2\n.**\nX..\n''') == 'RL'\nassert solution('''\n5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLDDLLLRRRUURU'\nassert solution('''\n3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n2 3 2\n.**\nX..\n''') == 'RL'\nassert solution('''\n5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLDDLLLRRRUURU'\nassert solution('''\n3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'\nassert solution('''\n5 5 3\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLRURUU'\nassert solution('''\n5 4 2\n..**\n*X*\n**.**\n.**.\n**.**\n''') == 'DU'\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''2 3 2'''\n) == 'DLRU'\n\nassert solution(\n'''5 6 14'''\n) == 'DLDDLLLRRRUURU'\n\nassert solution(\n'''3 3 4'''\n) == 'IMPOSSIBLE'\n\nassert solution(\n'''7 7 14'''\n) == 'DDDRRRUUDRRDDUULDRUDUDUUDRUDLRRRURDRLUDRRULRDDRRDRDRUUUUULDUDRDLLDUUUUUUDRLRRRRUDRURDDRDRDULR'\n'''\n'''\n'''\n\nassert solution(\n'''14 14 13'''\n) == 'DDRRRUUDRRDDUULDRUDUDUUDRUDLRRRURDRLUDRRULRDDRRDRDRUUUUULDUDRDLLDUUUUUUDRLRRRRUDRURDDRDRDULR'\n'''\n'''\n'''"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 2 2'''\n) == 'RL'\n\nassert solution(\n'''5 6 14'''\n) == 'DLDDLLLRRRUURU'\n\nassert solution(\n'''3 3 4'''\n) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == expect\n\"\"\"\n\nn, m, k = [int(x) for x in input().split()]\n\nmaze = [input() for _ in range(n)]"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3 2\n..**\nX..''') == '''RL'''\nassert solution('''5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == '''DLDDLLLRRRUURU'''\nassert solution('''3 3 4\n***\n*X*\n***\n''') == '''IMPOSSIBLE'''\n'''\nimport sys\nfrom collections import deque\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 2\n*\n*\n''') == \"UL\"\n\nassert solution('''\n3 3 3\n*\n*\n*\n''') == \"IMPOSSIBLE\"\n\nassert solution('''\n5 6 14\n*.*.\n*.*.\n*.*.\n.*.*.\n.*.*.\n''') == \"DLDDLLLRRRUURU\"\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '5 6 14\\n..***.\\n*...X.\\n..*...\\n..*.**\\n....*.\\n') == 'DLDDLLLRRRUURU'\nassert solution(\n    '2 3 2\\n..**\\n*X..\\n***\\n') == 'RL'\nassert solution(\n    '5 6 14\\n..***.\\n*...X.\\n..*...\\n..*.**\\n....*.\\n') == 'DLDDLLLRRRUURU'\nassert solution(\n    '3 3 4\\n***\\n*X*\\n***\\n') == 'IMPOSSIBLE'\nassert solution(\n    '5 6 14\\n..***.\\n*...X.\\n..*...\\n..*.**\\n....*.\\n') == 'DLDDLLLRRRUURU'\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 2\n.**\nX..\n''') == 'RL'\nassert solution('''\n5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLDDLLLRRRUURU'\nassert solution('''\n3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'\nassert solution('''\n5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLDDLLLRRRUURU'\nassert solution('''\n3 3 4\n***\n*..X*\n***\n''') == 'IMPOSSIBLE'\n\n\n-------"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 1''') == 'RL'\nassert solution('''2 3 2''') == 'DLRUURD'\nassert solution('''5 6 14''') == 'DLDDLLLRRRUURU'\nassert solution('''3 3 4''') == 'IMPOSSIBLE'\n\n\n>>> from random import randint\n>>> for i in range(1000):\n...     n,m,k = randint(1,1000), randint(1,1000), randint(1,100000)\n...     l = []\n...     for _ in range(n):\n...         l.append(''.join([str(randint(0,1)) for _ in range(m)]))\n...     l = ''.join(sorted(l))\n...     assert solution(l) == ''.join(sorted([l[i:i+k] for i in range(n-k+1)]))\n>>> \n\n\"\"\"\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '2'\nassert solution('''2 1''') == '2'\nassert solution('''3 1''') == '3'\nassert solution('''4 1''') == '4'\nassert solution('''5 1''') == '5'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\nassert solution('1000000000000 1000000000') == '1000000000000'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1''') == '2'\nassert solution('''10 7''') == '6'\nassert solution('''1000000000000 1''') == '1000000000000'\nassert solution('''2 1''') == '2'\nassert solution('''10 7''') == '6'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\nassert solution('1000000000000 1000000') == '1'"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == \"2\"\nassert solution('10 7') == \"6\"\nassert solution('1000000000000 1') == \"1000000000000\"\nassert solution('1000000000000 9999999') == \"1000000000000\"\nassert solution('98889128486581212494898419909498889898491089108910891089109') == \"0\"\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\nassert solution('1000000000000') == '1000000000000'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('2 2') == '6'\nassert solution('10 7') == '6'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1''') == \"2\"\nassert solution('''10 7''') == \"6\"\nassert solution('''1000000000000 1''') == \"1000000000000\"\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4'"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1 2 3'\nassert solution('2\\n2\\n1') == '1 2'\nassert solution('2\\n3\\n2') == '2 1 3'\nassert solution('3\\n2\\n2') == '2 1'\nassert solution('3\\n3\\n2') == '1 2 3'\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '1 2 5 4 3'\nassert solution('''5\n1 2 3 4 3''') == '1 2 5 4 3'\nassert solution('''5\n1 2 3 4 4''') == '1 2 5 4 3'\nassert solution('''4\n1 1 3 4 4''') == '1 2 3 4'\nassert solution('''4\n1 1 3 3''') == '1 2 3'\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 3\\n1 2 5 4 5\\n') == '1 2 5 4 3'\nassert solution('5\\n4 4 2 3 1\\n5 4 5 3 1\\n') == '5 4 2 3 1'\n\n\"\"\"\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '''1 2 5 4 3'''\nassert solution('''4''') == '''1 2 3 4'''\nassert solution('''2''') == '''2 1'''\nassert solution('''8''') == '''4 3 2 1 5 6 7 8'''\nassert solution('''5''') == '''4 3 2 1 5 6 7 8'''\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 3\\n1 2 5 4 5') == '1 2 5 4 3'\nassert solution('5\\n4 4 2 3 1\\n5 4 5 3 1') == '5 4 2 3 1'\nassert solution('5\\n1 1 3 4\\n1 4 3 4') == '5 4 2 3 1'\nassert solution('5\\n4 4 2 3 1\\n5 4 5 3 1') == '5 4 2 3 1'\nassert solution('4\\n1 1 3 4\\n1 4 3 4') == '1 2 3 4'\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1 2 5 4 3\"\nassert solution(\"5\") == \"1 2 5 4 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"1 1 3 4\") == \"1 2 3 4\"\nassert solution(\"1 4 3 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5'''\n'''\n1 2 3 4 3'''\n'''\n1 2 5 4 5'''\n) == '''1 2 5 4 3'''\n\nassert solution(\n'''5'''\n'''\n4 4 2 3 1'''\n'''\n5 4 5 3 1'''\n) == '''5 4 2 3 1'''\n\nassert solution(\n'''5'''\n'''\n1 1 3 4 4'''\n'''\n5 4 5 3 1'''\n) == '''5 4 2 3 1'''\n\nassert solution(\n'''5'''\n'''\n1 1 3 4 4'''\n'''\n5 4 5 3 1'''\n) == '''5 4 2 3 1'''\n\nassert solution(\n'''5'''\n'''\n1 1 3 4 4'''\n'''\n1 4 3 4 4'''\n) == '''5 4 2 3 1'''"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 15''') == '''1 2 3'''\nassert solution('''4 67''') == '''2 1 3'''\nassert solution('''4 68''') == '''2 1 3'''\nassert solution('''5 17''') == '''1 2 4'''\nassert solution('''5 18''') == '''1 2 4'''\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '4 1 2'\n\n\n-----Alternate Solutions (Ver 1)-----\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 15\n''') == '1 2 3'\n\nassert solution('''4 67\n''') == '2 1 3'\n\nassert solution('''4 68\n''') == '2 1 3'\n\nassert solution('''5 8\n''') == '1 2 3'\n\nassert solution('''6 36\n''') == '4 1 2'"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == result(stdin)\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"1 2 3\"\nassert solution(\"4 67\") == \"2 1 3\"\nassert solution(\"4 68\") == \"2 1 3\"\n\n\n\n\"\"\"\n\nfrom math import radians, acos\nfrom itertools import combinations\nfrom sys import maxsize"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 15\n''') == '1 2 3'\nassert solution('''4 67\n''') == '2 1 3'\nassert solution('''4 68\n''') == '4 1 2'\nassert solution('''4 69\n''') == '4 1 2'\nassert solution('''4 70\n''') == '1 2 4'\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 15''') == '''1 2 3'''\nassert solution('''4 67''') == '''2 1 3'''\nassert solution('''4 68''') == '''4 1 2'''\n\n'''\n\n3 15\n\n3 15\n\n3 15\n\n'''\n\n'''\n\n4 68\n\n4 68\n\n4 68\n\n'''\n\n'''\n\n3 15\n\n1 2 3\n\n1 2 3\n\n'''\n\n'''\n\n4 67\n\n2 1 3\n\n2 1 3\n\n2 1 3\n\n'''\n\n'''\n\n4 67\n\n2 1 3\n\n4 1 2\n\n4 1 2\n\n'''\n\n'''\n\n3 19\n\n1 2 3\n\n1 2 3\n\n'''\n\n'''\n\n3 19\n\n1 2 3\n\n1 2 3\n\n'''\n\n'''\n\n5 20\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n'''\n\n'''\n\n5 20\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n1 2 3 4 5\n\n'''\n\n'''\n\n2 100\n\n1 1\n\n1 2\n\n1 3\n\n1 4\n\n1 5\n\n1 6\n\n1 7\n\n1 8\n\n1 9\n\n1 10\n\n1 11\n\n1 12\n\n1 13\n\n1 14\n\n1 15\n\n1 16\n\n1 17\n\n1 18\n\n1 19\n\n1 20\n\n1 21\n\n1 22\n\n1 23\n\n1 24\n\n1 25\n\n1 26\n\n1 27\n\n1 28\n\n1 29\n\n1 30\n\n1 31\n\n1 32\n\n1 33\n\n1 34\n\n1 35\n\n1 36\n\n1 37\n\n1 38\n\n1 39\n\n1 40\n\n1 41\n\n1 42\n\n1 43\n\n1 44\n\n1 45\n\n1 46\n\n1 47\n\n1 48\n\n1 49\n\n1 50\n\n1 51\n\n1 52\n\n1 53\n\n1 54\n\n1 55\n\n1 56\n\n1 57\n\n1 58\n\n1 59\n\n1 60\n\n1 61\n\n1 62\n\n1 63\n\n1 64\n\n1 65\n\n1 66\n\n1 67\n\n1 68\n\n1 69\n\n1 70\n\n1 71\n\n1 72\n\n1 73\n\n1 74\n\n1 75\n\n1 76\n\n1 77\n\n1 78\n\n1 79\n\n1 80\n\n1 81\n\n1 82\n\n1 83\n\n1 84\n\n1 85\n\n1 86\n\n1 87\n\n1 88\n\n1 89\n\n1 90\n\n1 91\n\n1 92\n\n1 93\n\n1 94\n\n1 95\n\n1 96\n\n1 97\n\n1 98\n\n1 99\n\n1 100\n\n1 101\n\n1 102\n\n1 103\n\n1 104\n\n1 105\n\n1 106\n\n1 107\n\n1 108\n\n1 109\n\n1 110\n\n1 111\n\n1 112\n\n1 113\n\n1 114\n\n1 115\n\n1 116\n\n1 117\n\n1 118\n\n1 119\n\n1 120\n\n1 121\n\n1 122\n\n1 123\n\n1 124\n\n1 125\n\n1 126\n\n1 127\n\n1 128\n\n1 129\n\n1 130\n\n1 131\n\n1 132\n\n1 133\n\n1 134\n\n1 135\n\n1 136\n\n1 137\n\n1 138\n\n1 139\n\n1 140\n\n1 141\n\n1 142\n\n1 143\n\n1 144\n\n1 145\n\n1 146\n\n1 147\n\n1 148\n\n1 149\n\n1 150\n\n1 151\n\n1 152\n\n1 153\n\n1 154\n\n1 155\n\n1 156\n\n1 157\n\n1 158\n\n1 159\n\n1 160\n\n1 161\n\n1 162\n\n1 163\n\n1 164\n\n1 165\n\n1 166\n\n1 167\n\n1 168\n\n1 169\n\n1 170\n\n1 171\n\n1 172\n\n1 173\n\n1 174\n\n1 175\n\n1 176\n\n1 177\n\n1 178\n\n1 179\n\n1 180\n\n1 181\n\n1 182\n\n1 183\n\n1 184\n\n1 185\n\n1 186\n\n1 187\n\n1 188\n\n1 189\n\n1 190\n\n1 191\n\n1 192\n\n1 193\n\n1 194\n\n1 195\n\n1 196\n\n1 197\n\n1 198\n\n1 199\n\n1 200\n\n1 201\n\n1 202\n\n1 203\n\n1 204\n\n1 205\n\n1 206\n\n1 207\n\n1 208\n\n1 209\n\n1 210\n\n1 211\n\n1 212\n\n1 213\n\n1 214\n\n1 215\n\n1 216\n\n1 217\n\n1 218\n\n1 219\n\n1 220\n\n1 221\n\n1 222\n\n1 223\n\n1 224\n\n1 225\n\n1 226\n\n1 227\n\n1 228\n\n1 229\n\n1 230\n\n1 231\n\n1 232\n\n1 233\n\n1 234\n\n1 235\n\n1 236\n\n1 237\n\n1 238\n\n1 239\n\n1 240\n\n1 241\n\n1 242\n\n1 243\n\n1 244\n\n1 245\n\n1 246\n\n1 247\n\n1 248\n\n1 249\n\n1 250\n\n1 251\n\n1 252\n\n1 253\n\n1 254\n\n1 255\n\n1 256\n\n1 257\n\n1 258\n\n1 259\n\n1 260\n\n1 261\n\n1 262\n\n1 263\n\n1 264\n\n1 265\n\n1 266\n\n1 267\n\n1 268\n\n1 269\n\n1 270\n\n1 271\n\n1 272\n\n1 273\n\n1 274\n\n1 275\n\n1 276\n\n1 277\n\n1 278\n\n1 279\n\n1 280\n\n1 281\n\n1"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 15''') == '1 2 3'\nassert solution('''4 67''') == '2 1 3'\nassert solution('''4 68''') == '4 1 2'\nassert solution('''4 63''') == '3 1 2'\nassert solution('''4 64''') == '1 1 4'\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 15') == '1 2 3'\nassert solution('4 67') == '2 1 3'\nassert solution('4 68') == '2 1 3'\nassert solution('3 15') == '1 2 3'\nassert solution('1 1') == '2 3 4'\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 15''') == '''1 2 3'''\nassert solution('''4 67''') == '''2 1 3'''\nassert solution('''4 68''') == '''4 1 2'''\nassert solution('''5 9''') == '''3 2 4'''\nassert solution('''5 70''') == '''1 3 4'''\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10\\n20\\n30') == 'YES'\nassert solution('3\\n10\\n10\\n10') == 'NO'\nassert solution('3\\n120\\n120\\n120') == 'YES'\nassert solution('6\\n30\\n60\\n90\\n120\\n150') == 'YES'\nassert solution('10\\n30\\n60\\n90\\n120\\n150') == 'NO'\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n10\\n10\\n10') == 'YES'\nassert solution('3\\n120\\n120\\n120') == 'NO'\nassert solution('3\\n10\\n10\\n10') == 'YES'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('120') == 'YES'\nassert solution('120') == 'NO'\nassert solution('120') == 'YES'\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n10\\n20\\n30') == 'YES'\nassert solution('3\\n10\\n10\\n10') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'YES'\n\n'''\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n10\n20\n30''') == \"YES\"\nassert solution('''3\n120\n120\n120''') == \"NO\"\nassert solution('''3\n10\n10\n10''') == \"YES\"\nassert solution('''3\n0\n0\n0''') == \"YES\"\nassert solution('''2\n90\n270''') == \"YES\"\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n10\\n20\\n30\\n') == 'YES'\nassert solution('2\\n120\\n120\\n120\\n') == 'NO'\nassert solution('10\\n30\\n40\\n') == 'YES'\nassert solution('10\\n10\\n10\\n') == 'NO'\nassert solution('1\\n20\\n40\\n') == 'YES'\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n10\n20\n30\n'''\n) == 'YES'\n\nassert solution(\n'''\n3\n60\n120\n180\n'''\n) == 'NO'\n\nassert solution(\n'''\n3\n60\n60\n60\n'''\n) == 'YES'\n\nassert solution(\n'''\n1\n360\n'''\n) == 'YES'\n\nassert solution(\n'''\n1\n90\n'''\n) == 'YES'"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''3''') == 'NO'\nassert solution('''3''') == 'YES'\nassert solution('''12''') == 'YES'\nassert solution('''4''') == 'NO'\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n10\\n20\\n30') == 'YES'\nassert solution('3\\n10\\n10\\n10') == 'NO'\nassert solution('3\\n120\\n120\\n120') == 'YES'\nassert solution('3\\n120\\n120\\n120') == 'YES'\nassert solution('3\\n10\\n10\\n10') == 'NO'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('8 3 3 2') == '2'\nassert solution('8 3 3 4') == '3'\nassert solution('3 1 5 6') == '2'\nassert solution('3 1 5 7') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6 3\") == \"2\"\nassert solution(\"3 1 5 6\") == \"8\"\nassert solution(\"8 3 3 2\") == \"2\"\nassert solution(\"2 3 10 4\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2 6 3''') == '2'\nassert solution('''3 1 5 6''') == '8'\nassert solution('''8 3 3 2''') == '2'\nassert solution('''2 3 10 4''') == '3'\nassert solution('''2 3 10 1''') == '2'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1 5 6') == '2'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\nassert solution('8 2 6 4') == '2'\nassert solution('3 3 2 3') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 6 3''') == '2'\nassert solution('''3 1 5 6''') == '8'\nassert solution('''8 3 3 2''') == '2'\nassert solution('''2 3 10 4''') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\nassert solution('3 1 8 4') == '2'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 10 4') == '3'\nassert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\nassert solution('9 2 3 1') == '7'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0') == '0'\nassert solution('3 0') == '1'\nassert solution('10 0') == '10'\nassert solution('1000 0') == '0'\nassert solution('12345 0') == '0'\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == 5\nassert solution('1 3 5') == 2\nassert solution('0 0') == 0\nassert solution('1 5') == 5\nassert solution('3 5') == 3\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"3 5\"\n) == \"3\"\n\"\"\""
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '3'\nassert solution('6 3') == '1'\nassert solution('7 5') == '2'\nassert solution('9 9') == '3'\nassert solution('13 8') == '5'\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '3'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"9 6\") == \"1\"\nassert solution(\"9 11\") == \"1\"\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5''') == '3'\nassert solution('''6 3''') == '1'\n'''\n'''"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == input(\"\")\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'Yes'\nassert solution('''3\n1 -1\n-1 4\n-1 6\n''') == 'No'\nassert solution('''2\n1 2\n2 1\n''') == 'Yes'\nassert solution('''2\n2 1\n1 2\n''') == 'Yes'\nassert solution('''4\n-1 4\n2 2\n1 2\n-1 3\n3 4\n2 4\n1 3\n''') == 'Yes'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 -1\") == \"Yes\"\nassert solution(\"-1 4\") == \"Yes\"\nassert solution(\"-1 6\") == \"No\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"-1 1\") == \"No\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 1 1\") == \"Yes\"\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n-1\\n-1') == 'Yes'\nassert solution('2\\n1 1\\n-1 -1\\n1 1') == 'Yes'\nassert solution('2\\n1 1\\n-1 -1\\n1 1') == 'No'\nassert solution('2\\n1 1\\n-1 -1\\n1 1') == 'No'\nassert solution('3\\n1 -1\\n-1 4\\n-1 6') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 -1\\n-1 4\\n-1 6') == 'Yes'\nassert solution('2 -1\\n-1 4\\n-1 6') == 'No'\nassert solution('3 -1\\n-1 4\\n-1 6') == 'Yes'\nassert solution('3 -1\\n-1 4\\n-1 6\\n-1 6') == 'No'\nassert solution('2 -1\\n-1 4\\n-1 6') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == 'Yes'\nassert solution('3\\n1 1\\n-1 4\\n-1 6\\n') == 'No'\nassert solution('4\\n1 -1\\n-1 4\\n-1 6\\n-1 8\\n') == 'Yes'\nassert solution('4\\n1 1\\n-1 4\\n-1 6\\n-1 8\\n') == 'No'\nassert solution('4\\n1 1\\n-1 4\\n-1 8\\n-1 6\\n') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 -1\\n-1 4\\n-1 6\\n') == \"Yes\"\nassert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\nassert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\nassert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\nassert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 -1\\n-1 4\\n-1 6') == 'Yes'\nassert solution('1 -1\\n-1 4\\n-1 4') == 'No'\nassert solution('1 -1\\n-1 4\\n-1 6') == 'Yes'\nassert solution('1 -1\\n-1 4\\n-1 4\\n-1 4\\n-1 4') == 'No'\nassert solution('1 -1\\n-1 4\\n-1 4\\n-1 4\\n-1 4\\n-1 4') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 -1') == 'Yes'\nassert solution('-1 4') == 'Yes'\nassert solution('-1 6') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('-1 -1') == 'No'\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 -1\\n-1 4\\n-1 6\\n') == \"Yes\"\nassert solution('3\\n1 -1\\n-1 4\\n-1 6\\n') == \"Yes\"\nassert solution('2\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\nassert solution('2\\n1 -1\\n-1 4\\n-1 6\\n') == \"No\"\n\"\"\"\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"respectable\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n\") == \"ugly\""
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"respectable\"\nassert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"ugly\"\n\n\"\"\""
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2''') =='respectable'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0''') == 'ugly'"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"respectable\"\nassert solution(\"0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n\") == \"ugly\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2') == \"respectable\"\nassert solution('0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0') == \"ugly\"\nprint(\"Successful run\")"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"respectable\"\nassert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\") == \"ugly\"\nprint(\"tests passed\")\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2''') =='respectable'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0''') == 'ugly'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2''') =='respectable'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2''') == 'ugly'\nassert solution('''1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2''') == 'ugly'\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"respectable\"\nassert solution(\"0 0\\n0 1\\n0 2\\n1 0\\n1 2\\n2 0\\n2 1\\n2 2\\n\") == \"ugly\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n\") == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0\") == \"respectable\"\nassert solution(\"0 1\") == \"respectable\"\nassert solution(\"0 2\") == \"respectable\"\nassert solution(\"1 0\") == \"ugly\"\nassert solution(\"1 1\") == \"ugly\"\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0\") == \"respectable\"\nassert solution(\"0 1\") == \"ugly\"\nassert solution(\"0 2\") == \"ugly\"\nassert solution(\"1 0\") == \"ugly\"\nassert solution(\"1 2\") == \"ugly\"\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('Adilbek') == 'NO'\nassert solution('Adilbek') == 'NO'\nassert solution('Adilbek') == 'NO'\n\n\"\"\""
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n3\\n2') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n4 2\n5 11\n''') == 'YES'\nassert solution('''1\n4 2\n5 10\n''') == 'NO'\nassert solution('''1\n4 2\n5 8\n''') == 'YES'\nassert solution('''1\n4 2\n5 8\n''') == 'YES'\nassert solution('''1\n4 2\n5 8\n''') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 1') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('5 11') == 'NO'\nassert solution('1 2') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2\\n') == 'NO'\nassert solution('2\\n4\\n2\\n') == 'YES'\nassert solution('3\\n5\\n5\\n') == 'YES'\nassert solution('3\\n6\\n3\\n') == 'NO'\nassert solution('2\\n7\\n5\\n') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n') == 'YES'\nassert solution('3\\n1\\n') == 'YES'\nassert solution('4\\n1\\n') == 'NO'\nassert solution('5\\n1\\n') == 'NO'\n"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n5') == 'YES'\nassert solution('1\\n11') == 'NO'\nassert solution('1\\n1000') == 'YES'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('6') == '8080'\nassert solution('3') == '-1'\nassert solution('8') == '8080'\nassert solution('7') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == -1\nassert solution('2') == 462\nassert solution('6') == 8098\nassert solution('2') == -1\nassert solution('6') == 8080\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '462'\nassert solution('''6''') == '8080'\nassert solution('''3''') == '-1'\nassert solution('''10''') == '-1'\nassert solution('''22''') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2''') == '462'\nassert solution('''6''') == '8080'\nassert solution('''15''') == -1\nassert solution('''-15''') == -1\nassert solution('''7''') == -1\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('1\\n') == '0'\nassert solution('2\\n') == '462'\nassert solution('2\\n1') == '4654'\nassert solution('3\\n1') == '4466'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '462'\nassert solution('''6''') == '8080'\nassert solution('''10''') == '-1'\nassert solution('''31''') == '1000000000'\nassert solution('''100''') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n2\") == \"4\"\nassert solution(\"3\\n2\") == \"6\"\nassert solution(\"3\\n3\") == \"8\"\nassert solution(\"4\\n2\") == \"10\"\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '462'\nassert solution('6') == '8080'\nassert solution('2') == '462'\nassert solution('5') == '-1'\nassert solution('12') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '462'\nassert solution('6') == '8080'\nassert solution('3') == '-1'\nassert solution('1000000000') == '-1'\nassert solution('1000000000') == '-1'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '462'\nassert solution('6') == '8080'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\nabc\nxaybz''') == '2\\n2 3'\nassert solution('''4 10\nabcd\nebceabazcd''') == '1\\n2'\nassert solution('''6 8\nyxwjbczqzkn\nzcwtxybnlcl\nxzlrkwuxqfd\noqhixoxhzql\nhxzqxlxshzt\nzxzjpcxwqfh\nwxmuyxqzgkf\naoxadxhgvhxm\nfqxzqxwqhjf\nrjqyfqxzqwq\nhbfvbhwfwzqx''') == '0\\n2\\n2 3\\n2 3\\n4 5\\n4 5\\n5 6\\n5 6\\n7 8\\n7 8'\nassert solution('''3 10\nxyzqpbd\ncknrsxpyi\newgxzqnjl\noqrzxbqybd\nqxwzgftqxz\nqbxzrfqwxz\nwrpqbxzqw\nbxzqxwqeqz\npbdwqxzqw\nzqwgxwqezy\nwqzgxqzqw\nzqwzgqzqw\nzqwgxwqeqy\nzqxwqxzqw\nxyqzwqxzq\nzqzwgxwqeq\nzqwzgqzqw\nqxzqxzqz\nzqxwzqwqz\nzqwgxwqezy\nzqwzgqzqw\nqxzqwqxzq\nwqzgxwqezy\nzqwzgqzqw\nzqwgxwqeqy\nzqxwqxzqw''') == '0\\n2\\n2 3\\n2 3\\n3 4\\n3 4\\n4 5\\n4 5\\n6 7\\n6 7\\n8 9\\n8 9'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc') == '2'\nassert solution('xaybz') == '2 3'\nassert solution('abcd') == '1 2 3 4'\nassert solution('ebceabazcd') == '1 2 3 4 5 6'\nassert solution('ddeefawghdg') == '0 1 3 5 6 8'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\nabc\nxaybz''') == '2\\n2 3'\nassert solution('''4 10\nabcd\nebceabazcd''') == '1\\n2'\nassert solution('''5 10\nabcd\nxyzwzxzyb''') == '2\\n2 5'\nassert solution('''6 10\nabcd\nxyzwzxzyb''') == '2\\n2 5'\nassert solution('''8 11\nabcdefghijklmnopqrstuvwxyz\nefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz''') == '1\\n1 2'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 5\nabc\nxaybz\"\"\"\n) == \"2\\n2 3\"\n\nassert solution(\n\"\"\"4 10\nabcd\nebceabazcd\"\"\"\n) == \"1\\n2\"\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\nabc\nxaybz''') == '2'\nassert solution('''4 10\nabcd\nebceabazcd''') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\nabc\nxaybz\n''') == '2\\n2 3'\nassert solution('''\n3 5\nabcd\nebceabazcd\n''') == '1\\n2 3'\nassert solution('''\n3 5\nabc\nxyz\n''') == '2\\n1 2'\nassert solution('''\n3 5\nabc\nbcd\n''') == '1\\n2'\nassert solution('''\n3 3\nab\nc?cd\n''') == '2\\n1'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a' + 'b' * 100) == 0\nassert solution('ab' + 'b' * 100) == 0\nassert solution('a' * 100 + 'b') == 1\nassert solution('ab' * 100 + 'b') == 1\nassert solution('abc' + 'b' * 100) == 1\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 5\nabc\nxaybz''') == '2'\nassert solution('''4 10\nabcd\nebceabazcd''') == '1'"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"3 5\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\n\")) == \"2\\n2 3\"\nassert solution(input(\"4 10\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\n\")) == \"1\\n2\\n3\\n4\"\nassert solution(input(\"5 11\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\n\")) == \"1\\n2\\n3\\n4\\n5\"\nassert solution(input(\"6 13\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\n\")) == \"1\\n2\\n3\\n4\\n5\"\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\nabc\\nxaybz\\n\") == \"2\\n2 3\"\nassert solution(\"4 10\\nabcd\\nebcabazcd\\n\") == \"1\\n2\"\nassert solution(\"5 10\\nabcd\\nebcabazcd\\n\") == \"1\\n2\"\nassert solution(\"4 10\\nabc\\nabcd\\n\") == \"1\\n2\"\nassert solution(\"5 10\\nabcd\\nebcabazcd\\n\") == \"1\\n2\"\n\n\nprint(solution(input()))\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"0 1\"\nassert solution(input(\"3 3 1\")) == \"2 1\"\nassert solution(input(\"8 4 2\")) == \"4 8\"\nassert solution(input(\"8 5 2\")) == \"4 8\"\nassert solution(input(\"8 4 2\")) == \"4 8\"\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 2\\n') == '1 2\\n1 3\\n3 4\\n3 5\\n'\nassert solution('8 5 2\\n') == '-1\\n4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\\n'\nassert solution('10 10 10\\n') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n'\nassert solution('10 10 9\\n') == '1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n'\nassert solution('1\\n') == '1 -1\\n'\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"2 1\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"-1\"\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 2\n''') == '-1'\n\nassert solution('''\n8 5 2\n''') == '-1'\n\nassert solution('''\n8 4 2\n''') == '4 8'\n\nassert solution('''\n3 4 3\n1 2\n1 3\n2 3\n''') == '1 2\\n1 3\\n2 3'\n\nassert solution('''\n4 4 4\n1 2\n1 3\n2 3\n2 4\n''') == '1 2\\n1 3\\n2 3\\n2 4'"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3 2''') == '''1 2\n1 3\n3 4\n3 5'''\nassert solution('''8 5 2''') == '''-1\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\nassert solution('''8 4 2''') == '''-1'''\nassert solution('''8 1 2''') == '''-1'''\nassert solution('''5 3 2''') == '''1 2\n1 3\n3 4\n3 5'''\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3 2\\n') == '1 2\\n1 3\\n3 4\\n3 5'\nassert solution('8 5 2\\n') == '-1'\nassert solution('8 4 2\\n') == '4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5'\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"1 2\"\nassert solution(\"8 5 2\") == \"-1\"\nassert solution(\"8 4 2\") == \"4 8\""
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 5 2\") == \"4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\\n1\"\nassert solution(\"5 3 2\") == \"-1\"\nassert solution(\"8 4 2\") == \"4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\\n1\"\nassert solution(\"8 5 5\") == \"-1\"\nassert solution(\"8 6 2\") == \"-1\"\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3 2\\n') == '1 2\\n1 3\\n3 4\\n3 5\\n'\nassert solution('8 5 2\\n') == '-1\\n4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\\n'\nassert solution('8 4 2\\n') == '4 8\\n5 7\\n2 3\\n8 1\\n2 1\\n5 6\\n1 5\\n'\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3 2''') == '''1 2\n1 3\n3 4\n3 5'''\n\nassert solution('''8 5 2''') == '''-1\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\n\nassert solution('''3 3 1''') == '''1 2\n1 3'''"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0') == '0.5'\nassert solution('0 1') == '0.5'\nassert solution('1 1') == '1.0'\nassert solution('100 100') == '3.242939'\nassert solution('1000 100') == '6.4641016'\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n') == '1.0000000'\nassert solution('1\\n100\\n') == '3.2429391'\nassert solution('100\\n100\\n') == '3.2429391'\nassert solution('10\\n1\\n') == '0.23076923076923078'\nassert solution('1000\\n100\\n') == '3.2429391'\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1''') == '6.4641016'\nassert solution('''6 1''') == '1.0000000'\nassert solution('''100 100''') == '3.2429391'\nassert solution('''5 1''') == '1.0000000'\nassert solution('''100 1''') == '1.0000000'\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\n\n'''\n\nn, r = map(float, stdin.split())\nn, r = int(n), int(r)\n\nprint('%.6f' % (r*2*n/3**.5))"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"6.4641016\"\nassert solution(\"6 1\") == \"1.0000000\"\nassert solution(\"100 100\") == \"3.2429391\"\nassert solution(\"3 1\") == \"6.4641016\"\nassert solution(\"3 1\") == \"6.4641016\"\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\nprint(solution(stdin))\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n100\n50\n50\n\"\"\"\n) == \"50\"\n\nassert solution(\n\"\"\"\n199\n60\n40\n\"\"\"\n) == \"119.4\"\n\nassert solution(\n\"\"\"\n9999\n1000\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n1000000000\n1000\n1\n\"\"\"\n) == \"1000000000\"\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''100\n50\n50''') == '50'\nassert solution('''199\n60\n40''') == '119.4'\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"50\"\n\"\"\"\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100') == '50'\nassert solution('100\\n50\\n50') == '50'\n\nIn the second sample the speed of Harry's magical spell is less than the speed of the You-Know-Who's magical spell. Then, they meet on the left of the corridor, so their meeting is on the left side of the corridor. Then, they meet on the right of the corridor, so their meeting is on the right side of the corridor. Therefore, they are at the same distance from the end of the corridor.\n\n\n-----\n\n'''\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100\\n50\\n50') == '50'\nassert solution('199\\n60\\n40') == '119.4'\nassert solution('199\\n60\\n40\\n100\\n50') == '119.4'\nassert solution('199\\n60\\n40\\n100\\n50\\n99') == '119.4'\nassert solution('199\\n60\\n40\\n100\\n50\\n99\\n98') == '119.4'"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100\\n50\\n50') == '50'\nassert solution('199\\n60\\n40') == '119.4'\n\n\"\"\"\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('100\\n50') == '50'\nassert solution('100\\n50') == '50'\nassert solution('199\\n60') == '119.4'\nassert solution('199\\n60') == '119.4'\nassert solution('100\\n50') == '50'\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''100\n50\n50''') == '50'\nassert solution('''199\n60\n40''') == '119.4'\nassert solution('''1000\n10\n1000''') == '10'\n\n\nprint(solution(input()))\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2014 2016 2015') == '2015'\nassert solution('1') == '2050'\nassert solution('1223 342345') == '2345'\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2050') == '2015'\nassert solution('2\\n2050 2001') == '2015'\nassert solution('2\\n2016 2004 2001') == '2014'\nassert solution('2\\n2016 2000 2006 2001') == '2015'\nassert solution('1\\n2016 2017 2018 2019') == '2019'\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2014 2016 2015''') == 2015\nassert solution('''1\n2050''') == 2050\n\nprint(solution('''3\n2014 2016 2015'''))\nprint(solution('''1\n2050'''))\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2050') == '2050'\nassert solution('1\\n2050\\n1595\\n') == '2015'\nassert solution('2\\n2050\\n1595\\n1260\\n') == '1260'\nassert solution('3\\n2050\\n1595\\n1260\\n2310\\n') == '2310'\nassert solution('3\\n2050\\n1595\\n1260\\n2310\\n2510\\n') == '2510'\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2050') == '2050'\nassert solution('2\\n2050 2016 2017') == '2015'\nassert solution('2\\n2050 2016 17') == '2015'\nassert solution('3\\n2050 2016 17 2017 2018') == '2015'\nassert solution('3\\n2050 2016 17 17 2018 2018 2019') == '2015'\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2014 2016 2015\n''') == 2015\nassert solution('''1\n2050\n''') == 2050"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2014 2016 2015\\n') == 2015\nassert solution('1\\n2050\\n') == 2050\nassert solution('2\\n25 33\\n49 55\\n') == 25"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n2014 2016 2015\"\"\") == \"2015\"\nassert solution(\"\"\"1\n2050\"\"\") == \"2050\"\nassert solution(\"\"\"3\n2014 2016 2015\"\"\") == \"2015\""
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n2014 2016 2015\\n') == '2015'\nassert solution('1\\n2050\\n') == '2050'\nprint(\"All tests passed successfully.\")\n\n\n\n\"\"\"\n"
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2014 2016 2015') == '2015'\nassert solution('1\\n2050') == '2050'\n\n\n\"\"\"\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\nMMY') == 'No'\nassert solution('5\\nC?C?Y') == 'Yes'\nassert solution('5\\nCYCMY') == 'No'\nassert solution('5\\nCYCMY?') == 'No'\nassert solution('5\\nC?C?Y?') == 'Yes'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'No'\nassert solution('100') == 'Yes'\nassert solution('123') == 'No'\nassert solution('1234567') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\nCY??Y') == 'Yes'\nassert solution('5\\nC?C?Y') == 'Yes'\nassert solution('5\\nC??MM') == 'No'\nassert solution('5\\nC??C?Y') == 'No'\nassert solution('3\\nMMY') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\nC?C?Y') == 'Yes'\nassert solution('5\\nCY??Y') == 'Yes'\nassert solution('5\\nCYC?Y') == 'Yes'\nassert solution('5\\nMCYCM') == 'No'\nassert solution('5\\nMCYCY') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('5CY') == 'Yes'\nassert solution('5C?Y') == 'Yes'\nassert solution('5CYC?') == 'Yes'\nassert solution('5CY?Y') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"inputs/test_4\") == \"Yes\"\nassert solution(\"inputs/test_5\") == \"No\"\nassert solution(\"inputs/test_6\") == \"No\"\nassert solution(\"inputs/test_7\") == \"Yes\"\nassert solution(\"inputs/test_8\") == \"Yes\"\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('', '', '') == 'No'\nassert solution('', 'C', '?') == 'No'\nassert solution('', 'MM', '?') == 'No'\nassert solution('', '', 'C?') == 'No'\nassert solution('', '', '?') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'Yes'\nassert solution('C?C?Y') == 'Yes'\nassert solution('M?M?M?M?') == 'No'\nassert solution('M?M?M?C?') == 'No'\nassert solution('MCYCM') == 'No'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nC?C?Y') == \"Yes\"\nassert solution('5\\nCYCM') == \"No\"\nassert solution('5\\nMMY') == \"No\"\nassert solution('5\\nMCYCM') == \"Yes\"\nassert solution('5\\nYCYCY') == \"Yes\"\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CY??Y') == 'Yes'\nassert solution('C?C?Y') == 'Yes'\nassert solution('CYCCY') == 'No'\nassert solution('?CYC?') == 'No'\nassert solution('CYMCY') == 'Yes'\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 1 2 5 3'''\n    ) == '72900'\n\nassert solution(\n'''17 97 41 37 11'''\n    ) == '317451037'\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nprint(solution('3 1 2 5 3'))\nprint(solution('17 97 41 37 11'))\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solutionn\n\n-----\n\nfrom math import pow\nfrom typing import Iterable"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1 2 5 3''') == '72900'\nassert solution('''17 97 41 37 11''') == '317451037'\nassert solution('''1 2 3 4 5''') == '-1'\nassert solution('''1 2 3 4''') == '-1'\nassert solution('''0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solution('1 1 1 1 1') == '1'\nassert solution('2 3 4 5 6') == '2772'\nassert solution('1000000 1 1000000 1 1000000 1 1000000') == '73161938'\n\"\"\"\n\n\"\"\"\n-----Solved the problem by trying the dynamic programming---\n\"\"\""
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solution('8 54 22 58 69 62') == '1190493534'\nassert solution
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solution('1 2 3 5 4') == '5'\n\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n    tab\n    one\n    bat''') == '6'\nassert solution('''4 2\n    oo\n    ox\n    xo\n    xx''') == '6'\nassert solution('''9 4\n    abab\n    baba\n    abcd\n    bcde\n    cdef\n    defg\n    wxyz\n    zyxw\n    ijji''') == '20'\nassert solution('''1 1\n    a''') == '0'\nassert solution('''2 2\n    a\n    aa''') == '0'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('test_solution') == 'a', 'test #1'\nassert solution('test_solution') == 'a', 'test #2'\nassert solution('test_solution') == 'a', 'test #3'\nassert solution('test_solution') == 'a', 'test #4'\nassert solution('test_solution') == 'a', 'test #5'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ntab\\none\\nbat\") == \"6\"\nassert solution(\"4 2\\no\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\ntab\none\nbat\n''') == '6'\nassert solution('''9 4\nabab\nbaba\nabcd\nbcde\ncdef\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 2') == '0'\nassert solution('9 4') == '20'\nassert solution('9 4') == '20'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 2') == '0'\nassert solution('9 4') == '20'\nassert solution('9 5') == '21'\nassert solution('3 5') == '6'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Hello World\") == \"World Hello\"\nassert solution(\"0\") == \"0\"\nassert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"9 4\") == \"20\"\nassert solution(\"9 4\\nabab\\nbaba\\nabcd\\nbcde\\ncdef\\ndefg\\nwxyz\\nyzxw\\nijji\") == \"ababwxyzijjizyxwbaba\"\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 3') == '6'\nassert solution('4 4') == '0'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"asd\") == \"\"\nassert solution(\"codef\") == \"\"\nassert solution(\"bcde\") == \"\"\nassert solution(\"cdeb\") == \"\"\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1, 3, 2') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\n\"\"\"\n\nfrom typing import List\nfrom collections import Counter\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1'\nassert solution('''1 3 2''') == '1'\nassert solution('''1000000000 1000000000 1000000000''') == '1999982505'\n\n\n'''\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\nassert solution
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\n'''\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 2''') == '1'\nassert solution('''3\n1000000000 1000000000 1000000000''') == '1999982505'\nassert solution('''3\n1000000001 10000000001 1000000000''') == '1999982505'\nassert solution('''3\n1000000000 1000000000 1000000000''') == '1999982505'\nassert solution('''3\n1000000000 1000000000 1000000000''') == '1999982505'\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\n\n\"\"\""
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n\n\n-----\nimport sys"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\nassert solution('1 3 2') == '1'\nassert solution('1000000000 1000000000 1000000000') == '1999982505'\n\n\n\n-----Best Solution-----"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n4\\n2 1 3 1\\n2\\n420 420') == '1'\nassert solution('2\\n4\\n2 1 3 1\\n2\\n420 420') == '1'\nassert solution('2\\n4\\n2 1 3 1\\n2\\n4') == '1'\nassert solution('2\\n4\\n2 1 3 1\\n2\\n2') == '2'\nassert solution('2\\n4\\n2 1 3 1\\n2\\n3') == '2'\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n4\\n2 1 3 1\\n2') == '1'\nassert solution('2\\n420 420\\n') == '2'\n\n\n\"\"\""
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcab') == 1\nassert solution('abacbd') == 2\nassert solution('abbacabd') == 3\nassert solution('abacabdd') == 3\nassert solution('aaabacbb') == 3\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n4\\n2 1 3 1') == 1\nassert solution('2\\n420 420') == 2\n\n\n\n\"\"\"\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n4\n2 1 3 1\n2\n420 420''') == '1'\nassert solution('''3\n5\n10 1 10 1\n1\n5''') == '3'\nassert solution('''4\n3\n10 1 10 1\n1\n10''') == '2'\nassert solution('''5\n4\n10 1 10 1 4\n2\n10''') == '2'\nassert solution('''5\n6\n1 3 3 4 3\n1\n10''') == '3'\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n4\n2 1 3 1''') == '1'\nassert solution('''2\n420 420''') == '2'\nassert solution('''4\n2 1 3 1''') == '1'\nassert solution('''5\n5\n6 7 8 9 10''') == '2'\nassert solution('''3\n3\n3 3 3''') == '3'\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n4\\n2\\n1\\n3\\n1\\n2\\n') == '1'\nassert solution('4\\n2\\n420\\n2\\n1\\n3\\n1\\n2\\n') == '2'\n\n'''\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n4\\n2 1 3 1\\n2\\n420 420') == '1'\nassert solution('2\\n4\\n2 1 3 1\\n2\\n420 420') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 1 3 1''') == '1'\nassert solution('''4\n420 420''') == '2'\nassert solution('''2\n4\n2 1 3 1''') == '1'\nassert solution('''2\n420 420''') == '2'\nassert solution('''4\n4\n4 4 4 4''') == '2'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"NIE\"\nassert solution(\"2 3\") == \"TAK\"\nassert solution(\"4 5\") == \"TAK\"\nassert solution(\"5 5\") == \"TAK\"\nassert solution(\"6 7\") == \"TAK\"\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'NIE' or solution(stdin) == 'TAK'\nassert solution(stdin) == 'NIE' or solution(stdin) == 'TAK'\nassert solution(stdin) == 'NIE' or solution(stdin) == 'TAK'\nassert solution(stdin) == 'NIE' or solution(stdin) == 'TAK'\nassert solution(stdin) == 'NIE' or solution(stdin) == 'TAK'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3 2\n0 0\n0 0\n0 0\"\"\") == \"NIE\"\nassert solution(\n\"\"\"2 3\n7 7 7\n7 7 10\"\"\") == \"TAK\"\nassert solution(\n\"\"\"3 3\n0 1 2\n1 2 3\n1 2 3\"\"\") == \"1 2\"\nassert solution(\n\"\"\"2 3\n0 1 2\n3 2 1\"\"\") == \"NIE\"\nassert solution(\n\"\"\"2 3\n5 6 7\n5 6 7\"\"\") == \"NIE\"\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''3 4\n4 2 9 2\n2 2 1 1\n4 2 2 3''') == '2 4'\nassert solution('''5 5\n1 3 7 3 2\n2 4 5 3 2\n3 3 8 3 4\n4 4 8 4 4\n2 4 4 4 2''') == '2 4'\nprint('All tests passed successfully')\n\n-----Show on GitHub-----\n![Matrix](matrix.png)\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'NIE'\nassert solution('2 3') == 'TAK'\nassert solution('3 3') == 'NIE'\nassert solution('3 4') == 'NIE'\nassert solution('4 4') == 'TAK'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''2 3\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''2 3\n2 1 2\n2 2 2''') == 'TAK'\nassert solution('''2 3\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0''') == 'NIE'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == 'NIE'\nassert solution('2\\n1') == 'TAK'\nassert solution('2\\n2') == '2 2'\nassert solution('1\\n2') == 'NIE'\nassert solution('2\\n3') == 'NIE'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == 'NIE'\nassert solution('''7 3''') == 'TAK'\nassert solution('''6 1''') == 'NIE'\nassert solution('''7 1''') == 'TAK'\nassert solution('''7 7''') == 'TAK'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('contestcontest') == '-1'\nassert solution('contestcon') == '-1'\nassert solution('contestco') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('contest') == 10\nassert solution('son') == -1\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc', 'abc') == '10'\nassert solution('ab', 'ab') == '-1'\nassert solution('ab', 'abc') == '-1'\nassert solution('abc', 'ab') == '-1'\nassert solution('ab', 'abc') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('son') == '10'\nassert solution('contest') == '-1'\nassert solution('contestco') == '-1'\nassert solution('contestcontest') == '10'\nassert solution('sonon') == '9'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '-1'\nassert solution('s') == '-1'\nassert solution('t') == '10'\nassert solution('contest') == '10'\nassert solution('son') == '10'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('contestcon') == '10'\nassert solution('contestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcont"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"contest\") == \"10\"\nassert solution(\"son\") == \"9\"\nassert solution(\"contestcontestcontestcontest\") == \"-1\"\nassert solution(\"contestco\") == \"-1\"\n\"\"\""
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'\nassert solution('contestson') == '10'\nassert solution('contestsonon') == '-1'\nassert solution('soncontest') == '-1'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '10'"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '-1'\nassert solution('contestcontestcontestcontestcontestcontest') == '10'\nassert solution('contestcontestcontestcontestcontestcontestcontestcontestcontestcontest') == '9'\nassert solution('contestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontest') == '8'\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\n\"\"\"\n\n\n\"\"\"\n-----SOLUTION 1: EFFICIENT-----\n-----The efficiency of this solution is in O(n + m)\n\"\"\""
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\n1 3\\n3 4\\n1 4\\n') == 'YES'\nassert solution('4 4\\n3 1\\n2 3\\n3 4\\n1 2\\n') == 'NO'\nassert solution('10 4\\n4 3\\n5 10\\n8 9\\n1 2\\n') == 'YES'\nassert solution('3 2\\n1 2\\n2 3\\n') == 'NO'\nassert solution('1 2\\n2 3\\n3 4\\n1 2\\n') == 'NO'\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''4 3\n1 3\n3 4\n1 4'''\n) == 'YES'\n\nassert solution(\n'''4 4\n3 1\n2 3\n3 4\n1 2'''\n) == 'NO'\n\nassert solution(\n'''10 4\n4 3\n5 10\n8 9\n1 2\n\n'''\n) == 'YES'\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"4 4\") == \"NO\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 3\\n3 4\\n1 4\\n\") == \"YES\"\nassert solution(\"4 4\\n3 1\\n2 3\\n3 4\\n1 2\\n\") == \"NO\"\nassert solution(\"10 4\\n4 3\\n5 10\\n8 9\\n1 2\\n\") == \"YES\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5 3\\n1 3\\n2 4\\n3 4\\n1 2\\n\") == \"YES\"\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 3\\n3 4\\n1 4\\n\") == \"YES\"\nassert solution(\"4 4\\n3 1\\n2 3\\n3 4\\n1 2\\n\") == \"NO\"\nassert solution(\"3 2\\n1 2\\n2 3\\n\") == \"NO\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 3\n3 4\n1 4''') == 'YES'\nassert solution('''4 4\n3 1\n2 3\n3 4\n1 2\n''') == 'NO'\nassert solution('''10 4\n4 3\n5 10\n8 9\n1 2\n''') == 'NO'\nassert solution('''3 2\n1 2\n2 3\n''') == 'YES'\nassert solution('''3 2\n1 2\n2 3\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 2\n2 3\n3 4\n1 4\n2 3\n3 4\n1 2''') == 'NO'\nassert solution('''4 2\n1 3\n1 4\n1 5\n2 4\n2 3\n2 4\n2 5\n3 4\n3 5\n1 2''') == 'YES'\nassert solution('''1 2\n3 4\n4 5\n5 1\n1 4\n2 3\n2 4\n1 5\n2 4\n2 3\n1 5\n1 4''') == 'YES'\nassert solution('''2 4\n2 3\n3 4\n1 2\n2 3\n1 3\n2 3\n3 4\n1 4\n2 3\n2 4\n1 5\n1 4\n1 3\n1 5\n1 4\n2 4\n2 3\n2 5\n1 4\n1 3\n1 5\n1 4\n2 5\n1 5\n1 4\n2 5\n1 5\n1 4\n2 5\n1 5\n1 4''') == 'YES'\n'''\n'''\n"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AprilFool\") == \"AprILFooL\"\nassert solution(\"APrilFool\") == \"AprILFooL\"\nassert solution(\"4FooL\") == \"4FooL\"\nassert solution(\"FooL\") == \"FooL\"\nassert solution(\"4FoL\") == \"4FoL\"\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"AprILFooL\"\n\nInput\nGeeks\n5\n\nOutput\nGeek\n\nassert solution(input()) == \"Geek\"\n\"\"\"\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('Hello World!') == 'Hello WorLd!'\nassert solution('Hello World!') == 'Hello World!'\nassert solution('Hello World!') == 'Hello World!'\nassert solution('Hello World!') == 'Hello World!'\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"AprILFooL\"\nassert solution(input()) == \"Mayb6y\"\nassert solution(input()) == \"Aprg2e1K\"\nassert solution(input()) == \"AprLq0c3\"\nassert solution(input()) == \"May88dg\"\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AprilFool') == 'AprILFooL'\n\n\nInput\nAAAAAA\n0\n\nOutput\nAAAAAA\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abc') == 'abc'\nassert solution('abcdef') == 'abcdef'\nassert solution('apple') == 'apple'\nassert solution('APPLE') == 'APPLE'\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AprilFool\") == \"AprILFooL\"\nassert solution(\"OmidSom\") == \"OMIDSOM\"\nassert solution(\"ItalicStrikethrough\") == \"ITALICSTRIKEHAMMER\"\nassert solution(\"LettersWithNumbers\") == \"LLETTERSTWONUMBERS\"\nassert solution(\"LettersWithNumbers2\") == \"LLETTERSTWONUMBERS2\"\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('APPL') == 'APPL'\nassert solution('abcde') == 'abcde'\nassert solution('ABCDEFGHIJKL') == 'ABCDEFGHiIJKL'\nassert solution('APPL') == 'APPL'\n"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"AprilFool\") == \"AprILFooL\"\nassert solution(\"Alip\") == \"Alip\"\nassert solution(\"Dario\") == \"Dario\"\nassert solution(\"A\") == \"A\"\nassert solution(\"Aa\") == \"Aa\"\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0111') == 'First'\nassert solution('0001') == 'First'\nassert solution('110110') == 'First'\nassert solution('001001') == 'First'\nassert solution('111000') == 'Second'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\" * 1000) == \"First\"\nassert solution(\"1\" * 10000) == \"First\"\nassert solution(\"2\" * 1000) == \"Second\"\nassert solution(\"2\" * 10000) == \"Second\"\nassert solution(\"1\" * 100) == \"Draw\"\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n0111\n0001\n''') == 'First'\nassert solution('''3\n110110\n001001\n''') == 'First'\nassert solution('''4\n01010110\n00101101\n''') == 'Second'\nassert solution('''5\n10110101\n1101101\n''') == 'First'\nassert solution('''6\n00010001\n00010001\n''') == 'Second'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0111\") == \"First\"\nassert solution(\"0001\") == \"First\"\nassert solution(\"110110\") == \"First\"\nassert solution(\"001001\") == \"First\"\nassert solution(\"111000\") == \"Second\"\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 'First'\nassert solution('11') == 'First'\nassert solution('1101') == 'First'\nassert solution('111010') == 'First'\nassert solution
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n0111\n0001\n''') == 'First'\nassert solution('''3\n110110\n001001\n''') == 'First'\nassert solution('''4\n01010110\n00101101\n''') == 'Draw'\nassert solution('''4\n01100000\n10010011\n''') == 'Second'\nassert solution('''4\n11011000\n00011100\n''') == 'First'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('hello') == 'Second'\nassert solution('hello') == 'Second'\nassert solution('0111') == 'First'\nassert solution('0001') == 'Second'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['2', '0001', '0001', '', '011'])) == 'Second'\nassert solution('\\n'.join(['3', '110110', '001001', '', '0110'])) == 'First'\nassert solution('\\n'.join(['4', '01010110', '00101101', '', '01101'])) == 'Second'\nassert solution('\\n'.join(['4', '01100000', '10010011', '', '01101'])) == 'First'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'First'\nassert solution('110110') == 'First'\nassert solution('001001') == 'First'\nassert solution('111000') == 'Second'\nassert solution('01010110') == 'Draw'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"Hello, World!\") == \"Hello, World!\"\nassert solution(\"1234567890\") == \"1234567890\"\nassert solution(\"0000011010\") == \"0000011010\"\nassert solution
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n-1 1 1 0 0 -1\n\"\"\") == \"\"\"\n2\n0 0 0 0 0 0 \n\"\"\"\nassert solution(\n\"\"\"\n6\n-1 1 1 0 0 -1\n\"\"\") == \"\"\"\n2\n0 0 0 0 0 0 \n\"\"\"\nassert solution(\n\"\"\"\n7\n-10 -9 -10 -8 -10 -9 -9\n\"\"\") == \"\"\"\n5\n-10 -10 -9 -9 -9 -9 -9 \n\"\"\"\nassert solution(\n\"\"\"\n7\n-10 -9 -10 -8 -10 -9 -9\n\"\"\") == \"\"\"\n5\n-10 -10 -9 -9 -9 -9 -9 \n\"\"\"\nassert solution(\n\"\"\"\n6\n100 100 101\n\"\"\") == \"\"\"\n3\n101 100 100\n\"\"\"\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n-10 -9 -10 -8 -10 -9 -9') == '5\\n-10 -10 -9 -9 -9 -9 -9 -9'\nassert solution('3\\n100 100 101') == '3\\n101 100 100'\nassert solution('5\\n-10 -9 -10 -8 -10 -9 -9') == '5\\n-10 -10 -9 -9 -9 -9 -9 -9'\nassert solution('7\\n-10 -9 -10 -8 -10 -9 -9') == '5\\n-10 -10 -9 -9 -9 -9 -9 -9'\nassert solution('7\\n-10 -9 -10 -8 -10 -9 -9') == '5\\n-10 -10 -9 -9 -9 -9 -9 -9'\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\n\"\"\"\n\nfrom collections import defaultdict\n\nn = int(stdin)\nx = list(map(int, stdin.split()))\nd = defaultdict(int)\nfor i in x:\n    d[i] += 1\n\navg = sum(x) / len(x)\n\nans = 0\nfor i in x:\n    if abs(i - avg) <= 2 and d[i] == 1:\n        ans += 1\n        d[i] -= 1\nprint(ans)\n\nfor i in range(n):\n    print(avg, end=' ')\n    avg += x[i] - x[i - 1]\n    if i < n - 1 and d[x[i]] > 1:\n        d[x[i]] -= 1\n        d[x[i + 1]] += 1\n    elif i == n - 1 and d[x[i]] > 1:\n        d[x[i]] -= 1\n        print(avg)\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n-1 1 1 0 0 -1\\n') == '2\\n0 0 0 0 0 0\\n'\nassert solution('3\\n100 100 101\\n') == '3\\n101 100 100\\n'\nassert solution('7\\n-10 -9 -10 -8 -10 -9 -9\\n') == '5\\n-10 -10 -9 -9 -9 -9 -9\\n'\n\n\n\"\"\""
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n-1 1 1 0 0 -1\\n\") == \"2\\n0 0 0 0 0 0\\n\"\nassert solution(\"7\\n-10 -9 -10 -8 -10 -9 -9\\n\") == \"5\\n-10 -10 -9 -9 -9 -9 -9 -9\\n\"\nassert solution(\"3\\n100 100 101\\n\") == \"3\\n101 100 100\\n\"\nassert solution(\"7\\n-10 -9 -10 -8 -10 -9 -9\\n\") == \"5\\n-10 -10 -9 -9 -9 -9 -9 -9\\n\"\nassert solution(\"15\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n-1 1 1 0 0 -1''') == '2'\nassert solution('''3\n100 100 101\n''') == '3'\nassert solution('''7\n-10 -9 -10 -8 -10 -9 -9\n''') == '5'\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n-1 1 1 0 0 -1') == '2\\n0 0 0 0 0 0'\nassert solution('3\\n100 100 101') == '3\\n101 100 100'\nassert solution('7\\n-10 -9 -10 -8 -10 -9 -9') == '5\\n-10 -10 -9 -9 -9 -9 -9'\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n-1 1 1 0 0 -1''') == '2'\nassert solution('''3\n100 100 101''') == '3'\nassert solution('''7\n-10 -9 -10 -8 -10 -9 -9''') == '5'\nassert solution('''7\n-1 1 1 0 0 -1''') == '3'"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n-1 1 1 0 0 -1') == '2'\nassert solution('2\\n100 100 101') == '3'\nassert solution('3\\n-10 -9 -10 -8 -10 -9 -9') == '5'\nassert solution('7\\n-10 -9 -10 -8 -10 -9 -9') == '5'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\\n-1 1 1 0 0 -1\") == \"2\\n0 0 0 0 0 0\"\nassert solution(\"3\\n100 100 101\") == \"3\\n101 100 100\"\nassert solution(\"7\\n-10 -9 -10 -8 -10 -9 -9\") == \"5\\n-10 -10 -9 -9 -9 -9 -9 -9\"\nassert solution(\"5\\n-1 -1 -1 -1 -1\") == \"4\\n0 0 0 0 0\"\n\n'''\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('map') == '35'\nassert solution('z') == '1'\nassert solution('ares') == '34'\nassert solution('gri') == '18'\nassert solution('rig') == '35'\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\n\"\"\"\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('are') == 34\nassert solution('m') == 35\nassert solution('ap') == 34\nassert solution('sa') == 34\nassert solution('z') == 35\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcd\") == 0\nassert solution(\"abcd\") == 0\nassert solution(\"abcde\") == 1\nassert solution(\"abcde\") == 1\nassert solution(\"a\") == 0\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    'zeus'\n) == '18'\nassert solution(\n    'map'\n) == '35'\nassert solution(\n    'ares'\n) == '34'\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('ba') == 2\nassert solution('zus') == 18\nassert solution('Ares') == 34\nassert solution('map') == 35\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"map\") == \"35\"\nassert solution(\"ares\") == \"34\"\nassert solution(\"asdf\") == \"0\"\nassert solution(\"zeus\") == \"18\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('asd') == 'asd'\nassert solution('aads') == 'aads'\nassert solution('b') == 'ba'\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"map\") == 35\nassert solution(\"ares\") == 34\nassert solution(\"zeus\") == 18\nassert solution(\"arequests\") == 35\nassert solution(\"requests\") == 35\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"baz\") == \"baz\"\nassert solution(\"bar\") == \"bar\"\nassert solution(\"bazbazz\") == \"bazbazz\"\nassert solution(\"barbar\") == \"barbar\"\nassert solution(\"bazbazzbaz\") == \"bazbazzbaz\"\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\n-----\n\nMore examples in \"Sample Tests\".\n'''\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0 4\"\nassert solution(\"2\") == \"0 4\"\nassert solution(\"3\") == \"0 4\"\nassert solution(\"1\") == \"0 4\"\nassert solution(\"4\") == \"0 4\"\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0 4\"\nassert solution(\"3\") == \"0 4\"\nassert solution(\"5\") == \"0 4\"\nassert solution(\"1\") == \"0 4\"\nassert solution(\"8\") == \"0 4\"\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n5\\n1') == '0 4'\nassert solution('3\\n1\\n6\\n7\\n25\\n') == '4 4'\nassert solution('6\\n4\\n9\\n10\\n89') == '5 9'\nassert solution('2\\n3\\n4\\n4\\n1') == '0 4'\nassert solution('4\\n2\\n5\\n7\\n49\\n') == '4 4'\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n5\\n1\\n8') == '0 4'\nassert solution('3\\n1\\n6\\n7\\n25') == '4 4'\nassert solution('6\\n4\\n9\\n10\\n89') == '5 9'\nassert solution('4\\n4\\n9\\n10\\n81') == '5 9'\nassert solution('5\\n4\\n9\\n10\\n84') == '4 4'\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n5\\n1\\n8\") == \"0 4\"\nassert solution(\"3\\n1\\n6\\n7\\n25\") == \"4 4\"\nassert solution(\"6\\n4\\n9\\n10\\n89\") == \"5 9\"\nassert solution(\"3\\n3\\n9\\n10\\n85\") == \"5 5\"\nassert solution(\"3\\n6\\n9\\n10\\n69\") == \"5 6\"\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n5\n1\n8''') == '0 4'\nassert solution('''3\n1\n6\n7\n25''') == '4 4'\nassert solution('''6\n4\n9\n10\n89\n''') == '5 9'\nassert solution('''9\n4\n9\n10\n89\n''') == '5 9'\nassert solution('''10\n4\n9\n10\n89\n''') == '5 9'\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5 1\n    BGGBG\n    \"\"\") == \"GBGGB\"\n\nassert solution(\n    \"\"\"5 2\n    BGGBG\n    \"\"\") == \"GGBGB\"\n\nassert solution(\n    \"\"\"4 1\n    GGGB\n    \"\"\") == \"GGGB\"\n\nassert solution(\n    \"\"\"3 6\n    GGG\n    \"\"\") == \"GGG\"\n\nassert solution(\n    \"\"\"5 10\n    GGGB\n    \"\"\") == \"GGGB\""
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"GGGB\", \"GBGGB\") == \"GGBGB\"\nassert solution(\"BGGBG\", \"GBGGB\") == \"GBGGB\"\nassert solution(\"BGGBG\", \"GGGB\") == \"GGBGB\"\nassert solution(\"GGBGB\", \"GBGGB\") == \"GBGGB\"\nassert solution(\"GGBGB\", \"GGGB\") == \"GGGB\"\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\nBGGBG\n''') == 'GBGGB'\nassert solution('''5 2\nBGGBG\n''') == 'GGBGB'\nassert solution('''4 1\nGGGB\n''') == 'GGGB'\nassert solution('''4 2\nGGGB\n''') == 'GGGB'\nassert solution('''2 2\nGGBG\n''') == 'GGBG'\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''4 1''') == 'GGGG'\nassert solution('''1 1''') == '1'\nassert solution('''2 1''') == 'GG'\nassert solution('''6 4''') == 'GGBGGGBGBGGGB'\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1\\nBGGBG') == 'GBGGB'\nassert solution('5 2\\nBGGBG') == 'GGBGB'\nassert solution('4 1\\nGGGB') == 'GGGB'\nassert solution('4 2\\nGGGB') == 'GGGB'\nassert solution('6 4\\nGGGGBBGGGBGGB') == 'GGGGBBGGGBGGB'"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\nBGGBG\") == \"GBGGB\"\nassert solution(\"5 2\\nBGGBG\") == \"GGBGB\"\nassert solution(\"4 1\\nGGGB\") == \"GGGB\"\nassert solution(\"4 2\\nGGGB\") == \"GBGB\""
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1') == '3'\nassert solution('60 5') == '237178099'\nassert solution('6 2') == '875000008'\n\"\"\"\nfrom functools import lru_cache\n\n@lru_cache(None)\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\n\"\"\"\n\nimport math\nn, k = [int(x) for x in stdin.split()]\nP = int(math.pow(10,9) + 7)\nQ = P\nfor i in range(1, n+1):\n    Q *= math.gcd(i, P)\nQ = P if Q % P == 0 else Q // math.gcd(Q, P)\nP = Q // P\nprint(P * Q % P)\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1') == '3'\nassert solution('60 5') == '237178099'\nassert solution('8 6') == '147843230'\nassert solution('60 0') == '1'\nassert solution('9 0') == '1'\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n6 1\n''') == '3'\n\nassert solution(\n'''\n6 2\n''') == '875000008'\n\nassert solution(\n'''\n60 5\n''') == '237178099'\n\nassert solution(\n'''\n30 6\n''') == '3'"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\nassert solution('6 0') == '0'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\nassert solution('42 3') == '6'"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n') == '101'\nassert solution('4 8\\n') == '110110110101'\nassert solution('4 10\\n') == '11011011011011'\nassert solution('1 5\\n') == '-1'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 8''') == '110110110101'\nassert solution('''1 2''') == '101'\nassert solution('''2 5''') == '-1'\nassert solution('''7 19''') == '110110110110111'\nassert solution('''13 19''') == '1101101101101101001'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('1 5') == '-1'"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 8'''\n    ) == '110110110101'\nassert solution(\n'''1 5'''\n    ) == '-1'\nassert solution(\n'''6 9'''\n    ) == '-1'\nassert solution(\n'''5 6'''\n    ) == '10101'\nassert solution(\n'''1 1'''\n    ) == '-1'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('1 5') == '-1'\nassert solution('4 10') == '11011011011011'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('4 10') == '11011011011011'\nassert solution('1 5') == '-1'\nassert solution('1 2') == '101'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '101'\nassert solution('4 8') == '110110110101'\nassert solution('1 5') == '-1'\nassert solution('4 10') == '11011011011011'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('9 10') == '0 0 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\nassert solution('1000000000000 499999999999') == '1 499999999999 500000000000'\nprint(\"Testcases passed successfully!\")"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''18 4''') == '0 0 4'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''1000000000000 8''') == '2 4 9'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''1000000000000 10000''') == '1 499999999999 0'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''9 7''') == '0 0 9'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('18 2') == '3 6 9'\nassert solution('9 10') == '0 0 9'\nassert solution('1000000000000 5') == '83333333333 416666666665 500000000002'\nassert solution('1000000000000 499999999999') == '1 499999999999 500000000000'\nprint(solution(stdin))\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 499999999999''') == '83333333333 416666666665 500000000002'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''9 5''') == '1 1 1'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"NO\"\nassert solution(\"232\") == \"NO\"\nassert solution(\"333\") == \"NO\"\nassert solution(\"334\") == \"NO\"\nassert solution(\"334\") == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"131\") == \"YES\"\nassert solution(\"320\") == \"NO\"\nassert solution(\"2010200\") == \"YES\""
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('131') == \"YES\"\nassert solution('320') == \"NO\"\nassert solution('2010200') == \"YES\"\nassert solution('321') == \"NO\"\nassert solution('211233') == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(131) == \"YES\"\nassert solution(320) == \"NO\"\nassert solution(2010200) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('2') == 'NO'\nassert solution('1') == 'NO'\nassert solution('1 2') == 'NO'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"10000\") == \"2500\"\n\"\"\""
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6''') == '1'\nassert solution('''10''') == '2'\nassert solution('''1000000000''') == '252584'\n'''\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '2'\nassert solution('977786523846523') == '88'\nassert solution('999999') == '3371'\nassert solution('9999999999999999999') == '3402'\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '1'\nassert solution('6\\n') == '1'\nassert solution('10\\n') == '2'\nassert solution('2\\n') == '0'\nassert solution('5\\n') == '0'\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10\\n') == 1\nassert solution('100\\n') == 2\nassert solution('200\\n') == 4\nassert solution('1000\\n') == 2455\nassert solution('10000\\n') == 487732\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6''') == '1'\nassert solution('''10''') == '2'\nassert solution('''1000''') == '999'\nassert solution('''1001''') == '0'\nassert solution('''1033''') == '2'\n'''\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n''') == '1'\nassert solution('''10\n''') == '2'\nassert solution('''30\n''') == '4'\n'''"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('10') == '2'\nassert solution('11') == '3'\nassert solution('12') == '4'\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\nX...XX\\n...XX.\\n.X..X.\\n......\\n1 6\\n2 2\\n\\n\") == \"YES\"\nassert solution(\"5 4\\n.X..\\n...X\\nX.X.\\n....\\n.XX.\\n5 3\\n1 1\\n\\n\") == \"NO\"\nassert solution(\"7 7\\n.X...X.\\n.XX.X.X\\nX..X..X\\n...X...X\\nX.X..X..\\n.X..X...\\n....X...\\n7 6\\n1 1\\n\\n\") == \"YES\"\nassert solution(\"7 7\\n.X...X.\\n.XX.X.X\\nX..X..X\\n...X...X\\nX.X..X..\\n.X..X...\\n....X...\\n7 6\\n3 2\\n\\n\") == \"YES\"\nassert solution(\"7 7\\n.X...X.\\n.XX.X.X\\nX..X..X\\n...X...X\\nX.X..X..\\n.X..X...\\n....X...\\n7 6\\n3 3\\n\\n\") == \"YES\"\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7') == 'YES'\n\nassert solution('1 6') == 'YES'\n\nassert solution('5 4') == 'NO'\n\nassert solution('5 3') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"4 6\nX...XX\n...XX.\n.X..X.\n......\n1 6\n2 2\n\"\"\") == 'YES'\n\nassert solution(\n\"\"\"5 4\n..X.XX.\n.XX..X.\nX...X..\nX......\n2 2\n1 6\n\"\"\") == 'NO'\n\nassert solution(\n\"\"\"4 7\n..X.XX.\n.XX..X.\nX...X..\nX......\n2 2\n1 6\n\"\"\") == 'YES'\n\n\"\"\"\nhttps://www.codewars.com/kata/5f5a8066ec8dfe9e0f000ca1\n\nIn the first sample test one possible path is:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the second sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the third sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the fourth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the fifth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the sixth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the seventh sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the eighth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the ninth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the tenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the eleventh sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the twelveth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the thirteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the fourteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the fifteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the sixteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the seventeenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the eighteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the nineteenth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the twentieth sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the twenty-first sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell (2, 2) the ice on it cracks and when you step there for the second time, your character falls through the ice as intended.\n\nIn the twenty-second sample test two possible paths are:\n\n[Image]\n\nAfter the first visit of cell"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"YES\"\nassert solution(\"4 6\") == \"YES\"\nassert solution(\"5 7\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n.X..\\n...X\\nX.X.\\n....\\n.XX.\\n5 3\\n1 1\\n\") == \"YES\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 7\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 6\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 6\") == \"YES\"\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'YES'\nassert solution('2 4') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('3 3') == 'NO'\nassert solution('3 5') == 'NO'\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(SAMPLE_INPUT) == SAMPLE_OUTPUT\nprint(solution(INPUT))\n'''\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\nX...XX\\n...XX.\\n.X..X.\\n......\\n1 6\\n2 2\") == \"YES\"\nassert solution(\"5 4\\n.X..\\n...X\\nX.X.\\n....\\n.XX.\\n5 3\\n1 1\") == \"NO\"\nassert solution(\"4 7\\n..X.XX.\\n.XX..X.\\nX...X..\\nX......\\n2 2\\n1 6\") == \"YES\"\nassert solution(\"4 7\\nX.X.\\n.XX..\\nX..X.\\n....\\n.XX.\\n5 3\\n1 1\") == \"NO\"\nassert solution(\"5 5\\nX...X\\n....\\nX.X.\\nX....\\n.XX..\\n1 1\") == \"YES\"\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\\n\") == \"\"\nassert solution(\"3 4\\n\") == \"YES\"\nassert solution(\"2\\n\") == \"YES\"\nassert solution(\"3 4\\n1 1\\n1 1\\n\") == \"YES\"\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('5\\n1') == '4'\nassert solution('7\\n2') == '5'\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n1 5') == '1'\nassert solution('5 2\\n1 4\\n2 5') == '0'\nassert solution('5 2\\n1 2\\n1 4\\n1 5\\n2 5') == '1'\nassert solution('5 2\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n2 3\\n2 5') == '1'\nassert solution('5 2\\n1 2\\n1 3\\n1 4\\n1 5\\n2 4\\n2 3\\n2 5') == '0'\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 4') == 1\nassert solution('3 3\\n1 3\\n2 2') == 2\nassert solution('2 3\\n2 1\\n3 1') == 1\nassert solution('2 3\\n2 1\\n3 2') == 0\nassert solution('2 1\\n3 1') == 0\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '3'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '6'\nassert solution('2 3\\n1 3\\n2 4\\n3 4') == '2'\nassert solution('3 4\\n1 2\\n2 3\\n3 4') == '3'\nassert solution('4 5\\n1 2\\n2 3\\n3 4\\n4 5') == '2'\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 4\\n2 5\") == \"1\"\nassert solution(\"2 4\\n1 4\\n2 5\") == \"2\"\nassert solution(\"1 5\\n1 5\\n2 4\") == \"0\"\nassert solution(\"3 4\\n1 4\\n2 4\\n3 4\") == \"2\"\nassert solution(\"4 3\\n1 3\\n2 4\\n3 4\\n4 3\") == \"2\"\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 2\n1 4\n2 5''') == '1'\n\nassert solution(\n'''6 2\n1 4\n2 5\n3 5\n4 6\n5 4\n''') == '0'\n\nassert solution(\n'''5 2\n1 4\n2 4\n3 4\n4 5\n5 4\n''') == '2'\n\nassert solution(\n'''5 2\n1 3\n2 4\n3 4\n4 5\n5 4\n''') == '1'\n\nassert solution(\n'''5 2\n1 4\n2 5\n3 5\n4 6\n5 4\n''') == '1'"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"first\"\n\n\"\"\"\n\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import permutations"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1\\n2\\n-3\\n-4\\n3\\n') =='second'\nassert solution('3\\n-1\\n-2\\n3\\n') == 'first'\nassert solution('2\\n4\\n-4\\n') =='second'\nassert solution('2\\n4\\n-4\\n') =='second'\nassert solution('2\\n4\\n-4\\n') =='second'\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n2\n-3\n-4\n3''') == 'first'\nassert solution('''3\n-1\n-2\n3''') =='second'\nassert solution('''2\n4\n-4''') == 'first'\nassert solution('''1\n1''') == 'first'\nassert solution('''1\n2''') =='second'\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1\\n2\\n-3\\n-4\\n3') =='second'\nassert solution('3\\n-1\\n-2\\n3') == 'first'\nassert solution('2\\n4\\n-4\\n') =='second'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1\n2\n-3\n-4\n3\n''') =='second'\nassert solution('''\n3\n-1\n-2\n3\n''') == 'first'\nassert solution('''\n2\n4\n-4\n''') =='second'\nassert solution('''\n6\n-1\n-2\n3\n-4\n5\n6\n''') == 'first'\nassert solution('''\n8\n-1\n-2\n3\n-4\n5\n6\n7\n8\n''') == 'first'\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n2\n-3\n-4\n3\n''') == \"first\"\n\nassert solution('''3\n-1\n-2\n3\n''') == \"first\"\n\nassert solution('''2\n4\n-4\n''') == \"second\"\n\nassert solution('''1\n2\n3\n''') == \"first\"\n\nassert solution('''5\n1\n2\n-3\n-4\n5\n''') == \"first\""
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') =='second'\nassert solution('1') == 'first'\nassert solution('2-3') =='second'\nassert solution('-1-2-3') == 'first'\nassert solution('3-2-1') =='second'\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1\\n2\\n-3\\n-4\\n3\\n') == \"second\"\nassert solution('2\\n4\\n-4\\n') == \"first\"\nassert solution('3\\n-1\\n-2\\n3\\n') == \"first\"\nassert solution('3\\n1\\n-1\\n') == \"second\"\nassert solution('3\\n1\\n-2\\n') == \"first\"\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n2\\n-3\\n-4\\n3\") == \"second\"\nassert solution(\"3\\n-1\\n-2\\n3\") == \"first\""
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n2\\n-3\\n-4\\n3') =='second'\nassert solution('3\\n-1\\n-2\\n3') == 'first'\nassert solution('2\\n4\\n-4') =='second'\nassert solution('2\\n4\\n4') == 'first'\nassert solution('2\\n4\\n1') =='second'\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 1 2\n''') == 'YES'\nassert solution('''3\n1 0 1\n''') == 'NO'\nassert solution('''6\n3 3 2 3 2 3\n''') == 'NO'\nassert solution('''6\n3 3 2 3 2 3\n''') == 'NO'\nassert solution('''8\n4 4 3 2 3 3 3 2\n''') == 'YES'\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2 1 2') == 'YES'\nassert solution('2\\n0 1 1 1') == 'NO'\nassert solution('2\\n0 0 0 1') == 'NO'\nassert solution('2\\n1 1 1 1') == 'NO'\nassert solution('2\\n1 1 1 1') == 'YES'\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 1 2''') == 'YES'\nassert solution('''3\n1 0 1''') == 'NO'\nassert solution('''2\n1 0''') == 'NO'\nassert solution('''4\n1 0 1 1''') == 'YES'\nassert solution('''5\n5 4 3 2 1''') == 'YES'\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4\n1 2 1 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"3\n1 0 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"1\n0\n\"\"\") == \"YES\"\nassert solution(\"\"\"100\n0\n\"\"\") == \"YES\"\nassert solution(\"\"\"5\n4 2 3 2 4\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2\\n') == 'YES'\nassert solution('3\\n1 0 1\\n') == 'NO'\nassert solution('3\\n0 1 1\\n') == 'NO'\n\n\n-----\n\nTest.describe('Basic tests')\n\nTest.assertEquals(solution('4\\n1 2 1 2\\n'), 'YES')\nTest.assertEquals(solution('3\\n1 0 1\\n'), 'NO')\nTest."
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 1 2\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3\n1 0 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n4\n1 0 0 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n5\n1 0 0 0 0\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n5\n1 0 0 0 0\n\"\"\") == \"NO\""
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 1 2') == 'YES'\nassert solution('3\\n1 0 1') == 'NO'\nassert solution('2\\n1 0') == 'YES'\nassert solution('3\\n2 2 2') == 'YES'\nassert solution('2\\n1 1') == 'NO'\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 1 2''') == 'YES'\nassert solution('''3\n1 0 1''') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 1 2\n''') == 'YES'\nassert solution('''3\n1 0 1\n''') == 'NO'\nassert solution('''4\n1 2 1 2\n''') == 'NO'\nassert solution('''3\n1 0 1\n''') == 'YES'\nassert solution('''3\n1 0 1\n''') == 'YES'\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abca\") == \"dpedepqbft\"\nassert solution(\"abca\") == \"dpedepqbft\"\nassert solution(\"abca\") == \"dpedepqbft\"\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('c') == 'a'\nassert solution('cc') == 'b'\nassert solution('ccc') == 'a'\nassert solution('cccc') == 'b'\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if n == len(s):\n        print(\"NO\")\n    else:\n        d = {}\n        for i in range(len(s) - 1):\n            if s[i] not in d:\n                d[s[i]] = s[i + 1]\n        for i in range(len(s) - 2, -1, -1):\n            if s[i] not in d:\n                d[s[i]] = s[i + 1]\n        print(\"YES\") if s == s[::-1] else print(\"NO\")\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"codeforces\") == \"YES\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"NO\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"YES\"\nassert solution(\"abccba\") == \"NO\"\nassert solution(\"abccba\") == \"YES\"\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''abcdefg\n''') == 'NO'\nassert solution('''abcdefg\n''') == 'NO'\nassert solution('''abcdefg\n''') == 'NO'\nassert solution('''abcdefg\n''') == 'NO'\nassert solution('''abcdefg\n''') == 'NO'\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('codeforces') == 'YES'\nassert solution('abca') == 'NO'\nassert solution('zz') == 'YES'\nassert solution('abab') == 'YES'\nassert solution('aaa') == 'NO'\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n\n''') == 'YES'\n\nassert solution('''\n5\n7\nabcd\n3\nabcd\n4\nabcd\n8\nabcdef\n2\nabcdefgh\n1\n''') == 'NO'\n\nassert solution('''\n5\n6\nabcd\n3\nabcdef\n4\nabcd\n8\nabcdefgh\n2\nabcdefghi\n1\n''') == 'NO'\n\nassert solution('''\n5\n6\nabcd\n3\nabcdef\n4\nabcd\n8\nabcdefgh\n2\nabcdefghi\n1\n''') == 'NO'\n\nassert solution('''\n5\n6\nabcd\n3\nabcdef\n4\nabcd\n8\nabcdefgh\n2\nabcdefghi\n1\n''') == 'NO'"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml''') == 'YES'\n\nassert solution('''5\n6\nqwert\n2\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml''') == 'NO'\n\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabcdx\n2\nml''') == 'YES'\n\nassert solution('''5\n6\nqwert\n2\nabccba\n2\ncf\n4\nadfa\n8\nabcdx\n2\nml''') == 'NO'\n\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabcdx\n2\nml''') == 'YES'"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cdd') == 'NO'\nassert solution('cf') == 'YES'\nassert solution('ccc') == 'YES'\nassert solution('abc') == 'NO'\nassert solution('am') == 'YES'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'ayd'\nassert solution('''1 0''') == '-1'\nassert solution('''abc\nxyc''') == 'ayd'\nassert solution('''0 0''') == '-1'\nassert solution('''abc\nxyc\n''') == 'ayd'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"ayd\"\nassert solution(stdin) == \"ayd\"\nassert solution(stdin) == \"ayd\""
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2''') == 'ayd'\nassert solution('''1 0''') == '-1'\nassert solution('''abc\nxyc''') == 'ayd'"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nabc\\nxyc') == 'ayd'\nassert solution('2\\nabc\\nxyc') == '-1'\nassert solution('10\\nab\\ncd\\nef\\ngi\\njk\\nmn\\nsv\\ntw\\nyz\\n') =='mn\\nsv\\ntw'\nassert solution('10\\nab\\ncd\\nef\\ngi\\njk\\nmn\\nsv\\ntw\\nyz\\n') =='mn\\nsv\\ntw'\nassert solution('100\\nab\\ncd\\nef\\ngi\\njk\\nmn\\nsv\\ntw\\nyz\\n') =='mn\\nsv\\ntw'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 2''') == 'ayd'\nassert solution('''1 0''') == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3 2\") == \"\"\nassert solution(\"abc\") == \"ayd\"\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2\nabc\nxyc''') == 'ayd'\nassert solution('''1 0\nc\nb''') == '-1'\nassert solution('''3 0\nabc\nxyc''') == '-1'\nassert solution('''3 0\nxab\nxyc''') == '-1'\nassert solution('''3 0\nxab\nbxc''') == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abc', 'xyc') == 'ayd'\nassert solution('abc', 'b') == '-1'\nassert solution('a', 'a') == 'a'\nassert solution('abc', 'xyz') == '-1'\nassert solution('xyc', 'ayd') == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abc', 'xyz', 2) == 'ayd'\nassert solution('abc', 'xyc', 0) == '-1'\nassert solution('abc', 'ab', 1) == '-1'\nassert solution('abc', 'ab', 0) == '-1'\nassert solution('ab', 'abc', 0) == '-1'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abc') == 'ayd'\nassert solution('xyc') == 'ayd'\nassert solution('c') == 'c'\nassert solution('b') == 'b'\nassert solution('abc') == 'ayd'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ab''') == 'YES'\nassert solution('''a?a''') == 'YES'\nassert solution('''abc''') == 'NO'\nassert solution('''a?a?a*''') == 'YES'\nassert solution('''a?a?a*''') == 'NO'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\nab\na?a\n2\naaa\naab\n'''.strip()) == 'YES\\nNO'\n\nassert solution('''\nabc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n'''.strip()) == 'NO\\nYES\\nNO\\nYES'\n\nassert solution('''\nabc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n'''.strip()) == 'NO\\nYES\\nNO\\nYES'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\n\n\n\"\"\"\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"a?a\") == \"NO\"\nassert solution(\"a?ab\") == \"NO\"\nassert solution(\"a?a?a*\") == \"YES\"\nassert solution(\"a?a?a*\") == \"YES\"\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ab') == 'YES'\nassert solution('a?a') == 'NO'\nassert solution('a?a?a*') == 'YES'\nassert solution('abacaba') == 'NO'\nassert solution('abaca') == 'YES'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ab''') == 'YES'\nassert solution('''a?a''') == 'YES'\nassert solution('''aaa''') == 'YES'\nassert solution('''a?a?a*''') == 'YES'\nassert solution('''abacaba''') == 'NO'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''ab\na?a\n2\naaa\naab''') == 'YES\\nNO'\nassert solution('''abc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''abc\na?a?a*\n10\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''abc\na?a?a*\n10\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO\\nYES\\nNO\\nYES'\nassert solution('''abc\na?a?a*\n10\nabacaba\nabaca\napapa\naaaaax\n''') == 'NO\\nYES\\nNO\\nYES'\n\n'''\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"YES\"\nassert solution(\"a?a\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"a?a?a*\") == \"YES\"\nassert solution(\"abacaba\") == \"NO\"\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\ncba\nabc\nbb1\nabC\nABC\nabc''') == '1 15'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\nassert solution('''3 4\naa\nbb\ncc\n''') == '3 4'\nassert solution('''3 4\naa\nbb\ncc\n''') == '3 4'\nassert solution('''3 4\naa\nbb\ncc\n''') == '3 4'\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2\\ncba\\nabc\\nbb1\\nabC\\nABC\\nabc\\n') == '1 15'\nassert solution('4 100\\n11\\n22\\n1\\n2\\n22\\n') == '3 4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '0 0'\nassert solution('1 2') == '1 2'\nassert solution('0 0') == '0 0'\nassert solution('1 1') == '1 1'\nassert solution('1 1 1') == '1 1'\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4\\n4\\n1\\n2\\n4\\n4\\n4\\n4\\n1\\n4\\n1\\n1\\n1\\n1\\n1\\n4\\n4\\n1\\n2\\n1\\n4\\n4\\n4\\n4\\n4\\n4\\n1\\n2\\n2\\n4\\n1\\n4\\n1\\n2\\n4\\n4\\n4\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n4\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"1 15\"\nassert solution(\"4 100\") == \"3 4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2\\n cba\\n abc\\n bb1\\n abC\\n ABC\\n abc\\n') == '1 15'\nassert solution('4 100\\n 11\\n 22\\n 1\\n 2\\n 22\\n') == '3 4'\nassert solution('1\\n1') == '1 1'\nassert solution('7 7') == '0 0'\nassert solution('5 100\\n d\\n c\\n b\\n a\\n') == '0 0'\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\ncba\\nabc\\nbb1\\nabC\\nABC\\nabc\\n\") == \"1 15\"\nassert solution(\"5 100\\n11\\n22\\n1\\n2\\n22\\n\") == \"3 4\"\nassert solution(\"4 100\\n11\\n22\\n1\\n2\\n22\\n\") == \"3 4\"\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n''') == '1 15'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\n"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n''') == '1 15'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\nassert solution('''5 5\nabc\nab1\naa1\na1\n1\n''') == '3 4'\nassert solution('''2 10\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == 'First'\nassert solution('1\\n1\\n') == 'Second'\n\n\n\"\"\"\nfrom sys import stdin,stdout\nn = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\n\ns1 = 0\nfor i in range(n):\n    s1 += a[i]\n    if s1 % 2 == 1:\n        break\nelse:\n    stdout.write('First\\n')\n    exit()\n\nfor i in range(n):\n    s1 -= a[i]\n    if s1 % 2 == 0:\n        stdout.write('First\\n')\n        exit()\nelse:\n    stdout.write('Second\\n')\n    exit()\n\nstdout.write('First\\n')\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 3\") == \"First\"\nassert solution(\"2\\n2 2\") == \"Second\"\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"First\"\nassert solution(\"1\\n3 2\\n\") == \"Second\"\nassert solution(\"2\\n2 2\\n\") == \"Second\"\nassert solution(\"3\\n3 3\\n\") == \"First\"\nassert solution(\"1\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n\") == \"First\"\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == 'First'\nassert solution('1\\n2\\n2\\n3') == 'Second'\nassert solution('1\\n1\\n1\\n1') == 'First'\nassert solution('1\\n2\\n2\\n3') == 'Second'\nassert solution('1\\n2\\n2\\n1') == 'Second'\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"First\"\nassert solution(\"1 3 2 3\") == \"First\"\nassert solution(\"2 2\") == \"Second\"\nassert solution(\"1 3 2 3\") == \"First\"\nassert solution(\"1 3 3 2\") == \"First\"\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 3') == 'First'\nassert solution('2\\n2 2') == 'Second'\nassert solution('2\\n2 2') == 'Second'\nassert solution('3\\n1 3 2 3') == 'First'\nassert solution('4\\n2 1 3 2') == 'First'\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"First\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Second\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Second\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Second\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"Second\"\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n1 3 2 3\n\"\"\") == \"First\"\nassert solution(\"\"\"2\n2 2\n\"\"\") == \"Second\"\nassert solution(\"\"\"7\n1 3 2 6 7\n\"\"\") == \"Second\""
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 3 2 3\n''') == 'First'\n\nassert solution('''\n2\n2 2\n''') == 'Second'\n\nassert solution('''\n2\n2 1\n''') == 'First'\n\nassert solution('''\n4\n1 3 2 3\n''') == 'Second'\n'''\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2') == 'Second'\nassert solution('3\\n1 3 2') == 'First'\nassert solution('3\\n1 3 2\\n2 2') == 'First'\nassert solution('5\\n1 1 2 2 3') == 'First'\nassert solution('4\\n1 2 3 4') == 'Second'\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"2 4\"\nassert solution(\"64\") == \"8 8\"\nassert solution(\"5\") == \"1 5\"\nassert solution(\"999999\") == \"999 1001\"\nassert solution(\"-1\") == \"1 1\"\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('999999') == '999 1001'\nassert solution('99999') == '999 1001'\nassert solution('5') == '1 5'\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8''') == '2 4'\nassert solution('''64''') == '8 8'\nassert solution('''5''') == '1 5'\nassert solution('''999999''') == '999 1001'\n\n'''"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"2 4\"\nassert solution(\"64\") == \"8 8\"\nassert solution(\"5\") == \"1 5\"\nassert solution(\"999999\") == \"999 1001\"\nassert solution(\"1000000000000000000\") == \"999 1001\"\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8''') == '''2 4'''\nassert solution('''64''') == '''8 8'''\nassert solution('''5''') == '''1 5'''\nassert solution('''999999''') == '''999 1001'''\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('999999') == '999 1001'\nassert solution('999999999') == '9999 10001'\nassert solution('9999999999') == '9999 100001'\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8''') == '''2 4'''\nassert solution('''64''') == '''8 8'''\nassert solution('''5''') == '''1 5'''\nassert solution('''999999''') == '''999 1001'''\nassert solution('''1024''') == '''999 999'''"
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\nassert solution('999999999999') == '1 999 999 999 9'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('_i_') == 'No'\nassert solution('0000') == 'No'\nassert solution('LIL0') == 'Yes'\nassert solution('000') == 'No'\nassert solution('O') == 'Yes'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('ooA') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CODeFoRs') == 'Yes'\nassert solution('CODefOrS') == 'No'\nassert solution('Code_Forces') == 'No'\nassert solution
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('test') == 'No'\nassert solution('_it_') == 'No'\nassert solution('1lIl') == 'No'\nassert solution('1l0l') == 'Yes'\nassert solution('1L0l') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000') == 'Yes'\nassert solution('00o') == 'No'\nassert solution('00_Lil') == 'No'\nassert solution('_i_') == 'No'\nassert solution('0Ril') == 'Yes'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('000') == 'No'\nassert solution('00') == 'Yes'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('1') == 'No'\nassert solution('L0') == 'Yes'\nassert solution('LIL') == 'Yes'\nassert solution('0Ril') == 'Yes'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Codeforces') == 'Yes'\nassert solution('Codeforces123') == 'Yes'\nassert solution('123456789012345678901234567890123456789012345678901234567890') == 'Yes'\nassert solution('_A_') == 'Yes'\nassert solution('_a_') == 'No'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('_i_') == 'No'\nassert solution('LIL0') == 'Yes'\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\nimport sys\nfrom typing import List"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('7 5 8 6 9') == 'Yes'\nassert solution('-1 -2 0 0 -5') == 'No'\nassert solution('5') == 'No'\nassert solution('1000000000 0 0 0 0') == 'Yes'\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1 2 3 4 5\") == \"No\"\nassert solution(\"1 2 3 4 5 6 7\") == \"Yes\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"Yes\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"Yes\"\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n7 5 8 6 9\\n') == 'Yes\\n'\nassert solution('5\\n-1 -2 0 0 -5\\n') == 'No\\n'\nassert solution('5\\n1000000000 0 0 0 0\\n') == 'Yes\\n'\n\n\n\"\"\"\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-1') == 'No'\nassert solution('1\\n1') == 'Yes'\nassert solution('1\\n1000000000') == 'Yes'\nassert solution('1\\n1000000000\\n1000000000') == 'Yes'\nassert solution('1\\n1000000000\\n1000000000\\n1000000000') == 'No'\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n7 5 8 6 9\") == \"Yes\"\nassert solution(\"5\\n-1 -2 0 0 -5\") == \"No\"\nassert solution(\"5\\n1000000000 0 0 0 0\") == \"Yes\"\nassert solution(\"5\\n-1000000000 0 0 0 0\") == \"No\"\nassert solution(\"5\\n1000000000 0 0 0 0\") == \"Yes\"\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n7 5 8 6 9''') == 'Yes'\nassert solution('''5\n-1 -2 0 0 -5''') == 'No'\nassert solution('''5\n1000000000 0 0 0 0''') == 'Yes'\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5\\n7 5 8 6 9\\n\") == \"Yes\"\nassert solution(\"5\\n-1 -2 0 0 -5\\n\") == \"No\"\nassert solution(\"5\\n1000000000 0 0 0 0\\n\") == \"Yes\"\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 -1 -2 0\\n') == 'Yes'\nassert solution('4\\n1 10000000 0 0 0\\n') == 'Yes'\nassert solution('3\\n1000000000 0 0\\n') == 'No'\nassert solution('3\\n1000000000 0 0\\n') == 'No'\nassert solution('3\\n1000000000 0 0\\n') == 'No'\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 5\\naabbaa\\nbaaaab\\naaaaa\\naaaab\\nbaaab\\naaaa\\n') == '4\\n'\nassert solution('9 12\\abcabcabc\\xyzxyzxyz\\abcabcayzxyz\\n') == '2\\n'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 5\naabbaa\nbaaaab\naaaaa''') == '4'\nassert solution('''5 4\nazaza\nzazaz\nazaz\n''') == '11'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz''') == '2'\n'''\n\n'''"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\naabbaa\nbaaaab\naaaaa''') == '4'\nassert solution('''5 4\nazaza\nzazaz\nazaz\n''') == '11'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 5\\naabbaa\\nbaaaab\\naaaaa\\n') == '4\\n'\nassert solution('5 4\\nazaza\\nzazaz\\nazaz\\n') == '11\\n'\nassert solution('9 12\\nabcabcabc\\nyzxyzxyz\\nabcabcayzxyz\\n') == '2\\n'\n\n\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 5\naabbaa\nbaaaab\naaaaa''') == '4'\nassert solution('''5 4\nazaza\nzazaz\nazaz\n''') == '11'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\nassert solution('''9 9\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '1'\nassert solution('''12 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\n\n\n'''"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 5\\nabaaaa\\nbaaaaab\\naaaaaa\\n') == '4'\nassert solution('5 4\\nazaza\\nzazaz\\nzazaz\\n') == '11'\nassert solution('9 12\\nabcabcabc\\nyzxyzxyz\\nabcabcayzxyz\\n') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 5\\n'\n                'aabbaa\\n'\n                'baaaab\\n'\n                'aaaaa\\n'\n                '\\n'\n                'azaza\\n'\n                'zazaz\\n'\n                'azaz\\n'\n                '\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                '9 12\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz') == '4'\n\nassert solution('5 4\\n'\n                'azaza\\n'\n                'zazaz\\n'\n                'azaz\\n'\n                '\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                '9 12\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz') == '11'\n\nassert solution('8 5\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                'abccabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                '9 12\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz') == '2'\n\nassert solution('9 12\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                'abccabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz\\n'\n                '\\n'\n                '9 12\\n'\n                'abcabcabc\\n'\n                'xyzxyzxyz\\n'\n                'abcabcayzxyz') == '2'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == str(2)\n'''\n'''\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 5\naabbaa\nbaaaab\naaaaa''') == '4'\nassert solution('''5 4\nazaza\nzazaz\nazaz\n''') == '11'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\n\n'''\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m = [int(x) for x in stdin.readline().split()]\na = stdin.readline().strip()\nb = stdin.readline().strip()\ns = stdin.readline().strip()\n\ndp = [[0] * (m + 1) for _ in range(n + 1)]\n\nfor i in range(n + 1):\n    for j in range(m + 1):\n        if i == 0 or j == 0:\n            dp[i][j] = 0\n        elif a[i - 1] == b[j - 1]:\n            dp[i][j] = dp[i - 1][j - 1] + 1\n        else:\n            dp[i][j] = 0\n\nprint(dp[n][m])\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"1234\\n5678\") == \"3\"\nassert solution(\"123456\") == \"0\"\nassert solution(\"090909\") == \"9\"\nassert solution(\"111111\") == \"0\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"111111\") == \"0\"\nassert solution(\"211111\") == \"1\"\nassert solution(\"999999\") == \"3\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"123456\") == \"2\"\nassert solution(\"111111\") == \"0\"\nassert solution(\"1234567\") == \"6\"\nassert solution(\"12345678\") == \"1\"\nassert solution(\"123456789\") == \"0\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123465\") == \"1\"\nassert solution(\"123445\") == \"0\"\nassert solution(\"455521\") == \"1\"\nassert solution(\"121314\") == \"1\"\nassert solution(\"121212\") == \"2\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"012345\") == \"\"\nassert solution(\"112345\") == \"2\"\nassert solution(\"0123456\") == \"2\"\nassert solution(\"01234567\") == \"3\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"123465\") == \"2\"\nassert solution(\"001111\") == \"1\"\nassert solution(\"00000000000000\") == \"0\"\nassert solution(\"111111111111111\") == \"2\"\nassert solution(\"11111111111111\") == \"1\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"000000\") == \"0\"\nassert solution(\"999999\") == \"0\"\nassert solution(\"111222\") == \"0\"\nassert solution(\"001111\") == \"1\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('090909') == '1'\nassert solution('211222') == '2'\nassert solution('212111') == '2'\nassert solution('222222') == '3'\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"000000\") == \"0\"\nassert solution(\"999100\") == \"1\"\nassert solution(\"999999\") == \"2\"\nassert solution(\"111111\") == \"0\"\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1234') == '2'\nassert solution('12345') == '2'\nassert solution('123465') == '0'\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"1 -2 1 3 -4\") == \"7\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"4 5\") == \"16\"\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n\"\"\") == \"7\"\nassert solution(\"\"\"4 3\n1 2 3 4\n1 3\n2 4\n1 1\n\"\"\") == \"16\"\nassert solution(\"\"\"2 2\n-1 -2\n1 1\n1 2\n\"\"\") == \"0\"\n\"\"\"\nWhat is the best score?\n\"\"\""
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4\\n1 -2 1 3 -4\\n1 2\\n4 5\\n3 4\\n1 4\\n') == '7'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 4\\n1 1\\n') == '16'\nassert solution('2 2\\n-1 -2\\n1 1\\n1 2\\n') == '0'\nassert solution('3 3\\n1 1 1 1\\n2 2 2\\n2 2 2\\n1 1 1\\n') == '0'\n\n\n\"\"\""
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 4\\n1 1\\n\") == \"16\"\nassert solution(\"5 5\\n1 -2 1 3 -4\\n1 2\\n4 5\\n3 4\\n1 4\\n\") == \"16\"\nassert solution(\"2 2\\n-1 -2\\n1 1\\n1 2\\n\") == \"0\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 4\\n1 1\\n\") == \"16\"\nassert solution(\"5 5\\n1 -2 1 3 -4\\n1 2\\n4 5\\n3 4\\n1 4\\n\") == \"16\"\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n\n2 2\n-1 -2\n1 1\n1 2\n''')) == '7'\n\nassert solution(input('''3 2\n1 -2 1\n1 2\n1 2\n\n1 1\n1 2\n1 2\n\n2 2\n2 2\n2 2\n''')) == '0'\n\nassert solution(input('''2 2\n-1 -2\n1 1\n1 2\n\n1 1\n1 2\n1 2\n\n1 1\n1 2\n1 2\n''')) == '0'\n\n\n\nfrom sys import stdin\n\nn, m = stdin.readline().split()\nn = int(n)\nm = int(m)\nflowers = map(int, stdin.readline().split())\nsubarrays = [map(int, stdin.readline().split()) for _ in range(m)]"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4'''\n) == '7'\n\nassert solution(\n'''2 2\n-1 -2\n1 1\n1 2'''\n) == '0'\n\nassert solution(\n'''4 4\n1 2 3 4\n1 3\n2 4\n1 1'''\n) == '16'\n\nassert solution(\n'''8 4\n-1 -2 -3 -4 -5 -6 -7 -8'''\n) == '0'\n\nassert solution(\n'''3 3\n1 2 3 4\n1 3\n2 4\n1 1'''\n) == '16'"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\nassert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '16'\nassert solution('''3 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '0'\n'''\nn, m = [int(x) for x in stdin.readline().split()]\nflowers = [int(x) for x in stdin.readline().split()]\nsubarrays = []\nfor i in range(m):\n    start, end = [int(x) for x in stdin.readline().split()]\n    subarrays.append((start, end))\nflowers = [flowers[i] for i in range(n) if i + 1 in range(start, end + 1)]"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\n'''\n2\n-1\n1\n1\n'''\nassert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n-2\\n1\\n3\\n-4\\n') == '7'\nassert solution('1\\n2\\n4\\n5\\n3\\n1\\n1\\n3\\n2\\n4\\n5\\n4\\n5\\n4\\n5\\n3\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'\nassert solution('123456789') == '22'\nassert solution('1234') == '333'\nassert solution('123789') == '1237'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(27) == \"22\"\nassert solution(4545) == \"4444\"\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('27') == '22'\nassert solution('4545') == '4444'\nassert solution('5357') == '5536'\nassert solution('1234') == '1234'\nassert solution('10000') == '10000'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '2469'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('22') == '22'\nassert solution('27') == '22'\nassert solution('4545') == '4444'\nassert solution('15') == '0'\nassert solution('101') == '1'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('10') == '0'\nassert solution('1') == '9'\nassert solution('1000') == '999'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('4545') == '4444'\nassert solution('6') == '5'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''27''') == ''\nassert solution('''4545''') == ''\nassert solution('''100''') == ''\nassert solution('''7''') == '7'\nassert solution('''123''') == '12'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\nassert solution('2 4 10') == '2 4 8 16'\nassert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\nassert solution('1 1 1') == '1'\nassert solution('1 10 -1') == '-1'\nassert solution('1 10 9') == '1'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 10 2''') == '1 2 4 8'\nassert solution('''2 4 5''') == '-1'\nassert solution('''7 10 4''') == '1 2 4 8'\nassert solution('''1 1 2''') == '1'\nassert solution('''1 100 100''') == '-1'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\nassert solution('1 10 10') == '1'\nassert solution('1 1 2') == '1'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\nassert solution(\"1 10 2\") == \"1 2 4 8\"\nassert solution(\"2 4 5\") == \"-1\"\nassert solution(\"1 10 2\") == \"1 2 4 8\"\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 10 2''') == '''1 2 4 8 '''\nassert solution('''2 4 5''') == '''-1 '''\n\n'''\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10 2') == '1 2 4 8'\nassert solution('2 4 5') == '-1'\nassert solution('2 4 1') == '-1'\nassert solution('3 4 5') == '1 2 4 8'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 10 2''') == '1 2 4 8'\nassert solution('''2 4 5''') == '-1'\n\n'''\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 10 2\") == \"1 2 4 8\\n\"\nassert solution(\"2 4 5\") == \"-1\"\nassert solution(\"3 4 6\") == \"3 4 6\\n\"\nassert solution(\"4 5 6\") == \"-1\\n\"\nassert solution(\"3 4 3\") == \"3\\n\"\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == 'YES'\nassert solution('3 7') == 'NO'\n\n-----\n\nclass Solution:\n    def isTeleport(self, n, m, a, b, x, y):\n        if a > b:\n            a, b = b, a\n        if x > y:\n            x, y = y, x\n        if a < x:\n            return False\n        for i in range(n):\n            if a[i] >= x:\n                if a[i] > y or b[i] < y:\n                    return False\n                if a[i] < y and b[i] > y:\n                    return False\n                elif a[i] < y and b[i] == y:\n                    return True\n        return True\n    \n    \n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n0 2\n2 4\n3 5''') == 'YES'\nassert solution('''3 7\n0 4\n2 5\n6 7''') == 'NO'\nassert solution('''2 3\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == 'NO'\n'''\n\n\n'''\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n0 2\n2 4\n3 5\n''') == 'YES'\n\nassert solution('''\n3 7\n0 4\n2 5\n6 7\n''') == 'NO'\n'''"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 4\\n3 5\") == \"YES\"\nassert solution(\"2 7\\n0 4\\n2 5\\n6 7\") == \"NO\"\nassert solution(\"3 4\\n0 2\\n2 4\\n3 5\") == \"YES\"\nassert solution(\"1 1\\n1 1\") == \"YES\"\nassert solution(\"1 5\\n1 5\") == \"YES\"\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 2\n2 4\n3 5''') == 'YES'\nassert solution('''0 4\n2 5\n3 5''') == 'NO'\nassert solution('''0 4\n2 5\n1 6\n0 8\n''') == 'YES'\nassert solution('''1 5\n1 5\n1 5\n''') == 'NO'\nassert solution('''1 2\n1 2\n1 2\n''') == 'NO'\n'''\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 2\n2 4\n3 5''') == 'YES'\nassert solution('''0 4\n2 5\n6 7''') == 'NO'\nassert solution('''2 5\n0 4\n2 5\n6 7''') == 'NO'\nassert solution('''2 7\n0 4\n2 5\n6 7''') == 'YES'\nassert solution('''0 7\n0 4\n2 5\n6 7''') == 'NO'\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 2\n2 4\n3 5''') == 'YES'\nassert solution('''0 4\n2 5\n3 5\n''') == 'YES'\nassert solution('''0 4\n2 5\n2 7\n6 7\n''') == 'NO'\nassert solution('''0 4\n2 5\n2 8\n6 7\n''') == 'YES'\nassert solution('''0 4\n2 5\n2 8\n6 8\n''') == 'YES'\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"0 2\n2 4\n3 5\"\"\") == \"YES\"\nassert solution(\"\"\"0 4\n2 5\n6 7\n\"\"\") == \"NO\"\nassert solution(\"\"\"0 4\n0 4\n2 5\n6 7\n\"\"\") == \"NO\"\nassert solution(\"\"\"0 4\n1 4\n2 5\n6 7\n\"\"\") == \"NO\"\nassert solution(\"\"\"0 4\n1 4\n0 4\n2 5\n6 7\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n0 2\\n2 4\\n3 5\") == \"YES\"\nassert solution(\"3 7\\n0 4\\n2 5\\n6 7\") == \"NO\"\nassert solution(\"3 5\\n0 2\\n2 4\\n3 5\") == \"YES\"\nassert solution(\"3 7\\n0 4\\n2 5\\n6 7\") == \"NO\"\nassert solution(\"3 7\\n0 4\\n2 5\\n6 7\") == \"NO\"\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n0 2\\n2 4\\n3 5\") == \"YES\"\nassert solution(\"3 7\\n0 4\\n2 5\\n6 7\") == \"NO\"\n\"\"\"\n\nn, m = map(int, stdin.readline().split())\nl = []\nfor _ in range(n):\n    l.append(tuple(map(int, stdin.readline().split())))"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 4 1') == '9'\nassert solution('3 4 4') == '12'\nassert solution('5 4 2') == '19'\nassert solution('10 8 3') == '361'\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"6\"\nassert solution(\"3 4 2\") == \"15\"\nassert solution(\"3 4 4\") == \"31\"\nassert solution(\"10 10 10\") == \"4483795\"\nassert solution(\"20 10 5\") == \"41546221\"\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 2 1') == '6'\nassert solution('3 2 4') == '0'\nassert solution('3 2 7') == '1'\nassert solution('3 2 10') == '4'\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 1') == '6'\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '6'\nassert solution('1 2 1') == '6'\nassert solution('2 3 1') == '2'\nassert solution('3 3 1') == '4'\nassert solution('3 3 2') == '4'\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 2 1') == '6'\nassert solution('3 2 1') == '6'\n\"\"\"\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '6'\nassert solution('3 1 2') == '6'\nassert solution('3 2 1') == '6'\nassert solution('3 2 1') == '6'\nassert solution('3 1 2') == '6'\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\") == \"6\"\nassert solution(\"3 2 2\") == \"8\"\nassert solution(\"3 2 3\") == \"10\"\nassert solution(\"3 2 4\") == \"12\"\nassert solution(\"3 2 5\") == \"15\"\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\") == \"6\"\nassert solution(\"4 2 4\") == \"28\"\nassert solution(\"5 2 1\") == \"56\"\nassert solution(\"5 3 2\") == \"56\"\nassert solution(\"5 4 2\") == \"130\"\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 0\") == \"1 1\"\nassert solution(\"2\\n1 1\") == \"0 1\"\nassert solution(\"2\\n1 0 1\") == \"0 1\"\nassert solution(\"3\\n1 0 0 1\") == \"0 1 1\"\nassert solution(\"2\\n1 1\") == \"1 0\"\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1 0''') == '1 1'\n'''\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0') == '1 1'\nassert solution('2 0') == '1 1'\nassert solution('2 1 0') == '1 2'\nassert solution('2 1 1 0') == '1 2'\nassert solution('2 1 1 1 0') == '1 3'\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    input(\"p: \")\n    + input(\"a_0 a_1 \\ldots a_{p-1}: \")) == \"1 1\"\n\nassert solution(\n    input(\"p: \")\n    + input(\"a_0 a_1 \\ldots a_{p-1}: \")) == \"0 1\"\n\nassert solution(\n    input(\"p: \")\n    + input(\"a_0 a_1 \\ldots a_{p-1}: \")) == \"1 0\"\n\nassert solution(\n    input(\"p: \")\n    + input(\"a_0 a_1 \\ldots a_{p-1}: \")) == \"1 1\"\n\nassert solution(\n    input(\"p: \")\n    + input(\"a_0 a_1 \\ldots a_{p-1}: \")) == \"0 0\""
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1 1'"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 0\\n2 1') == '1 1'\nassert solution('1 0\\n2 1\\n3 1') == '1 1 1'\nassert solution('1 0\\n2 1\\n3 1\\n4 1') == '1 1 1 1'\nassert solution('1 0\\n2 1\\n3 1\\n4 1\\n5 1') == '1 1 1 1 1'\nassert solution('1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 0\") == \"1 1\"\nassert solution(\"2\\n0 1\") == \"0 1\"\nassert solution(\"2\\n1 0\") == \"0 1\"\nassert solution(\"2\\n1 0\") == \"0 1\"\nassert solution(\"2\\n1 0\") == \"0 1\"\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 0') == '1 1'\nassert solution('2\\n0 1') == '1 1'\nassert solution('1\\n0') == '1 1'\nassert solution('2\\n1 0') == '1 1'\nassert solution('2\\n0 1') == '1 1'\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nimport sys\n\nstdin = sys.stdin.read()\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\nS...\n....\n..S.\n''') == '8'\n'''\n\nassert solution('''3 4\n.S...\n....\n..S.\n''') == '8'\n'''\n\nassert solution('''3 4\nS....\nS....\n..S.\n''') == '8'\n'''\n\nassert solution('''3 4\nS...\n....\n..S.\n''') == '8'\n'''\n\nassert solution('''2 2\nS..\n..\n''') == '1'"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\nS...\n....\n..S.\n''') == '8'\n\nassert solution('''\n4 4\nS...\n....\n..S.\n...S\n''') == '4'\n\n\n\"\"\""
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\nS...\\n....\\n..S.\\n') == '8'\nassert solution('5 5\\nS..S\\n....\\n....\\n....\\n....\\n') == '15'\nassert solution('3 4\\nSS..\\n....\\n..S.\\n') == '6'\nassert solution('3 4\\n..S\\n....\\n..S.\\n') == '6'\nassert solution('5 5\\nS..S\\nS.SS\\n....\\n....\\n....\\n....\\n') == '15'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\"\nInput\n5 5\n....\n...S.\n.S..\n....\nS...\n.S..\n\nOutput\n16\n\"\"\"\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\nS....\\n....\\n..S.\\n') == 8\n\n\n\"\"\"\n\n\"\"\"\n\u5230\u6b64\u4f4d\u7f6e\uff0c\u4e00\u4e2a\u95ee\u9898\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5982\u679c\u8f93\u5165\u7684\u683c\u5b50\u662fS\uff0c\u4e14\u5728i\u884cj\u5217\u4e0a\u6709S\uff0c\u90a3\u4e48\u5728\u540e\u9762\u7684\u6bcf\u4e00\u884c\u90fd\u4f1a\u628aS\u5305\u56f4\u6210\u767d\u8272\u683c\u5b50\uff0c\u800c\u8fd9\u91cc\u53ea\u80fd\u628aS\u5305\u56f4\u6210\u767d\u8272\u683c\u5b50\uff0c\u6ca1\u6709\u610f\u4e49\n\u4e0b\u4e00\u6b65\u5c31\u662f\u5982\u679c\u8f93\u5165\u7684\u683c\u5b50\u662fS\uff0c\u4e14\u5728i\u884cj\u5217\u4e0a\u6ca1\u6709S\uff0c\u90a3\u4e48\u5728\u540e\u9762\u7684\u6bcf\u4e00\u884c\u90fd\u4f1a\u628aS\u5305\u56f4\u6210\u7070\u8272\u683c\u5b50\uff0c\u800c\u8fd9\u91cc\u53ea\u80fd\u628aS\u5305\u56f4\u6210\u7070\u8272\u683c\u5b50\uff0c\u6ca1\u6709\u610f\u4e49\n\n\"\"\"\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"8\"\n\"\"\"\n\n\"\"\"\nYour solution\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\nS...\\n....\\n..S.\\n') == 8\nassert solution('2 3\\n.S\\n.\\n') == 3\nassert solution('2 3\\nS..\\n..\\n') == 2\nassert solution('2 4\\nS...\\n...\\n...\\n') == 9\nassert solution('2 3\\n..S\\n..\\n') == 3\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 1 7''') == '2\\n-2 10'\nassert solution('''1\n10''') == '-1'\nassert solution('''4\n1 3 5 9''') == '1\\n7'\nassert solution('''2\n2 4''') == '3'\nassert solution('''2\n4 3 4 5''') == '0'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n4 1 7''') == '2\\n-2 10\\n'\nassert solution('''1\n10''') == '-1\\n'\nassert solution('''4\n1 3 4 5''') == '1\\n3\\n'\nassert solution('''2\n2 4''') == '0\\n3\\n6\\n'\nassert solution('''4\n1 3 4 5''') == '3\\n'"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n4 1 7''') == '2\\n-2 10\\n'\nassert solution('''1\n10\n''') == '-1\\n'\nassert solution('''4\n4 3 4 5''') == '1\\n7\\n'\nassert solution('''2\n2 4''') == '3\\n0 3 6\\n'\nassert solution('''3\n1 3 5 9''') == '0\\n7\\n'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4 1 7''') == '2\\n-2 10\\n'\nassert solution('''1\n10\n''') == '-1\\n'\nassert solution('''4\n4 3 4 5\n''') == '0\\n7\\n0 3 6\\n'\nassert solution('''2\n2 4\n''') == '3\\n0 3 6\\n'\nassert solution('''3\n1 3 5 9\n''') == '0\\n1 2 3\\n'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4 1 7\n''') == '2\\n-2 10'\nassert solution('''1\n10\n''') == '-1'\nassert solution('''4\n1 3 5 9\n''') == '1\\n7'\nassert solution('''4\n4 3 4 5\n''') == '0'\nassert solution('''2\n2 4\n''') == '3\\n0 3 6'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4 1 7\n''') == '-1'\nassert solution('''1\n10\n''') == '-1'\nassert solution('''4\n1 3 5 9\n''') == '0'\nassert solution('''4\n4 3 4 5\n''') == '1'\nassert solution('''2\n2 4\n''') == '3'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('1\\n0') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('4\\n1 3 5 9') == '1'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('1') == ''\nassert solution('1 1') == '0'\nassert solution('2') == '0 1'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '0\\n3'\nassert solution('2\\n2\\n') == '0'\nassert solution('1\\n1\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('1\\n3\\n') == '1'\n"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1 7\\n') == '2\\n-2 10'\nassert solution('1\\n10\\n') == '-1'\nassert solution('4\\n1 3 5 9\\n') == '0'\nassert solution('4\\n4 3 4 5\\n') == '1'\nassert solution('2\\n2 4\\n') == '3'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n4 5''') == 'YES'\nassert solution('''3\n1 2\n2 3\n2 3\n1 2\n''') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'NO'\nassert solution('1 2\\n1 3') == 'YES'\nassert solution('1 2\\n1 3\\n2 3') == 'NO'\nassert solution('1 2\\n2 3\\n1 3') == 'NO'\nassert solution('1 2\\n2 3\\n1 3\\n2 3') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"3\n1 2\n2 3\n4 5\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"3\n1 2\n2 3\n4 5\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"2\n1 2\n2 3\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"3\n1 2\n1 3\n2 3\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n2 3\n4 5''') == 'YES'\nassert solution('''4\n1 2\n2 3\n2 3\n1 2''') == 'NO'\nassert solution('''10\n3 9\n4 5\n2 3\n3 4\n5 6\n6 7\n4 8\n5 9\n5 10\n6 11\n6 12''') == 'NO'\nassert solution('''11\n1 2\n2 3\n2 3\n3 4\n2 2\n2 2\n2 2\n2 2\n2 2\n3 3\n4 4\n3 4\n3 4\n3 4\n3 4\n4 5\n4 5''') == 'YES'\nassert solution('''2\n0 0\n1 1\n1 2''') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\\n2 3\") == \"NO\"\nassert solution(\"1 2\\n2 3\\n1 2\") == \"NO\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"YES\"\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\n2 3\n4 5''') == 'YES'\nassert solution('''1 2\n2 3\n2 3\n1 2\n''') == 'NO'\n\nassert solution('''1 2\n2 3\n4 5\n3 2\n1 2\n2 3\n3 5\n5 6\n''') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n4 5\n''') == 'YES'\nassert solution('''4\n1 2\n2 3\n2 3\n1 2\n''') == 'NO'\nassert solution('''1\n0 0\n''') == 'YES'\nassert solution('''2\n0 0\n1 0\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n4 5\n''') == 'NO'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\\n2 3\") == \"NO\"\nassert solution(\"1 2\\n2 3\\n4 5\") == \"YES\"\nassert solution(\"2\\n1 2\\n2 3\") == \"NO\"\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''3\n1 2\n2 3\n4 5'''\n) == 'YES'\n\nassert solution(\n'''1\n2\n2\n3'''\n) == 'NO'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000029') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"2 3 4\"\nassert solution(\"10 11\") == \"-1\"\nassert solution(\"900000000000000009 900000000000000029\") == \"900000000000000009 900000000000000010 900000000000000021\"\nassert solution(\"900000000000000009 900000000000000010 900000000000000021\") == \"900000000000000009 900000000000000010 900000000000000021\""
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '-1'\nassert solution('1 1') == '1'\nassert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000029') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 8') == '2 3 4'\nassert solution('1 1') == '-1'\nassert solution('5 8') == '2 3 4'\nassert solution('8 9') == '2 3 4'\nassert solution('8 10000000') == '2 3 4'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"900000000000000009 900000000000000010 900000000000000021\"\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000029') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('900000000000000009 900000000000000029 900000000000000010 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('900000000000000009 900000000000000029 900000000000000010 900000000000000021 900000000000000013 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('900000000000000009 900000000000000029 900000000000000010 900000000000000021 900000000000000013 900000000000000021 900000000000000012') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000029') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"2 3 4\"\nassert solution(\"10 11\") == \"-1\"\nassert solution(\"900000000000000009 900000000000000029\") == \"900000000000000009 900000000000000010 900000000000000021\"\nassert solution(\"900000000000000029 900000000000000010 900000000000000021\") == \"900000000000000009 900000000000000010 900000000000000021\"\nassert solution(\"900000000000000009 900000000000000029\") == \"900000000000000009 900000000000000010 900000000000000021\"\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"5 10\") == \"-1\"\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 4''') == '2 3 4'\nassert solution('''2 4''') == '-1'\nassert solution('''10 11''') == '9 100 101'\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 4\n1 1 1\n\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"\n3 4\n3 1 3\n\"\"\"\n) == 'NO'\n\nassert solution(\n\"\"\"\n3 4\n4 4 4\n\"\"\"\n) == 'YES'\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('2 2 2') == 'YES'\nassert solution('2 1 2') == 'NO'\nassert solution('3 3 3') == 'YES'\nassert solution('3 2 3') == 'NO'\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('3 1 3') == 'YES'\nassert solution('4 4 4') == 'NO'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n1 1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n4 4 4\\n\") == \"NO\"\nassert solution(\"3 3\\n1 1 1\\n\") == \"NO\"\nassert solution(\"3 4\\n3 1 3\\n\") == \"YES\"\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\\n4 4 4\") == \"NO\"\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n1 1 1\n''') == 'YES'\n\nassert solution('''3 4\n3 1 3\n''') == 'YES'\n\nassert solution('''3 4\n3 4 4\n''') == 'YES'\n\nassert solution('''3 4\n1 1 1\n''') == 'NO'\n\nassert solution('''3 4\n3 4 4\n''') == 'NO'"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == 'YES'\nassert solution('2 1 3 4 5 6 7 8 9 10') == 'NO'\nassert solution
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 1 1\\n') == 'YES'\nassert solution('3 4\\n3 1 3\\n') == 'YES'\nassert solution('3 4\\n4 4 4\\n') == 'NO'\nassert solution('1 1 1\\n') == 'YES'\nassert solution('3 4\\n1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('13 2 1') == '4'\nassert solution('4 7 4') == '4'\nassert solution('15 4 7') == '9'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 13 9') == '24'\nassert solution('13 3 6') == '9'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('7 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 13 9\") == \"24\"\nassert solution(\"13 3 6\") == \"9\"\nassert solution(\"100 100 100\") == \"0\"\nassert solution(\"13 3 6\") == \"9\"\nassert solution(\"13 13 13\") == \"0\"\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('5 1 4') == '6'\nassert solution('1 2 3') == '6'\nassert solution('0 1 2') == '6'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('3 4 5') == '6'\nassert solution('13 3 6') == '9'\nassert solution('1 2 3') == '6'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\nassert solution('1 1 1') == '1'\nassert solution('0 0 0') == '0'\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('5 4 3') == '4'\nassert solution('2 3 3') == '2'\nassert solution('2 2 1') == '2'\nassert solution('2 2 2') == '3'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('5 4 3') == '4'\nassert solution('2 3 3') == '2'\nassert solution('5 4 3') == '2'\nassert solution('2 3 3') == '2'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\nassert solution('3 3 3') == '2'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\nassert solution('2 3 2') == '0'\nassert solution('3 2 2') == '-1'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\"\n\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 3') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 9''') == '8'\nassert solution('''2\n2 999995''') == '5'\nassert solution('''5\n2229800\n759985''') == '89'\nassert solution('''6\n11\n12\n5\n17\n18\n2''') == '20'\nassert solution('''3\n2 3 4''') == '1'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3 9') == '8'\nassert solution('2\\n2 999995') == '5'\n\"\"\"\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n2 3 9''') == '8'\nassert solution('''2\n2 999995''') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 9') == '8'\nassert solution('2\\n2 999995') == '5'\nassert solution('3\\n2 3 9') == '8'\nassert solution('2\\n2 999995') == '5'\nassert solution('9\\n2 3 9') == '9'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3 9''') == '8'\nassert solution('''2\n2 999995''') == '5'\nassert solution('''5\n2 999995''') == '5'\nassert solution('''5\n1 2 3 4 5''') == '4'\nassert solution('''10\n2 999995''') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 3 9''') == '8'\nassert solution('''2\n2 999995''') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2 999995') == '5'\nassert solution('3\\n2 3 9') == '8'\nassert solution('1\\n2 999995') == '5'\nassert solution('1\\n2 999995\\n3 999994') == '5'\nassert solution('1\\n2 999995\\n3 999994\\n4 999993') == '5'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 9\") == \"8\"\nassert solution(\"2\\n2 999995\") == \"5\"\nassert solution(\"2\\n2 9999999\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\") == \"1\"\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1\\n'\nassert solution('2\\n1\\n') == '1\\n'\nassert solution('2\\n2\\n') == '2\\n'\nassert solution('3\\n1\\n') == '2\\n'\nassert solution('3\\n2\\n') == '1\\n'\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 9\") == \"8\"\nassert solution(\"2\\n2 999995\") == \"5\"\nassert solution(\"1\\n9999999\") == \"9\"\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"20\"\nassert solution(\"2\") == \"680\"\nassert solution(\"3\") == \"60\"\nassert solution(\"4\") == \"240\"\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\nassert solution('3') == '33100'\nassert solution('4') == '1789514'\nassert solution('5') == '13652222'\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\") == '20'\nassert solution(\"2\") == '680'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '7'\nassert solution(\"5\") == '0'\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"20\"\nassert solution(\"2\") == \"680\"\nassert solution(\"10\") == \"17320\"\nassert solution(\"100\") == \"547655\"\nassert solution(\"1000\") == \"354495668\"\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '680'\n\"\"\"\n\nimport sys\nfrom math import factorial"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 9\nassert solution('3') == 45\nassert solution('4') == 18\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 20\nassert solution('2') == 680\n\n\"\"\""
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '20'\nassert solution('2\\n') == '680'\nassert solution('4\\n') == '37600'\n\n\"\"\"\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aa\") == \"1\"\nassert solution(\"koko\") == \"0\"\nassert solution(\"murat\") == \"-1\""
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"kkko\") == \"0\"\nassert solution(\"kkk\") == \"-1\"\nassert solution(\"kk\") == \"-1\"\nassert solution(\"k\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aa') == '1'\nassert solution('koko') == '2'\nassert solution('murat') == '0'\nassert solution('aabcd') == '2'\nassert solution('kokohooo') == '3'\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\\n\")) == \"\"\nassert solution(input(\"\\n\\n\")) == \"\"\nassert solution(input(\"koko\")) == \"\"\nassert solution(input(\"m\")) == \"-1\"\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aa') == '1'\nassert solution('koko') == '2'\nassert solution('murat') == '0'\nassert solution('aaaaa') == '-1'\nassert solution('bab') == '1'\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aa') == '1'\nassert solution('koko') == '2'\nassert solution('murat') == '0'\nassert solution('abcd') == '-1'"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"koko\") == 0\nassert solution(\"aa\") == 1\nassert solution(\"murat\") == 2\nassert solution(\"koko\") == 1\nassert solution(\"bb\") == -1\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\n-----\n\nThe following input is just to check that your solution is correct when given as a hint.\n\n2\naa\n\nOutput\n1\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\nOutput\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n\"\"\"\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('9 7') == 'Vladik'\nassert solution('8 6') == 'Valera'\nassert solution('8 7') == 'Vladik'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\n\nprint('solution')\nprint(solution(stdin))\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Valera'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('8 3') == 'Vladik'\nassert solution('10 9') == 'Valera'\nassert solution('1 1') == 'Vladik'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Valera'\nassert solution('7 6') == 'Vladik'\n\"\"\""
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Valera'\nassert solution('7 6') == 'Vladik'\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('7 6') == 'Vladik'\nassert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Valera'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\nassert solution('7 6') == 'Vladik'\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\nFor C programmers: because the testing tool is C compiler, add -std=c99 and -Wall in your cflags. Also, because different languages have different expression of '==', you have to use strict inequality here i.e. '!=' instead of '=='.\nYou can use the free online IDE or the offline IDE provided by Coursera Platform.\n\"\"\""
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"(()())\", \"1st example\"\nassert solution(input()) == \"(()())(),()\", \"2nd example\"\nassert solution(input()) == \":(\", \"3rd example\"\nassert solution(input()) == \":(\", \"4th example\"\nassert solution(input()) == \":)\", \"5th example\"\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('(((??(?))))') == '(()())'\nassert solution('(??(???(??(?))))') == '(()())'\nassert solution('(((((((((((((??(??))))))))))))))') == '(()())'\nassert solution('()()') == '()()'\nassert solution('()') == '()'\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n\nprint(solution(stdin))\n\nprint(solution(stdin))\n\nprint(solution(stdin))\n\nprint(solution(stdin))\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"(()()\") == \"(()())\", \"test 1\"\nassert solution(\"(()())\") == \"(()())\", \"test 2\"\nassert solution(\"(()())\") == \"(()())\", \"test 3\"\nassert solution(\"(()())(\") == \"(((())))\", \"test 4\"\nassert solution(\"(((())))\") == \"(())()\", \"test 5\"\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('()())') == '(()())'\nassert solution('(()())') == '(()())'\nassert solution('(???(???(?))') == '(()())'\nassert solution('(??(??(??(??(???))))') == '(()())'\nassert solution('(((())))') == '((()()))'\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('(()())') == '(()()())'\nassert solution('(())') == '(()())'\nassert solution('(???(???(?))' == '((()(()()))'\nassert solution('(???)') == ':('\nassert solution('(???????))') == ':('\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('(???(??' + ')') == '(()())'\nassert solution('(??)') == '()'\nassert solution('(??(??' + ')') == '((()())(())()'\nassert solution('(??(??(??' + ')') == '(((()())(())())(()()()))'\nassert solution('(??(??(??(??(??' + ')') == '((((((()()()((((()()()())((()()()())))'\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('(') == '()'\nassert solution('()') == '()'\nassert solution('(()') == '(())'\nassert solution('(()()())') == '(()()())'\nassert solution('(()()((((()))))') == '(()()((((()))))'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 1000000000\\n10 -9 -3 5\") == \"3\"\nassert solution(\"3 12\\n10 -9 -3 5\") == \"2\"\nassert solution(\"2 20\\n14 -7 19\") == \"0\"\n\n\n\"\"\""
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3 1000000000\"\"\") == \"3\"\n\nassert solution(\n\"\"\"3 12\"\"\") == \"2\"\n\nassert solution(\n\"\"\"2 20\"\"\") == \"0\"\n\nassert solution(\n\"\"\"14 -7 19\"\"\") == \"0\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5\\n') == '3'\nassert solution('3 12\\n10 -9 -3 5\\n') == '2'\nassert solution('2 20\\n14 -7 19\\n') == '0'\n'''\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 10\\n10 -9 -3 5') == '3'\nassert solution('2 20\\n14 -7 19') == '0'\nassert solution('3 1000000000\\n10 -9 -3 5') == '3'\nassert solution('3 12\\n10 -9 -3 5') == '2'\nassert solution('3 12\\n10 -9 -3 5') == '2'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1000000000') == '1'\nassert solution('1 1\\n1 1') == '1'\nassert solution('1 1000000000\\n1 1') == '1'\nassert solution('1 1000000000\\n1 1') == '1'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('10 -9 -3 5') == '3'\nassert solution('3 1000000000') == '3'\nassert solution('10 -9 -3 5') == '3'\nassert solution('3 12') == '2'\nassert solution('2 20') == '0'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '0'\nassert solution('2 2') == '2'\nassert solution('3 1') == '0'\nassert solution('3 2') == '2'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5') == '3'\nassert solution('3 12\\n10 -9 -3 5') == '2'\nassert solution('2 20\\n14 -7 19') == '0'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5\\n') == '3'\nassert solution('3 12\\n10 -9 -3 5\\n') == '2'\nassert solution('2 20\\n14 -7 19\\n') == '0'\nassert solution('2 1000000000\\n14 -7 19\\n') == '0'\nassert solution('3 100000000000\\n10 -9 -3 5\\n') == '3'\n"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1000000000\\n10 -9 -3 5\\n') == '3'\nassert solution('3 12\\n10 -9 -3 5\\n') == '2'\nassert solution('2 20\\n14 -7 19\\n') == '0'\nassert solution('3 10\\n10 -9 -3 5\\n') == '1'\nassert solution('3 11\\n10 -9 -3 5\\n') == '1'\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 2 1') == '1'\nassert solution('2\\n2 2') == '0'\nassert solution('7\\n2 2 2 1 1 1 1') == '3'\nassert solution('3\\n1 1 1') == '1'\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n1 1 2 1\n''') == '1'\n\nassert solution('''2\n2 2\n''') == '0'\n\nassert solution('''7\n2 2 2 1 1 1 1\n''') == '3'\n\nassert solution('''3\n1 1 1\n''') == '1'\n\nassert solution('''5\n5 4 4 3 3 2\n''') == '0'"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 2 1') == '1'\nassert solution('2 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"0\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\"\nassert solution(\"4\\n2 2\\n\") == \"0\"\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1') == '1'\nassert solution('3\\n2 2') == '0'\nassert solution('7\\n2 2 2 1 1 1 1') == '3'\nassert solution('7\\n2 2 2') == '1'\nassert solution('7\\n1 1 1') == '0'\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 2 2') == '3'\nassert solution('2 2 2 1 1 1 1') == '3'\n\n\n\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 2 1\n''') == '1'\n\nassert solution('''2\n2 2\n''') == '0'\n\nassert solution('''7\n2 2 2 1 1 1 1\n''') == '3'\n\nassert solution('''3\n1 1 1\n''') == '1'\n\nassert solution('''5\n1 1 1 1 1 1\n''') == '2'"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 5 5''') == '13'\nassert solution('''2 2 6 6''') == '19'\nassert solution('''2 2 6 6''') == '19'\nassert solution('''5 5 10 10''') == '31'\nassert solution('''5 5 10 10''') == '31'\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 5 5\") == \"13\"\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 5 5\") == \"13\"\nassert solution(\"1 3 5 6\") == \"24\"\nassert solution(\"1 3 5 6\") == \"24\"\nassert solution(\"1 5 7 6\") == \"12\"\nassert solution(\"1 5 7 6\") == \"12\"\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 5 5') == '13'\nassert solution('2 1 2 3') == '9'\nassert solution('1 1 1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1 5 5''') == \"13\"\nassert solution('''1 1 5 5''') == \"13\"\nassert solution('''1 1 5 5''') == \"13\"\nassert solution('''1 1 5 5''') == \"13\"\nassert solution('''1 1 5 5''') == \"13\"\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 4''') == '7'\nassert solution('''1 1 5 6''') == '7'\nassert solution('''1 1 5 6''') == '9'\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 5 5') == '13'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('1 1 5 5') == 13\nassert solution('1 1 1 1') == 6\nassert solution('1 1 1 1 1 1 1 1 1') == 16\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == 'YES'\nassert solution('8\\n4 4\\n1 3\\n3 1\\n') == 'YES'\nassert solution('8\\n4 4\\n2 3\\n1 6\\n') == 'NO'\nassert solution('8\\n4 4\\n2 1\\n1 6\\n') == 'YES'\nassert solution('8\\n4 4\\n1 1\\n1 6\\n') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8\n4 4\n1 3\n3 1''') == 'YES'\nassert solution('''8\n4 4\n2 3\n1 6\n''') == 'NO'\nassert solution('''8\n8\n8\n8\n''') == 'YES'\nassert solution('''8\n8\n8\n8\n''') == 'NO'\nassert solution('''8\n8\n8\n8\n''') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\",\n    \"answer\": \"YES\",\n}\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8''') == 'YES'\nassert solution('''8\n4 4\n1 3\n3 1\n''') == 'YES'\nassert solution('''8\n4 4\n2 3\n1 6\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n''') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n4\n2 3\n3 1\n''') == 'NO'\nassert solution('''\n8\n4 4\n1 3\n3 1\n''') == 'NO'\nassert solution('''\n8\n4 4\n2 3\n1 6\n''') == 'YES'\nassert solution('''\n8\n4 4\n2 3\n1 6\n''') == 'NO'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\n8\\n1 3\\n3 1\\n\") == \"YES\"\nassert solution(\"8\\n8\\n2 3\\n1 6\\n\") == \"NO\"\nassert solution(\"8\\n8\\n2 3\\n5 6\\n\") == \"NO\"\nassert solution(\"8\\n8\\n2 3\\n3 4\\n\") == \"YES\"\nassert solution(\"8\\n8\\n2 3\\n3 4\\n5 6\\n\") == \"NO\"\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('4') == 'YES'\nassert solution('3 5') == 'NO'\nassert solution('3 5') == 'YES'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\nassert solution('''8''') == 'YES'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n13 35 77''') == '1001'\nassert solution('''6\n1 2 4 8 16 32''') == '32'\nassert solution('''1\n2''') == '2'\nassert solution('''1\n2\n3''') == '6'\nassert solution('''1\n2\n3\n4\n5''') == '120'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n13 35 77''') == '1001'\nassert solution('''6\n1 2 4 8 16 32''') == '32'\nassert solution('''10\n3 9 7 11 15 21 25 26 29''') == '765884321'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '229236068877755904703913105501761'\n'''\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\nassert solution('2\\n3\\n4\\n5\\n6') == '6'\nassert solution('3\\n5\\n7\\n9\\n10\\n11\\n12') == '12'\nassert solution('2\\n3\\n6\\n7\\n9') == '9'\nassert solution('4\\n5\\n6\\n7') == '7'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\n') == '32'\nassert solution('5\\n13\\n35\\n77\\n99\\n') == '1001'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\na\\nb\\nc\\n') == '12'\nassert solution('6\\n1 2 4 8 16 32\\n') == '32'\nprint('Passed')"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n13 35 77''') == '1001'\nassert solution('''6\n1 2 4 8 16 32''') == '32'\n''')\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n13 35 77\\n') == '1001\\n'\nassert solution('6\\n1 2 4 8 16 32\\n') == '32\\n'\nassert solution('2\\n6\\n') == '6\\n'\nassert solution('8\\n5\\n') == '5\\n'\nassert solution('7\\n12\\n') == '12\\n'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n13 35 77\n''') == '1001'\nassert solution('''6\n1 2 4 8 16 32\n''') == '32'\nassert solution('''3\n4\n5\n7\n8\n9\n''') == '999999'\nassert solution('''3\n5\n1\n2\n3\n''') == '1'\nassert solution('''3\n3\n3\n3\n3\n''') == '3'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '6'\nassert solution('1\\n2\\n3\\n4') == '24'\nassert solution('1\\n2\\n3\\n4\\n5') == '120'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '720'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 4 8 16') == '32'\nassert solution('6\\n1 2 4 8 16 32') == '1001'\nassert solution('1\\n5') == '5'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n13\\n35\\n77\\n') == '1001'\nassert solution('2\\n3\\n4\\n5\\n6\\n') == '6'\nassert solution('3\\n7\\n8\\n9\\n10\\n11\\n') == '210'\nassert solution('4\\n7\\n8\\n9\\n10\\n11\\n') == '84'\nassert solution('5\\n11\\n12\\n13\\n14\\n') == '1260'\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n5 2\\n2 1') == '2'\nassert solution('1 5\\n2 3\\n1000000000 1\\n') == '500000000'\n\n\n\"\"\""
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n2 4\n5 2\n2 1\n''') == '2'\n\nassert solution('''\n1 5\n2 3\n''') == '0'\n\nassert solution('''\n2 5\n2 1\n1 3\n''') == '500000000'\n\nassert solution('''\n1 2\n1000000000 1\n''') == '500000000'\n'''\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"500000000\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"500000000\"\nassert solution(\"1 2\\n1000000000 1\") == \"500000000\"\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 5') == '0'\nassert solution('2 5') == '1'\nassert solution('1 2') == '500000000'\nassert solution('1000000000 1') == '500000000'\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"2 4\"\n\"5 2\"\n\"2 1\"\n) == \"2\"\n\nassert solution(\n\"1 5\"\n\"2 3\"\n) == \"1\"\n\nassert solution(\n\"2 5\"\n\"2 1\"\n) == \"0\"\n\nassert solution(\n\"2 5\"\n\"2 1\"\n\"1 3\"\n) == \"500000000\"\n'''\n'''\nDetermine the maximum number of baskets that Phoenix can fill completely.\n\n-----Input-----\n\nThe first line contains two integers $n$ and $k$ ($ 1\\le n, k \\le 500$)\u00a0\u2014 the number of shrubs and the basket capacity, respectively.\n\nThe $i$-th of the next $n$ lines contain two integers $a_i$ and $b_i$ ($0 \\le a_i, b_i \\le 10^9$)\u00a0\u2014 the number of red and blue berries in the $i$-th shrub, respectively.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the maximum number of baskets that Phoenix can fill completely.\n\n-----Examples-----\nInput\n2 4\n5 2\n2 1\n\nOutput\n2\n\nInput\n1 5\n2 3\n\nOutput\n1\n\nInput\n2 5\n2 1\n1 3\n\nOutput\n500000000\n\nInput\n2 5\n2 1\n1 3\n\nOutput\n0\n\nInput\n1 2\n1000000000 1\n\nOutput\n500000000\n\n-----Note-----\n\nThe first example is described above.\n\nIn the second example, Phoenix can fill one basket fully using all the berries from the first (and only) shrub.\n\nIn the third example, Phoenix cannot fill any basket completely because there are less than $5$ berries in each shrub, less than $5$ total red berries, and less than $5$ total blue berries.\n\nIn the fourth example, Phoenix can put all the red berries into baskets, leaving an extra blue berry behind.\n'''\n'''\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == solution(input())\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == \"\"\nassert solution('0.2e+0') == '0.2'\nassert solution('0.2e+0') == '0.2'\nassert solution('0.2e-0') == '0.2'\nassert solution('1.e-100') == '1.0'\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n8.549e2'''\n) == '854.9'\n\nassert solution(\n'''\n8.549e3'''\n) == '8549'\n\nassert solution(\n'''\n0.33e0'''\n) == '0.33'\n\nassert solution(\n'''\n0.00e0'''\n) == '0'\n\nassert solution(\n'''\n1.000000e-15'''\n) == '1'"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8.549e2\") == \"854.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\"\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\n\nprint('Testcase 1 Successful')"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8.549e2\") == \"854.9\"\nassert solution(\"8.549e3\") == \"8549\"\nassert solution(\"0.33e0\") == \"0.33\"\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9.0e8\") == \"9000000000000000\"\nassert solution(\"8.5e3\") == \"850000\"\nassert solution(\"3.5e-3\") == \"3.500000\"\nassert solution(\"1.0e2\") == \"10\"\nassert solution(\"1.0e-3\") == \"0.001\"\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8.549e2''') == '854.9'\nassert solution('''8.549e3''') == '8549'\nassert solution('''0.33e0''') == '0.33'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\nassert solution('1.5e-1') == '0.5'\nassert solution('8.999e0') == '8999'\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0'\nassert solution('5 2') == '8'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('5 2') == '8'\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"8\"\nassert solution(\"3 2\") == \"-2\"\nassert solution(\"2 5\") == \"-2\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"4 4\") == \"8\"\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 4 5 1 3\") == \"8\"\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"8\"\nassert solution(\"4 10\") == \"-10\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"1 10\") == \"9\"\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[2]\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()[2]\n'''"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5 2\n2 4 5 1 3\n3 4 -10 -8 8''') == '8'\nassert solution(\n'''10 5\n1 2 3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9 10 1\n3 4 5 6 7 8 9 10 1 2\n4 5 6 7 8 9 10 1 2 3\n5 6 7 8 9 10 1 2 3 4\n6 7 8 9 10 1 2 3 4 5\n7 8 9 10 1 2 3 4 5 6\n8 9 10 1 2 3 4 5 6 7\n9 10 1 2 3 4 5 6 7 8\n10 1 2 3 4 5 6 7 8 9''') == '100'"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8\"\n'''\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\nassert solution(\"5 2\\n2 4 5 1 3\\n3 4 -10 -8 8\") == \"8\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 7 1 6\\n1 2 2\\n1 3 10\\n2 3 7\\n2 4 8\\n3 5 3\\n4 5 2\\n5 6 1\") == \"YES\\nCAN 1\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\"\nassert solution(\"2 2 1 2\\n1 2 1\\n1 2 2\\n\") == \"YES\\nCAN 1\\nCAN 1\"\nassert solution(\"3 3 1 3\\n1 2 10\\n2 3 10\\n1 3 100\\n\") == \"YES\\nCAN 1\\nCAN 1\\nCAN 81\"\n\"\"\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 7 1 6\n1 2 2\n1 3 10\n2 3 7\n2 4 8\n3 5 3\n4 5 2\n5 6 1''') == \"YES\\nCAN 1\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\"\nassert solution('''3 3 1 3\n1 2 10\n2 3 10\n1 3 100''') == \"YES\\nCAN 81\"\nassert solution('''2 2 1 2\n1 2 1\n1 2 2''') == \"YES\\nCAN 81\"\nassert solution('''1 2 2\n1 2 1\n1 2 2''') == \"NO\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 7 1 6''') == 'YES'\nassert solution('''1 2 2''') == 'YES'\nassert solution('''1 3 10''') == 'CAN 1'\nassert solution('''2 3 7''') == 'CAN 1'\nassert solution('''2 4 8''') == 'CAN 1'\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    stdin='6 7 1 6\\n1 2 2\\n1 3 10\\n2 3 7\\n2 4 8\\n3 5 3\\n4 5 2\\n5 6 1') == \"YES\\nCAN 1\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\"\nassert solution(\n    stdin='3 3 1 3\\n1 2 10\\n2 3 10\\n1 3 100') == \"YES\\nCAN 1\\nCAN 1\\nCAN 1\"\nassert solution(\n    stdin='2 2 1 2\\n1 2 1\\n1 2 2\\n') == \"YES\\nCAN 1\\nCAN 1\"\n\"\"\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n\nclass MyException(Exception):\n    pass"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 7 1 6') == 'YES'\nassert solution('1 2 2') == 'YES'\nassert solution('1 3 10') == 'YES'\nassert solution('2 3 7') == 'YES'\nassert solution('2 4 8') == 'YES'\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 7 1 6\") == \"YES\"\nassert solution(\"3 3 1 3\") == \"YES\"\nassert solution(\"2 2 1 2\") == \"YES\"\nassert solution(\"1 2 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"NO\"\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 7 1 6\\n1 2 2\\n1 3 10\\n2 3 7\\n2 4 8\\n3 5 3\\n4 5 2\\n5 6 1\") == \"YES\\nCAN 2\\nCAN 1\\nCAN 1\\nCAN 1\\nYES\"\nassert solution(\"3 3 1 3\\n1 2 10\\n2 3 10\\n1 3 100\\n\") == \"YES\\nCAN 81\"\nassert solution(\"2 2 1 2\\n1 2 1\\n1 2 2\\n\") == \"YES\\nCAN 81\"\n\n\n\"\"\""
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '3'\n\nassert solution('''\n5\n1 2\n1 3\n2 4\n2 5\n''') == '9'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n2 5\n''') == '9'\nassert solution('''\n4\n1 2\n1 3\n2 4\n2 5\n''') == '3'\nassert solution('''\n4\n1 2\n1 3\n1 4\n1 5\n''') == '4'\nassert solution('''\n5\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '4'\nassert solution('''\n10\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n3 8\n3 9\n4 10\n4 9\n5 9\n5 8\n5 7\n5 6\n5 4\n4 8\n4 7\n4 6\n4 5\n''') == '4'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '3'\nassert solution('''4\n1 2\n1 3\n2 4\n2 5''') == '9'\nassert solution('''4\n1 2\n1 3\n2 4\n2 5''') == '9'\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n5 6\n6 7\n6 8\n7 8\n8 9''') == '39'\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n5 6\n6 7\n7 8\n7 9''') == '39'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 1\") == \"\"\nassert solution(\"3 1 2\") == \"\"\nassert solution(\"3 1 2 3\") == \"\"\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '3'\nassert solution('''5''') == '9'\nassert solution('''1 2\n1 3\n2 4\n2 5''') == '9'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '3'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n''') == '9'\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n5 6\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n''') == '60'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '3'\nassert solution('''3\n1 2\n1 3\n''') == '3'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n''') == '9'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n''') == '9'\nassert solution('''4\n1 2\n1 3\n1 4\n1 5\n''') == '5'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n1 3') == '3'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n2 5') == '9'\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"3\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n2 5\\n\") == \"9\"\nassert solution(\"3\\n1 2\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\"5\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n\") == \"9\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n2 5\\n4 3\\n4 5\\n\") == \"9\"\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n1 3\n2 4\n2 5\n''') == '3'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n2 6\n''') == '9'\nassert solution('''4\n1 2\n1 3\n2 4\n2 5\n''') == '5'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n2 6\n''') == '9'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n3 4\n4 5\n5 6\n5 7\n6 7\n7 8\n7 9\n6 8\n8 9\n8 10\n8 11\n8 12\n8 13\n8 14\n8 15\n9 10\n9 11\n9 12\n9 13\n9 14\n9 15\n9 16\n9 17\n9 18\n9 19\n10 11\n10 12\n10 13\n10 14\n10 15\n10 16\n10 17\n10 18\n10 19\n10 20\n11 12\n11 13\n11 14\n11 15\n11 16\n11 17\n11 18\n11 19\n11 20\n11 21\n11 22\n11 23\n11 24\n12 13\n12 14\n12 15\n12 16\n12 17\n12 18\n12 19\n12 20\n12 21\n12 22\n12 23\n12 24\n12 25\n12 26\n13 14\n13 15\n13 16\n13 17\n13 18\n13 19\n13 20\n13 21\n13 22\n13 23\n13 24\n13 25\n13 26\n13 27\n13 28\n14 15\n14 16\n14 17\n14 18\n14 19\n14 20\n14 21\n14 22\n14 23\n14 24\n14 25\n14 26\n14 27\n14 28\n14 29\n14 30\n14 31\n14 32\n15 16\n15 17\n15 18\n15 19\n15 20\n15 21\n15 22\n15 23\n15 24\n15 25\n15 26\n15 27\n15 28\n15 29\n15 30\n15 31\n15 32\n15 33\n15 34\n16 17\n16 18\n16 19\n16 20\n16 21\n16 22\n16 23\n16 24\n16 25\n16 26\n16 27\n16 28\n16 29\n16 30\n16 31\n16 32\n16 33\n16 34\n17 18\n17 19\n17 20\n17 21\n17 22\n17 23\n17 24\n17 25\n17 26\n17 27\n17 28\n17 29\n17 30\n17 31\n17 32\n17 33\n17 34\n18 19\n18 20\n18 21\n18 22\n18 23\n18 24\n18 25\n18 26\n18 27\n18 28\n18 29\n18 30\n18 31\n18 32\n18 33\n18 34\n19 20\n19 21\n19 22\n19 23\n19 24\n19 25\n19 26\n19 27\n19 28\n19 29\n19 30\n19 31\n19 32\n19 33\n19 34\n19 35\n20 21\n20 22\n20 23\n20 24\n20 25\n20 26\n20 27\n20 28\n20 29\n20 30\n20 31\n20 32\n20 33\n20 34\n20 35\n21 22\n21 23\n21 24\n21 25\n21 26\n21 27\n21 28\n21 29\n21 30\n21 31\n21 32\n21 33\n21 34\n21 35\n22 23\n22 24\n22 25\n22 26\n22 27\n22 28\n22 29\n22 30\n22 31\n22 32\n22 33\n22 34\n22 35\n23 24\n23 25\n23 26\n23 27\n23 28\n23 29\n23 30\n23 31\n23 32\n23 33\n23 34\n23 35\n24 25\n24 26\n24 27\n24 28\n24 29\n24 30\n24 31\n24 32\n24 33\n24 34\n24 35\n25 26\n25 27\n25 28\n25 29\n25 30\n25 31\n25 32\n25 33\n25 34\n25 35\n26 27\n26 28\n26 29\n26 30\n26 31\n26 32\n26 33\n26 34\n26 35\n27 28\n27 29\n27 30\n27 31\n27 32\n27 33\n27 34\n27 35\n28 29\n28 30\n28 31\n28 32\n28 33\n28 34\n28 35\n29 30\n29 31\n29 32\n29 33\n29 34\n29 35\n30 31\n30 32\n30 33\n30 34\n30 35\n31 32\n31 33\n31 34\n31 35\n''') == '9'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n3 7 9 7 8\\n5 2 5 7 5\\n') == '6'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n3 7 9 7 8\n5 2 5 7 5\n''') == '6'\nassert solution(\n'''5\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3\\n3') == '0'\nassert solution('4\\n4\\n4\\n4\\n4') == '0'\nassert solution('5\\n5\\n5\\n5\\n5') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n3 7 9 7 8\\n5 2 5 7 5\\n') == '6'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\n\n'''\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1') == '6'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '6'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3 7 9 7 8\\n5 2 5 7 5\\n') == '6'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3 7 9 7 8\\n5 2 5 7 5') == '6'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\nassert solution('5\\n1 2 3 4 5\\n1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n1\\n1') == '2'\nassert solution('3\\n2\\n1') == '3'\nassert solution('4\\n3\\n2') == '3'\nassert solution('5\\n4\\n3') == '4'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('()()()') == '5'\nassert solution('()()') == '0'\nassert solution(')(') == '0'\nassert solution(')()') == '0'\nassert solution('(()())') == '0'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('()()())(()') == '5'\nassert solution(')(()(())()') == '4'\nassert solution(')))(()(()())()') == '0'\nassert solution('(()(()())()')) == '1'\nassert solution('()()()()()') == '1'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('()()())(()') == '5'\nassert solution(')(()(())()') == '10'\nassert solution(')))(()') == '0'\nassert solution('((())())') == '4'\n\n\n\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('()()())(()')) == '5'\nassert solution('())()())(()')) == '4'\nassert solution('))()(()')) == '0'\nassert solution('))()(()')) == '1 1'\nassert solution('()()()')) == '5'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('()())()()()()') == '5'\nassert solution(')()()((') == '0'\nassert solution(')()()()((') == '5'\nassert solution('())(') == '0'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\n\nn = int(stdin)\ns = list(stdin)\n\nanswer = 0\n\nfor i in range(n):\n    for j in range(n):\n        if s[i] == s[j]:\n            continue\n\n        t = s[i] + s[j]\n        if t == '()':\n            answer = max(answer, 2)\n        elif t == '))':\n            answer = max(answer, 3)\n        elif t == '(())':\n            answer = max(answer, 4)\n        elif t == '()(':\n            answer = max(answer, 5)\n        else:\n            answer = max(answer, len(t))\n\nprint(answer)\nprint(0, 1)\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n()()())(()''') == '5'\nassert solution('''12\n)(()(()())()\n''') == '4'\nassert solution('''6\n)))(()''') == '0'\nassert solution(''')))(()\n''') == '1 1'\nassert solution('''9\n((((()))))\n''') == '0'\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"()()())(()\") == \"5\"\nassert solution(\")(()(()())()\") == \"4 10\"\nassert solution(\"())(()()())()\") == \"0 1 1 1 1\"\nassert solution(\"(())(()())()\") == \"0 1 1 1 1\"\nassert solution(\")))(()\") == \"0 1 1 1 1\"\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"()()())(()\") == \"5\"\nassert solution(\"())()())(()\") == \"10\"\nassert solution(\")(()(()())()())\") == \"4\"\nassert solution(\")()()()(\") == \"0\"\nassert solution(\"))()()()(\") == \"1 1\"\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(a_1)\") == (0, 1)\nassert solution(\"(((a_1))))\") == (0, 1)\nassert solution(\"(((a_1_2))\") == (1, 1)\nassert solution(\"(((a_1_2_3))\") == (1, 1)\nassert solution(\"(((a_1_2_3_4)))\") == (3, 1)\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('(LoooonG)__shOrt__(LoooonG)') == '5 2'\nassert solution('(___)') == '0 0'\nassert solution('(Hello)') == '0 0'\nassert solution('(Hello) ') == '0 0'\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''_Hello_Vasya(and_Petya)__bye_(and_OK)''') == '5 4'\nassert solution('''(LoooonG)__shOrt__(LoooonG)''') == '5 2'\nassert solution('''(___)''') == '0 0'\nassert solution('''()''') == '0 0'\nassert solution('''_''') == '0 0'\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"5 2\"\nassert solution(\"(___)\") == \"0 0\"\nassert solution(\"(__)__\") == \"0 0\"\nassert solution(\"((__))\") == \"0 0\"\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('(LoooonG)__shOrt__(LoooonG)') == '5 2'\nassert solution('(___)') == '0 0'\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''_Hello_Vasya(and_Petya)__bye_(and_OK)''') == '5 4'\nassert solution('''_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__''') == '2 6'\nassert solution('''(LoooonG)__shOrt__(LoooonG)''') == '5 2'\nassert solution('''(___)''') == '0 0'\nassert solution('''()''') == '0 0'\n\n\n'''"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('(___)') == '0 0'\nassert solution('(Hello)') == '0 0'\nassert solution('(_)') == '0 0'\nassert solution('_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__') == '2 6'\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('_Hello_Vasya(and_Petya)__bye_(and_OK)') == '5 4'\nassert solution('_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__') == '2 6'\nassert solution('(LoooonG)__shOrt__(LoooonG)') == '5 2'\n\n\n\nhttps://docs.google.com/document/d/1G9SqVtRCej2NxLsjHqJFFYkQxjLyr9Afa6M2s9S4Z9k/edit?usp=sharing\n"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"_Hello_Vasya(and_Petya)__bye_(and_OK)\"\"\"\n) == \"5 4\"\n\nassert solution(\n\"\"\"_a_(_b___c)__de_f(g_)__h__i(j_k_l)m__\"\"\"\n) == \"2 6\"\n\nassert solution(\n\"\"\"(LoooonG)__shOrt__(LoooonG)\"\"\"\n) == \"5 2\"\n\nassert solution(\n\"\"\"()\"\"\"\n) == \"0 0\"\n\nassert solution(\n\"\"\"_()\"\"\"\n) == \"0 0\""
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''6 3'''\n) == '2'\n\nassert solution(\n'''4 2'''\n) == '0'\n\nassert solution(\n'''8 2'''\n) == '7'\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n12 10 20 20 25 30\n10 20 30''') == '2'\nassert solution('''4 2\n1 3 3 7\n3 7''') == '0'\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2''') == '7'\nassert solution('''4 1\n1''') == '1'\nassert solution('''4 1\n1 3 3 7''') == '0'\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 3 7\\n3 7\") == \"2\\n\"\nassert solution(\"8 2\\n1 2 2 2 2 2 2 2\\n1 2\") == \"7\\n\""
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"3 1\") == \"\"\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 2\\n1 2 2 2 2 2 2 2\\n1 2\") == \"7\"\nassert solution(\"6 3\\n12 10 20 20 25 30\\n10 20 30\\n\") == \"2\"\nprint(solution(input()))"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 3\n12 10 20 20 25 30\n10 20 30\n''') == '2'\n\nassert solution('''4 2\n1 3 3 7\n3 7\n''') == '0'\n\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2\n''') == '7'"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3\n12 10 20 20 25 30\n10 20 30''') == '2'\nassert solution('''4 2\n1 3 3 7\n3 7''') == '0'\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2''') == '7'\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3 3 7\\n3 7\\n\") == \"2\"\nassert solution(\"8 2\\n1 2 2 2 2 2 2 2\\n1 2\\n\") == \"7\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"1 2\\n1\") == \"0\"\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == 0\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\"\n\n\"\"\""
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"49 1808\") == \"359087121\"\nassert solution(\"25 956\") == \"231851116\"\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == 0\nassert solution('''2 3''') == 6\nassert solution('''49 1808''') == 359087121"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n\n\"\"\"\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\n\n\n\"\"\"\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\nassert solution('1 2') == '3'\nassert solution('1 5') == '2'\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 3') == '6'\nassert solution('49 1808') == '359087121'\nassert solution('500 1500') == '0'"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\nassert solution('''2 2\n1 1\n2 2''') == '2'\nassert solution('''3 3\n1 1\n2 2\n3 3''') == '6'\nassert solution('''5 5\n1 1\n1 1\n1 1\n1 1\n1 1''') == '12'\nassert solution('''3 3\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '18'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\") == \"26\"\nassert solution(\"2 2\\n1 9\\n1 7\\n2 6\") == \"5\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1') == '26'\nassert solution('2 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1\\n3 2\\n3 3') == '33'\nassert solution('4 2\\n4 1\\n4 2\\n4 3\\n4 4') == '16'\nassert solution('6 2\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5') == '36'\nassert solution('4 3\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6') == '36'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '26'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 9\\n1 7\\n2 6\\n2 5\\n3 1') == '26'\nassert solution('3 10\\n1 1\\n2 2\\n3 3\\n4 4') == '10'\nassert solution('10 5\\n1 1\\n2 1\\n3 2\\n4 3\\n5 2\\n6 1\\n7 1') == '24'\nassert solution('10 6\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1') == '26'\nassert solution('10 5\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1') == '24'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\n\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\n\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 2\n3 1''') == '11'\n\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 2\n4 1''') == '9'\n\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 2\n4 1''') == '9'"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3') == '2'\nassert solution('1 3') == '3'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 3''') == \"26\"\nassert solution(\n'''5 10''') == \"59\"\nassert solution(\n'''5 15''') == \"76\"\nassert solution(\n'''5 5''') == \"0\"\nassert solution(\n'''9 9''') == \"65\"\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 10.000000000000000000000000000000000000000000000000\n\"\"\"\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n0 10\\n5 -5\\n-5 -5') == 10\nassert solution('4\\n2 1\\n3 0\\n4 1\\n5 1') == 8\nassert solution('3\\n0 10\\n5 -5\\n-5 -5') == 10\nassert solution('3\\n0 10\\n0 -5\\n0 -5\\n0 -5') == 0\nassert solution('3\\n1 1\\n1 1\\n1 1') == 0\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 10\n    5 -5\n    -5 -5\n    \"\"\"\n    ) == \"10.000000000000000000000000000000000000000000000000\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0\n    1 1\n    2 2\n    \"\"\"\n    ) == \"1.4142135623730951\"\n\nassert solution(\n    \"\"\"\n    1\n    0 0\n    1 1\n    2 2\n    \"\"\"\n    ) == \"0.47363794393009774\"\n\nassert solution(\n    \"\"\"\n    2\n    -1.5 0\n    1 0\n    -1 0\n    \"\"\"\n    ) == \"0.9459459459459459\"\n\nassert solution(\n    \"\"\"\n    1\n    0 0\n    2 2\n    \"\"\"\n    ) == \"1.0\""
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 10\\n5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3\\n0 10\\n5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3\\n0 10\\n5 -5\\n-5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3\\n0 10\\n5 -5\\n-5 -5\\n-5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3\\n0 10\\n5 -5\\n-5 -5\\n-5 -5\\n-5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n0 10\n5 -5\n-5 -5\n''') == '10.000000000000000000000000000000000000000000000000'\n\nassert solution(\n'''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n0 10\\n5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('3\\n0 10\\n5 -5\\n-5 -5') == '10.000000000000000000000000000000000000000000000000'\nassert solution('1\\n1 1') == '1.4142135623730951'\nassert solution('2\\n1 2') == '1.7320508075688772'\nassert solution('1\\n0 0') == '0.0'\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 0\\n2 2') == '1.4142135623730951'\nassert solution('1 2\\n1 1\\n1 1') == '0.7853981633974483'\nassert solution('1 2\\n2 2\\n2 2') == '1.25'\nassert solution('1 1\\n1 1') == '0.0'\nassert solution('1 1\\n1 1') == '0.0'\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\nfrom datetime import datetime\n\ntimestart = datetime.now()\n\nassert solution(\"3\\n0 10\\n5 -5\\n-5 -5\") == '10.000000000000000000000000000000000000000000000000\\n'\nassert solution(\"3\\n0 10\\n-5 -5\\n5 -5\") == '10.000000000000000000000000000000000000000000000000\\n'\nassert solution(\"3\\n0 10\\n-5 -5\\n-5 -5\") == '10.000000000000000000000000000000000000000000000000\\n'\nassert solution(\"4\\n0 10\\n5 -5\\n-5 -5\\n-5 -5\") == '10.000000000000000000000000000000000000000000000000\\n'\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10.000000000000000000000000000000000000000000000000\"\n\"\"\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '81'\nassert solution('?A?') == '10'\nassert solution('11?A?J') == '18'\nassert solution('?AJ?') == '100'\nassert solution('?A?A') == '9'\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?00111\") == \"56669\"\nassert solution(\"?12329\") == \"12329\"\nassert solution(\"?11111\") == \"11211\"\nassert solution(\"?23333\") == \"23333\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"?0JGJ9\") == \"93539\"\nassert solution(\"?JGJ9\") == \"93539\"\nassert solution(\"?JGJ\") == \"51919\"\nassert solution(\"?JGJ\") == \"51919\"\nassert solution(\"?JG\") == \"51919\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"?A\") == 81\nassert solution(\"?A0\") == 101\nassert solution(\"?JGJ9\") == 14144\nassert solution(\"?JGJ\") == 794\nassert solution(\"?6\") == 19\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"?\") == \"1\"\nassert solution(\"99\") == \"100\"\nassert solution(\"1?0\") == \"100\"\nassert solution(\"?1\") == \"100\"\nassert solution(\"?10\") == \"100\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ\") == \"51919\"\nassert solution(\"?7\") == \"53979\"\nassert solution(\"?7??6\") == \"53979\"\nassert solution(\"?JGJ\") == \"51919\"\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"100\"\nassert solution(\"1?AA\") == \"100\"\nassert solution(\"AJ\") == \"81\"\nprint(solution(\"?JGJ9\"))\nassert solution(\"?JGJ9\") == \"5599\"\nprint(solution(\"?0JGJ9\"))\nassert solution(\"?0JGJ9\") == \"5599\"\nprint(solution(\"?9JGJ9\"))\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?J9GJ\") == \"51919\"\nassert solution(\"?JG?9\") == \"51919\"\nassert solution(\"?J?9GJ\") == \"51919\"\nassert solution(\"?1J?9GJ\") == \"51919\"\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n3 2 2 3\\n') == '2\\n1 2 4 3\\n'\nassert solution('6\\n4 5 6 3 2 1\\n') == '0\\n4 5 6 3 2 1\\n'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5\\n') == '3\\n2 8 4 6 7 1 9 3 10 5\\n'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5\\n') == '3\\n2 8 4 6 7 1 9 3 10 5\\n'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5\\n') == '3\\n2 8 4 6 7 1 9 3 10 5\\n'\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3 2 2 3\n''') == '2'\n\nassert solution('''\n6\n4 5 6 3 2 1\n''') == '0'\n\nassert solution('''\n10\n6 8 4 6 7 1 6 3 4 5\n''') == '3'\n\nassert solution('''\n100\n2987342256993742430944447995426399841418743564287140907382847392511963541650039203913341569366542258\n''') == '7'"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '0'\nassert solution('1\\n1 2 3') == '0'\nassert solution('2\\n1 2 3') == '0'\nassert solution('2\\n3 2 1') == '2'\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3 2 2 3\") == \"2\"\nassert solution(\"6 8 4 6 7 1 6 3 4 5\") == \"3\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 2 2 3\") == \"2\\n1 2 4 3\"\nassert solution(\"6\\n4 5 6 3 2 1\") == \"0\\n4 5 6 3 2 1\"\nassert solution(\"10\\n6 8 4 6 7 1 6 3 4 5\") == \"3\\n2 8 4 6 7 1 9 3 10 5\"\nassert solution(\"4\\n1 2 2 3\") == \"0\\n1 2 2 3\"\nassert solution(\"6\\n1 2 2 3 4 5 6\") == \"3\\n1 2 2 3 4 5 6\"\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n3 2 2 3\\n') == '2\\n1 2 4 3'\nassert solution('6\\n4 5 6 3 2 1\\n') == '0\\n4 5 6 3 2 1'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5\\n') == '3\\n2 8 4 6 7 1 9 3 10 5'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n') == '1\\n2 3 4 5 6 7 8 9 10 11 12 13 14'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '1\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15'\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 2 3''') == '2'\nassert solution('''6\n4 5 6 3 2 1''') == '0'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '3'\nassert solution('''1\n3\n4 5 6 3 2 1''') == '-1'\nassert solution('''10\n3 4 5 6 3 2 1''') == '-1'\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n3 2 2 3''') == '2'\nassert solution('''6\n4 5 6 3 2 1''') == '0'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '3'\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 2 3') == '0\\n2 2 2 3'\nassert solution('4\\n3 2 2 3') == '1\\n2 2 3 4'\nassert solution('6\\n4 5 6 3 2 1') == '2\\n1 2 4 5 3 6'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5') == '3\\n2 8 4 6 7 1 9 3 10 5'\nassert solution('10\\n6 8 4 6 7 1 6 3 4 5') == '3\\n2 8 4 6 7 1 9 3 10 5'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n20 10 30 40 10\n''') == '20'\nassert solution('''6 5\n90 20 35 40 60 100\n''') == '35'\n\n\n'''"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"20\"\nassert solution(\"6 5\") == \"35\"\n\n\n\"\"\"\n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 3\n20 10 30 40 10''') == '20'\n\nassert solution('''6 5\n90 20 35 40 60 100''') == '35'\n\nassert solution('''4 5\n100 90 95 80''') == '100'\n\nassert solution('''7 4\n90 100 95 80 90''') == '100'\n\nassert solution('''4 5\n60 60 60 60''') == '60'"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\n20 10 30 40 10\n''') == '20'\nassert solution('''6 5\n90 20 35 40 60 100\n''') == '35'\n\n\n'''\n\n\n'''"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n20 10 30 40 10\n''') == '20'\n\nassert solution('''6 5\n90 20 35 40 60 100\n''') == '35'\n\nassert solution('''9 10\n1 2 3 4 5 6 7 8\n''') == '1 3 4'"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '2'\nassert solution('4\\n2\\n1\\n2') == '1 2'\n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom math import ceil\n\nn, k = map(int, stdin.split())\nlight = list(map(int, stdin.split()))\nlights = [0] * k\nmax_light = 0\nfor i in range(k):\n    light[i] = ceil(light[i] / 100) * 100\n    if light[i] > max_light:\n        max_light = light[i]\nfor i in range(k):\n    if lights[i] == 0:\n        for j in range(max_light, light[i] - 100, -100):\n            if j > 0 and j < 100:\n                if j > lights[i]:\n                    lights[i] = j\n                    break\nfor i in range(k):\n    if lights[i] == 0:\n        print(i + 1, end=\" \")\n        \n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('inputs/problem_05_a') == '25'\nassert solution('inputs/problem_05_b') == '1 3 4 5 6'\n\"\"\"\n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '1'\nassert solution('4\\n1 1 1 1') == '1'\nassert solution('2\\n2 2') == '2'\nassert solution('4\\n1 1 1 1') == '1'\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\""
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('10') == 1\nassert solution('101') == 1\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 1\nassert solution('4') == 1\nassert solution('5') == 2\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '8'\nassert solution('6') == '28'\nassert solution('2') == '0'\nassert solution('5555') == '0'\nassert solution('22222') == '0'\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('4') == 8\nassert solution('6') == 28\nassert solution('2') == 0\nassert solution('-1') == 0\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7') == 28\nassert solution('100') == 28\nassert solution('2') == 0\nassert solution('6') == 0\nassert solution('10') == 10\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"4\") == 8\nassert solution(\"6\") == 28\nassert solution(\"8\") == 0\n\n\n-----Alternate Solutions-----\nThe idea is to solve for the maximum score that can be achieved by performing exactly one transformation, so we can use the below implementation.\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('2') == 0\nassert solution('4') == 8\nassert solution('6') == 28\nassert solution('10') == 28\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '8'\nassert solution('''6''') == '28'\nassert solution('''2''') == '0'\n'''\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(4) == 8\nassert solution(6) == 28\nassert solution(2) == 0\n\n\"\"\""
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\n\n\"\"\""
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '1'\nassert solution('3\\n3') == '1'\nassert solution('1\\n2\\n3') == '2'\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n10 10 3\\n5 1 6\\n2 2 2\\n1 5 7\") == \"1\"\nassert solution(\"2 3\\n1 2 3\\n1 2 1\") == \"2\"\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7''') == '1'\nassert solution('''3 3\n1 2 3\n2 3 1\n1 2 1''') == '2'\nassert solution('''5 4\n3 1 6\n4 1 2\n3 1 2\n1 1 1\n1 1 1''') == '2'\nassert solution('''1 2\n1 1 1\n2 2 2\n2 1 1\n1 1 1\n1 1 1''') == '1'\nassert solution('''1 2\n1 1 1\n2 2 2\n2 1 1\n1 1 1''') == '1'\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '2'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 5') == '1'\nassert solution('5 5') == '1'\nassert solution('4 1 3') == '1'\nassert solution('3 3 1') == '2'\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n10 10 3\n5 1 6\n2 2 2''') == '1'\nassert solution('''4 4\n1 2 3 4\n5 6 7 8\n9 1 2 3''') == '1'\nassert solution('''5 4\n5 1 6 7 8 9\n1 2 3 4 5\n4 3 2 1\n3 3 3 3\n3 1 2 1\n''') == '3'\nassert solution('''10 4\n7 2 3 9 7 5 9 7 8 4 7 8 4 4 7 7 8 3 4 1 2\n8 1 2 2 3 4 9 3 2 2 1 2 3 4 4 1 3 1 1\n3 2 1 1 2 3 4 2 1 2 3 9 2 1 2 1 2 2 3\n9 7 3 1 4 2 8 7 8 2 2 1 2 2 1 2 1 1 1\n4 1 2 1 2 3 8 3 2 2 1 1 2 1 2 1 2 2 1\n1 2 1 1 3 2 1 2 1 1 2 1 1 2 1 2 1 2 1\n5 2 1 1 1 2 2 1 2 2 1 1 2 1 1 2 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n4 5 2\\n8 9 6 10 7 11\") == \"5\"\nassert solution(\"3 1\\n3 4 5\\n6\") == \"-1\"\nassert solution(\"2 2\\n1 1\\n2\") == \"-1\"\nassert solution(\"3 3\\n1 2 3\\n2 3 1\") == \"-1\"\nassert solution(\"3 2\\n1 1\\n1\") == \"-1\"\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '5'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '-1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '5'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 6\n4 5 2\n8 9 6 10 7 11''') == '5'\nassert solution('''3 1\n3 4 5\n6''') == '-1'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"-1\"\nassert solution(\"1 3 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"-1\"\nassert solution(\"1 2 3 4 5 6\") == \"-1\"\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 0\") == \"2\"\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6\\n4 5 2\\n8 9 6 10 7 11') == '5'\nassert solution('3 1\\n3 4 5\\n6\\n') == '-1'\nassert solution('3 1\\n3 4 5\\n-1') == '-1'\nassert solution('3 1\\n3 4 5\\n2') == '-1'\nassert solution('3 1\\n3 4 5\\n10') == '-1'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 6\n4 5 2\n8 9 6 10 7 11''') == '5'\nassert solution('''3 1\n3 4 5\n6''') == '-1'\nassert solution
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n8 9 6 10 7 11\n''') == '5'\nassert solution('''3 1\n3 4 5\n6\n''') == '-1'\nassert solution('''3 6\n4 5 2\n8 9 6 10 7 11\n''') == '5'\nassert solution('''3 1\n3 4 5\n5\n''') == '-1'\nassert solution('''3 6\n4 5 2\n4 5 2\n8 9 6 10 7 11\n''') == '5'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '5'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '-1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '-1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '-1'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '-1'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"2 4 5 6 7 9 10\") == \"5\"\nassert solution(\"4 6\") == \"5\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2016''') == '''2044'''\n\nassert solution(\n'''2000''') == '''2028'''\n\nassert solution(\n'''50501''') == '''50507'''\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\nassert solution('3') == '4'\nassert solution('2000') == '2001'\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2016\") == \"2044\"\nassert solution(\"2000\") == \"2028\"\nassert solution(\"50501\") == \"50507\"\nassert solution(\"101010\") == \"101011\"\nassert solution(\"2100\") == \"2101\"\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\nassert solution('0') == '2017'\nassert solution('45') == '46'\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2016\") == \"2044\"\nassert solution(\"2000\") == \"2028\"\nassert solution(\"50501\") == \"50507\"\nprint(\"Accepted\")\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2016') == '2044'\nassert solution('2000') == '2028'\nassert solution('50501') == '50507'\nassert solution('50501') == '50507'\nassert solution('2016') == '2044'\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2016\") == \"2044\"\nassert solution(\"2000\") == \"2028\"\nassert solution(\"50501\") == \"50507\"\n\"\"\""
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1900:01:01\\n2038:12:31\\n') == '50768'\nassert solution('1996:03:09\\n1991:11:12\\n') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'Please enter two dates in the format yyyy:mm:dd'\nassert solution('1900:01:01') == 50768\nassert solution('2038:12:31') == 849315\nassert solution('1996:03:09') == 1579\nassert solution('1991:11:12') == 12030\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1900:01:01\\n2038:12:31') == '50768'\nassert solution('1996:03:09\\n1991:11:12') == '1579'"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1900:01:01\n2038:12:31''') == '50768'\nassert solution('''1996:03:09\n1991:11:12''') == '1579'\nprint(solution('''2000:01:01\n2001:01:01\n2002:01:01\n2003:01:01\n2004:01:01\n2005:01:01\n2006:01:01\n2007:01:01\n2008:01:01\n2009:01:01\n2010:01:01\n2011:01:01\n2012:01:01\n2013:01:01\n2014:01:01\n2015:01:01\n2016:01:01\n2017:01:01\n2018:01:01\n2019:01:01\n2020:01:01\n2021:01:01\n2022:01:01\n2023:01:01\n2024:01:01\n2025:01:01\n2026:01:01\n2027:01:01\n2028:01:01\n2029:01:01\n2030:01:01\n2031:01:01\n2032:01:01\n2033:01:01\n2034:01:01\n2035:01:01\n2036:01:01\n2037:01:01\n2038:01:01''') == '1579')\nprint(solution('''2000:01:01\n2001:01:01\n2002:01:01\n2003:01:01\n2004:01:01\n2005:01:01\n2006:01:01\n2007:01:01\n2008:01:01\n2009:01:01\n2010:01:01\n2011:01:01\n2012:01:01\n2013:01:01\n2014:01:01\n2015:01:01\n2016:01:01\n2017:01:01\n2018:01:01\n2019:01:01\n2020:01:01\n2021:01:01\n2022:01:01\n2023:01:01\n2024:01:01\n2025:01:01\n2026:01:01\n2027:01:01\n2028:01:01\n2029:01:01\n2030:01:01\n2031:01:01\n2032:01:01\n2033:01:01\n2034:01:01\n2035:01:01\n2036:01:01\n2037:01:01\n2038:01:01''')) == '1579')\nprint(solution('''1900:01:01\n2038:12:31\n'''))\n\nassert solution('''2016:01:01\n2017:01:01\n2018:01:01\n2019:01:01\n2020:01:01\n2021:01:01\n2022:01:01\n2023:01:01\n2024:01:01\n2025:01:01\n2026:01:01\n2027:01:01\n2028:01:01\n2029:01:01\n2030:01:01\n2031:01:01\n2032:01:01\n2033:01:01\n2034:01:01\n2035:01:01\n2036:01:01\n2037:01:01\n2038:01:01''') == '1579'\nassert solution('''1900:01:01\n2038:12:31\n''') == '125084'\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1900:01:01\n2038:12:31\n\"\"\") == \"50768\"\n\nassert solution(\n\"\"\"\n1996:03:09\n1991:11:12\n\"\"\") == \"1579\"\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1900:01:01\n2038:12:31''') == '50768'\nassert solution('''1996:03:09\n1991:11:12''') == '1579'\nassert solution('''1900:01:01\n2020:01:01''') == '0'\nassert solution('''1900:01:01\n2038:12:31''') == '50768'\nassert solution('''1900:01:01\n2038:12:31\n1991:11:12''') == '1579'\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1900:01:01''') == '50768'\nassert solution('''2038:12:31''') == '1579'\nassert solution('''1996:03:09''') == '1579'\nassert solution('''2016:03:11''') == '6558'\nassert solution('''2011:12:11''') == '12096'\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1900:01:01''') == 50768\nassert solution('''2038:12:31''') == 1579\nassert solution('''1996:03:09''') == 1579\nassert solution('''1991:11:12''') == 1579\nassert solution('''1991:11:13''') == 1579\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1900:01:01\\n2038:12:31') == '50768'\nassert solution('1996:03:09\\n1991:11:12') == '1579'\n\n\"\"\""
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1900:01:01''') == '50768'\nassert solution('''2038:12:31''') == '1579'\nassert solution('''1996:03:09''') == '1579'\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n''') == '2'\nassert solution('''6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '2'\nassert solution('''4 5\n1 2\n2 3\n3 4\n2 4 5 6\n''') == '2'\nassert solution('''8 10\n1 2\n2 3\n2 4\n4 5\n4 6\n4 7\n5 6\n5 7\n5 8\n7 8\n''') == '2'\nassert solution('''2 3\n1 2\n2 3\n''') == '1'\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n''') == '2'\nassert solution('''6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '4'\nassert solution('''3 7\n1 3\n1 4\n2 4\n''') == '4'\nassert solution('''3 4\n1 4\n1 5\n2 3\n3 4\n2 5\n''') == '4'\nassert solution('''10 4\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n6 7\n4 7\n''') == '4'\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n1\\n3\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 2\\n1 2\\n1 3\\n1 4\\n3 5\\n3 6\\n3 7\\n2 7\\n2 4 5 6\") == \"2\\n4\"\n\nassert solution(\"6 4\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n2 4 5 6\") == \"2\\n4\"\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '2'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '4'\nassert solution('3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '3'\nassert solution('4\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '2'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19') == '1'\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == \"4\"\nassert solution(\n'''\n7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n''') == \"2\"\nassert solution(\n'''\n5 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == \"2\"\nassert solution(\n'''\n5 5\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == \"0\"\nassert solution(\n'''\n5 5\n1 2\n2 3\n2 4\n1 4\n4 5\n4 6\n2 4 5 6\n''') == \"0\"\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(test0) == \"2\"\nassert solution(test1) == \"3\"\nassert solution(test2) == \"2\"\nassert solution(test3) == \"4\"\nassert solution(test4) == \"4\"\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n''') == '2'\nassert solution('''6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '4'\nassert solution('''6 6\n2 4\n2 5\n5 6\n5 1\n1 6\n1 4\n1 3\n3 2\n2 4\n2 3\n3 4\n3 2\n''') == '4'\nassert solution('''8 4\n1 2\n1 3\n1 4\n2 4\n3 4\n1 2\n3 5\n2 5\n2 7\n''') == '4'\n'''\n\n\n'''\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom functools import lru_cache\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == expected\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('2\\n3\\n4') == '-1'\nassert solution('4\\n2\\n5\\n3\\n1') == '5'\nassert solution('2\\n4\\n5\\n1\\n3') == '5'\nassert solution('2\\n1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 3 4\\n1 2 5\\n5 6 1\\n1 2 4\\n') == '5'\nassert solution('3 2\\n4 6 3\\n2 4 1\\n3 5 4\\n') == '-1'\nassert solution('1 2 2\\n1 1 2\\n1 1 2\\n') == '2'\nassert solution('1 2 2\\n1 1 2\\n1 1 2\\n') == '-1'\nassert solution('1 2 1\\n1 1 2\\n1 1 2\\n') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 5''') == '5'\nassert solution('''3 2''') == '-1'\nassert solution('''1 3 4''') == '5'\nassert solution('''5 6 1''') == '-1'\nassert solution('''1 2 5''') == '5'\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n1 3 4\n1 2 5\n5 6 1\n1 2 4''') == \"5\"\nassert solution('''3 2\n4 6 3\n2 4 1\n3 5 4''') == \"-1\"\n\n\n--- 572 ms ---\n\n\"\"\"\nimport sys\nfrom functools import lru_cache\nsys.setrecursionlimit(10**8)\n@lru_cache(None)\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 5\\n1 3 4\\n1 2 5\\n5 6 1\\n1 2 4') == '5'\nassert solution('3 2\\n4 6 3\\n2 4 1') == '-1'\nassert solution('4 6\\n1 2 4\\n3 4 1\\n4 6 5\\n1 2 3\\n3 4 5') == '-1'\nassert solution('2 2\\n1 2 1\\n1 2 1') == '-1'\nassert solution('2 2\\n1 1 1\\n1 1 1') == '-1'\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == 5\nassert solution('2 2 2 2') == -1\nassert solution('2 1 1 1') == -1\nassert solution('5 5 5 5') == -1"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ee') == 'eye'\nassert solution('kitayuta') == 'NA'\nassert solution('revive') =='reviver'\n\n\n\"\"\"\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\nassert solution(\"kitayutai\") == \"NA\"\nassert solution(\"kitayutai\") == \"NA\"\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\nassert solution(\"kitan\") == \"NA\"\nassert solution(\"akibar\") == \"NA\"\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\nassert solution(\"revive\") == \"reviver\"\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"NA\" # not possible\nassert solution(\"a\") == \"NA\" # not possible\nassert solution(\"kitayuta\") == \"NA\" # not possible\nassert solution(\"a\") == \"NA\" # not possible\nassert solution(\"aa\") == \"NA\" # not possible\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rewive') =='reviver'\nassert solution('ee') == 'eye'\nassert solution('kitayuta') == 'NA'\n\n'''"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ee') == 'eye'\nassert solution('kitayuta') == 'NA'\nassert solution('revive') =='reviver'\nassert solution('babad') == 'bab'\nassert solution('fvnbrjqe') == 'fvnbrjqe'\n"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('kitayuta') == 'NA'\nassert solution('ee') == 'eye'\nassert solution('revive') =='reviver'\nassert solution('testset') == 'NA'\n\"\"\"\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('kitayuta'), 'NA')\n        self."
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4''') == '1'\n\nassert solution('''101\n99''') == '2'\n\nassert solution('''5\n10''') == '9'\n\nassert solution('''10\n6''') == '6'\n\nassert solution('''1\n1''') == '0'"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4\\n') == '1'\nassert solution('101 99\\n') == '2'\nassert solution('5 10\\n') == '9'\nassert solution('20 30\\n') == '36'\nassert solution('10 10\\n') == '8'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n4') == '4'\nassert solution('10\\n99') == '9'\nassert solution('5\\n10') == '9'\nassert solution('101\\n99') == '2'\nassert solution('5\\n5') == '0'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n4''') == '1'\nassert solution('''101\n99''') == '2'\nassert solution('''5\n10''') == '9'\nassert solution('''101\n99''') == '2'\nassert solution('''3\n4''') == '1'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n4''') == \"1\"\nassert solution('''101\n99''') == \"2\"\nassert solution('''5\n10''') == \"9\"\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n''') == '1'\nassert solution('''101\n99\n''') == '2'\nassert solution('''5\n10\n''') == '9'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4''') == '1'\n\nassert solution('''101\n99''') == '2'\n\nassert solution('''5\n10''') == '9'\n\nprint(solution(input()))\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n''') == '1'\nassert solution('''101\n99\n''') == '2'\nassert solution('''5\n10\n''') == '9'\nassert solution('''5\n4\n''') == '7'\nassert solution('''5\n2\n''') == '5'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('101') == '2'\nassert solution('99') == '2'\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4\n''') == '1'\nassert solution('''101\n99\n''') == '2'\nassert solution('''5\n10\n''') == '9'\nassert solution('''1\n2\n''') == '0'\nassert solution('''1\n1\n''') == '1'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('asd') == 'asd'\nassert solution('1 2 3 4') == '5'\nassert solution('1 2') == '2'\nassert solution('-3 2') == '3'\nassert solution('1 2 3 4') == '6'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n6 10\\n5 6\\n100 200\\n10 10\\n5 5\\n1 19\\n1 3\\n19 5') == '11'\nassert solution('5 5\\n5 5\\n100 200\\n10 10\\n5 5') == '20'\nassert solution('4 5\\n5 5\\n5 5\\n1 19\\n1 3\\n19 5') == '3'\nassert solution('2 2\\n1 1\\n1 1') == '2'\nassert solution('1 1\\n1 1') == '1'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5''') == '11'\nassert solution('''1\n10\n100\n1''') == '10'\nassert solution('''3\n31 30\n45 45\n62 62\n1 1\n1 1\n100 100\n100 100\n1 100\n1 100\n1 100''') == '100'\nassert solution('''3\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''3\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5''') == '11'\nassert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5''') == '20'\nassert solution('''12\n25 100\n6 5\n1 4\n1 3\n1 2\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('t') == 't'\nassert solution('10') == '10'\nassert solution('15') == '15'\nassert solution('1') == '1'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n2\\n3') == 3\nassert solution('2\\n1\\n2\\n2\\n1\\n2\\n2') == 3\nassert solution('2\\n2\\n3\\n4') == 2\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 6\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '11'\nassert solution('22') == '20'\nassert solution('100') == '3'\nassert solution('1000') == '20'\nassert solution('100000000000000000') == '20'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"0 1\") == \"\"\nassert solution(\"0 1 2\") == \"\"\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5''') == \"11\"\nassert solution('''1\n1\n1''') == \"1\"\nassert solution('''1\n2\n1''') == \"1\"\nassert solution('''1\n100\n100''') == \"100\"\nassert solution('''1\n100000\n100000''') == \"100000\"\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('f') == 'f'\nassert solution('t') == 't'\nassert solution('k') == 'k'\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Harding\"\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(2) == \"Adams\"\nassert solution(8) == \"Van Buren\"\nassert solution(29) == \"Harding\"\nassert solution(3) == \"Ashley\"\nassert solution(4) == \"Annalena\"\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == 'Adams'\nassert solution('8') == 'Van Buren'\nassert solution('29') == 'Harding'\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Adams\"\nassert solution(\"2\") == \"Van Buren\"\nassert solution(\"8\") == \"Van Buren\"\nassert solution(\"29\") == \"Harding\"\nassert solution(\"7\") == \"Adams\"\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'Adams'\nassert solution('8') == 'Van Buren'\nassert solution('29') == 'Harding'\nassert solution('3') == 'Allen'\nassert solution('4') == 'Harding'\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(2) == \"Adams\"\nassert solution(8) == \"Van Buren\"\nassert solution(29) == \"Harding\"\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\n'''\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(2) == 'Adams'\nassert solution(8) == 'Van Buren'\nassert solution(29) == 'Harding'\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(2) == \"Adams\"\nassert solution(8) == \"Van Buren\"\nassert solution(29) == \"Harding\"\nassert solution(3) == \"Adams\"\nassert solution(7) == \"Van Buren\"\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 6 9\") == '6'\nassert solution(\"4 4 4\") == '4'\nassert solution(\"0 0 0\") == '0'\nassert solution(\"1 1 1\") == '0'\nassert solution(\"1 0 0\") == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\nassert solution('2 2 2') == '3'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0 0') == '0'\nassert solution('1 2 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('2 2 1') == '3'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\nassert solution('1 0 1') == '0'\nassert solution('3 4 6') == '2'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\") == 0\nassert solution(\"4 4 4\") == 4\nassert solution(\"3 6 9\") == 6\nassert solution(\"4 4 4\") == 4\nassert solution(\"0 0 0\") == 0\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\nassert solution('2 1 3') == '3'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 6 9\") == \"6\"\nassert solution(\"4 4 4\") == \"4\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 6 9\\n') == '6'\nassert solution('4 4 4\\n') == '4'\nassert solution('0 0 0\\n') == '0'\nassert solution('0 1 2\\n') == '0'\nassert solution('2 2 2\\n') == '0'\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\") == \"2\"\nassert solution(\"3 6 9\") == \"6\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"4 4 4\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1'\nassert solution('3\\n2 0 -1') == '2'\nassert solution('4\\n5 -6 -5 1') == '4'\nassert solution('10\\n1 2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -2 -1 -"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 -1\\n\") == \"1\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"4\\n1 0 -1\\n\") == \"2\"\nassert solution(\"4\\n5 -6 -5 1\\n\") == \"4\"\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('5\\n2 0 -1') == '2'\nassert solution('5\\n5 -6 -5 1') == '4'\nassert solution('5\\n-5 -6 -5 1') == '4'\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '''1'''\nassert solution('''3''') == '''2'''\nassert solution('''4''') == '''4'''\nassert solution('''5''') == '''1'''\nassert solution('''6''') == '''2'''\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5 -6 -5 1\") == \"4\"\nassert solution(\"5\\n-6 -5 1\") == \"2\"\nassert solution(\"5\\n5 5 5 5 5\") == \"0\"\nassert solution(\"2\\n5 -6 -5 1\") == \"4\"\nassert solution(\"1\\n5 -6 -5 1\") == \"1\"\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n2 0 -1\\n\") == \"2\\n\"\nassert solution(\"4\\n5 -6 -5 1\\n\") == \"4\\n\"\nassert solution(\"2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"3\\n-1 -2 -3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1 1 1 1\\n') == '1'\nassert solution('1\\n2 0 -1\\n') == '1'\nassert solution('3\\n2 0 -1\\n') == '2'\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '4'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1 1 1 1') == '1'\nassert solution('2\\n-1') == '1'\nassert solution('4\\n5 -6 -5 1') == '4'"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('500 1000 20 30') == 'Vasya'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'\nassert solution('500 1000 20 30') == 'Vasya'\nassert solution('1000 1000 1 1') == 'Tie'\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('500 1000 20 30') == 'Vasya'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('500 1000 20 30') == 'Vasya'\nassert solution('1000 1000 1 1') == 'Tie'\nassert solution('1500 1000 176 177') == 'Misha'\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Vasya\" or solution(stdin) == \"Misha\" or solution(stdin) == \"Tie\"\n\n\"\"\""
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''500 1000 20 30''') == 'Vasya'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1500 1000 176 177''') == 'Misha'\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"500 1000 20 30\") == \"Vasya\"\nassert solution(\"1000 1000 1 1\") == \"Tie\"\nassert solution(\"1500 1000 176 177\") == \"Misha\"\nassert solution(\"1000 1000 1 1\") == \"Tie\"\nassert solution(\"500 1000 20 30\") == \"Vasya\"\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''500 1000 20 30''') == 'Vasya'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1500 1000 176 177''') == 'Misha'\n\n'''\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''500 1000 20 30''') == 'Vasya'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1500 1000 176 177''') == 'Misha'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1000 500 20 30''') == 'Vasya'\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''500 1000 20 30''') == 'Vasya'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1500 1000 176 177''') == 'Misha'\n\nprint(\"Success\")\n'''\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 3 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.0 5.0 10.0\""
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1 1 1 1') == ''\nassert solution('5 5 5 5 5') == '5.0 5.0 10.0'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\nassert solution('1 1 1 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 3 1 1') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('10 5 5 5 15') == '5.0 5.0 10.0'\nassert solution('2 4 3 4 5') == '2.8333252983643749 3.8333252983643749 4.979494970980139'\nassert solution('-4 7 -3 -6 8') == '-2.0 -1.0 -1.0'\nassert solution('0 1 -2 -3 0') == '0.0 0.0 0.0'\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3 3 1 1''') == '3.7677669529663684 3.7677669529663684 3.914213562373095'\nassert solution('''10 5 5 5 15''') == '5.0 5.0 10.0'\nassert solution('''10 10 10 10 10''') == '10.0 10.0 10.0'\nassert solution('''1 1 1 1 1''') == '0.0000 0.0000 0.0000'\nassert solution('''1 1 1 1 1 1''') == '0.0000 0.0000 0.0000'\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == '0 0 0'\nassert solution(input(\"\")) == '0 0 0'\nassert solution(input(\"\")) == '0 0 0'\nassert solution(input(\"\")) == '0 0 0'\nassert solution(input(\"\")) == '0 0 0'\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 993244853\") == \"1\"\nassert solution(\"2 993244853\") == \"6\"\nassert solution(\"3 993244853\") == \"32\"\nassert solution(\"2019 993244853\") == \"923958830\"\nassert solution(\"2020 437122297\") == \"265955509\"\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\nprint(solution(stdin))"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 993244853''') == '1'\nassert solution('''2 993244853''') == '6'\nassert solution('''3 993244853''') == '32'\nassert solution('''2019 993244853''') == '923958830'\nassert solution('''2020 437122297''') == '265955509'\n\n\n\"\"\"\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '3'\nassert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n\n\n\"\"\""
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123456789') == '987654321'\nassert solution('101') == '1'\nassert solution('0000') == '0'\nassert solution('1111') == '1'\nassert solution('1110') == '0'\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1 993244853'''\n) == '1', 'broken for input 1'\nassert solution(\n'''2 993244853'''\n) == '6', 'broken for input 2'\nassert solution(\n'''3 993244853'''\n) == '32', 'broken for input 3'\nassert solution(\n'''2019 993244853'''\n) == '923958830', 'broken for input 2019'\nassert solution(\n'''2020 437122297'''\n) == '265955509', 'broken for input 2020'\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 5 4 5 4 4\n''') == '2'\nassert solution('''14\n1 5 4 5 2 4 4 5 5 4 3 4 5 5\n''') == '3'\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0448\u0438\u043c \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u0438\u0437 \u0434\u0432\u0443\u0445 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.\n\n'''"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n') == '0'\nassert solution('3\\n1\\n2\\n3\\n') == '2'\nassert solution('3\\n1\\n3\\n') == '2'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '0'\nassert solution('15\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n4 5 4 5 4 4\n''') == '2'\nassert solution('''14\n1 5 4 5 2 4 4 5 5 4 3 4 5 5\n''') == '3'\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 0\nassert solution('5 4 3 2 1 4 1 2 1 4 4 1 2 1 1 3 2 4 1 4 1') == 3\n\n\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(n):\n    if a[i] == 1:\n        count += 1\n    elif a[i] == 2:\n        if i >= 2 and a[i-1] == 1 and a[i-2] == 1:\n            count += 1\n        else:\n            count = 0\n    else:\n        if i >= 3 and a[i-1] == 1 and a[i-2] == 1 and a[i-3] == 1:\n            count += 1\n        else:\n            count = 0\n\nprint(count)"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5 4 5 4 4\\n') == '2\\n'\nassert solution('1 5 4 5 2 4 4 5 5 4 3 4 5 5\\n') == '3\\n'\nassert solution('14\\n1 5 4 5 2 4 4 5 5 4 3 4 5 5\\n') == '3\\n'\n\n'''\nn = int(input())\nscores = list(map(int, input().split()))"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n4 5 4 5 4 4\n''') == '2'\nassert solution('''14\n1 5 4 5 2 4 4 5 5 4 3 4 5 5\n''') == '3'\nassert solution('''15\n4 5 4 5 4 4 4 4 4 5 5 4 4 5 5 4 4\n''') == '2'\n'''\n\nn = int(input())\ngrade = list(map(int,input().split()))\nsumm = 0\ni = 0\nwhile i < n-2:\n    if grade[i] in [2,3,4]:\n        summ += 1\n    i += 1\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3''') == '1'\n\nassert solution('''2\n4\n5\n6''') == '2'\n\nassert solution('''3\n6\n7\n8\n9\n10''') == '1'\n\nassert solution('''4\n4\n5\n6\n7\n8''') == '2'\n\nassert solution('''5\n10\n9\n8\n7\n6''') == '2'"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 4 3') == '2'\nassert solution('3\\n1 2 3') == '3'\nassert solution('3\\n1 4 2 3') == '2'\nassert solution('5\\n1 5 4 1 5') == '3'\nassert solution('5\\n1 5 4 1 5 2') == '2'\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 5 4 5 4 4') == '2'\nassert solution('3\\n1 5 4 5 2 4') == '0'\nassert solution('5\\n1 5 4 5 2 4') == '3'\nassert solution('10\\n1 5 4 5 2 4') == '8'\nassert solution('15\\n1 5 4 5 2 4') == '10'\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 5 4 5 4\\n') == '2'\nassert solution('7\\n1 5 4 5 4 5 2\\n') == '3'\nassert solution('15\\n1 5 4 5 4 5 2 5 4 4 5 4 5 4 5 4 5 5 4 5 5 4 5 5 5 4 5 5 4 5 5 5 5 5 5 5 5 5\\n') == '8'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\nxooox\\noxoxo\\nsoxoo\\noxoxo\\nxooox\\n') == 'NO'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'NO'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'NO'\nassert solution('3\\nxpx\\npxp\\nxpe\\n') == 'YES'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == 'YES'\nassert solution('2\\n2') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('2\\n2') == 'YES'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3\\nxpe\\nxpe') == 'NO'\nassert solution('2\\nww\\nws') == 'YES'\nassert solution('3\\noxox\\noxox') == 'NO'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\nxooox\\noxoxo\\nsoxoo\\noxoxo\\nxooox') == 'NO'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw\\n') == 'NO'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('wsw') == 'NO'\nassert solution('xpx') == 'YES'\nassert solution('sws') == 'NO'\nassert solution('sxo') == 'YES'\nassert solution('xpe') == 'NO'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\nxox\\noxox\\nsoxoo\\noxoxo\\nxooox') == 'NO'\nassert solution('5\\nwsx\\nsws\\nsws\\nwsx\\nwsx') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw') == 'YES'\nassert solution('3\\nwsw\\nsws\\nwsw') == 'NO'\nassert solution('3\\nwsw\\nsws\\nwsw') == 'NO'\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\nxooox\noxoxo\nsoxoo\noxoxo\nxooox\n''') == \"NO\"\nassert solution('''3\nwsw\nsws\nwsw\n''') == \"YES\"\nassert solution('''3\nxpx\npxp\nxpe\n''') == \"NO\"\nassert solution('''3\nxpx\npxp\nxpe\n''') == \"NO\"\nassert solution('''3\nxpx\npxp\nxpe\n''') == \"NO\"\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"wsw\") == \"YES\"\nassert solution(\"wsw\") == \"NO\"\nassert solution(\"wsw\") == \"YES\"\nassert solution(\"wsw\") == \"NO\"\nassert solution(\"wsw\") == \"YES\"\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\nxooox\noxoxo\nsoxoo\noxoxo\nxooox''') == \"NO\"\nassert solution('''3\nwsw\nsws\nwsw\n''') == \"YES\"\nassert solution('''3\nxpx\npxp\nxpe''') == \"NO\"\nassert solution('''3\na\na\na\n''') == \"YES\"\nassert solution('''3\ng\ng\ng\n''') == \"YES\"\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\n'''"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\nassert solution('3 3') == '1 1'\nassert solution('2 3') == '3 1'\nassert solution('1 1') == '0 0'"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\nassert solution('2 4') == '3 2'\nassert solution('2 4') == '3 2'\nassert solution('2 4') == '3 2'\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\nassert solution('2 2') == '0 0'\nassert solution('1 1') == '1 1'\nassert solution('1 1') == '0 0'\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3 1\n'''\n    ) == '2 1'\n\nassert solution(\n'''\n2 4\n'''\n    ) == '3 2'\n\nassert solution(\n'''\n3 3\n'''\n    ) == '0 0'"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"(0, 0)\"\"\"\n\"\"\"\nTest Input\n3 1\n\nTest Output\n2 1\n\nTest Input\n2 4\n\nTest Output\n3 2\n\"\"\"\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\nassert solution('5 2') == '4 2'\nassert solution('9 3') == '10 2'\nassert solution('10 9') == '0 0'\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n\n\n\n\"\"\"\n\n##################################################################"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n\n\"\"\"\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"-2.500000000000000\"\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '1.0'\nassert solution('''1 1''') == '1.0'\nassert solution('''2 2''') == '1.0'\nassert solution('''2 2''') == '1.0'\nassert solution('''3 3''') == '1.0'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n-1 3\\n0 0\\n-1 -4\\n') == '-2.5'\nassert solution('1 2\\n-1 3\\n0 0\\n-1 -4\\n1 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n-1 3\n0 0\n-1 -4''') == '-2.500000000000000'\nassert solution('''3 2\n0 2\n5 0\n-2 -5''') == '7.000000000000000'\nassert solution('''5 1\n3 0\n-2 -5\n-5 2\n3 0''') == '7.000000000000000'\nassert solution('''9 1\n1 0\n0 1\n0 0\n0 0\n0 1\n0 -1\n0 -2\n0 -3\n0 -4''') == '7.000000000000000'\nassert solution('''9 1\n3 0\n-2 -5\n-5 2\n3 0''') == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3\n-1 3\n0 0\n-1 -4''') == '-2.500000000000000'\nassert solution('''3 2\n0 2\n5 0\n''') == '7.000000000000000'\nassert solution('''10 3\n2 3\n2 -2\n2 -1\n1 -2\n-1 1\n-1 2\n3 -2\n0 2\n-2 1\n2 1\n3 1\n''') == '13.7'\nassert solution('''5 3\n-1 5\n2 3\n1 -3\n2 -4\n3 1\n''') == '5.6'\nassert solution('''5 4\n2 2\n1 -1\n1 2\n0 -1\n1 1\n2 -1\n1 -2\n''') == '1.5'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '-2.500000000000000'\nassert solution('-1 3') == '-2.500000000000000'\nassert solution('0 0') == '7.000000000000000'\nassert solution('-1 -4') == '-2.500000000000000'\nassert solution('5 0') == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n-1 3\n0 0\n-1 -4\n\"\"\"\n) == \"-2.500000000000000\"\n\nassert solution(\n    \"\"\"\n2 3\n-1 3\n0 0\n-1 -4\n\"\"\"\n) == \"7.000000000000000\""
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-1 3\\n0 0\\n-1 -4') == '-2.500000000000000'\nassert solution('3 2\\n0 2\\n5 0') == '7.000000000000000'\nassert solution('3 2\\n0 2\\n0 2') == '-0.0'\nassert solution('3 3\\n0 3\\n0 3\\n0 3') == '-0.0'\nassert solution('3 4\\n0 2\\n0 3\\n0 4\\n0 3') == '-0.3333333333333333'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-1 3\\n0 0\\n-1 -4') == '-2.500000000000000'\nassert solution('2 3\\n-1 3\\n0 0\\n-1 -4') == '-2.500000000000000'\nassert solution('3 2\\n0 2\\n5 0\\n-1 -4') == '7.000000000000000'\nassert solution('5 5\\n0 1\\n2 3\\n0 4\\n5 0') == '5.500000000000000'\nassert solution('5 5\\n1 2\\n0 4\\n3 4\\n0 2') == '7.000000000000000'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n-1 3\\n0 0\\n-1 -4') == '-2.500000000000000'\nassert solution('2 3\\n0 2\\n5 0\\n') == '7.000000000000000'\nassert solution('7 1\\n1 1\\n5 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 3\\n2 6 10 5 9') == 'YES\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\\n'\nassert solution('5 5 3\\n7 14 2 9 5') == 'NO\\n'\nassert solution('5 3 1\\n1 2 3 7 5') == 'YES\\n3 5 1 3\\n1 7\\n1 2\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\\n'\nprint(solution(input()))\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"NO\"\nassert solution(\"5 4 5\") == \"NO\"\nassert solution(\"5 4 3\") == \"YES\"\nassert solution(\"5 4 1\") == \"YES\"\nassert solution(\"5 4 2\") == \"YES\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3\\n2 6 10 5 9\\n\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n1 9\"\nassert solution(\"4 5 3\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"5 3 1\\n1 2 3 4\\n\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n1 9\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 7 5\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n1 2 3\\n1 3\\n1 5\\n1\"\nassert solution(\"5 2 2\\n7 14 2 9 5\") == \"YES\\n3 5\\n1 2\\n1 7\\n1 4\\n1 3\"\nassert solution(\"3 1 1\\n1 1 1 1\") == \"YES\\n3\\n3\"\nassert solution(\"5 2 3\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5 5 5\\n1 1 1 1 1 1\") == \"NO\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"NO\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3\") == \"YES\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\\n\"\nassert solution(\"5 3 1\") == \"NO\\n\"\nassert solution(\"5 5 3\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n\"\nassert solution(\"5 5 3\") == \"NO\\n\"\nassert solution(\"5 5 3\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3\\n2 6 10 5 9\\n\") == \"YES\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\\n\"\nassert solution(\"5 5 3\\n7 14 2 9 5\\n\") == \"NO\\n\"\nassert solution(\"5 5 3\\n1 2 3 7 5\\n\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n\"\nassert solution(\"5 5 3\\n2 4 7 6 7\\n\") == \"NO\\n\"\nassert solution(\"5 5 3\\n2 4 7 6 7\\n\") == \"YES\\n1 7\\n1 2\\n1 6\\n1 4\\n1 3\\n\"\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 5 3\\n2 6 10 5 9\\n\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\"\nassert solution(\"5 5 3\\n7 14 2 9 5\\n\") == \"NO\\n\"\nassert solution(\"5 5 3\\n1 2 3 7 5\\n\") == \"YES\\n3 5 1 3\\n1 7\\n1 2\\n1 9\\n1 5\\n1 10\\n1 6\\n1 2\"\nassert solution(\"5 5 3\\n7 14 2 9 5\\n\") == \"NO\\n\"\nassert solution(\"5 5 3\\n7 14 2 9 5\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n'''\nimport sys\nfrom functools import lru_cache\nsys.setrecursionlimit(100000)\nfrom typing import NamedTuple, List\n\nclass Term(NamedTuple):\n    a: int\n    b: int\n    c: int\n    d: int\n\n    def is_superterm(self) -> bool:\n        return self.a == 0"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('2 4 1') == 'inf'\nassert solution('2 1 1') == '1'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('2 3 3') == 'inf'\nassert solution('2 3 3') == 'inf'\nassert solution('1 1 1') == 'inf'\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 2\n\n\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('1000000000 1000000000 1000000000') == 'inf'\nassert solution('4 100000000000 1000000000 1000000000') == '-1'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 2''') == '2'\nassert solution('''2 3 3''') == '1'\nassert solution('''2 2 2''') == 'inf'\nassert solution('''2 3 3''') == '1'\nassert solution('''2 3 2''') == 'inf'\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 3\") == \"1\"\nassert solution(\"2 0 0\") == \"inf\"\n\"\"\"\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == 2\nassert solution('2 3 3') == 1\nassert solution('1000000000 1000') == 'inf'\nassert solution('1000000000 1000000000') == 'inf'\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == 2\nassert solution('2 2 2') == 'inf'\nassert solution('2 3 1') == 2\nassert solution('1 2 1') == 1\nassert solution('2 3 1') == 'inf'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''2 1''') == '0'\nassert solution('''4 3''') == '10'\nassert solution('''1 2''') == '2'\nassert solution('''1 3''') == '3'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 3\n2 2''') == '3'\nassert solution('''2 2\n1 3\n2 2''') == '3'\nassert solution('''2 3\n1 3\n2 2''') == '3'\nassert solution('''4 3\n3 10\n2 7\n2 8\n1 1''') == '10'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1\\n2 1\\n') == '0'\nassert solution('2 2\\n1 3\\n2 2\\n') == '3'\nassert solution('4 3\\n3 10\\n2 7\\n2 8\\n1 1\\n') == '10'\nassert solution('4 2\\n3 10\\n2 7\\n2 8\\n1 1\\n') == '10'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '3'\nassert solution('2 3') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1\n2 1''') == '0'\nassert solution('''2 2\n1 3\n2 2''') == '3'\nassert solution('''4 3\n3 10\n2 7\n2 8\n1 1''') == '10'\nassert solution('''4 3\n3 10\n2 7\n2 8\n1 1\n4 8\n3 4\n2 9\n5 2\n1 4''') == '23'\n\nprint(solution('''1 1\n2 1'''))\nprint(solution('''2 2\n1 3\n2 2'''))\nprint(solution('''4 3\n3 10\n2 7\n2 8\n1 1\n4 8\n3 4\n2 9\n5 2\n1 4'''))\nprint(solution('''5 2\n4 1\n3 1\n2 2\n1 3\n2 1\n4 2\n2 3\n3 4\n4 1'''))"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''2 1''') == '0'\nassert solution('''2 2''') == '3'\nassert solution('''3 2''') == '6'\nassert solution('''2 2''') == '6'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 4 1 2') == '2'\nassert solution('5') == '2'\nassert solution('5 1 9 3 2') == '2'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 2') == '1'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5\n3 2 4 1 2'''\n) == '2'\n\nassert solution(\n'''10\n1 1 1 1 1 1 1 1 1 1'''\n) == '0'\n\nassert solution(\n'''50\n5 1 5 4 1 1 1 1 1 1 1 5 1 5 5 1 5 1 1 1 1 1 1 1 1 5 1 5 1 1 5 1 1 1 1 1 1 1 1 1 1 1 1 5 1 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n3 2 4 1 2') == '2'\nassert solution('3\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\nassert solution('2\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n3 2 4 1 2') == '2'\nassert solution('1\\n1') == '0'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('7\\n3 2 4 1 2') == '2'\nassert solution('8\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4 1 2\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5 6\") == \"2\"\nassert solution(\"10 10 10 10 10 10\") == \"0\"\nassert solution(\"3 2 4 1 2\") == \"2\"\nassert solution(\"8 27 29 47 30 31 33 35 36 37 39\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2') == '2\\n'\nassert solution('5\\n3 2 4 1 2') == '2\\n'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n2 3 1 1 3') == '2'\nassert solution('5\\n1 2 1 2 3') == '2'\nassert solution('5\\n2 3 1 1 3') == '2'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"5\n3 2 4 1 2\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"5\n4 4 4 4 4\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"10\n
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == \"25\"\n'''\n'''\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == \"25\"\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == \"25\"\nassert solution('''2 3\n2 1\n1\n2\n2\n1\n3\n1\n1\n1\n1\n1\n1\n2\n1\n2\n1\n2\n1\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3\n10 1\n1''') == '25'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '25'\nassert solution('''10 1\n1\n15 1\n2\n30 2\n1 2\n3 4\n5 6\n7 8\n9 10''') == '35'\nassert solution('''10 1\n1\n15 1\n2\n30 2\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12''') == '-1'\nassert solution('''5 3\n2 1\n1\n1\n1\n1\n1''') == '9'\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '25'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '-1'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n2 2\n1 2''') == '-1'\nassert solution('''3 3\n10 1\n1\n15 1\n2\n30 2\n1 2\n5 2\n3 1\n6 1\n7 1\n2''') == '47'\nassert solution('''3 3\n10 1\n1\n15 1\n2\n30 2\n1 2\n5 2\n3 1\n6 1\n7 1\n2''') == '47'\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(open(\"data/txt/data_1.txt\", \"r\").read()) == \"25\"\nassert solution(open(\"data/txt/data_2.txt\", \"r\").read()) == \"10\"\nassert solution(open(\"data/txt/data_3.txt\", \"r\").read()) == \"7\"\nassert solution(open(\"data/txt/data_4.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"data/txt/data_5.txt\", \"r\").read()) == \"-1\"\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2\\n') == '25'\nassert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"25\"\n'''\n'''\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '25'\n'''"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 1') == '25'\nassert solution('10 15') == '-1'\nassert solution('10 2') == '-1'\nassert solution('1 1') == '1'\nassert solution('5 3') == '-1'\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2') == '25'\nassert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2') == '25'\nassert solution('2 3\\n10 1\\n1\\n15 1\\n2\\n30 2\\n1 2') == '25'\nassert solution('3 5\\n30 2\\n4 7\\n2 8\\n3 6') == '19'\nassert solution('3 5\\n30 2\\n4 7\\n2 8\\n3 6') == '19'\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\nprint(\"All good.\")\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\nassert solution(\"3*(4*5)\") == \"60\"\nassert solution(\"3*(4*5*7)\") == \"60\"\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3+5*7+8*4''') == '303'\nassert solution('''2+3*5''') == '25'\nassert solution('''3*4*5''') == '60'\n'''\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3+5*7+8*4) == \"303\"\nassert solution(2+3*5) == \"25\"\nassert solution(3*4*5) == \"60\"\n\n\"\"\""
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3+5*7+8*4') == '303'\nassert solution('2+3*5') == '25'\nassert solution('3*4*5') == '60'\nassert solution('3+5*7+8*4') == '303'\nassert solution('3+5*7+8*4') == '303'\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3+5*7+8*4\") == \"303\"\nassert solution(\"2+3*5\") == \"25\"\nassert solution(\"3*4*5\") == \"60\"\nassert solution(\"1+3*5\") == \"23\"\nassert solution(\"1+3+5\") == \"8\"\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_string) == result_string\n\n\"\"\""
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3+5*7+8*4') == '303'\nassert solution('2+3*5') == '25'\nassert solution('3*4*5') == '60'\nassert solution('3*(4+5)*7') == '60'\nassert solution('3*4*5') == '60'\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3+5*7+8*4') == '303'\nassert solution('2+3*5') == '25'\nassert solution('3*4*5') == '60'\nassert solution('3*(4*5)') == '60'\nassert solution('1+2+3*4*5') == '120'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AC|T''') == 'AC|TL'\nassert solution('''AC|T\n\nL\n\n''') == 'AC|TL'\nassert solution('''\n\nAC|T\n\nL\n\n''') == 'AC|TL'\nassert solution('''\n\nAC|T\n\nL\n\n''') == 'AC|TL'\nassert solution('''\n\nAC|T\n\nL\n\n''') == 'AC|TL'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''AC|T\nL\n''') == 'AC|TL'\nassert solution('''|ABC\nXYZ\n''') == 'XYZ|ABC'\nassert solution('''W|T\nF\n''') == 'Impossible'\nassert solution('''ABC|\nD\n''') == 'Impossible'\nassert solution('''ABC\nE\n''') == 'Impossible'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'ABC|'\nassert solution('ABC|') == 'ABC|'\nassert solution('AC|T') == 'AC|TL'\nassert solution('AC|T|L') == 'AC|TL|L'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('AC|T') == 'AC|TL'\nassert solution('|ABC') == '|ABC'\nassert solution('L') == 'L'\nassert solution('W|T') == 'W|TL'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"AC|T|W|F\") == \"AC|TL|F|W\"\nassert solution(\"|AB|CD\") == \"|AB|CD\"\nassert solution(\"|AB|CD|EF|GH|IJ|KL|MN|OP|QR|ST|UW|V|XY\") == \"|AB|CD|EF|GH|IJ|KL|MN|OP|QR|ST|UW|V|XY\"\nassert solution(\"PQK|ABC\") == \"PQK|ABC\"\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('L') == 'ABC|'\nassert solution('W|T') == 'XYZ|'\nassert solution('ABC|') == 'XYZ|ABC'\nassert solution('D') == 'Impossible'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"|ABC\") == \"XYZ|ABC\"\nassert solution(\"ABC|\") == \"XYZ|ABC\"\nassert solution(\"\") == \"Impossible\"\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"L\") == \"AC|TL\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"ABC|\") == \"Impossible\"\nassert solution(\"XYZ|ABC\") == \"XYZ|ABC\"\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"L\") == \"AC|TL\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"F\") == \"Impossible\"\nassert solution(\"AC|T\") == \"AC|TL\"\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AC|T') == 'AC|TL'\nassert solution('W|T') == 'Impossible'\nassert solution('|ABC') == 'XYZ|ABC'\nassert solution('ABC|') == 'Impossible'\nassert solution('ABC') == 'Impossible'\n\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7 0\"\n\nassert solution(input()) == \"7 0\"\n\nassert solution(input()) == \"3 1\"\n\nassert solution(input()) == \"7 0\"\n\nassert solution(input()) == \"3 1\""
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\n\"\"\"\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\nassert solution('-2 -3 4 3 -3 -2') == '-1 -5 -1'\nassert solution('-1 -3 -2 -3 -2') == '-5 -5'\nassert solution('1 -3 -2 -3 -2') == '-5 -5'\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4 3') == '3 1'\nassert solution('6 8 2') == '7 0'\nassert solution('6 7 2') == '6 0'\nassert solution('10 10 10') == '10 10'\nassert solution('1 1 1') == '1 1'\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\nThis approach takes linear time. One could improve the algo by noticing that the optimal solution is obtained by exchanging all the chizhics in the way that is biggest possible. For each iteration of the outer loop, find all the ways to exchange the chizhics. Excluding the first element because it would be the same as exchanging the whole set of chizhics.\n\n\"\"\""
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 3\\n') == '3 1\\n'\nassert solution('6 8 2\\n') == '7 0\\n'\nassert solution('4 1\\n') == '4 1\\n'\nassert solution('8 7 6\\n') == '8 6\\n'\nassert solution('2 3\\n') == '2 3\\n'\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '3\\n1 -1\\n-1 1\\n1 1'\nassert solution('0 0\\n0 1') == '0'\nassert solution('-100000 -100000\\n-100000 -100000\\n100000 100000') == '3'\nassert solution('-1000000 -1000000\\n-1000000 -1000000\\n1000000 1000000') == '3'\nassert solution('1000000 1000000\\n1000000 1000000\\n1000000 1000000') == '3'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '3'\nassert solution('''0 0\n-1 0\n0 1\n''') == '3'\nassert solution('''0 0\n1 0\n0 1\n''') == '3'\nassert solution('''0 0\n-1 0\n0 1\n1 1''') == '4'\nassert solution('''0 0\n1 0\n0 1\n1 1\n0 0\n-1 0\n0 -1\n-1 1\n''') == '4'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n') == '3\\n1 -1\\n-1 1\\n1 1'\nassert solution('-1000 -1000\\n-1001 -1000\\n1000 1000\\n') == '0\\n0\\n1\\n-1\\n-2\\n'\nassert solution('-1000 -1000\\n-1001 -1000\\n1000 1000\\n') == '0\\n0\\n1\\n-1\\n-2\\n'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1 0\\n0 1') == '3\\n1 -1\\n-1 1\\n1 1'\n\n\"\"\""
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 0\n0 1\n''') == '3'\nassert solution('''0 0\n1 0\n2 0\n''') == '0'\nassert solution('''0 0\n1 1\n2 1\n''') == '2'\nassert solution('''0 0\n1 1\n1 1\n''') == '4'\nassert solution('''0 0\n1 1\n1 1\n2 1\n''') == '0'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '3'\nassert solution('1 0') == '1 -1'\nassert solution('0 1') == '2 1'\nassert solution('0 0 0') == '1'\nassert solution('1 0 0') == '1 1'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\") == \"3\\n1 -1\\n-1 1\\n1 1\"\nassert solution(\"0 0\\n0 1\\n1 0\") == \"2\\n-1\\n1\"\nassert solution(\"1 1\\n1 1\") == \"0\\n0\"\n\"\"\"\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0\\n1 0\\n0 1\\n') == '3\\n1 -1\\n-1 1\\n1 1'\nassert solution('0 0\\n1 0\\n0 1\\n3 0\\n0 3\\n') == '2\\n-1 -1\\n1 1\\n1 1'\nassert solution('0 0\\n1 0\\n0 1\\n3 0\\n0 3\\n4 0\\n0 4\\n') == '1\\n1 1\\n1 1'\nassert solution('0 0\\n1 0\\n0 1\\n3 0\\n0 3\\n4 0\\n0 4\\n5 0\\n0 5\\n') == '0'\nassert solution('0 0\\n1 0\\n0 1\\n3 0\\n0 3\\n4 0\\n0 4\\n5 0\\n0 5\\n6 0\\n0 6\\n') == '0'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '3'\nassert solution('''0 0\n1 0\n0 1''') == '3'\nassert solution('''1 0\n0 1''') == '2'\nassert solution('''0 0\n1 0\n1 1''') == '3'\nassert solution('''0 0\n0 1\n0 2''') == '1'\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1 0\\n0 1\\n\") == \"3\"\nassert solution(\"1 1\\n0 0\\n1 1\\n0 0\\n\") == \"4\"\nassert solution(\"1 1\\n0 0\\n0 0\\n1 1\\n0 0\\n\") == \"1\"\nassert solution(\"0 0\\n1 0\\n0 1\\n\") == \"3\"\nassert solution(\"1 1\\n1 1\\n1 1\\n\") == \"4\"\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\nassert solution('''5\n1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3'\nassert solution('''10\n10 -1 100 -1 0 0 0 0 0 0 0 0 0''') == '5'\nassert solution('''6\n-5 -5 0 -5 0 -5 0 -5 0 -5 -5''') == '5'\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 -4 -5 -6 5 -5 -6 -7 6') == '3\\n5 3 3\\n'\nassert solution('0 -1 100 -1 0') == '1\\n5 \\n'\nassert solution('2 0 1 0 0 1 1') == '1\\n1 1 1 1 1 1 1\\n'\nassert solution('2 1 0 0 1 0 1 0 1 0 0 0 0 0') == '2\\n
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3'\nassert solution('''0 -1 100 -1 0''') == '1'\n\n\n\"\"\"\n\nn = int(input())\na = [int(x) for x in input().split()]"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11\\n1 2 3 -4 -5 -6 5 -5 -6 -7 6') == '3\\n5 3 3'\nassert solution('5\\n0 -1 100 -1 0') == '1\\n5'\nassert solution('10\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3\\n5 3 3'\nassert solution('''5\n0 -1 100 -1 0''') == '1\\n5'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1''') == '1\\n1 1 1 1 1 1 1 1 1 1'\nassert solution('''2\n2 2''') == '1\\n2'\nassert solution('''2\n1 1''') == '1\\n1'\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6\n''') == '3'\nassert solution('''\n5\n0 -1 100 -1 0\n''') == '1'\nassert solution('''\n1\n-1\n''') == '1'\nassert solution('''\n4\n-4 4 4 -1\n''') == '3'\nassert solution('''\n6\n-1 -2 -3 -2 -3 -1\n''') == '4'\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == expected\n\"\"\""
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\nassert solution('''10\n-5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5''') == '1'\nassert solution('''12\n1 2 3 4 5 6 7 8 9 10 11 12''') == '3'\nassert solution('''100\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1''') == '1'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\nassert solution('2 2') == '2'\nassert solution('2 3') == '3'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 8\") == \"4\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"1000000000 1000000000\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1\"\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 8') == '4'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\nassert solution('5 7') == '2'\nassert solution('5 6') == '3'\nassert solution('5 4') == '3'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\nassert solution('1 10') == '1'\nassert solution('1 100') == '1'\nassert solution('1 101') == '2'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nimport sys\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5''') == '6'\nassert solution('''4 4''') == '5'\nassert solution('''4 4 4''') == '5'\nassert solution('''4 4 4 4''') == '5'\nassert solution('''10 10''') == '10'\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '6'\nassert solution('10 10') == '5'\nassert solution('1 1') == '0'\nassert solution('10 3') == '5'\n\n\n\"\"\""
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"6\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '6'\nassert solution('3 5') == '6'\nassert solution('4 4') == '5'\nassert solution('1 1') == '6'\nassert solution('4 4') == '5'\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"1 100\") == \"5\"\nassert solution(\"1 100 1 1\") == \"5\"\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"7 8\") == \"9\"\nassert solution(\"12 13\") == \"16\"\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 4') == '5'\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n\") == \"6\"\nassert solution(\"4 4\\n\") == \"5\"\nassert solution(\"2 10\\n\") == \"10\"\nassert solution(\"50 50\\n\") == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4 6\\n4 7\\n') == '11.00000000000000000000'\nassert solution('4 2 6\\n1 3 2 3\\n') == '5.00000000000000000000'\nassert solution('8 3 5\\n1 3 1 1 1 1 1 1 1\\n') == '7.2657894736842105'\nassert solution('5 3 5\\n1 1 1 1 1 1\\n') == '6.5'\nassert solution('5 3 5\\n1 2 3 1 1\\n') == '2.75'\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\n\"\"\""
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == '11.00000000000000000000'\nassert solution('4 2 6') == '5.00000000000000000000'\nassert solution('1 3 2 3') == '0.0000000000000000000'\nassert solution('1 3 2') == '2.0000000000000000000'\nassert solution('2 4 6') == '11.00000000000000000000'\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n-----\n\nIn[]:\n\n4 2 6\n1 3 2 3\nOut[]:\n11.00000000000000000000\n\nIn[]:\n\n4 1 6\n1 3 2 3\nOut[]:\n5.00000000000000000000\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3 5\\n2 3\") == \"1.0\"\nassert solution(\"2 3 5\\n4 7\") == \"11.00000000000000000000\"\nassert solution(\"3 10 2\\n1 2 3 4 5 6 7 8 9 10\") == \"0.9384475384521483\"\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 4 6\n4 7\n''') == '11.00000000000000000000'\nassert solution('''4 2 6\n1 3 2 3\n''') == '5.00000000000000000000'\nassert solution('''2 3 6\n4 5 6\n''') == '5.00000000000000000000'\nassert solution('''6 5 7\n4 5 6 7\n''') == '5.00000000000000000000'\n'''\n\n'''\n\nfrom collections import Counter\nfrom decimal import Decimal"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, k, m = map(int, stdin.readline().split())\nsuperheroes = list(map(int, stdin.readline().split()))\nk, m = min(k, m), max(k, m)\n\npower_sum = 0\nfor superhero_power in superheroes:\n    power_sum += superhero_power\n\nans = 0.0\ni = 0\nwhile power_sum > 0:\n    if i == k:\n        ans += power_sum\n        power_sum -= superheroes[0]\n        i = 0\n        superheroes = heroes[1:]\n    elif power_sum < m:\n        ans += superheroes[i]\n        power_sum += superheroes[i]\n        i += 1\n    else:\n        ans += power_sum\n        power_sum -= superheroes[0]\n        i = 0\n        superheroes = superheroes[1:]\n\nstdout.write(f'{ans / max((1, len(superheroes)), 1e-6):.10f}')\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 6\\n4 7\\n\") == \"11.00000000000000000000\"\nassert solution(\"4 2 6\\n1 3 2 3\\n\") == \"5.00000000000000000000\"\nassert solution(\"4 3 1 1 1\\n1 1 1 1 1\\n\") == \"5.00000000000000000000\""
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\nassert solution('10') == '-7'\nassert solution('1000') == '-3733'\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\nassert solution('6') == '-3'\nassert solution('7') == '-3'\nassert solution('8') == '-3'\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('2') == 0\nassert solution('4') == -1\nassert solution('5') == -3\nassert solution('6') == -4\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\nTest.assertEquals(solution('''4'''), '2')\nTest.assertEquals(solution('''5'''), '-3')\nTest.assertEquals(solution('''10'''), '-5')\nTest.assertEquals(solution('''20'''), '2')\nTest."
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"-3\"\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '-3'\nassert solution('3') == '-1'\nassert solution('1') == '0'\nassert solution('4') == '2'\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('4') == 2\nassert solution('5') == -3"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n0 2 0\\n') == '1'\nassert solution('5\\n4 2 3 0 1\\n') == '3'\nassert solution('7\\n0 3 1 0 5 2 6\\n') == '2'\n'''\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 0') == '1'\nassert solution('4 2 3 0 1') == '3'\nassert solution('7 0 3 1 0 5 2 6') == '2'\nassert solution('5 2 4 3 2 1') == '3'\nassert solution('7 0 3 1 0 5 2 6') == '4'\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"3\n0 2 0\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"5\n4 2 3 0 1\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"7\n0 3 1 0 5 2 6\n\"\"\") == \"2\"\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 0\") == \"\"\nassert solution(\"2 2 0\") == \"\"\nassert solution(\"2 2 0\") == \"\"\nassert solution(\"2 2 0\") == \"\"\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2 0\") == \"1\"\nassert solution(\"5\\n4 2 3 0 1\") == \"3\"\nassert solution(\"7\\n0 3 1 0 5 2 6\") == \"2\"\nassert solution(\"9\\n0 4 3 0 3 5 1 0\") == \"3\"\nassert solution(\"9\\n0 4 2 0 3 1 0 1\") == \"1\"\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 0\\n3') == '1'\nassert solution('5\\n4 2 3 0 1\\n') == '3'\nassert solution('7\\n0 3 1 0 5 2 6\\n') == '2'\nassert solution('2\\n1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"0 2 0\") == \"1\"\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 2 0\") == \"1\"\nassert solution(\"4 2 3 0 1\") == \"3\"\nassert solution(\"5 6 7 8 9 10\") == \"4\"\nassert solution(\"1 2 3 4 5 6\") == \"3\"\nassert solution(\"2 1 4 5 3\") == \"4\"\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n\nfrom collections import deque\n\nN = int(input())\ninfo = list(map(int, input().split()))\n\nq = deque(range(N))\n\ncount = 0\nwhile q:\n    i = q.popleft()\n    if not info:\n        break\n    if i == info[0] - 1:\n        q.appendleft(i)\n        count += 1\n        if info:\n            info.pop(0)\n    else:\n        q.append(i)\n\nprint(count)\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'aa'\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline())\ns = sys.stdin.readline().strip()\n\nm = len(s)"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abcda\") == \"abca\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abc\") == \"abc\"\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aaa\") == \"aa\"\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcda\") == \"abca\"\nassert solution(\"abcd\") == \"abc\"\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[1:].replace(\"a\", \"\")\n\"\"\"\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aa') == 'aa'\nassert solution('ab') == 'a'\nassert solution('pqr') == 'qr'\nassert solution('abcd') == 'abcd'\nassert solution('abcda') == 'abcd'\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"abca\"\n\"\"\"\nimport sys"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcda') == 'abca'\nassert solution('pqr') == 'pqr'\nassert solution('aaaa') == 'aaaa'\nassert solution('abcd') == 'abcd'\nassert solution('abcda') == 'abca'\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 14 15 92 65 35 89\\n\") == \"64\\n\"\nassert solution(\"7 3\\n3 14 15 92 65 35 89\\n\") == \"64\\n\"\nassert solution(\"10 4\\n9 14 28 1 7 13 15 29 2 31\\n\") == \"24\\n\"\nassert solution(\"7 5\\n3 14 15 92 65 35 89 37 42\\n\") == \"64\\n\"\nassert solution(\"7 5\\n3 14 15 92 65 35 89 37 42\\n\") == \"64\\n\"\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3') == '3'\nassert solution('2\\n4') == '0'\nassert solution('2\\n4') == '0'\nassert solution('2\\n4') == '0'\nassert solution('2\\n4') == '0'\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 4\\n9 14 28 1 7 13 15 29 2 31') == '24'\nassert solution('7 3\\n3 14 15 92 65 35 89') == '64'\nprint(solution(stdin))"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 4''') == '24'\nassert solution('''7 3''') == '64'\n'''\n\n'''"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4\n9 14 28 1 7 13 15 29 2 31\n''') == '24'\nassert solution('''7 3\n3 14 15 92 65 35 89\n''') == '64'\nassert solution('''5 2\n1 2 3 4 5\n''') == '0'\nassert solution('''2 2\n3\n''') == '3'\nassert solution('''8 2\n6 7 8 9 10 11 12 13\n''') == '16'\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('input/ex5') == '64'\n\"\"\"\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n9 14 28 1 7 13 15 29 2 31\") == '24'\nassert solution(\"7 3\\n3 14 15 92 65 35 89\") == '64'\nassert solution(\"6 10\\n3 7 6 4 5 9 8 9 2 2\") == '43'\nassert solution(\"9 10\\n3 7 6 4 5 9 8 9 2 2\") == '43'\nassert solution(\"10 5\\n3 7 6 4 5 9 8 9 2 2\") == '42'\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 4\\n9 14 28 1 7 13 15 29 2 31\\n') == '24'\nassert solution('7 3\\n3 14 15 92 65 35 89\\n') == '64'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n3 2 1\\n3 2 2 3\\n') == '12'\nassert solution('4\\n1 2 3\\n3 2 1\\n3 2 2 3\\n') == '12'\nassert solution('3\\n1 2\\n3 2\\n2 1 3\\n') == '11'\nassert solution('2\\n1\\n1\\n1 1\\n') == '4'\n\n\n\n'''\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n3 2 1\\n3 2 2 3') == '12'\nassert solution('4\\n1 2 3\\n3 2 1\\n3 2 2 3') == '11'\nassert solution('2\\n1\\n1\\n1 1') == '4'\nassert solution('3\\n1 2\\n3 2 1\\n3 2 2 3') == '12'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 2 3\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''3\n1 2\n3 2\n2 1 3\n''') == '11'\nassert solution('''2\n1\n1\n1 1\n''') == '4'\nassert solution('''4\n1 2 3\n3 2 1\n3 2 2 3\n''') == '11'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n3 2 1\\n3 2 2 3') == '12'\nassert solution('3\\n1 2\\n3 2 2 3') == '11'\nassert solution('2\\n1\\n1\\n1 1\\n') == '4'\nassert solution('3\\n1 2\\n3 2 2 3') == '11'\nassert solution('1\\n1\\n1\\n1 1\\n') == '4'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 3\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''\n3\n1 2\n3 3\n2 1 3\n''') == '11'\nassert solution('''\n2\n1\n1\n1 1\n''') == '4'\nassert solution('''\n1\n1\n1 1\n''') == '4'\nassert solution('''\n3\n1 2\n3 3\n2 1 3\n''') == '11'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2\\n2') == '3'\nassert solution('1\\n1\\n1') == '4'\nassert solution('1\\n1\\n1\\n1') == '11'\nassert solution('1\\n1\\n1\\n1\\n1') == '11'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n') == '4'\nassert solution('2\\n1\\n1\\n') == '12'\nassert solution('1\\n1\\n2\\n') == '11'\nassert solution('1\\n1\\n1\\n2\\n') == '11'\nassert solution('3\\n1\\n3\\n2\\n') == '11'\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"[Finished in 0.1s]\"\"\".strip()\n\"\"\"\nMy initial solution\n\"\"\"\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4\n1 2 3\n3 2 1\n3 2 2 3\n\"\"\") == \"12\"\n\nassert solution(\"\"\"3\n1 2\n3 2\n2 1 3\n\"\"\") == \"11\"\n\nassert solution(\"\"\"2\n1\n1\n1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"1\n1\n1\n1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"1\n1\n1\n1 1\n\"\"\") == \"4\""
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 3\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''3\n1 2\n3 3\n2 1 3\n''') == '11'\nassert solution('''2\n1\n1\n1 1\n''') == '4'\n'''"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1 1 1 2 2\\n0 1 0 1 1 1\\n0 1 0 1 0 1\\n0 1 1 1 1 1') == '4\\n6 6 6 8 2\\n'\nassert solution('2\\n0 1\\n0 1') == '2\\n2\\n'\nassert solution('3\\n0 1 1 1\\n0 1 0 1\\n0 1 0 1\\n0 1 1 1\\n0 1 0 1\\n0 1 1 1\\n0 1 1 1\\n0 1 0 1\\n0 1 1 1') == '3\\n3 3 3 6\\n'\nassert solution('5\\n0 1 1 1 1 1 1\\n0 1 0 1 1 1 1\\n0 1 0 1 0 1 1\\n0 1 1 1 1 1 1\\n0 1 0 1 1 1 1\\n0 1 1 1 1 1 1\\n0 1 0 1 1 1 1\\n0 1 1 1 1 1 1\\n0 1 1 1 1 1 1\\n0 1 1 1 1 1 1') == '5\\n5 5 5 5 5 5 5\\n'\nassert solution('4\\n0 1 1 1 1\\n0 1 0 1 1\\n0 1 0 1 0\\n0 1 1 1 1\\n0 1 0 1 1\\n0 1 0 1 0\\n0 1 1 1 1\\n0 1 0 1 1\\n0 1 1 1 1\\n0 1 0 1 1\\n0 1 1 1 1\\n0 1 1 1 1') == '4\\n6 6 6 6 6 6 6\\n'\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 0\") == \"1 2 2 3 3 3 \"\nassert solution(\"10 1\") == \"2 3 3 4 5 6 6 6 8 2 \"\nassert solution(\"2 2\") == \"2 2 \"\nassert solution(\"5 3\") == \"4 4 4 4 4 4 \"\nassert solution(\"5 4\") == \"4 4 4 4 4 4 \"\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 0\n0 1 1 2 3 2\n''') == '1 2 2 3 3 3'\nassert solution('''10 1\n0 1 0 3 4 5 2 3 7 0\n''') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('''2 2\n0 1\n''') == '2 2'\nassert solution('''5 1\n0 1 0 3 4\n''') == '5 6 5 5 6'\nassert solution('''10 2\n0 1 0 3 4 5 2 3 7 0\n''') == '2 3 3 4 4 4 4 5 6 6 6 6 8 2'\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1\\n0 1 0 3 4 5 2 3 7 0') == '2 2 2 3 3 3 4 5 6 6 6 8 2'\nassert solution('2 2\\n0 1\\n') == '2 2'\nassert solution('3 4\\n1 0 1 2 3\\n1 1 1\\n') == '3 3 3 4 4 4'\nassert solution('6 0\\n0 1 1 2 3 2\\n') == '2 2 2 3 3 3 3'\nassert solution('6 1\\n0 1 0 3 4 5 2 3 7 0\\n') == '1 2 2 3 3 3 3 4 4 4 5 6 6 6 8 2'\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 0\\n0 1 1 2 3 2\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\\n0 1 0 3 4 5 2 3 7 0\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\\n0 1\") == \"2 2\"\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"6 0\") == \"1 2 2 3 3 3\"\nassert solution(\"10 1\") == \"2 3 3 4 5 6 6 6 8 2\"\nassert solution(\"2 2\") == \"2 2\"\n\"\"\"\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 0') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('10 1') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('2 2') == '2 2'\nassert solution('2 2') == '2 2'\nassert solution('2 2') == '2 2'\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0\\n0 1') == '2'\nassert solution('3 1\\n0 1 2\\n1 1 3\\n2 1 3') == '3'\nassert solution('3 2\\n0 1 2\\n1 1 3\\n2 1 3\\n2 1 3') == '3'\nassert solution('4 0\\n0 1 2 3 4\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n6 7 8 9 10\\n7 8 9 10 11\\n8 9 10 11 12\\n9 10 11 12 13\\n10 11 12 13 14\\n11 12 13 14 15\\n12 13 14 15 16\\n13 14 15 16 17\\n14 15 16 17 18\\n15 16 17 18 19\\n16 17 18 19 20\\n17 18 19 20 21\\n18 19 20 21 22\\n19 20 21 22 23\\n20 21 22 23 24\\n21 22 23 24 25') == '210'\nassert solution('4 0\\n0 1 2 3\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8') == '7'\n\n\n-----\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('test') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('1 2 3') == 'YES'\nassert solution('1 2 4') == 'YES'\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\n'''\n\n'''\nYou've finally come to the time when you think about your algorithm for solving the task. After a good learning process, you figured out that you can use the given sum of elements of the array to find the value of $m$. In order to do that, you need to know that you should be able to rearrange the array in such a way that the given formula holds.\n\nSo, now you need to find the maximum sum you can achieve while reordering the elements of the array.\n\nWrite 5 lines of code to test the correctness of solution: For a given array $a$ consisting of $n$ integers and a given integer $m$ find if it is possible to reorder elements of the array $a$ in such a way that $\\sum_{i=1}^{n}{\\sum_{j=i}^{n}{\\frac{a_j}{j}}}$ equals $m$? It is forbidden to delete elements as well as insert new elements. Please note that no rounding occurs during division, for example, $\\frac{5}{2}=2.5$.\n\nInput\n\nThe first line contains a single integer $t$\u00a0\u2014 the number of test cases ($1 \\le t \\le 100$). The test cases follow, each in two lines.\n\nThe first line of a test case contains two integers $n$ and $m$ ($1 \\le n \\le 100$, $0 \\le m \\le 10^6$). The second line contains integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i \\le 10^6$)\u00a0\u2014 the elements of the array.\n\nOutput\n\nFor each test case print \"YES\", if it is possible to reorder the elements of the array in such a way that the given formula holds, and \"NO\" otherwise.\n\nConstraints\n\n1\u2264t\u2264100\n1\u2264n\u2264100\n0\u2264m\u226410^6\n\u22121\u2264a_i\u226410^6\n\nSample Input\n\n2\n3 8\n2 5 1\n4 4\n0 1 2 3\n\nSample Output\n\nYES\nNO\n\nExplanation\n\nExample 1\n\nThe sum of the elements of the array is equal to (\\frac{1}{1} + \\frac{2}{2} + \\frac{5}{3}), and it can be achieved with rearranging the array with [1, 2, 5].\n\nExample 2\n\nThe sum of the elements of the array is equal to (\\frac{1}{1} + \\frac{2}{2} + \\frac{5}{3}), and it can be achieved with rearranging the array with [1, 4, 2].\n'''\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 1\\n3 3\\n0 0\\n0 0') == 'YES'\nassert solution('1\\n0\\n0\\n0') == 'YES'\nassert solution('1\\n0\\n0\\n0\\n0') == 'YES'\nassert solution('1\\n0\\n0\\n0\\n0\\n0') == 'YES'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == 'YES'\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2\n3 8\n2 5 1\n4 4\n0 1 2 3\n\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"\n2\n4 5\n1 2 3 4\n\"\"\"\n) == 'NO'"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is True\nassert solution(\"3 8\") is True\nassert solution(\"2 5 1\") is True\nassert solution(\"2 4\") is False\nassert solution(\"1 3\") is False\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('0 1 2 3') == 'NO'\nassert solution('5 2 1') == 'NO'\nassert solution('5 5') == 'YES'\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n8\\n2\\n5\\n1\") == \"YES\"\nassert solution(\"2\\n3\\n8\\n2\\n5\\n1\") == \"NO\"\nassert solution(\"2\\n3\\n8\\n4\\n4\") == \"YES\"\nassert solution(\"2\\n3\\n8\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"YES\"\nassert solution(\"1\\n0\\n2\") == \"YES\"\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == 'YES'\nassert solution('1') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('1 2 1 2') == 'NO'\nassert solution('1 2 1 2 3') == 'NO'\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stdin') == 'NO'\n\nfrom io import StringIO\nassert solution(StringIO('stdin')) == 'NO'\n\nfrom contextlib import redirect_stdout\nassert solution(StringIO('stdin')) == 'NO'\n\nfrom io import StringIO\nimport sys\n\nwith redirect_stdout(StringIO()):\n    solution(sys.stdin) == 'NO'\n\nassert solution(StringIO('stdin')) == 'NO'\n\nwith redirect_stdout(StringIO()):\n    solution(StringIO('stdin')) == 'NO'\n\nassert solution(StringIO('stdin')) == 'NO'\n\nwith redirect_stdout(StringIO()):\n    solution(StringIO('stdin')) == 'NO'"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '''10'''\nassert solution('''5 1''') == '''10'''\nassert solution('''8 2''') == '''12'''\nassert solution('''3 4''') == '''12'''\n'''\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '''10'''\nassert solution('''5 1''') == '''10'''\nassert solution('''8 2''') == '''12'''\nassert solution('''3 4''') == '''12'''\nassert solution('''5 1''') == '''10'''\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\n\"\"\""
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n\"\"\""
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n5 1\n8 2\n3 4\n''') == '10\\n12\\n12'\n\nassert solution('''2\n5 1\n8 2\n10 7\n''') == '10\\n20'\n\nassert solution('''3\n5 1\n8 2\n10 7\n''') == '10\\n12\\n12'\n\nassert solution('''2\n5 1\n8 2\n10 7\n''') == '10\\n12\\n12'\n\nassert solution('''1\n5 1\n8 2\n10 7\n''') == '10'\n\n\n-----Alternate Solution-----"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '''10'''\nassert solution('''8 2''') == '''12'''\nassert solution('''3 4''') == '''12'''\nassert solution('''5 1''') == '''10'''\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1\n8 2\n3 4''') == '10\\n12\\n12'\nassert solution('''5 1\n8 2\n8 2''') == '10\\n12\\n12'\nassert solution('''5 1\n8 2\n8 2\n8 2\n8 2''') == '10\\n12\\n12'\nassert solution('''5 1\n8 2\n8 2\n8 2\n8 2''') == '10\\n12\\n12'\nassert solution('''5 1\n8 2\n8 2\n8 2\n8 2\n8 2''') == '10\\n12\\n12'\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Possible'\n\n-----Remarks-----\n- $n$ is the number of vertices and $m$ is the number of edges.\n- It is guaranteed that there is no repeated edge in the graph.\n- The graph is connected and undirected.\n- The vertices are numbered from $1$ to $n$.\n- The graph contains neither self-loops nor multiple edges.\n- If there exists a valid graph then one answer is sufficient.\n- If there are multiple answers then any of them is correct.\n- Each edge is represented in the form $(v, u)$.\n- The solution set must contain at least one edge between each pair of vertices $v$ and $u$.\n- The graph is relatively prime, so you can use Euclidean algorithm to find the GCD.\n- The number of edges in the graph must be less than or equal to the number of vertices times the number of vertices.\n- It is guaranteed that there is no repeated edge in the graph.\n- It is guaranteed that the graph is connected and undirected.\n- It is guaranteed that the graph contains neither self-loops nor multiple edges.\n- It is guaranteed that the graph contains at least one edge between each pair of vertices $v$ and $u$.\n- It is guaranteed that the answer is \"Possible\".\n- It is guaranteed that there is no repeated edge in the graph.\n\n------\n-----\n\n------\n-----\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------\n\n------"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n\") == \"Possible\"\nassert solution(\"6 12\\n\") == \"Impossible\"\nassert solution(\"4 4\\n\") == \"Possible\"\nassert solution(\"4 2\\n1 3\\n2 3\\n3 1\\n\") == \"Possible\"\nassert solution(\"1 2\\n\") == \"Impossible\"\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\n\n\n\"\"\"\n\nfrom math import gcd\n\nn, m = map(int, stdin.split())"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 6\\n') == 'Possible'\nassert solution('6 12\\n') == 'Impossible'\n\n\n\"\"\""
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(5000)\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('5 6') == 'Possible'\nassert solution('5 6') == 'Possible'\nassert solution('5 6') == 'Possible'\nassert solution('5 6') == 'Possible'\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == ''\n\"\"\"\nfrom fractions import gcd\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('5 6') == 'Possible'\nassert solution('3 2') == 'Possible'\nassert solution('1 2') == 'Possible'\nassert solution('1 2') == 'Possible'\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\nassert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\nassert solution('1 2') == 'Impossible'\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 12') == 'Possible'\nassert solution('5 6') == 'Possible'\nassert solution('6 12') == 'Impossible'\nassert solution('1 100') == 'Possible'\nassert solution('4 6') == 'Possible'\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1\\n1 1\\n') == 'WIN'\nassert solution('12 2\\n4 1\\n8 1\\n') == 'WIN'\nassert solution('1 1\\n1 2\\n') == 'LOSE'\nassert solution('1 1\\n1 1\\n') == 'LOSE'"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4') == \"WIN\"\nassert solution('1 1') == \"WIN\"\nassert solution('1 1\\n1 1') == \"WIN\"\nassert solution('1 1\\n1 2') == \"LOSE\"\nassert solution('1 1\\n2 1') == \"LOSE\"\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"WIN\"\nassert solution(\"12 2\") == \"WIN\"\nassert solution(\"1 1\") == \"LOSE\"\nassert solution(\"1 2\") == \"LOSE\"\nassert solution(\"4 1\") == \"LOSE\"\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"WIN\"\nassert solution(stdin) == \"LOSE\"\nassert solution(stdin) == \"WIN\"\nassert solution(stdin) == \"WIN\""
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'WIN'\n\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n1 1\n''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n''') == 'WIN'\nassert solution('''1 1\n1 2\n''') == 'LOSE'\nassert solution('''4 5\n2 1\n1 1\n3 1\n2 1\n''') == 'LOSE'\nassert solution('''6 3\n5 2\n4 1\n3 2\n4 1\n2 1\n''') == 'WIN'\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"WIN\"\nassert solution(\"12 2\") == \"WIN\"\nassert solution(\"1 1\") == \"LOSE\"\n\n\n\n\n\"\"\""
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"WIN\"\nassert solution(\"12 2\") == \"WIN\"\nassert solution(\"1 1\") == \"LOSE\"\nassert solution(\"12 1\") == \"LOSE\"\nassert solution(\"1 1\") == \"LOSE\"\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 1\n1 1\n\"\"\"\n    ) == \"WIN\"\n\nassert solution(\n\"\"\"\n12 2\n4 1\n8 1\n\"\"\"\n    ) == \"WIN\"\n\nassert solution(\n\"\"\"\n1 1\n1 2\n\"\"\"\n    ) == \"LOSE\"\n"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1\n1 1\n''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n''') == 'WIN'\nassert solution('''1 1\n1 2\n''') == 'LOSE'\nassert solution('''1 1\n1 2\n3 1\n''') == 'LOSE'\nassert solution('''1 1\n1 2\n3 3\n4 1\n3 2\n2 3\n2 1\n2 4\n2 2\n''') == 'WIN'\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\nassert solution('''5 4\n1 0 0 0 1\n0 1 1 1 1\n''') == 'YES'\nassert solution('''5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\n'''\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\n\nassert solution('''5 4\n1 0 0 0 1\n0 1 1 1 1\n''') == 'YES'\n\nassert solution('''5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('5 2') == 'NO'\nassert solution('5 2') == 'NO'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('5 4\\n1 0 0 0 1\\n0 1 1 1 1\\n') == 'YES'\nassert solution('5 2\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\nassert solution('5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\nassert solution('5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 1 1 1 1\n1 1 1 1 1\n''') == 'YES'\n\nassert solution('''5 4\n1 0 0 0 1\n0 1 1 1 1\n''') == 'YES'\n\nassert solution('''5 2\n0 1 1 1 1\n1 1 1 1 1\n''') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('5 2') == 'NO'\nassert solution('5 4\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('5 4\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 4') == 'YES'\nassert solution('5 2') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('1 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('5 4\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\n\n\n'''"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n1 1 1 1 1') == \"YES\"\nassert solution('2\\n2\\n0 0 0 0 1') == \"YES\"\nassert solution('3\\n2\\n1 0 0 0 1') == \"YES\"\nassert solution('3\\n3\\n1 0 0 0 1') == \"NO\"\nassert solution('3\\n3\\n0 0 1 0 1') == \"NO\"\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n4 3 1 2\\n\") == \"4\"\nassert solution(\"5 6\\n4 3 1 1 2\\n\") == \"3\"\nassert solution(\"1 3\\n4\\n\") == \"0\"\nassert solution(\"1 3\\n5\\n\") == \"0\"\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''4 10\n4 3 1 2\n''') == '4'\n\nassert solution(\n'''5 6\n4 3 1 1 2\n''') == '3'\n\nassert solution(\n'''1 3\n4\n''') == '0'\n\nassert solution(\n'''1 1\n1\n''') == '0'\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n4 3 1 2\") == \"4\"\nassert solution(\"5 6\\n4 3 1 1 2\") == \"3\"\nassert solution(\"1 3\\n4\") == \"0\"\nassert solution(\"4 9\\n4 3 1 1 2\") == \"4\"\nassert solution(\"2 5\\n1 3 1\") == \"3\"\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 3 1\") == \"1 2 3\"\nassert solution(\"4 10\") == \"4\"\nassert solution(\"5 6\") == \"3 1 4\"\nassert solution(\"1 3\") == \"0\"\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n4 3 1 2\") == \"4\"\nassert solution(\"5 6\\n4 3 1 1 2\") == \"3\"\nassert solution(\"1 3\\n4\") == \"0\"\nassert solution(\"5 6\\n4 3 1 1 2\") == \"3\"\nassert solution(\"2 2\\n1\") == \"1\"\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1 1 1 1 1 1\\n0 0 0 0 1 1 1 0\\n0 0 0 0 1 1 1 0\\n0 0 0 0 1 1 1 0\\n0 0 0 0 1 1 1 0\\n0 0 0 0 1 1 1 0\\n0 0 0 0 1 1 1 0\") == \"YES\"\nassert solution(\"9\\n1 1 1 1 1 1 1\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0\") == \"NO\"\nassert solution(\"5\\n1 1 1 1 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"YES\"\nassert solution(\"7\\n1 1 1 1 1 1\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\") == \"NO\"\nassert solution(\"8\\n1 1 1 1 1 1\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\") == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('9\\n0 0 0 1 1 1 0 0 0') == 'NO'\nassert solution('5\\n1 1 1 1 1') == 'YES'\nassert solution('7\\n0 0 0 1 1 1 1') == 'NO'\nassert solution('8\\n1 1 1 0 0 0 1 1') == 'NO'\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'YES' or 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'NO'\nassert solution('0 0 0 1 1 1 0 0 0') == 'YES'\nassert solution('0 0 0 1 1 1 0 0 0') == 'NO'\nassert solution('1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1') == 'NO'\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"NO\"\nassert solution(\"2\\n\") == \"NO\"\nassert solution(\"3\\n\") == \"NO\"\nassert solution(\"4\\n\") == \"NO\"\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"NO\"\nassert solution(input(\"1 1 1 0 0 0 1 1\")) == \"NO\"\nassert solution(input(\"1 1 0 1 1 0 1 1\")) == \"YES\"\nassert solution(input(\"0 0 0 1 1 1 1 0 0 0\")) == \"NO\"\nassert solution(input(\"1 1 1 1 1 1\")) == \"YES\"\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\n0 0 0 1 1 1 0 0 0') == 'YES'\nassert solution('7\\n0 0 0 1 1 1 1\\n') == 'NO'\nassert solution('5\\n1 1 1 1 1\\n') == 'YES'\nassert solution('8\\n1 1 1 0 0 0 1 1\\n') == 'NO'\nassert solution('9\\n1 1 0 1 1 0 1 1 0\\n') == 'NO'"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n') == 'YES'\nassert solution('2\\n0 0\\n') == 'NO'\nassert solution('3\\n1 1 1\\n1 0 0\\n1 1 1\\n0 1 0\\n') == 'NO'\nassert solution('3\\n1 1 1\\n1 0 0\\n1 1 1\\n0 0 0\\n') == 'YES'\nassert solution('3\\n1 1 1\\n1 0 0\\n1 1 1\\n0 0 0\\n') == 'NO'\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == 'NO'\nassert solution('9') == 'YES'\nassert solution('7') == 'NO'\nassert solution('9') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9\\n0 0 0 1 1 1 0 0 0') == 'YES'\nassert solution('7\\n0 0 0 1 1 1 1') == 'NO'\nassert solution('5\\n1 1 1 1 1') == 'YES'\nassert solution('8\\n1 1 1 0 0 0 1 1') == 'NO'\nassert solution('9\\n1 1 0 1 1 0 1 1 0') == 'NO'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 15\n1 2 3 4 5 6 7''') == '0 0 0 0 0 2 3'\nassert solution('''5 100\n80 40 40 40 60''') == '0 1 1 2 3'\nassert solution('''7 100\n1 2 3 4 5 6 7''') == '0 1 1 2 3'\nassert solution('''5 100\n1 2 3 4 5''') == '0 1 2 2 3'\nassert solution('''7 100\n1 2 3 4 5 6''') == '0 1 2 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0 0 0 0 0 2 3'\n\nassert solution(\"7 15\\n1 2 3 4 5 6 7\") == '0 0 0 0 0 2 3'\n\nassert solution(\"5 100\\n80 40 40 40 60\") == '0 1 1 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0 0 0 0 0 2 3'\n\n\"\"\"\n\nimport sys\nfrom typing import List\n\nMAX_INT = sys.maxsize\n\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        n, m = [int(x) for x in stdin.split()]\n        if n == 0:\n            return str(0) * n\n        elif m == 0:\n            return str(MAX_INT) * n\n        if n <= m:\n            return str(0) * n\n        exam_time = [int(x) for x in stdin.split()]\n        exam_time.sort()\n        \n        time_left = [m] * n\n        for i in range(n):\n            time_left[i] -= exam_time[i]\n        \n        for i in range(n):\n            if time_left[i] < 0:\n                time_left[i] = MAX_INT\n        \n        ans = [str(time_left[0])]\n        for i in range(1, n):\n            ans.append(str(time_left[i] - exam_time[i]))\n        return''.join(ans)\n\n\nassert Solution().solve(stdin) == '0 0 0 0 0 2 3'\nassert Solution().solve(stdin) == '0 1 1 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7 15\\n1 2 3 4 5 6 7\\n') == '0 0 0 0 0 2 3'\nassert solution('5 100\\n80 40 40 40 60\\n') == '0 1 1 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 15\\n1 2 3 4 5 6 7\") == \"0 0 0 0 0 2 3\"\nassert solution(\"5 100\\n80 40 40 40 60\") == \"0 1 1 2 3\"\nassert solution(\"7 100\\n80 40 40 40 60\") == \"0 1 1 2 3\"\n\"\"\"\n\nn, m = [int(x) for x in stdin.strip().split()]\n\nexam_times = [int(x) for x in stdin.strip().split()]\n\nfor i in range(n):\n    exam_times[i] -= exam_times[i] % m"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 3 3\\n') == '0 0 0 0'\nassert solution('7\\n15\\n1 2 3 4 5 6 7') == '0 1 1 2 3'\nassert solution('5\\n100\\n80 40 40 40 60') == '0 1 1 2 3'\nassert solution('5\\n100\\n60 60 60 60 60') == '0 0 0 0 0'\nassert solution('5\\n100\\n60 60 60 60 60') == '0 0 0 0 0'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 15\\n1 2 3 4 5 6 7\\n\") == \"0 0 0 0 0 2 3\"\nassert solution(\"5 100\\n80 40 40 40 60\\n\") == \"0 1 1 2 3\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 15\\n1 2 3 4 5 6 7\\n') == '0 0 0 0 0 2 3'\nassert solution('5 100\\n80 40 40 40 60\\n') == '0 1 1 2 3'\nassert solution('1 10\\n1 2 3 4 5 6 7 8 9 10\\n') == '0 0 0 0 0 0 0 0'\nassert solution('5 100\\n1 2 3 4 5 6 7 8 9 10\\n') == '0 0 0 0 0 0 0 0'\nassert solution('5 100\\n1 2 3 4 5 6 7 8 9 10\\n') == '0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 15\n1 2 3 4 5\n''') == '0 0 0 0 0 2 3'\nassert solution('''5 100\n80 40 40 40 60\n''') == '0 1 1 2 3'\nassert solution('''3 4\n1 2\n''') == '1 1 2'\nassert solution('''3 2\n1\n''') == '0'\nassert solution('''5 8\n7 2 4 5 1\n''') == '0 1 1 2 3'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == input\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('0 2') == '1'\nassert solution('0 3') == '1'\nassert solution('0 4') == '1'\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '0'\nassert solution('2 0') == '1'\nassert solution('1 2') == '0'\nassert solution('2 3') == '0'\nassert solution('2 4') == '0'\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0') == '0'\nassert solution('0 0') == '1'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    input().split()) == input()\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 0') == '0'\nassert solution('1 0') == '1'\nassert solution('5 3') == '2'\nassert solution('2 1') == '2'\nassert solution('1') == '0'\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n1\n''') == '1'\nassert solution('''1\n0\n''') == '0'\nassert solution('''0\n0\n''') == '0'\nassert solution('''10\n3\n''') == '3'\nassert solution('''1\n1\n''') == '0'\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\n0 4 5 6 7') == '2'\nassert solution('1 0\\n0') == '1'\nassert solution('5 0\\n1 2 3 4 5') == '0'\n\"\"\"\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 3\n0 4 5 6 7''') == '2'\n\nassert solution('''1 0''') == '1'\n\nassert solution('''5 0\n1 2 3 4 5''') == '0'\n\nprint('Test success!')\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('10 5') == '3 0 3'\nassert solution('4 5') == '2 1 3'\nassert solution('2 4') == '2 1 3'\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('2 1') == '2 1 1'\nassert solution('2 2') == '0 1 0'\n\"\"\"\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nprint(solution(stdin))"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('2 1') == '2 0 1'\nassert solution('2 2') == '0 0 1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3 0 3\"\nassert solution(\"1 5\") == \"2 1 3\"\nassert solution(\"2 5\") == \"2 1 3\"\n\"\"\"\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('3 3') == '2 0 2'\nassert solution('3 5') == '2 1 3'\nassert solution('3 4') == '2 0 2'\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"3 0 3\"\nassert solution(\"2 4\") == \"2 1 3\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('2 1') == '2 0 1'\nassert solution('1 2') == '0 1 2'\nassert solution('3 1') == '2 1 0'\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3 0 3'\nassert solution('1 4') == '2 1 3'\nassert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('1 3') == '0 1 0'\n"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"3 0 3\"\nassert solution(\"2 4\") == \"2 1 3\"\nassert solution(\"1 2\") == \"0 1 1\"\nassert solution(\"1 3\") == \"0 0 2\"\nassert solution(\"1 5\") == \"0 0 3\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\nassert solution('20 of month') == '1'\nassert solution('10 of month') == '0'\nassert solution('1 of month') == '0'\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\n\n\"\"\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\nassert solution('3 of week') == '4'\nassert solution('12 of month') == '3'\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\nassert solution(\"31 of month\") == \"10\"\nassert solution(\"31 of month\") == \"9\"\nassert solution(\"1 of week\") == \"52\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\nassert solution(\"5 of week\") == \"25\"\nassert solution(\"1 of month\") == \"1\"\nassert solution(\"2 of month\") == \"4\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\nassert solution(\"3 of month\") == \"2\"\nassert solution(\"4 of month\") == \"5\"\nassert solution(\"5 of month\") == \"6\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\nassert solution(\"7 of week\") == \"49\"\nassert solution(\"24 of month\") == \"0\"\nassert solution(\"12 of month\") == \"0\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 of week\") == \"52\"\nassert solution(\"30 of month\") == \"11\"\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 of week\n\"\"\") == \"52\"\n\nassert solution(\n\"\"\"\n30 of month\n\"\"\") == \"11\"\n\nassert solution(\n\"\"\"\n28 of week\n\"\"\") == \"28\"\n\nassert solution(\n\"\"\"\n27 of month\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n25 of week\n\"\"\") == \"25\""
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'NO'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 5\n2 4 8 3 6\n''') == 'NO'\nassert solution('''10 5\n2 4 5 7 9\n''') == 'YES'\nassert solution('''10 5\n2 4 5 7 9\n''') == 'NO'\nassert solution('''10 0\n2 4 5 7 9\n''') == 'YES'\nassert solution('''10 0\n1 4 5 7 9\n''') == 'NO'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == 'YES'\nassert solution('1\\n0\\n0') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 8 3 6\\n2 4 5 7 9\\n') == 'YES'\nassert solution('2 4 8 3 6\\n2 4 5 7 9\\n') == 'NO'\nassert solution('2 4 8 3 6\\n2 4 5 7 9\\n') == 'NO'\nassert solution('2 4 8 3 6\\n2 4 5 7 9\\n') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10\\n') == 'YES'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 5\\n2 4 8 3 6\\n') == 'NO'\nassert solution('5 5\\n2 4 5 7 9\\n') == 'YES'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 5\n2 4 8 3 6''') == 'YES'\nassert solution('''10 5\n2 4 5 7 9''') == 'NO'\n'''\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('2 3') == 'YES'\nassert solution('10 5') == 'NO'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10 5\n2 4 8 3 6''') == 'YES'\nassert solution('''10 5\n2 4 5 7 9''') == 'NO'\n\n'''"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == None\n\n\"\"\"\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10 5\n2 4 8 3 6\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n10 5\n2 4 5 7 9\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n10 10\n5\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n10 10\n5\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n10 10\n5\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 1 1\\n') == '-1'\nassert solution('1\\n2 1 1\\n') == '0'\nassert solution('3\\n4 2 1 1\\n') == '1'\nassert solution('1\\n4 1 1 1\\n') == '0'\nassert solution('2\\n1 1 1\\n') == '-1'\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 2 2''') == '0'\nassert solution('''7\n14 3 8 7\n20 70 2 7\n5 6 1 1''') == '4'\nassert solution('''2\n9 10 1 9\n9 9 9 9''') == '-1'\n'''\n'''\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4\\n10\\n0\\n-1'\nassert solution('6\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4\\n10\\n0\\n-1'\nassert solution('8\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4\\n10\\n0\\n-1'\nassert solution('9\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4\\n10\\n0\\n-1'\nassert solution('10\\n3 10 1 2\\n7 14 3 8\\n20 70 2 7\\n5 6 1 1') == '4\\n10\\n0\\n-1'\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 10 1 2\") == \"4\"\nassert solution(\"7 14 3 8\\n20 70 2 7\") == \"10\"\nassert solution(\"20 70 2 7\\n5 6 1 1\") == \"0\"\nassert solution(\"9 12 3 4\\n12 21 2 1\\n13 11 3 1\") == \"-1\"\n\n-----Solutions Overview-----\n\n\"\"\""
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 3 4\\n2 5 1 3') == '2'\nassert solution('1\\n1 3 3\\n1 2 3 4\\n1 1 4 4\\n1 4 4 4\\n1 1 2 2') == '2'\nassert solution('1\\n1 2 2\\n1 2 2\\n1 2 2\\n1 1 2 2\\n1 2 2 3') == '3'\nassert solution('1\\n1 2 2\\n1 2 1\\n1 1 2 1\\n1 1 1 1\\n1 1 2 1\\n1 2 1 2') == '4'\nassert solution('1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\nadd\\nfor 5\\nend\\nfor 3\\nend\\n') == '11'\nassert solution('1\\nadd\\nfor 3\\nend\\nfor 3\\nend\\n') == '3'\nassert solution('1\\nadd\\nfor 3\\nend\\nfor 3\\nend\\n') == '3'\nassert solution('1\\nadd\\nfor 2\\nend\\nfor 2\\nend\\n') == '1'\nassert solution('1\\nadd\\nfor 2\\nend\\nfor 2\\nend\\n') == '0'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\nadd\\nend\\nfor 1\\nend\\nend\\n') == '0'\nassert solution('1\\nadd\\nend\\nfor 1\\nend\\nend\\n') == '1'\nassert solution('1\\nadd\\nend\\nfor 1\\nend\\nend\\n') == '1'\nassert solution('1\\nadd\\nfor 1\\nend\\nend\\n') == '1'\nassert solution('1\\nadd\\nfor 1\\nend\\nend\\n') == '1'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('add\\nfor 100\\nend\\nend\\n') == 'OVERFLOW!!!'\nassert solution('add\\nfor 1\\nend\\nfor 100\\nend\\nend\\n') == '0'\nassert solution('add\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\n') == '0'\nassert solution('add\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\n') == '0'\nassert solution('add\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\nfor 1\\nend\\n') == '0'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('9') == 'OVERFLOW!!!'\nassert solution('3') == '2'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"2\\n1\") == \"OVERFLOW!!!\\n\"\nassert solution(\"2\\n2\\n1\") == \"1\\n\"\nassert solution(\"2\\n2\\n2\") == \"2\\n\"\nassert solution(\"2\\n2\\n2\\n1\") == \"1\\n\"\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\nadd\\nfor 5\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend') == '5'\nassert solution('1\\nadd\\nfor 0\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend') == '0'\nassert solution('1\\nadd\\nfor 10\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend') == 'OVERFLOW!!!'\nassert solution('2\\nadd\\nfor 43\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend') == '161'\nassert solution('2\\nadd\\nfor 62\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend\\nadd\\nend') == '0'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"OVERFLOW!!!\", \"Your solution is wrong!\""
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\\\n9\nadd\nfor 43\nend\nfor 10\nfor 15\nadd\nend\nadd\nend\n''') == '161\\n'\nassert solution(\n'''\\\n2\nfor 62\nend\n''') == '0\\n'\nassert solution(\n'''\\\n11\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\nend\nend\n''') == 'OVERFLOW!!!\\n'"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ee') == '2'\nassert solution('z') == '0'\nassert solution('0ay1') == '2'\nassert solution('0ay0') == '0'\n\"\"\"\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ee\") == 2\nassert solution(\"z\") == 0\nassert solution(\"0ay1\") == 2\n\"\"\"\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ee\") == 2\nassert solution(\"z\") == 0\nassert solution(\"0ay1\") == 2\nassert solution(\"a4b4\") == 0\nassert solution(\"bbb\") == 0\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ee') == '2'\nassert solution('z') == '0'\nassert solution('0ay1') == '2'\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ee') == 2\nassert solution('z') == 0\nassert solution('0ay1') == 2\nassert solution('0ay1') == 2\nassert solution('baa') == 0\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ee') == 2\nassert solution('z') == 0\nassert solution('0ay1') == 2\n\n\n\n\"\"\"\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ee\") == '2'\nassert solution(\"z\") == '0'\nassert solution(\"0ay1\") == '2'\nassert solution(\"0ay1\") == '0'\nassert solution(\"0ay1\") == '0'\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ee\") == \"2\"\nassert solution(\"z\") == \"0\"\nassert solution(\"0ay1\") == \"2\"\n\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ee') == 2\nassert solution('z') == 0\nassert solution('0ay1') == 2\nassert solution('b3') == 0\nassert solution('b2') == 1\n"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ee\") == \"2\"\nassert solution(\"z\") == \"0\"\nassert solution(\"0ay1\") == \"2\"\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '100'\nassert solution('''7''') == '-1'\nassert solution('''5''') == '2'\nassert solution('''0 0''') == '2'\nassert solution('''0 -1''') == '-1'\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"100\"\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(100)\n\"\"\""
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n100 0\n0 100\n-100 0\n0 -100''') == '100'\nassert solution('''5\n0 0\n0 -1\n3 0\n-2 0\n-2 1''') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 -1\\n-1 -1\\n-1 -3\\n-2 -3\\n0 -2') == '100'\nassert solution('7\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n0 -2\\n-1 -3') == '-1'\nassert solution('5\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1') == '2'\nassert solution('5\\n0 0\\n0 -1\\n-3 0\\n-2 0\\n-2 1') == '2'\nassert solution('7\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n0 -2\\n-1 -3') == '-1'\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n100 0\n0 100\n-100 0\n0 -100\n''') == '100'\n\nassert solution('''5\n0 0\n0 -1\n3 0\n-2 0\n-2 1\n''') == '-1'\n\nassert solution('''5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\n\nassert solution('''4\n0 0\n0 -1\n3 0\n-2 0\n-2 1\n''') == '2'\n\nassert solution('''6\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n0 1\n''') == '2'"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n0\\n-1\\n-1\\n-1\\n') == '100'\nassert solution('4\\n100 0\\n0 100\\n-100 0\\n0 -100\\n') == '100'\nassert solution('7\\n0 2\\n1 0\\n-3 0\\n0 -2\\n-1 -1\\n-1 -3\\n-2 -3\\n') == '-1'\nassert solution('5\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n') == '2'\nassert solution('5\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n') == '2'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n'\n'100 0\\n'\n'0 100\\n'\n'-100 0\\n'\n'0 -100\\n') == '100'\nassert solution('7\\n'\n'0 2\\n'\n'1 0\\n'\n'-3 0\\n'\n'0 -2\\n'\n'-1 -1\\n'\n'-1 -3\\n'\n'-2 -3\\n') == '-1'\nassert solution('5\\n'\n'0 0\\n'\n'0 -1\\n'\n'3 0\\n'\n'-2 0\\n'\n'-2 1\\n') == '2'\nprint(solution(stdin))\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4''') == '100'\nassert solution('''7''') == '-1'\nassert solution('''5''') == '2'\nassert solution('''0 0''') == '2'\nassert solution('''0 -1''') == '-1'\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n-1') == '2'\nassert solution('2\\n1') == '2'\nassert solution('4\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n0 -2') == '100'\nassert solution('7\\n0 2\\n1 0\\n-3 0\\n0 -2\\n-1 -1\\n-1 -3\\n-2 -3') == '-1'\nassert solution('5\\n0 0\\n0 -1\\n3 0\\n-2 0\\n-2 1\\n0 -2') == '2'\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\nassert solution('5') == '1 2 3'\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''6\nLLRLLL\n''') == '1 4\\n2 5\\n6 3'\n\nassert solution(\n'''4\nRRLL\n''') == '3 1\\n4 2\\n5 6'\n\nassert solution(\n'''7\nRLLRRL\n''') == '1 2\\n2 4\\n3 5\\n4 6'\n\nassert solution(\n'''6\nRLLRRL\n''') == '1 2\\n2 4\\n3 5\\n4 6'\n\nassert solution(\n'''4\nRLLRR\n''') == '1 2\\n2 3\\n3 4'"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"6LRLRL\") == \"1 4\"\nassert solution(\n\"4RRRL\") == \"3 1\"\nassert solution(\n\"8RLLLL\") == \"3 4\"\nassert solution(\n\"8RLLRL\") == \"3 5\"\nassert solution(\n\"8RLLLL\") == \"1 3\"\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 4\"\nassert solution(input()) == \"2 5\"\nassert solution(input()) == \"6 3\"\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\\n\"\n    \"LLRLLL\"\n    ) == \"1 4\\n2 5\\n3 6\\n4 3\"\nassert solution(\n    \"4\\n\"\n    \"RRLL\"\n    ) == \"3 1\\n4 2\\n5 1\\n6 3\"\nassert solution(\n    \"4\\n\"\n    \"RRR\"\n    ) == \"1 2\\n2 1\"\nassert solution(\n    \"4\\n\"\n    \"LLR\"\n    ) == \"1 4\"\nassert solution(\n    \"4\\n\"\n    \"RLL\"\n    ) == \"1 3\"\n\n\"\"\""
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\nassert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"30\"\nassert solution(\"2 3\") == \"25\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1000 1000\") == \"1\"\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 5\n''') == '30'\n\nassert solution(\n'''2 3\n''') == '25'\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"30\"\nassert solution(\"2 3\") == \"25\"\nassert solution(\"2 1\") == \"10\"\nassert solution(\"10 4\") == \"40\"\nassert solution(\"1000 1000\") == \"0\"\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\nassert solution('10 2') == '2'\nassert solution('10 1') == '10'\nassert solution('100 1') == '100'\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\nassert solution('3 1') == '3'\nassert solution('10 1000') == '30'\n\n'''\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"25\"\nassert solution(\"1 5\") == \"30\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 5') == '30'\nassert solution('2 3') == '25'\n'''\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\nprint(solution(stdin))\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"30\"\nassert solution(input()) == \"25\"\nassert solution(input()) == \"1\"\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 5') == '30'\nassert solution('2 3') == '25'\nassert solution('1000000 1000000') == '5000000'\nassert solution('1000000 10000000') == '5000000'\nassert solution('1000000 100000000') == '5000000'\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('1\\n3') == '3'\nassert solution('2\\n2') == '4'\nassert solution('10\\n1') == '4'\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"6\"\nassert solution(\"6\") == \"9\"\nassert solution(\"7\") == \"19\"\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3') == '3'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3') == '4'\nassert solution('4\\n4\\n4\\n4') == '8'\nassert solution('5\\n5\\n5\\n5') == '16'\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4 2 2 3''') == '39'\nassert solution('''6\n1 1 1 1 1 3''') == '85'\nassert solution('''1\n3''') == '3'\n\n'''\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '45'\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4 2 2 3''') == '39'\nassert solution('''6\n1 1 1 1 1 3''') == '85'\nassert solution('''1\n3''') == '3'\nassert solution('''100\n
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4 2 2 3') == '39'\nassert solution('6\\n1 1 1 1 1 3') == '85'\nassert solution('1\\n3') == '3'\n\n\n\"\"\""
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '8'\n\n\"8\"\nassert solution(input()) == '48'\n\n\"48\"\n\"\"\"\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1 1 1 1 1 3') == '39'\nassert solution('4 2 2 3') == '39'\nassert solution('1 1 1 1 1 3') == '39'\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"9\"\nassert solution(\"6\") == \"45\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('NEAT') == 'YES'\nassert solution('CODER') == 'NO'\nassert solution('WORD') == 'NO'\nassert solution('APRILFOOL') == 'NO'\nassert solution('AI') == 'YES'\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('NEAT') == 'YES'\nassert solution('WORD') == 'NO'\nassert solution('CODER') == 'NO'\nassert solution('APRILFOOL') == 'NO'\nassert solution('AI') == 'YES'\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('NEAT') == 'YES'\nassert solution('WORD') == 'NO'\nassert solution('CODER') == 'NO'\nassert solution('APRILFOOL') == 'NO'\nassert solution('AI') == 'YES'\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(NEAT) == \"YES\"\nassert solution(WORD) == \"NO\"\nassert solution(CODER) == \"NO\"\nassert solution(APRILFOOL) == \"NO\"\nassert solution(AI) == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('NEAT') == 'YES'\nassert solution('WORD') == 'NO'\nassert solution('CODER') == 'NO'\nassert solution('APRILFOOL') == 'NO'\nassert solution('AI') == 'YES'\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('NEAT') == 'YES'\nassert solution('WORD') == 'NO'\nassert solution('CODER') == 'NO'\nassert solution('APRILFOOL') == 'NO'\nassert solution('AI') == 'YES'\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\n\"\"\".....#\nS....#\n.#....\n.#....\n...E..\n333300012\n\"\"\")) == '14'\nassert solution(input(\n\"\"\"......\n......\n..SE..\n......\n......\n......\n01232123212302123021\n\"\"\")) == '0'\nassert solution(input(\n\"\"\"......\n......\n..SE..\n......\n......\n......\n3\n\"\"\")) == '14'\nassert solution(input(\n\"\"\"......\n......\n..SE..\n......\n......\n......\n3\n\"\"\")) == '0'\nassert solution(input(\n\"\"\"......\n......\n..SE..\n......\n......\n......\n5\n\"\"\")) == '0'\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n.....\\n....E\\n.....\") == \"14\"\nassert solution(\"6 6\\n......\\n......\\n..SE..\\n......\\n......\\n......\\n01232123212302123021\") == \"14\"\nassert solution(\"5 3\\n...\\n.S.\\n###\\n.E.\\n...\\n3\") == \"0\"\nassert solution(\"5 3\\n...\\n.S.\\n###\\n.E.\\n...\\n3\") == \"0\"\nassert solution(\"4 4\\n....\\n....\\n....\\n....\\n....\\n....\\n....\") == \"16\"\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\".S.#.E.#.S#.#.#.#.#\") == \"14\"\n\"\"\"\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 0\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12345') == 0\nassert solution('12345678') == 1\nassert solution('123456789') == 0\nassert solution('1234567890') == 0\nassert solution('123445') == 1\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 6') == '1'\nassert solution('6 6') == '14'\nassert solution('5 3') == '0'\nassert solution('...\\n......\\n..SE..\\n......\\n......\\n......\\n01232123212302123021\\n') == '14'\n\n\n\"\"\"\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '0'\nassert solution('1123') == '1'\nassert solution('1111') == '0'\nassert solution('1234') == '0'\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0'\nassert solution('2 2') == '0'\nassert solution('5 6') == '1'\nassert solution('6 6') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n.....#\nS....#\n.#....\n.#....\n...E..\n333300012\n''') == '1'\nassert solution('''5 3\n...\n.S.\n###\n.E.\n...\n3\n''') == '0'\nassert solution('''5 4\n..#.\n...#\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 6\\n......\\n......\\n..SE..\\n......\\n......\\n......\\n01232123212302123021\\n\") == \"14\"\nassert solution(\"5 3\\n......\\n..S.\\n###\\n.E.\\n...\\n3\\n\") == \"0\"\n\n\n-----\n\n## Challenge\n\nThe original maze of Bob's maze is as follows:\n\n.E.#.S.\n.#.#.S.\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''0 1\n0 1\n1 0\n1 1\n2 0''') == '2'\nassert solution('''0 1\n0 1\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 1\n2 0''') == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1\\n1 0\\n1 1\\n2 0') == '1'\nassert solution('1 0\\n1 1\\n2 0') == '0'\nassert solution('1 2\\n2 3\\n3 4') == '0'\nassert solution('1 1\\n2 1\\n2 2\\n3 2') == '0'\nassert solution('1 1\\n1 1\\n2 1\\n2 1\\n3 1') == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 1\\n1 0\\n1 1\\n2 0\") == \"1\"\nassert solution(\"0 1\\n1 0\\n1 1\\n2 0\") == \"1\"\nassert solution(\"0 1\\n0 0\\n1 1\\n2 0\") == \"2\"\nassert solution(\"0 1\\n1 0\\n1 1\\n2 0\") == \"2\"\nassert solution(\"0 1\\n1 0\\n1 1\\n2 0\") == \"2\"\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 1\\n1 0\\n1 1\\n2 0\") == 1\nassert solution(\"4\\n0 1\\n1 0\\n1 1\\n2 0\") == 1\nassert solution(\"2\\n0 1\\n1 0\\n2 0\") == 0\nassert solution(\"5\\n0 1\\n1 0\\n1 1\\n2 0\") == 0\nassert solution(\"1\\n0 0\\n1 0\\n2 0\") == 0\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''1 1\n1 0\n1 1\n2 0''') == '2'\nassert solution('''2 2\n0 0\n1 1\n2 0''') == '1'\nassert solution('''1 1\n1 0\n2 0''') == '0'\nassert solution('''2 2\n1 1\n2 0''') == '1'\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''3\n0 0\n1 1\n2 2\n3 2''') == '2'\nassert solution('''7\n0 0\n1 1\n1 0\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '4'\nassert solution('''8\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '4'\nassert solution('''10\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '4'\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1\\n1 0\\n1 1\\n2 0') == '1'\nassert solution('0 1\\n1 0\\n1 1\\n2 0\\n0 2\\n2 1\\n0 0') == '4'\nassert solution('0 1\\n1 0\\n1 1\\n2 0\\n0 2\\n2 1\\n0 0') == '5'\n\nprint(\"All the tests passed successfully!\")\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n0 0\") == \"1\"\nassert solution(\"1 2\\n0 0\\n2 0\") == \"2\"\nassert solution(\"1 2\\n0 0\\n2 0\\n0 1\") == \"2\"\nassert solution(\"1 2\\n0 0\\n2 0\\n0 1\\n0 1\") == \"2\"\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''LLRL1RL1''') == '1010000011'\nassert solution('''L0L0LLRR9''') == '1100000010'\nassert solution('''LLRL1RL1''') == '1010000011'\nassert solution('''L0L0LLRR9''') == '1100000010'\nassert solution('''L0L0LLRR9''') == '1100000010'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8\\nLLRL1RL1') == '1010000011'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == '1010000011'\nassert solution('9') == '1100000010'\nassert solution('LLRL1RL1') == '1010000011'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('1') == '0000000001'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('LLRL1RL1') == '1010000011'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('L0L0LLRR9') == '1100000010'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"test\") == \"1010000011\"\nassert solution(\"L0L0LLRR9\") == \"1100000010\"\nassert solution(\"LLRL1RL1\") == \"1010000011\"\nassert solution(\"0\") == \"0000000000\"\n\n\n\n- If the input is correct, your solution should run without any errors.\n- If the input is incorrect, your solution should raise an exception.\n- Also, do not leave any debugging print statements.\n- The input will be well formatted, so you should be able to separate the room assignment from the events in the memory in a single line.\n\n\"\"\""
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == '1'\nassert solution('aab') == '0111'\nassert solution('a0a1') == '101000001'\nassert solution('a1a0') == '101000001'\nassert solution('a2a1') == '101000011'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('LLRL1RL1') == '1010000011'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('LLRL1RL1') == '1010000011'\nassert solution('L0L0LLRR9') == '1100000010'\n\n\n\"\"\"\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '101000001'\nassert solution('8') == '1100000001'\nassert solution('9') == '1100000010'\nassert solution('9') == '1100000010'\nassert solution('1') == '1010000011'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('LLRL1RL1') == '1010000011'\nassert solution('L0L0LLRR9') == '1100000010'\nassert solution('L0L0LLRR9') == '1100000010'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\nLLRL1RL1') == '1010000011'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '0'\nassert solution('3\\n1') == '1'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '3'\nassert solution('''3''') == '9'\nassert solution('''4''') == '15'\nassert solution('''5''') == '21'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(()\") == \"3\"\nassert solution(\"(()())\") == \"6\"\nassert solution(\")()()\") == \"9\"\nassert solution(\"())\") == \"3\"\nassert solution(\"(((()())))\") == \"9\"\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('(()()())') == 3\nassert solution(')(()())') == 3\nassert solution('()((()))') == 6\nassert solution('()((()()))') == 9\nassert solution('(((()())(())())())') == 9\n\n\n\"\"\""
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == 1\nassert solution('''2''') == 3\nassert solution('''3''') == 9\nassert solution('''4''') == 19\nassert solution('''5''') == 19\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nassert solution('()())') == '((()))'\nassert solution('((()))') == '(((()))))'\nassert solution('(((())))') == '((((()))))'\nassert solution('((((()))))') == '((((((()))))'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"0\"\nassert solution(\"()()\") == \"1\"\nassert solution(\"(((\") == \"1\"\nassert solution(\"())()()\") == \"3\"\nassert solution(\"(())()\") == \"2\"\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '3'\nassert solution('3') == '9'\nassert solution('4') == '81'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"(()(())\") == '2'\nassert solution(\"(()()())\") == '4'\nassert solution(\"(()(()))\") == '2'\nassert solution(\"((()))(())()())\") == '4'\nassert solution(\"((()((((())))\") == '4'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\n\nassert solution(stdin) == '3'\n\nassert solution(stdin) == '9'\n\nassert solution(stdin) == '9'\n\nassert solution(stdin) == '9'"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n') == \"Black\"\nassert solution('4\\n2 3\\n') == \"White\"\nassert solution('5\\n3 5\\n') == \"Black\"\nassert solution('2\\n2 2\\n') == \"Black\"\nassert solution('1\\n1 1\\n') == \"Black\"\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == 'Black'\nassert solution('4') == 'White'\nassert solution('2') == 'Black'\nassert solution('5 5') == 'Black'\nassert solution('5 2') == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"4\n    2 3\n    \"\"\"\n    ) == 'Black'\nassert solution(\n    \"\"\"5\n    3 5\n    \"\"\"\n    ) == 'White'\nassert solution(\n    \"\"\"2\n    2 2\n    \"\"\"\n    ) == 'Black'\nassert solution(\n    \"\"\"3\n    1 4\n    \"\"\"\n    ) == 'White'\nassert solution(\n    \"\"\"6\n    1 3\n    \"\"\"\n    ) == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input') == 'Black'"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2 2') == 'Black'\nassert solution('4\\n2 3') == 'White'\nassert solution('5\\n3 5') == 'Black'\nassert solution('2\\n2 2') == 'Black'\nassert solution('3\\n3 3') == 'Black'\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Black\"\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"White\"\nassert solution(stdin) == \"Black\"\nassert solution(stdin) == \"Black\"\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"Black\"\nassert solution(\"2\") == \"Black\"\nassert solution(\"2\") == \"Black\"\nassert solution(\"2\") == \"Black\"\nassert solution(\"2\") == \"Black\"\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"White\"\nassert solution(\"7\") == \"White\"\nassert solution(\"8\") == \"Black\"\nassert solution(\"9\") == \"Black\"\nassert solution(\"10\") == \"Black\"\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n-5 20 -3 0') == '2'\nassert solution('4 2\\n-5 20 -3 0') == '4'\nassert solution('10 6\\n2 -5 1 3 0 0 -4 -3 1 0') == '3'\nassert solution('10 2\\n2 -5 1 3 0 0 -4 -3 1 0') == '4'\nassert solution('10 3\\n2 -5 1 3 0 0 -4 -3 1 0') == '-1'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 3\n-5 20 -3 0''') == '2'\nassert solution('''4 2\n-5 20 -3 0''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\nassert solution('''9 4\n2 -5 1 3 0 0 -4 -3 1 0''') == '4'\nassert solution('''8 4\n-5 1 3 0 0 -4 -3 1 0''') == '-1'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3\n-5 20 -3 0\n''') == '2'\nassert solution('''4 2\n-5 20 -3 0\n''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0\n''') == '3'"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n-5 20 -3 0''') == '2'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\nassert solution('''4 2\n-5 20 -3 0''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\nassert solution('''10 5\n-5 1 1 -4 1 -3 1 -2 1 -1 0''') == '-1'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n-5 20 -3 0''') == '2'\nassert solution('''4 2\n-5 20 -3 0''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\n'''\nimport sys\nstdin = sys.stdin.read()\nprint(solution(stdin))\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''-5 20 -3 0''') == '2'\nassert solution('''10 6\n-5 20 -3 0''') == '3'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1') == '2'\nassert solution('4\\n-5 20 -3 0') == '2'\nassert solution('10\\n2 -5 1 3 0 0 -4 -3 1 0') == '3'\nassert solution('10\\n2 -5 1 3 0 0 -4 -3 1 0') == '3'\nassert solution('10\\n2 -5 1 3 0 0 -4 -3 1 0') == '3'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-1-5 2 1 0 -2-1 0 -1-5 2 -1 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -1-5 2 -1 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1 1 3 0 0 -2-3 1 0 -1-3 -2-4 1"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n-5 20 -3 0') == '2'\nassert solution('4 2\\n-5 20 -3 0') == '4'\nassert solution('10 6\\n2 -5 1 3 0 0 -4 -3 1 0') == '3'\nassert solution('10 6\\n1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n-5 20 -3 0\\n') == '2'\nassert solution('4 2\\n-5 20 -3 0\\n') == '4'\nassert solution('10 6\\n2 -5 1 3 0 0 -4 -3 1 0\\n') == '3'\nassert solution('4 10\\n-10 -5 -1 0 0 1 0 1 -2 0\\n') == '-1'\nassert solution('10 4\\n-10 -5 -1 0 0 1 0 1 -2 0\\n') == '3'\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"4 3\n2 1 1\n\"\"\") == '2'\nassert solution(\n    \"\"\"3 9\n1 1 3\n\"\"\") == '1'\nassert solution(\n    \"\"\"12345678 87654321\n43043751 1000000000 53798715\n\"\"\") == '2147483648'\nassert solution(\n    \"\"\"12345678 87654321\n43043751 1000000000 53798715\n\"\"\") == '2147483648'\n\n\n\"\"\""
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'\nassert solution('43043751 1000000000 53798715') == '1'\n\n\n'''"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n4 3\n2 1 1\n''') == '2'\n\nassert solution('''\\\n3 9\n1 1 3\n''') == '1'\n\nassert solution('''\\\n12345678 87654321\n43043751 1000000000 53798715\n''') == '2147483648'\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '2'\nassert solution('3 9') == '1'\nassert solution('12345678 87654321') == '2147483648'\n\n'''\n\n\n'''\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n2 1 1\") == \"2\\n\"\nassert solution(\"3 9\\n1 1 3\") == \"1\\n\"\nassert solution(\"12345678 87654321\\n43043751 1000000000 53798715\") == \"2147483648\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"0\\n\"\nassert solution(\"1 1 1\\n1 1 1\") == \"0\\n\"\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n2 1 1\") == \"2\\n\"\nassert solution(\"4 3\\n2 1 1\") == \"2\\n\"\nassert solution(\"3 9\\n1 1 3\\n\") == \"1\\n\"\nassert solution(\"12345678 87654321\\n43043751 1000000000 53798715\\n\") == \"2147483648\\n\"\n\n\n\"\"\"\n\n\"\"\"\n[Subtask] http://codeforces.com/contest/1539/problem/E\n\nA few notes:\n\n* - numbers are positive\n* - the number of crystals in a row can increase by at most 1 (the last row is empty, but the number of crystals in the last row can't be higher than 1)\n* - the number of crystals in each row can be at most 3 (last row can't have more than 3 crystals)\n* - the number of balls in a row can increase by at most 4 (the last row can't have more than 4 balls)\n* - the number of balls in each row can be at most 8 (last row can't have more than 8 balls)\n\n\"\"\"\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4 3\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"3 9\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"12345678 87654321\n43043751 1000000000 53798715\"\"\"\n) == '2147483648'\n\nprint(solution(input()))\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 9') == '1'\nassert solution('2 1 1') == '2'\nassert solution('4 3') == '2'\nassert solution('12345678 87654321') == '2147483648'"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 1''') == '2'\nassert solution('''2 1 1''') == '2'\nassert solution('''4 5 4''') == '0'\nassert solution('''4 5 5''') == '1'\nassert solution('''1 1 1''') == '2'\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 1 2\\\\n1 2\\\\n3 1\\\\n4 3\\\\n3 4\\\\n1 4\\\\n') == '5.0000000000'\n\"\"\"\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '5.0000000000'\nassert solution('5 5 1 2') == '5.0000000000'\nassert solution('1 2') == '5.0000000000'\nassert solution('3 1') == '5.0000000000'\nassert solution('4 3') == '5.0000000000'\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5.0000000000'\n\nCheck your solution against the list of available solution strings: https://docs.google.com/document/d/1YaQHJbE6WqPvOuVn-4nETj9XcZxZx3KtNyfOqz8/edit?usp=sharing\n\"\"\"\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.0\"\nassert solution(stdin) == \"2.0\"\nassert solution(stdin) == \"3.0\"\nassert solution(stdin) == \"1.0\"\n\n\n\n\"\"\""
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 5 1 2\") == \"5.0000000000\"\nassert solution(\"5 5 1 2\") == \"5.0000000000\"\nassert solution(\"5 5 1 2\") == \"5.0000000000\"\nassert solution(\"5 5 1 2\") == \"5.0000000000\"\nassert solution(\"5 5 1 2\") == \"5.0000000000\""
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.5\"\n\n\"\"\"\n\nn, w, v, u = map(int, stdin.split(' '))\ns = stdin.split('\\n')[1:-1]\nx = 0\ny = 0\nfor i in s:\n    x += int(i.split(' ')[0])\n    y += int(i.split(' ')[1])\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4') == 5.0000000000\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == 5.0000000000\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4') == 5.0000000000\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4') == 5.0000000000\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n1 1 1\\n1 1 2\\n1 1 2\\n1 2\\n1 2\\n1 2\\n1 1 1\\n1 1 2\\n1 1 2\\n1 2\\n1 2\\n1 2\\n1 1 1\\n1 1 2\\n1 1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 1 1\\n1 1 2\\n1 1 2\\n1 2') == 5.0000000000\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == '5.0000000000'\nassert solution('1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == '5.0000000000'\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == '5.0000000000'\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == '5.0000000000'\nassert solution('5 5 1 2\\n1 2\\n3 1\\n4 3\\n3 4\\n1 4\\n') == '5.0000000000'\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4''') == '5.0000000000'\n\nassert solution('''8 8 1 2\n-1 1\n1 1\n2 1\n-1 1\n1 1\n1 2\n1 1\n-1 1''') == '2.0000000000'\n\nassert solution('''4 4 1 2\n-1 -1\n1 1\n2 1\n1 1\n\n4 4 1 2\n0 0\n2 2\n3 2\n4 1\n\n''') == '3.0000000000'\n\nassert solution('''8 8 1 2\n-1 -1\n1 1\n2 1\n-1 1\n1 1\n1 2\n1 1\n-1 1\n\n''') == '2.0000000000'\n\nassert solution('''8 8 1 2\n0 0\n2 2\n3 2\n4 1\n\n''') == '3.0000000000'"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4''') == '5.0000000000'\n\n'''\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 2 3') == '1 2'\nassert solution('1 3 2') == '1 2'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n2\\n3') == '1 2'\nassert solution('1\\n1\\n1') == '-1'\nassert solution('1\\n1\\n2') == '-1'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2''') == '-1'\nassert solution('''3\n1 1 1''') == '-1'\nassert solution('''1\n1''') == '-1'\nassert solution('''4\n1 2 3 4''') == '1 2'\nassert solution('''1\n1''') == '-1'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 1') == '1 1'\nassert solution('2 1') == '1 1'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n1''') == '-1'\nassert solution('''2\n1 2''') == '-1'\nassert solution('''4\n1 2 3 4''') == '1 2'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == \"1 2\"\nassert solution(\"2\\n1 2\\n\") == \"-1\"\nassert solution(\"3\\n1 1 1\\n\") == \"-1\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"1 2\"\nassert solution(\"2\\n1 1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('2\\n1 2') == '-1'\nassert solution('1\\n2') == '1 2'\nassert solution('2\\n2 1') == '1 2'\nassert solution('4\\n1 2 3 4') == '1 2'\n"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''1\n1''') == '-1'\nassert solution('''2\n1 2''') == '1 2'\nassert solution('''3\n1 2 3''') == '1 2'\nassert solution('''5\n1 2 3 4 5''') == '1 2'\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n\") == \"20 15\\n\"\nassert solution(\"4 2 4\\n\") == \"35 32\\n\"\nassert solution(\"8 2 4\\n\") == \"35 32\\n\"\nassert solution(\"4 5 2\\n\") == \"0 0\\n\"\nassert solution(\"9 4 7\\n\") == \"40 18\\n\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '20 15'\nassert solution('8 2 4') == '35 32'\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\"\nassert solution(\"1 1 1\") == \"0 0\"\nassert solution(\"1 1 2\") == \"0 0\"\nassert solution(\"1 1 1\") == \"0 0\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == '20 15'\nassert solution('8 2 4') == '35 32'\nassert solution('100000 10 3') == '150000 1'\nassert solution('800001 3 3') == '150000 1'\nassert solution('700001 3 3') == '150000 1'\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2 2\") == \"35 32\"\nassert solution(\"8 2 4\") == \"35 32\"\nassert solution(\"10 1 1\") == \"45 54\"\nassert solution(\"11 1 2\") == \"45 54\"\nassert solution(\"1 1 1\") == \"45 54\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"20 15\"\nassert solution(\"8 2 4\") == \"35 32\"\nassert solution(\"10 5 4\") == \"55 60\"\nassert solution(\"4 4 3\") == \"27 8\"\nassert solution(\"8 4 3\") == \"34 40\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2 3''') == '''20 15'''\nassert solution('''8 2 4''') == '''35 32'''\nassert solution('''10 1 2''') == '''46 46'''\nassert solution('''100000 1 2''') == '''999997 1000001'''\n\n\n\"\"\"\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output\n'''\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '20 15'\nassert solution('8 2 4') == '35 32'\nassert solution('2 3 4') == '1 1'\nassert solution('5 1 1') == '5 5'\nassert solution('0 5 0') == '0 0'\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0') == '0 0 1 1'\nassert solution('0 0') == '0 0 1 1'\nassert solution('0 0 1 1') == '0 0 1 1'\nassert solution('1 0') == '0 0 1 1'\n\"\"\"\n\n\"\"\"\nFrom: https://leetcode.com/explore/challenge/card/october-leetcoding-challenge/559/week-3-october-15th-october-22nd/3491/\n\nGiven an array A, we can perform an operation on A, which changes the array A.\n\nIn the ith operation (i \\geq 0), we can choose any i \\in {0, 1,..., A.length - 1} and modify array A to be A[0], A[1],..., A[i - 1], A[i], A[i + 1],..., A[A.length - 1], such that:\n\nThe number of integers modified in the ith operation is A[i - 1] \\times A[i] + A[i + 1] (i.e., the numbers before A[i - 1] and after A[i] in the array A are multiples of A[i] - 1).\nThe sum of the integers modified in the ith operation is A[i - 1] + A[i] + A[i + 1] (i.e., the sum of the numbers modified by the ith operation is A[i] \\+ A[i + 1] + A[i + 2]).\nThe operation is applied to the given array A[0], A[1],..., A[A.length - 1], and the sum of the integers modified is minimized.\nReturn the minimum sum of the integers modified in the operation.\n\nExample 1:\n\nInput: A = [2,7,11,15]\nOutput: 32\nExplanation: The optimal choice of operations is as follows:\n - First, add 11 and 7 to get 22. Now the sum of integers modified is 3 + 7 = 11\n - Second, add 15 and 11 to get 43. Now the sum of integers modified is 5 + 1 = 6\n - Third, add 7 and 15 to get 46. The sum of integers modified is 6 + 5 + 1 = 32.\n\nNote:\n\n1 <= A.length <= 40000\n1 <= A[i] <= 10^9\n\n\"\"\"\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '-1'\nassert solution('1 0') == '0 0 1 1'\nassert solution('10 0') == '0 0 1 1'\nassert solution('1 0') == '0 0 1 1'\nassert solution('10 10') == '0 0 1 1'\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"-1\"\nassert solution(\"2 0\") == \"0 0 1 1\"\nassert solution(\"2 2\") == \"0 0 1 1\"\nassert solution(\"4 5\") == \"0 0 1 1\"\nassert solution(\"3 9\") == \"0 0 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"0 0 1 1\"\nassert solution(\"2 2\") == \"0 0 1 1\"\nassert solution(\"3 3\") == \"0 0 1 1\"\nassert solution(\"4 4\") == \"0 0 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == output"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 0') == '0 0 1 1'\nassert solution('2 0') == '0 0 1 1'\nassert solution('2 1') == '0 0 1 1'\nassert solution('2 1') == '0 0 1 1'\nassert solution('2 1') == '0 0 1 1'\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\") == \"0 0 1 1\"\nassert solution(\"1 0\") == \"0 0 1 1\"\nassert solution(\"1 1\") == \"0 0 1 1\"\nassert solution(\"2 0\") == \"0 0 1 1\"\nassert solution(\"2 2\") == \"0 0 1 1\"\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0 0 1 1'\nassert solution('3 5') == '-1'\nassert solution('2 4') == '0 0 1 1'\nassert solution('0 10') == '1 1'\nassert solution('1 2') == '1 1'\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0 0 1 1'\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1\\n1\\n2') == 'YES'\nassert solution('2\\n1\\n2\\n1') == 'NO'\nassert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n2\\n2') == 'NO'\nassert solution('3\\n1\\n2\\n2') == 'NO'\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1\\n1\\n2') == 'NO'\nassert solution('3\\n1\\n1\\n3') == 'YES'\nassert solution('3\\n2\\n2\\n3') == 'NO'"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n1\n2\n''') == 'YES'\n\nassert solution('''2\n1\n2\n''') == 'NO'\n\nassert solution('''1\n1\n''') == 'NO'\n\nassert solution('''1\n2\n''') == 'NO'\n\nassert solution('''1\n2\n''') == 'NO'"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == \"NO\"\nassert solution('1') == \"YES\"\nassert solution('2') == \"NO\"\nassert solution('2\\n1') == \"YES\"\nassert solution('1\\n3') == \"NO\"\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('5') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n1\\n2\\n') == 'YES'\nassert solution('3\\n1\\n2\\n') == 'NO'\nassert solution('3\\n2\\n1\\n') == 'NO'\nassert solution('3\\n1\\n1\\n1\\n') == 'YES'\nassert solution('3\\n1\\n2\\n') == 'YES'\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\") == \"YES\"\nassert solution(\"1\\n2\\n2\") == \"NO\"\nassert solution(\"1\\n1\\n2\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n2\\n2\") == \"NO\"\nassert solution(\"2\\n2\\n1\") == \"YES\"\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n') == 'YES'\nassert solution('2\\n1\\n2\\n') == 'NO'\nassert solution('3\\n1\\n2\\n') == 'NO'\nassert solution('3\\n2\\n1\\n') == 'NO'\nassert solution('1\\n2\\n1\\n') == 'NO'\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''1\n1\n2\n''') == 'NO'\nassert solution('''1\n2\n2\n''') == 'YES'\nassert solution('''1\n2\n3\n''') == 'NO'\nassert solution('''3\n1\n2\n3\n''') == 'YES'\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0 0 0 4') == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\nassert solution('5 1 1 1 1') == '0'\nassert solution('5 5 5 5 5') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 0 0 0 4') == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\nassert solution('4 5 6 6 6') == '0'\nassert solution('5 5 5 5 5') == '0'\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0 0 4\") == \"1\"\nassert solution(\"1 1 1 4 4\") == \"3\"\nassert solution(\"4 5 6 5 6\") == \"0\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0 0 4\") == 1\nassert solution(\"1 1 1 4 4\") == 0\nassert solution(\"4 5 6 5 6\") == 0\nassert solution(\"4 5 6 5 4\") == 3\nassert solution(\"4 5 6 5 4\") == 3\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') is None\nassert solution('0 0 0 0 1') == 1\nassert solution('2 0 0 0 4') == 1\nassert solution('1 1 1 4 4') == 0\nassert solution('4 5 6 5 6') == 0\n\n\n\"\"\""
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 0 0 0 4\n'''\n) == '1'\n\nassert solution(\n'''\n1 1 1 4 4\n'''\n) == '0'\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0 0 4\") == \"1\"\nassert solution(\"1 1 1 4 4\") == \"3\"\nassert solution(\"4 5 6 5 6\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 0 0 0 4') == '1'\nassert solution('1 1 1 4 4') == '3'\nassert solution('4 5 6 5 6') == '0'\nassert solution('2 4 4 4 1') == '6'\nassert solution('1 1 1 4 4') == '0'\n\nprint('solution:', solution(''))\n\nprint('success')\n\"\"\"\n\nfrom itertools import permutations\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == 0\nassert solution(\"1 1 1 4 4\") == 1\nassert solution(\"4 5 6 5 6\") == 0\nassert solution(\"4 5 6 6 5\") == 1\nassert solution(\"6 4 3 2 1\") == 2\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('3\\n1 3 2') == '-1'\nassert solution('2\\n2 2') == '-1'\nassert solution('2\\n2 1') == '-1'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"4 4 2 2 3\") == \"0\"\nassert solution(\"4 4 2 2 3 2 1 1 3\") == \"4\"\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '-1'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n1 3 2') == '1'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('3\\n1 3 2') == '0'\nassert solution('3\\n1 3 2') == '-1'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n1 2') == '0'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\n2 1\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n1 3 2\n\"\"\") == \"0\"\nassert solution(\"\"\"4\n1 3 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n1 3 2 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 3 2 4 5 6\n\"\"\") == \"3\"\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('3\\n1 3 2') == '0'\nassert solution('2\\n1 3') == '-1'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('2\\n1 2') == '1'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('2\\n1 2') == '0'\nassert solution('2\\n1 3 2') == '-1'\nassert solution('2\\n1 3 2 4') == '3'\nassert solution('2\\n1 2 3') == '-1'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('2\\n1 3 2') == '1'\nassert solution('3\\n1 3 2') == '-1'\nassert solution('3\\n1 2 3') == '0'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 3 2''') == '-1'\nassert solution('''4\n1 3 2 4''') == '0'\nassert solution('''6\n1 3 2 4 6 5''') == '2'\nassert solution('''10\n3 2 1 5 7 8 9 10 12 13 14''') == '5'\nprint(solution('''20\n2 4 5 7 8 9 10 11 11 12 13 14 15 16 17 18 19'''))\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '2'\nassert solution('''3\n4 9\n1 2 3 4 5 6 7 8 9\n7 7\n1 2 3 4 5 6 7 8 9\n8 8\n1 2 3 4 5 6 7 8 9\n10 10\n1 2 3 4 5 6 7 8 9\n''') == '0'\nassert solution('''3\n7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5\n''') == '1'\n'''\n'''\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"1 1\") == 0\nassert solution(\"1 2\") == 1\nassert solution(\"1 2 1\") == 2\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3\\n5 6') == '1'\nassert solution('2 3\\n1 2\\n3 4') == '0'\nassert solution('2 3\\n1 2\\n3 4') == '1'\nassert solution('2 3\\n1 2\\n3 4') == '2'\nassert solution('2 3\\n1 2\\n3 4') == '3'\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('test') == 'test'\nassert solution('1\\n1\\n') == 0\nassert solution('1\\n2\\n') == 1\nassert solution('1\\n2\\n3\\n') == 1\nassert solution('1\\n2\\n3\\n4\\n') == 3\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 11''') == '2'\nassert solution('''2 9 1 3 18 1 4''') == '1'\nassert solution('''4 35''') == '0'\nassert solution('''11 9 10 7''') == '1'\nassert solution('''1 8''') == '0'\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '0'\nassert solution('3\\n1\\n') == '0'\nassert solution('3\\n1\\n2\\n2\\n') == '1'\nassert solution('1\\n1\\n2\\n2\\n') == '0'\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8''') == '2'\nassert solution('''9 11\n3 9 2 1 3 18 1 4\n4 35\n2 2\n1 8''') == '0'\nassert solution('''9 11\n5 2\n1 9 2 3 5 7 1 4\n2 2''') == '1'\n'''\n'''\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '2'\nassert solution('''10''') == '4'\nassert solution('''55''') == '10'\nassert solution('''56''') == '1'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 5') == '5'\nassert solution('5 6 7 8 9 10') == '7'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '2'\nassert solution('''10''') == '4'\nassert solution('''56''') == '10'\nassert solution('''55''') == '1'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == 1\nassert solution('3') == 2\nassert solution('10') == 4\nassert solution('56') == 10\nassert solution('55') == 1\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\nassert solution(\"55\") == \"10\"\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '1'\nassert solution('''3\n''') == '2'\nassert solution('''4\n''') == '1'\nassert solution('''5\n''') == '2'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n') == '8'\nassert solution('15\\n') == '10'\nassert solution('10\\n') == '4'\nassert solution('1\\n') == '1'\nassert solution('5\\n') == '2'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == 2\nassert solution('5') == 2\nassert solution('10') == 4\nassert solution('55') == 10\nassert solution('56') == 1\n\nprint(\"tests passed\")\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '2'\nassert solution('''10''') == '4'\nassert solution('''55''') == '10'\nassert solution('''56''') == '1'\nprint('All tests past, you are good to go!')"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('10') == '4'\nassert solution('55') == '10'\nassert solution('56') == '1'\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == 2\nassert solution('0 1 4\\n1 0 4\\n1 4 0\\n0 4 0') == 2\nassert solution('0 1 2\\n1 0 4\\n1 4 0\\n2 4 0\\n0 4 0') == 5\nassert solution('0 1 2\\n1 0 4\\n1 4 0\\n2 4 0\\n0 1 2\\n1 0 4\\n1 4 0\\n2 4 0\\n0 4 0') == 5\nassert solution('0 1 2\\n1 0 4\\n1 4 0\\n2 4 0\\n0 1 2\\n1 0 4\\n1 4 0\\n2 4 0\\n0 4 0\\n1 0 1\\n1 0 3\\n1 0 4\\n2 4 0') == 6\n\n\n\n\"\"\""
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0 1 1\") == \"2\"\nassert solution(\"0 1 4\") == \"2\"\nassert solution(\"0 1 4 0\") == \"5\"\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0\\n0\\n') == 0\nassert solution('1\\n0\\n0\\n') == 0\nassert solution('2\\n0\\n1\\n') == 1\nassert solution('2\\n0\\n1\\n') == 1\nassert solution('2\\n0\\n1\\n') == 1\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 1\\n1 0 4\\n1 4 0') == 2\nassert solution('4\\n0 1 2 3\\n1 0 4 5\\n2 4 0 6\\n3 5 6 0\\n2 3 4\\n3 2 1\\n1 3\\n4 3') == 5\n\"\"\"\nfrom collections import defaultdict\nfrom typing import List, Tuple, DefaultDict\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 1') == 2\nassert solution('0 1 4') == 2\nassert solution('0 4 0') == 2\nassert solution('1 0 4') == 3\nassert solution('1 4 0') == 2\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 1 1') == 2\nassert solution('0 1 4') == 2\nassert solution('0 1 4\\n0 1 5\\n0 1 7') == 3\nassert solution('0 1 4\\n0 1 5\\n1 4 0\\n1 5 0') == 2\nassert solution('0 1 4\\n0 1 5\\n1 4 0\\n1 5 0\\n0 1 4\\n0 1 5\\n1 4 0\\n1 5 0') == 4\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 0 4\") == \"\"\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"0 1 1\") == \"\"\nassert solution(\"1 0 4\") == \"\"\nassert solution(\"1 4 0\") == \"\"\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 4\\n1 4 0\\n\") == 2\nassert solution(\"0 1 1\\n1 0 4\\n1 4 0\\n\") == 2\nassert solution(\"0 1 1\\n1 0 4\\n1 4 0\\n\") == 2\n\"\"\"\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n0 1 1\n1 0 4\n1 4 0\n''') == 2\nassert solution('''4\n0 1 2 3\n1 0 4 5\n2 4 0 6\n3 5 6 0\n''') == 5\n\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"1 2 1 0\\n\") == \"-1\\n\"\nassert solution(\"2 0 1 3 2 0\\n\") == \"3\\n1 3\\n3 4\\n1 2\\n4 5\\n5 6\\n4 6\\n\"\nassert solution(\"3\\n0 2 2\\n\") == \"6\\n1 3\\n3 4\\n1 2\\n4 5\\n5 6\\n4 6\\n\"\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 1 0\\n') == '3'\nassert solution('6\\n2 0 1 3 2 0\\n') == '6\\n1 3\\n3 4\\n1 2\\n4 5\\n5 6\\n4 6'\nassert solution('3\\n0 2 2\\n') == '-1'\n\n\n-----Test 2-----\n\nIn the second test Polycarp (the student number 1) can send the message to the student number 2, who after that can send the message to students number 3 and 4. Thus, all students knew about the credit."
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1 0') == '3'\nassert solution('2 0 1 3 2 0') == '6'\nassert solution('3 0 1 2 2 0') == '-1'\nassert solution('0 2 2') == '3'\nassert solution('0 2 2') == '3'\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4\n1 2 1 0\n\"\"\") == \"\"\"3\n1 2\n2 4\n2 3\"\"\"\n\nassert solution(\n\"\"\"6\n2 0 1 3 2 0\n\"\"\") == \"\"\"6\n1 3\n3 4\n1 2\n4 5\n5 6\n4 6\"\"\"\n\nassert solution(\n\"\"\"3\n0 2 2\n\"\"\") == \"\"\"-1\"\"\"\n\nassert solution(\n\"\"\"10\n1 1 0 1 1 0 1 1 1 1 1 1\n\"\"\") == \"\"\"9\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\"\"\"\n\nassert solution(\n\"\"\"15\n
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 1 0\n''') == '3'\n\nassert solution('''6\n2 0 1 3 2 0\n''') == '6'\n\nassert solution('''3\n0 2 2\n''') == '-1'\n\nassert solution('''7\n2 3 2 2 1 1\n''') == '7'\n\nassert solution('''5\n1 1 1 1 1\n''') == '5'"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 1 0') == '3'\nassert solution('6\\n2 0 1 3 2 0') == '6'\nassert solution('3\\n0 2 2') == '-1'\nassert solution('2\\n1 0') == '-1'\nassert solution('6\\n1 2 3 4 5 6') == '6'\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1 0') == '3'\nassert solution('2 0 1 3 2 0') == '6'\nassert solution('3 0 1 3 2 0') == '-1'\nassert solution('2 0 2 2 0') == '-1'\nassert solution('3 0 2 3 2 0') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2 1 0') == '3'\nassert solution('2\\n2 0 1 3 2 0') == '6'\nassert solution('2\\n0 2 2') == '-1'\nassert solution('1\\n2 0 1 3 2 0') == '3'\nassert solution('3\\n0 2 2') == '-1'\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 1 0') == '3'\nassert solution('3\\n2 0 1 3 2 0') == '6'\nassert solution('3\\n0 2 2') == '-1'\nassert solution('4\\n2 0 1 3 2 0') == '6'\nassert solution('6\\n2 0 1 3 2 0') == '6'\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n5 2 4 1\\n') == '3'\nassert solution('3 20\\n199 41 299\\n') == '19'\nassert solution('2 1\\n1 1\\n') == '1'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 10\\n1 1\\n') == '9'\n\n\n\"\"\""
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\""
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4\\n5 2 4 1\\n') == '3'\nassert solution('3 20\\n199 41 299\\n') == '19'\nassert solution('3 10\\n9 9 9 9\\n') == '9'\nassert solution('2 2\\n1 1\\n') == '1'\nassert solution('2 2\\n1 1\\n') == '1'\n"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\n"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn, m = map(int, stdin.split())\na = list(map(int, stdin.split()))"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n5 2 4 1\\n') == '3'\nassert solution('3 20\\n199 41 299\\n') == '19'\n\n\n\"\"\"\n\n\"\"\"\n\nSolution"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n5 2 4 1') == '3'\nassert solution('3 20\\n199 41 299') == '19'\nassert solution('1 1\\n1') == '1'\nassert solution('3 3\\n2 2 2') == '2'\nassert solution('2 2\\n1 1') == '1'\n"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 4\\n5 2 4 1') == '3'\nassert solution('3 20\\n199 41 299') == '19'\n\n\n\"\"\"\n"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n' + '1' * (10 ** 3)) == '1'\nassert solution('1\\n' + '2' * (10 ** 3)) == '3'\nassert solution('1\\n' + '3' * (10 ** 3)) == '7'\nassert solution('1\\n' + '4' * (10 ** 3)) == '19'\nassert solution('1\\n' + '5' * (10 ** 3)) == '31'\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('0 3 3 0') == '6.1622776602'\nassert solution('3 1 -9') == '6.1622776602'\nassert solution('3 1 -3') == '4.2426406871'\nassert solution('3 1 -3') == '4.2426406871'\n\n\n\"\"\"\nfrom typing import Tuple\nimport math\nimport sys\n\n\nclass Solution:\n    def solve(self, stdin: str) -> None:\n        x, y, c = map(int, stdin.split())\n\n        if abs(x) < abs(c):\n            x = -x\n\n        if abs(y) < abs(c):\n            y = -y\n\n        print(abs(x - c) / max(abs(x), abs(y)) * 10 ** 6)\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 -3\") == \"4.2426406871\"\nassert solution(\"0 3 3 0\") == \"6.1622776602\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1 -3''') == '4.2426406871'\nassert solution('''0 3 3 0''') == '6.1622776602'\nassert solution('''3 1 -9''') == '6.1622776602'\nassert solution('''4 1 -1''') == '1.7894172365'\n'''\nimport sys\nsys.setrecursionlimit(15000)\n\nimport numpy"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 -3\") == \"4.2426406871\"\nassert solution(\"0 3 3 0\") == \"6.1622776602\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\n\n\n\n\"\"\"\n\n\"\"\"\nYou can see the complete analysis and solution from the attached link.\n\nA. Diagonal Avenue\nDiagonal Avenue\n\n\"\"\""
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6.1622776602'\nprint(\"Passed\")\n\"\"\"\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 -3\\n0 3 3 0\\n\") == \"4.2426406871\"\nassert solution(\"3 1 -9\\n0 3 3 -1\\n\") == \"6.1622776602\"\n\n\"\"\""
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 -3\") == \"4.2426406871\"\nassert solution(\"0 3 3 0\") == \"6.1622776602\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\nassert solution(\"0 3 3 -1\") == \"4.2426406871\"\nassert solution(\"3 1 -9\") == \"6.1622776602\"\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 -3') == '4.2426406871'\nassert solution('0 3 3 0') == '6.1622776602'\nassert solution('3 1 -9') == '6.1622776602'\nassert solution('3 3 -1') == '7.1655291328'\n\n\n\"\"\"\n\nfrom math import hypot\na, b, c, x1, y1, x2, y2 = map(int, input().split())\nx1, y1 = x1 - a, y1 - b\nx2, y2 = x2 - a, y2 - b\nprint(hypot(x1, y1) + abs(c - x2) + abs(c - y2))\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.25\"\n\n\n\n-----Same test-----\nInput\n1 2 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 3 1\n0 3 2 1\n\nOutput\n3.33333333333\n\n\n\n-----Same test-----\nInput\n1 3 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 2 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 3 1\n0 3 2 1\n\nOutput\n3.33333333333\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n1.5\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2.25\n\n\n\n-----Same test-----\nInput\n1 1 1\n0 3 2 1\n\nOutput\n2"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n') == '3'\nassert solution('11\\n') == '0'\nassert solution('12345678910111213141516171819') == '3'\nassert solution('12345678910111213141516171819\\n') == '3'\nassert solution('12345678910111213141516171819\\n') == '3'\n'''\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12345678910111213141516171819') == 3\nassert solution('11') == 0\nassert solution('1234') == 0\nassert solution('12345678910111213141516171819') == '3'\nassert solution('1') == 1\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''123456789101112131415''') == '3'\nassert solution('''123456789101112131415''') == '0'\nassert solution('''123456789101112131415''') == '0'\n'''\n    ) == \"123456789101112131415\"\nassert solution('''43456789101112131415''') == '0'\nassert solution('''123456789101112131415''') == '0'\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('12345678910111213141516171819202122232425262728293031323334353637383940414243444546') == '3'\nassert solution('12345678910111213141516171819202122232425262728293031323334353637383940414243444546') == '0'\nassert solution('112345678910111213141516171819202122232425262728293031323334353637383940414243444546') == '1'\n\"\"\""
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '3'\nassert solution('''11''') == '0'\nassert solution('''100000001010111''') == '1'\nassert solution('''100000001010000''') == '0'\nassert solution('''1000000010100001''') == '0'\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12345678910111213141516171819') == '0'\nassert solution('12345678910111213141516171819') == '1'\nassert solution('12345678910111213141516171819') == '2'\nassert solution('12345678910111213141516171819') == '3'\nassert solution('12345678910111213141516171819') == '4'\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('  ') == ''\nassert solution(' ') == ''\nassert solution('123456789101112131415') == '3'\nassert solution('23456789101112131415') == '2'\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"123456789101112131415\") == \"3\"\nassert solution(\"11\") == \"0\"\nassert solution(\"12\") == \"1\"\nassert solution(\"27\") == \"7\"\nassert solution(\"333\") == \"3\"\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"123456789101112131415\") == \"3\"\nassert solution(\"12345678910111213141516\") == \"0\"\nassert solution(\"1234567891011121314151617\") == \"9\"\n"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12345678910111213141516171819') == '3'\nassert solution('2222') == '2'\nassert solution('10') == '0'\nassert solution('100') == '0'\nassert solution('1000') == '0'\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\nassert solution('123456789 123456789') == 'infinity'\nassert solution
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''21 5''') == '''2'''\nassert solution('''9435152 272''') == '''282'''\nassert solution('''10 10''') == '''infinity'''\nassert solution('''100000 100000''') == '''infinity'''\nassert solution('''1000000 10000''') == '''infinity'''\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n\n\nIn the second sample the answer is \"2\" since the Modular Equation of the first equation is $[4](x+2) = 0$ and the solution of the first equation is $2 \\operatorname{mod} 4 = 0$\n\n\"\"\"\n\na,b = int(input().split())\nc = (a % b)\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"infinity\"\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"infinity\"\nassert solution(input()) == \"infinity\"\nassert solution(input()) == \"infinity\"\nassert solution(input()) == \"infinity\"\nassert solution(input()) == \"infinity\"\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\n\n\n-----"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"21 5\") == \"2\"\nassert solution(\"9435152 272\") == \"282\"\nassert solution(\"10 10\") == \"infinity\"\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('3 1') == '3'\nassert solution('6 1') == '9'\nassert solution('13 1') == '26'\nassert solution('23 1') == '39'\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1\\n1') == '2'\nassert solution('1\\n0') == '1'\nassert solution('1\\n13') == '14'\nassert solution('1\\n5') == '6'\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"25 13\") == \"26\"\nassert solution(\"26 13\") == \"39\"\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'\nassert solution('1 5') == '6'\nassert solution('1 5') == '6'\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3''') == '6'\nassert solution('''25 13''') == '26'\nassert solution('''26 13''') == '39'"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '6'\nassert solution('25 13') == '26'\nassert solution('26 13') == '39'\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"mail\\nai\\nlru\\ncf\\n\") == \"cfmailru\\n\""
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''mail\nai\nlru\ncf''') == 'cfmailru'\nassert solution('''kek\npreceq\ncheburek''') == 'preceq'\nassert solution('''kfgfzjhj\njhgfjkdfgjh\nfghjkdfhjkdfg\nfhjkdfhjdfgkfjhg\nkghdfj\nkghdf\njhfdf\ndfghjf\njhgk\n''') == 'jhgkdfhjkdfgfhjh'\nassert solution('''jhgfjkdfgjh\nfghjkdfhjkdfg\nfhjkdfhjdfgkfjhg\nkghdfj\nkghdf\njhfdf\ndfghjf\njhgk\n''') == 'fhjkdfhjkdfg'\nassert solution('''zfjhj\njhgfjkdfgjh\nfghjkdfhjkdfg\nfhjkdfhjdfgkfjhg\nkghdfj\nkghdf\njhfdf\ndfghjf\njhgk\n''') == 'jhgkdfhjkdfgfhjh'\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[0:2]\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(open(\"test_data\").read()) == \"kek\"\nassert solution(open(\"test_data2\").read()) == \"preceq\"\nassert solution(open(\"test_data3\").read()) == \"cheburek\"\nassert solution(open(\"test_data4\").read()) == \"ai\"\nassert solution(open(\"test_data5\").read()) == \"lru\"\n\"\"\"\n\nfrom typing import Set, Tuple\nfrom collections import Counter, defaultdict\nfrom itertools import groupby"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"mail\") == \"cfmailru\"\nassert solution(\"ai\") == \"cfmailru\"\nassert solution(\"lru\") == \"cfmailru\"\nassert solution(\"cf\") == \"cfmailru\"\n\nassert solution(\"kek\") == \"NO\"\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''mail\nai\nlru\ncf\n''') == 'cfmailru'\nassert solution('''kek\npreceq\ncheburek\n''') == 'NO'\n\n\n-----"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''mail\nai\nlru\ncf\n''') == 'cfmailru'\nassert solution('''kek\npreceq\ncheburek\n''') == 'kekpreceq'\nassert solution('''string1\nstring2\nstring3\n''') =='string2string3'\nassert solution('''string2\nstring1\nstring3\n''') =='string1string3'\nassert solution('''string3\nstring1\nstring2\n''') =='string1string2'\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\nai\nlru\ncf\n\"\"\") == \"cfmailru\"\n\nassert solution(\n\"\"\"\n3\nkek\npreceq\ncheburek\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n2\nkek\npreceq\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n2\na\nb\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n3\na\nb\nc\n\"\"\") == \"NO\""
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('test') == 't'\nassert solution('sample') == 'ai'\nassert solution('kek') == 'kek'\nassert solution('preceq') == 'preceq'\nassert solution('cheburek') == 'cheburek'\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n10\\n') == '3'\nassert solution('2 1 1\\n5 8\\n') == '1'\nassert solution('1 1 3\\n10\\n') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 8 3\n10\n\n''') == '3'\n\nassert solution(\n'''\n2 10 1\n5 8\n\n''') == '1'\n\nassert solution(\n'''\n1 1 3\n10\n\n''') == '-1'\n\nassert solution(\n'''\n1 1 3\n5 8\n\n''') == '2'\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 8 3\n10\n''') == '3'\nassert solution('''2 10 1\n5 8\n''') == '1'\nassert solution('''1 1 3\n10\n''') == '-1'\nassert solution('''1 2 1\n10\n''') == '-1'\nassert solution('''1 2 1\n5 9\n''') == '-1'\n'''\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 8 3\\n10\\n\") == \"3\"\nassert solution(\"1 1 3\\n10\\n\") == \"-1\"\nassert solution(\"2 10 1\\n5 8\\n\") == \"1\"\nassert solution(\"2 1 1\\n5 8\\n\") == \"-1\"\nassert solution(\"2 1 1\\n5 7\\n\") == \"2\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nm, t, r = map(int, stdin.split())\nlights = [int(x) for x in stdin.split()]\nlights.sort()\nfor i in range(len(lights)):\n    if lights[i] < t:\n        continue\n    else:\n        break\nprint(i)"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 8 3') == '3'\nassert solution('2 10 1') == '1'\nassert solution('1 1 3') == '-1'\nassert solution('1 1 4') == '-1'\nassert solution('2 4 4') == '-1'\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 8 3\") == \"3\"\nassert solution(\"2 10 1\") == \"1\"\nassert solution(\"1 1 3\") == \"-1\"\nassert solution(\"2 10 1\") == \"1\"\n\n\n\n\"\"\"\nfrom collections import defaultdict\nfrom typing import List\n\nm, t, r = list(map(int, stdin.strip().split()))\nw: List[int] = list(map(int, stdin.strip().split()))\n\nevents: List[int] = [0] * m\nfor i in range(m):\n    events[i] = t + i"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 10 1\") == \"1\"\nassert solution(\"1 1 3\") == \"3\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"1 1 3\\n2 10 1\") == \"3\"\nassert solution(\"1 1 1\\n2 10 1\") == \"-1\"\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 8 3\\n10') == '3'\nassert solution('1 1 3\\n10') == '-1'\nassert solution('2 10 1\\n5 8') == '1'\nassert solution('2 10 1\\n3 4') == '3'\nassert solution('2 10 1\\n1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 8 3') == '3'\nassert solution('2 10 1') == '1'\nassert solution('1 1 3') == '-1'\nassert solution('3 1 3') == '3'\nassert solution('10 1 3') == '3'\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'YES'\nassert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('1 2') == 'YES'\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n1\\n') == 'YES\\n3\\n3\\n'\nassert solution('4\\n1\\n2\\n2\\n') == 'NO\\n'\nassert solution('4\\n1\\n1\\n1\\n') == 'YES\\n3\\n3\\n'\nassert solution('4\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('3\\n1\\n1\\n') == 'NO\\n'\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n1\\n2\\n2\") == \"YES\"\nassert solution(\"1\\n1\\n3\\n3\") == \"NO\"\nassert solution(\"2\\n1\\n2\\n3\") == \"YES\"\nassert solution(\"1\\n1\\n2\\n2\") == \"NO\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\n\"\"\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1\\n1\\n1\\n\") == \"YES\\n3\\n3\\n\"\nassert solution(\"4\\n2\\n2\\n3\\n\") == \"NO\\n\"\nassert solution(\"1\\n2\\n\") == \"NO\\n\"\nassert solution(\"4\\n1\\n2\\n3\\n\") == \"NO\\n\"\nassert solution(\"4\\n1\\n1\\n2\\n3\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1') == 'YES'\nassert solution('4\\n1\\n1\\n1') == 'NO'\nassert solution('4\\n1\\n1\\n2') == 'YES'\nassert solution('4\\n1\\n1\\n3') == 'YES'\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"2\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n2\\n3\") == \"NO\"\nassert solution(\"3\\n1\\n2\\n2\") == \"YES\"\nassert solution(\"1\\n1\\n3\\n3\") == \"YES\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n1\\n\") == \"NO\\n3\\n3\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5\n''') == '6\\n4\\n1\\n3\\n10'\n'''\n    pass\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '4'\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1 2') == '2'\nassert solution('1\\n2 3 1') == '3'\nassert solution('1\\n2 3 1') == '3'\nassert solution('1\\n2 3 1') == '3'\nassert solution('1\\n2 3 1') == '3'\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''4 1 4\n1 3 2\n5 5 5\n2 4 2''') == '2\\n1\\n3\\n5\\n5'\nassert solution('''6 8 12\n4 4 2\n4 7 9\n2 1 1\n3 2 5\n4 9 2\n6 8 4''') == '6\\n4\\n4\\n3\\n7\\n2'\n'''\n'''"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\n'''"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 4 2\") == \"2\"\nassert solution(\"5 10 4\") == \"6\"\nassert solution(\"3 10 1\") == \"4\"\nassert solution(\"1 2 3\") == \"10\"\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\n\nprint(solution('''1\n2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5'''))\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''1 1 1\n2 1 2\n1 2 1\n3 1 3''') == '0\\n0\\n0\\n0'\nassert solution('''1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '0\\n0\\n0\\n0'\nassert solution('''1 1 1\n2 2 2\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\nassert solution('''1 1 1\n2 2 2\n3 3 3\n4 4 4\n1 2 1\n2 2 2\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1''') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n4 6 5') == '6\\n4\\n1\\n3\\n10'\nassert solution('3 2 1\\n4 6 5') == '6\\n4\\n1\\n3\\n10'\nassert solution('1 2 3\\n4 6 5') == '6\\n4\\n1\\n3\\n10'\nassert solution('1 2 3\\n4 6 5') == '6\\n4\\n1\\n3\\n10'\nassert solution('1 2 3\\n4 6 5') == '6\\n4\\n1\\n3\\n10'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n') == '0.000000'\nassert solution('1\\n') == '0.50000'\nassert solution('2\\n') == '0.40000'\nassert solution('3\\n') == '0.333333'\nassert solution('4\\n') == '0.25000'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '6'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n1\n''') == '0.666667'\nassert solution('''1\n2\n3\n''') == '1.00000'\nassert solution('''1\n3\n3\n''') == '0.833333'\nassert solution('''1\n1\n1\n''') == '0.5'\nassert solution('''0\n0\n0\n''') == '1.00000'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '0.5'\nassert solution('2') == '0.333333'\nassert solution('3') == '0.16667'\nassert solution('4') == '0.08333'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('0\\n') == '0'\nassert solution('0\\n1') == '0.5'\nassert solution('1\\n0') == '0.5'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n0\n1\n1\n    '''\n) == '0.666667'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n1\\n1\\n') == '0.666667'\nassert solution('0\\n3\\n4\\n') == '0.33333'\nassert solution('0\\n0\\n0\\n') == '0.000000'\nassert solution('0\\n0\\n0\\n0\\n') == '0.000000'\nassert solution('0\\n0\\n0\\n0\\n0\\n') == '0.000000'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0\\n1\\n1\") == \"0.666667\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('.BAC.') == 'Yes'\nassert solution('.AC.B') == 'No'\nassert solution('.BAC') == 'No'\nassert solution('.BA.C') == 'Yes'\nassert solution('.B.C') == 'No'\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('.BAC.') == 'Yes'\nassert solution('.BAC.') == 'Yes'\nassert solution('.BAC.') == 'Yes'\nassert solution('.BAC.') == 'No'\nassert solution('.BAC.') == 'Yes'\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\".BAC.\") == \"Yes\"\nassert solution(\"AA..CB\") == \"No\"\nassert solution(\"AA..C.B\") == \"Yes\"\nassert solution(\"..ABC.\") == \"Yes\"\nassert solution(\"....A.B.\") == \"Yes\"\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\".BAC.\") == \"Yes\"\nassert solution(\".AA..CB\") == \"No\"\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('..A..C..') == 'Yes'\nassert solution('AA..CB') == 'No'\nassert solution('AA.A.AB..') == 'Yes'\nassert solution('A.B.A.AB..') == 'Yes'\nassert solution('..B.C..') == 'No'\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\".BAC.\") == \"Yes\"\nassert solution(\".BAC.\") == \"Yes\"\nassert solution(\"AB..C.\") == \"Yes\"\nassert solution(\"AA..CB\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BAC') == 'Yes'\nassert solution('AA..CB') == 'No'\nassert solution('A...') == 'Yes'\nassert solution('BA.B') == 'No'\nassert solution('B..C') == 'No'\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('.BAC.') == 'Yes'\nassert solution('AB..C') == 'No'\n\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('BAC.G.') == 'Yes'\nassert solution('AA..CB') == 'No'\nassert solution('AAAA.BBBB.CCCC.DDDD.EEEEE.FFFF.GGGG.HHHH.IIII.JJJJ.KKKK.LLLL.MMMM.NNNN.OOOOO.PPPP.QQQQ.RRRR.SSSS.TTTT.UUUU.VVVV.WWWW.XXYY.YYYY.ZZZZ.AA') == 'Yes'\nassert solution('AAA..BBB') == 'No'\nassert solution
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('BAC') == 'Yes'\nassert solution('BBAA') == 'No'\nassert solution('BABC') == 'Yes'\nassert solution('BABA') == 'Yes'\nassert solution('BABC') == 'Yes'\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"5\"\nassert solution(\"0 0\\n1 0\\n1 1\\n2 0\") == \"4\"\nassert solution(\"0 0\\n2 0\\n1 1\\n\") == \"4\"\nassert solution(\"\") == \"\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 0\n1 1\n2 2''') == '5'\nassert solution('''0 0\n2 0\n1 1\n''') == '4'\nassert solution('''0 0\n1 1\n2 2\n3 3\n''') == '6'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n''') == '6'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n''') == '6'\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0\\n1 1\\n2 2') == '5'\nassert solution('0 0\\n2 0\\n1 1') == '4'\nassert solution('0 0\\n1 1\\n2 2') == '4'\nassert solution('0 0\\n1 1\\n0 0') == '1'\n\n\n-----\n\n* There are at most 1000 plots in the forest.\n* Each plot is at most 1000 by 1000.\n* There are at most 10000 plots in the forest.\n* Each plot is at most 1000 by 1000.\n* There are at most 100000 plots in the forest.\n* Each plot is at most 1000 by 1000.\n\n---\n\n\"\"\""
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0') == '5'\nassert solution('0 0\\n1 1\\n2 2') == '5'\nassert solution('0 0\\n2 0\\n1 1') == '4'\nassert solution('0 0\\n2 0\\n1 1\\n0 0') == '5'\nassert solution('0 0\\n2 0\\n1 1\\n1 1') == '4'\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1 1\\n2 2\\n') == '5\\n0 0\\n1 0\\n1 1\\n1 2\\n2 2\\n'\nassert solution('0 0\\n2 0\\n1 1\\n') == '4\\n0 0\\n1 0\\n1 1\\n2 0\\n'\nassert solution('0 0\\n1 0\\n2 1\\n') == '4\\n0 0\\n1 0\\n1 1\\n2 1\\n'\nassert solution('0 0\\n2 0\\n1 1\\n') == '4\\n0 0\\n1 0\\n1 1\\n2 0\\n'"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n1 1\\n2 2\\n0 0\\n1 1\\n2 2\") == \"5\"\nassert solution(\"0 0\\n1 1\\n2 2\") == \"4\"\nassert solution(\"0 0\\n1 1\\n1 1\\n1 1\") == \"2\"\nassert solution(\"0 0\\n1 1\\n1 2\") == \"2\"\nassert solution(\"0 0\\n1 1\\n2 2\") == \"2\"\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom functools import lru_cache\n\nfrom levi.utils import InputType, OutputType, get_test_input\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2''') == '5'\nassert solution('''3 2''') == '3'"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"5\"\n\n\"\"\"\n\n\n\nimport sys\nsys.setrecursionlimit(10000)"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '5'\nassert solution('3 2') == '3'\nassert solution('4 2') == '5'"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n\nfrom fractions import Fraction\nmod = 1000000007"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '4 2'\n) == '5'\n\nassert solution(\n    '3 2'\n) == '3'\n"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '5'\nassert solution('1 2') == '5'\nassert solution('10 100') == '4'\nassert solution('9 100') == '3'\nassert solution('100 100') == '2'\n\n\n-----Solution-----\n\"\"\"\n\nn,m = map(int,input().split())"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5'\n\n'''\n\n\n'''\n\nPossible solution:\n\nDefine a DP table for dp[i][j]: the number of ways Reziba can choose $i$ magic gems to form a set of $j$ gems.\n\nThe bottom-right corner of the table is the number of ways Reziba can form a set of 0 gems.\n\nLet $m_{i-1}$ denote the number of magic gems Reziba can choose to split into $i$ normal gems, and $n_{i-1}$ denote the number of normal gems Reziba can choose to split into $i$ magic gems.\n\nLet $m_i$ and $n_i$ denote the number of magic gems and normal gems Reziba can choose to split into $i$ magic gems, respectively.\n\nAn intuitive way to see this is:\n\nWe can split only one magic gem, or split two magic gems into a single normal gem, or split all magic gems into single normal gems.\n\nIf we split one magic gem into $m_1$ normal gems, we can split $m_2$ magic gems into $n_1$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $n_1$ * $dp[m_1][n_1]$.\n\nIf we split two magic gems into a single normal gem, we can split $m_3$ magic gems into $n_2$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $m_2$ * $n_2$ * $dp[m_1][m_2]$.\n\nIf we split all magic gems into single normal gems, we can split $m_4$ magic gems into $n_3$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $m_2$ * $m_3$ * $n_3$ * $dp[m_1][m_2]$.\n\nThus, we have $dp[m_1][n_1] = dp[m_1][n_1] + dp[m_2][n_2] + dp[m_3][n_3] + dp[m_4][n_4]$.\n\nNow, if we split one magic gem into $m_2$ normal gems, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_2$ * $m_4$ * $n_4$ * $dp[m_2][n_2]$.\n\nIf we split two magic gems into a single normal gem, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_2$ * $m_4$ * $m_4$ * $n_4$ * $dp[m_2][m_4]$.\n\nIf we split all magic gems into single normal gems, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_2$ * $m_4$ * $m_4$ * $m_4$ * $n_4$ * $dp[m_2][m_4]$.\n\nHence, we have $dp[m_2][n_2] = dp[m_2][n_2] + dp[m_4][n_4]$.\n\nAn intuitive way to see this is:\n\nWe can split one magic gem into $m_2$ normal gems, and split two magic gems into a single normal gem.\n\nIf we split one magic gem into $m_1$ normal gems, and split $m_2$ magic gems into $n_2$ normal gems, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $m_2$ * $m_4$ * $n_4$ * $dp[m_1][m_2]$.\n\nThus, we have $dp[m_1][n_1] = dp[m_1][n_1] + dp[m_2][n_2]$.\n\nIf we split one magic gem into $m_1$ normal gems, and split two magic gems into a single normal gem, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $m_2$ * $m_4$ * $n_4$ * $dp[m_1][m_2]$.\n\nThus, we have $dp[m_1][n_1] = dp[m_1][n_1] + dp[m_2][n_2]$.\n\nIf we split one magic gem into $m_1$ normal gems, and split two magic gems into a single normal gem, we can split $m_4$ magic gems into $n_4$ normal gems, and the total number of ways Reziba can form a set of $j$ gems is $m_1$ * $m_2$ * $m_4$ * $n_4$ * $dp[m_1][m_2]$.\n\nThus, we have $dp[m_1][n_1] = dp[m_1][n_1] + dp[m_2][n_2]$.\n\nThe above two ways are equivalent, and give the same answer.\n\nThe number of ways Reziba can form a set of $j$ gems is $dp[m_1][n_1]$.\n\nLet $k$ be the number of magic gems Reziba can choose to split into $j$ normal gems.\n\nWe know that $k$ is a divisor of $j$, since each magical gem is split into $j$ normal gems.\n\nThus, the number of ways Reziba can form a set of $j$ gems is $dp[m_1][n_1] * dp[m_k][n_k]$.\n\nTo get the total number of ways Reziba can form a set of $j$ gems, we can multiply $dp[m_1][n_1]$ by the number of magical splits, and then add the number of magical splits of"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '5'\nassert solution('3 2') == '3'\nassert solution('2 1') == '5'\nassert solution('6 6') == '19'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '5'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 1 6''') == '2 1 3'\nassert solution('''5 5 5 6''') == '1 0 1'\nassert solution('''5 6 6 1''') == '0 0 0'\nassert solution('''3 2 1 4''') == '1 1 1'\nassert solution('''2 4 1 5''') == '1 2 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3 1 6\\n\") == \"2 1 3\\n\"\nassert solution(\"5 5 5 6\\n\") == \"1 0 1\\n\"\nassert solution
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3 1 6''') == '2 1 3'\nassert solution('''5 5 5 6''') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 1 6') == '2 1 3'\nassert solution('5 5 5 6') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 1 6') == '2 1 3'\nassert solution('5 5 5 6') == '1 0 1'\nassert solution('1 1 1 1') == '0 0 0'\nassert solution('2 2 2 2') == '0 0 0'\nassert solution('3 3 3 3') == '0 0 0'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3 1 6''') == '2 1 3'\nassert solution('''5 5 5 6''') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 1 6\\n') == '2 1 3'\nassert solution('5 5 5 6\\n') == '1 0 1'\nassert solution('4 3 1 6\\n') == '2 1 3'\nassert solution('4 3 1 6\\n') == '2 1 3'\nassert solution('5 5 5 6\\n') == '1 0 1'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2 1 3') == '2 1 3'\nassert solution('1 1 1 1') == '0 0 0'\nassert solution('1 2 2 1') == '0 0 0'\nassert solution('1 2 1 2') == '2 1 3'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3 1 6''') == '2 1 3'\nassert solution('''5 5 5 6''') == '1 0 1'\nassert solution('''4 3 2 4''') == '0 0 2'\nassert solution('''5 5 6 6''') == '1 0 1'\nassert solution('''4 5 3 1''') == '3 1 0'\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 1 6') == '2 1 3'\nassert solution('5 5 5 6') == '1 0 1'\nassert solution('8 8 8 6') == '0 0 0'\nassert solution('4 2 1 6') == '2 1 3'\nassert solution('8 8 8 6') == '1 0 1'\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4) == 8\nassert solution(3) == 8\nassert solution(10) == 1024\nprint('Tests passed')\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('\\n') == 0\nassert solution('\\t') == 0\nassert solution('     ') == 0\nassert solution('  1') == 1\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 8\nassert solution(\"10\") == 1024\n\"\"\"\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('2') == 4\nassert solution('3') == 9\nassert solution('4') == 16\nassert solution('5') == 25\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\"\nassert solution(10) == \"1024\"\nassert solution(0) == \"0\"\nassert solution(9) == \"81\"\nassert solution(36) == \"536870912\""
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"1 2 3 4 5\") == \"\"\nassert solution(\"1 2 3 4 5 6\") == \"\"\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == result, \"Failed test\"\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '3 4 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '5 5 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '182690 214748 300999'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810\n''') == '1 977539810 977539810'\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '4',\n    '1 3 5 7',\n    '1 5 5 7',\n    '100000 200000 300000 400000',\n    '1 1 977539810 977539810'])) == '3 4 5'\n\nassert solution('\\n'.join([\n    '1',\n    '1 5 5 7',\n    '100000 200000 300000 400000',\n    '1 1 977539810 977539810'])) == '1 977539810 977539810'\n\nassert solution('\\n'.join([\n    '1',\n    '5 7 2 9',\n    '10 9 3 3',\n    '1 1 2 3',\n    '100000 200000 300000 400000'])) == '6 8 9'\n\n\n-----Best Practice-----"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 5 7\") == \"3 4 5\"\nassert solution(\"1 5 5 7\") == \"5 5 5\"\nassert solution(\"100000 200000 300000 400000\") == \"3 4 5\"\nassert solution(\"1 1 977539810 977539810\") == \"1 977539810 977539810\"\nassert solution(\"7 7 7 7\") == \"7 7 7\"\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 5 7\") == \"3 4 5\"\nassert solution(\"1 5 5 7\") == \"5 5 5\"\nassert solution(\"100000 200000 300000 400000\") == \"182690 214748 300999\"\nassert solution(\"1 1 977539810 977539810\") == \"1 977539810 977539810\"\n'''"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '3 4 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '5 5 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '182690 214748 300999'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '1 977539810 977539810'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '977539810 977539810'\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2 5\n7 9\n10 11''') == '10'\nassert solution('''5 10\n5 7\n11 12\n16 20\n25 26\n30 33''') == '18'\nassert solution('''1 1000000000\n1 1000000000''') == '1999999999'\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n') == '1'\nassert solution('3 4\\n2 5\\n7 9\\n10 11') == '10'\nassert solution('5 10\\n5 7\\n11 12\\n16 20\\n25 26\\n30 33') == '18'"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2 5\\n7 9\\n10 11\\n') == '10'\nassert solution('5 10\\n5 7\\n11 12\\n16 20\\n25 26\\n30 33\\n') == '18'\nassert solution('1 1000000000\\n1 1000000000\\n') == '1999999999'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"1 1000000000\") == \"1999999999\"\nassert solution(\"5 10\") == \"18\"\nassert solution(\"5 7\") == \"18\"\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 4\n2 5\n7 9\"\"\") == \"10\"\nassert solution(\"\"\"5 10\n5 7\n11 12\n16 20\n25 26\n30 33\"\"\") == \"18\"\nassert solution(\"\"\"1 1000000000\n1 1000000000\"\"\") == \"1999999999\"\nassert solution(\"\"\"1 10\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\"\"\") == \"1999999999\"\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == str(18)\n'''\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 4\n2 5\n7 9\n10 11''') == '10'\n\nassert solution('''5 10\n5 7\n11 12\n16 20\n25 26\n30 33''') == '18'\n\nassert solution('''1 1000000000\n1 1000000000''') == '1999999999'\n\nassert solution('''1 1000000000''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n10') == '9'\nassert solution('2\\n100') == '99'\nassert solution('5\\n100') == '99'\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1000000000') == '1999999999'\nassert solution('2 1000000000') == '1999999999'\nassert solution('3 1000000000') == '1999999999'\nassert solution('4 1000000000') == '1999999999'\nassert solution('5 1000000000') == '1999999999'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40\\n') == 'YES\\nYES\\nYES\\nNO'\nassert solution('3\\n100 8\\n100 8\\n100 8\\n100 8\\n') == 'NO\\nNO\\nNO\\nNO'\n\"\"\""
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n\n''') == 'YES'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n\n''') == 'NO'\nassert solution('''\n4\n100 98\n42 32\n1000000000000000000 1\n41 40\n\n''') == 'YES'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40\") == \"YES\\nYES\\nYES\\nNO\"\nassert solution(\"5\\n16 14\\n6 12\\n3 10\\n1 7\\n4 4\\n2 2\\n3 4\\n4 5\\n5 7\\n6 13\") == \"NO\"\n\n\n\"\"\"\n\nfrom typing import Iterator\nfrom math import sqrt"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('1 3') == 'NO'\nassert solution('100000 100') == 'NO'\nassert solution('100 2') == 'YES'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES\\nYES\\nYES\\nNO'\n\nassert solution('''3\n1043 157\n1000000000000000000 1\n40 32\n1000000000000000000 1\n4 8\n''') == 'YES\\nYES\\nNO'\n\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40\\n') == 'YES\\nYES\\nYES\\nNO'\nassert solution('2\\n1 1\\n2 2\\n') == 'YES\\nNO'\nassert solution('2\\n2 2\\n') == 'YES\\nNO'\nassert solution('2\\n1 1\\n2 2\\n') == 'NO'\nassert solution('2\\n1 1\\n2 2\\n') == 'NO'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n100 98\\n42 32\\n1000000000000000000 1\\n41 40') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('1\\n1\\n') == 'NO'\nassert solution('1\\n1\\n') == 'NO'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '-1'\nassert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\n\nprint('Tests passed')\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\nassert solution('1 2') == '199 200'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"199 200\"\nassert solution(\"4 4\") == \"412 413\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"6 2\") == \"-1\"\nassert solution(\"9 9\") == \"798 999\"\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2') == '199 200'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\nassert solution('7 4') == '-1'\nassert solution('8 4') == '-1'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\n'''\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2''') == '199 200'\nassert solution('''4 4''') == '412 413'\nassert solution('''5 7''') == '-1'\nassert solution('''6 2''') == '-1'\nassert solution('''7 3''') == '-1'\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"169\") == 1\nassert solution(\"12118999\") == 1\nassert solution(\"12321489\") == 2\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''42\n23454''') == '2'\nassert solution('''169\n12118999''') == '1'"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"169\") == \"1\"\nassert solution(\"12118999\") == \"1\"\nassert solution(\"12222222\") == \"1\"\nassert solution(\"12123232\") == \"0\"\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"42\") == \"2\"\nassert solution(\"23454\") == \"1\"\nassert solution(\"169\") == \"1\"\nassert solution(\"12118999\") == \"1\"\nassert solution(\"2346525\") == \"2\"\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('42') == '2'\nassert solution('169') == '1'\n\"\"\"\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('42') == '2'\nassert solution('23454') == '2'\nassert solution('169') == '1'\nassert solution('12118999') == '1'\nassert solution('23456989') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('asdf') == None\nassert solution('1100101110111111') == 4\nassert solution('011101111') == 2\nassert solution('11111111111111111111111111111111111111') == 10\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4\ncba\ncbafc\n''') == 'YES'\n\nassert solution('''3\n2\ncba\ncbafc\n''') == 'NO'\n\nassert solution('''2\n2\nccab\ncbac\n''') == 'YES'\n\nassert solution('''2\n4\nccab\ncbac\n''') == 'YES'\n\nassert solution('''2\n4\nccab\ncbac\n''') == 'NO'"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ccab') == 'NO'\nassert solution('cbafc') == 'YES'\nassert solution('acb') == 'NO'\nassert solution('acbcc') == 'YES'\nassert solution('abcd') == 'NO'\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 'NO'\nassert solution('abcdef') == 'NO'\nassert solution('abcd') == 'YES'\nassert solution('abcdabcd') == 'YES'\nassert solution('abcdabcdabcd') == 'YES'\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abab') == 'YES'\nassert solution('ab') == 'NO'\nassert solution('c') == 'YES'\nassert solution('cab') == 'NO'\nassert solution('cba') == 'YES'\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('caa') == 'YES'\nassert solution('cbb') == 'NO'\nassert solution('3') == 'YES'\nassert solution('cba') == 'NO'\nassert solution('cba') == 'NO'\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2''') == 'YES'\nassert solution('''1\n1\n2\n3''') == 'NO'\nassert solution('''4\n4\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc\n''') == 'YES'\n'''\n'''"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"YES\"\nassert solution(\"bac\") == \"YES\"\nassert solution(\"cab\") == \"NO\"\nassert solution(\"acb\") == \"YES\"\nassert solution(\"acbcc\") == \"NO\"\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"O|\"\nassert solution(\"13\") == \"O-|O-OOO\"\nassert solution(\"720\") == \"O-|-OOOO\"\nassert solution(\"0\") == \"\""
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('2') == 'O-|OO-OO'\nassert solution('13') == 'O-|O-OOO'\nassert solution('720') == 'O-|-OOOO'\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('3') == 'OOOO'\nassert solution('2') == '-|-', 'expected: -|-\\n got: {}'.format(solution('2'))\nassert solution('1') == '-', 'expected: -\\n got: {}'.format(solution('1'))\nassert solution('0') == '', 'expected: \\n got: {}'.format(solution('0'))\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2\"\"\") == \"\"\"O-|OO-OO\nO-|O-OOO\n\n\"\"\"\nassert solution(\n\"\"\"13\"\"\") == \"\"\"O-|-OOOO\nO-|O-OOO\nO-|O-OOO\nO-|OO-OO\nO-|O-OOO\n\n\"\"\"\nassert solution(\n\"\"\"720\"\"\") == \"\"\"O-|-OOOO\nO-|OO-OO\n-O|OO-OO\nO-|O-OOO\nO-|OO-OO\nO-|O-OOO\nO-|O-OOO\nO-|O-OOO\n\n\"\"\"\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\""
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == \"O-|OO-OO\"\nassert solution('13') == \"O-|OOO-O\"\nassert solution('720') == \"O-|-OOOO\"\nassert solution('2147483639') == \"O-|-OOOOO-O\"\nassert solution('2147483640') == \"O-|-OOO-OO\"\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n') == 'O-|OO-OO'\nassert solution('13\\n') == 'O-|OOO-O'\nassert solution('720\\n') == 'O-|-OOOO'\nassert solution('2\\n') == 'O-|OO-OO'\nassert solution('13\\n') == 'O-|OOO-O'\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"|O-|-O|\\nO-|-O-O\\nO-|-O-O\"\nassert solution(\"13\") == \"O-|-OO-|O-|-O-O\\nO-|O-O-O\\nO-|O-O-O\\n-O-|-O-O\"\nassert solution(\"720\") == \"O-|-O-O\\nO-|OO-OO\\n-O-|-O-O\\nO-|-OOOO\"\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0') == ''\nassert solution('2') == 'O-|-OO'\nassert solution('13') == 'O-|O-OOO\\nO-|O-OO\\n-O|OO-OO'\nassert solution('720') == 'O-|-OOOO\\nO-|OO-OO\\n-O|OO-OO'\nprint(solution(input()))\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2''') == 'O-|OO-OO'\nassert solution('''13''') == 'O-|OOO-O'\nassert solution('''720''') == 'O-|-OOOO'"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"YES\\n1 2 4 5 7\"\nassert solution(\"3 6\") == \"YES\\n1 2 5\"\nassert solution(\"2 3\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES\\n1 2 4 5 7'\nassert solution(input()) == 'YES\\n1 2 5'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4 5 7\") == \"YES\\n1 2 4 5 7\"\nassert solution(\"3 6\") == \"YES\\n1 2 5\"\n\"\"\"\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"YES\\n1 2 5\"\nassert solution(\"5 5\") == \"YES\\n1 2 4 5 7\"\nassert solution(\"1 10\") == \"NO\"\nassert solution(\"5 9\") == \"NO\"\nassert solution(\"1 100000\") == \"NO\"\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"YES\\n1 2 5\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1\") == \"YES\\n1\"\nassert solution(\"5\") == \"YES\\n1 2 3 4 5\"\nassert solution(\"8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255\")\n\n\"\"\"\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5\\n') == 'YES\\n1 2 4 5 7'\nassert solution('3 6\\n') == 'YES\\n1 2 5'\nassert solution('1 1\\n') == 'NO'\nassert solution('4 1\\n') == 'NO'\nassert solution('5 0\\n') == 'NO'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 3''') == '0.666667'\nassert solution('''0\n0''') == '0.000000'\nassert solution('''3\n3\n0\n1\n2''') == '0.333333'\nassert solution('''16\n0\n2\n6\n7\n2\n3\n7\n0\n0\n1\n1\n2\n1\n2\n1\n3\n1\n2\n2\n0\n3\n4\n1\n3\n1\n2\n0\n2\n0\n2\n3\n0\n3\n1\n1\n1\n3\n0\n3\n1\n3\n0\n0\n1\n1\n1\n1\n3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n0\n1\n2\n1\n2\n0\n3\n1\n1\n1\n2\n2\n0\n2\n2\n1\n2\n2\n1\n2\n1\n1\n2\n1\n2\n0\n1\n1\n1\n1\n1\n1\n1\n0\n1\n1\n0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n2\\n0\\n') == '0.666667'\nassert solution('1\\n2\\n0\\n') == '0.500000'\nassert solution('1\\n0\\n0\\n') == '0.000000'\nassert solution('3\\n3\\n1 2\\n2 1') == '0.437500'\nassert solution('2\\n2\\n1 1\\n2\\n1\\n2') == '0.50000'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.666667'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n0\n''') == '0.666667'\nassert solution('''2\n2 3\n1 0\n''') == '0.500000'\nassert solution('''0\n1\n2\n3\n''') == '0.5'\nassert solution('''0\n1\n3\n2\n''') == '0.666667'\nassert solution('''0\n3\n2\n1\n''') == '0.333333'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\") == \"0.666666\"\nassert solution(\"2\\n2 3\\n1 0\") == \"0.666667\"\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n0') == '0.50000'\nassert solution('2\\n2\\n1 0') == '0.66667'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0\n0\n0\n''') == '0.000000'\nassert solution('''1\n0\n0\n''') == '0.000000'\nassert solution('''1\n0\n1\n''') == '0.333333'\nassert solution('''1\n1\n0\n''') == '0.666667'\nassert solution('''2\n0\n2\n1\n''') == '0.666667'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0,0') == '0.000'\nassert solution('1,1') == '0.500'\nassert solution('1,2') == '0.833'\nassert solution('3,1') == '0.916667'\nassert solution('3,2') == '0.583333'\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\") == \"0.5\"\nassert solution(\"3\\n0 1 2\") == \"0.166667\"\nassert solution(\"4\\n0 0 1 2 2\") == \"0.166667\"\nassert solution(\"3\\n0 0 1 2\") == \"0.250000\"\nassert solution(\"2\\n1 1 1\") == \"0.500000\"\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1\n''') == '1'\nassert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1\n''') == '-1'\nassert solution('''4 3\n2 1 2 1\n2 1 2 1\n''') == '2'\nassert solution('''4 3\n1 2 1 2\n1 1 1\n''') == '2'\nassert solution('''4 3\n1 2 1 2\n1 1 1\n''') == '2'\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1''') == '1'\nassert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1''') == '-1'\nassert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1''') == '2'\nassert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1''') == '2'\nassert solution('''8 3\n3 3 1 2 2 1 1 3\n3 1 1''') == '-1'\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\n---\n\n- Correct\n- Example 1\n\nInput\n8 3\n3 3 1 2 2 1 1 3\n3 1 1\nOutput\n1\n\nInput\n5 3\n4 3 1 2 1\n3 1 1\nOutput\n3\n\nInput\n8 3\n3 3 1 2 2 1 1 3\n3 1 1\nOutput\n2\n\nInput\n5 3\n4 3 1 2 1\n3 1 1\nOutput\n1\n\nInput\n5 4\n1 1 1 1 1\n4 1 1 1 1\nOutput\n0\n\nInput\n5 3\n4 3 1 2 1\n3 1 1\nOutput\n2\n\nInput\n5 3\n4 3 1 2 1\n3 1 1\nOutput\n1\n\nInput\n5 4\n1 1 1 1 1\n4 1 1 1 1\nOutput\n0\n\"\"\"\n\nn, m = map(int, input().split())\nl = list(map(int, input().split()))\nk = list(map(int, input().split()))\n\nL = l[0:m]\nK = k[0:m]\n\nidx = m\nfor i in range(0, m):\n    if sum(L) == n:\n        idx -= 1\n    if sum(L) > n:\n        L[L.index(max(L))] -= 1\n    else:\n        L[L.index(min(L))] += 1\n\nprint(idx)\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n\"\"\""
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2 2 1 1 3') == '1'\nassert solution('8 3') == '-1'\nassert solution('5 3 3 1 2 2 1 1 3') == '2'\nassert solution('5 3 3 1 2 2 1 1 3') == '-1'\nassert solution('5 3 3 1 2 2 1 1 3') == '-1'\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '4'\nassert solution(stdin) == '6'\nassert solution(stdin) == '8'\n\n\n\"\"\"\n\n\"\"\"\nThe solution is the following:\n\n1. Let the number of incoming (prefixed with!) be n.\n2. Let the number of outgoing (prefixed with *) be m.\n3. Let the number of incoming with lightsaber_color_1 be p_1 and so on.\n4. Let the number of outgoing with lightsaber_color_1 be q_1 and so on.\n5. Let the number of incoming with lightsaber_color_2 be p_2 and so on.\n6. Let the number of outgoing with lightsaber_color_2 be q_2 and so on.\n7. Let the number of incoming with lightsaber_color_3 be p_3 and so on.\n8. Let the number of outgoing with lightsaber_color_3 be q_3 and so on.\n9. Let the number of incoming with lightsaber_color_4 be p_4 and so on.\n10. Let the number of outgoing with lightsaber_color_4 be q_4 and so on.\n11. The number of incoming with lightsaber_color_1 +... + lightsaber_color_m is k_1 +... + k_m\n12. The number of outgoing with lightsaber_color_1 +... + lightsaber_color_m is q_1 +... + q_m\n13. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n14. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n15. Otherwise, compute k_1 = (n - q_1) / p_1 and so on.\n16. The number of incoming is equal to k_1 +... + k_m\n17. The number of outgoing is equal to (n - k_1) / (m - q_1) and so on.\n18. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n19. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n20. Otherwise, compute q_1 = (n - k_1) / (m - p_1) and so on.\n21. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n22. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n23. Otherwise, compute p_1 = (n - q_1) / k_1 and so on.\n24. The number of incoming is equal to p_1 +... + p_m\n25. The number of outgoing is equal to (n - p_1) / (m - q_1) and so on.\n26. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n27. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n28. Otherwise, compute q_1 = (n - p_1) / k_1 and so on.\n29. The number of incoming is equal to q_1 +... + q_m\n30. The number of outgoing is equal to (n - q_1) / (m - p_1) and so on.\n31. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n32. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n33. Otherwise, compute p_1 = (n - q_1) / k_1 and so on.\n34. The number of incoming is equal to p_1 +... + p_m\n35. The number of outgoing is equal to (n - p_1) / (m - q_1) and so on.\n36. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n37. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n38. Otherwise, compute q_1 = (n - p_1) / k_1 and so on.\n39. The number of incoming is equal to q_1 +... + q_m\n40. The number of outgoing is equal to (n - q_1) / (m - p_1) and so on.\n41. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n42. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n43. Otherwise, compute p_1 = (n - q_1) / k_1 and so on.\n44. The number of incoming is equal to p_1 +... + p_m\n45. The number of outgoing is equal to (n - p_1) / (m - q_1) and so on.\n46. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n47. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n48. Otherwise, compute q_1 = (n - p_1) / k_1 and so on.\n49. The number of incoming is equal to q_1 +... + q_m\n50. The number of outgoing is equal to (n - q_1) / (m - p_1) and so on.\n51. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n52. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n53. Otherwise, compute p_1 = (n - q_1) / k_1 and so on.\n54. The number of incoming is equal to p_1 +... + p_m\n55. The number of outgoing is equal to (n - p_1) / (m - q_1) and so on.\n56. If the incoming is equal to the outgoing, then there is no need to remove the lightsaber.\n57. If the incoming is greater than the outgoing, then there is no way to select the interval, so output -1.\n58. Otherwise, compute q_1 = (n - p_1) / k_1 and so on.\n59. The number of incoming is equal to q_1 +... + q_m\n60. The number of outgoing is equal to (n - q_1) / (m - p_1) and so on.\n61. If the incoming is"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 1\n\n\n-----"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 2 3 2 4 3 5 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 3\n3 1 2\n1 1 3''') == '2'\nassert solution('''3 3\n3 1 2\n1 1 3''') == '-1'\nassert solution('''1 1\n1 1 1''') == '0'\nassert solution('''8 2\n4 4 2 3 3 3 1\n3 3 1 1''') == '2'\nassert solution('''7 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1\\n0') == 'NO'\nassert solution('0\\n0') == 'NO'\nassert solution('0\\n1') == 'NO'\nassert solution('0\\n2') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('116401024\\n97 1024\\n') == 'YES\\n11640\\n1024'\nassert solution('284254589153928171911281811000\\n1009 1000\\n') == 'YES\\n2842545891539\\n28171911281811000'\nassert solution('120\\n12 1\\n') == 'NO'\nassert solution('284254589153928171911281811000\\n1009 1000\\n') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"116401024\") == \"YES\"\nassert solution(\"284254589153928171911281811000\") == \"YES\"\nassert solution(\"120\") == \"NO\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''116401024''') == 'YES'\nassert solution('''284254589153928171911281811000''') == 'YES'\nassert solution('''120''') == 'NO'\nassert solution('''0''') == 'NO'\nassert solution('''1''') == 'NO'\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"116401024\") == \"YES\\n11640\\n1024\"\nassert solution(\"284254589153928171911281811000\") == \"YES\\n2842545891539\\n28171911281811000\"\nassert solution(\"120\") == \"NO\"\nassert solution(\"12 1\") == \"NO\"\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"116401024\") == \"YES\\n11640\\n1024\"\nassert solution(\n\"284254589153928171911281811000\") == \"YES\\n2842545891539\\n28171911281811000\"\nassert solution(\n\"120\") == \"NO\"\nassert solution(\n\"12 1\") == \"NO\"\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n116401024\n97 1024\n\"\"\") == \"\"\"\nYES\n11640\n1024\n\"\"\"\nassert solution(\n\"\"\"\n284254589153928171911281811000\n1009 1000\n\"\"\") == \"\"\"\nYES\n2842545891539\n28171911281811000\n\"\"\"\nassert solution(\n\"\"\"\n120\n12 1\n\"\"\") == \"\"\"\nNO\n\"\"\"\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('116401024\\n97 1024') == 'YES\\n11640\\n1024'\nassert solution('284254589153928171911281811000\\n1009 1000') == 'YES\\n2842545891539\\n28171911281811000'\nassert solution('120\\n12 1') == 'NO'\nassert solution('12\\n1') == 'NO'\nassert solution('12\\n12 1') == 'NO'\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 7\") == \"0\"\nassert solution(\"13 10\") == \"1\"\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 7\") == \"0\"\nassert solution(\"13 10\") == \"1\"\n\n'''\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == 0\nassert solution(\"3 7\") == 0\nassert solution(\"13 10\") == 1\nassert solution(\"3 3\") == 0\nassert solution(\"13 10\") == 1\n\"\"\"\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '0'\nassert solution('13 10') == '1'\nassert solution('13 17') == '2'\nassert solution('13 10 30') == '2'\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '0'\nassert solution('13 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\na, b = [int(x) for x in stdin.strip().split(' ')]"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1, 1) == 0\nassert solution(3, 7) == 0\nassert solution(13, 10) == 1\n\n\"\"\"\n\n\"\"\"\n-----Medium -----\nC++\n-----\n1.15\n\"\"\""
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1 1\n'''\n) == '0'\n\nassert solution(\n'''\n3 7\n'''\n) == '1'\n\nassert solution(\n'''\n13 10\n'''\n) == '1'"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == 0\nassert solution('3 7') == 0\nassert solution('13 10') == 1"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '0'\nassert solution('13 10') == '1'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 1\nassert solution('5') == 2\nassert solution('2479248237429474815659443533409015615571013696165342939227839374379823981328347') == 2\n\n'''\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 1\nassert solution('5') == 2\nassert solution('7') == 3\nassert solution('11') == 5\nassert solution('13') == 7\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == 1\nassert solution('5') == 2\nassert solution('10001') == 0\nassert solution('123456789') == 2\nassert solution('9999999999') == 4\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('2') == '1'\nassert solution('8') == '2'\nassert solution('10') == '3'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\n\n\n\"\"\""
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == '1'\nassert solution(5) == '2'\nassert solution(7) == '3'\nassert solution(2) == '1'\nassert solution(5) == '2'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('7') == '3'\nassert solution('13') == '2'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('15') == '6'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 1\nassert solution('5') == 2\nassert solution('99') == 1\nassert solution('1000') == 2\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2000 2000') == '674532367'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"2 2\") == \"5\"\nassert solution(\"2000 2000\") == \"674532367\"\n\n\n\"\"\"\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2 2') == '5'\nassert solution('2000 2000') == '674532367'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 2''') == '0'\nassert solution('''2 0''') == '2'\nassert solution('''2 2''') == '5'\nassert solution('''2000 2000''') == '674532367'\nassert solution('''2 0''') == '2'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2 2') == '5'\nassert solution('2000 2000') == '674532367'\nassert solution('20000 20000') == '726851113'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 2\\n') == '0'\nassert solution('2 0\\n') == '2'\nassert solution('2 2\\n') == '5'\nassert solution('2000 2000\\n') == '674532367'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2 2') == '5'\nassert solution('2000 2000') == '674532367'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2000 2000') == '674532367'\nassert solution('2000 1') == '2'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2000 2000') == '674532367'"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 5\n\"\"\"\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 1\n2 2''') == '0 0'\nassert solution(\n'''9 3\n1 2 3\n2 8\n1 4 5''') == '2 3'\nassert solution(\n'''10 0''') == '5 9'\nprint(solution(input()))\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '0 0'\nassert solution('1 2 3') == '0 0'\nassert solution('2 1') == '0 0'\nassert solution('2 8') == '2 3'\nassert solution('1 4 5') == '2 3'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\") == \"0 0\"\nassert solution(\"2\\n0\") == \"2 3\"\nassert solution(\"2\\n1\") == \"0 1\"\nassert solution(\"2\\n2\") == \"1 1\"\nassert solution(\"2\\n1 2\") == \"1 1\"\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 3\"\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '0 0'\nassert solution('2 2') == '0 0'\nassert solution('2 3') == '0 0'\nassert solution('2 4') == '1 2'\nassert solution('2 5') == '1 2'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n2 1\n2 2''') == '0 0'\nassert solution('''9 3\n1 2 3\n2 8\n1 4 5''') == '2 3'\nassert solution('''10 0\n''') == '5 9'\nassert solution('''2 1\n2 2''') == '0 0'\nassert solution('''6 1\n3 4 5\n1 3 4\n3 2\n2 1''') == '1 2'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 1') == '0 0'\nassert solution('2 1\\n2 2') == '0 0'\nassert solution('1 2\\n1 4\\n1 5\\n2 8') == '2 3'\nassert solution('2 3\\n2 2') == '0 0'\nassert solution('1 2\\n1 4\\n1 5\\n2 8\\n2 6') == '5 9'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 3\\n2 8\\n1 4 5\") == \"0 0\"\nassert solution(\"10 0\\n\") == \"5 9\"\nassert solution(\"9 3\\n1 2 3\\n2 8\\n1 4 5\") == \"2 3\"\nassert solution(\"0 0\") == \"0 0\"\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 0''') == '0 0'\nassert solution('''9 3''') == '2 3'\nassert solution('''10 0''') == '5 9'\nassert solution('''9 1''') == '2 3'\nassert solution('''9 0''') == '0 0'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9 2\n2 1\n2 2\n''') == '0 0'\nassert solution('''10 0\n''') == '5 9'\nassert solution('''9 3\n1 2 3\n2 8\n1 4 5\n''') == '2 3'\nassert solution('''1 2 2\n1 2 2\n2 1 1\n''') == '0 0'\nassert solution('''1 2 2\n2 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 1 1\n1 1 1\n''') == '0 0'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 1 10''') == '-1'\nassert solution('''10 6 40''') == '2 8 14 20 26'\nassert solution('''8 4 1000''') == '64 128 256 384 512 640 784 816'"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 1 10') == '2 8 14 20 26'\nassert solution('10 6 40') == '2 8 14 20 26'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 1 10''') == '-1'\nassert solution('''10 6 40''') == '2 8 14 20 26'\nassert solution('''25 25 100''') == '2 8 10 14 25 26 36 48 56 66 72 82 84 96 100'"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 1 10\\n') == '2 8 14 20 26'\n\nassert solution('10 6 40\\n') == '2 8 14 20 26'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 1 10') == '-1'\nassert solution('10 6 40') == '2 8 14 20 26'\n\"\"\""
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 1 10''') == '-1'\nassert solution('''10 6 40''') == '2 8 14 20 26'\nassert solution('''1 3 5''') == '-1'\nassert solution('''1 3 5''') == '-1'\nassert solution('''1 3 5''') == '-1'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 1 10') == '-1'\nassert solution('10 6 40') == '2 8 14 20 26'\nassert solution('10 5 10') == '2'\nassert solution('10 5 50') == '2'\nassert solution('5 3 10') == '1'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == '2 8 14 20 26'\n\"\"\"\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 1 10\\n') == '2 8 14 20 26'\nassert solution('10 6 40\\n') == '2 8 14 20 26'\nassert solution('10 1 10\\n') == '2 8 14 20 26'\nassert solution('10 10 10\\n') == '1 9'\nassert solution('10 100 100\\n') == '1 9'\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\nXOOO\nXXOO\nOOOO\nXXXX\nXOOO\nXOOO\nXOXO\nXOXX\n''') == 'Yes'\n\nassert solution('''\n2\nXX\nOO\nXO\nOX\n''') == 'No'\n'''\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n4\nXOOO\nXXOO\nOOOO\nXXXX\nXOOO\nXOOO\nXOXO\nXOXX\n''') == 'Yes'\nassert solution('''\n2\nXX\nOO\nXO\nOX\n\n''') == 'No'\n\n'''\n\n'''"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"X\") == \"No\"\nassert solution(\"X\\nO\") == \"No\"\nassert solution(\"X\\nO\\nO\\nX\") == \"Yes\"\nassert solution(\"X\\nO\\nO\\nX\\nO\") == \"No\"\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\n'''\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('test') == 'Yes'\nassert solution('test') == 'No'\nassert solution('x' * 10) == 'Yes'\nassert solution('x' * 10) == 'No'\nassert solution('x' * 11) == 'No'\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"XOOO\\nXXOO\\nOOOO\\nXXXX\\nXOOO\\nXOOO\\nXOXO\\nXOXX\") == \"Yes\"\nassert solution(\"XX\\nOO\\nXO\\nXO\\n\") == \"No\"\nassert solution(\"\\n\\n\") == \"No\"\nassert solution(\"XOXO\\nXOXX\\nXOXX\\nXOXX\\nXOXX\\nXOXX\\nXOXX\\nXOXX\") == \"Yes\"\n\n\n'''\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\n\nTestcases\n\nInput\na\na\n\nOutput\nautomaton\n\nInput\nab\nab\n\nOutput\narray\n\nInput\nb\nb\n\nOutput\narray\n\nInput\nc\nc\n\nOutput\nboth\n\nInput\nc\ncc\n\nOutput\nboth\n\nInput\ncba\nccb\n\nOutput\nboth\n\nInput\nafacd\nafacd\n\nOutput\nneed tree\n\nInput\ntata\natata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nautomaton\n\nInput\na\na\n\nOutput\narray\n\nInput\nautomaton\nautomaton\n\nOutput\narray\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\nb\nb\n\nOutput\nboth\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\nc\nc\n\nOutput\nneed tree\n\nInput\ncba\nccb\n\nOutput\nneed tree\n\nInput\nab\nba\n\nOutput\nboth\n\nInput\nautomaton\nautomaton\n\nOutput\narray\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\nc\ncc\n\nOutput\nboth\n\nInput\ncba\nccb\n\nOutput\nboth\n\nInput\ncba\nccb\n\nOutput\nboth\n\nInput\nab\nba\n\nOutput\nboth\n\nInput\nautomaton\nautomaton\n\nOutput\narray\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\nc\ncc\n\nOutput\nboth\n\nInput\ncba\nccb\n\nOutput\nboth\n\nInput\ncba\nccb\n\nOutput\nboth\n\nInput\nab\nba\n\nOutput\nboth\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\ntata\natata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nautomaton\n\nInput\nab\nba\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nboth\n\nInput\nb\nb\n\nOutput\nboth\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\nc\ncc\n\nOutput\nneed tree\n\nInput\ncba\nccb\n\nOutput\nneed tree\n\nInput\nab\nba\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\ntata\natata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nautomaton\n\nInput\nab\nba\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\ntata\natata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nautomaton\n\nInput\nab\nba\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\ntata\natata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nneed tree\n\nInput\ntat\nata\n\nOutput\nautomaton\n\nInput\nab\nba\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\nautomaton\nautomaton\n\nOutput\nneed tree\n\nInput\naut"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"both\") == \"both\"\nassert solution(\"need\") == \"need tree\"\nassert solution(\"needtree\") == \"needtree\"\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('automaton') == 'automaton'\nassert solution('array') == 'array'\nassert solution('both') == 'both'\nassert solution('need') == 'need tree'\nassert solution('hot') == 'hot'\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'both'\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"both\") == \"both\"\nassert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"need\") == \"need tree\"\nassert solution(\"hot\") == \"both\"\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"both\") == \"both\"\nassert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"need tree\") == \"need tree\""
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"both\") == \"both\"\nassert solution(\"automaton\") == \"automaton\"\nassert solution(\"array\") == \"array\"\nassert solution(\"need tree\") == \"need tree\"\nassert solution(\"need\") == \"need\"\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\n\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'NO'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''5''') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''5''') == 'YES'\n\n\n'''"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\n\"\"\"\n\n-----Solution-----\n\n## Implementation\n\n\"\"\"\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n''') == 'NO'\nassert solution('''\n3\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''5''') == 'YES'\nassert solution('''7''') == 'NO'\nassert solution('''10''') == 'YES'\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''5''') == 'YES'\nassert solution('''6''') == 'NO'\nassert solution('''7''') == 'NO'\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'\nassert solution('100 100 1 1000000000') == '1'\nassert solution('1000 1000 1000000000') == '1'\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\"\nassert solution(\"100 100 1 1100\") == \"2\"\nassert solution(\"1000 1000 1 10000\") == \"3\"\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 10 3 3') == '2'\nassert solution('3 10 1 3') == '3'\nassert solution('100 100 1 1000') == '1'\n\n\n\"\"\"\n\n\"\"\"\n\nhttps://www.hackerrank.com/challenges/divisible-sum-pairs/\n\nThe divisors of a positive integer n are all integers that divide n (excluding n). \nFor example, the divisors of 6 are 1, 2, 3 and 6. \nThe sum of the divisors is called the proper divisor sum.\n\nFor example, the proper divisor sums of 28, 29, 30, and 35 are 1 + 3 + 5 + 7 = 17, 1 + 3 + 9 = 19, 1 + 3 + 3 = 7, and 1 + 3 + 3 + 3 = 25. \n\nYour task is to find the minimum value of n for which the proper divisor sum will be equal to a given value, divisorSums. \n\nGiven that the value of n will always be a positive integer, and given that the value of divisorSums will always be an integer, what is the minimum possible value of n?\n\n\n-----Input-----\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N.\nThe second line contains a single integer D.\n\n\n-----Output-----\n\nFor each test case, output a single line containing one integer, the minimum possible value of n.\n\n\n-----Example-----\nInput\n1\n3\n2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first test case, there is a single box with three sections. The first box will have three nuts and the divisor sum will be 3. The second box will have two nuts. Since the divisor sum is 3, it is the only box that will fit all the nuts. \n\nIn the second test case, there is a single box with one section. The divisor sum is 2, but there is no box that can fit all the nuts. \n\nIn the third test case, there is a single box with three sections. The first box will have three nuts and the divisor sum will be 1. There is no box that can fit all the nuts. \n\n\"\"\"\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 10 3 3\") == \"2\"\nassert solution(\"3 10 1 3\") == \"3\"\nassert solution(\"100 100 1 1000\") == \"1\"\nassert solution(\"1000 10 100 9\") == \"1\"\nassert solution(\"3 10 4 3\") == \"4\"\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\"\"\"\nRoughly speaking:\n\nnumber of boxes = number of divisors - number of nuts\n\nDivisors are the maximum divisors\n\n\"\"\""
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 10 3 3''') == '2'\nassert solution('''3 10 1 3''') == '3'\nassert solution('''100 100 1 1000''') == '1'"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == 1\nassert solution('1\\n2\\n3') == 1\nassert solution('1\\n2\\n3\\n4') == 2\nassert solution('1\\n2\\n3\\n4\\n5') == 3\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 2\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 6 4') == '3'\nassert solution('3 4 4 2') == '3'\nassert solution('10 5 6 4') == '3'\nassert solution('1 11 4 2') == '3'\nassert solution('2') == '1'\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 6 4\\n3 4 4 2\\n') == '3'\nassert solution('4\\n10 1 10\\n1 10 1 1\\n') == '6'\nassert solution('4\\n10 5 6 4\\n1 11 4 2\\n') == '3'\nassert solution('4\\n10 1 10\\n1 10 1 1\\n') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Left\"\n\n\"\"\"\n\nimport sys\nfrom bisect import bisect"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 4 2\\n1 11 4 2\\n') == '3'\nassert solution('4\\n2 1 6 4\\n3 4 4 2\\n') == '3'\nassert solution('1\\n10 1 10 1\\n') == '3'\nassert solution('4\\n10 1 10 1\\n') == '3'\nassert solution('10\\n10 1 10 1\\n') == '3'\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 1 6 4\n3 4 4 2\n''') == \"3\"\nassert solution('''4\n10 5 6 4\n1 11 4 2\n''') == \"6\"\nassert solution('''3\n10 1 10\n1 10 1 1\n''') == \"3\"\nassert solution('''4\n2\n3\n2\n1\n''') == \"1\"\nassert solution('''3\n10 1 10\n1 10 1 1\n''') == \"3\"\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '4',\n    '2 1 6 4',\n    '3 4 4 2',\n])) == '3'\nassert solution('\\n'.join([\n    '10',\n    '1 11 4 2',\n])) == '6'\nassert solution('\\n'.join([\n    '4',\n    '10 1 10',\n    '1 10 1 1',\n])) == '3'\nassert solution('\\n'.join([\n    '3',\n    '10 1 10',\n    '1 10 1 1',\n])) == '6'\nassert solution('\\n'.join([\n    '2',\n    '2 3 1',\n])) == '2'\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n4 5 6\\n\") == \"Karen\"\nassert solution(\"5\\n2 4 6 8 10\\n9 7 5 3 1\\n\") == \"Karen\"\nassert solution(\"7\\n5 3 1 2 4 6 8\\n4 6 8 2 1 5 3\\n\") == \"Karen\"\nassert solution(\"6\\n9 7 5 3 1\\n4 6 8 2 1 5 3\\n\") == \"Karen\"\nassert solution(\"8\\n4 6 8 2 1 5 3\\n7 7 7 7 7 7 7\\n\") == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n1 2 3\n4 5 6\n''') == 'Karen'\n\nassert solution(\n'''\n5\n2 4 6 8 10\n9 7 5 3 1\n''') == 'Karen'"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Karen\"\n\nassert solution(stdin) == \"Karen\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Karen\"\nassert solution(\"5\") == \"Karen\"\nassert solution(\"1 2 3\") == \"Karen\"\nassert solution(\"4 5 6\") == \"Karen\"\nassert solution(\"2 4 6 8 10\") == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Karen'\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Karen\"\n\nassert solution(\"1 2 3 4 5\") == \"Karen\"\nassert solution(\"2 4 6 8 10\") == \"Karen\"\nassert solution(\"9 7 5 3 1\") == \"Karen\"\n\n\nassert solution(\"1 2 3 4 5\") == \"Koyomi\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n1 2 3\n4 5 6\n\"\"\") == \"Karen\"\nassert solution(\"\"\"5\n2 4 6 8 10\n9 7 5 3 1\n\"\"\") == \"Karen\"\nassert solution(\"\"\"2\n1 2\n2 1\n\"\"\") == \"Karen\"\nassert solution(\"\"\"2\n2 1\n1 2\n\"\"\") == \"Karen\"\nassert solution(\"\"\"3\n1 2 3\n2 3 3\n\"\"\") == \"Karen\"\n"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Karen\"\n\"\"\"\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"79\"\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 1 1''') == '7'\nassert solution('''3 4 2 1''') == '25'\nassert solution('''3 4 3 1''') == '79'\nassert solution('''3 4 3 2 1''') == '967'\n'''\n\nfrom sys import stdin\n\nA, B, n, x = map(int, stdin.readline().split())"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 1 1') == '7'\nassert solution('3 4 2 1') == '25'\nassert solution('3 4 3 1') == '79'\nassert solution('3 4 0 1') == '0'\nassert solution('3 4 1 0') == '0'\n"
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n3 12 18\\n2 6 5 3 3\\n\") == 'YES\\n3 4\\n'\nassert solution(\"3 10\\n1 5 17 19\\n4 5\\n\") == 'NO\\n'\nassert solution(\"3 5\\n3 1\\n1 1\\n\") == 'YES\\n1 1\\n'\nassert solution(\"5 3\\n1 5 17 19\\n2 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4 1\\n4"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES\\n3 4\\n'\n\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'NO\\n'\n\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'YES\\n1 1\\n'\n\nassert solution('''6 4\n1 5 17 19\n2 2\n''') == 'YES\\n3 4\\n'\n\nassert solution('''6 4\n1 5 17 19\n2 2\n''') == 'NO\\n'"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES\\n3 4\\n'\n\nassert solution('''4 2\n1 5 17 19\n4 5\n''') == 'NO\\n'\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES\\n3 4\\n'\n\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'NO\\n'\n\nassert solution('''4 2\n1 5 17 19\n1 6\n''') == 'YES\\n1 1\\n'\n\nassert solution('''3 4\n1 5 17 19\n2 1\n''') == 'YES\\n1 1\\n'\n\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'YES\\n1 1\\n'"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES'\nassert solution('''4 2\n1 5 17 19\n4 5\n''') == 'NO'\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'YES'\nassert solution('''3 2\n1 5\n3 1\n''') == 'NO'\nassert solution('''2 3\n1 2\n3 1\n''') == 'NO'\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 5 17 19\\n2 1\\n\") == \"YES\\n1 1\"\nassert solution(\"2 5\\n1 5 17 19\\n2 1\\n\") == \"NO\"\nassert solution(\"3 5\\n1 5 17 19\\n2 1\\n\") == \"NO\"\nassert solution(\"4 2\\n1 5 17 19\\n2 1\\n\") == \"YES\\n1 1\"\nassert solution(\"4 2\\n1 5 17 19\\n2 1\\n\") == \"YES\\n1 1\"\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == 'YES\\n1 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n1 2') == 'NO\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n2 1') == 'YES\\n1 1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n4 1') == 'NO\\n'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n1 2') == 'YES\\n1 1'\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == str(solution('''3 5\n3 12 18\n2 6 5 3 3\n'''))\n\nassert solution(input) == 'YES'\nassert solution(input) == 'NO'\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES'\nassert solution('''4 2\n1 5 17 19\n4 5\n''') == 'NO'\nassert solution('''3 4\n1 5 17 19\n2 1\n''') == 'NO'\nassert solution('''3 3\n1 6 9\n2 5\n''') == 'YES'\nassert solution('''4 6\n1 6 9 17 19\n2 6\n''') == 'NO'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"1 3 2\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"1 2 3 4 5\") == \"-1\"\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 11\n2 4 7 3''') == '2 7 1 3 6 5 4'\nassert solution('''1000 999\n10 20 30 40''') == '-1'\n\n\n'''\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2\\n1 3\\n2 3') == '2 3\\n1 2\\n1 3\\n'\nassert solution('1 4\\n1 3\\n3 4') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2 4 7 3\\n') == '2 7 1 3 6 5 4\\n7 1 5 4 6 2 3\\n'\n\n'''\n\nfrom typing import Dict, List"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n4\\n5\\n6\\n7') == '5\\n6\\n7\\n4\\n3'\nassert solution('1\\n2\\n3\\n4') == '-1'\nassert solution('4\\n4\\n4\\n4') == '-1'\nassert solution('5\\n5\\n5\\n5') == '-1'\nassert solution('1\\n1\\n1\\n1') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 11\\n2 4 7 3\\n') == '2 7 1 3 6 5 4\\n7 1 5 4 6 2 3\\n'\n\nassert solution('1000 999\\n10 20 30 40\\n') == '-1'\n\nassert solution('1000 1000\\n1 1 1 1 1\\n') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 11\\n2 4 7 3') == '2 7 1 3 6 5 4\\n7 1 5 4 6 2 3'\nassert solution('1000 999\\n10 20 30 40') == '-1'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 11\n2 4 7 3''') == '2 7 1 3 6 5 4'\nassert solution('''1000 999\n10 20 30 40''') == '-1'\nassert solution('''15 16 19 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15''') == '1 2 7 3 9 11 10 8 6 5 4 12 14 13 15'\nassert solution('''5 7\n1 2 3 4 5''') == '-1'\nassert solution('''7 7\n1 2 3 4 5 6 7''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 11\n2 4 7 3\n''') == '''2 7 1 3 6 5 4\n7 1 5 4 6 2 3'''\n\nassert solution('''1000 999\n10 20 30 40\n''') == '-1'\n\nassert solution('''1000 999\n10 2 1 1\n''') == '-1'\n\nassert solution('''1000 999\n1000 999\n10 20 30 40\n''') == '-1'\n\nassert solution('''1000 999\n1000 1000\n10 20 30 40\n''') == '-1'"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 11\\n2 4 7 3') == '2 7 1 3 6 5 4'\nassert solution('1000 999\\n10 20 30 40\\n') == '-1'\nassert solution('1 1\\n1 1\\n') == '-1'\nassert solution('1 1\\n1 1\\n') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('8') == '1'\n\n\"\"\""
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n') == '2'\nassert solution('10\\n') == '1'\nassert solution('1\\n') == '0'\nassert solution('10\\n') == '1'\nassert solution('2\\n') == '0'\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''8''') == '1'\nassert solution('''5''') == '2'\nassert solution('''8''') == '1'\nassert solution('''8''') == '1'\nassert solution('''8''') == '1'\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8''') == '1'\nassert solution('''5''') == '2'\nassert solution('''8''') == '1'\nassert solution('''8''') == '1'\nassert solution('''8''') == '1'\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"1\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '1'\nassert solution('10') == '1'\nassert solution('2') == '0'\nassert solution('6') == '1'\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '''2'''\nassert solution('''8''') == '''1'''\nassert solution('''9''') == '''0'''\nassert solution('''10''') == '''0'''\nassert solution('''929''') == '''89'''\n"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('5') == 2\nassert solution('8') == 1\nassert solution('100') == 0\n'''"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ZCTH\") == \"ACTG\"\nassert solution(\"AFBAKC\") == \"ZACTG\"\nassert solution(\"ZDATG\") == \"ZACTG\"\nassert solution(\"DHFKJ\") == \"ZACTG\"\nassert solution(\"A\") == \"ZACTG\"\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABCD') == '2'\nassert solution('ABCDE') == '5'\nassert solution('ZCTH') == '2'\nassert solution('ZDATG') == '5'\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ZCTH') == 'ACTG'\nassert solution('AFBAKC') == 'ZACTG'\nassert solution('ZDATG') == 'ZACTG'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"ZCTH\") == 2\nassert solution(\"AFBAKC\") == 16\nassert solution(\"AFBACG\") == 16\nassert solution(\"ZDATG\") == 5\nassert solution(\"ZATGZD\") == 10\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"ZCTH\") == \"ACTG\"\nassert solution(\"AFBAKC\") == \"ZATG\"\nassert solution(\"ZDATG\") == \"ZACTG\"\nassert solution(\"A\") == \"A\"\nassert solution(\"Z\") == \"Z\"\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ZCTH') == '2'\nassert solution('ZDATG') == '5'\nassert solution('AFBAKC') == '16'\nassert solution('ABCDEF') == '-1'\nassert solution('TIBEJMCSA') == '15'\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\nZCTH''') == '2'\nassert solution('''5\nZDATG''') == '5'\nassert solution('''6\nAFBAKC''') == '16'\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6') == '4'\nassert solution('3 7') == '8'\nassert solution('5 7') == '9'\nassert solution('5 15') == '10'\nassert solution('10 15') == '11'\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 6\n''') == '4'\nassert solution('''3 6\n''') == '4'\nassert solution('''5 2\n''') == '2'\nassert solution('''8 3\n''') == '0'\nassert solution('''6 1\n''') == '0'\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == str(solution(input()))\nassert solution(input()) == str(solution(input()))\n\"\"\"\n\nimport sys"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m = map(int, stdin.split())\n\ncnt = 0\nfor a in range(1, n + 1):\n    for b in range(1, a):\n        c = a * b\n        if c == m:\n            cnt += 1\nprint(cnt)\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 6') == '4'\nassert solution('3 1') == '1'\nassert solution('4 9') == '4'\nassert solution('3 1') == '1'\nassert solution('7 1') == '0'\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 6') == '4'\nassert solution('2 7') == '0'\nassert solution('2 7') == '0'\nassert solution('2 7') == '0'\nassert solution('1000000000 1000000000') == '0'\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"2 6\") == 4\nassert solution(\"3 5\") == 0\nassert solution(\"10 5\") == 0\nassert solution(\"1000000000 11\") == 1\nprint(solution(stdin))"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 6\") == \"4\""
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 6') == '4'\nassert solution('1 3') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '2'\nassert solution('1 9') == '0'\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0.50 1\\n') == '0.5'\nassert solution('1 0.50 4\\n') == '0.9375'\nassert solution('4 0.20 2\\n') == '0.4'\n\n\"\"\""
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 0.50 1''') == '0.5'\nassert solution('''1 0.50 4''') == '0.9375'\nassert solution('''4 0.20 2''') == '0.4'\nassert solution('''4 0.20 6''') == '0.465'\nassert solution('''5 0.10 10''') == '0.095'\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.4\"\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\nassert solution('1 0.20 1') == '0.2'\nassert solution('1 0.20 4') == '0.24'\n\n\n\"\"\""
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 0.5 1') == '0.5'\nassert solution('1 0.5 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n\nassert solution('1 0.2 1') == '0.5'\nassert solution('1 0.2 4') == '0.73125'\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"1 0.50 1\") == \"0.5\"\nassert solution(\"1 0.50 4\") == \"0.9375\"\nassert solution(\"4 0.20 2\") == \"0.4\"\nassert solution(\"1 0.50 3\") == \"0.750\"\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '4'\nassert solution('1 100') == '0 1'\nassert solution('101 0') == '0 1'\nassert solution('101 0') == '0 1'\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1 1') == '2'\nassert solution('1 2') == '0 1'\nassert solution('2 1') == '0 1'\nassert solution('2 2') == '0 2'\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1 2'\nassert solution('0 1') == '0 1'\nassert solution('2 0') == '2 0'\nassert solution('1 1') == '0 1'\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n0 1\\n1 2\\n2 0\\n\"\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '3\\n0 1\\n1 2\\n2 0'\nassert solution('4 3') == '4\\n0 3\\n2 1\\n3 0'\nassert solution('5 5') == '5'\n\n\"\"\"\n\nn, m = [int(x) for x in stdin.split(' ')]\nprint(len([x for x in range(n + m) if x > 0 and (x - 1) % n == 0 and (x - 1) // n == 0]))\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 2') == ''\nassert solution('2 1') == ''\nassert solution('2 2') == ''\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '3\\n0 1\\n1 2\\n2 0'\nassert solution('4 3') == '4\\n0 3\\n2 1\\n3 0'\n\n\n-----\n\nTo save space, please do not copy the code. Instead, you need to paste the code into the box.\n\"\"\"\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 2\n''') == '3'\n\nassert solution(\n'''\n4 3\n''') == '4'\n\nassert solution(\n'''\n2 2\n''') == '3'\n\nassert solution(\n'''\n4 3\n''') == '4'\n\n\n-----"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '4'"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"3\\n0 1\\n1 2\\n2 0\"\nassert solution(\"4 3\") == \"4\\n0 3\\n2 1\\n3 0\\n4 2\"\nassert solution(\"5 5\") == \"5\\n0 4\\n1 3\\n2 2\\n3 1\\n4 0\"\nassert solution(\"6 5\") == \"5\\n0 5\\n1 4\\n2 3\\n3 2\\n4 1\"\nassert solution(\"7 5\") == \"5\\n0 5\\n1 4\\n2 3\\n3 2\\n4 1\\n5 0\"\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input('')) == output(input(''))\n'''\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n1 5 7 4 4 3') == '1 3'\nassert solution('4\\n10 10 10 10') == '1 2'\n\n\n\"\"\"\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6\n1 5 7 4 4 3''') == '1 3'\nassert solution('''4\n10 10 10 10''') == '1 2'\n'''\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 7 4 4 3') == '1 3'\nassert solution('10 10 10 10') == '1 2'\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 7 4 4 3') == '1 3'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 5 7 4 4 3\") == \"1 3\"\nassert solution(\"10 10 10 10\") == \"1 2\"\nassert solution(\"11 11 11 11\") == \"2 4\"\nassert solution(\"50 50 50 50\") == \"1 2\"\nassert solution(\"51 51 51 51\") == \"2 4\"\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 5 7 4 4 3''') == '1 3'\nassert solution('''4\n10 10 10 10''') == '1 2'\nassert solution('''10\n
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n2') == '2'\nassert solution('1\\n1\\n2\\n3') == '3'\nassert solution('2\\n1\\n3') == '1 2'\nassert solution('2\\n1\\n3\\n4') == '3 4'\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 7 4 4 3\\n\") == \"1 3\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"1 2\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"3 4\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1 3\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"1 2\"\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6\n1 5 7 4 4 3''') == '1 3'\nassert solution('''4\n10 10 10 10''') == '1 2'\nassert solution('''9\n1 3 7 5 6 9 1 9''') == '1 2 3'\nassert solution('''9\n1 3 7 5 6 9 1 9''') == '1 3'\nassert solution('''10\n1 3 7 5 6 9 1 9''') == '1 3'\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A.VFleaKing_is_the_author_of_this_problem') == 'D'\nassert solution('B.Picks_is_the_author_of_this_problem') == 'B'\nassert solution('C.Picking_is_the_author_of_this_problem') == 'B'\nassert solution('D.Ftiasch_is_cute') == 'B'\nassert solution('A.ab') == 'C'\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"B\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\n\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('A.VFleaKing_is_the_author_of_this_problem') == 'D'\nassert solution('B.Picks_is_the_author_of_this_problem') == 'C'\nassert solution('C.Picking_is_the_author_of_this_problem') == 'B'\nassert solution('D.Ftiasch_is_cute') == 'B'\n\n\n\"\"\""
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'A'\nassert solution('A.ab') == 'C'\nassert solution('A.c') == 'B'\nassert solution('A.cc') == 'B'\nassert solution('A.cd') == 'C'\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\\nB.Picks_is_the_author_of_this_problem\\nC.Picking_is_the_author_of_this_problem\\nD.Ftiasch_is_cute\") == \"D\"\nassert solution(\"A.ab\\nB.abcde\\nC.ab\\nD.abc\\n\") == \"C\"\nassert solution(\"A.c\\nB.cc\\nC.c\\nD.c\\n\") == \"B\"\nassert solution(\"A.c\\nB.cc\\nC.c\\nD.c\\n\") == \"B\"\nassert solution(\"A.c\\nB.cc\\nC.c\\nD.c\\n\") == \"B\"\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 4\n1010''') == '1'\nassert solution('''5 5 2\n10110''') == '0'\nassert solution('''5 5 2\n10110''') == '0'\nassert solution('''5 5 2\n01010''') == '0'\nassert solution('''5 5 2\n01010''') == '0'\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 1 4\\n1010') == '1'\nassert solution('5 5 2\\n10110') == '0'\nassert solution('5 5 2\\n01010') == '10'\n\n\n-----\n\nAfter some hours of coding, you decided to see how many possible routes Vladik could take to reach his olympiad. In the beginning you have a aircraft that takes exactly 10 km per hour and can fly at the same rate, but during the first few hours you need to fly at a slower rate. In every hour you need to take a step of 10 km. So you will have a total of time = 10 * 10 * 10 = 100000.\n\nYour task is to compute how many different routes Vladik can take.\n\nInput / Constraints\n\nThe first line contains a single integer T, the number of test cases. The description of T test cases follows.\n\nThe first line of each test case contains a single integer N, the number of airports.\n\nThe second line contains a string, which consists of N characters 0 or 1. If the i-th character is 0, then the i-th airport belongs to the first company, otherwise it belongs to the second.\n\nOutput\n\nFor each test case print a single integer \u2014 the number of different routes Vladik can take.\n\nConstraints\n\n1 \u2264 T \u2264 100\n1 \u2264 N \u2264 10^5\n\nSubtasks\n\nSubtask #1 (30 points): N = 2\nSubtask #2 (70 points): N = 10\n\nExample\n\nInput:\n2\n5\n00111\n5\n10110\n\nOutput:\n5\n0\n\n\n------\n\nNext video\n\n\n\n-------\n\nhttp://www.codewars.com/kata/5a10e0f2cd9077f17d8fce5\n\n\n-----\n\nVladik needs to make his flight with one aircraft, he doesn't need to use any other aircraft. Vladik can take only one flight in one hour. Now he has the following two options to choose from:\n\nFly to the airport with the same id as Vladik's home.\nFly to the airport with the id that is exactly one more than Vladik's home.\nWhich of these two flights does Vladik choose?\n\nEach option costs exactly one hour.\nYou can choose to fly with the first option if it takes the least amount of hours to get to the olympiad, or you can choose to fly with the second option if it takes the least amount of hours.\n\nThe flight with the id that is exactly one more than Vladik's home costs twice the cost of flying with the same id. You don't pay any extra money for flying with the id that is exactly one more than Vladik's home.\n\nGiven the airport ids, print the minimum cost Vladik has to pay to fly the flight with the id that is exactly one more than Vladik's home.\n\nInput\n\nThe first line contains a single integer T, the number of test cases.\n\nThe description of T test cases follows.\n\nThe first line of each test case contains two space-separated integers N, the number of airports, and K, the id of the airport with id N that Vladik needs to choose from.\n\nThe second line contains a string consisting of N characters 0 or 1. Each character is either 0 or 1. If the i-th character is 0, then the i-th airport belongs to the first company, otherwise it belongs to the second.\n\nOutput\n\nFor each test case, print a single integer \u2014 the cost Vladik has to pay to fly the flight with the id that is exactly one more than Vladik's home.\n\nConstraints\n\n1 \u2264 T \u2264 100\n1 \u2264 K \u2264 10^5\n\n1 \u2264 N \u2264 10^5\n\nEach character is either 0 or 1.\n\n\n------\n\n-----\n\nNext video\n\n\n\n-------\n\nhttp://www.codewars.com/kata/55e5f8c1a8a5a0d4e3023f1\n\n\n-----\n\nWrite a function that returns a list of lists. Each sublist contains two integers. The first integer is the lower bound and the second integer is the upper bound.\n\nFor example, if you are given the list [1,2,4,8,16], your function should return the list [[1,2],[4,8],[16,32]]. \n\nYour function should sort the list in increasing order, and then return the list.\n\nYour function should not use sorting in your solution, as it would be very inefficient.\n\nFor example, it may be helpful to try the following code:\n\nfunc([1,2,4,8,16])"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 4\\n1010') == '1'\nassert solution('5 5 2\\n10110') == '0'\nassert solution('5 1 4\\n1010') == '1'\nassert solution('6 2 3\\n101010') == '3'\nassert solution('10 1 7\\n1010') == '0'\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0'\nassert stdin == \"5 5 2\\n10110\"\nassert solution(stdin) == '1'\nassert stdin == \"4 1 4\\n1010\"\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 1 4\\n1010\\n') == '1'\nassert solution('5 5 2\\n10110\\n') == '0'\nassert solution('2 1 4\\n0110\\n') == '1'\nassert solution('1 1 2\\n0010\\n') == '0'\nassert solution('5 4 2\\n10100\\n') == '0'\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\n\nfrom typing import Dict\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 1 4') == '1'\nassert solution('5 5 2') == '0'\nassert solution('1010') == '1'\nassert solution('10110') == '0'\nassert solution('10001') == '0'\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == '1'\nassert solution('5 5 2') == '0'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 2\\n1 2\\n2 2') == '4'\nassert solution('2\\n10 1\\n6 5') == '11'\nassert solution('3\\n3 4\\n1 1\\n2 2') == '1'\nassert solution('2\\n3 2\\n1 1') == '4'\nassert solution('10\\n9 4\\n8 3\\n7 2\\n6 1\\n4 2\\n2 1') == '9'\n\n\n\n\"\"\""
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n1 2\\n2 2\\n') == '4'\nassert solution('2\\n10 1\\n6 5\\n') == '11'\nassert solution('2\\n100 1\\n100 5\\n') == '105'\nassert solution('2\\n10 1\\n1 1\\n') == '10'\nassert solution('3\\n1 2 3\\n4 2 1\\n1 2 3\\n') == '7'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n2 2\\n1 2\\n2 2') == 4\nassert solution('2\\n10 1\\n6 5') == 11\nassert solution('2\\n10 1\\n6 5\\n1 1\\n2 1') == 11\nassert solution('2\\n10 1\\n6 5\\n1 1\\n2 1\\n1 1\\n2 1') == 11\nassert solution('2\\n10 1\\n6 5\\n1 1\\n2 1\\n1 1\\n2 1\\n1 1\\n2 1') == 11\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 2 2\") == \"4\"\nassert solution(\"3 2 2 3\") == \"4\"\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 2\\n1 2\\n2 2\\n') == '4'\nassert solution('2\\n10 1\\n6 5\\n') == '11'\nassert solution('4\\n1 1\\n1 1\\n1 1\\n') == '3'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '10'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('2 2') == '4'\nassert solution('1 2') == '2'\nassert solution('2 2') == '4'\nassert solution('1 2\\n1 3') == '3'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n2 2\n1 2\n2 2''') == '4'\nassert solution('''2\n10 1\n6 5''') == '11'\nassert solution('''3\n1 1\n2 2\n3 3''') == '4'\nassert solution('''3\n1 1\n2 3\n3 3''') == '4'\nassert solution('''1\n1 1\n2 1\n3 1''') == '3'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n2 2') == '4'\nassert solution('3\\n1 2\\n2 2\\n3 2') == '11'\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 1\\n2 1') == '4'\nassert solution('4\\n1 2\\n2 1\\n2 1\\n2 1') == '11'\nassert solution('2\\n10 1\\n6 5\\n5 5') == '11'\nassert solution('4\\n1 2\\n2 1\\n2 1\\n2 1') == '11'\nassert solution('1\\n1 1\\n1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\nassert solution('18.0') == '10'\nassert solution('18.9') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('42') == '42'\nassert solution('42\\n42') == '42'\nassert solution('2\\n2') == '2'\nassert solution('2\\n21') == '21'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\nassert solution('14') == '1'\nassert solution('101') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\nassert solution('42') == '-1'\nassert solution('-123') == '-123'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1') == '9'\nassert solution('179') == '1'\nassert solution('18') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(179) == 1\nassert solution(18) == 10\nassert solution(1) == 1\nassert solution(-1) == 9\nassert solution(179) == 1\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\nassert solution('0') == '0'\nassert solution('987654321') == '9'\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(179) == '1'\nassert solution(-1) == '9'\nassert solution(18) == '10'\nassert solution(42) == '8'\nassert solution(0) == '9'\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 19\nassert solution(2) == 28\nassert solution(1000000) == 1928745\n\"\"\"\nimport sys\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"28\"\nassert solution(input()) == \"19\"\nassert solution(input()) == \"12\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"19\"\nassert solution(stdin) == \"28\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == '19'\nassert solution('0') == '1'\nassert solution('1') == '2'\nassert solution('1234567890') == '987654321'\nassert solution('987654321') == '987654321'\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"19\"\nassert solution(\"2\") == \"28\"\n\n\"\"\""
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == '19'\nassert solution('2') == '28'\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '28'\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 0\\n3 1\\n3 4\\n') == '2'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '5'\nassert solution('2\\n0 0\\n0 0\\n') == '2'\nassert solution('2\\n0 0\\n1 1\\n') == '1'\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n0 0\\n0 0') == '1'\nassert solution('2 0\\n2 0\\n2 0') == '1'\nassert solution('3 0\\n3 1\\n3 4') == '2'\nassert solution('3 0\\n0 0\\n0 0') == '1'\nassert solution('2 0\\n2 0\\n2 0') == '1'\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2 0\n3 1\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n0 0\n0 0\n0 0\n\"\"\") == \"1\"\nassert solution(\"\"\"1\n5 4\n\"\"\") == \"5\"\nassert solution(\"\"\"1\n1 2\n1 3\n2 1\n\"\"\") == \"0\"\nassert solution(\"\"\"1\n0 0\n0 0\n0 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n3 1\\n3 4') == '2'\nassert solution('3\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('3\\n0 0\\n3 1\\n3 4') == '2'\nassert solution('3\\n0 0\\n3 1\\n3 4') == '2'\nassert solution('3\\n0 0\\n3 1\\n3 4') == '2'\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n2 0\n3 1\n3 4\n''') == '2'\nassert solution('''3\n0 0\n0 0\n0 0\n''') == '1'\nassert solution('''1\n5 4\n''') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n2 0\n3 1\n3 4\n''') == \"2\"\nassert solution('''3\n0 0\n0 0\n0 0\n''') == \"1\"\nassert solution('''1\n5 4\n''') == \"5\"\nassert solution('''2\n3 4\n2 0\n3 1\n3 4\n''') == \"3\"\nassert solution('''5\n3 4\n2 0\n3 1\n3 4\n''') == \"1\"\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 0\\n3 1\\n3 4\\n') == '2'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '5'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '5'\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n0\\n1\\n0\\n0\\n0') == '3'\nassert solution('2\\n0\\n0\\n0\\n0\\n0\\n0') == '1'\nassert solution('3\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('3\\n1\\n2\\n2\\n3\\n3\\n3') == '5'\nassert solution('3\\n1\\n3\\n3\\n3\\n4\\n4') == '3'\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 0\\n3 1\\n3 4\\n') == '2'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0\\n3 4\\n') == '5'\nassert solution('1\\n5 4\\n') == '5'\nassert solution('5\\n4 0\\n4 0\\n4 0\\n') == '1'\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n2 0\\n3 1\\n3 4') == '2'\nassert solution('3\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0') == '1'\nassert solution('3\\n0 0\\n0 0\\n0 0') == '1'\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, d = map(int, stdin.readline().split())\nw = [int(stdin.readline()) for _ in range(n)]\nm = int(stdin.readline())"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n100') == '-5'\nassert solution('2 1\\n2 1\\n101') == '-5'\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('3 3\\n3 3\\n5\\n') == '5'\nassert solution('3 3\\n3 3\\n1\\n') == '2'\nassert solution('2 1\\n2 1\\n10\\n') == '3'"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n3') == '-2'\nassert solution('2 1\\n2 1\\n5') == '-1'\nassert solution('2 1\\n2 1\\n5') == '-1'\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"3\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 1\") == \"3\"\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '3'\nassert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n100') == '95'\nassert solution('2 1\\n2 1\\n1000') == '-1000'\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n100') == '-4'\nassert solution('1 1\\n1 1\\n100') == '-1'\nassert solution('2 1\\n2 1\\n0') == '-2'\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1''') == '3'\nassert solution('''2 1''') == '3'\nassert solution('''2 1\n2 1\n2''') == '3'\nassert solution('''2 1\n2 1\n10''') == '-5'"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0''') == '2015'\nassert solution('''4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999''') == '1999'\nassert solution('''1\nIAO'9''') == '1991'\nassert solution('''1\n''') == '1989'\nassert solution('''2\nIAO'9\nIAO'99''') == '1999'\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\\\n5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0\n''') == '2015'\n\nassert solution('''\\\n4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999\n''') == '1999'\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('IAO2') == '2'\nassert solution('IAO123') == '123'\nassert solution('IAO12345') == '12345'\nassert solution('IAO09') == '9'\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0''') == '2015'\nassert solution('''4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999''') == '1989'\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == ''\nassert solution('''\\\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0''') == ''\nassert solution('''\\\n3''') == ''\nassert solution('''\\\nIAO'9\nIAO'99\nIAO'999\nIAO'9999''') == ''\nassert solution('''\\\n1\nIAO'15\nIAO'15\nIAO'9999\nIAO'9999\nIAO'9999\nIAO'9999\nIAO'9999''') == ''\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '''1\n2\n3\n4\n5'''\nassert solution('''10''') == '''89\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89'''\nassert solution('''10\n11\n9''') == '''90\n89\n88\n87\n86\n85\n84\n83\n82\n81\n80'''\nassert solution('''1000''') == '''8999\n9898\n9798\n9788\n9788\n9778\n9777\n9777\n9777\n9777\n9777\n9777\n9777'''\nassert solution('''100\n101\n99''') == '''99\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89'''\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"IAO'9\") == \"1199\"\nassert solution(\"IAO'0\") == \"12000\"\nassert solution(\"IAO'1\") == \"12001\"\nassert solution(\"IAO'9\") == \"1199\"\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0''') == '2015'\nassert solution('''4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999''') == '1989'\n\nprint(solution('''1000'''))"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0\n''') == '2015'\nassert solution('''\\\n4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999\n''') == '2999'"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('IAO' + '9'*9) == '9'*9\nassert solution('IAO' + '99'*9) == '99'*9\nassert solution('IAO' + '999'*9) == '999'*9\nassert solution('IAO' + '9999'*9) == '9999'*9\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_text) == input_text\n\nprint(\"Test 1:\", solution(input_text))\n\ninput_text = \"\"\"4\n10 1\n20 2\n30 3\n40 4\n\"\"\"\n\nassert solution(input_text) == '50'\nprint(\"Test 2:\", solution(input_text))\n\ninput_text = \"\"\"3\n10 2\n20 3\n30 4\n\"\"\"\n\nassert solution(input_text) == '60'\nprint(\"Test 3:\", solution(input_text))\n\ninput_text = \"\"\"1\n10 10\n\"\"\"\n\nassert solution(input_text) == '10'\nprint(\"Test 4:\", solution(input_text))\n\ninput_text = \"\"\"5\n10 1\n20 2\n30 3\n40 4\n50 5\n\"\"\"\n\nassert solution(input_text) == '150'\nprint(\"Test 5:\", solution(input_text))\n\ninput_text = \"\"\"1\n10 1\n\"\"\""
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n5 10') == '50'\nassert solution('3\\n3 1') == '21'\nassert solution('3\\n2 2') == '12'\nassert solution('3\\n4 3') == '6'\nassert solution('3\\n5 10') == '180'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('3\\n1') == '2'\nassert solution('1\\n10') == '10'\nassert solution('3\\n3') == '3'\nassert solution('3\\n20') == '30'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n5 10\\n') == '50'\nassert solution('1\\n5 10\\n') == '50'\nassert solution('1\\n5 10\\n') == '50'\nassert solution('1\\n5 10\\n') == '50'\nassert solution('1\\n5 10\\n') == '50'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '6'\nassert solution('1\\n5 10') == '50'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('1\\n5 10\\n7 8') == '46'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n5 10') == '50'\nassert solution('2\\n3 1') == '21'\nassert solution('3\\n3 1\\n2 2') == '21'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('4\\n5 10\\n7 9\\n8 8\\n9 8\\n10 7\\n11 5\\n12 2') == '21'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n5 10') == '50'\nassert solution('1\\n5 10\\n1\\n3 10\\n2\\n4 10') == '21'\nassert solution('1\\n5 10\\n1\\n3 10\\n2\\n4 10\\n3\\n4 10') == '75'\nassert solution('1\\n5 10\\n1\\n3 10\\n2\\n4 10\\n3\\n4 10\\n3\\n4 10') == '81'\nassert solution('1\\n5 10\\n1\\n3 10\\n2\\n4 10\\n3\\n4 10\\n3\\n4 10\\n3\\n4 10') == '81'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '50'\nassert solution('3\\n3 1\\n2 2\\n') == '50'\nassert solution('1\\n5 10\\n') == '50'"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n3 1\\n2 2\\n4 3') == '180'\nassert solution('4\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('4\\n3 1\\n2 2\\n4 3') == '50'\nassert solution('4\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('4\\n3 1\\n2 2\\n4 3') == '50'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n5') == '9'\nassert solution('3\\n5\\n7') == '15'\nassert solution('5\\n1\\n3\\n5\\n7') == '34'\nassert solution('7\\n1\\n3\\n5\\n7\\n9') == '75'\nassert solution('10\\n1\\n3\\n5\\n7\\n9\\n10\\n12') == '322'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == '1'\nassert solution('''3 0''') == '0'\nassert solution('''6 3''') == '3'\nassert solution('''7 7 7''') == '0'\nassert solution('''9 7 7 7''') == '3'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1\\n2 1 4\\n') == '1\\n'\nassert solution('3 0\\n7 7 7\\n') == '0\\n'\nassert solution('6 3\\n1 3 4 6 9 10\\n') == '3\\n'\nassert solution('6 3\\n1 3 4 6 9 10\\n') == '3\\n'\nassert solution('6 3\\n1 3 4 6 9 10\\n') == '3\\n'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == '1'\nassert solution('''3 0''') == '0'\nassert solution('''6 3''') == '3'\nassert solution('''7 7 7''') == '0'\nassert solution('''9 10 11 12 13 14 15 16 17 18 19''') == '8'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"1\\n2\\n\") == \"0\"\nassert solution(\"2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n5\\n\") == \"1\"\nassert solution(\"1\\n5\\n0\") == \"0\"\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 2 3') == '1'\nassert solution('2 1\\n1 2 3') == '1'\nassert solution('3 0\\n7 7 7') == '0'\nassert solution('3 1\\n1 3 4') == '2'\nassert solution('3 2\\n1 3 4') == '2'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1''') == '1'\nassert solution('''3 0''') == '0'\nassert solution('''6 3''') == '3'\nassert solution('''9 9 9''') == '0'\nassert solution('''1 3 4 6 9 10''') == '3'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '0'\nassert solution('3 0') == '0'\nassert solution('6 3') == '3'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1\\n2 1 4\\n') == '1'\nassert solution('3 0\\n7 7 7\\n') == '0'\nassert solution('6 3\\n1 3 4 6 9 10\\n') == '3'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 0\\n2 1') == '0'\nassert solution('0 0\\n3 4') == '3'\nassert solution('1 0\\n1 1') == '0'\nassert solution('3 2\\n1 1 1') == '2'\nassert solution('3 3\\n1 1 1') == '0'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\nC M\\nY Y\\n') == '#Color'\nassert solution('3 2\\nW W\\nW W\\nB B\\n') == '#Black&White'\nassert solution('1 1\\nW\\n') == '#Black&White'\n\n\n\"\"\"\n\nn, m = [int(x) for x in stdin.readline().split()]\nmatrix = []\nfor row in range(n):\n    matrix.append(stdin.readline().strip())\n\nprint('#Black&White' if matrix.count('C') + matrix.count('M') + matrix.count('Y') == 0 else '#Color')\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '#Black&White'\nassert solution('2 2') == '#Color'\nassert solution('3 2') == '#Black&White'\nassert solution('1 1') == '#Color'\nassert solution('3 2') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"2 2\nC M\nY Y\"\"\") == \"\"\"#Color\n\"\"\"\n\nassert solution(\n\"\"\"3 2\nW W\nW W\nB B\n\"\"\") == \"\"\"#Black&White\n\"\"\"\n\nassert solution(\n\"\"\"2 2\nC M\nY Y\n\"\"\") == \"\"\"#Black&White\n\"\"\"\n\nassert solution(\n\"\"\"3 3\nC W\nC W\nC W\n\"\"\") == \"\"\"#Black&White\n\"\"\"\n\nassert solution(\n\"\"\"2 2\nG G\nG G\n\"\"\") == \"\"\"#Black&White\n\"\"\""
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('C\\nM\\n') == '#Black&White'\nassert solution('C\\nM\\nY\\n') == '#Black&White'\nassert solution('C\\nM\\nY\\nG\\n') == '#Black&White'\nassert solution('C\\nM\\nY\\nG\\nB\\n') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\nC M\nY Y\n''') == '#Black&White'\nassert solution('''3 2\nW W\nW W\nB B\n''') == '#Color'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"#Black&White#\") == \"#Black&White\"\nassert solution(\"#Color#\") == \"#Color\"\nassert solution(\"#Black&White#\") == \"#Black&White\"\nassert solution(\"#Black&White\") == \"#Black&White\"\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '#Black&White'\nassert solution('C\\nM') == '#Color'\nassert solution('W\\nW') == '#Black&White'\nassert solution('W\\nW\\nB') == '#Black&White'\nassert solution('W\\nW\\nB\\nB') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2\nC M\nY Y\n''') == '#Color'\nassert solution('''3 2\nW W\nW W\nB B\n''') == '#Black&White'\nassert solution('''1 1\nW\n''') == '#Black&White'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 2\nC M\nY Y\n\"\"\") == \"#Black&White\"\n\nassert solution(\n\"\"\"\n3 2\nW W\nW W\nB B\n\"\"\") == \"#Color\"\n\nassert solution(\n\"\"\"\n1 1\nW\n\"\"\") == \"#Black&White\"\n\nassert solution(\n\"\"\"\n2 1\nY\n\"\"\") == \"#Color\"\n\nassert solution(\n\"\"\"\n1 1\nB\n\"\"\") == \"#Black&White\""
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"#Black&White\"\nassert solution(\"C M\\nY Y\\n\") == \"#Color\"\nassert solution(\"C M\\nY Y\\nW W\\nB B\\n\") == \"#Black&White\"\nassert solution(\"C M\\nY Y\\nW W\\nB B\\nG G\\n\") == \"#Black&White\"\nassert solution(\"C M\\nY Y\\nW W\\nB B\\nC C\\n\") == \"#Color\"\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n-3 2 9 16\\n') == '6'\nassert solution('5 2\\n4 8 11 18 19\\n') == '5'\nassert solution('5 1\\n2 3 4 5\\n') == '1'\nassert solution('2 1\\n2 3\\n') == '3'\nassert solution('5 1\\n4 5 5 5\\n') == '5'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '4 3'\n    '4 -3 2 9 16'\n) == '6'\nassert solution(\n    '5 2'\n    '4 8 11 18 19'\n) == '5'\nassert solution(\n    '4 2'\n    '4 8 11 18 19'\n) == '5'\nassert solution(\n    '5 2'\n    '4 8 11 18 19'\n) == '5'\nassert solution(\n    '3 2'\n    '-3 2 3'\n) == '6'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 2') == '6'\nassert solution('5 2') == '5'\nassert solution('4 3') == '6'\nassert solution('8 3') == '5'\nassert solution('5 3') == '5'\n\n\n\n\"\"\""
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 2') == '5'"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 2') == '5'\nassert solution('1 1') == '0'\nassert solution('6 4') == '0'\nassert solution('10 5') == '1'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    4 3\n    -3 2 9 16\n    '''\n) == '6'\n\nassert solution(\n    '''\n    5 2\n    4 8 11 18 19\n    '''\n) == '5'\n\nassert solution(\n    '''\n    11 2\n    1 2 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 2') == '5'\nassert solution('5 5') == '0'\nassert solution('5 1') == '5'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n-1\\n-1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n4\\n2\\n-2\\n-2') == '3'\nassert solution('3\\n3\\n-1\\n-2\\n2') == '2'\nassert solution('3\\n3\\n-1\\n-2\\n2') == '2'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n-3 2 9 16\\n') == '6\\n'\nassert solution('5 2\\n4 8 11 18 19\\n') == '5\\n'\n\"\"\"\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\nassert solution('4\\n1') == '3'\nassert solution('5\\n1') == '4'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '3'\nassert solution(input()) == '4'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 5 5 2''') == '2'\nassert solution('''5\n6 3 4 1 5''') == '5'\nassert solution('''8\n4 4 4 2 2 100 100 100''') == '3'\nassert solution('''6\n10 10 50 10 50 50''') == '4'\nassert solution('''7\n1 1 1 1 1 1 1 1''') == '5'"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('100 100 100 100 100 100 100') == '5'\nassert solution('11') == '3'\nassert solution('10 10 50 10 50 50') == '4'\nassert solution('4') == '3'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''4\n1 2 3 4''') == '3'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('3\\n1 2 3') == '2'\nassert solution('3\\n2 3 1') == '1'\nassert solution('4\\n1 2 3 4') == '4'\nassert solution('4\\n2 3 3 2') == '0'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8 9') == '7'\nassert solution('10\\n1 1 1 1 1 1 1 1 1') == '1'\nassert solution('10\\n5 5 5 5 5 5 5 5') == '4'\nassert solution('10\\n5 5 5 5 5 5 5 5') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1') == '6'\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 1 11 2 8') == '4'\nassert solution('4\\n1 8 8 8') == '6'\nassert solution('2\\n7 6') == '0'\nassert solution('10\\n6 4 9 3 5 8 2 10 9') == '2'\nassert solution('5\\n6 4 9 3 5') == '4'\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n7 6') == '0'\nassert solution('2\\n1 8') == '6'\nassert solution('2\\n7 8') == '2'\nassert solution('2\\n1 1') == '0'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n5 1 11 2 8''') == '4'\nassert solution('''4\n1 8 8 8''') == '6'\nassert solution('''2\n7 6''') == '0'\n\n'''\n\nfrom collections import Counter"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 1 11 2 8''') == '4'\nassert solution('''4\n1 8 8 8''') == '6'\nassert solution('''2\n7 6''') == '0'\nassert solution('''5\n8 7 6 5 4''') == '2'\nassert solution('''7\n8 7 6 5 4''') == '3'\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n7 6\\n') == '7\\n'\nassert solution('2\\n7 6\\n') == '0\\n'\nassert solution('2\\n7\\n') == '0\\n'\nassert solution('6\\n1 8\\n') == '0\\n'\n\n\n\n-----"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n5 1 11 2 8\\n') == '4'\nassert solution('4\\n1 8 8 8\\n') == '6'\nassert solution('2\\n7 6\\n') == '0'\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 1 11 2 8\\n') == '4\\n'\nassert solution('4\\n1 8 8 8\\n') == '6\\n'\nassert solution('2\\n7 6\\n') == '0\\n'\n\n\n\"\"\""
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 1 11 2 8''') == '4'\nassert solution('''4\n1 8 8 8''') == '6'\nassert solution('''2\n7 6''') == '0'\nassert solution('''4\n1 2 1 1''') == '2'"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5 1 11 2 8\\n') == '4'\nassert solution('4\\n1 8 8 8\\n') == '6'\nassert solution('2\\n7 6\\n') == '0'\nassert solution('3\\n1 2 3\\n') == '-1'\n\n\n-----Test Plan (4 marks)-----\n\n1. Run `manage.py test` to test the test cases.\n2. Run `manage.py test_solution` to test the solution against test cases.\n\"\"\"\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces') == 'YES', \"Codeforces\"\nassert solution('aaaaa') == 'NO', \"aaaaa\"\nassert solution('aaaaaaaaaaaaaaaa') == 'NO', \"aaaaaaaaaaaaaaaa\"\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('aab') == 'YES'\nassert solution('abab') == 'NO'\nassert solution('abcd') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('codeforces') == 'YES'\nassert solution('aab') == 'NO'\nassert solution('abc') == 'NO'\nassert solution('aabb') == 'NO'\nassert solution('bab') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 'NO'\nassert solution('c') == 'NO'\nassert solution('codeforces') == 'YES'\nassert solution('a') == 'NO'\nassert solution('cdcdc') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 'NO'\nassert solution('codeforces') == 'YES'\nassert solution('abc') == 'NO'\nassert solution('abcbcccc') == 'NO'\nassert solution('abcbccccdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\") == \"YES\\ncode\"\nassert solution(\"aab\") == \"NO\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('fors') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('aab') == 'NO'\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"codeforces\") == \"YES\\ncode\"\nassert solution(\"aaaaa\") == \"NO\"\nassert solution(\"aaaa\") == \"NO\"\nassert solution(\"abc\") == \"YES\\nabc\"\nassert solution(\"iltlml\") == \"YES\\niltlml\"\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '+---------+\\n|#.#.#.#.|\\n|.#.#.#.#|\\n|#.#.#.#.#|\\n|#.#.#.#.#|\\n+---------+'\nassert solution('9') == '+------+\\n|#...#.#.#|\\n|#.#.#.#.#|\\n|#.#.#.#.#|\\n|#.#.#.#.#|\\n|#...#.#.#|\\n+------+'\nassert solution('10') == '+----------+\\n|#.......#|\\n|#.#.#.##.#|\\n|#.#.#.#.#.#|\\n|#.#.#.#.#.#.#|\\n|#.#.#.#.#.#.#.#|\\n|#.......#|\\n+----------+'\nassert solution('20') == '+------------+\\n|#.O.O.O.O.O.O.O.#|\\n|#.O.O.O.O.O.O.#.#|\\n|#.O.O.O.O.O.#.#.#|\\n|#.O.O.O.O.O.#.#.#.#|\\n|#.O.O.O.O.O.O.#.#.#|\\n|#.O.O.O.O.O.O.#.#.#.#|\\n|#.O.O.O.O.O.O.#.#.#.#|\\n|#.O.O.O.O.O.O.#.#.#.#|\\n+------------+'"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9''') == '''+------------------------+\n|O.O.O.O.#.#.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+'''\n\n\nassert solution('''20''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+'''\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''9''') == '''+------------------------+\n|O.O.O.O.#.#.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.|.|\n|O.......................|\n|O.O.#.#.#.#.#.#.#.#.|.|)\n+------------------------+'''\n\nassert solution('''20''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.#.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.#.#.#.#.#.|.|)\n+------------------------+'''\n\nprint(solution('''9'''))\nprint(solution('''20'''))"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9''') == \"\"\"+------------------------+\n|O.O.O.#.#.#.#.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.#.|.|\n|O.......................|\n|O.O.#.#.#.#.#.#.#.#.#.|.|)\n+------------------------+\n\"\"\"\nassert solution('''20''') == \"\"\"+------------------------+\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.#.#.#.|.|)\n+------------------------+\n\"\"\"\n'''"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"+------------------------+\\n|O.O.O.#.#.#.#.#.#.|D|)\")\nassert solution(\"2\") == \"+------------------------+\\n|O.O.O.#.#.#.#.#.#.|.|)\")\nassert solution(\"3\") == \"+------------------------+\\n|O.O.O.#.#.#.#.#.#.|.|)\")\nassert solution(\"4\") == \"+------------------------+\\n|O.O.O.#.#.#.#.#.#.|.|)\")\nassert solution(\"5\") == \"+------------------------+\\n|O.O.O.#.#.#.#.#.#.|.|)\")\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"9\n\"\"\") == \"\"\"\n+------------------------+\n|O.O.O.O.#.#.#.#.#.#.|D|)\n|O.O.O.O.O.#.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.#.#.#.#.#.|.|)\n+------------------------+\n\"\"\"\n\nassert solution(\n    \"\"\"20\n\"\"\") == \"\"\"\n+------------------------+\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+\n\"\"\"\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9') == '+------------------------+\\n|O.O.O.#.#.#.#.#.#.#.|D|)', 'Sample 1'\nassert solution('20') == '+------------------------+\\n|O.O.O.O.O.O.O.#.#.#.#.|D|)', 'Sample 2'\nprint(\"Done! Check if it is correct.\")\n\"\"\"\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9''') == '''+------------------------+\n|O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.#.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+'''\nassert solution('''20''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.O.#.#.#.|D|)\n|O.O.O.O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+'''\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9''') == '''+------------------------+\n|O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.#.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+\n'''\nassert solution('''20''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.#.#.#.|.|)\n+------------------------+\n'''\n"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == '+------------------------+\\n|O.O.O.O.O.O.O.#.#.#.|D|)', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.#.#.#.|D|) but got: \\n+------------------------+\\n|O.O.O.O.O.O.O.#.#.#.|D|)'\nassert solution('4') == '+------------------------+\\n|O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.#.|.|)\n|O.O.#.#.#.#.#.#.#.#.#.|.|\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.#.|.|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n|O.......................|\n|O.O.O.O.O.O.O.O.O.O.O.O.O.O|D|)\n+------------------------+', 'Expected: +------------------------+\\n|O.O.O.O.O.O.O.O."
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"891 2 1\") == 9\nassert solution(\"77 7 7\") == 7\nassert solution(\"114 5 14\") == 6\nassert solution(\"1 1 2\") == 0\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 1 1') == '9'\nassert solution('77 7 7') == '7'\nassert solution('114 5 14') == '6'\nassert solution('1 1 2') == '0'\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"9 1 1\") == \"9\"\nassert solution(\"77 7 7\") == \"7\"\nassert solution(\"114 5 14\") == \"6\"\nassert solution(\"1 1 2\") == \"0\"\nprint(solution(stdin))\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"9\"\nassert solution(\"77 7 7\") == \"7\"\nassert solution(\"114 5 14\") == \"6\"\nassert solution(\"\") == \"0\"\nassert solution(\"1 1 2\") == \"0\"\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input('')) == ''\nassert solution(input('')) == ''\nassert solution(input('')) == ''\nassert solution(input('')) == ''\n\nassert solution(input('')) == ''\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\n\nprint(solution('''2 2 1'''))"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\nassert solution('''1 1 2''') == '0'\nprint(\"Test success!\")\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"123\") == \"113\"\nassert solution(\"234\") == \"113\"\nassert solution(\"345\") == \"113\"\nassert solution(\"456\") == \"113\"\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == '10'\nassert solution('''123''') == '113'\nassert solution('''1000''') == '113'\n'''\nimport sys"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10''') == '10'\nassert solution('''123''') == '113'\nassert solution('''10''') == '10'\nassert solution('''123''') == '113'\nassert solution('''10''') == '10'\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('7') == '7'\nassert solution('123') == '113'\nassert solution('1234') == '113'\nassert solution('10000') == '113'\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == input()[:-1]\nassert solution(input()) == input()[:-1]\nassert solution(input()) == input()[:-1]\nassert solution(input()) == input()[:-1]\nassert solution(input()) == input()[:-1]\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"123\") == \"113\""
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '10'\n\"\"\"\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n') == '10'\nassert solution('123\\n') == '113'\nassert solution('1234567891\\n') == '11'\nassert solution('100\\n') == '100'\nassert solution('56789\\n') == '113'\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == input()\n\n\n\n'''"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10\\n\") == \"10\\n\"\nassert solution(\"123\\n\") == \"113\\n\"\nassert solution(\"1000\\n\") == \"1\\n\"\nassert solution(\"96789\\n\") == \"9\\n\"\nassert solution(\"100\\n\") == \"0\\n\"\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 6 18') == '3'\nassert solution('1 1 1 1') == '0'\nassert solution('2 3 6 18') == '3'\nassert solution('1 1 1 1') == '0'\nassert solution('3 3 6 18') == '3'\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 6 18') == '3'\nassert solution('1 3 5 6') == '2'\nassert solution('2 2 3 4') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 6 18') == 3\nassert solution('2 3 6 18') == 3\nassert solution('1 2 1 1') == 0\nassert solution('1 1 1 1') == 1\nassert solution('1 1 1 1') == 1\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\"\nprint(solution(stdin))\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 6 18''') == \"3\"\nassert solution('''6 3 6 18''') == \"3\"\nassert solution('''9 9 9 9''') == \"0\"\nassert solution('''18 18 18 18''') == \"0\"\nassert solution('''9 18 18 18''') == \"9\"\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 6 18') == '3'\nassert solution('2 3 4 9') == '2'\nassert solution('1 100 2 9') == '1'\nassert solution('2 4 1 1') == '2'\nassert solution('2 2 1 1') == '1'\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 6 18\") == 3\nassert solution(\"2 3 6 18\") == 0\nassert solution(\"10 1 10 1\") == 2"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3 6 18''') == 3\nassert solution('''2 3 6 19''') == 3"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 6 18') == '3'\nassert solution('1 1 1 1') == '5'\nassert solution('2 2 2 1') == '6'\nassert solution('2 3 6 18') == '3'\nassert solution('1 2 1 1') == '4'\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('3 3') == '0'\nassert solution('3 5') == '3'\nassert solution('5 6') == '10'\nassert solution('5 5') == '9'\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 6\\n3 3 3 3 3\\n3 1 1 1 1 1\\n1 2 4') == '10'\nassert solution('3 5\\n1 2 4\\n') == '0'\nassert solution('5 5\\n2 3 1 4 4\\n') == '9'\nassert solution('1 1000\\n548\\n') == '0'\nassert solution('3 3\\n3 1 1\\n1 2 4\\n') == '1'\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 1 1\\n') == '1'\nassert solution('5 5\\n2 3 1 4 4\\n') == '9'\nassert solution('3 3\\n3 1 1\\n') == '0'\nassert solution('3 3\\n1 2 4\\n') == '3'\nassert solution('1 1000\\n548\\n') == '0'\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 6\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n3 3 3 3 3\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 6\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"3 3 3 3 3\") == \"3\"\nassert solution(\"1 1000\") == \"0\"\nassert solution(\"3 5\") == \"1\"\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 6\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3\\n3 3 3 3 3') == '10'\nassert solution('1 1000\\n548\\n1 2 4\\n') == '0'\nassert solution('5 5\\n2 3 1 4 4\\n') == '9'\nassert solution('3 3\\n3 1 1\\n') == '1'\n\n\n\n-----Answer-----\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"yes 1 1\"\nassert solution(\"2 1\") == \"yes 1 1\"\nassert solution(\"3 2 1\") == \"no\"\nassert solution(\"4 1 2 3\") == \"yes 1 3\"\nassert solution(\"2 1\") == \"yes 1 1\"\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 2 1\"\"\") == \"yes\\n1 3\"\nassert solution(\"\"\"4\n2 1 3 4\"\"\") == \"yes\\n1 2\"\nassert solution(\"\"\"2\n1 2\"\"\") == \"yes\\n1 1\"\n\n\"\"\""
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n3 2 1'''\n    ) == 'yes', '3'\n\nassert solution(\n'''4\n2 1 3 4'''\n    ) == 'yes', '1 3'\n\nassert solution(\n'''2\n1 2'''\n    ) == 'yes', '1 1'\n\nassert solution(\n'''4\n3 1 2 4'''\n    ) == 'no', ''\n\nassert solution(\n'''1\n1'''\n    ) == 'yes', '1 1'"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 2 1\") == \"\"\nassert solution(\"3 2 1\") == \"\"\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == 'yes\\n1 2'\nassert solution('1\\n1\\n2\\n3') == 'no'\nassert solution('1\\n1\\n2\\n2\\n3') == 'yes\\n1 1'\nassert solution('2\\n1\\n2\\n2\\n2\\n3') == 'no'\nassert solution('2\\n1\\n3\\n2\\n2\\n3') == 'yes\\n1 3'\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 2 1''') == 'yes\\n1 3'\nassert solution('''4\n2 1 3 4''') == 'yes\\n1 2'\nassert solution('''4\n3 1 2 4''') == 'no'\nassert solution('''1\n1''') == 'yes\\n1 1'\nassert solution('''3\n1 2 3''') == 'yes\\n1 1'\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n') == 'yes\\n1 3\\n'\nassert solution('3\\n3 2 1\\n') == 'yes\\n1 3\\n'\nassert solution('4\\n2 1 3 4\\n') == 'yes\\n1 2\\n'\nassert solution('4\\n2 1 3 4\\n') == 'no\\n'\nassert solution('2\\n1 2\\n') == 'yes\\n1 1\\n'\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2') == ''\nassert solution('1 2 3') == ''\nassert solution('1 2 3 4') == 'no'\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1') == 'yes\\n1 3'\nassert solution('4\\n2 1 3 4') == 'yes\\n1 2'\nassert solution('4\\n3 1 2 4') == 'no'\nassert solution('2\\n1 2') == 'yes\\n1 1'\n\"\"\"\n"
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"yes\"\nassert solution(\"3 2 1\") == \"yes 1 3\"\nassert solution(\"4\") == \"yes\"\nassert solution(\"2 1 3 4\") == \"yes 1 2\"\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '6'\nassert solution('10 2') == '-1'\nassert solution('3 5') == '-1'\nassert solution('1 1') == '-1'\nassert solution('2 2') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '-1'\nassert solution('10 2') == '6'\nassert solution('10 3') == '-1'\nassert solution('10 5') == '6'\nassert solution('10 7') == '7'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '6'\nassert solution('1 1') == '-1'\nassert solution('10 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('0 1') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('10 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('100 200') == '-1'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 2''') == '6'\nassert solution('''3 5''') == '-1'\nassert solution('''0 10''') == '5'\nassert solution('''10 1''') == '-1'\nassert solution('''10000 1000000000''') == '200000'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 2\") == \"6\"\nassert solution(\"3 5\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"10 5\") == \"6\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3') == '-1'\nassert solution('1 1') == '3'\nassert solution('3 2') == '6'\nassert solution('9 9') == '18'\nassert solution('10 3') == '6'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('3 1') == '-1'\nassert solution('3 2') == '-1'\nassert solution('7 4') == '3'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\n\n\n'''\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"6\"\nassert solution(\"3 5\") == \"-1\"\nassert solution(\"10 0\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"100000 100000\") == \"1000001\"\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '8'\nassert solution('11') == '14'\nassert solution('22') == '20'\n\n\"\"\"\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"11\") == \"14\"\nassert solution(\"22\") == \"20\"\nassert solution(\"33\") == \"26\"\nassert solution(\"41\") == \"31\"\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == 8\nassert solution('''11''') == 14\nassert solution('''22''') == 20\nassert solution('''34''') == 24\n'''\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '8'\nassert solution('11') == '14'\nassert solution('22') == '20'\nassert solution('24') == '24'\nassert solution('12') == '12'\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"11\") == \"14\"\nassert solution(\"22\") == \"20\"\n\n\"\"\"\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"8\"\nassert solution(\"11\") == \"14\"\nassert solution(\"22\") == \"20\"\n\n'''\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == 8\nassert solution('11') == 14\nassert solution('22') == 20\nassert solution('100') == 70\nassert solution('1000') == 1213\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('   ') == 0\nassert solution('  abcd ') == 1\nassert solution('   abcd') == 2\nassert solution('abcd') == 3\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"5\"\nassert solution(\"10\") == \"11\"\nassert solution(\"100\") == \"101\"\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '8'\nassert solution('11') == '14'\nassert solution('22') == '20'\n\n\n-----Answer-----\n__author__ = \"satya\"\n__email__ = \"q4386_cs_satya@gmail.com\"\n__date__ = \"2016-10-06\"\n__status__ = \"Finished\"\n'''"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('0 0 0 0') == '0'\nassert solution('7 9 8 6') == '1'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 2 2') == '1'\nassert solution('1 2 2 2') == '0'\nassert solution('1 2 2 3') == '1'\nassert solution('1 2 1 2') == '1'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('1000 1500 2000 3000') == '0'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 2 3 4''') == '4'\nassert solution('''1 2 2 5''') == '3'\nassert solution('''500000 500000 500000 500000''') == '1'\nassert solution('''500000 500000 500000 500000''') == '1'"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 5') == '4'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('1000 1000 1000 1000') == '0'\nassert solution('1000000000 1000000000 1000000000 1000000000') == '1'\nassert solution('1000000000 1000000000 1000000000 1000000000') == '1'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('8000000008000000000000 8000000008000000000000') == '1'\nassert solution('1 2 2 5') == '3'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('1234 5678 9123 4567') == '1'\nassert solution('1234 5678 9123 45671234') == '0'\n"
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 7 11 15 19\") == \"5563\"\nassert solution(\"3 5 4 10007\") == \"5563\"\nassert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"3 4 5 10007\") == \"5563\"\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('10 6 2 10007') == '3116'\nassert solution('5 3 4 1000007') == '43621'\nassert solution('1 1001 1 1000007') == '1'\nassert solution('1 0 1 1000007') == '1'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7 4 10007') == '5563'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3 4 10007\n''') == '5563'\nassert solution('''1 2 3 4\n''') == '0'\nassert solution('''5 3 4 1000000\n''') == '9999958991'\nassert solution('''2 2 4 2\n''') == '1'\nassert solution('''3 4 6 3\n''') == '5'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"1 9 12 50\") == \"10\"\nassert solution(\"5 9 12 50\") == \"5\"\nassert solution(\"9 5 4 10007\") == \"5563\"\nassert solution(\"9 9 9 10007\") == \"5\"\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 5 7 10007') == '5563'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('3 7 11 15 19') == '5563'\nassert solution('4 3 6 2') == '28'\nassert solution('2 2 1 1') == '1'\nassert solution('4 3 4 4') == '0'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5563\"\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3 4 10007\") == \"5563\"\nassert solution(\"3 7 4 10007\") == \"5363\"\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3 4 10007') == 5563\nassert solution('5 2 2 10007') == 5537\nassert solution('5 2 3 10007') == 5537\nassert solution('5 2 5 10007') == 5537\nassert solution('5 2 3 10007') == 5537\n\nprint(solution('5 2 3 10007'))\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 5 5 5') == '15'\nassert solution('8 4 3 2 10 5 2') == '32'\n\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 1 1 1 5 5 5''') == '15'\nassert solution(\n'''8 4 3 2 10 5 2''') == '32'\nassert solution(\n'''8 4 3 2 10 5 2''') == '32'\nassert solution(\n'''8 4 3 2 10 5 2''') == '32'\nassert solution(\n'''8 4 3 2 10 5 2''') == '32'\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 1 1 1 5 5 5''') == \"15\"\nassert solution('''8 4 3 2 10 5 2''') == \"32\"\n'''\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 5 5 5') == '15'\nassert solution('8 4 3 2 10 5 2') == '32'"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 5 5 5\") == \"15\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\"\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1 5 5 5\") == \"15\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\"\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1 1 1 5 5 5''') == '15'\nassert solution('''8 4 3 2 10 5 2''') == '32'\nassert solution('''8 3 1 3 3 1 1''') == '21'\nassert solution('''1 1 1 1 1 1 1''') == '0'\nassert solution('''1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 1 5 5 5\") == \"15\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\"\nassert solution(\"1 1 1 1 5 5 5\") == \"15\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\"\nassert solution(\"8 4 3 2 10 5 2\") == \"32\"\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"9\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\") == \"9\"\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\n\n=====\n\n\"\"\"\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 10\n4 6 7\n\"\"\") == '8'\n\nassert solution(\n\"\"\"2 12\n1 10\n\"\"\") == '9'\n\nassert solution(\n\"\"\"2 7\n3 4\n\"\"\") == '6'\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n4 6 7\") == \"8\\n\"\nassert solution(\"2 12\\n1 10\") == \"9\\n\"\nassert solution(\"2 7\\n3 4\") == \"6\\n\"\nassert solution(\"2 7\\n2 3\") == \"2\\n\"\nassert solution(\"2 7\\n1 1\") == \"3\\n\"\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 10\\n4 6 7') == '8'\nassert solution('2 12\\n1 10') == '9'\nassert solution('2 7\\n3 4') == '6'\nassert solution('2 7\\n2 4') == '5'\nassert solution('2 7\\n4 2') == '5'\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '6'\n\"\"\"\n\nimport sys\n\nn, m = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\non = sum(a[:n-1])\noff = m - sum(a[n-1:])\n\nprint(max(on, off))\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10\") == \"9\"\nassert solution(\"2 12\") == \"6\"\nassert solution(\"2 7\") == \"9\"\nassert solution(\"3 7\") == \"6\"\nassert solution(\"1 10\") == \"9\"\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('3\\n4') == '-1'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1') == '-1'\nassert solution('3\\n1') == '-1'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n2\") == \"1 2\\n\"\nassert solution(\"1\\n3\") == \"1 3\\n\"\nassert solution(\"1\\n4\") == \"1 4\\n\"\nassert solution(\"1\\n5\") == \"1 5\\n\"\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1 2\"\nassert solution(\"2\\n1\") == \"1 2\"\nassert solution(\"3\\n1\") == \"-1\"\nassert solution(\"2\\n1 3\") == \"1 2 3\"\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\\\n5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\nassert solution('''\\\n1\n1\n1\n2\n2\n''') == '-1'\nassert solution('''\\\n5\n1\n1\n1\n1\n2\n2\n''') == '-1'\nassert solution('''\\\n3\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n''') == '2 1 2'\nassert solution('''\\\n3\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n''') == '-1'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a1\\na2') == '-1'\nassert solution('b1\\nb2') == '-1'\nassert solution('1\\nb1\\nb2') == '-1'\nassert solution('b1\\nb2\\nb3') == '-1'\nassert solution('1\\nb1\\nb2\\nb3') == '-1'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n2\\n4 1\\n3\\n4 1 3') == '1 2\\n-1\\n4 5 1 2 3 6'\nassert solution('5\\n1\\n1\\n2\\n4 1\\n3\\n4 1 3') == '1 2\\n-1\\n4 5 1 2 3 6'\nassert solution('1\\n1\\n2\\n4 1\\n3\\n4 1 3') == '1 2\\n-1\\n4 5 1 2 3 6'\nassert solution('5\\n1\\n1\\n2\\n4 1\\n3\\n4 1 3') == '1 2\\n-1\\n4 5 1 2 3 6'\nassert solution('1\\n1\\n2\\n4 1\\n3\\n4 1 3') == '1 2\\n-1\\n4 5 1 2 3 6'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"4 5 1 2 3\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"5\") == \"4 5 1 2 3\"\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('-1') == '-1'\nassert solution('4 5 1 2 3 6') == '1 3 5 6 7 9 2 4 8 10'\nassert solution('2 3 4 5 6 7 8 9 10') == '1 3 5 6 7 9 2 4 8 10'\n\n\n-------\n\nimport sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    line = sys.stdin.readline().split()\n    b = [int(x) for x in line[1:]]\n    m = len(b)\n    if m == 1:\n        print(-1)\n    else:\n        b.sort()\n        ans = [0] * (2 * m)\n        for j in range(m):\n            ans[2 * j] = b[j]\n        ans[2 * m - 1] = -1\n        print(' '.join([str(x) for x in ans]))\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        "
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '-1'\nassert solution('1\\n3') == '1 2'\nassert solution('2\\n3') == '-1'\nassert solution('2\\n4') == '2 1'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1\\n'\nassert solution('2\\n1') == '2\\n'\nassert solution('3\\n1') == '3\\n'\nassert solution('3\\n2') == '3\\n'\nassert solution('3\\n3') == '3\\n'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n2 4 6\n''') == '6'\nassert solution('''5\n45 12 27 30 18\n''') == '15'\nassert solution('''6\n45 12 27 30 18\n''') == '15'\nassert solution('''1\n23\n''') == '0'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2') == 2\nassert solution('2\\n2 4 6') == 6\nassert solution('2\\n12 18') == 12\nassert solution('2\\n45 12 27 30 18') == 15\nassert solution('3\\n2 4 6') == 6\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2''') == \"2\"\nassert solution('''3\n2 4 6''') == \"6\"\nassert solution('''5\n45 12 27 30 18''') == \"15\"\nassert solution('''8\n1 2 3 4 5 6 7 8''') == \"8\"\nassert solution('''4\n12 45 10 26 22''') == \"12\"\n\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution:', solution('''8\n1 2 3 4 5 6 7 8'''))\nprint('solution"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4 6') == '6'\nassert solution('3') == '3'\nassert solution('2 4 6') == '6'\nassert solution('5') == '5'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n2 4 6\\n') == '6'\nassert solution('3\\n2 4 6\\n') == '6'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''2''') == '2'\nassert solution(\n'''3''') == '6'\nassert solution(\n'''5''') == '15'\n\nassert solution(\n'''45 12 27 30 18''') == '15'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 5 6 7') == '0'\nassert solution('3\\n2 4 6') == '6'\nassert solution('3\\n12 18') == '12'\nassert solution('5\\n45 12 27 30 18') == '15'\nassert solution('5\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n2 4 6') == '6'\nassert solution('2\\n12 18') == '12'\nassert solution('5\\n45 12 27 30 18') == '15'\n\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('S') == 'YES'\nassert solution('SFF') == 'NO'\nassert solution('SS') == 'YES'\nassert solution('SSS') == 'YES'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('FSSF') == 'NO'\nassert solution('SF') == 'YES'\nassert solution('SSFFSFFSFF') == 'YES'\nassert solution('FFF') == 'YES'\nassert solution('F') == 'NO'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"FFFFFFFFFF\") == \"NO\"\nassert solution(\"SSFFSFFSFF\") == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\nFSSF\\n\") == \"NO\"\nassert solution(\"2\\nSF\\n\") == \"YES\"\nassert solution(\"10\\nFFFFFFFFFF\\n\") == \"NO\"\nassert solution(\"10\\nSSFFSFFSFF\\n\") == \"YES\"\nassert solution(\"10\\nSFFSFFFFFFFFFF\\n\") == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('\\n') == '\\n'\nassert solution('FFFFFFFFFF') == 'NO'\nassert solution('FFFFFF') == 'YES'\nassert solution('FFFFFFFFFFFF') == 'NO'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10') == 'NO'\nassert solution('FFFFFFFFFF') == 'NO'\nassert solution('SSFFSFFSFF') == 'YES'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"FSSF\") == \"NO\"\nassert solution(\"SF\") == \"YES\"\nassert solution(\"FFFFFFFFFF\") == \"YES\"\nassert solution(\"SSFFSFFSFF\") == \"YES\"\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution(' ') == ''\nassert solution('F') == 'NO'\nassert solution('SF') == 'YES'\nassert solution('FFFFFFFFFF') == 'NO'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('F') == 'NO'\nassert solution('FF') == 'NO'\nassert solution('FFF') == 'YES'\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n') == '6'\nassert solution('3 3\\n') == '0'\nassert solution('4 0\\n') == '24'\nassert solution('1337 42\\n') == '807905441'\nprint('Test success!')\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('0') == None\nassert solution('2 0') == None\nassert solution('2 2') == None\nassert solution('0 0') == None\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 0\") == \"24\"\nassert solution(\"1337 42\") == \"807905441\"\n\n\"\"\"\n\"\"\"\n\nThis is a cute problem. I'd appreciate if you could solve it while you were debugging.\n\nI've tried to solve it using bitwise operations, but it's not very efficient.\n\nMore about the bitwise operations: https://stackoverflow.com/a/39273557/4257013\n\"\"\"\nimport sys"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2 2') == ''\nassert solution('3 3') == ''\nassert solution('3 2') == ''\nassert solution('1337 42') == ''\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''3 3''') == '0'\nassert solution('''4 0''') == '24'\nassert solution('''1337 42''') == '807905441'\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('3 2') == '6'\nassert solution('3 3') == '0'\nassert solution('4 0') == '24'\nassert solution('1337 42') == '807905441'\n\nprint('Test cases passed')\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''3 3''') == '0'\nassert solution('''4 0''') == '24'\nassert solution('''1337 42''') == '807905441'\n'''\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2''') == '6'\nassert solution('''3 2''') == '0'\nassert solution('''1337 42''') == '807905441'\nassert solution('''3 2''') == '0'\nassert solution('''3 3''') == '24'"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n''') == '6'\nassert solution('''3 3\n''') == '0'\nassert solution('''4 0\n''') == '24'\nassert solution('''1337 42\n''') == '807905441'\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('2\\n2\\n0 1\\n0 2 2\\n') == '1.00000000000000000000'\nassert solution('2\\n3\\n3 3 2\\n-2 3 6\\n-2 7 10') == '0.50000000000000000000'\nassert solution('4\\n1\\n3 3 3\\n-1 -4 2\\n-1 4 -1\\n-3 1 2\\n-3 3 2') == '0.93945'\n\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n2\\n2 0 1\\n0 2 2\\n0 2 1\\n0 2 2\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == '1.00000000000000000000'\nassert solution('1 3\\n3\\n3 3 2\\n-2 3 6\\n-2 7 10\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1\\n0 2 1"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('-1 -1') == '-1.00000000000001'\nassert solution('3 2') == '0.00000000000000000000'\nassert solution('2 3 2') == '0.00000000000000000000'\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"0 0\"\"\"\n) == \"\"\"1.00000000000000000000\"\"\"\n\nassert solution(\n\"\"\"1 3\"\"\"\n) == \"\"\"0.50000000000000000000\"\"\"\n\nassert solution(\n\"\"\"3\n3 3 2\"\"\"\n) == \"\"\"0.50000000000000000000\"\"\"\n\nassert solution(\n\"\"\"3\n3 3 2\n-2 3 6\n-2 7 10\"\"\"\n) == \"\"\"0.50000000000000000000\"\"\"\n\nassert solution(\n\"\"\"3\n3 3 2\n3 3 3\n-1 -1 3\n-1 -1 4\n-1 -1 5\"\"\"\n) == \"\"\"0.50000000000000000000\"\"\""
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('2 2') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('-2 3 6') == '0.50000000000000000000'\nassert solution('3 3 2') == '0.50000000000000000000'\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n2\\n2 0 1\\n0 2 2') == '1.00000000000000000000'\nassert solution('1 3\\n3\\n3 3 2\\n-2 3 6\\n-2 7 10\\n') == '0.50000000000000000000'\nassert solution('1 10\\n-1 10 -1\\n3 3 3\\n3 2 1 2') == '0.50000000000000000000'\nassert solution('-1 10\\n-1 10 -1\\n3 3 3\\n3 2 1 2\\n3 3 3\\n3 2 1 2') == '0.00000000000000000000'\nassert solution('-1 10\\n-1 10 -1\\n3 3 3\\n3 2 1 2\\n3 3 3\\n3 2 1 2\\n3 3 3\\n3 2 1 2') == '0.00000000000000000000'\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0.50000000000000000000\"\nassert solution(\"0 0\") == \"1.00000000000000000000\"\nassert solution(\"1 3\") == \"0.50000000000000000000\"\nassert solution(\"1 3\") == \"0.50000000000000000000\"\nassert solution(\"1 3\") == \"0.50000000000000000000\"\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n2\\n2 0 1\\n0 2 2\\n0 2 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '1.00000000000000000000'\nassert solution('1 3\\n3\\n3 3 2\\n-2 3 6\\n-2 7 10\\n') == '0.50000000000000000000'"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0\n2\n2 0 1\n0 2 2\n''') == '1.00000000000000000000'\nassert solution('''1 3\n3\n3 3 2\n-2 3 6\n-2 7 10\n''') == '0.50000000000000000000'\nassert solution('''10 5\n6\n7 8 9 10\n5\n5 4 3 2\n''') == '0.1'\nassert solution('''7 5\n7\n7 7 7\n7\n7 7 7\n7\n7 7 7\n5\n5 5 4 4\n''') == '1.00000000000000000000'\nassert solution('''5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5\n5 5 5 5\n5"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\n\nassert solution('''1 1\n1 1 1''') == '1'\n\nassert solution('''7 7\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n1 1 1''') == '7'\n\nassert solution('''7 7\n0 0 0\n0 1 1\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n1 1 1''') == '7'\n\nassert solution('''7 7\n0 0 0\n0 1 1\n0 0 0\n0 0 0\n1 1 1\n0 0 0\n0 0 0\n1 1 1''') == '7'"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5') == '4'\nassert solution('2 3\\n0 2 4\\n0 8 3\\n0 20 10\\n1 5 5\\n0 4 3\\n0 1 8\\n0 3 2\\n1 2 5\\n1 5 4\\n1 4 1\\n0 2 3\\n1 1 5\\n0 1 5\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\n0 2 3\\n0 1 5\\n0 1 4\\n0 1 4\\n0 1 2\\n0 1 1\\n0 2 5\\n0 1 3\\n0 3 2\\"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''2 3 4\n2 3 3\n2 1 3\n1 1 2\n1 1 2''') == '4'\nassert solution('''0 2 4\n0 2 3\n0 2 2\n2 2 3\n1 2 3\n1 1 2''') == '2'\nassert solution('''0 2 4\n0 2 3\n0 2 2\n2 2 3\n1 2 3\n1 1 2\n1 1 2''') == '1'\nassert solution('''0 2 4\n0 2 3\n0 2 2\n2 2 3\n1 2 3\n1 1 2\n1 1 2''') == '2'\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''2 2\n0 2 1\n1 1 1''') == '2'\nassert solution('''3 2\n0 1 1\n2 1 1''') == '1'\nassert solution('''3 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == \"4\"\nassert solution('''5 5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == \"5\"\nassert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == \"4\"\nassert solution('''5 5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == \"5\"\nassert solution('''5 5\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n''') == \"4\"\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n0 2 4\\n1 3 1\\n0 8 3\\n0 20 10\\n1 5 5') == '4'\nassert solution('1 2 3\\n4 1 2\\n1 4 2\\n2 4 2\\n2 2 2') == '1'\nassert solution('1 2 3\\n4 1 2\\n1 4 2\\n2 4 2\\n2 2 2\\n2 2 2') == '1'\nassert solution('1 2 3\\n4 1 2\\n1 4 2\\n2 4 2\\n2 2 2\\n2 2 2\\n2 2 2') == '1'\nassert solution('1 2 3\\n4 1 2\\n1 4 2\\n2 4 2\\n2 2 2\\n2 2 2\\n3 2 2') == '1'\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution('0 0 0') == '0'\nassert solution('0 0 0\\n0 0 0') == '0'\nassert solution('0 0 0\\n0 0 0\\n0 0 0') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '4'\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3 1') == '4'\nassert solution('3 3\\n0 0 0\\n1 1 1\\n0 8 3\\n0 20 10\\n1 5 5') == '12'\nassert solution('2 3\\n0 0 0\\n1 1 1\\n0 8 3\\n0 20 10\\n1 5 5') == '12'\nassert solution('10 10\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == \"4\"\nassert solution('''0 0 0\n0 1 1\n0 0 1\n1 0 1\n0 0 0\n''') == \"1\"\nassert solution('''0 0 0\n0 1 1\n0 0 1\n1 0 1\n0 0 0\n''') == \"1\"\nassert solution('''0 0 0\n0 1 1\n0 0 1\n1 0 1\n0 0 0\n''') == \"1\"\nassert solution('''0 0 0\n0 1 1\n0 0 1\n1 0 1\n0 0 0\n''') == \"1\"\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 1 1 2 2 2\n''') == '1 2 4'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '1 2 4'\nassert solution('''\n6\n1 1 1 4 4 5\n''') == '1 2 4'\nassert solution('''\n6\n1 1 1 2 2 2\n''') == '1 2 4'\nassert solution('''\n6\n2 2 1 1 4 4\n''') == '1 2 4'\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == -1\nassert solution('1 1 1 2 2 2') == -1\nassert solution('2 2 1 1 4 6') == 1 2 4\nassert solution('2 2 1 1 4 6 7') == 2 2 4\nassert solution('1 1 1 2 2 2 3 3') == -1\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n2\\n2\\n2') == '-1'\nassert solution('1\\n1\\n1\\n2\\n2\\n2') == '1 2 4'\nassert solution('1\\n1\\n1\\n2\\n2\\n2') == '1 2 6'\nassert solution('1\\n1\\n1\\n2\\n2\\n2') == '1 2 4'\nassert solution('2\\n2\\n2\\n2\\n2\\n2') == '1 2 4'\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6\\n1 1 1 2 2 2') == '1 2 4'\nassert solution('6\\n2 2 1 1 4 6') == '1 2 4'\nassert solution('6\\n3 1 1 4 4 6') == '2 3'\nassert solution('6\\n2 2 1 1 4 6') == '1 2 6'\nassert solution('6\\n3 3 3 1 1 1') == '2 3'\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 1 1 2 2 2''') == '1 2 4'\nassert solution('''6\n2 2 1 1 4 6''') == '1 2 6'\nassert solution('''10\n1 1 1 2 2 2 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2 2 2') == '1 2 4\\n1 2 6'\nassert solution('1 1 1 2 2 2') == '-1'\nassert solution('1 1 1 2 2 2\\n1 1 1 1 1 1 1\\n') == '1 2 4\\n1 2 6\\n1 2 6'\nassert solution('1 1 1 2 2 2\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1 1\\n1 1 1 1 1 1"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1 2 2 2') == '-1'\nassert solution('2 2 1 1 4 6') == '1 2 4'\nassert solution('2 2 1 1 4 6') == '1 2 4'\nassert solution('2 2 1 1 4 6') == '1 2 4'\nassert solution('2 2 1 1 4 6') == '1 2 4'\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1 1 2 2 2') == '1 2 4'\nassert solution('1\\n1 1 1 2 2 2') == '-1'\nassert solution('2\\n2 2 1 1 4 6') == '1 2 4'\nassert solution('1\\n1 1 1 2 2 2') == '1 2 4'\nassert solution('2\\n2 2 1 1 4 6') == '1 2 4'\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 1 1 2 2 2\"\"\") == \"1 2 4\"\nassert solution(\"\"\"2 2 1 1 4 6\"\"\") == \"-1\"\nassert solution(\"\"\"6 6 6 5 5 5\"\"\") == \"-1\"\nassert solution(\"\"\"7 7 7 6 6 6\"\"\") == \"-1\"\nassert solution(\"\"\"7 7 7 6 6 7\"\"\") == \"-1\"\n"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 1 2 2 2\n\n3\n1 1 1 4 6\n\n2\n1 1\n\n2\n2 1\n\n2\n1 1\n\n2\n1 2\n\n1\n1\n\n\"\"\"\n) == \"\"\"\n2\n1 2\n1 2\n\"\"\"\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcde') == 3\nassert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcdea') == 0\nassert solution('aaa') == 0\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcde') == 3\nassert solution('aaaa') == 1\nassert solution('abcdef') == 1\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba') == '2'\nassert solution('zzzzz') == '1'\nassert solution('abcde') == '3'\n\n\"\"\"\n\n\"\"\"\nthe idea is to find the longest substrings and the value of k for which this is the case.\n\nLets say we know that k = 1 is always a dominant character.\nThen k = 2 is the longest substring that can contain at least one dominant character.\nThen k = 3 is the longest substring that can contain at least one dominant character and at least one seconddominant character.\n\nso we know that for every k we can create the longest substring with at least one dominant character, and there is a unique longest substring with at least one dominant character.\n\nso we can solve in O(n^2) time, by creating a dp matrix of size nxn\n\"\"\"\n\n\nfrom collections import Counter"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('b') == 1\nassert solution('c') == 1\nassert solution('ab') == 2\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('abcde') == 3\nassert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcdef') == 1\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcde') == 3\nassert solution('abcabcabcabcabcabcabcabcabcabcabcabcabc') == 10\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 1\nassert solution('a') == 1\nassert solution('abcdefghijklmnopqrstuvwxyz') == 3\nassert solution('abcdeeffghijklmnopqrstuvwxyz') == 3\nassert solution('aaabbbcccdddddeeeeffgghhhhiiiijjkkkkkllllmmmmmmmmnnnnnnoooooopppppppqrrrrssssstttttuuuuvvvvwwwwwwwwwww') == 3\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcde') == 3\nassert solution('abcdef') == 3\nassert solution('aaaaaa') == 1\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('abcd') == '1'\nassert solution('abcde') == '2'\nassert solution('abcdef') == '3'\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"10\"\nassert solution(\"15 6\") == \"38\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"5 7\") == \"8\"\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n3 5\\n') == '10'\nassert solution('2 3\\n3 5\\n') == '10'\nassert solution('3 4\\n2 5\\n4 8\\n') == '6'\nassert solution('4 10\\n5 6\\n3 7\\n1 8\\n9 10\\n2 11\\n10 12\\n') == '16'\nassert solution('2 1\\n2 1\\n') == '1'\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 5') == '10'\nassert solution('3 6') == '38'\nassert solution('3 7') == '36'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5') == '10'\nassert solution('15 6') == '38'\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == 3\nassert solution('3\\n4\\n2') == 4\nassert solution('2\\n2\\n1') == 1\nassert solution('1\\n2\\n2') == 2\nassert solution('1\\n2\\n3\\n4') == 4\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3') == '10'\nassert solution('5 5') == '38'\nassert solution('1 6') == '3'\nassert solution('5 6') == '9'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == 1\nassert solution('3 4') == 1\nassert solution('2 3 2 1') == 3\nassert solution('1 1 1 1 1 1') == 1\nassert solution('1 1 1 1 1 1 1') == 1\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == 3\nassert solution('2 3 2 1') == 3\nassert solution('3 4 1 2') == 1\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n2 3 2 1\\n\") == \"3\"\nassert solution(\"3 4\\n1 2 1\\n\") == \"1\"\nassert solution(\"4 5\\n2 3 2 1 3\\n\") == \"2\"\nassert solution(\"1 2 1\\n\") == \"1\"\nassert solution(\"3 1\\n1 2 1 3\\n\") == \"1\"\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3\\n2 3 2 1') == '3'\nassert solution('3 4\\n1 2 1') == '1'\nassert solution('3 4\\n2 1 1') == '2'\nassert solution('3 4\\n1 2 1') == '1'\nassert solution('3 4\\n2 3 2 1') == '3'\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3\n2 3 2 1\n''') == '3'\nassert solution('''3 4\n1 2 1\n''') == '1'"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n2 3 2 1''') == '3'\nassert solution('''3 4\n1 2 1''') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3\n2 3 2 1''') == '3'\nassert solution('''3 4\n1 2 1''') == '1'\nassert solution('''1 3\n1''') == '1'\nassert solution('''5 5\n1 1 1 1 1\n''') == '1'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1', \"Example\"\nassert solution('1 2 3 4') == '1', \"Example\"\nassert solution('2 1') == '1', \"Example\"\nassert solution('2 2') == '1', \"Example\"\nassert solution('1 1') == '1', \"Example\"\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('1000') == '991'\nassert solution('10000') == '999'\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"XS\\nXS\\nM\") == \"0\"\nassert solution(\"XXXL\\nXXL\\nXXL\") == \"1\"\nassert solution(\"M\\nXS\\nXS\\nM\") == \"2\"\nassert solution(\"M\\nM\\nXS\\nM\") == \"0\"\nassert solution(\"XS\\nXS\\nXS\\nXS\") == \"0\"\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\nXS\\nXS\\nM\\nXL\\nS\\nXS\\n') == '2'\nassert solution('2\\nXXXL\\nXXL\\nXXL\\nXXXS\\n') == '1'\nassert solution('2\\nM\\nXS\\nXS\\nM\\n') == '0'\nassert solution('2\\nM\\nXS\\nXS\\nM\\n') == '0'\nassert solution('2\\nXS\\nXS\\nM\\nXS\\n') == '0'\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\nXM\\nXXXL\\nXM\\n\") == \"0\"\nassert solution(\"2\\nXXXL\\nXXL\\nXXL\\nXXXS\\n\") == \"1\"\nassert solution(\"2\\nM\\nXS\\nXS\\nM\\n\") == \"0\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('M') == 0\nassert solution('XS') == 2\nassert solution('XL') == 1\nassert solution('S') == 1\nassert solution('XXXL') == 1\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_result\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('MXMXLXLXLXSM') == '4'\nassert solution('XMXLXLXLXSM') == '2'\nassert solution('XMXLXLXLXSM') == '1'\nassert solution('XSXLXLXLXSM') == '0'\nassert solution('MXMXLXLXLXSM') == '0'\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\nXS\\nXS\\nM\\nXL\\nS\\nXS\\n\") == \"2\"\nassert solution(\"2\\nXXXL\\nXXL\\nXXL\\nXXXS\\n\") == \"1\"\nassert solution(\"2\\nM\\nXS\\nXS\\nM\\n\") == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\nXS\nXS\nM\nXL\nS\nXS\n''') == '2'\nassert solution('''2\nXXXL\nXXL\nXXL\nXXXS\n''') == '1'\nassert solution('''2\nM\nXS\nXS\nM\n''') == '0'\nassert solution('''3\nM\nXS\nXS\nM\n''') == '0'\nassert solution('''1\nS\n''') == '0'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 2 1') == '2/1'\nassert solution('1 1 1 1') == '1/1'\nassert solution('1 1 2 3') == '3/1'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 3 2''') == '1/3'\nassert solution('''4 3 2 2''') == '1/4'\nassert solution('''0 0 10 10''') == '1/10'\nassert solution('''1 1 2 2''') == '1/2'\nassert solution('''2 2 2 3''') == '3/1'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 3 2 2''') == '1/4'\nassert solution('''1 1 3 2''') == '1/3'\nassert solution('''4 3 2 2''') == '1/4'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 1 1') == '1'\nassert solution('2 1 1 1') == '0'\nassert solution('2 1 1 1') == '0'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 1 1') == '1/1'\n\"\"\"\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2 2') == '1/4'\nassert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\n\n\n\"\"\""
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 3 2\") == \"1/3\"\nassert solution(\"4 3 2 2\") == \"1/4\"\nassert solution(\"1 1 3 2\") == \"1/3\"\nassert solution(\"4 3 2 2\") == \"1/4\"\nassert solution(\"2 2 1 1\") == \"1/2\"\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 4 4') == '1/4'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 3 2\") == \"1/3\"\nassert solution(\"4 3 2 2\") == \"1/4\"\nassert solution(\"4 3 2 1\") == \"0/1\"\nassert solution(\"1 1 3 2\") == \"1/3\"\nassert solution(\"1 1 1 1\") == \"1/1\"\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('5 3 2 2') == '5/6'\nassert solution('10 4 2 2') == '1/5'\nassert solution('7 7 1 1') == '7/8'\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('RRG') == 1\nassert solution('RRRRR') == 0\nassert solution('RRGB') == 4\nassert solution('BRBG') == 0\nassert solution('GGBGBB') == 1\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('RRG') == 1\nassert solution('RRRRR') == 4\nassert solution('RRGGBRGB') == 3\nassert solution('BBGGGRBGB') == 1\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('BRBG') == 0\nassert solution('RRG') == 1\nassert solution('RRRRR') == 4\nassert solution('RRRRRR') == 0\nassert solution('RRG') == 1\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('BGB\\n') == 1\nassert solution('RRB\\n') == 0\nassert solution('BRBG\\n') == 1\nassert solution('RRBG\\n') == 1\nassert solution('BBRG\\n') == 0\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"RRG\") == 1\nassert solution(\"RRR\") == 0\nassert solution(\"BRBG\") == 4\nassert solution(\"BBB\") == 0\nassert solution(\"BBBB\") == 0\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('RRRG') == 1\nassert solution('RRBR') == 0\nassert solution('RRGR') == 2\nassert solution('BBGB') == 0\nassert solution('BRBG') == 4\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '1'\nassert solution('''R''') == '0'\nassert solution('''RRG''') == '1'\nassert solution('''RRR''') == '0'\nassert solution('''BRBG''') == '4'\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == 1\nassert solution('''5''') == 4\nassert solution('''RRR''') == 0\nassert solution('''BBB''') == 0\nassert solution('''GBG''') == 1\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5\n\"\"\") == \"1\"\nassert solution(\n\"\"\"12\n\"\"\") == \"3\"\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\nassert solution('17') == '4'\nassert solution('24') == '6'\nassert solution('45') == '7'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n\n-----"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\nassert solution('1000000000') == '5'\nassert solution('9999999999') == '5'\nassert solution('5000000000000') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n') == '1'\nassert solution('12\\n') == '3'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\nassert solution('5') == '1'\nassert solution('20') == '6'\nassert solution('21') == '7'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\nassert solution('121') == '3'\nassert solution('1211') == '5'\nassert solution('1221') == '6'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\"\n) == \"1\"\n\nassert solution(\n    \"12\"\n) == \"3\"\n\nassert solution(\n    \"1000000000\"\n) == \"10999999\"\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n7 20 88') == '35'\nassert solution('9\\n16 20 30 40 50 60 70 80 90') == '15'\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n7 20 88') == '35'\nassert solution('9\\n16 20 30 40 50 60 70 80 90') == '15'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\nassert solution('3\\n15 20 30 40 50 60 70 80 90') == '90'\nassert solution('3\\n15 20 30 40 50 60 70 80 90') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 20 88\") == \"35\"\nassert solution(\"9\\n16 20 30 40 50 60 70 80 90\") == \"15\"\nassert solution(\"9\\n15 20 30 40 50 60 70 80 90\") == \"90\"\nassert solution(\"10\\n5 8 2 4 9 6 7 9 8 9 10\") == \"10\"\n\n\n\n\n\n\n\n\"\"\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\nIn this problem, you will be given a list of integers. Your task is to print the number of elements in the list that are greater than their neighbors.\n\nConsider the following example. There are five elements in the list, and among them, three of them are greater than their neighbors (i.e., 4 > 2 and 5 > 1). Thus, we print 3.\n\nYou may assume that the list contains at least 3 elements.\n\n---Input-----\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\n\nThe first line of each test case contains a single integer n (1 \u2264 n \u2264 10), representing the number of elements in the list.\n\nThe second line contains n space-separated integers a1, a2,..., an (1 \u2264 ai \u2264 10, for all 0 \u2264 i < n) defining the elements of the list.\n\n---Output-----\n\nFor each test case, output a single line containing the answer to the problem.\n\nIf the input n is 1, then output \"5\" (without the quotes).\n\nIf the input n is greater than 1, then output the answer to the problem rounded down to the nearest integer.\n\nFor example, in the first test case, the elements of the list are 1, 2, 3, 4, 5, and the neighbors of these elements are 2, 3, 4, 5, 6. The answer to the problem is 3.\n\nIn the second test case, the elements of the list are 1, 2, 3, 4, 5, 6, and the neighbors of these elements are 2, 3, 4, 5, 6, 7. The answer to the problem is 2.\n\nIn the third test case, the elements of the list are 1, 2, 3, 4, 5, 6, 7, and the neighbors of these elements are 2, 3, 4, 5, 6, 7, 8. The answer to the problem is 2.\n\nIn the fourth test case, the elements of the list are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, and the neighbors of these elements are 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13. The answer to the problem is 4.\n\nIn the fifth test case, the elements of the list are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, and the neighbors of these elements are 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16. The answer to the problem is 4.\n\nConstraints:\n\n1 \u2264 T \u2264 100\n1 \u2264 n \u2264 100\n1 \u2264 ai \u2264 10^9\n\n\"\"\""
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"6\"\nassert solution(\"2\\n0 1\") == \"1\"\nassert solution(\"5\\n0 1 3 2 4\") == \"9\"\nassert solution(\"8\\n0 1 2 3 4 5 6 7 8\") == \"8\"\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n7 20 88\\n') == '35\\n'\nassert solution('9\\n15 20 30 40 50 60 70 80 90\\n') == '15\\n'\nassert solution('9\\n15 20 30 40 50 60 70 80 90\\n') == '15\\n'\nassert solution('9\\n15 20 30 40 50 60 70 80 90\\n') == '15\\n'\n\"\"\""
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '''35'''\nassert solution('''9''') == '''15'''\nassert solution('''9''') == '''90'''\nassert solution('''9''') == '''90'''\nassert solution('''9''') == '''90'''\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 4 2 3') == '11'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '15'\nassert solution('9\\n15 20 30 40 50 60 70 80 90\\n30 30 30 30 30 30 30 30 30') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n20 8 8 8') == '35'\nassert solution('9\\n16 20 30 40 50 60 70 80 90') == '15'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9\\n15 20 30 40 50 60 70 80 90') == '15'\nassert solution('3\\n7 20 88') == '35'\nassert solution('9\\n16 20 30 40 50 60 70 80 90') == '90'\nassert solution('10\\n15 19 20 22 25 26 27 28 29 30 31 32 33') == '42'\nassert solution('10\\n
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == answer\n\"\"\"\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 5 3\\n3 1 2\\n') == '1'\nassert solution('4 7 2\\n3 3 2 4\\n') == '2'\nassert solution('5 5 1\\n1 3 1 2 1\\n') == '-1'\nassert solution('5 5 1\\n1 3 1 2 1\\n') == '-1'\n\n\n\n'''\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n3 1 2\n''') == '1'\nassert solution('''4 7 2\n3 3 2 4\n''') == '2'\nassert solution('''5 5 1\n1 3 1 2 1\n''') == '-1'\nassert solution('''3 5 2\n1 3 1 2\n''') == '-1'"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer\n\"\"\""
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 5 3''') == '1'\nassert solution('''4 7 2''') == '2'\nassert solution('''5 5 1''') == '-1'\nassert solution('''1 3 1 2 1''') == '2'\nassert solution('''1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1\\n1') == '1'\nassert solution('2 2 2\\n1 1 1') == '1'\nassert solution('2 2 2\\n1 2 2') == '2'\nassert solution('1 1 1\\n1') == '1'\nassert solution('3 3 3\\n1 1 1') == '-1'\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6 2\\n3 3 2 4\") == \"-1\"\nassert solution(\"5 7 2\\n3 3 2 4 1\") == \"2\"\nassert solution(\"5 7 2\\n3 3 2 4 1\") == \"2\"\nassert solution(\"4 6 2\\n3 3 1 2\") == \"-1\"\nassert solution(\"5 7 2\\n3 3 2 4 1\") == \"2\"\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RBR\") == \"2\"\nassert solution(\"RBBR\") == \"6\"\nassert solution(\"RBBRR\") == \"6\"\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RBBRR\") == \"6\"\nassert solution(\"RBBR\") == \"6\"\nassert solution(\"RBBRB\") == \"6\"\nassert solution(\"RBBRBB\") == \"6\"\nassert solution(\"RBBRBR\") == \"6\"\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('RR') == ''\nassert solution('RBBRRB') == '6'\nassert solution('RBRBRBR') == '6'\nassert solution('RBRRRRR') == '9'\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('3R') == '2'\nassert solution('3B') == '2'\nassert solution('3RB') == '2'\nassert solution('3RBBR') == '6'\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\nRBBRBBRBRRB\n\"\"\"\n) == \"2\", \"Wrong answer\"\n\nassert solution(\n\"\"\"\n1\nB\n\"\"\"\n) == \"1\", \"Wrong answer\"\n\nassert solution(\n\"\"\"\n5\nRBRBRBRBRRR\n\"\"\"\n) == \"1\", \"Wrong answer\"\n\nassert solution(\n\"\"\"\n1\nRBBRBRBRBRRB\n\"\"\"\n) == \"1\", \"Wrong answer\"\n\nassert solution(\n\"\"\"\n1\nB\n\"\"\"\n) == \"1\", \"Wrong answer\""
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\"\"\"\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('R') == '1'\nassert solution('RR') == '2'\nassert solution('RB') == '2'\nassert solution('RBR') == '3'\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RBBRRBBRRBBRRRBRBRBBRBRRRBRRRRBBRRRRRRRRRBBRBBRBRBRRRRRRRRRBRBRRRRRBBBRRRRRBRBRRRRRBBBRRRRBBRRRRRBRRRBBBRRRRBBRRRRBRBBBRRRRRBRRRRBBRRRRRBBBRRRRRBRRRRRBBBRRRRRBBBRRRRRBRRRRBRBBBRRRRRBRRRRRBBBRRRRRBBBRRRRRBRRRRRRBBRRRRBBRRRRRBRRRRBBRRRRBBRRRRRRRBRRRRRRBBRRRRRBBBRRRRRBRRRRBBRRRRBBRRRRBBRRRRBBRRRRRBBBRRRRRBBBRRRRRRRBRRRRRRBBRRRRBBRRRRRRBBRRRRBBRRRRBBRRRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRBBRRRRB"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"B\") == 1\nassert solution(\"RR\") == 1\nassert solution(\"BRBRR\") == 2"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('18 18') == '0.0000'\nassert solution('17 31') == '1365.0000'\nassert solution('17 19') == '0.0000'\nassert solution('16 17') == '0.0000'\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '25200.0000'\n\n\"\"\""
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''19 00''') == '25200.0000'\nassert solution('''17 41''') == '1365.0000'\nprint(solution('''100 20 15 2 100'''))\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('19 00') == '25200.0000'\nassert solution('17 41') == '1365.0000'\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"12 59\") == \"0.00000\"\nassert solution(\"18 32\") == \"5.00000\"\nassert solution(\"21 18 15 6\") == \"12.7500\"\nassert solution(\"17 40\") == \"1365.0000\"\nassert solution(\"19 22\") == \"0.00000\"\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 19') == '1'\nassert solution('2 10') == '1'\nassert solution('3 19') == '0.0001'\nassert solution('5 19') == '0.00001'\nassert solution('8 19') == '0.000001'\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''19 00''') == '25200.0000'\nassert solution('''17 41''') == '1365.0000'\n\n\n\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n##\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''19 00\n255 1 100 1'''\n) == '25200.0000'\n\nassert solution(\n'''17 41\n1000 6 15 11'''\n) == '1365.0000'\n\nprint(solution(input()))\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"19 00\") == \"25200.0000\"\nassert solution(\"17 41\") == \"1365.0000\"\nassert solution(\"5 50\") == \"0.0000\""
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaba') == '6'\nassert solution('aaabbbb') == '6'\nassert solution('abracadabra') == '20'\n\n\n\"\"\""
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\"\n\ns = input()\nk = int(input())\nprint(len(s) - k)\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('aaba') == \"6\"\nassert solution('aaabbbb') == \"6\"\nassert solution('abracadabra') == \"20\""
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abracadabra') == 'abracadabra'\nassert solution('aaba') == 'aaba'\nassert solution('aaabbbb') == 'aaabbbb'\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"6\"\nassert solution(\"aaabbbb\") == \"6\"\nassert solution(\"abracadabra\") == \"20\"\n\"\"\"\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''aaba\n2''') == '6'\nassert solution('''aaabbbb\n2''') == '6'\nassert solution('''abracadabra\n10''') == '20'\nprint(solution(input()))\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"aabaab\") == \"6\"\nassert solution(\"aaabbbbbb\") == \"6\"\nassert solution(\"abracadabra\") == \"20\""
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aaba') == 'aabaab'\nassert solution('aaabbbb') == 'aabaab'\nassert solution('abracadabra') == 'abracadabrabracadabra'\nassert solution('aaaaa') == 'aaaaa'\nassert solution('aabaaabbbbaaaa') == 'aabaaabbbbaaaa'\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aaba') == 6\nassert solution('aaabbbb') == 6\nassert solution('abracadabra') == 20\nassert solution('zzz') == 0\nassert solution('aabbbb') == 2\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin\nn = int(stdin.readline().strip())\nslimes = [int(x) for x in stdin.readline().strip().split()]\n\nd = dict()\n\nfor i in range(n):\n    if slimes[i] not in d:\n        d[slimes[i]] = i\n\nl = [slimes[-1]]\nfor i in range(n - 1, -1, -1):\n    if slimes[i] in d:\n        l.append(slimes[i] - l[d[slimes[i]]])\n        del d[slimes[i]]\n    else:\n        l.append(slimes[i])\n\nprint(l[0])"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 2 1') == '4'\nassert solution('5') == '4'\nassert solution('0 -1 -1 -1 -1') == '4'\nassert solution('3\\n-1 2 -1') == '-1'\nassert solution('6\\n0 -1 -1 -1 -1 -1') == '6'\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n-1') == '-1'\nassert solution('1\\n2 1') == '4'\nassert solution('1\\n-1 -1') == '4'\nassert solution('1\\n2 1 2 1') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2 1') == '4'\nassert solution('5\\n0 -1 -1 -1 -1') == '4'\nassert solution('5\\n-1 -1 -1 -1 -1') == '4'\nassert solution('5\\n-1 -1 -1 -1 -1') == '4'\nassert solution('5\\n0 1 2 3 4') == '4'\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2 1 2 1\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"0 -1 -1 -1 -1\") == \"4\"\nassert solution(\"10 -1 10 -1 10 -1\") == \"4\"\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n2\n-1 -1\n''') == '4'\nassert solution('''\n5\n-1 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n8\n1 -1 -1 -1 -1 -1 -1 -1\n''') == '4'\nassert solution('''\n10\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n''') == '5'\nassert solution('''\n11\n1 2 3 4 5 6 -1 -1 -1 -1 -1 -1\n''') == '5'\n"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\"\n\"\"\""
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10\n1 2 3 4 5 6''') == \"0\"\nassert solution('''6 100\n1 2 3 4 5 6''') == \"2\"\nassert solution('''6 100\n1 3 2 4 5 6''') == \"0\"\nassert solution('''4 10\n1 3 2 4''') == \"0\"\nassert solution('''6 100\n1 3 2 4 5 6''') == \"2\"\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nsys.stdin = open(\"input.txt\", \"r\")\nsys.stdout = open(\"output.txt\", \"w\")"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input('')) == output('')\n'''\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 4\\n1 2 5 10 15 20\\n') == '1'\nassert solution('4 10\\n1 3 2 4\\n') == '0'\nassert solution('6 100\\n1 2 3 4 5 6\\n') == '2'\n\n-----\n\nT: O(N)\nS: O(N)\n\n'''"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 4\\n1 2 5 10 15 20\\n') == '1'\nassert solution('6 100\\n1 3 2 4 5 6\\n') == '0'\nassert solution('6 100\\n1 3 2 4 5 6\\n') == '2'"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\"\n\nfrom sys import stdin,stdout\ninput=lambda:stdin.readline().rstrip()"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 4\n1 2 5 10 15 20\n''') == '1'\nassert solution('''4 10\n1 3 2 4\n''') == '0'\nassert solution('''6 100\n1 2 3 4 5 6\n''') == '2'\nassert solution('''6 5\n1 3 2 4 5\n''') == '0'\nassert solution('''5 100\n1 3 2 4 5\n''') == '0'\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 4\\n1 2 5 10 15 20\\n1 3 2 4\") == \"1\\n\"\nassert solution(\"4 10\\n1 3 2 4\\n1 2 3 4\\n1 2 3 4\") == \"0\\n\"\nassert solution(\"6 100\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"2\\n\"\nassert solution(\"4 10\\n1 3 2 4\\n1 2 3 4\\n1 2 3 4\") == \"0\\n\"\nassert solution(\"6 50\\n1 2 3 4 5 6\\n1 2 3 4 5 6\") == \"0\\n\"\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n1 2 3 4 5\\n\") == \"0\"\nassert solution(\"4 10\\n1 3 2 4\\n\") == \"0\"\nassert solution(\"6 100\\n1 2 3 4 5 6\\n\") == \"2\"\n\n\n\n-----\n\n##Online Judge"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2 1') == '16'\nassert solution('2\\n1 1') == '4'\nassert solution('6\\n4 3 2 5 6 1') == '23'\nassert solution('7\\n5 4 3 2 1') == '26'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n0') == '4'\nassert solution('3\\n1 2 1') == '16'\nassert solution('2\\n1 1') == '4'\nassert solution('3\\n1 2 1') == '16'\nassert solution('4\\n2 1 2 1') == '8'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n0 2 1\\n') == '16'\nassert solution('2\\n1 1\\n') == '4'\nassert solution('3\\n1 1 1\\n') == '10'\nassert solution('3\\n1 1 1\\n') == '16'\nassert solution('3\\n0 2 1\\n') == '16'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 16\n\"\"\"\n\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n0 2 1''') == '16'\nassert solution('''2\n1 1''') == '4'\nassert solution('''3\n1 1 1''') == '4'\nassert solution('''3\n2 2 1''') == '16'\nassert solution('''3\n3 4 3''') == '15'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2 1\\n3') == '16'\nassert solution('1 1\\n1') == '4'\nassert solution('2 2 1\\n2') == '8'\nassert solution('2 2 1\\n1') == '4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1') == '4'\nassert solution('2\\n2 1') == '6'\nassert solution('2\\n1 2') == '4'\nassert solution('2\\n2 2') == '8'\nassert solution('3\\n1 1 2') == '10'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '4'\nassert solution('2\\n1') == '8'\nassert solution('3\\n2') == '16'\nassert solution('4\\n3') == '20'\nassert solution('5\\n4') == '30'\n"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 2 1\\n3\\n2 1\") == \"16\\n\"\nassert solution(\"2\\n1 1\") == \"4\\n\"\nassert solution(\"3\\n2 1\") == \"9\\n\"\nassert solution(\"1\\n1\\n\") == \"2\\n\"\nassert solution(\"3\\n2 1\\n3\") == \"4\\n\"\n"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'\n'''\n"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1010') == 3\n\"\"\""
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1010\n''') == '3'\nassert solution('''4\n1010\n''') == '3'\nassert solution('''6\n101010101010101\n''') == '2'\nassert solution('''8\n
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1010') == '3'\n\"\"\""
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1010\\n') == '3'\nassert solution('7\\n000100010100010\\n') == '1'\nassert solution('1\\n00000001\\n') == '0'\nassert solution('10\\n00101010010010100\\n') == '5'"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1010') == '3'\nassert solution('2\\n00') == '1'\nassert solution('10\\n01011011000111') == '3'\nassert solution('100\\n01011011000111') == '3'\nassert solution('1000\\n01011011000111') == '3'"
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1010') == '3'\nassert solution('8\\n1001101001') == '3'\nassert solution('8\\n1010') == '3'\nassert solution('8\\n1111') == '2'\nassert solution('8\\n10101') == '2'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\nassert solution('7 2 1') == '1'\nassert solution('7 7 7') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\nassert solution('5 1 2') == '1'\nassert solution('5 10 3') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 4') == '1'\nassert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\") == \"2\"\nassert solution(\"5 4 7\") == \"1\"\nassert solution(\"6 2 3\") == \"1\"\nassert solution(\"5 5 5\") == \"2\"\nassert solution(\"10000000 1 10000000 1\") == \"1\"\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 4 7\") == \"1\"\nassert solution(\"6 2 3\") == \"1\""
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 4 7\") == \"1\"\nassert solution(\"6 2 3\") == \"1\""
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('abab') == 'Yes'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'No'\nassert solution('aa') == 'Yes'\nassert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('aabc') == 'No'\n\n\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz') == 'Yes'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'No'\nassert solution('abcdefghijklmnopqrstuvwxyz1234567890') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('zzzzz') == 'No'\nassert solution('zggzzz') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('aaab') == 'Yes'\nassert solution('cccc') == 'No'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('z') == 'No'\nassert solution('zz') == 'No'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5') == '2'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\nassert solution('2\\n5') == '2'\nassert solution('2\\n4') == '1'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 3 3 7''') == '2'\nassert solution('''4 5\n10 9 5 8 7''') == '1'\nassert solution('''4 3\n1 3 3 7''') == '1'\nassert solution('''5 5\n10 9 5 8 7''') == '2'\nassert solution('''10 1\n
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''5 5''') == '1'\nassert solution('''10 9 5 8 7''') == '1'\nassert solution('''2 1''') == '0'\nassert solution('''2 3''') == '0'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3 3 7\\n') == '2'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'\n\n\n\n'''\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 3 3 7\\n') == '2\\n'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1\\n'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3 3 7\\n') == '2'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3 3 7') == '2'\nassert solution('5 5\\n10 9 5 8 7') == '1'\nassert solution('5 3\\n10 9 5 8 7') == '1'\nassert solution('3 2\\n1 3 3') == '1'\nassert solution('2 2\\n1 2') == '0'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5 2\n1 3 3 7\n''') == '2'\n\nassert solution(\n'''5 5\n10 9 5 8 7\n''') == '1'\n\nassert solution(\n'''7 5\n1 3 3 7\n''') == '1'\n\nassert solution(\n'''10 10\n1 3 3 7\n''') == '1'\n\nassert solution(\n'''8 9\n1 3 3 7\n''') == '1'"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 1 1 1 1') == '5'\nassert solution('1 2 3 4 5') == '1'\nassert solution('5 5 5 5 5') == '5'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 4 1\\nNNNY\\nNNYN\\nYNNN\\nYNNN\") == \"4\"\nassert solution(\"5 5 1\\nYNNN\\nNNNN\\nNNYN\\nNNYNN\\nYNNN\") == \"5\"\nassert solution(\"3 4 2\\nYYY\\nNNN\\nYNY\\n\") == \"2\"\nassert solution(\"1 1 1\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\nNN\\"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3 2\nYYY\nNNN\nYNY''') == '2'\nassert solution(\n'''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN''') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nYYY\\nNNN\\nYNY\") == \"2\"\nassert solution(\"4 4 1\\nNNNY\\nNNYN\\nYNNN\\nYNNN\") == \"4\"\n\"\"\"\nfrom collections import Counter\n\nF, I, T = [int(n) for n in input().split()]\n\nd = Counter()\nfor _ in range(F):\n    friend_input = input()\n    d += Counter(friend_input)\n\nlikes = [0] * I\nfor item, count in d.items():\n    if count >= T:\n        likes[item - 1] = 1\n\nprint(sum(likes))\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('2 2 2') == '1'\nassert solution('2 2 3') == '1'\nassert solution('1 1 2') == '1'\nassert solution('2 2 2') == '2'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '2'\nassert solution('4 4 1') == '4'\nassert solution('NNNY\\nNNYN\\nNYNN\\nYNNN') == '4'\nassert solution('NNNYY\\nNNYNN\\nYNNNN\\nYNNNN') == '4'\nassert solution('NYNYY\\nNNYNN\\nYNNNN\\nYNNNN') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3 2\nYYY\nNNN\nYNY''') == '2'\nassert solution('''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN''') == '4'\nassert solution('''3 3 1\nNNN\nNNN\nNNN''') == '0'\nassert solution('''3 3 2\nNNN\nNNN\nYYN''') == '0'\nassert solution('''2 2 1\nNNN\nNNN''') == '0'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3 2\nYYY\nNNN\nYNY''') == '2'\nassert solution('''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN''') == '4'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 2\nYYY\nNNN\nYNY''') == '2'\nassert solution('''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN''') == '4'\nassert solution('''5 6 1\nNNNN\nNNNY\nNYYY\nNNN\nYNYY\nYYYY''') == '1'\nassert solution('''10 10 6\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNNNNNNN\nNN"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nassert solution('1 3 7') == '2'\nassert solution('1 3 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0\") == \"2\"\nassert solution(\"2 3 7\") == \"-1\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 3 5\") == \"2\"\nassert solution(\"1 1 1\") == \"-1\"\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nassert solution('2 3 3') == '2'\nassert solution('1 1 3') == '2'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nassert solution('1 2 3') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 1 3') == '2'\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0\") == \"2\"\nassert solution(\"2 3 7\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 7\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0\") == \"2\"\nassert solution(\"2 3 7\") == \"-1\"\nprint(solution(\"2 3 7\"))\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nassert solution('2 3 1') == '2'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '1 2 0\\n'\n) == '2'\nassert solution(\n    '2 3 7\\n'\n) == '-1'\nprint('Passed.')\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0') == '0'\nassert solution('3\\n0 0 1') == '1'\nassert solution('3\\n1 1 0 1') == '2'\nassert solution('5\\n0 1 0 1 0') == '3'\nassert solution('10\\n1 1 0 0 0 1 1 1 1 1') == '4'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 1 0 1 0\n''') == '3'\n\nassert solution('''\n5\n1 1 0 0 1\n''') == '4'\n\nassert solution('''\n2\n0 0\n''') == '0'\n\nassert solution('''\n6\n1 1 0 0 1 0\n''') == '2'\n\nassert solution('''\n100\n1 1 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n0 1 0 1 0''') == '3'\nassert solution('''5\n1 1 0 0 1''') == '4'\nassert solution('''2\n0 0''') == '0'\nassert solution('''3\n0 0 0''') == '0'\nassert solution('''4\n0 0 0 0''') == '0'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '3'\nassert solution('''1 1 0 1 0''') == '4'\nassert solution('''2''') == '0'\nassert solution('''0 0''') == '0'\nassert solution('''0 0 1 0''') == '1'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('0 1 0 1 0') == 3\nassert solution('1 1 0 0 1') == 4\nassert solution('0 0') == 0\n'''\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n5\n0 1 0 1 0\n''') == '3'\nassert solution('''\n5\n1 1 0 0 1\n''') == '4'\nassert solution('''\n2\n0 0\n''') == '0'"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n0 1 0 1 0\n''') == '3'\nassert solution('''5\n1 1 0 0 1\n''') == '4'\nassert solution('''2\n0 0\n''') == '0'\nassert solution('''2\n1 1\n''') == '0'\nassert solution('''3\n0 0 0\n''') == '0'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n0\\n0') == '0'\nassert solution('1\\n0\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n0\\n1') == '3'\nassert solution('2\\n1\\n1') == '2'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('2 1 0') == 3\nassert solution('0 0') == 0\nassert solution('1 1 0') == 4\nassert solution('0 1 0') == 1\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 3''') == \"No\"\nassert solution('''3 3 3''') == \"No\"\nassert solution('''3 2 2''') == \"No\"\nassert solution('''3 1 3''') == \"No\"\nassert solution('''3 1 2''') == \"Yes\"\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 3\n1 8 4\n''') == 'Yes\\n1 4\\n'\nassert solution('''4 3 5\n2 7 7 7\n''') == 'No\\n'\nassert solution('''3 3 3\n1 8 4\n''') == 'No\\n'\nassert solution('''2 2 1\n1 1 2\n''') == 'Yes\\n1 2\\n'\nassert solution('''2 2 2\n2 2 2\n''') == 'Yes\\n1 2\\n1 2\\n'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2 3''') == 'Yes'\nassert solution('''1 8 4''') == 'No'\nassert solution('''1 8 4''') == 'No'\nassert solution('''3 3 3''') == 'No'\nassert solution('''2 7 7 7''') == 'No'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == 'Yes'\nassert solution('5 2 4') == 'No'\nassert solution('7 3 4') == 'No'\nassert solution('1 1 1') == 'No'\nassert solution('2 1 1') == 'No'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 2 3'''\n) == 'Yes'\nassert solution(\n'''3 3 3'''\n) == 'No'\nassert solution(\n'''4 3 5'''\n) == 'Yes'\nassert solution(\n'''7 7 7 7'''\n) == 'No'\nassert solution(\n'''2 3 1'''\n) == 'Yes'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n1 8 4') == 'No'\nassert solution('3 2 3\\n1 8 4') == 'Yes'\nassert solution('4 3 5\\n2 7 7 7') == 'Yes'\nassert solution('3 3 3\\n1 8 4') == 'No'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n1 8 4\\n') == 'Yes\\n1 4'\nassert solution('1 2 3\\n1 8 4\\n') == 'No'\nassert solution('2 3 3\\n1 8 4\\n') == 'No'\nassert solution('3 3 3\\n1 8 4\\n') == 'No'\nassert solution('1 8 4\\n2 7 7 7 7\\n') == 'No'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\") == \"No\"\nassert solution(\"1 8 4\") == \"Yes\\n1 4\"\nassert solution(\"3 3 3\") == \"No\"\nassert solution(\"4 3 5\") == \"Yes\\n2 7 7\"\nassert solution(\"2 7 7 7\") == \"No\"\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n8\\n4\\n') == 'Yes\\n1 4\\n'\nassert solution('1\\n1\\n1\\n') == 'No\\n'\nassert solution('1\\n1\\n1\\n') == 'Yes\\n1 1 1\\n'\nassert solution('1\\n1\\n1\\n') == 'Yes\\n1 1 1\\n'\nassert solution('1\\n1\\n1\\n') == 'No\\n'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 5') == 'Yes'\nassert solution('1 8 4') == 'Yes'\nassert solution('1 8 4 3') == 'No'\nassert solution('2 7 7 7') == 'Yes'\nassert solution('3 2 3') == 'Yes'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1 0 0\n0 0 0\n0 0 1\n''') == '10101'\nassert solution('''\n1 0 1\n8 8 8\n2 0 3\n''') == '10101'\nassert solution('''\n1 0 2\n4 4 4\n0 0 1\n''') == '10101'\nassert solution('''\n1 0 3\n4 4 4\n0 0 2\n''') == '01100'\nassert solution('''\n1 1 1\n1 1 1\n1 1 1\n''') == '10101'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 0 0\n0 0 0\n0 0 1''') == '''001\n010\n100'''\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 0 0\n0 0 0\n0 0 1''') == '''001\n010\n100'''\n\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''\n\nassert solution('''5 0 0\n5 0 0\n5 0 0\n5 0 0\n5 0 0''') == '''0001\n0000\n1001\n1000\n0100\n'''\n\nassert solution('''1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0''') == '''0011\n0000\n1011\n1000\n1001\n'''\n\nassert solution('''2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2''') == '''0101\n0101\n0101\n0101\n0101\n'''"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1 0 0\n0 0 0\n0 0 1\n\"\"\"\n) == \"\"\"\n001\n010\n100\n\"\"\"\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 0 0\n0 0 0\n0 0 1''') == '010'\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 0\\n0 0 0\\n0 0 1') == '001'\nassert solution('1 0 1\\n8 8 8\\n2 0 3') == '010'\nassert solution('1 0 1\\n0 0 0\\n0 0 1') == '010'\nassert solution('1 0 1\\n0 0 0\\n0 0 1') == '010'\n\n\n\"\"\"\n\"\"\"\n---PART ONE---\n\n\"\"\"\n\"\"\"\n\n-----SOLUTION 1-----\n\"\"\"\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 0 0\\n0 0 0\\n0 0 1\\n') == '001\\n010\\n100'\nassert solution('1 0 1\\n8 8 8\\n2 0 3\\n') == '010\\n011\\n100'\nassert solution('2 0 0\\n0 0 0\\n0 0 1\\n') == '001\\n010\\n100'\nassert solution('2 0 1\\n0 0 0\\n0 0 1\\n') == '010\\n011\\n100'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == '111\\n111\\n111'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0 0') == '001'\nassert solution('0 0 0') == '000'\nassert solution('0 0 1') == '010'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 0 0\\n0 0 0\\n0 0 1') == '001\\n010\\n100'\nassert solution('1 0 1\\n8 8 8\\n2 0 3') == '010\\n011\\n100'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 0\\n') == '3'\nassert solution('3 1\\n1 1 3 2\\n2 1 3 2\\n') == '5'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 2\\n') == '9'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 1\\n') == '-1'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 2\\n') == '-1'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 0\") == \"3\"\nassert solution(\"2 1\") == \"5\"\nassert solution(\"3 2\") == \"9\"\nassert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"9\"\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0\\n') == '3'\nassert solution('1 1\\n') == '5'\nassert solution('1 1 1 2 2 2\\n') == '9'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 2') == '-1'\nassert solution('3 2\\n1 1 3 2\\n2 1 3 1') == '-1'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0''') == '0'\nassert solution('''1 1''') == '1'\nassert solution('''2 1''') == '2'\nassert solution('''3 1''') == '4'\nassert solution('''4 1''') == '5'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1 1\\n2 2\\n3 3\") == \"3\"\nassert solution(\"1 1\\n1 2\\n2 3\") == \"3\"\nassert solution(\"1 1\\n2 1\\n3 3\") == \"9\"\nassert solution(\"1 1\\n2 1\\n3 1\") == \"3\"\nassert solution(\"1 1\\n2 1\\n3 2\") == \"3\"\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n''') == ''\nassert solution('''3 0\n''') == ''\nassert solution('''3 1\n1 1 3 2\n2 1 3 2\n''') == ''\nassert solution('''3 2\n1 1 3 2\n2 1 3 2\n''') == '3'\nassert solution('''3 2\n1 1 3 2\n2 1 3 1\n''') == '-1'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4') == '3'\nassert solution('1 2 3 4\\n4 3 2 1\\n4 2 1 2') == '9'\nassert solution('1 2 3 4\\n4 3 2 1\\n4 2 1 3\\n3 2 1 2') == '-1'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 0\n\n1 1 3 2\n2 1 3 2\n\n3 1\n1 1 3 2\n2 1 3 1''') == '3'\nassert solution('''3 1\n1 1 3 2\n2 1 3 1''') == '-1'\nassert solution('''3 2\n1 1 3 2\n2 1 3 2\n\n3 1\n1 1 3 2\n2 1 3 1''') == '9'\nassert solution('''3 2\n1 1 3 2\n2 1 3 1\n\n3 1\n1 1 3 2\n2 1 3 1''') == '-1'\nassert solution('''3 2\n1 1 3 2\n2 1 3 1\n\n3 1\n1 1 3 2\n2 1 3 1\n\n3 1\n1 1 3 2\n2 1 3 1''') == '9'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 0''') == '3'\nassert solution('''3 1''') == '5'\nassert solution('''3 2''') == '9'\nassert solution('''3 2''') == '-1'\nassert solution('''3 1''') == '5'\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 0''') == '3'\nassert solution('''3 1''') == '5'\nassert solution('''3 2''') == '-1'\nassert solution('''3 2\n1 1 3 2\n2 1 3 2\n''') == '9'\nassert solution('''3 2\n1 1 3 2\n2 1 3 1\n''') == '-1'\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == \"1/2\"\nassert solution('3 4 7') == \"3/4\"\nassert solution('7 2 4') == \"7/2\"\nassert solution('12 3 4') == \"12/3\"\nassert solution('10 12 3') == \"10/12\"\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '1/1'\nassert solution('3 5 3') == '1/2'\nassert solution('2 2 4') == '1/1'\nassert solution('7 2 4') == '1/7'"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"7/2\"\n\n\"\"\"\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 7 6\\n') == '2/5'\nassert solution('7 2 4\\n') == '7/2'\nassert solution('10 10 10\\n') == '1/10'\nassert solution('1000 1001 1002\\n') == '10/100'\nassert solution('1000 1001 1002\\n') == '10/100'\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3 7 6''') == '2/5'\nassert solution(\n'''7 2 4''') == '7/2'\nassert solution(\n'''8 2 4''') == '8/2'\nassert solution(\n'''9 2 4''') == '9/2'\nassert solution(\n'''12 3 4''') == '12/3'\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'\nassert solution('9 8 7') == '6/5'\nassert solution('9 7 6') == '3/2'\n\n\"\"\"\n\nx, y, n = map(int, stdin.strip().split(' '))\n\ndenominator = x * y\nmin_diff = x * y\n\nfor i in range(x + 1, n + 1):\n    for j in range(i * y, n + 1, i):\n        current_diff = abs(i / j - x / y)\n        if current_diff < min_diff:\n            min_diff = current_diff\n            numerator = j\n            denominator = i\n\nprint(str(denominator) + '/' + str(numerator))\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 7 6\\n') == '2/5'\nassert solution('7 2 4\\n') == '7/2'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7 3 4\n3 4 6\n1 2\n2 5\n5 7\n7 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5 1 2\n2\n1 2\n2 4\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n10 3 5\n8 7 9\n10 7 9\n7 8 9\n9 8 9\n8 9 9\n8 9 9\n9 8 9\n9 8 9\n9 8 9\n9 8 9\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n3 3 2\n1\n2\n1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 3 3\n3\n2\n1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 2') == '2'\nassert solution('7 1 2') == '1'\nassert solution('7 2 4') == '1'\nassert solution('7 3 4') == '2'\nassert solution('7 3 4 5') == '3'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 1 2\\n2\\n1 2\\n2 4') == '1'\nassert solution('5 1 2\\n2\\n1 2\\n2 4') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n2 3') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n2 3\\n2 3\\n2 3') == '2'\nassert solution('7 1 2\\n2\\n1 2\\n2 4') == '1'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 1 2\n2\n1 2\n2 4''') == '2'\nassert solution('''7 1 2\n2\n1 2\n2 4\n1 1\n2''') == '2'\nassert solution('''7 1 2\n2\n1 2\n2 4\n1 1\n2''') == '2'\nassert solution('''7 1 2\n2\n1 2\n2 4\n1 1\n4''') == '2'\nassert solution('''7 1 2\n2\n1 2\n2 4\n1 1\n3''') == '2'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 5\\n3 4 6\\n1 2\\n2 5\\n5 7\\n7 1\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('7 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('7 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 3 4\\n3 4 6\\n1 2\\n2 5\\n5 7\\n7 1') == '1'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n') == '2'\nassert solution('5 1 2\\n2\\n1 2\\n2 4\\n5 7\\n7 1') == '2'\n\nprint(solution('7 3 4\\n3 4 6\\n1 2\\n2 5\\n5 7\\n7 1'))\nprint(solution('5 1 2\\n2\\n1 2\\n2 4\\n'))\nprint(solution('5 1 2\\n2\\n1 2\\n2 4\\n5 7\\n7 1'))\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout\nn, m, k = map(int, stdin.readline().split())\ncups = list(map(int, stdin.readline().split()))\nholes = list(map(int, stdin.readline().split()))\n\nfor _ in range(k):\n    x, y = map(int, stdin.readline().split())\n    x -= 1\n    y -= 1\n    tmp = cups[x]\n    cups[x] = cups[y]\n    cups[y] = tmp\n    tmp = holes[x]\n    holes[x] = holes[y]\n    holes[y] = tmp\n\nsolution = 1\nfor hole in holes:\n    solution = max(solution, hole)\n\nprint(solution)\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3 4\n3 4 6\n1 2\n2 5\n5 7\n7 1''') == '1'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\n\n'''\n\n'''"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str\n\n\"\"\""
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5 1') == '3 4'\nassert solution('2 1 1') == '0 0'\nassert solution('2 1 2') == '1 1'\nassert solution('2 1 3') == '1 1'\nassert solution('2 1 4') == '2 2'\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1''') == '3 14'\nassert solution('''4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '3 14'\nassert solution('''4\n3\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '2 22'\nassert solution('''7\n3\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '4 30'\nassert solution('''7\n3\n5 USB\n6 PS/2\n3 PS/2\n4 PS/2\n7 PS/2''') == '1 36'\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '3 14'\nassert solution('2 1 1') == '0 11'\nassert solution('1 2 1') == '2 11'\nassert solution('1 1 1') == '3 14'\nassert solution('1 1 1') == '3 14'\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 1\\n4\\n5 USB\\n6 PS/2\\n3 PS/2\") == \"3 14\"\nassert solution(\"1 1 1\\n2\\n3 USB\\n4 PS/2\\n5 USB\\n6 PS/2\") == \"2 19\"\nassert solution(\"3 5 2\\n3\\n2 USB\\n5 PS/2\\n4 USB\\n5 PS/2\") == \"1 11\"\nassert solution(\"1 4 1\\n4\\n1 USB\\n2 PS/2\\n5 USB\\n6 PS/2\") == \"4 14\"\nassert solution(\"4 2 1\\n1\\n1 USB\\n2 PS/2\\n1 USB\\n2 PS/2\") == \"2 19\"\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2''') == '3 14'\nassert solution('''2 1 1\n4\n4 PS/2\n5 USB\n6 PS/2''') == '3 6'\nassert solution('''2 1 1\n4\n5 PS/2\n5 USB\n6 PS/2''') == '5 10'\nassert solution('''2 1 1\n4\n6 PS/2\n5 USB\n6 PS/2''') == '5 10'\nassert solution('''2 1 1\n4\n7 PS/2\n5 USB\n6 PS/2''') == '5 15'\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\nassert solution('aabbc') == 2\nassert solution('aa') == 2\nassert solution('ab') == 2\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\nassert solution('aa') == 51\nassert solution('ba') == 76\nassert solution('ba') == 76\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abc') == 51\nassert solution('hi') == 76\nassert solution('ab') == 51\nassert solution('ba') == 51\nassert solution('ca') == 51\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"51\"\n\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\nassert solution('abc') == 26\nassert solution('abcde') == 26\nassert solution('abcdef') == 26\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"a\") == 1\nassert solution(\"ab\") == 3\nassert solution(\"hi\") == 76\nassert solution(\"aabb\") == 1\nassert solution(\"aa\") == 1\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hi') == 76\nassert solution('a') == 51\nassert solution('ab') == 51\nassert solution('abc') == 76\nassert solution('abcde') == 51\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"a\") == 51\nassert solution(\"hi\") == 76\nassert solution(\"akjb\") == 51\nassert solution(\"akjh\") == 76\nassert solution(\"akjdf\") == 51\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\nassert solution('a' * 20) == 26\n\n\n\n\"\"\"\n\nimport sys\nsys.path.append(\"../../../\")\nfrom brian2.units import ms, mV\nfrom brian2 import *\nimport numpy as np\nimport os\n\nfrom pycode.standard_models import *\nfrom pycode.neuron_models import *\nfrom pycode.helpers import *\nfrom pycode.rate_functions import *\nfrom pycode.equations import *\n\n\nclass Gyotaku(Network):\n    def __init__(self, nrns, eqs_neurons, eqs_synapses, stdout_msgs=True):\n        super(Gyotaku, self).__init__(eqs_neurons, eqs_synapses)\n        self.nrns = nrns\n        self.stdout_msgs = stdout_msgs\n        self.ranges = {'k': [0.2, 3.0]}\n        self.params = {'cm' : 100*msiemens,\n                       'v_thresh' : -50*mV,\n                       'k' : 0.05*msiemens/volt}\n        self.init_rates()\n        self.init_neuron_groups()\n        self.init_synapses()\n        self.init_monitors()\n\n    def init_rates(self):\n        self.rates = {'k' : 0*Hz}\n\n    def init_neuron_groups(self):\n        self.neurons = NeuronGroup(self.nrns,\n                                    model=eqs_neurons,\n                                    threshold='v>=v_thresh',\n                                    reset=eqs_neurons_reset,\n                                    refractory=2*ms,\n                                    method='euler')\n        self.neurons.v = -65*mV\n        self.neurons.k = self.params['k']\n        self.add(self.neurons)\n\n    def init_synapses(self):\n        self.synapses = Synapses(self.neurons, self.neurons,\n                                 on_pre='g_i += 0.1*(v_post-v_pre)',\n                                 method='euler')\n        self.synapses.connect(condition='i!= j', p=0.2)\n        self.synapses.delay = 'rand()*0.5*ms + 3*ms'\n        self.add(self.synapses)\n\n    def init_monitors(self):\n        self.mon = SpikeMonitor(self.neurons)\n\n    def simulate(self, runtime, report=False):\n        if report:\n            self.neurons.v = -65*mV\n            self.neurons.k = self.params['k']\n            self.synapses.k = self.params['k']\n        run(runtime*second, report=report, report_period=100*ms)\n\n    def get_rates(self):\n        return self.rates\n\n    def get_spike_counts(self):\n        return self.mon.num_spikes\n\n    def get_ranges(self):\n        return self.ranges\n\n    def get_neuron_spike_counts(self):\n        return {'k' : self.mon.nspikes_i[0]}\n\n    def get_neuron_mon_indices(self, neuron_type):\n        return {'k' : 0}\n\n    def get_neuron_v_thresh(self, neuron_type):\n        return -50*mV\n\n    def get_neuron_ranges(self, neuron_type):\n        return {'k' : [0.2, 3.0]}\n\n\nclass GyotakuTest(object):\n    def __init__(self):\n        self.s = 'a' * 10\n        self.nrns = len(self.s)\n        self.eqs_neurons = '''\n                                v : volt\n                                k : siemens/volt\n                                dv/dt = (-v/ms) : volt\n                                dv/dt = -k*v/ms : volt\n                            '''\n        self.eqs_synapses = '''\n                                w : 1\n                                p : 1\n                                dw/dt = -w/ms : 1\n                                dw/dt = -p*w/ms : 1\n                            '''\n        self.network = Gyotaku(self.nrns, self.eqs_neurons, self.eqs_synapses, stdout_msgs=False)\n        self.init_params()\n        self.init_rates()\n        self.init_monitors()\n\n    def init_params(self):\n        pass\n\n    def init_rates(self):\n        self.rates = {'k' : 0*Hz}\n\n    def init_monitors(self):\n        self.mon = SpikeMonitor(self.network.neurons)\n\n    def get_ranges(self):\n        return self.network.ranges\n\n    def get_neuron_spike_counts(self):\n        return self.mon.nspikes_i[0]\n\n    def get_neuron_mon_indices(self, neuron_type):\n        return {'k' : 0}\n\n    def get_neuron_v_thresh(self, neuron_type):\n        return -50*mV\n\n    def get_neuron_ranges(self, neuron_type):\n        return self.network.ranges[neuron_type]\n\n    def get_rates(self):\n        return self.rates\n\n    def get_spike_counts(self):\n        return self.mon.num_spikes\n\n    def get_neuron_type(self):\n        return 'k'\n"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 1\nassert solution('ab') == 2\nassert solution('abca') == 3\nassert solution('abcaabca') == 4\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 0') == '9'\nassert solution('3 1') == '1'\nassert solution('3 2') == '0'\nassert solution('4 2') == '3'\nassert solution('5 3') == '6'\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 1') == '3'\nassert solution('5 0') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 1\") == \"0\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 1\") == \"3\"\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 0\") == \"9\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('3') == ''\nassert solution('2') == '1'\nassert solution('10') == '3'\nassert solution('100') == '23'\n\n\n-----"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2''') == '1'\nassert solution('''10''') == '3'\nassert solution('''50''') == '8'\nassert solution('''120''') == '12'\nassert solution('''1000''') == '20'\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('10') == '3'\n'''\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == '1'\nassert solution('10') == '3'\nassert solution('abc') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\n\nMAX_NUMBER = 10 ** 5"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\n\nprint(solution(''))\n\"\"\"\nimport sys"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\nassert solution('-5') == '0'\nassert solution('1') == '0'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('0') == '1'\nassert solution('1') == '2'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '0840'\n) == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution(\n    '0923'\n) == '0 9 2 3 1 2 3 2 3 2 2 2 1'\nassert solution(\n    '1000000'\n
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == solution(input())\n\"\"\"\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('01') == '1'\nassert solution('001') == '2'\nassert solution('01000') == '3'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"7 6 8\") == \"-1 17 7 7 7 -1 2 17 2 7\"\nassert solution(\"6 7 8\") == \"-1 17 7 7 7 -1 2 17 2 7\"\nassert solution(\"7 6 8\") == \"-1 17 7 7 7 -1 2 17 2 7\"\nassert solution(\"8 7 8\") == \"-1 17 7 7 7 -1 2 17 2 7\"\nassert solution(\"8 8\") == \"-1 17 7 7 7 -1 2 17 2 7\"\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n\"\"\"\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '-1'\nassert solution('0840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('08402') == '-1 17 7 7 7 -1 2 17 2 7'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(0840) == '-1 17 7 7 7 -1 2 17 2 7'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0600') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0210') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0657') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0642') == '-1 17 7 7 7 -1 2 17 2 7'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == input()\n\n\"\"\""
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"BBBBBBWW\") == \"YES\"\nassert solution(\"BWBWBWBW\") == \"YES\"\nassert solution(\"BWBWBWBW\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"YES\"\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB') == 'YES'\nassert solution('WBWBWBWB\\nBWBWBWBW\\nBWBWBWBW\\nBWBWBWBW\\nWBWBWBWB\\nWBWBWBWB\\nBWBWBWBW\\nWBWBWBWB') == 'NO'\n\n\"\"\"\n\nimport sys\nfrom collections import Counter\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''WBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\n''') == 'NO'\nassert solution('''BBBBBBWW\nWBBBBBBW\nBWBWBWBW\nBWBWBWBW\nBBBBBBWW\nWWWWWWWW\nWWWWWWWW\nBBBBBBWW\n''') == 'YES'\nassert solution('''BBBBBBWW\nWWWWWWWW\nWWWWWWWW\nBBBBBBWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nBBBBBBWW\n''') == 'NO'\nassert solution('''WWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nBBBBBBWW\n''') == 'NO'\nassert solution('''WWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\n''') == 'YES'\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\n\"\"\"\n) == \"NO\"\nassert solution(\n\"\"\"\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nWWWWWWWW\nWWWWWWWW\nBBBBBBWW\nBBBBBBWW\n\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"\nBBBBBBWW\nWWWWWWWW\nBBBBBBWW\nWWWWWWWW\nBBBBBBWW\nWWWWWWWW\nBBBBBBWW\nBBBBBBWW\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('WBWBWBWB') == 'YES'\nassert solution('WBWBWBWB') == 'NO'\nassert solution('BWBWBWBW') == 'YES'\nassert solution('BWBWBWBW') == 'NO'\nassert solution('WBWBWBWB') == 'NO'\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\nassert solution(\"BWBWBWBW\") == \"NO\"\nassert solution(\"BWBWBWBW\") == \"NO\"\nassert solution(\"WWWWWWWW\") == \"YES\"\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"WBWBWBWB\") == \"YES\"\nassert solution(\"WBWBWBWB\") == \"NO\"\nassert solution(\"BWBWBWBW\") == \"YES\"\nassert solution(\"BWBWBWBW\") == \"NO\"\nassert solution(\"WBWBWBWB\") == \"NO\"\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\n''') == \"YES\"\n\nassert solution('''\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\n''') == \"NO\"\n\nassert solution('''\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\nBBBBBBWW\n''') == \"YES\"\n\nassert solution('''\nWWWWWWWW\nWBBBBBWW\nWWWWWWWW\nWBBBBBWW\nWWWWWWWW\nWBBBBBWW\nWWWWWWWW\nWBBBBBWW\nWWWWWWWW\n''') == \"NO\"\n\nassert solution('''\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\n''') == \"YES\""
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('WBWBWBWB') == 'YES'\nassert solution('WBWBWBWB') == 'NO'\nassert solution('BWBWBWBW') == 'YES'\nassert solution('BWBWBWBW') == 'NO'\nassert solution('WBWBWBWB') == 'NO'\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nWBWBWBWB\nWBWBWBWB\nBWBWBWBW\nWBWBWBWB\n\"\"\"\n) == 'NO'\n\nassert solution(\n\"\"\"\nBWBWBWBW\nWBWBWBWB\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\nBWBWBWBW\n\"\"\"\n) == 'YES'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 4 6 12') == '3\\n4 6 12'\nassert solution('2\\n2 3') == '-1'\nassert solution('3\\n2 3') == '-1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 4 6 12\n''') == '3\\n4 6 12'\nassert solution('''2\n2 3\n''') == '-1'\nassert solution('''2\n5 7\n''') == '2\\n5 7'\nassert solution('''2\n6 7\n''') == '2\\n6 7'\nassert solution('''2\n4 6\n''') == '2\\n4 6'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n4 6\\n') == '3\\n4 6 12'\nassert solution('1\\n1\\n') == '-1'\nassert solution('4\\n2 4 6 12\\n') == '3\\n4 6 12'\nassert solution('2\\n2 3\\n') == '-1'\nassert solution('1\\n2\\n') == '-1'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 6 12\") == \"3 6 12\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"10 10\") == \"-1\""
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 4 6 12''') == '3\\n4 6 12'\nassert solution('''2\n2 3''') == '-1'\nassert solution('''4\n7 10 9 6''') == '3\\n7 10 9'\nassert solution('''1\n1''') == '-1'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2\n2 3''') == '-1'\nassert solution('''4\n2 4 6 12''') == '3 4 6 12'\nassert solution('''1\n1''') == '-1'\nassert solution('''10\n17''') == '7 11 17'\nassert solution('''10\n1000000000''') == '7 11 1000000000'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 4 6 12''') == '3'\nassert solution('''2\n2 3''') == '-1'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3\\n') == '-1'\nassert solution('3\\n3 3\\n') == '3\\n3 3'\nassert solution('4\\n4 4\\n4 4\\n4 4\\n') == '4\\n4 4\\n4 4'\nassert solution('1\\n1 1\\n') == '-1'\nassert solution('2\\n2 3\\n') == '3\\n3 3'\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"-1\"\n"
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 2 1') == '3 2 0 2 0'\nassert solution('4\\n3 2 1 4') == '2 3 4 0 0'\nassert solution('4\\n1 2 3 4') == '0 0 0 0'\nassert solution('5\\n1 2 3 1 2') == '3 2 0 2 0'\nassert solution('6\\n1 2 3 1 2 3') == '3 2 0 2 0 3'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 1 2') == '3 2 0 2 0'\nassert solution('3\\n1 2 3 1') == '3 2 0 2 0'\nassert solution('5\\n1 2 3 1 2') == '3 2 0 2 0 2'\nassert solution('5\\n1 2 3 1 4') == '2 3 4 0 0'\nassert solution('10\\n1 2 3 1 2 3 4 1 2 3 4 5') == '2 3 4 0 0 2 0 4 0 4'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 1 2') == '3 2 0 2 0'\nassert solution('5\\n3 2 1 4') == '2 3 4 0'\nassert solution('6\\n2 3 1 4 5 6') == '0 0 0 0 0'\nassert solution('6\\n2 3 1 4 5 6') == '0 0 0 0 0'\nassert solution('7\\n2 3 1 4 5 6 7') == '0 0 0 0 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n2') == '3'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5\n1 2 3 1 2\n'''\n) == '3 2 0 2 0 '\n\nassert solution(\n'''4\n3 2 1 4\n'''\n) == '2 3 4 0 '\n\nassert solution(\n'''\n5\n3 2 1 4\n'''\n) == '2 3 4 0 '\n\nassert solution(\n'''\n100\n
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 1 2\\n\") == \"3 2 0 2 0\"\nassert solution(\"4\\n3 2 1 4\\n\") == \"2 3 4 0\"\n\n\n\"\"\"\nn = int(input())\n\na = list(map(int, input().split()))\n\nans = [0] * n\n\nfor i in range(n):\n    if a[i] > n - i:\n        ans[i] = n - i\n    else:\n        ans[i] = a[i]\n\nfor i in range(n):\n    print(ans[i], end=\" \")\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n') == '3 2 0'\nassert solution('2\\n1 2 3\\n') == '3 2 0 2'\nassert solution('2\\n1 2 2\\n') == '2 3 0 2'\nassert solution('2\\n1 2 3 2\\n') == '2 3 4 0'\nassert solution('4\\n3 2 1 4\\n') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3 1 2\\n') == '3 2 0 2 0'\nassert solution('2\\n1 2 3 1 2\\n') == '2 3 4 0'\nassert solution('2\\n3 2 1 4\\n') == '2 3 4 0'\nassert solution('1\\n1\\n') == '0'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n5\n1 2 3 1 2\n''') == '3 2 0 2 0'\nassert solution('''\\\n4\n3 2 1 4\n''') == '2 3 4 0'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"2 3 4 0\"\nassert solution(\"5\\n1 2 3 1 2\") == \"3 2 0 2 0\"\nassert solution(\"10\\n3 2 1 4 3 2 1 5 2\") == \"2 3 4 0 2 0 0 2 0 2 0 2 0 2 0\"\nassert solution(\"10\\n1 2 3 1 2\") == \"2 3 4 0 2 0 0 2 0 2 0 2 0 2 0\"\n\n\n\"\"\""
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 162') == 'YES\\n5\\n2 4 8 81 162'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES\\n5\\n100 200 2001 4002 40021'"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 162\") == \"YES\"\nassert solution(\"4 42\") == \"NO\"\nassert solution(\"100 40021\") == \"YES\"\nassert solution(\"100 200 19 4002 40021\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 162\") == \"YES\"\nassert solution(\"4 42\") == \"NO\"\nassert solution(\"100 40021\") == \"YES\"\nassert solution(\"100 76521\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 162') == 'YES\\n5\\n2 4 8 81 162'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES\\n5\\n100 200 2001 4002 40021'\nassert solution('5 60') == 'NO'\nassert solution('2 1011') == 'NO'\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 162') == 'YES\\n5\\n2 4 8 81 162'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES\\n5\\n100 200 2001 4002 40021'\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 162') == 'YES\\n5'\nassert solution('4 42') == 'NO'\nassert solution('100 40021') == 'YES\\n5'\nassert solution('100 201') == 'NO'\nassert solution('1 1000000') == 'NO'\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 162\") == \"YES\\n5\\n2 4 8 81 162\"\nassert solution(\"4 42\") == \"NO\\n\"\nassert solution(\"100 40021\") == \"YES\\n5\\n100 200 2001 4002 40021\""
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 162''') == '''YES\n5'''\nassert solution('''4 42''') == '''NO'''\nassert solution('''100 40021''') == '''YES\n5\n100 200 2001 4002 40021'''\nassert solution('''4 4 2 1''') == '''YES\n5\n2 4 8 81 162'''\nassert solution('''5 2 1''') == '''NO'''\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 162''') == 'YES\\n5'\nassert solution('''4 42''') == 'NO'\nassert solution('''100 40021''') == 'YES\\n5\\n100 200 2001 4002 40021'\nassert solution('''2 2''') == 'YES\\n2'\nassert solution('''7 7''') == 'NO'\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 162') == \"YES\"\nassert solution('4 42') == \"NO\"\nassert solution('100 40021') == \"YES\"\nassert solution('10 1') == \"NO\"\nassert solution('1 1') == \"YES\"\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1 1 1') == '1 1 1'\nassert solution('3 4 5') == '18'\nassert solution('2 4 4') == '16'\nassert solution('3 3 3') == '18'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1 1') == '0 0 0'\nassert solution('2 2 2') == '0 0 0'\nassert solution('3 3 3') == '0 0 0'\nassert solution('4 4 4') == '0 0 0'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5 3') == '18\\n6 4\\n'\nassert solution('2 4 4') == '16\\n4 4\\n'\nassert solution('2 2 1') == '0\\n0 0\\n'\nassert solution('1 1 2') == '0\\n0 0\\n'\nassert solution('1 1 1') == '0\\n0 0\\n'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4 4') == '16\\n4 4'\nassert solution('3 3 5') == '18\\n3 6'\nassert solution('2 4 4') == '16\\n4 4'\nassert solution('1000000 9999999 1') == '10485863\\n9 9'\nassert solution('1000000 9999999 2') == '10485863\\n10 9'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"18\"\nassert solution(\"1 1 1\") == \"16\"\nassert solution(\"1 1 1 1 1 1\") == \"16\"\nassert solution(\"1 1 1 1 1 1 1 1\") == \"16\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1\") == \"16\"\n\n\"\"\""
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 5') == '18 3 6'\nassert solution('2 4 4') == '16 4 4'\nassert solution('1 1 1') == '1 1 1'\nassert solution('5 5 5') == '1 1 1'\nassert solution('10 1 10') == '9 2 2'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 5') == '18\\n3 6\\n'\nassert solution('2 4 4') == '16\\n4 4\\n'\nassert solution('3 5 4') == '18\\n3 4\\n'\nassert solution('5 10 10') == '18\\n10 8\\n'\nassert solution('10 100 10') == '18\\n8 16\\n'\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n-7 1\n5 2\n8 2\"\"\") == \"1907\"\nassert solution(\"\"\"2\n57 1\n22 2\"\"\") == \"Impossible\"\nassert solution(\"\"\"1\n-5 1\n\"\"\") == \"Infinity\"\nassert solution(\"\"\"4\n27 2\n13 1\n-50 1\n8 2\"\"\") == \"1897\"\nassert solution(\"\"\"9\n36 17\n38 19\n41 19\n38 19\n37 17\n38 19\n39 19\n38 19\n39 19\n\"\"\") == \"1949\"\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n-7 1\n5 2\n8 2''') == '1907'\n\nassert solution(\n'''2\n57 1\n22 2''') == 'Impossible'\n\nassert solution(\n'''1\n-5 1''') == 'Infinity'\n\nassert solution(\n'''4\n27 2\n13 1\n-50 1\n8 2''') == '1897'\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == 'Infinity'\nassert solution('57 1') == 'Impossible'\nassert solution('27 2') == '1897'\nassert solution('-13 1') == 'Impossible'\nassert solution('1') == 'Infinity'\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('1') == 'Infinity'\nassert solution('-5') == 'Infinity'\nassert solution('4') == '1897'\nassert solution('-7 1') == '1907'\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n-5 1') == 'Infinity'\nassert solution('2\\n-4 1') == 'Impossible'\nassert solution('2\\n-5 1') == 'Infinity'\nassert solution('2\\n-5 1\\n-5 1') == 'Impossible'\nassert solution('2\\n-5 1\\n-5 1\\n-5 1') == 'Impossible'\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n27 2\\n13 1\\n-50 1\\n8 2\") == \"1897\"\nassert solution(\"1\\n-5 1\\n\") == \"Infinity\"\nassert solution(\"4\\n57 1\\n22 2\\n\") == \"Impossible\"\nassert solution(\"2\\n57 1\\n22 2\\n\") == \"1897\"\n\"\"\"\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == 'Infinity'\nassert solution('-7 1') == 'Infinity'\nassert solution('5 2') == '1907'\nassert solution('8 2') == '1897'\nassert solution('2') == 'Impossible'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabc''') == \"NO\"\nassert solution('''1\nabca''') == \"YES\"\nassert solution('''2\naaacas''') == \"YES\"\nassert solution('''5\nabcde''') == \"NO\"\nassert solution('''6\nabcdea''') == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"YES\"\nassert solution(\"aaacas\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"abcde\") == \"NO\"\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"YES\"\nassert solution(\"aaacas\") == \"YES\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"aabbcc\") == \"YES\"\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n1\nabca\n''') == 'YES'\nassert solution('''\n2\naaacas\n''') == 'YES'\nassert solution('''\n4\nabc\n''') == 'NO'\nassert solution('''\n4\nabca\n''') == 'YES'\nassert solution('''\n3\nbaa\n''') == 'YES'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aaacas') == 'YES'\nassert solution('abc') == 'NO'\nassert solution('abca') == 'YES'\nassert solution('aabcc') == 'YES'\nassert solution('aabcaa') == 'YES'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\nabca''') == 'YES'\nassert solution('''2\naaacas''') == 'YES'\nassert solution('''4\nabc''') == 'NO'\nassert solution('''3\nabcabcabc''') == 'YES'\nassert solution('''4\nabcaaa''') == 'YES'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abca') == 'YES'\nassert solution('aaacas') == 'YES'\nassert solution('abc') == 'NO'\nassert solution('a') == 'NO'\nassert solution('aba') == 'YES'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\nabca\n''') == 'YES\\nabca'\n\nassert solution('''2\naaacas\n''') == 'YES\\naaa\\ncas'\n\nassert solution('''3\nabc\n''') == 'NO'\n\nassert solution('''4\nabc\n''') == 'NO'\n\nassert solution('''5\nabc\n''') == 'NO'"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abca') == 'YES\\nabca'\nassert solution('aaacas') == 'YES\\naaa\\nas'\nassert solution('abc') == 'NO'\n\n'''\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\nabca') == 'YES\\nabca'\nassert solution('2\\naaacas') == 'YES\\naaa\\ncas'\nassert solution('4\\nabc') == 'NO'\nassert solution('1\\nabc') == 'YES\\nabc'\n\"\"\"\nfrom typing import List\nimport sys\nsys.path.append('..')\nfrom utils import timeit\n\n@timeit\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A232726') == 22\nassert solution('A223635') == 22\nassert solution('A221033') == 21\nassert solution('A129927') == 11\n\"\"\"\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\nassert solution('A243421') == 22\nassert solution('A243515') == 22\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"A221033\") == 21\nassert solution(\"A223635\") == 22\nassert solution(\"A232726\") == 23\nassert solution(\"A221032\") == 22\nassert solution(\"A022543\") == 22\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"A221033\") == 21\nassert solution(\"A223635\") == 22\nassert solution(\"A232726\") == 23\nassert solution(\"A123456\") == 123456\nassert solution(\"A1234567\") == 1234567\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"A221033\") == 21\nassert solution(\"A223635\") == 22\nassert solution(\"A232726\") == 23\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"A221033\") == 21\nassert solution(\"A223635\") == 22\nassert solution(\"A232726\") == 23\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\nassert solution('ABCDEF') == -1\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\nassert solution('A223438') == 21\nassert solution('A223338') == 22\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\nprint(\"Tests passed\")\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"744\") == \"2\"\nassert solution(\"7647\") == \"6\"\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution(' ') ==''\nassert solution('  ') ==''\nassert solution('\\n') == '\\n'\nassert solution('asdf') == '\\n'\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'\n\nprint('All test cases passed.')\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '1'\nassert solution('''7''') == '2'\nassert solution('''77''') == '6'\n\nassert solution('''987''') == '8'\nassert solution('''567''') == '2'\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n''') == '1'\nassert solution('''7\n''') == '2'\nassert solution('''77\n''') == '6'\nassert solution('''9\n''') == '7'\nassert solution('''10\n''') == '8'\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('77') == '6'\nassert solution('7778') == '6'\nassert solution('7779') == '7'\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n7\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n77\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n5\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n99\n\"\"\"\n) == \"7\""
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('0') == '1'\nassert solution('4') == '1'\nassert solution('47') == '1'\nassert solution('744') == '2'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '35'\nassert solution('5 3\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '34'\nassert solution('4 5\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '34'\nassert solution('5 4\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '34'\nassert solution('2 2\\n2 1\\n1 1\\n') == '0'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('2 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n3 5 6 7 1 10') == '25'\nassert solution('2 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n3 5 6 7 1 10\\n3 5 6 7 1 10') == '35'\nassert solution('2 2\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n3 5 6 7 1 10\\n3 5 6 7 1 10') == '25'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 1') == '35'\nassert solution('5 6 7 8 10 2') == '35'\nassert solution('3 5 6 7 1 10') == '25'\nassert solution('6 1') == '35'\nassert solution('5 6 7 8 10 2') == '35'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '35'\nassert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '35'\nassert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10\\n') == '35'\n\n\"\"\""
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('4 2\\n1 2 2 1\\n1 3 2 1') == '4'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n\"\"\") == \"35\"\nassert solution(\"\"\"5 1\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n5 5 5 5 5 5\n\"\"\") == \"25\"\nassert solution(\"\"\"6 1\n5 6 7 8 10 2\n3 5 6 7 1 10\n\"\"\") == \"35\"\nassert solution(\"\"\"6 1\n5 6 7 8 10 2\n5 5 6 7 1 10\n\"\"\") == \"35\"\nassert solution(\"\"\"6 1\n5 6 7 8 10 2\n5 5 6 7 1 10\n\"\"\") == \"35\"\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"35\"\n\"\"\"\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('3 5 6 7 1 10\\n5 6 7 8 10 2\\n3 4 9 1 10') == '25'\n\"\"\"\n\nimport sys\nfrom math import ceil"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"35\"\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('6 1\\n5 6 7 8 10 2\\n3 5 6 7 1 10') == '35'\nassert solution('5 2\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '5'\nassert solution('3 2\\n1 2 3\\n1 2 3\\n1 2 3') == '3'\nassert solution('2 2\\n1 2\\n1 2') == '1'\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('111010') == 3\nassert solution('01111') == 4\nassert solution('10001') == 3\nassert solution('1111') == 4\nassert solution('1110') == 1\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"1100\") == \"3\"\nassert solution(\"1111\") == \"4\"\nassert solution(\"0001\") == \"2\"\nassert solution(\"001\") == \"1\"\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\n\n\"\"\""
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"4\") == 4\nassert solution(\"1100\") == 3\nassert solution(\"1111\") == 4\nassert solution(\"110000\") == 3\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4') == '3'\nassert solution('1100') == '3'\nassert solution('1101') == '4'\nassert solution('1111') == '4'\nassert solution('1110') == '4'\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1100') == '3'\nassert solution('1111') == '4'\nassert solution('1101') == '4'\nassert solution('0011') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n\"\"\"\nfrom __future__ import annotations\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '3'\nassert solution('1111') == '4'\nassert solution('100') == '1'\nassert solution('0') == '0'\nassert solution('11101') == '4'\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('111') == 1\nassert solution('1111') == 1\nassert solution('1') == 1\nassert solution('0') == 0\n"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1100') == '3'\nassert solution('1111') == '4'\nassert solution('111') == '3'\nassert solution('1111111') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10\\n-1 5 0 -5 3') == '0'\nassert solution('3 4\\n-10 0 20') == '-1'\nassert solution('5 10\\n-5 0 10 -11 0') == '2'\nassert solution('1000000 10\\n0') == '1'\nassert solution('1000000 10\\n-1000000') == '1000000'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-1 5 0 -5 3') == '0'\nassert solution('3 4') == '-1'\nassert solution('-10 0 20') == '0'\nassert solution('-5 0 10 -11 0') == '2'\nassert solution('0 0 0 0 0') == '0'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 10\\n-1 5 0 -5 3\") == \"0\"\nassert solution(\"3 4\\n-10 0 20\") == \"-1\"\nassert solution(\"5 10\\n-5 0 10 -11 0\") == \"2\"\nassert solution(\"5 10\\n-5 0 10 -5 0\") == \"-1\"\nassert solution(\"5 10\\n-5 0 10 -5 0\") == \"-1\"\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('-1 5 0 -5 3') == '0'\nassert solution('-1 5 0 -5 3') == '-1'\nassert solution('-1 5 0 -5 3') == '0'\nassert solution('-1 5 0 -5 3') == '-1'\nassert solution('-1 5 0 -5 3') == '0'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10\\n-1 5 0 -5 3\\n') == '0'\nassert solution('3 4\\n-10 0 20\\n') == '-1'\nassert solution('5 10\\n-5 0 10 -11 0\\n') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-1 5 0 -5 3''') == '0'\nassert solution('''-1 0 10 -11 0''') == '-1'\nassert solution('''-1 5 0 -5 3''') == '0'\nassert solution('''-1 0 10 -11 0''') == '-1'\nassert solution('''-10 0 20''') == '0'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0'\nassert solution('2 3') == '-1'\nassert solution('2 2') == '1'\nassert solution('3 0') == '1'\nassert solution('3 2') == '-1'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 10\n-1 5 0 -5 3''') == '0'\nassert solution('''3 4\n-10 0 20''') == '-1'\nassert solution('''5 10\n-5 0 10 -11 0''') == '2'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '3'\nassert solution('''1 3''') == '1'\nassert solution('''3 1''') == '1'\nassert solution('''10 5''') == '2'\nassert solution('''2 3''') == '0'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 1') == '2'\nassert solution('1 2 3') == '2'\nassert solution('2 1') == '2'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3\\n3 1') == '3'\nassert solution('2 2\\n1 3\\n3 1') == '3'\n\"\"\"\n\nfrom __future__ import annotations\n\nimport sys\n\nMAX_NUM = 10 ** 5\n\nT, N = [int(x) for x in sys.stdin.readline().split()]\nS = [int(x) for x in sys.stdin.readline().split()]\nT = [int(x) for x in sys.stdin.readline().split()]\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3\\n') == '3'\nassert solution('2 2\\n1 3\\n3 1\\n') == '3'\nassert solution('2 1\\n1\\n') == '0'\nassert solution('3 1\\n1\\n') == '1'\nassert solution('2 2\\n1 3\\n1 3\\n') == '1'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 3\\n3 1') == '3'\nassert solution('3 2\\n1 3\\n3 1') == '1'\nassert solution('1 3\\n1 3\\n1 3') == '0'\nassert solution('1 2\\n3 1\\n3 1') == '1'\nassert solution('1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''5 3\n1 5 5 3 4\n4 2 5 6 1\n1 1 3 2 3''') == '4'\nassert solution('''8 4\n1 8 4 5 6 7 8 8 4 6\n2 2 2 2 2 1 1 2 1''') == '6'\nassert solution('''100 5\n
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"3 1\") == \"0\"\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 3\\n3 1\") == \"3\"\nassert solution(\"2 1\\n1 3\\n3 1\") == \"1\"\nassert solution(\"2 2\\n1 3\\n3 1\") == \"0\"\nassert solution(\"2 3\\n1 3\\n3 1\") == \"1\"\nassert solution(\"2 3\\n1 3\\n3 1\") == \"0\"\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''2 2\n1 3\n1 3\n''') == '3'\nassert solution('''2 2\n1 3\n2 1''') == '2'\nassert solution('''2 2\n1 3\n3 1\n2 1\n''') == '3'\nassert solution('''2 2\n1 3\n1 3\n2 1\n''') == '2'\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '-1'\n\"\"\""
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n1 2 2 1 3 1\n''') == '2 1 3 1 1 2'\nassert solution(\n'''1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3\n1 2 2 1 3 1'''\n) == '2 1 3 1 1 2'\n\nassert solution(\n'''1\n1 1'''\n) == '-1'\n\nassert solution(\n'''1\n1 2'''\n) == '-1'\n\nassert solution(\n'''1\n1'''\n) == '-1'\n\nassert solution(\n'''1\n2'''\n) == '-1'"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n\" +\n    \"1 2 2 1 3 1\\n\"\n) == \"2 1 3 1 1 2\"\n\nassert solution(\n    \"1\\n\" +\n    \"1 1\\n\"\n) == \"-1\"\n\nprint(solution(\n    \"5\\n\" +\n    \"1 2 2 1 3 1\\n\"\n))"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 2 1 3 1''') == \"2 1 3 1 1 2\"\nassert solution('''1\n1 1''') == \"-1\"\nassert solution('''2\n1 2''') == \"-1\"\nassert solution('''3\n2 3 2 2''') == \"2 1 3 1 1 2\"\nassert solution('''4\n5 4 3 2 1''') == \"-1\"\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 2 1 3 1\\n') == '2 1 3 1 1 2\\n'\nassert solution('1\\n1 1\\n') == '-1\\n'\n\"\"\"\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1') == '-1'\nassert solution('1\\n1 2') == '2 1'\nassert solution('2\\n1 2') == '-1'\nassert solution('1\\n1 2\\n1 3') == '2 1 3 1'\nassert solution('2\\n1 2\\n1 3') == '-1'\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2 1 3 1 1 2'\n\n\"\"\""
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('74') == '35'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('74') == '35'\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n2') == None\nassert solution('1\\n2\\n3') == None\nassert solution('1\\n2\\n3\\n4') == None\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\"\n) == \"2\"\nassert solution(\n    \"73\"\n) == \"35\"\nassert solution(\n    \"98\"\n) == \"1\"\nassert solution(\n    \"150\"\n) == \"0\"\nassert solution(\n    \"100\"\n) == \"10\"\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5\n''') == '1'\nassert solution(\n'''\n74\n''') == '35'\n\nassert solution(\n'''\n3\n''') == '0'\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5''') == '1'\nassert solution('''74''') == '35'\nassert solution('''7 4''') == '1'\nassert solution('''10''') == '0'\nassert solution('''2''') == '0'\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\") == 1\nassert solution(\"5\") == 1\nassert solution(\"74\") == 35\nassert solution(\"8\") == 2\nassert solution(\"14\") == 3\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5''') == '1'\nassert solution('''74''') == '35'\n"
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(5) == 1\nassert solution(74) == 35\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n\"\"\"\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n'''\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n\n\n\"\"\"\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2''') == 7\nassert solution('''123 456789''') == 689974806\nassert solution('''123 1234''') == 40\nassert solution('''0 0''') == 1\nassert solution('''0 0 0''') == 0\n'''\n\n## Submitted\n## Details\n## 45 / 45 test cases passed.\n## Status: Accepted\n## Runtime: 48 ms\n\n## Your runtime beats 8.75% of python3 submissions.\n## Your memory usage beats 59.26% of python3 submissions.\n\n## 1) 0, 0\n## 2) 1, 0\n## 3) 0, 1\n## 4) 1, 1\n\n## Answer: 1"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == 7\nassert solution('123 456789') == 689974806\nassert solution('1234') == 4\nassert solution('12345') == 1\nassert solution('123456789') == 1\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n'''\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n\n\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\n\n\n\"\"\"\n\"\"\"\n---AC---\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\nclass Grid(object):\n    \"\"\"docstring for Grid\"\"\"\n    def __init__(self, n: int, k: int):\n        self.n = n\n        self.k = k\n        self.s = defaultdict(int)\n        self.ans = 0\n        self.dfs()\n\n    def dfs(self, v: int = 1, row: int = 1):\n        if row == self.n:\n            self.ans += 1\n            return\n\n        if v > self.k:\n            return\n\n        self.s[(row, v)] = 1\n        self.dfs(v + 1, row + 1)\n        self.s[(row, v)] = 0\n\n    def solve(self):\n        for i in range(1, self.k + 1):\n            self.dfs(i)\n\n        print(self.ans % (10 ** 9 + 7))\n\n\n\nn, k = map(int, sys.stdin.readline().split())\ng = Grid(n, k)\ng.solve()\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 7\nassert solution('123 456789') == 689974806\n\n\n-----\n\nPSEUDO"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution(\n'''\n3 4 2 1\n1 2 3 59\n''') == '111'\nassert solution(\n'''\n4 5 3 1\n1 2 3 59\n''') == '66'\nassert solution(\n'''\n2 1 1 1\n1 2 3 59\n''') == '66'\n'''\n\nimport sys\nsys.stdin = open(0)"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '55'\n'''\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '111'\n\n\"\"\"\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 4 2 1\n1 2 3 59\"\"\"\n) == \"111\"\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '111'\n\"\"\""
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 2 1\n1 2 3 59''') == '111'\nassert solution('''3 4 2 1\n1 2 3 59''') == '111'\nassert solution('''3 4 3 3\n1 2 3 59\n2 4 5 6''') == '6'\nassert solution('''2 2 2 2\n2 2 2 2\n2 2 2 2''') == '0'\nassert solution('''2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2\n2 2 2 2''') == '0'\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"111\"\n\n\"\"\"\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == output\n\n\"\"\""
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 2 1') == '111'\nassert solution('2 2 1 1') == '0'\nassert solution('1 2 3 59') == '111'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 1 1') == '1'\n"
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2\") == \"0 1 1\"\nassert solution(\"3 4 5\") == \"1 3 2\"\nassert solution(\"4 1 1\") == \"Impossible\"\nassert solution(\"5 5 5\") == \"0 1 1\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\n\n\"\"\"\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\nassert solution('1 1 1') == 'Impossible'\nassert solution('1 1 1') == 'Impossible'\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2\") == \"0 1 1\"\nassert solution(\"3 4 5\") == \"1 3 2\"\nassert solution(\"4 1 1\") == \"Impossible\"\nassert solution(\"0 1 1\") == \"Impossible\"\nassert solution(\"3 1 1\") == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('\\n')[1]\n\n'''"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\nassert solution('3 1 2') == 'Impossible'\nassert solution('2 1 1') == 'Impossible'\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\nassert solution('5 1 2') == '1 3 2'\n\n\n'''\n"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5\n0 1 2 3 4\n''') == '10'\nassert solution(\n'''\n5\n1 1 0 1 1\n''') == '1'\nassert solution(\n'''\n3\n1 3 1\n''') == '4'"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 1 2 3 4\n''') == '10'\n\nassert solution('''\n5\n1 1 0 1 1\n''') == '1'\n\nassert solution('''\n3\n1 3 1\n''') == '4'\n\nassert solution('''\n1\n12\n''') == '0'\n\nassert solution('''\n3\n1 3 1\n''') == '1'"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"10\"\nassert solution(\"5\\n0 1 2 3 4\\n0 1 2 3 4\") == \"10\"\nassert solution(\"3\\n1 3 1\") == \"4\"\nassert solution(\"1\\n12\") == \"0\"\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 1 2 3 4''') == '10'\nassert solution('''1 1 0 1 1''') == '1'\nassert solution('''3''') == '4'\nassert solution('''1 3 1''') == '4'\nassert solution('''2''') == '0'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n0 1 2 3 4\n''') == '10'\nassert solution('''5\n1 1 0 1 1\n''') == '1'\nassert solution('''3\n1 3 1\n''') == '4'\nassert solution('''1\n12\n''') == '0'\nassert solution('''5\n1 3 1 2 3\n''') == '5'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1 2 3 4') == '10'\nassert solution('5') == '0'\nassert solution('1 1 0 1 1') == '1'\nassert solution('3') == '4'\nassert solution('1 3 1') == '4'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 1 2 3 4\n0 1 2 3 4''') == '10'\nassert solution('''0 1 2 3 4\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1''') == '1'\nassert solution('''0 1 2 3 4\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1''') == '0'\nassert solution('''0 1 2 3 4\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1''') == '10'\nassert solution('''0 1 2 3 4\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1\n1 1 0 1 1''') == '4'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 1 1 2 3 5 7 11\") == \"4\"\nassert solution(\"0 0 0 0 0 1 2 3 4\") == \"0\"\nassert solution(\"0 0 0 0 0 1 1 2\") == \"4\"\nassert solution(\"0 0 0 0 0 0 1\") == \"1\"\nassert solution(\"0 0 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n0 1 2 3 4') == '10'\nassert solution('5\\n1 1 0 1 1') == '1'\nassert solution('3\\n1 3 1') == '4'\nassert solution('1\\n12') == '0'\nassert solution('2\\n1 0') == '0'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n2 0\\n0 2') == '90.0000000000'\nassert solution('3\\n2 0\\n0 2\\n-2 2') == '135.0000000000'\nassert solution('2\\n2 0\\n0 -2') == '-135.0000000000'\nassert solution('4\\n2 0\\n0 -2\\n-2 0') == '270.0000000000'\nassert solution('2\\n2 1\\n1 2') == '36.8698976458'\n\n\n\n\n\n\"\"\""
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '90.0000000000'\nassert solution('2\\n0\\n0') == '90.0000000000'\nassert solution('2\\n0\\n2') == '135.0000000000'\nassert solution('2\\n0\\n2\\n2') == '270.0000000000'\nassert solution('2\\n0\\n0\\n2') == '36.8698976458'\n\n\n'''"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 2') == ''\nassert solution('2 0') == ''\nassert solution('2 1') == '36.8698976458'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n2 0\\n0 2\\n0 -2') == '90.0000000000'\nassert solution('3\\n2 0\\n0 2\\n-2 0') == '135.0000000000'\nassert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '270.0000000000'\nassert solution('2\\n2 1\\n1 2\\n2 1') == '36.8698976458'\nassert solution('1\\n1\\n-1\\n1\\n1') == '45.0'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '90.000000000'\nassert solution('2\\n0\\n0\\n0') == '135.000000000'\nassert solution('2\\n-2\\n-2\\n-2') == '270.000000000'\nassert solution('3\\n2\\n0\\n0') == '36.8698976458'\nassert solution('3\\n0\\n2\\n2') == '72.99999809265'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 0\\n0 2\\n0 -2\") == \"135.0000000000\"\nassert solution(\"3\\n2 0\\n0 2\\n-2 2\\n-2 0\\n0 2\\n0 -2\") == \"270.0000000000\"\nassert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n0 2\\n0 -2\") == \"36.8698976458\"\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == '90.0000000000'\nassert solution(\"2 0\") == '90.0000000000'\nassert solution(\"0 2\") == '90.0000000000'\nassert solution(\"2 0\") == '90.0000000000'\nassert solution(\"2 1\") == '36.8698976458'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n0 0\n0 2\n''') == '36.8698976458'\nassert solution('''3\n2 0\n0 2\n-2 2\n''') == '135.0000000000'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2\n''') == '270.0000000000'\nassert solution('''5\n2 0\n0 2\n-2 0\n0 -2\n-2 2\n''') == '45.000000000'\n'''\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n0 0\n0 2\n''') == '90.0000000000'\nassert solution('''3\n2 0\n0 2\n-2 2\n''') == '135.0000000000'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2\n''') == '270.0000000000'\nassert solution('''5\n2 0\n0 2\n-2 0\n0 -2\n1 2\n''') == '36.8698976458'\nassert solution('''6\n2 0\n0 2\n-2 0\n0 -2\n1 2\n1 -2\n''') == '65.7392203968'\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 3 2\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5\n1 4 3 1 2\n\"\"\") == \"6\""
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 2\") == \"3\"\nassert solution(\"3\\n1 4 3 1 2\") == \"6\"\nassert solution(\"5\\n1 4 3 1 2\") == \"6\"\nassert solution(\"5\\n1 4 3 1 2\") == \"6\"\nassert solution(\"5\\n1 4 3 1 2\") == \"6\"\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\\n1 4 3 1 2\\n\") == \"3\"\nassert solution(\"1 3 2\\n1 4 3 1\\n\") == \"6\"\nassert solution(\"1 3 2\\n1 4 3 1\\n\") == \"6\"\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6\") == 6\nassert solution(\"1 3 2 4 5 6\") == 6\nassert solution(\"1 4 3 2 4 5 6\") == 6\nassert solution(\"1 4 3 2 4 6\") == 6\nassert solution(\"1 4 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == 27\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(\"1\\n3\\n2\") == \"3\"\nassert solution(\"1\\n4\\n3\\n1\\n2\") == \"6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"2\"\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 2''') == 3\nassert solution('''5\n1 4 3 1 2''') == 6\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 3 2\n''') == '3'\nassert solution('''\n5\n1 4 3 1 2\n''') == '6'\nassert solution('''\n6\n1 4 3 1 2 3\n''') == '6'\nassert solution('''\n7\n1 4 3 1 2 3 4\n''') == '6'\nassert solution('''\n8\n1 4 3 1 2 3 4 5\n''') == '6'\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2''') == '3'\nassert solution('''5\n1 4 3 1 2''') == '6'\nassert solution('''15\n1 1 2 1 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 2 2 2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\".join(map(str, range(1, 10)))) == \"\".join(map(str, range(1, 10)))\n\"\"\"\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('3') == '2'\nassert solution('6') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('7') == '6'\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\nAaA\") == \"2\\n\"\nassert solution(\"7\\nbcAAcbc\") == \"3\\n\"\nassert solution(\"6\\naaBCCe\") == \"5\\n\"\nprint(\"All set! Click \\\"Check\\\" to earn cool rewards!\")\n\"\"\"\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n'\n    'AaA'\n) == '2'\n\nassert solution('7\\n'\n    'bcAAcbc'\n) == '3'\n\nassert solution('6\\n'\n    'aaBCCe'\n) == '5'\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '3'\nassert solution('6') == '5'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"8\"\nassert solution(stdin) == \"9\"\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('7') == '3'\nassert solution('6') == '5'\nassert solution('6') == '5'\nassert solution('7') == '6'\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '3'\nassert solution('6') == '5'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nxxXx\n''') == '1'\nassert solution('''2\nXX\n''') == '1'\nassert solution('''6\nxXXxXx\n''') == '0'\n\nprint('Parsing tests')\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\nxxXx\n''') == '1'\nassert solution('''2\nXX\n''') == '1'\nassert solution('''6\nxXXxXx\n''') == '0'\nassert solution('''6\nxXxXxXx\n''') == '0'\nassert solution('''6\nxXxXxXx\n''') == '0'\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('x') == 'x'\nassert solution('xX') == 'xX'\nassert solution('Xx') == 'Xx'\nassert solution('XxX') == 'XxX'\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\nxxXx\\n') == '1\\nXxXx'\nassert solution('2\\nXX\\n') == '1\\nxX'\nassert solution('6\\nxXXxXx\\n') == '0\\nxXXxXx'"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == str(int(input()))\nassert solution(input()) == ''.join(solution(input()) for _ in range(int(input())))\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n1\nXx\n''') == '1'\n\nassert solution('''\n3\nxxx\n''') == '0'\n\nassert solution('''\n2\nXx\n''') == '1'\n\nassert solution('''\n4\nxxxx\n''') == '1'\n\nassert solution('''\n5\nxxXx\n''') == '2'"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''1\nx''') == '0'\nassert solution('''2\nX''') == '0'\nassert solution('''2\nx''') == '0'\nassert solution('''4\nXxxX\n''') == '1'\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\nxxXx\") == \"1\\nXxXx\"\nassert solution(\"2\\nXX\") == \"1\\nxX\"\nassert solution(\"6\\nxXXxXx\") == \"0\\nxXXxXx\"\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('x') == 'x'\nassert solution('xX') == 'xX'\nassert solution('Xx') == 'xX'\nassert solution('XxX') == 'xXX'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\nassert solution('y') == 'impossible'\nassert solution('y') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\nassert solution('google') == 'impossible'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nyandex\n6\n\n0\n\nyahoo\n5\n\n1\n\ngoogle\n7\n\nimpossible\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('as') == 0\nassert solution('a') == 1\nassert solution('abc') == 1\nassert solution('abcd') == 2\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\nassert solution('spam') == 'impossible'\nassert solution('nonsense') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('yandex') == '0'\nassert solution('google') == '1'\nassert solution('yahoo') == 'impossible'\nassert solution('abc') == 'impossible'\nassert solution('a') == '1'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'\nassert solution('abcd') == 'impossible'\nassert solution('abc') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('yandex') == 0\nassert solution('yahoo') == 1\nassert solution('google') == 'impossible'\nassert solution('gooGgle') == 'impossible'\nassert solution('googGle') == 'impossible'\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('yandex') == '0'\nassert solution('yahoo') == '1'\nassert solution('google') == 'impossible'"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('yandex') == 0\nassert solution('yahoo') == 1\nassert solution('google') == \"impossible\"\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('yandex') == 0\nassert solution('yahoo') == 1\nassert solution('google') == 'impossible'\nassert solution('google1') == 'impossible'\nassert solution('google2') == 2\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 5\n2 8\n1 6\n''') == '3'\nassert solution('''0 10\n1 5\n7 15\n''') == '3'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\nassert solution('''3\n0 10\n1 5\n10 15\n''') == '3'\nassert solution('''1\n0 10\n1 5\n10 15\n''') == '3'\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n0 5\\n2 8\\n1 6') == '1'\nassert solution('3\\n0 10\\n1 5\\n7 15\\n') == '3'\nassert solution('2\\n0 0\\n1 1\\n') == '2'\nassert solution('3\\n0 10\\n1 5\\n7 15\\n') == '3'\nassert solution('2\\n0 0\\n1 1\\n') == '2'\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 5\\n2 8\\n1 6\") == \"1\"\nassert solution(\"3\\n0 10\\n1 5\\n7 15\") == \"3\"\nassert solution(\"1\\n1 1\") == \"0\"\nassert solution(\"2\\n0 1\\n1 1\") == \"2\"\nassert solution(\"3\\n0 1\\n1 1\\n2 1\") == \"3\"\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n3') == '2'\nassert solution('5\\n0 5\\n2 8\\n1 6') == '1'\nassert solution('3\\n0 10\\n1 5\\n7 15') == '3'\n\n-----"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 5\n2 8\n1 6\n''') == '1'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\nassert solution('''0 10\n1 5\n7 15\n''') == '3'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\n'''\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\n'''"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 5\") == \"1\"\nassert solution(\"2 8\") == \"3\"\nassert solution(\"1 6\") == \"3\"\nassert solution(\"3 8\") == \"4\"\nassert solution(\"0 10\") == \"3\"\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n0 5\n2 8\n1 6\n''') == '3'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\nassert solution('''3\n0 10\n1 5\n7 15\n''') == '3'\nassert solution('''1\n0 10\n''') == '10'\nassert solution('''5\n0 10\n2 8\n1 6\n3 4\n''') == '10'\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 5\n2 8\n1 6\n''') == '1'\n\nassert solution('''\n3\n0 10\n1 5\n7 15\n''') == '3'\n\nassert solution('''\n3\n0 10\n1 5\n7 15\n''') == '3'\n\nassert solution('''\n10\n0 10\n1 5\n7 15\n2 8\n3 9\n4 10\n5 11\n6 12\n7 13\n8 14\n9 15\n''') == '0'\n\nassert solution('''\n10\n0 10\n1 5\n7 15\n2 8\n3 9\n4 10\n5 11\n6 12\n7 13\n8 14\n9 15\n''') == '3'"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 5\\n2 8\\n1 6') == '1'\nassert solution('3\\n0 10\\n1 5\\n7 15') == '3'\nassert solution('3\\n0 10\\n1 5\\n7 15') == '3'\nassert solution('3\\n0 10\\n1 5\\n7 15') == '3'\nassert solution('3\\n0 10\\n1 5\\n7 15') == '3'\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\nassert solution('0 0 0') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 1 3\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3 2 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"9 9 99\n\"\"\") == \"711426616\"\nassert solution(\n\"\"\"3 2 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"9 9 9\n\"\"\") == \"0\""
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1 3\") == \"3\"\nassert solution(\"3 2 2\") == \"1\"\nassert solution(\"9 9 99\") == \"711426616\"\nassert solution(\"9 9 0\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n\nassert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 3') == 3\nassert solution('2 2 2') == 1\nassert solution('9 9 99') == 711426616\n\n\n\n-------"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1 3''') == '3'\nassert solution('''3 2 2''') == '1'\nassert solution('''9 9 99''') == '711426616'\nassert solution('''3 2 2''') == '1'\nassert solution('''9 8 7''') == '5'\n"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\n\"\"\""
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\nassert solution('10 8 9') == '0'\nassert solution('10 9 9') == '0'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2\\n2 1\\n') == '2'\nassert solution('3 0\\n1 2 3\\n') == '0'\nassert solution('1 2\\n2 1\\n') == '2'\n\n\n\"\"\""
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 2') == '97'\nassert solution('3 0') == '0'\nassert solution('2 0') == '0'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 1\n5 10 7 3 20\"\"\") == \"3\"\nassert solution(\"\"\"6 2\n100 1 10 40 10 40\"\"\") == \"97\"\nassert solution(\"\"\"3 0\n1 2 3\"\"\") == \"0\"\nassert solution(\"\"\"2 4\n1 1\n1 1\"\"\") == \"1\"\nassert solution(\"\"\"5 4\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"1\"\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1\n5 10 7 3 20\n''') == '3'\n\nassert solution('''6 2\n100 1 10 40 10 40\n''') == '97'\n\nassert solution('''3 0\n1 2 3\n''') == '0'\n\nassert solution('''4 0\n1 2 3 4\n''') == '0'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '5'"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 1\"\"\") == \"3\"\nassert solution(\"\"\"6 2\"\"\") == \"97\"\nassert solution(\"\"\"6 2\"\"\") == \"97\"\nassert solution(\"\"\"6 2\"\"\") == \"97\"\nassert solution(\"\"\"6 2\"\"\") == \"97\"\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1\n5 10 7 3 20\n''') == '3'\nassert solution('''6 2\n100 1 10 40 10 40\n''') == '97'\nassert solution('''3 0\n1 2 3\n''') == '0'\nassert solution('''1 1\n2 3\n''') == '0'\nassert solution('''1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 1\\n5 10 7 3 20\\n') == '3'\nassert solution('6 2\\n100 1 10 40 10 40\\n') == '97'\nassert solution('3 0\\n1 2 3\\n') == '0'\nprint(solution(''))\nprint(solution('2 3\\n1 1 1\\n'))\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 2\\n100 1 10 40 10 40\\n') == '97'\nassert solution('3 0\\n1 2 3\\n') == '0'\nassert solution('5 0\\n5 10 7 3 20\\n') == '3'\nassert solution('0 0\\n1 2 3\\n') == '0'\nassert solution('3 0\\n0 1 2 3\\n') == '-1'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1') == '3'\nassert solution('6 2') == '97'\nassert solution('3 0') == '0'\nassert solution('1 0') == '0'\nassert solution('5 0') == '0'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 1''') == '3'\nassert solution('''6 2''') == '97'\nassert solution('''3 0''') == '0'\nassert solution('''1 2 3''') == '0'\nassert solution('''4 5 6 7''') == '6'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('0.100') == '1E-1'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == '1E1'\nassert solution('''01.23400''') == '1.23400E1'\nassert solution('''16''') == '1.6E1'\nassert solution('''01.23400''') == '1.23400E1'\nassert solution('''.100''') == '1E-1'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100') == '1E2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"16\") == \"1.6E1\"\nassert solution(\"01.23400\") == \"1.234\"\nassert solution(\"0.100\") == \"1E-1\"\nassert solution(\"100.\") == \"1E2\"\nprint(\"All set? Click \\\"Check\\\" to earn cool rewards!\")\n\"\"\""
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''16''') == '1.6E1'\nassert solution('''01.23400''') == '1.234'\nassert solution('''1E-1''') == '1E-1'\nassert solution('''100.''') == '1E2'\nassert solution('''0''') == '0'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"16\") == \"1.6E1\"\nassert solution(\"01.23400\") == \"1.234\"\nassert solution(\".\") == \"1E-1\"\nassert solution(\"100\") == \"1E2\"\nassert solution(\"100.0\") == \"1E2\"\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('0.1') == '1E-1'\nassert solution('100') == '1E2'\n\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100.') == '1E2'\n\n\n\"\"\"\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100') == '1E2'\nassert solution('12345.6') == '12345.6E2'\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5 1 3 2\n\"\"\") == \"GBGBG\"\nassert solution(\n\"\"\"\n7 2 2 5\n\"\"\") == \"BBGBGBB\"\nassert solution(\n\"\"\"\n4 3 4 0\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n5 2 2 4\n\"\"\") == \"GGGBGBG\"\nassert solution(\n\"\"\"\n7 2 3 0\n\"\"\") == \"BBBGGBGBBBGBGGBBBGB\"\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5 1 3 2\"\"\"\n) == \"GBGBG\"\n\nassert solution(\n    \"\"\"7 2 2 5\"\"\"\n) == \"BBGBGBB\"\nassert solution(\n    \"\"\"4 3 4 0\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'GBGBG'\nassert solution(stdin) == 'BBGBGBB'\nassert solution(stdin) == 'NO'\n\nTest.assert_equals(solution(stdin), 'GBGBG')\nTest.assert_equals(solution(stdin), 'BBGBGBB')\nTest."
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 1 3 2\") == \"GBGBG\"\nassert solution(\"7 2 2 5\") == \"BBGBGBB\"\nassert solution(\"4 3 4 0\") == \"NO\"\nassert solution(\"4 1 3 0\") == \"NO\"\nassert solution(\"5 1 3 0\") == \"NO\"\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 1 3 2''') == 'GBGBG'\nassert solution('''7 2 2 5''') == 'BBGBGBB'\nassert solution('''4 3 4 0''') == 'NO'\nassert solution('''6 3 3 3''') == 'BBGBGBB'\nassert solution('''7 3 3 4''') == 'BBGBGBB'\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1 3 2\") == \"GBGBG\"\nassert solution(\"7 2 2 5\") == \"BBGBGBB\"\nassert solution(\"4 3 4 0\") == \"NO\"\nassert solution(\"10 1 10 10\") == \"BBGBGBGBGBGBGBGBGBGBG\"\n\n\"\"\""
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 1 3 2''') == \"GBGBG\"\n\nassert solution(\n'''7 2 2 5''') == \"BBGBGBB\"\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"2 3 10\") == \"165\"\nassert solution(\"100 1 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 0 0\") == \"1\"\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 3 3''') == '1'\nassert solution('''2 3 10''') == '165'\nassert solution('''1 5 4''') == '0'\nassert solution('''12 15 1''') == '30'\nassert solution('''8 9 7''') == '0'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"2 3 10\") == \"165\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 11\") == \"165\"\nassert solution(\"3 5 11\") == \"5\"\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\nassert solution('2 3 2') == '1'\nassert solution('1 1 1') == '1'\nassert solution('2 3 3') == '1'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '165'\nassert solution(stdin) == '1'\nassert solution(stdin) == '6'\nassert solution(stdin) == '108'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3 3''') == '1'\nassert solution('''2 3 10''') == '165'\nassert solution('''2 3 11''') == '4'\nassert solution('''3 3 10''') == '5'\nassert solution('''4 3 22''') == '8'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"2 3 10\") == \"165\"\nprint(\"Tests passed\")\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('2 3 10') == '165'\nassert solution('1 1 1') == '1'\nassert solution('123 2 123') == '135'\nassert solution('2 5 5') == '1605'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"2 3 10\") == \"165\"\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 3 3''') == '1'\nassert solution('''2 3 10''') == '165'\nassert solution('''9 2 123456789''') == '0'\nassert solution('''4 1 121212''') == '4'\nassert solution('''2 2 3''') == '9'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '7'\nassert solution('4 2') == '7'\nassert solution('6 3') == '8'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\n'''\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '7'\nassert solution('4 2') == '7'\nassert solution('6 3') == '8'\n\nprint('Testcases passed')\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\nassert solution('1 2') == '-1'\nassert solution('2 1') == '-1'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '7'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\nassert solution('-1 -1') == '-1'\nassert solution('-1 2') == '-1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\"\nassert solution(\"4 5\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"7\"\nassert solution(\"6 3\") == \"8\"\nassert solution(\"4 0\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"6 4\") == \"10\"\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\nassert solution('5 1') == '10'\nassert solution('5 4') == '11'\nassert solution('5 5') == '12'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\n\"\"\"\nThink about the problem as series of series:\n    We want to find a series that is arithmetic progression on each step.\n    So we start with the first element, we compute the first sum and start building the rest\n    of the series by adding the next element.\n    The last element is added with the previous element\n    The series is made by adding all the elements in the array\n\"\"\"\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '4'\nassert solution('''8''') == '1'\nassert solution('''4''') == '-1'\nassert solution('''1 2 3 4 5 6 7 8''') == '1'\nassert solution('''1 2 3 4 5 6 7''') == '-1'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('2 6 8 7 4') == '4'\nassert solution('8') == '-1'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 6 8 7 4\\n') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('4\\n1 2 4 8\\n') == '-1'\n\n\n-----Same test set as the first challenge, but different input-----\n\n'''\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2 6 8 7 4\\n') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('4\\n1 2 4 8\\n') == '-1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n2 6 8 7 4\\n') == '4'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1'\n\n\n\"\"\""
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n2 6 8 7 4''') == '4'\nassert solution('''8\n1 2 3 4 5 6 7 8''') == '1'\nassert solution('''4\n1 2 4 8''') == '-1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '55'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('2\\n1 2') == '-1'\nassert solution('2\\n2 1') == '1'\nassert solution('2\\n1 2 3') == '1'\nassert solution('2\\n2 1 3') == '2'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'\n\n\"\"\""
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 3''') == '1 1 2 2'\nassert solution('''5 5 2''') == '1 1 1 1 1'\nassert solution('''5 2 3''') == '1 1 2 2'\nassert solution('''1 2 1''') == '1 1 1 1'\nassert solution('''2 3 4''') == '1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n1 2\n2 3 4\n''') == '1 1 2 2'\nassert solution('''3 2 2\n1 2\n2 3 4\n''') == '1 1 1 1 1'\nassert solution('''3 2 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\nassert solution('''5 2 3\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 2 3\n1 2\n2 3 4\n''') == '1 1 1 1 1'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\nassert solution('''1 2\n1 2\n''') == '1 1'\nassert solution('''1\n1\n''') == '1'\nassert solution('''5 2\n1 2\n2 3 4\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n5 2 3\n1 2\n2 3 4\n''') == '1 1 1 1 1'\nassert solution(\n'''\n5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n1 2\\n2 3 4\\n\") == \"1 1 2 2\"\nassert solution(\"5 5 2\\n3 4 1 2 5\\n2 3\\n\") == \"1 1 1 1 1\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 2 3\n1 2\n2 3 4\n''') == '1 1 2 2'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2 3''') == '''1 1 2 2'''\nassert solution('''5 5 2''') == '''1 1 1 1 1 1'''\nassert solution('''5 5 2''') == '''1 1 1 1 1 1'''\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('5 2 3') == '1 1 1 1 1'\nassert solution('4 2 3') == '1 1 1 1'\nassert solution('5 5 2') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2 3\\n1 2\\n2 3 4\\n') == '1 1 2 2'\nassert solution('5 5 2\\n3 4 1 2 5\\n2 3\\n') == '1 1 1 1 1'\nassert solution('5 5 5\\n5 4 3 2 1\\n2 3\\n') == '1 1 1 1 1'\nassert solution('5 4 1\\n5 2 3 4\\n2 3\\n') == '1 1 1 1 1'\nassert solution('5 5 5\\n5 4 3 2 1\\n2 3\\n') == '1 1 1 1 1'\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 8''') == '2 3 8'\nassert solution('''4\n3 2 1 2''') == '1 2 2 3'\nassert solution('''3\n2 3 8''') == '2 3 8'\nassert solution('''3\n2 3 8''') == '2 3 8'\nassert solution('''1\n2 3 4''') == '1 3 4 2'\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n3 2 1 2\n\"\"\") == \"1 2 2 3\"\nassert solution(\n\"\"\"\n3\n2 3 8\n\"\"\") == \"2 3 8\"\nassert solution(\n\"\"\"\n2\n3 2 8\n\"\"\") == \"2 3 8\""
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 2 1 2\") == \"1 2 2 3\"\nassert solution(\"3\\n2 3 8\") == \"2 3 8\"\nassert solution(\"2\\n3 2 8\") == \"2 3 8\"\nassert solution(\"10\\n5 6 7 8 9 10\") == \"6 7 8 9 10\"\nassert solution(\"5\\n2 3 8\") == \"2 3 8\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n3 2 1 2\n\n\"\"\"\n) == \"1 2 2 3\"\n\nassert solution(\n\"\"\"\n3\n2 3 8\n\n\"\"\"\n) == \"2 3 8\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1 2 3 \"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"2 3 8\") == \"2 3 8\"\nassert solution(\"2 1 1\") == \"1 2 \"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 1 2') == '1 2 2 3'\nassert solution('4\\n3 2 1 2') == '1 2 2 3'\nassert solution('4\\n2 3 8') == '2 3 8'\n\n\n\"\"\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 2 1 2\") == \"1 2 2 3 \"\nassert solution(\"3\\n2 3 8\") == \"2 3 8 \"\n\"\"\"\n\n\n\"\"\"\nThe way to solve this problem is to use a stack. At the beginning, all the cubes in each column will have a height of 0. At the end, the top of each column will have a height of the maximum height of all the cubes in that column. When we see the next number, we compare it with the max height of all the cubes in that column, and we will push the cube's height onto the stack (i.e. add it to the list of heights of the current column).\n\"\"\"\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1\\n2'\nassert solution('1\\n3') == '1\\n2\\n3'\nassert solution('2\\n1') == '1\\n2'\nassert solution('2\\n2') == '2'\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2 1 2''') == '1 2 2 3'\nassert solution('''4\n3 2 1 2\n''') == '1 2 2 3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''2\n2 1\n''') == '1 2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('50 30 10 10') == '50 30 10'\nassert solution('100 50 10 21') == '-1'\nassert solution('50 30 10 10') == '50 30 10'\nassert solution('100 50 10 21') == '-1'\nassert solution('50 30 10 10') == '50 30 10'\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"50 30 10 10\") == \"50\"\nassert solution(\"100 50 10 21\") == \"-1\"\nassert solution(\"100 50 10 22\") == \"-1\"\nassert solution(\"50 30 10 10\") == \"50\"\nassert solution(\"100 50 10 21\") == \"-1\"\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"50 30 10 10\") == \"50\"\nassert solution(\"100 50 10 21\") == \"-1\"\n\n\n\n\"\"\""
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"50 30 10 10\") == \"50\"\nassert solution(\"100 50 10 21\") == \"-1\"\nassert solution(\"50 30 10 21\") == \"10\"\nassert solution(\"50 30 10 21\") == \"10\"\nassert solution(\"50 30 10 21\") == \"10\"\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100 50 10 21') == '50 30 10'"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 40 10 10') == '20'\nassert solution('50 30 10 10') == '20'\nassert solution('100 50 10 21') == '-1'\nassert solution('1 10 10 1') == '-1'\nassert solution('50 100 50 50') == '20'\n\n\n\"\"\""
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"50 30 10 10\") == \"50\", \"First\"\nassert solution(\"100 50 10 21\") == \"30\", \"Second\"\nassert solution(\"50 50 10 10\") == \"-1\", \"Third\"\n\n\"\"\"\n\nfrom typing import Tuple"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n'''"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2\") == \"1\"\nassert solution(\"6 1\\n5 1 2 3 4 1\") == \"2\"\nassert solution(\"1 2\\n1 2\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2\\n\") == \"1\"\nassert solution(\"6 1\\n5 1 2 3 4 1\\n\") == \"2\"\nassert solution(\"6 1\\n5 1 2 3 4 1\\n\") == \"1\"\nassert solution(\"2 3\\n1 2\\n\") == \"0\"\nassert solution(\"6 1\\n5 1 2 3 4 1\\n\") == \"0\"\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('1 2\\n1 2') == '0'\nassert solution('6 1\\n5 1 2 3 4 1\\n') == '2'\nassert solution('6 1\\n5 1 2 3 4 1\\n') == '2'\n\n\n------\n\n## Premium\n\nAnswers in the comments of this post are verified.\n\nIf you have a good answer, please share it with us. Thanks!\n\n[Solution](https://leetcode.com/submissions/detail/456523006/):\n\n```python\nclass Solution:\n    def pairs(self, a: List[int], x: int) -> int:\n        count = 0\n        seen = set()\n        for i in range(len(a)):\n            if x - a[i] in seen:\n                count += 1\n            seen.add(a[i])\n        return count"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2 3 4 1') == '2'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('6 1') == '2'\n\n\"\"\"\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('2 1\\n1 2') == '0'\nassert solution('2 1\\n1 2') == '0'\nassert solution('2 2\\n1 2') == '1'\nassert solution('1 2\\n1 2') == '0'\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2\\n') == '1'\nassert solution('6 1\\n5 1 2 3 4 1\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n6 1\n5 1 2 3 4 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdd') == '3 abc'\nassert solution('abbcdddeaaffdfouurtytwoo') == '18 abbcd...tw'\nassert solution('abbccdddeaaffdfouurtytwoo') == '17 bbcdd...tw'\nassert solution('abbccdddeaaffdfouurtytwoo') == '16 bcddd...tw'\nassert solution('abbccdddeaaffdfouurtytwoo') == '15 cddde...tw'\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abcdd\") == \"3 abc\\n2 bc\\n1 c\\n0 \\n1 d\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\\n17 bbcdd...tw\\n16 bcddd...tw\\n15 cddde...tw\\n14 dddea...tw\\n13 ddeaa...tw\\n12 deaad...tw\\n11 eaadf...tw\\n10 aadfortytw\\n9 adfortytw\\n8 dfortytw\\n9 fdfortytw\\n8 dfortytw\\n7 fortytw\\n6 ortytw\\n5 rtytw\\n6 urtytw\\n5 rtytw\\n4 tytw\\n3 ytw\\n2 tw\\n1 w\\n0 \\n1 o\"\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcdd\") == \"3 abc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"17 bbcdd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"16 bcddd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"15 cddde...tw\"\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcdd\") == \"3 abc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbbcd\") == \"2 bc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbcd\") == \"2 c\"\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"abcdd\") == \"3 abc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\n\n\n\n-------\n\nAuthor: Manny egalli64@gmail.com\n'''\nimport sys"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abcdd') == 'abc'\nassert solution('abbcdddeaaffdfouurtytwoo') == 'abbcdddeaadfortytw'\n\nprint('all tests passed successfully')\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdd') == '3 abc'\nassert solution('abbcdddeaaffdfouurtytwoo') == '18 abbcd...tw'\nassert solution('a') == '0'\nassert solution('abbcdddeaaffdfouurtytwoo') == '18 abbcd...tw'\nassert solution('ab') == '0'\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"abcdd\") == \"3 abc\\n2 bc\\n1 c\\n0     \\n1 d\\n\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\\n17 bbcdd...tw\\n16 bcddd...tw\\n15 cddde...tw\\n14 dddea...tw\\n13 ddeaa...tw\\n12 deaad...tw\\n11 eaadf...tw\\n10 aadfortytw\\n9 adfortytw\\n8 dfortytw\\n9 fdfortytw\\n8 dfortytw\\n7 fortytw\\n6 ortytw\\n5 rtytw\\n6 urtytw\\n5 rtytw\\n4 tytw\\n3 ytw\\n2 tw\\n1 w\\n0     \\n1 o\\n\"\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abbcdddeaaffdfouurtytwoo\") == \"abbcdddeaadfortytw\"\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '-1'\nassert solution('5\\n') == '10080'\nassert solution('1000\\n') == '-1'\nassert solution('1000\\n') == '-1'\nassert solution('1000\\n') == '-1'\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input(\"\")) == \"10080\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"10080\"\nassert solution(input(\"\")) == \"-1\"\nassert solution(input(\"\")) == \"10080\"\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output(input())\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('5') == '10080'\nassert solution('22') == '-1'\nassert solution('105') == '-1'\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"5\") == \"10080\"\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('-1') == '-1'\nassert solution('0') == '-1'\nassert solution('1') == '-1'\nassert solution('10') == '10080'\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('inputs/01-chillywillyafter.txt') == '10080'\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1000000'\nassert solution('3') == '10000000'\nassert solution('4') == '100000000'\nassert solution('5') == '1000000000'\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '-1'\nassert solution('5\\n') == '10080'\nassert solution('7\\n') == '-1'\nassert solution('8\\n') == '40320'\nassert solution('9\\n') == '-1'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 3 4 5''') == '5'\nassert solution('''5 1\n-4 -5 -3 -2 -1''') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5\\n5') == '5'\nassert solution('1 2 3 4 5\\n1') == '-5'\nassert solution('1 2 3 4 5\\n2') == '5'\nassert solution('1 2 3 4 5\\n3') == '5'\nassert solution('1 2 3 4 5\\n4') == '5'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2''') == '5'\nassert solution('''5 1''') == '-5'\nassert solution('''5 3''') == '-5'\nassert solution('''5 5''') == '-5'\nassert solution('''3 2''') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 2 3 4 5''') == '5'\nassert solution('''5 1\n-4 -5 -3 -2 -1''') == '-5'\n\n\"\"\"\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"5 1\") == \"-5\"\n\n\n\n'''\nn, k = map(int, stdin.readline().strip().split(' '))\na = map(int, stdin.readline().strip().split(' '))\n\na.sort()\n\nm = sum(a[:k])\n\nfor i in range(1, len(a) - k + 1):\n    m = max(m, a[i] + sum(a[i+k:i+k+k]))\n\nprint(m)\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2 3 4') == '5'\nassert solution('1 1\\n-4 -5 -3 -2 -1') == '-5'\nassert solution('5 1\\n-4 -5 -3 -2 -1') == '-5'\nassert solution('1 2 3 4 5\\n4 5 1 2 3 4 5\\n2 3 4 5') == '5'\nassert solution('5 1\\n-4 -5 -3 -2 -1\\n-4 -5 -3 -2 -1') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5\\n5') == '5'\nassert solution('-4 -5 -3 -2 -1\\n-4 -5 -3 -2 -1') == '-5'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n-3\\n3\\n5\\n4\\n7\\n-2\\n6\\n-1') == '5'\nassert solution('1\\n-3\\n3\\n5\\n4\\n7\\n-2\\n6\\n-1\\n0') == '-5'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '-1'"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5\\n') == '5'\nassert solution('1 2 3 4 5\\n5 1') == '5'\nassert solution('-4 -5 -3 -2 -1\\n1 2 3 4 5') == '-5'\nassert solution('-4 -5 -3 -2 -1\\n1 2 3 4 5\\n5 1') == '-5'\n\n\n\n'''\n\n'''"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 2 3 4 5''') == '5'\nassert solution('''5 1\n-4 -5 -3 -2 -1''') == '-5'\nassert solution('''5 2\n-9 -8 -7 -6 -5 -4 -3 -2 -1''') == '-9'\nassert solution('''4 1\n-2 1 2 3''') == '1'\nassert solution('''2 1\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1''') == '-9'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '5'\nassert solution('2\\n5\\n2\\n1\\n3\\n4\\n5\\n10\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '3'\nassert solution('3\\n6\\n2\\n5\\n10\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('4\\n5\\n2\\n1\\n3\\n4\\n5\\n10\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '5'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n5\n2\n1\n3\n''') == '2'\n\nassert solution('''3\n6\n2\n3\n2\n''') == '3'\n\nassert solution('''2\n5\n5\n10\n''') == '1'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n2\n1\n3''') == '2'\nassert solution('''3\n6\n2\n3\n2\n''') == '3'\nassert solution('''2\n5\n5\n10\n''') == '1'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n''') == '4'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '1'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('input') == '1'\nassert solution('5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\n\"\"\"\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5\n2\n1\n3\n''') == '2'\n\nassert solution('''\n3\n6\n2\n3\n2\n''') == '3'\n\nassert solution('''\n2\n5\n5\n10\n''') == '1'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n2\n1\n3''') == '2'\n\nassert solution('''3\n6\n2\n3\n2\n''') == '3'\n\nassert solution('''2\n5\n5\n10\n''') == '1'\n\nassert solution('''2\n5\n5\n10\n4\n5\n''') == '2'\n\nassert solution('''3\n4\n6\n8\n9\n10\n''') == '3'"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n5\\n2\\n1\\n3') == '2\\n'\nassert solution('2\\n5\\n5\\n10') == '3\\n'\nassert solution('3\\n6\\n2\\n3\\n2') == '1\\n'\nassert solution('2\\n5\\n5\\n10') == '1\\n'\nassert solution('3\\n6\\n2\\n3\\n2') == '1\\n'\n\"\"\"\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n2\n1\n3\n''') == '2'\n\nassert solution('''\n3\n6\n2\n3\n2\n''') == '3'\n\nassert solution('''\n2\n5\n5\n10\n''') == '1'\n'''\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n5\\n2\\n1\\n3') == '2'\nassert solution('4\\n6\\n2\\n3\\n2') == '3'\nassert solution('5\\n5\\n10\\n2\\n3\\n2') == '1'\nassert solution('2\\n5\\n5\\n10') == '3'\nassert solution('3\\n6\\n2\\n3\\n2') == '1'\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\nassert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\nassert solution
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\nassert solution(\"1 1 1 1 1\") == \"Friendship\"\nassert solution(\"2 2 2 2 2\") == \"Friendship\"\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n\n\n-----\n\nIn [1]: t = [5, 3, 1, 1, 1]\n\nIn [2]: v = [1, 2, 3, 4, 5]\n\nIn [3]: ping = [1, 1, 1, 1, 1]\n\nIn [4]: win = [2, 1, 1, 2, 1]\n\nIn [5]: minping = min(ping)\n\nIn [6]: v.insert(0, minping)\n\nIn [7]: print(v)\n\nIn [8]: minping = min(ping)\n\nIn [9]: v.insert(0, minping)\n\nIn [10]: print(v)\n\nIn [11]: minping = min(ping)\n\nIn [12]: v.insert(0, minping)\n\nIn [13]: print(v)\n\nIn [14]: minping = min(ping)\n\nIn [15]: v.insert(0, minping)\n\nIn [16]: print(v)\n\nIn [17]: minping = min(ping)\n\nIn [18]: v.insert(0, minping)\n\nIn [19]: print(v)\n\nIn [20]: minping = min(ping)\n\nIn [21]: v.insert(0, minping)\n\nIn [22]: print(v)\n\nIn [23]: minping = min(ping)\n\nIn [24]: v.insert(0, minping)\n\nIn [25]: print(v)\n\nIn [26]: minping = min(ping)\n\nIn [27]: v.insert(0, minping)\n\nIn [28]: print(v)\n\nIn [29]: minping = min(ping)\n\nIn [30]: v.insert(0, minping)\n\nIn [31]: print(v)\n\nIn [32]: minping = min(ping)\n\nIn [33]: v.insert(0, minping)\n\nIn [34]: print(v)\n\nIn [35]: minping = min(ping)\n\nIn [36]: v.insert(0, minping)\n\nIn [37]: print(v)\n\nIn [38]: minping = min(ping)\n\nIn [39]: v.insert(0, minping)\n\nIn [40]: print(v)\n\nIn [41]: minping = min(ping)\n\nIn [42]: v.insert(0, minping)\n\nIn [43]: print(v)\n\nIn [44]: minping = min(ping)\n\nIn [45]: v.insert(0, minping)\n\nIn [46]: print(v)\n\nIn [47]: minping = min(ping)\n\nIn [48]: v.insert(0, minping)\n\nIn [49]: print(v)\n\nIn [50]: minping = min(ping)\n\nIn [51]: v.insert(0, minping)\n\nIn [52]: print(v)\n\nIn [53]: minping = min(ping)\n\nIn [54]: v.insert(0, minping)\n\nIn [55]: print(v)\n\nIn [56]: minping = min(ping)\n\nIn [57]: v.insert(0, minping)\n\nIn [58]: print(v)\n\nIn [59]: minping = min(ping)\n\nIn [60]: v.insert(0, minping)\n\nIn [61]: print(v)\n\nIn [62]: minping = min(ping)\n\nIn [63]: v.insert(0, minping)\n\nIn [64]: print(v)\n\nIn [65]: minping = min(ping)\n\nIn [66]: v.insert(0, minping)\n\nIn [67]: print(v)\n\nIn [68]: minping = min(ping)\n\nIn [69]: v.insert(0, minping)\n\nIn [70]: print(v)\n\nIn [71]: minping = min(ping)\n\nIn [72]: v.insert(0, minping)\n\nIn [73]: print(v)\n\nIn [74]: minping = min(ping)\n\nIn [75]: v.insert(0, minping)\n\nIn [76]: print(v)\n\nIn [77]: minping = min(ping)\n\nIn [78]: v.insert(0, minping)\n\nIn [79]: print(v)\n\nIn [80]: minping = min(ping)\n\nIn [81]: v.insert(0, minping)\n\nIn [82]: print(v)\n\nIn [83]: minping = min(ping)\n\nIn [84]: v.insert(0, minping)\n\nIn [85]: print(v)\n\nIn [86]: minping = min(ping)\n\nIn [87]: v.insert(0, minping)\n\nIn [88]: print(v)\n\nIn [89]: minping = min(ping)\n\nIn [90]: v.insert(0, minping)\n\nIn [91]: print(v)\n\nIn [92]: minping = min(ping)\n\nIn [93]: v.insert(0, minping)\n\nIn [94]: print(v)\n\nIn [95]: minping = min(ping)\n\nIn [96]: v.insert(0, minping)\n\nIn [97]: print(v)\n\nIn [98]: minping = min(ping)\n\nIn [99]: v.insert(0, minping)\n\nIn [100]: print(v)\n\nIn [101]: minping = min(ping)\n\nIn [102]: v.insert(0, minping)\n\nIn [103]: print(v)\n\nIn [104]: minping = min(ping)\n\nIn [105]: v.insert(0, minping)\n\nIn [106]: print(v)\n\nIn [107]: minping = min(ping)\n\nIn [108]: v.insert(0, minping)\n\nIn [109]: print(v)\n\nIn [110]: minping = min(ping)\n\nIn [111]: v.insert(0, minping)\n\nIn [112]: print(v)\n\nIn [113]: minping = min(ping)\n\nIn [114]: v.insert(0, minping)\n\nIn [115"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\nassert solution('2 2 1 2 2') == 'Friendship'\nassert solution('2 2 1 1 2') == 'First'\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2 1 2\") == \"First\"\nassert solution(\"3 3 1 1 1\") == \"Second\"\nassert solution(\"4 5 3 1 5\") == \"Friendship\"\nassert solution(\"1 2 5 1 5\") == \"Second\"\nassert solution(\"1 1 1 1 1\") == \"First\"\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\nassert solution('5 4 3 2 2') == 'Second'\nassert solution('1 1 1 1 1') == 'First'\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 5') == '10'\nassert solution('2 3 9') == '1'\nassert solution('2 4 9') == '2'\nassert solution('3 1 4') == '2'\nassert solution('3 4 9') == '3'\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 10') == 10\nassert solution('2 2 5') == 1\nassert solution('2 3 9') == 1\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 10\") == 10\nassert solution(\"1 2 5\") == 2\nassert solution(\"2 3 9\") == 1\nassert solution(\"10 1 10\") == 10\nassert solution(\"1 2 10\") == 1\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\n\n\n\n\n\n\n\n'''\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 10') == 10\nassert solution('1 2 5') == 1\nassert solution('2 3 9') == 1\n\n\n-----"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\nassert solution('3 4 8') == '2'\nassert solution('4 5 6') == '3'\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\n\"\"\"\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\n\n\"\"\"\n\nn, m, z = [int(x) for x in stdin.split()]\nminutes = [0] * z\nfor i in range(n, m, n):\n    minutes[i % z] += 1\n\nfor i in range(m, z, m):\n    minutes[i % z] += 1\n\nreturn sum(minutes) - 1\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 10') == 10\nassert solution('1 2 10') == 10\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1 0') == None\nassert solution('0 0') == None\nassert solution('0 1') == None\nassert solution('1 0') == 0\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '0'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('1 1') == '1'\nassert solution('-1 -1') == '3'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '2'\nassert solution('-1 -1') == '3'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '0'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '0'\nassert solution('0 -1') == '0'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0''') == '0'\nassert solution('''1 0''') == '0'\nassert solution('''-1 -1''') == '3'\n\n\n\"\"\""
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('1 1') == '1'\nassert solution('0 -1') == '3'\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"()\") == \"\"\nassert solution(\"(()\") == \"\"\nassert solution(\"(())\") == \"\"\nassert solution(\"((()))\") == \"\"\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"((()))\") == \"6\"\nassert solution(\"(()())\") == \"7\"\nassert solution(\"(()())(())\") == \"0\"\nassert solution(\"())\") == \"\"\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(()()\") == \"6\"\nassert solution(\"()()()\") == \"7\"\nassert solution(\")))\") == \"0\"\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"(())\") == 6\nassert solution(\"()()()\") == 7\nassert solution(\"()()()\") == 0\nassert solution(\"(()\") == 1\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"(()())\") == 6\nassert solution(\"()()()\") == 7\nassert solution(\")))\") == 0\nassert solution(\")(\") == 0\nassert solution(\"((((\") == 0\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"(()())\") == \"6\"\nassert solution(\")()(\") == \"7\"\nassert solution(\"(()())(()())\") == \"7\"\nassert solution(\"((()()))\") == \"7\"\nassert solution(\")(()\") == \"0\"\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('()()') == '6'\nassert solution(')())()') == '7'\nassert solution('((()))') == '0'\nassert solution('((()))') == '0'\nassert solution('()()()') == '0'\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('((()))') == 6\nassert solution('())()') == 7\nassert solution('(()())') == 0\nassert solution('(()()())') == 7\nassert solution('(())(())') == 3\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"(()())\") == 6\nassert solution(\")()()\") == 7\nassert solution(\"(()())\") == 6\nassert solution(\")()()\") == 7\nassert solution(\")(\") == 0\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"(()())\") == 6\nassert solution(\"()()()\") == 7\nassert solution(\")(\") == 0\nassert solution(\"(()))\") == 0\nassert solution(\"(()))\") == 0\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(24) == 3\nassert solution(5) == 1\nassert solution(8) == 2\nassert solution(1000) == 7\n\"\"\"\n\n\nfrom math import log\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"10\") == \"4\"\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('24') == '3'\nassert solution('123') == '3'\nassert solution('2401') == '3'\nassert solution('12331') == '5'\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '24'\n) == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('24') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('12') == '3'\nassert solution('123456789101112131415161718192021') == '4'\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '1'\n\"\"\""
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '3'\nassert solution('24') == '3'\nassert solution('44') == '5'\nassert solution('114') == '6'\nassert solution('244') == '6'\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"24\"\n) == \"3\"\n\"\"\"\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(10) == 3\nassert solution(24) == 3\nassert solution(12) == 3\n\nprint(solution(int(stdin.read())))"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('10') == '10'\nassert solution('20') == '20'\nassert solution('100') == '50'\n\"\"\"\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == 3\nassert solution('5') == 3\nassert solution('10') == 7\nassert solution('11') == 8\nassert solution('100000') == 15416\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '9'\nassert solution('13') == '12'\nassert solution('15') == '14'\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '3'\nassert solution('''3''') == '2'\nassert solution('''9''') == '3'\nassert solution('''1000000000''') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == '3'\nassert solution('1000') == '100'\nassert solution('1001') == '100'\nassert solution('1000') == '100'\nassert solution('1000') == '100'\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n') == 3\nassert solution('2\\n') == 2\nassert solution('1\\n') == 1\nassert solution('10\\n') == 9\nassert solution('100\\n') == 99\n\n'''\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '5'\nassert solution('6') == '7'\nassert solution('8') == '9'\nassert solution('9') == '10'\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    input=\"1\\n111\"\n) == \"3\"\nassert solution(\n    input=\"1\\n1\"\n) == \"1\"\nassert solution(\n    input=\"3\\n111\"\n) == \"6\"\nassert solution(\n    input=\"0\\n111\"\n) == \"0\"\nassert solution(\n    input=\"2\\n00\"\n) == \"0\"\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\n1011') == '9999999999'"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1011\n''') == '9999999999'\nassert solution('''2\n1011\n''') == '1'\nassert solution('''3\n1011\n''') == '2'\nassert solution('''6\n1011\n''') == '3'\nassert solution('''6\n001100100\n''') == '4'\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"110\") == \"1\"\nassert solution(\"110110110\") == \"9999999999\"\nassert solution(\"10011010110\") == \"9999999999\"\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"110\") == \"110\"\nassert solution(\"10111\") == \"10111\"\nassert solution(\"1110101\") == \"10111\"\nassert solution(\"10111101\") == \"10111\"\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('11101') == '000001110'\nassert solution('01101') == '00100'\nassert solution('11101') == '000001110'\nassert solution('10111') == '0001100'\nassert solution('10111') == '00100'\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1011\n''') == '9999999999'\nassert solution('''8\n110011\n''') == '99999999999'\nassert solution('''6\n1\n''') == '1'\nassert solution('''6\n11\n''') == '11'\nassert solution('''6\n111\n''') == '11'\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0111') == '11111'\nassert solution('11011101010010101001010111') == '11011011011010101010101111'\nassert solution
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\nassert solution('1111') == '11'\nassert solution('111001001110111') == '1110110111'\nassert solution('110110110') == '110110110'\nassert solution('00011101010110101010100') == '00011101010110101010100'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''5 3''') == '2'\nassert solution('''5 2''') == '1'\nassert solution('''5 2''') == '1'\nassert solution('''5 3''') == '2'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('5 3\\n1 0 0 4 1') == '2'\nassert solution('3 2\\n1 0 2') == '1'\nassert solution('5 1\\n3 1') == '2'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('3 4') == '2'\nassert solution('5 5') == '3'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom typing import List\nfrom functools import lru_cache\n\n\n@lru_cache(None)\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 0 2') == '1'\nassert solution('2 1 1') == '1'\nassert solution('5 3') == '2'\nassert solution('2 0 2 1') == '3'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '2'\nassert solution('5 4') == '3'\nassert solution('7 4') == '4'\nassert solution('7 8') == '5'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 0 2\") == \"1\"\nassert solution(\"5 3\\n1 0 0 4 1\") == \"2\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2 0 2') == '1'\nassert solution('5 3\\n1 0 0 4 1') == '2'\nassert solution('5 3\\n1 1 1 1 1') == '1'\nassert solution('5 3\\n1 1 1 1 1') == '0'\nassert solution('5 3\\n1 1 1 1 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '0'\nassert solution('11') == '1'\nassert solution('1101') == '0'\nassert solution('111') == '1'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1') == '1\\n1'\nassert solution('2\\n10') == '2\\n1 0'\nassert solution('2\\n100011') == '2\\n100 011'\nassert solution('1\\n10') == '1\\n1'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0111\") == \"1 1\"\nassert solution(\"10101\") == \"1 0\"\nassert solution
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('1\\n1') == None\nassert solution('1\\n11') == None\nassert solution('1\\n111') == None\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1') == '1'\nassert solution('6\\n100011') == '2 1'\nassert solution('10\\n1010101010101010101010') == '2 1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1111') == '0'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('0101') == '0101'\nassert solution('1101') == '1101'\nassert solution('101010101') == '1101010101'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('110011') == 2\nassert solution('101001') == 3\nassert solution('0010001100') == 6\nassert solution('11111111') == 1\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('110010') == '1100'\nassert solution('1010101001') == '1010101'\nassert solution('100011011') == '10001'\nassert solution('0001100101') == '10001'\nassert solution('0001') == '1'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11') == '1'\nassert solution('110') == '1'\nassert solution('1110001') == '2'\nassert solution
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n5 8 5''') == '0 2'\nassert solution('''3 4\n2 2 4\n''') == '1 1'\nassert solution('''6 3\n8 3 2 6 3\n''') == '3 3'\n\n\n-----"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n5 8 5''') == '0 2'\nassert solution('''3 4\n2 2 4''') == '1 1'\nassert solution('''5 3\n8 3 2 6 3''') == '3 3'\nassert solution('''9 10\n10 9 8 7 6 5 4 3 2 1''') == '7 6'\nassert solution('''18 13\n16 12 10 9 8 7 6 5 4 3 2 1''') == '8 7'\n"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"0 2\"\nassert solution(\"5 8 5\") == \"0 2\"\nassert solution(\"3 4\") == \"1 1\"\nassert solution(\"2 2 4\") == \"3 2\""
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\na = [int(x) for x in stdin.split()]"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 3\\n1 2\\n1 3\\n') == '0 2\\n2 1\\n2 3'\nassert solution('3 4\\n2 2 4\\n') == '1 1\\n3 2\\n'\nassert solution('3 4\\n2 2 4\\n1 3\\n') == '1 1\\n3 2\\n1 3'\nassert solution('3 4\\n2 2 4\\n1 3\\n3 2\\n') == '1 1\\n3 2\\n1 3'\nassert solution('3 4\\n2 2 4\\n1 3\\n3 2\\n3 2\\n') == '1 1\\n3 2\\n1 3'"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n5 8 5\\n\") == \"0 2\\n2 1\\n2 3\"\nassert solution(\"3 4\\n2 2 4\\n\") == \"1 1\\n3 2\\n\"\nassert solution(\"5 3\\n8 3 2 6 3\\n\") == \"3 3\\n1 3\\n1 2\\n1 3\"\nassert solution(\"5 5\\n8 3 2 6 3\\n\") == \"0 0\\n0 0\\n0 0\\n0 0\\n0 0\"\nassert solution(\"5 1\\n8 1\\n\") == \"0 0\\n0 0\\n0 0\\n0 0\"\n"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '1 1'\nassert solution('2 2') == '3 2'\nassert solution('3 4') == '3 3'\nassert solution('3 2 4') == '1 3'\nassert solution('5 3') == '3 3'\n"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2\n5 8 5''') == '0 2'\nassert solution('''3 4\n2 2 4''') == '1 1'\nassert solution('''5 3\n8 3 2 6 3''') == '3 3'\nassert solution('''5 4\n2 2 4''') == '1 3'\nassert solution('''5 3\n2 2 4''') == '1 3'\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaze''') == 8\nassert solution('''abacaba''') == 18\nassert solution('''xyz''') == -1\nassert solution('''t''') == 1\nassert solution('''aeia''') == -1\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''bbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\n\nassert solution('''abacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\n\nassert solution('''xyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'\n\nassert solution('''bbbbaab\n4\nbbb 1\naaa 2\naab 1\nbbb 1\n''') == '8'\n\nassert solution('''babbababababaababababababababababab\n20\nbaa 1\nbba 2\nabb 1\naba 1\nabab 2\nbbb 1\n''') == '25'\n'''\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''bbaze''') == '8'\nassert solution('''abacaba''') == '18'\nassert solution('''xyz''') == '-1'\nassert solution('''bbb 5''') == '18'\nassert solution('''abb 2''') == '18'\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('bb') == 'bb'\nassert solution('bzb') == 'bzb'\nassert solution('bzb 2') == 'bzb'\nassert solution('bzb 2 abacaba') == 'bzb'\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('bbaze') == '8'\nassert solution('abacaba') == '18'\nassert solution('xyz') == '-1'\nassert solution('aaa') == '-1'\nassert solution('abcde') == '-1'\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('bbaze') == '8'\nassert solution('abacaba') == '18'\nassert solution('xyz') == '-1'"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''bbaze''') == '8'\nassert solution('''abacaba''') == '18'\nassert solution('''xyz''') == '-1'\nassert solution('''baba''') == '18'\nassert solution('''bcc''') == '18'\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"bbaze\") == \"8\"\nassert solution(\"abacaba\") == \"18\"\nassert solution(\"xyz\") == \"-1\"\nassert solution(\"abacaba\") == \"18\"\nassert solution(\"xyz\") == \"-1\"\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4\n''') == '1'\nassert solution('''4\n100 42\n42 100\n5 42\n100 5\n''') == '5'\nassert solution('''2\n1 2\n1 2\n''') == '0'\n\n'''"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 2\n2 4\n3 4'''\n) == '1'\n\nassert solution(\n'''100 42\n42 100\n5 42\n100 5'''\n) == '5'\n\nassert solution(\n'''2\n1 2\n1 2'''\n) == '0'"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 4\\n3 4') == '1'\nassert solution('100 42\\n42 100\\n5 42\\n100 5') == '5'\nassert solution('2\\n1 2\\n1 2\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30') == '0'\nassert solution('1000 1000') == '0'\n"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 4\\n3 4') == '1'\nassert solution('2 4\\n2 4\\n3 4\\n3 4') == '0'\nassert solution('1 2\\n1 2\\n1 2\\n1 2') == '5'\nassert solution('100 42\\n42 100\\n5 42\\n100 5\\n5 42') == '5'\nassert solution('100 42\\n42 100\\n5 42\\n100 5\\n5 42') == '5'\n\n\n-----"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3''') == '1'\nassert solution(\n'''1 2''') == '0'\nassert solution(\n'''2 4''') == '1'\nassert solution(\n'''3 4''') == '1'\nassert solution(\n'''1 2''') == '0'\n"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4''') == '1'\n\nassert solution('''4\n100 42\n42 100\n5 42\n100 5''') == '5'\n\nassert solution('''2\n1 2\n1 2''') == '0'\n\nassert solution('''5\n1 2\n2 4\n3 4\n4 5\n5 1\n''') == '5'\n\"\"\"\n\"\"\""
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 4\n3 4''') == '1'\nassert solution('''1 2\n2 4\n3 4\n1 2\n1 2\n1 2\n''') == '5'\nassert solution('''1 2\n2 4\n3 4\n2 4\n2 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1 2\n2 4\n3 4\n1"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n2 4\\n3 4\\n') == '1'\nassert solution('4\\n100 42\\n42 100\\n5 42\\n100 5\\n') == '5'\nassert solution('2\\n1 2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 4\\n3 4\\n') == '1'\nassert solution('2 100\\n42 100\\n5 42\\n100 5\\n') == '5'\nassert solution('1 2\\n2 4\\n3 4\\n') == '0'\nassert solution('1 2\\n2 4\\n1 2\\n') == '0'\nassert solution('2 3\\n3 4\\n4 1\\n') == '1'\n\n\n\n-----"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 5\\n2 3\") == \"8\"\nassert solution(\"5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20\") == \"60\"\nassert solution(\"5 10\\n3 20\\n2 40\\n1 20\\n4 20\\n5 40\") == \"0\"\nassert solution(\"5 10\\n3 20\\n2 40\\n1 30\\n4 20\\n5 40\") == \"30\"\nassert solution(\"5 10\\n3 40\\n2 40\\n1 30\\n4 20\\n5 40\") == \"0\"\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 1') == '2'\nassert solution('1 2\\n1 2') == '2'\nassert solution('1 2\\n1 1') == '2'\nassert solution('1 2\\n1 1\\n1 1') == '2'\nassert solution('1 2\\n1 2\\n1 1') == '2'\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nn, v = [int(x) for x in input().split()]\nfruit = [[int(x) for x in input().split()] for i in range(n)]"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\nSample Input\n\n2 10\n2 4\n1 4\n1 3\n2 4\n1 4\n2 4\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 3\n2 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 5\n2 3\n''') == '8'\nassert solution('''2 3\n1 5\n2 3\n''') == '60'\nassert solution('''3 10\n2 20\n1 20\n4 20\n5 20\n''') == '60'\nassert solution('''4 10\n2 20\n1 20\n4 20\n5 20\n''') == '60'\nassert solution('''5 10\n3 20\n2 20\n1 20\n4 20\n5 20\n''') == '60'\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"\""
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 5\\n2 3\\n') == '8'\nassert solution('5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20\\n') == '60'\nassert solution('3 5\\n1 3\\n2 3\\n3 5\\n') == '4'\nassert solution('10 30\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 1\\n2 3\\n2 1\\n3 4\\n2 2\\n3 3\\n3 2') == 8\nassert solution('3 2\\n1 5\\n2 3\\n2 1\\n3 4\\n2 2\\n3 3\\n3 2') == 60\nassert solution('3 2\\n1 5\\n2 3\\n2 1\\n3 4\\n2 2\\n4 5\\n2 2') == 72\nassert solution('5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20') == 60\nassert solution('5 10\\n3 20\\n2 20\\n1 20\\n4 20\\n5 20') == 60\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\n1 2 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"3\n2 3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n2 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n2 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n2 3 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == '1'\nassert solution('''2 3 1''') == '2'\nassert solution('''3''') == '3'\nassert solution('''2 3 1''') == '2'\nassert solution('''3''') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 2 4\n''') == '1'\n\nassert solution('''\n3\n2 3 3\n''') == '2'\n\nassert solution('''\n3\n2 3 1\n''') == '3'\n\nassert solution('''\n3\n2 3 1\n''') == '1'\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2 2 4\") == \"1\"\nassert solution(\"3\\n2 3 3\") == \"2\"\nassert solution(\"3\\n2 3 1\") == \"3\"\nassert solution(\"3\\n2 3 1\") == \"3\"\nassert solution(\"3\\n2 3 1\") == \"3\"\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 2 4''') == '1'\nassert solution('''3\n2 3 3''') == '2'\nassert solution('''3\n2 3 1''') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 2 4\\n') == '1'\nassert solution('3\\n2 3 3\\n') == '2'\nassert solution('3\\n2 3 1\\n') == '3'\nassert solution('3\\n2 3 1\\n') == '3'\nassert solution('3\\n2 3 1\\n') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 2 4\\n') == '1'\nassert solution('3 2 3\\n') == '2'\nassert solution('3 2 1\\n') == '3'\n"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 2 4''') == '1'\nassert solution('''3\n2 3 3''') == '2'\nassert solution('''3\n2 3 1''') == '3'\nassert solution('''9\n2 3 2 4 4 2 1 3 4 1''') == '2'\nassert solution('''3\n2 3 1''') == '3'\n\n\n-----"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BBBSSC') == '2'\nassert solution('BBC') == '7'\nassert solution('BSC') == '200000000001'\nassert solution('BSC') == '200000000001'\nassert solution('BSC') == '200000000001'\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"BBBSSC\"\n    \"6 4 1\"\n    \"1 2 3\"\n    \"4\"\n    ) == '2'\n\nassert solution(\n    \"BBC\"\n    \"1 10 1\"\n    \"1 10 1\"\n    \"21\"\n    ) == '7'\n\nassert solution(\n    \"BSC\"\n    \"1 1 1\"\n    \"1 1 3\"\n    \"1000000000000\"\n    ) == '200000000001'\n\nprint(solution(input()))\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''BBBSSC''') == '2'\nassert solution('''BBC''') == '7'\nassert solution('''BSC''') == '200000000001'\nassert solution(''''') == '0'\nassert solution('''BBBSSC''') == '2'\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('B') == 'B'\nassert solution('BBS') == 'BS'\nassert solution('BBSSC') == 'BS'\nassert solution('BBBSSC') == 'BS'\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''BSC\n1 1 1\n1 1 3\n1000000000000\n''') == '200000000001'\n\nassert solution('''BSC\n1 1 1\n1 1 3\n1000000000000\n''') == '7'\n\nassert solution('''BBS\n1 1 1\n1 1 3\n1000000000000\n''') == '0'\n\nassert solution('''BB\n1 10 1\n1 10 1\n21\n''') == '7'\n\nassert solution('''BBBS\n1 1 1\n1 1 3\n1000000000000\n''') == '200000000001'"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('BBSSC') == 2\nassert solution('BBC') == 7\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('BBBSSC') == 2\nassert solution('BBC') == 7\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''BBBSSC''') == '2'\nassert solution('''BCCCCSC''') == '7'\nassert solution('''CSCBBSC''') == '200000000001'\nassert solution('''CSCBBSC''') == '200000000001'\nassert solution('''CSCBBSC''') == '200000000001'\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"BBBSSC\") == \"2\"\nassert solution(\"BBC\") == \"7\""
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"BBBSSC\") == \"2\"\nassert solution(\"BBC\") == \"7\"\nassert solution(\"BSC\") == \"200000000001\"\n\n\"\"\"\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 6\\nHHHSHS\\n') == '1'\nassert solution('10 10\\nHHHSHSHHHSHHSH\\n') == '0'\nassert solution('14 100\\nHHHHHSSSSHSSHHHHHHH\\n') == '8'\nassert solution('23 50\\nHHSSS.......SSHHHHHHHHHH\\n') == '0'\nassert solution('5 10\\nH...HHSH\\n') == '0'\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 5\nHHHSHS\n''') == '1'\nassert solution('''14 100\n...HHHSSS...SH\n''') == '0'\nassert solution('''23 50\nHHSS.......SSHHHHHHHHHH\n''') == '8'"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 6\\nHHHSHS\\n\") == \"-1\"\nassert solution(\"14 100\\n\") == \"0\"\nassert solution(\"23 50\\n\") == \"8\"\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 6\\nHSHSHS') == '1'\nassert solution('14 100\\n...HHHSSS...SH') == '0'\nassert solution('23 50\\nHHSS.......SSHHHHHHHHHH') == '8'\nassert solution('14 100\\n...HHHSSS...SH') == '0'\nassert solution('23 50\\nHHSS.......SSHHHHHHHHHH') == '8'\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6 6\") == \"1\"\nassert solution(\"14 100\") == \"0\"\nassert solution(\"23 50\") == \"8\"\nassert solution(\"HHSS.......SSHHHHHHHHHH\") == \"0\"\nassert solution(\"..S.H....H..S.H..S\") == \"8\"\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 6') == '1'\nassert solution('14 100') == '0'\nassert solution('23 50') == '8'\nassert solution('....H...S...S...S...S...SH...HHHSS...S...S...S...S...S...SH..HH..HH..HH..HH..HH..HH..HH..HH..HH..HH..HH...') == '8'\nassert solution('HHSS.......SSHHHHHHHHHH') == '0'\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 6\nHSHSHS''') == '1'\nassert solution('''14 100\n...HHHSSS...SH''') == '0'\nassert solution('''23 50\nHHSS.......SSHHHHHHHHHH''') == '8'\nassert solution('''1234567890123456789012345678901234567890123456789012345678901234567890''') == '0'\nassert solution
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == '-1'\nassert solution('3 4') == '1'\nassert solution('3 4\\nH...SH\\n') == '1'\nassert solution('3 4\\nHHHSSSH\\n') == '0'\nassert solution('3 4\\nHHSSHHHHHH\\n') == '8'\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 1 1') == '4'\nassert solution('8 1 10') == '8'\nprint(solution(stdin))\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8 1 1') == 4\nassert solution('8 1 10') == 8\nassert solution('8 100 100') == 0\nassert solution('8 100 1000') == 16\nassert solution('8 100 10000') == 32\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 1 1') == '4'\nassert solution('8 1 10') == '8'\nassert solution('8 1 2') == '8'\nassert solution('8 1 1') == '4'\nassert solution('8 1 10') == '8'\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8 1 1\") == \"4\"\nassert solution(\"8 1 10\") == \"8\""
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8 1 1''') == '4'\nassert solution('''8 1 10''') == '8'\nassert solution('''8 5 0''') == '2'\nassert solution('''8 4 0''') == '2'\nassert solution('''8 1 10''') == '8'\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''8 1 1''') == '4'\nassert solution('''8 1 10''') == '8'\nassert solution('''2 1 1''') == '3'\nassert solution('''2 1 10''') == '8'\nassert solution('''3 1 1''') == '4'\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''8 1 1''') == '4'\nassert solution('''8 1 10''') == '8'\nassert solution('''8 2 1''') == '8'\nassert solution('''8 2 10''') == '16'\nassert solution('''8 2 100''') == '72'\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8 1 1') == '4'\nassert solution('8 1 10') == '8'\nassert solution('5 2 3') == '3'\nassert solution('20 1 1') == '2'\nassert solution('20 10 1') == '9'\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\nassert solution('2 3\\n1 0 1\\n0 1 0') == '8'\nassert solution('3 3\\n1 0 1\\n0 1 0\\n1 1 1') == '0'\nassert solution('3 3\\n1 0 1\\n0 1 0\\n1 1 1') == '8'\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == '8'\nassert solution('1 1') == '1'\nassert solution('2 3') == '8'\nassert solution('1 0 1') == '8'\nassert solution('1 1 0') == '8'\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\nassert solution('2 2') == '0'\nassert solution('1 2') == '1'\nassert solution('0 2') == '1'\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0\\n\") == 1\nassert solution(\"2 3\\n1 0 1\\n0 1 0\\n\") == 8\nassert solution(\"5 6\\n0 1 0 0 1 0\\n0 0 1 1 1 0\\n0 1 0 1 1 1\\n1 1 0 1 0 0\\n0 0 0 0 0 1\") == 18\nassert solution(\"7 9\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\") == 123"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\n\n\"\"\"\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 3\\n1 0 1\\n0 1 0') == '8'\nassert solution('1 2\\n0 1 0\\n0 1 0') == '4'\nassert solution('1 2\\n0 1 1\\n0 0 0') == '9'\n\n\n-----\n\nreduce\n\nThe trick is to use the fact that all sets have the same size, and we can use combinations to find sets of size m for all n, since the results are the same. We don't care about the order, so we can just use combinations.\n\nfrom itertools import combinations\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == 1\nassert solution(\"2 3\") == 8\nassert solution(\"2 3\") == 8\nassert solution(\"2 3\") == 8\nassert solution(\"3 3\") == 6\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1\n0''') == '1'\nassert solution('''2 3\n1 0 1\n0 1 0''') == '8'\nassert solution('''3 3\n1 0 1\n0 1 0\n1 0 1\n0 1 0''') == '16'\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '620'\n'''\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '32'\n\"\"\"\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 0 9\") == \"32\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"7 0 0 0 0\") == \"620\""
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0 0 9\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n7 0 0 0 0 0') == '32'\nassert solution('0 43 21 18 2\\n3 0 21 11 65\\n5 2 0 1 4\\n54 62 12 0 99\\n87 64 81 33 0') == '620'\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0 0 9\") == \"32\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"7 0 0 0 0\") == \"620\"\n\"\"\"\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('7 0 0 0 0') == '620'\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 0 9') == '32'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 0') == '0'\nassert solution('7 0 0 0 0') == '620'\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 0 9\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n7 0 0 0 0 0\") == \"32\"\nassert solution(\"0 43 21 18 2\\n3 0 21 11 65\\n5 2 0 1 4\\n54 62 12 0 99\\n87 64 81 33 0\\n\") == \"620\"\nassert solution(\"0 21 22 27 22 13\\n4 2 21 22 1 9\\n9 1 19 19 1 5\\n4 2 21 22 11 10\\n12 6 9 8 19 19\\n19 19 19 19 19 19\\n\") == \"830\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1 1\\n2 1 1 1 1\\n3 1 1 1 1\\n4 1 1 1 1\\n5 1 1 1 1\") == \"10\"\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 0 0 9\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n7 0 0 0 0 0') == '32'\nassert solution('0 43 21 18 2\\n3 0 21 11 65\\n5 2 0 1 4\\n54 62 12 0 99\\n87 64 81 33 0') == '620'\n\n\n\"\"\"\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1000000000\n1\n1000000000\n''') == '2000000000'\nassert solution('''10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''3 1\n2 1 4\n11 3 16\n''') == '3'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20\n''') == '3'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 1000000000\") == \"2000000000\"\nassert solution(\"10 1\") == \"0\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\") == \"3\"\nassert solution(\"10 1\") == \"0\"\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1000000000\\n1') == '2000000000'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000') == '0'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n1 1 1 1 1 1 1 1 1 1') == '3'\nassert solution('3 1\\n2 1 4\\n11 3 16\\n') == '4'\nassert solution('4 3\\n4 3 5 6\\n11 12 14 20\\n') == '3'\nprint(solution(stdin))\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\n\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('1000000000 1000000000') == '0'\nassert solution('10 1') == '0'\nassert solution('1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000') == '0'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1000000000\\n1') == '2000000000'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n1 1 1 1 1 1 1 1 1 1') == '4'\nassert solution('3 1\\n2 1 4\\n11 3 16\\n') == '3'\nassert solution('4 3\\n4 3 5 6\\n11 12 14 20\\n') == '3'\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1000000000\\n1\\n1000000000') == '2000000000'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('10 1\\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\\n1 1 1 1 1 1 1 1 1 1') == '0'\nassert solution('3 1\\n2 1 4\\n11 3 16') == '4'\nassert solution('4 3\\n4 3 5 6\\n11 12 14 20') == '3'\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1\n''') == '113337'\n\nassert solution('''6\n1\n3\n7\n1\n1\n''') == '113337'\n\nassert solution('''7\n1\n3\n7\n1\n1\n7\n1\n''') == '113337'\n\nassert solution('''7\n1\n3\n7\n1\n1\n7\n1\n''') == '113337'\n\nassert solution('''7\n1\n3\n7\n1\n1\n7\n1\n''') == '113337'"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '113337'\nassert solution('''\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '113337'\nassert solution('''\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n''') == '111337'\nassert solution('''\n2\n2\n2\n2\n''') == '2'\nassert solution('''\n1\n3\n4\n7\n''') == '3'\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 7') == '113337'\nassert solution('1 3 7') == '113337'\nassert solution('1 3 7') == '113337'\nassert solution('2 3 4') == '113244'\nassert solution('1 1 1') == '11'\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"1337\"\nassert solution(\"2\\n5\\n5\\n3\\n2\\n1\") == \"1337\"\nassert solution(\"3\\n5\\n3\\n1\") == \"31337\"\nassert solution(\"4\\n2\\n1\") == \"1337\"\nassert solution(\"5\\n3\\n2\\n1\") == \"1337\"\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1''') == '113337'\nassert solution('''1\n1''') == '1337'\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n6''') == '113337'\nassert solution('''1\n5''') == '1337'"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '113337'\n'''"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '113337'\nassert solution('1 2 3 4 5 6 7 8 9') == '113337'\nassert solution
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('1') == '1'\nassert solution('10') == '1001'\nassert solution('1000') == '1001'\nassert solution('10000') == '11001'\n"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == '11'\nassert solution('''2''') == '22'\nassert solution('''3''') == '33'\nassert solution('''4''') == '44'\nassert solution('''5''') == '55'\n"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 2\nassert solution('10') == 1001\n\"\"\"\n\nimport sys"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1''') == \"11\"\nassert solution('''10''') == \"1001\"\nassert solution('''1000''') == \"11\"\nassert solution('''10000''') == \"1001\"\nassert solution('''100000''') == \"11\"\n'''"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"11\"\nassert solution(\"10\") == \"1001\"\n'''\n'''\nPari is being very sentimental about the even-length palindromes.\n\nUnfortunately, Pari's friend, Lily, is not able to understand the beauty of palindromes.\n\nLily is a very special person, and she loves Pari.\n\nAs far as she is concerned, Lily is not a good judge of beauty, but she enjoys a lot of pari.\n\nLily was able to understand that all even-length palindromes are positive,\nso Pari knows that there is no reason to ignore them.\n\nLily's friend Pari is not able to understand that all even-length palindromes are positive,\nso she can ignore them.\n\nNow Pari wants to know how many even-length palindromes Lily has found so far.\n\nHe asks Pari to you, your friend Lily, to write a program to find all the even-length palindromes in the range [1, 10^{7}] and tell how many are found so far.\n\nInput\nThe first line of the input contains a single integer t (1\u2264t\u2264100), the number of test cases.\n\nThe next t lines each contain a single integer n (1\u2264n\u226410^{7}) \u2014 the length of the even-length palindrome Ly has found so far.\n\nOutput\nFor each test case, output a single line containing the number of even-length palindromes Ly has found so far.\n\n\nExample\n\nInput:\n3\n4\n5\n3\n\nOutput:\n2\n1\n0\n'''\n"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('10') == 11"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('1') == 1\nassert solution('10') == 1001\nassert solution('12') == 111\nassert solution('100') == 100001\n"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == '11'\nassert solution('''10''') == '1001'\n\n\n'''"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '11'\nassert solution('10') == '1001'\n'''\n"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '11'\nassert solution('''10''') == '1001'\nassert solution('''100''') == '111111'\nassert solution('''1000''') == '11111'\nassert solution('''10000''') == '1212'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'INFINITE'\n\"\"\"\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n><\n1 2\n\"\"\") == \"INFINITE\"\n\nassert solution(\n\"\"\"\n3\n>>><\n2 1 1\n\"\"\") == \"INFINITE\""
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 'INFINITE'\nassert solution('>') == 'INFINITE'\nassert solution('><') == 'INFINITE'\nassert solution('><>><') == 'INFINITE'\nassert solution('><>><>') == 'INFINITE'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n><\"\"\") == \"INFINITE\"\nassert solution(\"\"\"3\n>><\"\"\") == \"INFINITE\"\nassert solution(\"\"\"3\n><\"\"\") == \"FINITE\"\nassert solution(\"\"\"3\n><\"\"\") == \"FINITE\"\nassert solution(\"\"\"3\n><\"\"\") == \"FINITE\"\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"INFINITE\"\nassert solution
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'INFINITE'\nassert solution('1') == 'INFINITE'\nassert solution('><') == 'INFINITE'\nassert solution('>><') == 'INFINITE'\nassert solution('><<') == 'INFINITE'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'INFINITE'\nassert solution(stdin) == 'INFINITE'\nassert solution(stdin) == 'INFINITE'\nassert solution(stdin) == 'INFINITE'\nassert solution(stdin) == 'INFINITE'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2''') == 'FINITE'\nassert solution('''>><''') == 'INFINITE'\nassert solution('''3\n>><\n2 1 1''') == 'INFINITE'\nassert solution('''3\n<<<\n2 1 1''') == 'INFINITE'\nassert solution('''3\n><\n2 1 1''') == 'INFINITE'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"<><><>\") == \"INFINITE\"\nassert solution
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11010111') == 4\nassert solution('111') == 0\nassert solution('1111') == 0\nassert solution('11011110111') == 6\nassert solution('110111011101111111') == 6\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(8, \"11010111\") == 4\nassert solution(3, \"111\") == 0\nassert solution(7, \"0001111101\") == 6\nassert solution(6, \"0011000101\") == 4\nassert solution(5, \"0010001\") == 0"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\n11010111') == '4'\nassert solution('3\\n111') == '0'\nassert solution('2\\n11') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n1') == '0'\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n11010111''') == '4'\nassert solution('''3\n111''') == '0'\nassert solution('''4\n110101''') == '0'\nassert solution('''3\n111''') == '0'\nassert solution('''2\n11''') == '0'\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11010111') == 4\nassert solution('111') == 0\nassert solution('111') == 0\nassert solution('101010111') == 6\nassert solution('0100001010101101010110100') == 5\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''11010111\n''') == 4\nassert solution('''111\n''') == 0\nassert solution('''11010111\n''') == 4\nassert solution('''11010111\n''') == 4\nassert solution('''111\n''') == 0\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11010111') == 4\nassert solution('111') == 0\nassert solution('1101010111') == 3\nassert solution('1') == 0\nassert solution('00') == 0\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('11010111') == 4\nassert solution('11') == 0\nassert solution('1111') == 0\nassert solution('11010101') == 3\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('R') == 'allyouneedislove'\nassert solution('L') == 'pbr'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('R') == 'allyouneedislove'\nassert solution('L') == 'defghijklmnopqrstuvwxyz'\nprint('passed')\n\nInput\nL\nasdfghjkzxcvbn\n\nOutput\nasdfghjkzxcvbnm\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('R') == 'lyouneedislove'\nassert solution('L') == 'pbr'\nassert solution('Rpbr') == 'allyouneedislove'\nassert solution('Lpbr') =='s;;upimrrfod;'\nassert solution('RasdfgL') == 'pbr'\n\n\n\n\n\"\"\""
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('r') == 'd'\nassert solution('lr') == 'll'\nassert solution('R') == 'P'\nassert solution('rpr') == 'rpd'\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"R\") == \";pbr\"\nassert solution(\"L\") == \"pimrrfod;\"\nassert solution(\"R\") == \";pbr\"\nassert solution(\"R\") == \";pbr\"\nassert solution(\"L\") == \"pimrrfod;\"\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"R\") == \"upimrrfod\"\nassert solution(\"s;;upimrrfod;pbr\") == \"allyouneedislove\"\nassert solution(\"L\") == \"pbr\"\nassert solution(\"s;;upimrrfod;pbr\") == \"allyouneedislove\"\nassert solution(\"s\") == \"s\"\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('R') =='s;;upimrrfod;pbr'\nassert solution('L') == 'whydendidyouneedislove'\nassert solution('L') == 'whydendidyouneedislove'\nassert solution('L') == 'whydendidyouneedislove'\nassert solution('L') == 'whydendidyouneedislove'\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"R\") == \"upimrrfod\"\nassert solution(\"L\") == \"def\"\n\nassert solution(\"Ls;;upimrrfodpbr\") == \"allyouneedislove\""
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 3 4 4\") == \"1 1 3 4 4\"\nassert solution(\"5 5\") == \"1 2 3 4 5\"\nassert solution(\"1 1 2 3 3 4\") == \"1 1 2 3 3 4\"\nassert solution(\"1 1 2 2 3 3 4\") == \"1 1 2 2 3 3 4\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 4\n4 3 1 2\n''') == '1 1 3 4 4'\nassert solution('''5 5\n5 4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''5 5\n5 4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''5 6\n5 4 3 2 1\n''') == '1 3 4 5 6'\nassert solution('''5 7\n5 4 3 2 1\n''') == '1 4 5 6 7'\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2\\n\") == \"1 1 3 4 4\"\nassert solution(\"5 5\\n5 4 3 2 1\\n\") == \"1 2 3 4 5\"\n\n\n\n\"\"\"\n\nfrom collections import deque\nfrom itertools import cycle\n\nn,m = [int(x) for x in stdin.split()]\nprint(*(int(stdin.split()[2]) for i in range(n)))\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5'\n\n\n\"\"\"\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 4\\n4 3 1 2') == '1 1 3 4 4'\nassert solution('5 5\\n5 4 3 2 1') == '1 2 3 4 5'\nassert solution('5 4\\n4 3 2 1') == '1 1 3 4 4'\n\nassert solution('3 3\\n2 1 3') == '1 1'\nassert solution('4 4\\n4 3 2 1') == '1 2 3 4'\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n4 3 1 2\\n\") == \"1 1 3 4 4\"\nassert solution(\"3 3\\n3 2 1\\n\") == \"1 2 3\"\nassert solution(\"5 5\\n5 4 3 2 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"3 5\\n3 4 3 2 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"5 3\\n5 4 3 2 1\\n\") == \"1 2 3\"\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n4 3 1 2\\n\") == \"1 1 3 4 4\"\nassert solution(\"5 5\\n5 4 3 2 1\\n\") == \"1 2 3 4 5\"\nassert solution(\"4 3\\n1 2 3 4\\n\") == \"1 1 3 4 4\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n4 3 1 2\") == \"1 1 3 4 4\"\nassert solution(\"5 5\\n5 4 3 2 1\") == \"1 2 3 4 5\"\nassert solution(\"5 10\\n5 4 3 2 1\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1 1\\n1\") == \"1\"\nassert solution(\"2 2\\n2\") == \"2\"\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('-1 3') == '1'\nassert solution('-1 3 -3') == '2'\nassert solution('-1 3 -4') == '3'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('-1 1 2') == '1'\nassert solution('-1 -1 -1') == '2'\nassert solution('0 0 1 2') == '1'\nassert solution('-1 -1 -1') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3\\n-2 -2') == '2'\nassert solution('3 2\\n-1 -1 2') == '1'\nassert solution('3 2\\n-2 -1 2') == '2'\nassert solution('3 2\\n-3 -3 2') == '2'\nassert solution('3 2\\n1 -3 2') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n-1 1 2') == '1'\nassert solution('3 2\\n-2 -2\\n1 1') == '2'\nassert solution('2 3\\n-2 -2\\n2 2') == '2'\nassert solution('2 3\\n1 1') == '1'\nassert solution('2 3\\n1 2') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n-1 1 2') == '1'\nassert solution('2 3\\n-2 -2') == '2'\nassert solution('1 1\\n1') == '0'\nassert solution('2 2\\n0') == '1'\nassert solution('2 2\\n0') == '1'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-1 1 2') == '1'\nassert solution('-2 -2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('-5 -1') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-2 -2') == '2'\nassert solution('2 2\\n1 1') == '1'\nassert solution('3 3\\n-2 -2 -2') == '3'\nassert solution('3 3\\n-2 -2 -2\\n-1 -1') == '2'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-1 1 2''') == 1\nassert solution('''-1 -1 -2''') == 1\nassert solution('''-1 -1 2''') == 0\nassert solution('''-1 -1''') == 2\nassert solution('''-1 1''') == 1\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n-1 1 2') == '1'\nassert solution('2 3\\n-2 -2') == '2'\nassert solution('4 2\\n-2 -2 -2 -2') == '4'\nassert solution('2 3\\n-2 -2') == '1'\nassert solution('5 2\\n-2 -2 -2 -2 -2') == '2'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2\\n2 3') == '1 2\\n2 3'\nassert solution('1 2\\n2 3\\n3 1') == '1 2\\n2 3'\nassert solution('1 2\\n2 3\\n3 4') == '1 2\\n2 3\\n3 4'\nassert solution('1 2\\n1 2\\n3 4') == '1'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n''') == '''3\n1 2\n2 3\n3 1\n'''\n\nassert solution('''\n2 1\n''') == '''2\n1 1\n'''\n\nassert solution('''\n4 3\n''') == '''-1\n'''\n\nassert solution('''\n3 2\n''') == '''3\n1 2\n2 3\n1 3\n'''\n\nassert solution('''\n5 1\n''') == '''5\n1 2\n2 3\n3 4\n4 5\n'''\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == '1 2'\nassert solution('''2 2''') == '1 2'\nassert solution('''1 1''') == '-1'\nassert solution('''1 1''') == '-1'\nassert solution('''1 1''') == '-1'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    '''3 1'''\n) == '3'\n\nassert solution(\n    '''5 2'''\n) == '-1'\n\nassert solution(\n    '''3 1'''\n) == '1 2'\n\nassert solution(\n    '''2 3'''\n) == '-1'\n\nassert solution(\n    '''3 1'''\n) == '-1'"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3 1'\n\n'''\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3'\nassert solution('2 2') == '2'\nassert solution('3 2') == '1'\nassert solution('4 2') == '-1'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2 1\n''') == '''1\n2 2\n3 1\n'''\n\nassert solution(\n'''\n1 1\n''') == '''-1\n'''\n\nassert solution(\n'''\n1\n''') == '''-1\n'''\n\nassert solution(\n'''\n5 5\n''') == '''3\n3 4\n3 5\n4 3\n4 4\n'''\n\nassert solution(\n'''\n1 3\n''') == '''-1\n'''"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '3'\nassert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('3 2') == '2'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1''') == '3'\n'''    \nassert solution('''2 2''') == '1'\nassert solution('''2 3''') == '1 2'\nassert solution('''4 3''') == '1 2'\nassert solution('''4 5''') == '1 2'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1''') == '''3\n1 2\n2 3\n3 1'''\nassert solution('''3 2''') == '''3\n-1'''\nassert solution('''5 3''') == '''3\n1 2\n2 3\n3 4\n4 5\n5 1\n-1'''\nassert solution('''10 5''') == '''3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n-1'''\nassert solution('''1000 1''') == '''-1'''\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('0 0 0 0') is None\nassert solution('1 2 1 2') == 0.666666666666\nassert solution('1 1 1 1') == 0\nassert solution('1000 1 1000 1') == 0\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2') == 0.666666666667\nassert solution('1 1 1 1') == 1.0\nassert solution('5 5 5 5') == 0.0\nassert solution('0 0 0 0') == 1.0\nassert solution('1 1 1 1') == 1.0\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('2 1 1 2') == '0.5'\nassert solution('2 1 2 1') == '0.0'\nassert solution('1 2 2 1') == '0.5'\nassert solution('2 2 1 1') == '0.5'\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 0.666666666667\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt', 'r')\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\n'''\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 0.666666666667\n\n\n\n\"\"\"\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 0.666666666667\nassert solution(stdin) == 0.666666666667\nassert solution(stdin) == 0.666666666667\nassert solution(stdin) == 0.666666666667\n'''\n\n'''\nsolution:\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 1 2''') == '0.666666666667'\nassert solution('''3 4 1 1''') == '0.5'\nassert solution('''4 4 0 2''') == '0.5'\nassert solution('''2 2 2 2''') == '0.5'\nassert solution('''1 1 1 1''') == '0.5'\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2') == '0.666666666667'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 2 1 2') == '0.666666666667'\nassert solution('2 2 2 2') == '0.5'\nassert solution('100 3 100 1') == '0.9999999999999998'\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.666666666667\"\n\nInput\n3 5 6 6\n\nOutput\n0.79999999999999\n\nInput\n1 1 2 1\n\nOutput\n0.5\n\nInput\n3 5 1 2\n\nOutput\n0.5\n\nInput\n2 2 1 1\n\nOutput\n1.0\n\nInput\n2 1 2 1\n\nOutput\n0.5\n\"\"\"\n\nimport sys\nfrom fractions import Fraction"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100 10 1 0') == '4\\n0 1 10 100'\nassert solution('2 70 3') == '2\\n2 70\\n'\nassert solution('100 10 1 0') == '4\\n0 1 10 100'\n\nprint(solution('3 4 3'))\nprint(solution('0 1'))\nprint(solution('1 1'))\nprint(solution('2 7'))\nprint(solution('7 2'))\nprint(solution('100 0'))\nprint(solution('0 0'))\nprint(solution('1 1 1'))\nprint(solution('10 100'))\nprint(solution('100 1'))\nprint(solution('100 100'))\n\n-----Submission-----\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1 0') == '1'\nassert solution('2 2 2 2') == '0'\nassert solution('2 7 8 6') == '1'\nassert solution('2 1 1 0') == '2'\nassert solution('2 3 1 0') == '2'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n100 10 1 0''') == '4'\nassert solution('''5\n70 3 2 1''') == '2'\nassert solution('''3\n2 70 3''') == '2'\nassert solution('''10\n9 8 7 6 5 4 3 2 1''') == '2'\nassert solution('''10\n99 101 108 107 106 105 104 103 101 90 98 99''') == '2'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n100 10 1 0''') == '4\\n0 1 10 100'\nassert solution('''3\n2 70 3''') == '2\\n2 70'\nassert solution('''2\n1 2''') == '1\\n1 2'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n0 0 0 0 0\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n''') == '1 0 1 2 3'\nassert solution('''8\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8\n''') == '1 0 1 2 3'\nassert solution('''8\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3\n4 4 4 4 4 4 4 4\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7\n8 8 8 8 8 8 8 8\n''') == '1 0 1 2 3'\nassert solution('''8\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n''') == '1 0 1 2 3'\nassert solution('''8\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n''') == '1 0 1 2 3'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n100 10 1 0\n''') == '4', 'First'\n\nassert solution('''3\n2 70 3\n''') == '2', 'Second'\n\nassert solution('''1\n10\n''') == '1', 'Third'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n10 70 3 25\n\"\"\") == '4\\n2 70\\n'\nassert solution(\n\"\"\"\n6\n1 1 0 0 0\n\"\"\") == '5\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '1'\nassert solution('1\\n2\\n') == '0'\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '8 3'\n) == '3'\n\nassert solution(\n    '8 4'\n) == '1'\n\nassert solution(\n    '1 1'\n) == '0'\n\nassert solution(\n    '1 1 1'\n) == '1'\n\nassert solution(\n    '4 1'\n) == '3'"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n010') == '1'\nassert solution('8 3\\n01010110') == '3'\nassert solution('5 3\\n0101') == '2'\nassert solution('8 5\\n01010110') == '3'\n\"\"\""
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 4\n01101010\"\"\") == \"1\"\nassert solution(\"\"\"3 3\n01010110\"\"\") == \"3\"\nassert solution(\"\"\"8 3\n01010110\"\"\") == \"3\"\nassert solution(\"\"\"8 3\n11111111\"\"\") == \"3\"\nassert solution(\"\"\"8 4\n01111111\"\"\") == \"3\"\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n01010110\") == \"3\"\nassert solution(\"3 3\\n101101\") == \"1\"\nassert solution(\"8 3\\n01010110\") == \"3\"\nassert solution(\"4 5\\n10101\") == \"2\"\nassert solution(\"9 9\\n
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n010\\n\") == \"1\"\nassert solution(\"8 3\\n01010110\\n\") == \"3\"\nassert solution(\"5 5\\n11111\\n\") == \"0\"\nassert solution(\"6 5\\n11111\\n\") == \"0\"\nassert solution(\"3 2\\n01\\n\") == \"0\"\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n\nimport sys\nfrom math import log2\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == 'Yes'\nassert solution('''1 0''') == 'Yes'\nassert solution('''5 2 3''') == 'Yes'\nassert solution('''1 2 3 2 2''') == 'Yes'\nassert solution('''4 3 4''') == 'Yes'\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('5 2 3') == 'Yes'\nassert solution('1 2 3 2 2') == 'No'\nassert solution('4 3 4') == 'Yes'\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1') == 'Yes'\nassert solution('2\\n2\\n1') == 'No'\nassert solution('2\\n2\\n2') == 'No'\nassert solution('2\\n1\\n2') == 'Yes'\nassert solution('2\\n1\\n2') == 'No'\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"3\n1 2 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\"\nassert solution(\"\"\"6\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"3\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\"\nassert solution(\"\"\"3\n1 2 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\n    '7',\n    '2 1 1',\n    '1 0',\n    '5 2 3',\n    '1 2 3 2 2',\n    '4 3 4',\n    '0 2 4 3',\n    '2 3 5',\n    '3 0',\n    '7 2 3',\n    '3 0 2 1 3 0 1',\n    '7 1 4',\n    '4 4 3 0 2 4 2',\n    '5 2 3',\n    '1 2 3 2 2',\n])) == 'Yes'\nassert solution('\\n'.join([\n    '7',\n    '2 1 1',\n    '1 0',\n    '5 2 3',\n    '1 2 3 2 2',\n    '4 3 4',\n    '0 2 4 3',\n    '2 3 5',\n    '3 0',\n    '7 2 3',\n    '3 0 2 1 3 0 1',\n    '7 1 4',\n    '4 4 3 0 2 4 2',\n    '5 2 3',\n    '1 2 3 2 2',\n])) == 'No'\nassert solution('\\n'.join([\n    '7',\n    '2 1 1',\n    '1 0',\n    '5 2 3',\n    '1 2 3 2 2',\n    '4 3 4',\n    '0 2 4 3',\n    '2 3 5',\n    '3 0',\n    '7 2 3',\n    '3 0 2 1 3 0 1',\n    '7 1 4',\n    '4 4 3 0 2 4 2',\n    '5 2 3',\n    '1 2 3 2 2',\n])) == 'Yes'\nassert solution('\\n'.join([\n    '7',\n    '2 1 1',\n    '1 0',\n    '5 2 3',\n    '1 2 3 2 2',\n    '4 3 4',\n    '0 2 4 3',\n    '2 3 5',\n    '3 0"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\") == \"Yes\"\nassert solution(\"2 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\") == \"No\"\nassert solution(\"1 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\") == \"Yes\"\nassert solution(\"1 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\") == \"No\"\nassert solution(\"2 1 1\\n1 0\\n5 2 3\\n1 2 3 2 2\\n4 3 4\\n0 2 4 3\\n2 3 5\") == \"Yes\"\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"7\n2 1 1\n1 0\n5 2 3\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"No\"\nassert solution(\"\"\"2\n2 2 1\n1 0\n5 3 2\n1 2 3 2 2\n4 3 4\n0 2 4 3\n2 3 5\n3 0\n7 2 3\n3 0 2 1 3 0 1\n7 1 4\n4 4 3 0 2 4 2\n5 2 3\n1 2 3 2 2\n\"\"\") == \"Yes\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"7 2 3\") == \"Yes\"\nassert solution(\"5 2 3\") == \"Yes\"\nassert solution(\"1 0\") == \"Yes\"\nassert solution(\"2 1 1\") == \"No\"\n"
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == 'Yes'\nassert solution('1 0') == 'No'\nassert solution('5 2 3') == 'Yes'\nassert solution('1 2 3 2 2') == 'Yes'\nassert solution('4 3 4') == 'No'\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n5 0 5 0\\n') == '0'\nassert solution('11\\n5 5 5 5 5 5 5 5 0 5 5\\n') == '5555555550'\nassert solution('2\\n1 1\\n') == '-1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1\\n') == '91919191919191919191919191919191919'\nassert solution('20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '7462764743658369181965948760230013562873'\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n5 0 5 0\\n\") == \"0\"\nassert solution(\"11\\n5 5 5 5 5 5 5 5 0 5 5\\n\") == \"5555555550\"\nassert solution(\"4\\n5 0 5 0\\n\") == \"-1\"\n\n\n-----Binary Search-----\n\n\"\"\""
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n5 0 5 0''') == '0'\nassert solution('''11\n5 5 5 5 5 5 5 5 0 5 5''') == '5555555550'\n'''\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"5555555550\"\nassert solution(\"10 9 8 7 6 5 4 3 2 1\") == \"5555555550\"\nassert solution(\"1000 9900 9800 980 9700 9600 9750 9500 9400 9300 9250 9200 9100 9000 9000 90000 900009 900008 900001 900000\") == \"0\"\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\\n5 0 5 0\\n\") == \"0\"\nassert solution(\"11\\n5 5 5 5 5 5 5 5 0 5 5\\n\") == \"5555555550\""
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n4\n5 0 5 0\n''') == '0'\n\nassert solution(\n'''\n11\n5 5 5 5 5 5 5 5 0 5 5\n''') == '5555555550'\n'''"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 0 5 0\n''') == '0'\n\nassert solution('''11\n5 5 5 5 5 5 5 5 0 5 5\n''') == '5555555550'\n'''\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5 0 5 0\\n\") == \"0\\n\"\nassert solution(\"11\\n5 5 5 5 5 5 5 5 0 5 5\\n\") == \"5555555550\\n\"\nprint('Test Successful')\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\") == \"\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\\n5\") == \"\"\nassert solution(\"5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\") == \"\"\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4\n5 0 5 0\n''') == '0'\n\nassert solution(\n'''\n11\n5 5 5 5 5 5 5 5 0 5 5\n''') == '5555555550'\n\nassert solution(\n'''\n5\n0 0 0 0 0\n''') == '-1'"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution('''5 21\n2 4 100 2 6''') == '6'\nassert solution('''5 2 5\n2 4 100 2 6''') == '10'\nassert solution('''1 2 3 4 5\n5 6 7 8 9 10''') == '25'\nassert solution('''1 2 3 4 5\n2 3 4 5 6''') == '45'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 2 5\") == \"1\"\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 21\\n2 4 100 2 6') == '6'\nassert solution('3 38\\n5 2 5') == '10'\nassert solution('3 100\\n3 3 3') == '3'\nassert solution('1\\n3') == '1'\nassert solution('1\\n3\\n3') == '1'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 2 5') == '1'\nassert solution('5 21') == '6'\nassert solution('5 21 2 4 100 2 6') == '6'\nassert solution('4 1 5 3') == '6'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 38''') == '10'\nassert solution('''5 21''') == '6'\nassert solution('''5 21''') == '6'\nassert solution('''5 21''') == '6'\nassert solution('''5 21''') == '6'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n8 11') == '1'\nassert solution('2\\n1 11') == '2'\nassert solution('3\\n10 10 11') == '1'\nassert solution('4\\n1 1 1 1 1') == '5'\nassert solution('5\\n1 1 1 1 1') == '6'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n5 2 5\n''') == '10'\nassert solution('''5 21\n2 4 100 2 6\n''') == '6'\nassert solution('''5 21\n2 4 100 2 6\n''') == '6'\nassert solution('''5 21\n2 4 100 2 6\n''') == '6'\nassert solution('''5 21\n2 4 100 2 6\n''') == '6'\n"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 5') == '10'\nassert solution('5 21') == '6'\nassert solution('5 10 2 4 6') == '6'\n\n\n-----"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3 21\"\"\") == \"6\"\n\nassert solution(\n\"\"\"5 21\"\"\") == \"6\""
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 1') == '5 2'\nassert solution('8 1 1') == '5 2'\nassert solution('10 2 1') == '1 9'\nassert solution('8 1 1') == '5 2'\nassert solution('10 2 1') == '5 2'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"0 0\"\nassert solution(\"1 1 1\") == \"0 0\"\nassert solution(\"1 1 1\") == \"0 0\"\nassert solution(\"2 2 2\") == \"1 9\"\nassert solution(\"2 2 2\") == \"1 9\"\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 2 1') == '1 9'\nassert solution('8 1 1') == '5 2'\nassert solution('5 1 1') == '0 0'\nassert solution('8 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n2 2 2') == '5 2'\nassert solution('8 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n2 2 2') == '0 0'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 2 1''') == '1 9'\nassert solution('''8 1 1''') == '5 2'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 2 1''') == '1 9'\nassert solution('''8 1 1''') == '5 2'\nassert solution('''5 1 1''') == '0 0'\nassert solution('''5 1 1''') == '5 2'\nassert solution('''5 1 1''') == '5 2'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 2 1''') == '1 9'\nassert solution('''8 1 1''') == '5 2'\nassert solution('''5 1 1''') == '0 0'\nassert solution('''1 2 2''') == '0 0'\nassert solution('''2 2 2''') == '5 2'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\") == \"1 9\"\nassert solution(\"2 2 2\") == \"0 0\"\nassert solution(\"1 1 1\") == \"1 9\"\nassert solution(\"1 2 1\") == \"1 9\"\nassert solution(\"1 2 2\") == \"1 9\"\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n') == '1 9'\nassert solution('8 1 1\\n2 2 1\\n3 3 1\\n3 1 3\\n1 1 1\\n2 1 1\\n1 2 3\\n') == '5 2'\nassert solution('5 1 1\\n1 2 2\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n2 2 2\\n') == '0 0'\nassert solution('7 1 1\\n1 1 2\\n2 2 2\\n2 2 2\\n2 2 2\\n1 1 1\\n1 2 3\\n') == '5 2'\nassert solution('8 2 2\\n2 2 1\\n2 1 2\\n3 1 3\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\\n3 3 3\\n') == '0 0'\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout\n\nk,a,b = map(int,stdin.readline().strip().split(' '))\na1,b1,a2,b2,a3,b3 = map(int,stdin.readline().strip().split(' '))\n\nm = [a1,b1,a2,b2,a3,b3]"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1 9'\nassert solution('2 2 2') == '0 0'\nassert solution('1 2 2') == '5 2'\nassert solution('1 2 1') == '1 9'\nassert solution('1 1 1') == '1 9'\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"-1 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n-----\n\n\"\"\""
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(test_input) == test_output\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('test') == '0 6 1 3 5'\n'''\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\\n\") == \"\"\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-199 192\") == \"-191 -19\"\nassert solution(\"-199 192 -99\") == \"-191 -191 -1\"\nassert solution(\"-199 192 -99 -31 -7\") == \"-191 -191 -1 -4 -8\"\nassert solution(\"-199 192 -99 -31 -7 -10 -15\") == \"-191 -191 -1 -4 -8 -15\"\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('input.txt') == '391 0'\n\n\"\"\"\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('-199 192') == '391 0'\nassert solution('-1 192') == '-1 0'\nassert solution('0 1') == '0'\nassert solution('99') == '0'\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3\\n3 5 7 1 6 2 8\\n1 2 7\\n') == '7 1 2'\nassert solution('4 4\\n3 4 1 0\\n0 1 7 9\\n') == '1 0'\nassert solution('3 3\\n0 1 7 9\\n0 2 7\\n') == '1 2'\nassert solution('3 2\\n0 1 7 9\\n1 2 7\\n') == '0 1'\nassert solution('2 1\\n0 1\\n') == '0'\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"7 1 2\"\nassert solution(stdin) == \"1 0\"\nassert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"1 2 3\"\nassert solution(stdin) == \"1 2 3 4\"\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3\n3 5 7 1 6 2 8\n1 2 7\n''') == '7 1 2'\nassert solution('''4 4\n3 4 1 0\n0 1 7 9\n''') == '1 0'\nassert solution('''7 3\n3 4 1 0\n0 1 7 9\n''') == '1 0'\nassert solution('''7 3\n3 5 7 1 6 2 8\n1 2 7\n''') == '1 0'\nassert solution('''7 3\n3 4 1 0\n0 1 7 9\n''') == '1 0'\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7 3\\n3 5 7 1 6 2 8\\n1 2 7\\n1 2 7\\n') == '7 1 2\\n'\nassert solution('4 4\\n3 4 1 0\\n0 1 7 9\\n0 1 7 9\\n') == '1 0\\n'\nassert solution('5 6\\n7 6 1 2 3 4 5\\n1 3 5 2 7 4') == '1 3 2\\n'\nassert solution('3 3\\n3 3 3\\n3 3 3') == '3 3 3\\n'\nassert solution('5 5\\n7 7 7 7 7\\n7 7 7 7 7\\n7 7 7 7 7\\n7 7 7 7 7') == '7 7 7 7 7 7 7 7 7\\n'\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3\\n3 5 7 1 6 2 8\\n1 2 7') == '7 1 2'\nassert solution('4 4\\n3 4 1 0\\n0 1 7 9\\n') == '1 0'\nassert solution('7 4\\n1 2 7 0 9\\n0 1 6 2 8') == '1 0'\nassert solution('2 2\\n2 0 2 0\\n1 1') == '0 1'\nassert solution('8 4\\n3 4 1 0 0 9\\n0 1 7 2 2') == '1 0'\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 3\\n3 5 7 1 6 2 8\\n1 2 7\") == \"7 1 2\"\nassert solution(\"4 4\\n3 4 1 0\\n0 1 7 9\") == \"1 0\"\nassert solution(\"7 6\\n0 6 1 7 6 4 5\\n7 7 6 4 4 4 5\") == \"0 1 2\""
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 3\n3 5 7 1 6 2 8\n1 2 7\n''') == '7 1 2'\nassert solution('''4 4\n3 4 1 0\n0 1 7 9\n''') == '1 0'\nassert solution('''4 4\n3 4 1 0\n0 1 7 9\n''') == '1 0'\nassert solution('''9 7\n7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == '0'\nassert solution('''2''') == '1'\nassert solution('''3''') == '1'\nassert solution('''4''') == '2'\nassert solution('''5''') == '3'\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('99') == '49'\nassert solution('1') == '0'\nassert solution('99') == '49'\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"99\") == \"49\"\nassert solution(\"999999999999999999999999999999999999999999999999999999999999999999999999999999999\") == \"49\"\nassert solution(\"99999\") == \"49\"\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('99') == '49'\nassert solution('0') == '0'\nassert solution('9') == '1'\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '0'\nassert solution('''3''') == '1'\nassert solution('''99''') == '49'\nassert solution('''9''') == '0'\nassert solution('''1000000000''') == '0'\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '0'\nassert solution('3\\n') == '1'\nassert solution('99\\n') == '49'\n\nprint(\"Hello World\")\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1''') == '0'\nassert solution('''3''') == '1'\nassert solution('''99''') == '49'\nassert solution('''5''') == '1'\nassert solution('''10''') == '9'\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('10') == '49'\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n++-+-\n+-+-+\n\"\"\"\n) == \"1.000000000000\"\n\nassert solution(\n\"\"\"\n+-?-?\n+-++-\n++?-?\n+-?-?\n\"\"\"\n) == \"0.500000000000\"\n\nassert solution(\n\"\"\"\n+++\n??-\n\"\"\"\n) == \"0.000000000000\"\n\nassert solution(\n\"\"\"\n+++\n-??\n\"\"\"\n) == \"0.500000000000\"\n\nassert solution(\n\"\"\"\n++?-?\n++?-?\n+?-?\n++?-?\n++?-?\n+?-?\n+?-?\n+?-?\n++?-?\n++?-?\n+?-?\n\"\"\"\n) == \"0.166666666667\""
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('++-') == 1.000000000000\nassert solution('++-+') == 0.500000000000\nassert solution('+-?') == 0.000000000000\nassert solution('+---') == 0.000000000000\nassert solution('++-++-') == 0.000000000000\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"++-+-\") == \"1.000000000000\"\nassert solution(\"+-+-+\") == \"0.500000000000\"\nassert solution(\"+-??\") == \"0.000000000000\"\nassert solution(\"+++\") == \"0.000000000000\"\n\"\"\"\n\n\nimport collections\nimport numpy as np\nfrom scipy.stats import binom"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"1.000000000000\"\nassert solution(\"+-+-\") == \"0.500000000000\"\nassert solution(\"+++\") == \"0.000000000000\"\nassert solution(\"??-\") == \"0.000000000000\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"++-\", \"++-\") == \"1.0\"\nassert solution(\"+++\", \"++-\") == \"0.25\"\nassert solution(\"+---\", \"++-\") == \"0.25\"\nassert solution(\"++-++\", \"++-++\") == \"0.125\"\nassert solution(\"-++-++\", \"++-++\") == \"0.125\"\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"++-\") == \"1.000000000000\"\nassert solution(\"+--\") == \"0.000000000000\"\nassert solution(\"+++\") == \"0.000000000000\"\nassert solution(\"++-++\") == \"0.000000000000\"\nassert solution(\"+-++\") == \"0.000000000000\"\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"++-\") == \"0.5\"\nassert solution(\"++-\") == \"0.5\"\nassert solution(\"+-\") == \"0\"\nassert solution(\"+-\") == \"0\"\nassert solution(\"++-+-\") == \"0.5\"\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"++-+-\", \"+-??\", \"-+++\") == \"0.500000000000\"\nassert solution(\"+-++\", \"+-??\", \"-+++\") == \"0.000000000000\"\nassert solution(\"++-+-\", \"+-??\", \"+-++\") == \"0.000000000\"\nassert solution(\"++-+-\", \"+-??\", \"+-++\") == \"0.000000000\"\nassert solution(\"++-+-\", \"+-??\", \"+-++\") == \"0.000000000\"\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == expect\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1 3 0 1') == 'Possible\\n4 5 1 3 2'\nassert solution('9\\n0 2 3 4 1 1 0 2 2') == 'Possible\\n7 5 2 1 6 8 3 4 9'\nassert solution('4\\n0 2 1 1') == 'Impossible'\nassert solution('4\\n2 0 3 0') == 'Impossible'\nassert solution('10\\n2 3 4 5 1 6 1 6 1 6') == 'Possible\\n5 3 2 4 1 6 6 6 1'\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 3 0 1\") == \"Possible\\n4 5 1 3 2\\n\"\nassert solution(\"9\\n0 2 3 4 1 1 0 2 2\") == \"Possible\\n7 5 2 1 6 8 3 4 9\\n\"\nassert solution(\"4\\n0 2 1 1\") == \"Impossible\\n\"\nassert solution(\"10\\n0 2 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\\n1"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 3 0 1''') == \"Possible\"\nassert solution('''9\n0 2 3 4 1 1 0 2 2''') == \"Possible\"\nassert solution('''4\n0 2 1 1''') == \"Impossible\"\nassert solution('''9\n0 2 3 4 1 1 0 2 2''') == \"Possible\"\nassert solution('''7\n0 2 1 1''') == \"Possible\"\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 3 0 1''') == 'Possible'\nassert solution('''9\n0 2 3 4 1 1 0 2 2''') == 'Possible'\nassert solution('''4\n0 2 1 1''') == 'Impossible'\nassert solution('''1\n0''') == 'Impossible'\nassert solution('''9\n0 2 3 4 1 1 0 2 2''') == 'Possible'\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"2\") == \"Possible\"\nassert solution(\"2 1 3 0 1\") == \"Possible\"\nassert solution(\"0 2 3 4 1 1 0 2 2\") == \"Possible\"\nassert solution(\"0 2 3 4 1 1 0 2 2\") == \"Possible\"\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1 3 0 1\") == \"Possible\\n4 5 1 3 2\"\nassert solution(\"9\\n0 2 3 4 1 1 0 2 2\") == \"Possible\\n7 5 2 1 6 8 3 4 9\"\nassert solution(\"4\\n0 2 1 1\") == \"Impossible\"\nassert solution(\"2 2 1 1\") == \"Impossible\"\nassert solution(\"2 2 1 1\") == \"Impossible\"\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 3 0 1''') == 'Possible'\nassert solution('''9\n0 2 3 4 1 1 0 2 2''') == 'Possible'\nassert solution('''4\n0 2 1 1''') == 'Impossible'\nassert solution('''9\n2 0 2 0 2 2 2 2''') == 'Impossible'\nassert solution('''2\n0 2''') == 'Impossible'\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n5\n2 1 3 0 1\n\"\"\") == \"\"\"\\\nPossible\n4 5 1 3 2 \n\"\"\"\nassert solution(\"\"\"\\\n9\n0 2 3 4 1 1 0 2 2\n\"\"\") == \"\"\"\\\nPossible\n7 5 2 1 6 8 3 4 9\n\"\"\"\nassert solution(\"\"\"\\\n4\n0 2 1 1\n\"\"\") == \"\"\"\\\nImpossible\n\"\"\"\nassert solution(\"\"\"\\\n10\n1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"\"\"\\\nImpossible\n\"\"\"\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 2 1 1') == 'Possible'\nassert solution('5') == 'Possible'\nassert solution('9') == 'Possible'\nassert solution('0 2 1 1') == 'Possible'\nassert solution('9') == 'Possible'\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '2.0000000000'\nassert solution('''2 2''') == '5.4142135624'\nassert solution('''3 3''') == '9.83333333333'\nassert solution('''10 10''') == '18.59583333333'\nassert solution('''100 100''') == '52.88888888889'\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '1 1'\n) == '2.0000000000'\n\nassert solution(\n    '2 2'\n) == '5.4142135624'\n\n\"\"\"\n\n\n\nimport sys"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2.0000000000'\nassert solution('2 2') == '5.4142135624'\nassert solution('3 3') == '10.16666666666'\nassert solution('4 4') == '17.25'\nassert solution('5 5') == '34.5'\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5.4142135624\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2.0000000000'\nassert solution('2 2') == '5.4142135624'\nassert solution('1 1') == '2.0000000000'\nassert solution('2 2') == '5.4142135624'\n\"\"\"\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2.0000000000\"\nassert solution(\"2 2\") == \"5.4142135624\"\nassert solution(\"1 1\") == \"2.0000000000\"\nassert solution(\"1 1\") == \"2.0000000000\"\nassert solution(\"1 1\") == \"2.0000000000\"\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2.0000000000'\nassert solution('2 2') == '5.4142135624'\n'''\n\nm, R = map(int, input().split())"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\n\"\"\"\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 3 2 0') == '3'\nassert solution('2\\n10 10') == '1'\nassert solution('6\\n5 2 6 5 7 4') == '6'\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 2 0\\n\") == \"3\"\nassert solution(\"6\\n5 2 6 5 7 4\\n\") == \"6\"\nassert solution(\"2\\n10 10\\n\") == \"1\"\nassert solution(\"6\\n5 2 6 5 7 4\\n\") == \"6\"\nassert solution(\"10\\n10\\n\") == \"1\"\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5') == '1'\nassert solution('4\\n2 3 2 0') == '3'\nassert solution('6\\n5 2 6 5 7 4') == '6'\nassert solution('2\\n10 10') == '1'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\n\n\"\"\"\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split('\\n')[-1]\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2') == '1'\nassert solution('2\\n10\\n') == '3'\nassert solution('6\\n5 2 6 5 7 4') == '6'\n\n\n\n\"\"\""
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6\\n5 2 6 5 7 4\\n') == '6'\nassert solution('3\\n10 10\\n') == '3'\nassert solution('2\\n10 10\\n') == '1'\nassert solution('10\\n5 2 6 5 7 4\\n') == '6'\nassert solution('7\\n5 2 6 5 7 4\\n') == '5'\n"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 2 0\") == \"3\"\nassert solution(\"2\\n10 10\") == \"1\"\nassert solution(\"6\\n5 2 6 5 7 4\") == \"6\"\nassert solution(\"0\\n10 10\") == \"1\"\nassert solution(\"3\\n3 4 2 1\") == \"1\"\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10 30\") == \"5\"\nassert solution(\"60 120\") == \"9\"\nassert solution(\"10 30\") == \"5\"\nassert solution(\"60 120\") == \"9\"\nassert solution(\"10 60\") == \"0\"\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30\\n10 35\\n05:20\\n') == '5'\nassert solution('60 120\\n24 100\\n13:00\\n') == '9'\nassert solution('10 10\\n10 10\\n05:20\\n') == '9'\nassert solution('60 120\\n24 100\\n13:40\\n') == '9'\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 30') == '5'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"10 30\") == \"5\"\nassert solution(\"60 120\") == \"9\"\nassert solution(\"24 100\") == \"9\"\nassert solution(\"13:00\") == \"5\"\nassert solution(\"21:34\") == \"2\"\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 30') == '5'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\nassert solution('60 120') == '9'\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 30\n10 35\n05:20''') == '5'\nassert solution('''60 120\n24 100\n13:00''') == '9'\nassert solution('''3 1\n1 1\n1 1\n1 1''') == '2'\n'''\n1. a, b are the parameters of the simulation.\n2. t_a is the travel time of the first bus from A to B.\n3. t_b is the travel time of the second bus from B to A.\n4. departure_time is the time of departure of the bus from A to B.\n5. departure_time is the time of departure of the bus from B to A.\n6. t_a is the first element in the result list.\n7. t_b is the second element in the result list.\n8. departure_time is the third element in the result list.\n9. t_a is the fourth element in the result list.\n10. t_b is the fifth element in the result list.\n11. departure_time is the sixth element in the result list.\n12. t_a is the seventh element in the result list.\n13. t_b is the eigth element in the result list.\n14. departure_time is the ninth element in the result list.\n15. t_a is the tenth element in the result list.\n16. t_b is the eleventh element in the result list.\n17. departure_time is the twelfth element in the result list.\n18. t_a is the thirteenth element in the result list.\n19. t_b is the fourteenth element in the result list.\n20. departure_time is the fifteenth element in the result list.\n21. t_a is the sixthteen element in the result list.\n22. t_b is the seventeenth element in the result list.\n23. departure_time is the eighteenth element in the result list.\n24. t_a is the nineteenth element in the result list.\n25. t_b is the twentieth element in the result list.\n26. departure_time is the twentyith element in the result list.\n27. t_a is the twenty-first element in the result list.\n28. t_b is the twenty-eighth element in the result list.\n29. departure_time is the twenty-ninth element in the result list.\n30. t_a is the thirty-first element in the result list.\n31. t_b is the thirty-eighth element in the result list.\n32. departure_time is the thirty-ninth element in the result list.\n33. t_a is the thirty-twelfth element in the result list.\n34. t_b is the thirty-seventeenth element in the result list.\n35. departure_time is the thirty-twenty element in the result list.\n36. t_a is the thirty-twenty-first element in the result list.\n37. t_b is the thirty-twenty-eighth element in the result list.\n38. departure_time is the thirty-twenty-ninth element in the result list.\n39. t_a is the thirty-thirty element in the result list.\n40. t_b is the thirty-thirty-eighth element in the result list.\n41. departure_time is the thirty-thirty-ninth element in the result list.\n42. t_a is the thirty-thirty-twelfth element in the result list.\n43. t_b is the thirty-thirty-seventeenth element in the result list.\n44. departure_time is the thirty-thirty-twenty element in the result list.\n45. t_a is the thirty-thirty-twenty-first element in the result list.\n46. t_b is the thirty-thirty-twenty-eighth element in the result list.\n47. departure_time is the thirty-thirty-twenty-ninth element in the result list.\n48. t_a is the thirty-thirty-thirty element in the result list.\n49. t_b is the thirty-thirty-thirty-eighth element in the result list.\n50. departure_time is the thirty-thirty-thirty-ninth element in the result list.\n51. t_a is the thirty-thirty-thirty-twelfth element in the result list.\n52. t_b is the thirty-thirty-thirty-seventeenth element in the result list.\n53. departure_time is the thirty-thirty-thirty-twenty element in the result list.\n54. t_a is the thirty-thirty-thirty-twenty-first element in the result list.\n55. t_b is the thirty-thirty-thirty-twenty-eighth element in the result list.\n56. departure_time is the thirty-thirty-thirty-twenty-ninth element in the result list.\n57. t_a is the thirty-thirty-thirty-thirty element in the result list.\n58. t_b is the thirty-thirty-thirty-thirty-eighth element in the result list.\n59. departure_time is the thirty-thirty-thirty-thirty-ninth element in the result list.\n60. t_a is the thirty-thirty-thirty-thirty-twelfth element in the result list.\n61. t_b is the thirty-thirty-thirty-thirty-seventeenth element in the result list.\n62. departure_time is the thirty-thirty-thirty-thirty-twenty element in the result list.\n63. t_a is the thirty-thirty-thirty-thirty-twenty-first element in the result list.\n64. t_b is the thirty-thirty-thirty-thirty-twenty-eighth element in the result list.\n65. departure_time is the thirty-thirty-thirty-thirty-twenty-ninth element in the result list.\n66. t_a is the thirty-thirty-thirty-thirty-thirty element in the result list.\n67. t_b is the thirty-thirty-thirty-thirty-thirty-eighth element in the result list.\n68. departure_time is the thirty-thirty-thirty-thirty-thirty-ninth element in the result list.\n69. t_a is the thirty-thirty-thirty-thirty-thirty-twelfth element in the result list.\n70. t_b is the"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 30\") == '5'\nassert solution(\"60 120\") == '9'\nassert solution(\"24 100\") == '9'\nassert solution(\"13:00\") == '5'\nassert solution(\"05:20\") == '5'\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\\n\") == \"2\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\\n\") == \"4\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\\n\") == \"4\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\\n\") == \"4\"\nassert solution(\"1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\\n31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\\n\") == \"4\"\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''100 1''') == '0'\nassert solution('''4 10''') == '2'\nassert solution('''42 42 42 42 42 42 42 42''') == '3'\nassert solution('''2 5''') == '1'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 10\\n1 5 2 1 1 1 2 5 7 2\\n') == '2'\nassert solution('100 1\\n1\\n') == '0'\nassert solution('2 5\\n5 4 3 2 1\\n') == '1'\nassert solution('3 9\\n42 42 42 42 42 42 42 42 42\\n') == '3'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10\\n1 5 2 1 1 1 2 5 7 2') == '2'\nassert solution('100 1\\n1') == '0'\nassert solution('2 5\\n5 4 3 2 1') == '1'\nassert solution('3 9\\n42 42 42 42 42 42 42 42 42\\n') == '3'\nassert solution('3 9\\n42 42 42 42 42 42 42 42 42\\n42 42 42 42 42 42 42 42 42\\n') == '3'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 10\n1 5 2 1 1 1 2 5 7 2\n\"\"\") == \"2\"\nassert solution(\"\"\"100 1\n1\n\"\"\") == \"0\"\nassert solution(\"\"\"2 5\n5 4 3 2 1\n\"\"\") == \"1\"\nassert solution(\"\"\"3 9\n42 42 42 42 42 42 42 42 42\n\"\"\") == \"3\""
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 10\n1 5 2 1 1 1 2 5 7 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 5\n5 4 3 2 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3 9\n42 42 42 42 42 42 42 42 42\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n2 1\n1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 1\n1\n\"\"\"\n) == \"0\""
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 10\n1 5 2 1 1 1 2 5 7 2\n''') == '2'\nassert solution('''100 1\n1\n''') == '0'\nassert solution('''2 5\n5 4 3 2 1\n''') == '1'\nassert solution('''3 9\n42 42 42 42 42 42 42 42 42\n''') == '3'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''100 1\n1''') == '3'\nassert solution('''100 2\n1 2\n''') == '0'\nassert solution('''1''') == '0'\nassert solution('''100 1\n42 42 42 42 42 42 42 42 42\n''') == '1'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '1'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 10\n1 5 2 1 1 1 2 5 7 2''') == '2'\nassert solution('''100 1\n1''') == '0'\nassert solution('''2 5\n5 4 3 2 1''') == '1'\nassert solution('''3 9\n42 42 42 42 42 42 42 42 42''') == '3'\nassert solution('''4 3\n1 2 1 1''') == '1'\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 10\n1 5 2 1 1 1 2 5 7 2''') == '2'\nassert solution('''100 1\n1''') == '0'\nassert solution('''2 5\n5 4 3 2 1''') == '1'\nassert solution('''3 9\n42 42 42 42 42 42 42 42 42''') == '3'\nassert solution('''10 1\n1''') == '0'\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 60\\n10 10\\n100 100\") == \"110\"\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 60\n10 10\n100 100\n''') == 110\nassert solution('''10 10\n100 100\n''') == 110\nassert solution('''100 100\n''') == 110\nassert solution('''1 10\n''') == 10\n\n'''\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 60') == '110'\nassert solution('10 10') == '100'\nassert solution('100 100') == '110'\nassert solution('3 10') == '100'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"110\"\n\n'''"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 60\\n10 10\\n100 100') == 110\nassert solution('2 2\\n10 10\\n100 100') == 110\nassert solution('1 2\\n1 1') == 1\nassert solution('10 10\\n100 100') == 110\nassert solution('10 10\\n100 100\\n100 100') == 110\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 60') == '110'\nassert solution('10 10') == '110'\nassert solution('100 100') == '110'\nassert solution('2 60') == '110'\nassert solution('10 10') == '110'\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.split()[2]\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 60\\n10 10\\n100 100\") == \"110\"\nassert solution(\"1 0\\n1 1\\n1 2\") == \"0\"\n\"\"\"\n\n\nfrom math import ceil\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 60\\n10 10\\n100 100') == '110'\nassert solution('1 1\\n1 1') == '0'\nassert solution('10 10\\n100 100') == '0'\n\n-----\n\nCopyright \u00a9 2015-2021 by Ilker Cinar Ergin. All rights reserved.\nUse of this source code is governed by a BSD-style license that can be found in the LICENSE file.\n\"\"\"\n\nimport sys\n\nn, t = map(int, sys.stdin.readline().split())\n\nd = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        if i!= j:\n            d[i][j] = min(d[i][j], d[j][i])\n\ntakahashi_happiness = 0\nfor a, b in d:\n    takahashi_happiness += (a * b)\n\nprint(takahashi_happiness)\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 60\n10 10\n100 100''') == 110\nassert solution('''3 60\n10 10\n100 100\n2 100\n2 100''') == 170\nassert solution('''3 60\n10 10\n100 100\n2 100\n2 100\n2 100''') == 170\n'''\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 10') == '0'\nassert solution('1000 100') == '0'\n\nprint(\"Testcases passed\")\n\n\"\"\""
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\"\n\nX, Y = [int(x) for x in stdin.split()]"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('7 7') == '6'\nassert solution('5 7') == '9'\nassert solution('1 1') == '1'\nassert solution('3 9') == '6'\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 2') == '2'\nassert solution('2 2') == '4'\nassert solution('2 2') == '4'\nassert solution('6 6') == '8'\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '5'\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3''') == '2'\nassert solution('''3 5''') == '0'\nassert solution('''10 3''') == '7'\nassert solution('''1000 998''') == '3'\nassert solution('''1000 998''') == '3'\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"10 10\") == \"4\"\nassert solution(\"99 100\") == \"7\"\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 1') == '1'\nassert solution('10 10') == '6'\nassert solution('1 0') == '0'\nassert solution('10 4') == '4'\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 10\") == \"8\"\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('4 2 4 1') == '4'\nassert solution('4 5 4 3') == '3'\nassert solution('1 5') == '1'\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"4\") == 2\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == 1\nassert solution('4') == 2\nassert solution('8') == 4\nassert solution('16') == 8\nassert solution('32') == 16\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == 2\nassert solution('5') == 1\nassert solution('6') == 0\nassert solution('2') == 0\nassert solution('0') == 1\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == 1\nassert solution('''2''') == 2\nassert solution('''3''') == 3\nassert solution('''4''') == 4\nassert solution('''5''') == 5\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '8'\nassert solution('2\\n') == '4'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '4'\nassert solution('5\\n') == '4'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '7'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == '8'\nassert solution(2) == '4'\nassert solution(3) == '9'\nassert solution(4) == '5'\nassert solution(5) == '6'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '4'\nassert solution('3') == '7'\nassert solution('4') == '4'\nassert solution('5') == '1'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '8'\nassert solution('''2''') == '4'\nassert solution('''6''') == '4'\nassert solution('''10''') == '4'\nassert solution('''100''') == '4'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '4'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '4'"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1) == \"8\"\nassert solution(2) == \"4\"\nassert solution(3) == \"6\"\nassert solution(4) == \"4\"\nassert solution(5) == \"2\"\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == '1 1'\nassert solution('''2 3''') == '2 0'\nassert solution('''7 3''') == '3 2'\nassert solution('''0 0''') == '0 0'\nassert solution('''6 3''') == '0 0'\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\n\n\"\"\""
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1 1'\nassert solution('3 1') == '1 0'\nassert solution('7 3') == '3 2'\nassert solution('4 2') == '2 1'\nassert solution('7 3') == '3 2'\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\nassert solution('100 1') == '100 100'\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\nassert solution('7 3') == '3 2'\nassert solution('2 3') == '2 0'\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\nassert solution('7 1') == '0 1'\nassert solution('7 0') == '0 0'\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 1''') == '1 1'\nassert solution('''2 3''') == '2 0'\nassert solution('''7 3''') == '3 2'\nassert solution('''7 3''') == '3 2'\nassert solution('''11 1''') == '5 1'\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 6 2 2\") == \"1.00000000000000000000\"\nassert solution(\"1 9 1 2\") == \"2.66666666666666650000\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('3 2 1 2') == '1.00000000000000000000'\nassert solution('2 6 2 2') == '1.00000000000000000000'\nassert solution('1 9 1 2') == '2.66666666666666650000'\nassert solution('1 9 2 2') == '2.66666666666666650000'\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4 1 2') == '1.00000000000000000000'\nassert solution('2 6 2 2') == '2.66666666666666650000'\nassert solution('9 1 2 2') == '2.66666666666666650000'\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000\n\nIn the second sample the period is 2.66666666666666650000\n\nIn the third sample the period is 3.33333333333333350000\n\nIn the fourth sample the period is 6.6666666666666680000\n\nIn the fifth sample the period is 10.00000000000000000000\n\nIn the sixth sample the period is 30.666666666666640000\n\nIn the seventh sample the period is 41.333333333333340000\n\nIn the eighth sample the period is 50.00000000000000000000\n\nIn the ninth sample the period is 100.00000000000000000000\n\nIn the tenth sample the period is 200.00000000000000000000\n\n\n-----\n\nNote:\n\nIn the first sample the period is 1.00000000000000000000"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 6 2 2\") == \"1.00000000000000000000\"\nassert solution(\"1 9 1 2\") == \"2.66666666666666650000\"\nassert solution(\"1 3 1 1\") == \"0.6666666666666666\""
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 6 2 2') == '1.00000000000000000000'\nassert solution('1 9 1 2') == '2.66666666666666650000'\n\n\"\"\"\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '1.0'\n'''"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 6 2 2') == '1.00000000000000000000'\nassert solution('1 9 1 2') == '2.66666666666666650000'\nassert solution('-10 12 21 22') == '-2.1855107517089844e-11'\nassert solution('0 0 0 0') == '1.00000000000000000000'\nassert solution('10 0 0 0') == '1.00000000000000000000'\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 1.00000000000000000000\nassert solution('3 2 1 1') == 2.66666666666666650000\n\n\n\n\"\"\""
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"1 2\") == \"0 0\"\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 60') == '6 1'\nassert solution('16 50') == '24 50'\nassert solution('3 17') == '0 0'\nassert solution('10 11') == '0 0'\nassert solution('16 19') == '0 0'\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 60') == '6 1'\nassert solution('16 50') == '24 50'\nassert solution('3 17') == '0 0'\nassert solution('4 15') == '4 15'\nassert solution('0 2') == '0 2'\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0 0'\nassert solution('2 3') == '0 0'\nassert solution('1 3') == '0 0'\nassert solution('3 2') == '0 0'\nassert solution('3 2') == '0 0'\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0\n0 0\n1 20\n3 21\n5 0\n19 30\n23 40''') == '6 1'\nassert solution('''0 0\n0 0\n1 20\n3 0\n4 30\n6 10\n7 50\n9 30\n11 10\n12 50\n14 30\n16 10\n17 50\n19 30\n21 10\n22 50\n23 59''') == '24 50'\nassert solution('''16 50\n0 30\n1 0\n12 0\n''') == '0 0'\n\n\n-----Solution (best)-----"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 60') == '6 1'\nassert solution('3 17') == '0 0'\nassert solution('16 50') == '24 50'\nassert solution('3 17') == '0 0'\nassert solution('8 30') == '8 30'\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 17\\n0 30\\n1 0\\n12 0\\n\") == \"0 0\"\nassert solution(\"6 60\\n0 0\\n1 20\\n3 21\\n5 0\\n19 30\\n23 40\\n\") == \"6 1\"\nassert solution(\"16 50\\n0 30\\n1 20\\n3 0\\n4 30\\n6 10\\n7 50\\n9 30\\n11 10\\n12 50\\n14 30\\n16 10\\n17 50\\n19 30\\n21 10\\n22 50\\n23 59\\n\") == \"24 50\"\nassert solution(\"5 15\\n0 0\\n1 10\\n2 10\\n3 10\\n4 10\\n5 10\\n6 30\\n7 50\\n8 50\\n9 30\\n10 30\\n11 50\\n12 30\\n13 50\\n14 30\\n15 30\\n16 50\\n17 30\\n18 50\\n19 30\\n20 50\\n21 30\\n22 50\\n23 50\\n\") == \"0 0\"\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 60') == '6 1'\nassert solution('16 50') == '0 0'\nassert solution('3 17') == '0 0'\nassert solution('1 10') == '0 0'\nassert solution('1 10') == '0 0'\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 60\\n0 0\\n1 20\\n3 21\\n5 0\\n19 30\\n23 40\\n') == '6 1'\nassert solution('16 50\\n0 30\\n1 20\\n3 0\\n4 30\\n6 10\\n7 50\\n9 30\\n11 10\\n12 50\\n14 30\\n16 10\\n17 50\\n19 30\\n21 10\\n22 50\\n23 59\\n') == '24 50'\nassert solution('3 17\\n0 30\\n1 0\\n12 0\\n') == '0 0'\nassert solution('16 50\\n0 30\\n1 0\\n12 0\\n') == '0 0'\nassert solution('3 17\\n0 30\\n1 0\\n12 0\\n') == '0 0'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 1 7') == '1 4 7'\nassert solution('2\\n1 1') == '1 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('3\\n1 1 7') == '1 1 7'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1 4'\nassert solution('2') == '1 1'\nassert solution('1 1') == '1 1'\nassert solution('3') == '1 1 1'\nassert solution('5') == '1 1 1 1 1'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('3\\n4 1 7') == '1 4 7'\nassert solution('4\\n4 1 7') == '1 4 7'\nassert solution('5\\n4 1 7') == '1 4 7'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1') == '1 1'\nassert solution('3\\n1 1 7') == '1 1 7'\nassert solution('3\\n4 1 7') == '1 4 7'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n1') == '1 1'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 1\n''') == '1 1'\nassert solution('''\n3\n4 1 7\n''') == '1 4 7'\nassert solution('''\n4\n4 1 7 2 3\n''') == '1 4 2 3 7'\nassert solution('''\n5\n4 1 7 2 3 5\n''') == '1 4 2 3 5'\nassert solution('''\n5\n4 1 7 2 3 4\n''') == '1 4 2 3 4'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n1 1\n''') == '1 1'\n\nassert solution(\n'''\n5\n2 1 7 2 3\n''') == '1 2 3 7 2'\n\nassert solution(\n'''\n6\n1 2 3 4 5 6\n''') == '1 2 4 3 5 6'\n\nassert solution(\n'''\n8\n1 2 3 4 5 6 7 8\n''') == '1 2 4 3 5 7 6'\n\nassert solution(\n'''\n10\n2 1 7 2 3 4 5 6 7 8 9 10\n''') == '1 2 4 3 6 7 5 8 9 10'"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 1 7\") == \"1 4 7\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"4 1 7\") == \"1 4 7\"\nassert solution(\"1 1 2 3 4 5 6 7 8\") == \"1 1 3 3 5 7\"\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 7') == '1 4 7'\nassert solution('2 1') == '1 2'\nassert solution('1 1') == '1 1'\nassert solution('1 1 2 1') == '1 1 2 1'\nassert solution('1 1 1 1') == '1 1 1 1'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 7') == '1 4 7'\nassert solution('1 1') == '1 1'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n82195\n64723\n\"\"\") == \"13\"\n\nprint(solution(\n\"\"\"\n5\n65432\n76543\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n8\n8\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n5\n86543\n21\n\"\"\") == \"1\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"4\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n4\n999\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n8\n9\n\"\"\") == \"1\")\nprint(solution(\n\"\"\"\n5\n8913\n90\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n99\n\"\"\") == \"4\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n4\n999\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n4\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n8\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n4\n99\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n4\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n8\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n4\n999\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n4\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n8\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n4\n999\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n4\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n8\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n1\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n4\n999\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n4\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n5\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n6\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n7\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n8\n9\n\"\"\") == \"3\")\nprint(solution(\n\"\"\"\n9\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n9\n\"\"\") == \"0\")\nprint(solution(\n\"\"\"\n2\n98\n\"\"\") == \"2\")\nprint(solution(\n\"\"\"\n3\n9\n\"\"\") =="
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == \"\"\n\"\"\"\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == '''13'''\nassert solution('''5''' + '''42195''') == '''13'''\nassert solution('''5''' + '''64723''') == '''13'''\n\n'''\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n82195\n64723''') == '13'\nassert solution('''5\n00110\n30235\n''') == '1'\nassert solution('''1\n12345\n12345\n''') == '0'\nassert solution('''1\n12345\n54321\n''') == '2'\nassert solution('''1\n12345\n12349\n''') == '4'\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n82195\\n64723') == '13'\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n82195\\n64723') == '13'\nassert solution('2\\n1\\n0') == '1'\nassert solution('1\\n9\\n0') == '1'\nassert solution('1\\n9\\n0') == '1'\nassert solution('2\\n4\\n3') == '2'\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"12223\") == \"0\"\nassert solution(\"1222345\") == \"\"\nassert solution(\"122234567\") == \"\"\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"13\"\nassert solution(\"5644738\") == \"13\"\nassert solution(\"797235959\") == \"13\"\nassert solution(\"7972359591473579597\") == \"13\"\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '13'\nassert solution('''82195''') == '13'\nassert solution('''64723''') == '13'\nassert solution('''1''') == '1'\nassert solution('''9''') == '1'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == '2 1'\nassert solution('''4''') == '2 1 4 3'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '-1'\nassert solution('''4''') == '2 1 4 3'\nassert solution('''5''') == '2 1 4 3 5'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'\nassert solution('4') == '2 1 4 3'\nassert solution('7') == '7 2 4 6 3 5 1'\nassert solution('6') == '3 5 2 4 1 6 7'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"4\") == \"2 1 4 3\"\nassert solution(\"5\") == \"2 1 4 3 5\"\nassert solution(\"6\") == \"2 1 4 3 6 5\"\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1''') == ''\nassert solution('''2''') == '2 1'\nassert solution('''4''') == '2 1 4 3'\nassert solution('''1000''') == '2 1 4 3'\nassert solution('''1001''') == '2 1 4 3'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2 1'\nassert solution('''4''') == '2 1 4 3'\nassert solution('''7''') == '2 1 4 3 7 6'\nassert solution('''10''') == '2 1 4 3 7 6 8 9 10'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2 1'\nassert solution('4') == '2 1 4 3'\nassert solution('5') == '2 1 4 3 5'\nassert solution('100') == '2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == '1 2'\nassert solution('''3''') == '2 1 3'\nassert solution('''4''') == '2 1 4 3'\nassert solution('''5''') == '2 1 4 3 5'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"4\") == \"2 1 4 3\"\nassert solution(\"5\") == \"2 1 4 3 5\"\nassert solution(\"6\") == \"2 1 4 3 5 6\"\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3 4\\n*abc\\na*ab\\na*b\\nba*b') == '1\\n4 1\\n'\nassert solution('1\\n3 4\\n*abc\\na*ab\\na*b\\nbab\\n') == '-1\\n'\nassert solution('3\\n2 3 4\\n*abc\\na*ab\\na*b\\nba*b\\nb*b\\n') == '1\\n4 1\\n'\nassert solution('4\\n2 3 4\\n*abc\\na*ab\\na*b\\nba*b\\nb*b\\n') == '2\\n4 1\\n'\nassert solution('1\\n3 4\\n*abc\\na*ab\\na*b\\nbab\\nb*b\\n') == '1\\n4 1\\n'\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 4\n*aba\na*ab\nba*b\nabb*\n''') == '1'\n\nassert solution('''\n4\n2 3 4\n*abc\na*ab\nba*b\ncbb*\n''') == '-1'\n'''"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n2 3 4\n*aba\na*ab\nba*b\nabb*''') == '1\\n4 1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '-1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '1\\n4 1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '-1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '1\\n4 1'\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 4\\n*aba\\na*ab\\naab*b\\nabab*b') == '1\\n4 1\\n'\nassert solution('4\\n2 3 4\\n*abc\\na*ab\\naab*b\\nabab*b') == '-1\\n'\nassert solution('3\\n1 2 3\\n*bba\\nba*b\\nbaa*b') == '2\\n2 1\\n'\nassert solution('5\\n2 3 4 5\\n*aabab\\naa*a\\naa*a\\naa*a') == '0\\n1\\n'\n\"\"\"\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 4\\n*aba\\na*ab\\na*b\\nabb*') == '1\\n4 1\\n'\nassert solution('4\\n2 3 4\\n*abc\\na*ab\\na*b\\nabc*') == '-1\\n'"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 4\\n*abc\\na*ab\\na*b\\na*b\\n*b') == '1\\n4 1\\n'\nassert solution('3\\n1 2 3\\n*a*\\na*\\na*\\na*\\n*a*') == '-1\\n'\n\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"4\\n2 3 4\\n*abc\\na*ab\\na*b\\nabb*\\n\") == \"1\\n4 1\\n\"\nassert solution(\"4\\n2 3 4\\n*abc\\na*ab\\na*b\\nabb*\\na*b\\na*c\\nbbb*\\n\") == \"1\\n1 3\\n\"\nassert solution(\"4\\n2 3 4\\n*abc\\na*ab\\na*b\\nabb*\\na*c\\nbbb*\\na*b\\nbbb*\\n\") == \"1\\n1 3\\n\"\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2 3 4\n*aba\na*ab\nba*b\nabb*''') == '1\\n4 1\\n'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '-1\\n'\n\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 4\\n*aba\\na*ab\\na*b\\nab*b') == '1\\n4 1'\nassert solution('4\\n*abc\\na*ab\\na*b\\na*bc') == '-1'\nassert solution('4\\n*abc\\na*ab\\na*b\\na*bc\\na*ca') == '1\\n1 2'\nassert solution('3\\n*abc\\na*ab\\na*b\\na*bc') == '-1'\nassert solution('4\\n*ab*\\na*b\\na*bc\\na*ca') == '1\\n2 2'\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 3 4\n*aba\na*ab\nba*b\nabb*\n''') == '1\\n4 1\\n'\n\nassert solution('''\n4\n2 3 4\n*abc\na*ab\nba*b\ncbb*\n''') == '-1\\n'\n\nassert solution('''\n4\n3 3 4\n*abc\na*ab\nba*b\ncbb*\n''') == '0\\n0\\n'\n\nassert solution('''\n3\n1 2 3\n*a\na*b\n*a\n''') == '-1\\n'\n\nassert solution('''\n5\n1 2 3 4 5\n*abd\na*ba\nab*bd\na*ab\nb*ba\n''') == '1\\n2 1\\n1 2\\n0 1\\n'"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 6\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1 2\") == \"0\"\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''2 1'''\n) == '1'\n\nassert solution(\n'''3 6'''\n) == '2'\n\nassert solution(\n'''3 1'''\n) == '0'\n\nassert solution(\n'''2 1'''\n) == '1'\n\nassert solution(\n'''3 7'''\n) == '2'"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 1\n''') == '1'\n\nassert solution('''\n3 6\n1 1 1\n''') == '2'\n\nassert solution('''\n4 2\n1 1 1 1\n''') == '0'\n\nassert solution('''\n1 1\n1 0\n''') == '0'\n\nassert solution('''\n1 1\n1 0\n''') == '0'"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 1 1') == '2'\nassert solution('5\\n1 1 1 1 1') == '4'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '10'\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\nprint('Tests passed')\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n1 1 1\") == \"2\"\nassert solution(\"3\\n1 0 1\") == \"0\"\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1 1\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\") == \"3\"\nassert solution(\"3\\n1 0 1\") == \"2\"\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 1') == '1'\nassert solution('2 3\\n1 2 3') == '2'\nassert solution('3 4\\n1 2 3 4') == '3'\nassert solution('3 7\\n1 2 3 4 5 6 7') == '4'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10') == '10'\n\n\n\"\"\"\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '2'\nassert solution('''3 2''') == '0'\nassert solution('''3 3''') == '1'\nassert solution('''3 4''') == '1'\nassert solution('''3 5''') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1\\n1\\n2\\n') == '2'\nassert solution('3\\n3\\n1\\n2\\n3\\n1\\n2\\n') == '0'\nassert solution('3\\n1\\n2\\n3\\n1\\n2\\n3\\n1\\n2\\n') == '1'\nassert solution('2\\n1\\n1\\n2\\n') == '1'\nassert solution('2\\n1\\n1\\n1\\n2\\n') == '1'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 3') == '0'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 3') == '0'\nassert solution('3 2') == '1'\nassert solution('3 1') == '1'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3\\n2 3') == '0'\nassert solution('2 2\\n1 3\\n3 1\\n2 1\\n1 2\\n2 1\\n1 3\\n3 2\\n2 3') == '1'\nassert solution('2 2\\n1 2\\n1 3\\n2 3\\n3 1\\n1 2\\n2 1\\n3 2\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('4 4\\n1 2\\n1 3\\n2 3\\n3 4\\n4 1\\n2 4\\n4 1\\n3 1\\n2 3\\n1 4') == '1'\nassert solution('4 3\\n1 2\\n1 3\\n2 3\\n3 4\\n4 1\\n2 4\\n4 1\\n3 1\\n2 3\\n1 4') == '2'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 4\n5 2\n''') == '2'\nassert solution('''3 3\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 2\n3 1\n3 2\n''') == '1'\nassert solution('''6 4\n1 4\n2 5\n3 6\n4 5\n5 4\n6 1\n''') == '2'\nassert solution('''5 3\n1 3\n2 4\n3 5\n4 5\n5 1\n''') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"5 2\n1 4\n5 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"3 3\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"3 2\n3 1\n3 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5 2\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5 2\n2 4\n1 5\n\"\"\") == \"0\""
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\n1 4\n5 2\n''') == '2'\nassert solution('''3 3\n3 1\n3 2\n''') == '0'\nassert solution('''3 2\n3 1\n3 2\n''') == '1'\nassert solution('''5 2\n1 4\n5 2\n''') == '1'\nassert solution('''7 3\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 1\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 1') == '0'\nassert solution('2 2\\n1 2') == '1'\nassert solution('2 2\\n1 2\\n2 1') == '1'\nassert solution('2 2\\n1 2\\n2 1\\n3 2\\n2 1') == '2'\nassert solution('1 1\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 4\n5 2\n''') == '2'\n\nassert solution('''3 3\n3 1\n3 2\n''') == '0'\n\nassert solution('''3 2\n3 1\n3 2\n''') == '1'\n\nassert solution('''5 2\n1 4\n1 4\n''') == '0'\n\nassert solution('''3 3\n1 2\n2 3\n1 3\n''') == '0'"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'Finite'\n\nassert solution('''\n3\n1 3 1\n''') == 'Infinite'\n\nassert solution('''\n3\n1 2 3\n''') == 'Finite'\n\nassert solution('''\n3\n2 1 3\n''') == 'Finite'\n\nassert solution('''\n3\n1 1 3\n''') == 'Infinite'"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1 3\\n') == 'Finite'\nassert solution('3\\n1 2 3\\n') == 'Finite'\nassert solution('3\\n2 1 3\\n') == 'Infinite'\nassert solution('3\\n2 3 2\\n') == 'Infinite'\nassert solution('3\\n3 2 2\\n') == 'Finite'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 2 1 2') == 'Finite'\nassert solution('1 1 1 2 2 2') == 'Infinite'\nassert solution('1 1 1 1 1 1') == 'Finite'\nassert solution('1 1 1 1 1 1') == 'Finite'\nassert solution('1 2 3') == 'Finite'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 'Finite'\nassert solution('''2 1 3''') == 'Infinite'\nassert solution('''1 2 3''') == 'Finite'\nassert solution('''1 1 1''') == 'Finite'\nassert solution('''3''') == 'Finite'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == 'Infinite'\nassert solution('5\\n2 3 4 4 5') == 'Finite'\nassert solution('6\\n1 2 3 4 5 6') == 'Infinite'\nassert solution('6\\n1 2 3 4 5 6') == 'Finite'\nassert solution('7\\n1 2 3 4 5 6 7') == 'Finite'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Infinite\"\nassert solution(\"1\") == \"Finite\"\nassert solution(\"2\") == \"Finite\"\nassert solution(\"3\") == \"Finite\"\nassert solution(\"4\") == \"Finite\"\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 1 3') == 'Finite'\nassert solution('2\\n1 2 3') == 'Finite'\nassert solution('2\\n1 1 3') == 'Infinite'\nassert solution('2\\n3 1 3') == 'Finite'\nassert solution('2\\n1 3 1 3') == 'Finite'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('3') == None\nassert solution('2 1 3') == None\nassert solution('1 2 3') == None\nassert solution('2 3 1') == None\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == 'Finite'\nassert solution('''2 1 3''') == 'Finite'\nassert solution('''1 2 3''') == 'Finite'\nassert solution('''1 1 3''') == 'Finite'\nassert solution('''2 2 2''') == 'Infinite'\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 2 2 3 2 5\\n1 1 2 2 3 2 5\\n') == '1 2 5 8'\nassert solution('8\\n1 1 2 2 3 2 5\\n1 1 2 2 3 2 5\\n') == '1 2 5 8'\nassert solution('6\\n1 2 3 4 5\\n1 1 2 2 3 2\\n') == '1 2 3 4 5 6'\nassert solution('7\\n1 1 2 3 4 3\\n1 1 2 2 3 4 3\\n') == '1 3 7'"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 1 2 2 3 2 5\\n\") == \"1 2 5 8\"\nassert solution(\"6\\n1 2 3 4 5\\n\") == \"1 2 3 4 5 6\"\nassert solution(\"7\\n1 1 2 3 4 3\\n\") == \"1 3 7\"\nassert solution(\"8\\n1 1 2 3 4 3\\n\") == \"1 3 7\"\nassert solution(\"7\\n1 1 2 3 4 3\\n\") == \"1 3 7\"\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 2 2 3 2 5\n1 1 2 2 3 2 5\n''') == '1 2 5 8'\nassert solution('''\n1 1 2 3 4 3\n1 1 2 3 4 3\n''') == '1 3 7'"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 2 2 3 2 5\") == \"1 2 5 8\"\nassert solution(\"1 1 2 2 3 2 5\") == \"1 2 3 4 5 6\"\nassert solution(\"1 1 2 2 3 2 5\") == \"1 3 7\"\nassert solution(\"1 1 2 3 3 4 3\") == \"1 3 4 5 6 7\"\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 2 2 3 2 5') == '1 2 5 8'\nassert solution('1 2 3 4 5') == '1 2 3 4 5 6'\nassert solution('1 2 3 4 3') == '1 3 7'\nassert solution('1 1 2 2 3 2 5') == '1 2 5 8'\nassert solution('1 2 3 4 3') == '1 3 7'\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8\n1 1 2 2 3 2 5\n''') == '1 2 5 8'\nassert solution('''6\n1 2 3 4 5\n''') == '1 2 3 4 5 6'\nassert solution('''7\n1 1 2 3 4 3\n''') == '1 3 7'"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5') == '1 2 5 8'\nassert solution('6\\n1 2 3 4 5\\n') == '1 2 3 4 5 6'\nassert solution('7\\n1 1 2 3 4 3\\n') == '1 2 3 4 5 6 7'\nprint(solution(stdin))\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n8\n1 1 2 2 3 2 5\n''') == '1 2 5 8'\nassert solution(\n'''\n6\n1 2 3 4 5\n''') == '1 3 7'\nassert solution(\n'''\n7\n1 1 2 3 4 3\n''') == '1 3 7'\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9'\nassert solution(stdin) == '30052700'\n\n\"\"\""
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"56\"\nassert solution(\"10\") == \"30052700\""
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"56\"\nassert solution(\"10\") == \"30052700\"\nassert solution(\"1000\") == \"39993766\""
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3'''\n) == '9'\n\nassert solution(\n'''4'''\n) == '56'\n\nassert solution(\n'''10'''\n) == '30052700'\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '56'\nassert solution('10') == '30052700'"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\"\"\") == '9'\nassert solution(\"\"\"4\"\"\") == '56'\nassert solution(\"\"\"10\"\"\") == '30052700'\n\n\"\"\"\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '9'\nassert solution('''4''') == '56'\nassert solution('''10''') == '30052700'\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '9'\nassert solution('''4''') == '56'\nassert solution('''10''') == '30052700'\n'''\nn = int(stdin)\n\nnum = 1\nfor i in range(1,n+1):\n    num*=(i+1)\n\nnum = num//2\nprint(num)\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '56'\nassert solution('10') == '30052700'\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '9'\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 2 2 2') == '2'\nassert solution('5\\n4 3 2 2 3') == '2'\nassert solution('7\\n3 3 4 4 4 3 3') == '2'\nassert solution('1\\n1000') == '1'\nassert solution('7\\n1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n4 3 2 2 3\") == \"2\"\nassert solution(\"7\\n3 3 4 4 4 3 3\") == \"2\"\nassert solution(\"3\\n1 3 5\") == \"3\"\nassert solution(\"1\\n1000\") == \"1\"\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'a'\nassert solution('aa') == 'a'\nassert solution('aaab') == 'aaab'\nassert solution('aabb') == 'aaab'\nassert solution('aababcc') == 'aababcc'\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n'\n         '4 3 2 2 3\\n') == '2\\n'\nassert solution('7\\n'\n         '3 3 4 4 4 3 3\\n') == '2\\n'\nassert solution('3\\n'\n         '1 3 5\\n') == '3\\n'\nassert solution('1\\n'\n         '1000\\n') == '1\\n'\n\n\n-----"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 3 2 2 3\n''') == '2'\n\nassert solution('''\n7\n3 3 4 4 4 3 3\n''') == '2'\n\nassert solution('''\n3\n1 3 5\n''') == '3'\n\nassert solution('''\n1\n1000\n''') == '1'\n\nassert solution('''\n3\n3 3 4 4 4 3 3\n''') == '2'"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n100') == '1'\nassert solution('2\\n200') == '2'\nassert solution('3\\n300') == '3'\nassert solution('4\\n400') == '4'\nassert solution('5\\n500') == '5'\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\n'''\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n3\\n3\\n3\\n3') == '3'\nassert solution('7\\n3 3 4 4 4 3 3\\n3\\n3\\n3\\n3\\n3\\n3\\n3') == '2'\nassert solution('1\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3\\n3\\n3\\n3') == '1'\nassert solution('3\\n3\\n3\\n3\\n3') == '1'\nassert solution('1\\n3\\n3\\n3\\n3') == '1'\nassert solution('1000\\n3\\n3\\n3\\n3') == '1'\nassert solution('1000\\n3\\n3\\n3\\n3') == '1'\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"??c?????\") == \"abcabcab\"\nassert solution(\"glo?yto?e??an??\") == \"or\"\nassert solution(\"winlose???winl???w??\") == \"5\"\nassert solution(\"??c?????\") == \"abcabcab\"\nassert solution(\"glo?yto?e??an??\") == \"or\"\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('hi?') == ''\nassert solution('glo?yto?e??an?') == ''\nassert solution('??c?????') == ''\nassert solution('?????') == '?'\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('winlose???winl???w??') == '5'\nassert solution('win') == '5'\nassert solution('glo?yto?e??an?') == '3'\nassert solution('??c?????') == '2'\nassert solution('??c?????') == '2'\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('?w?w????????') == 5\nassert solution('?o??x??y???z') == 3\nassert solution('??c??????') == 2\nassert solution('?o?o?o?') == 1\nassert solution('?o?o?o?o?') == 0\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''winlose???winl???w??''') == 5\nassert solution('''glo?yto?e??an?''') == 3\nassert solution('''??c?????''') == 2\nassert solution('''ahbgdeefgxiu''') == 5\nassert solution('''a''') == 1\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('winlose???winl???w??') == '5'\nassert solution('glo?yto?e??an?') == '3'\nassert solution('??c?????') == '2'\nassert solution('???c??????') == '1'\nassert solution('???c??????') == '1'\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"??c?????\\nabcab\") == \"abcabcab\"\nassert solution(\"??c?????\\nabcab\") == \"abcabcab\"\nassert solution(\"???\\nabc\") == \"abc\"\nassert solution(\"???\\nabc\") == \"abc\"\nassert solution(\"??\\nabc\") == \"abc\"\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\n\"\"\""
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('??c?????') == 'abcabcab'\nassert solution('??c?????glo?yto?e??an?') == 'or'\nassert solution('???c????glo?yto?e??an?') == 'abcabcab'\nassert solution('???c????glo?yto?e??an?t') == 'or'\nassert solution('???c????glo?yto?e??an?tglo?yto?e??an?') == 'or'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3 5\") == \"3\"\nassert solution(\"1\\n5 5\") == \"5\"\nassert solution(\"1\\n5 5 5\") == \"5\"\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3 5\") == \"3\"\nassert solution(\"2\\n3 5\") == \"2\"\nassert solution(\"2\\n4 5\") == \"4\"\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '3'\nassert solution('1\\n2\\n') == '2'\nassert solution('2\\n3 5\\n') == '3'\nassert solution('2\\n4 7\\n') == '5'\nassert solution('3\\n5 6\\n') == '8'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '3'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3 5') == '3'\nassert solution('2\\n3 5') == '2'\nassert solution('2\\n4 7') == '5'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '3'\nassert solution('1\\n2') == '2'\nassert solution('2\\n3 5') == '3'\nassert solution('2\\n5') == '2'\nassert solution('2\\n4') == '2'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1\n1\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\n\"\"\"2\n3 5\n\"\"\") == \"\"\"3\"\"\"\nassert solution(\n\"\"\"3\n3 5\n\"\"\") == \"\"\"2\"\"\"\nassert solution(\n\"\"\"4\n1 1 2 1\n\"\"\") == \"\"\"2\"\"\"\nassert solution(\n\"\"\"4\n2 1 1 1\n\"\"\") == \"\"\"3\"\"\"\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n1''') == '3'\nassert solution('''2\n2\n1''') == '2'\nassert solution('''3\n3\n1\n4\n4''') == '2'\nassert solution('''4\n4\n1\n2\n2\n3''') == '2'\nassert solution('''5\n5\n1\n2\n2\n3\n3\n4''') == '2'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n2\\n3\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\") == \"4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"4\"\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '2'\nassert solution('3 5') == '3'\nassert solution('4 2') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n''') == '3'\nassert solution('''1\n2\n''') == '2'\nassert solution('''1\n3 5\n''') == '3'\nassert solution('''2\n3 5\n''') == '2'\nassert solution('''3\n5 7\n''') == '2'\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n\n\"\"\"\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"1\n1 1\n\"\"\"\n) == '8'\n\nassert solution(\n\"\"\"1 2 2\n\"\"\"\n) == '63'\n\nassert solution(\n\"\"\"1 3 5\n\"\"\"\n) == '3264'\n\nassert solution(\n\"\"\"6 2 9\n\"\"\"\n) == '813023575'"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n'''\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('2 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n\"\"\"\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\nassert solution('3 2 6') == '9'\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '8'\nassert solution('1 2 2') == '63'\nassert solution('1 3 5') == '3264'\nassert solution('6 2 9') == '813023575'\n\"\"\"\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\") == \"8\"\nassert solution(\"1 2 2\") == \"63\"\nassert solution(\"6 2 9\") == \"3264\"\nassert solution(\"1 3 5\") == \"3264\"\nassert solution(\"1 4 3\") == \"1\"\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == None\nassert solution('3 2 4') == None\nassert solution('1 2 4') == None\nassert solution('1 3 3') == None\nassert solution('1 4 1') == None\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 1') == '3'\nassert solution('3\\n1 2\\n2 3') == '11'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5') == '11'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '11'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '11'\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n\"\"\") == 11\nassert solution(\n\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n1 3\n\"\"\") == 3\nassert solution(\n\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n1 3\n1 4\n\"\"\") == 2\nassert solution(\n\"\"\"\n3\n1 2\n2 3\n3 4\n\"\"\") == 6\nassert solution(\n\"\"\"\n4\n1 2\n2 3\n3 4\n1 3\n\"\"\") == 4\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n2\n2 1\n''') == '3'\n\nassert solution('''\\\n3\n1 2\n2 3\n''') == '11'\n\nassert solution('''\\\n4\n1 2\n2 3\n3 4\n4 1\n''') == '12'\n\nassert solution('''\\\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '10'\n\nassert solution('''\\\n6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 4\n3 5\n4 5\n5 6\n''') == '5'"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n 1\") == \"1\"\nassert solution(\"\\n 1\\n 2\") == \"2\"\nassert solution(\"\\n 1\\n 1\") == \"1\"\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"2\n2 1\n\"\"\") == \"3\"\nassert solution(\n    \"\"\"3\n1 2\n3 2\n\"\"\") == \"11\"\nassert solution(\n    \"\"\"6\n1 5\n2 5\n3 5\n4 5\n5 6\n\"\"\") == \"6\"\nassert solution(\n    \"\"\"7\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n\"\"\") == \"0\"\nassert solution(\n    \"\"\"8\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 6\n5 7\n\"\"\") == \"2\"\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2 1') == '3'\nassert solution('3\\n1 2\\n2 1') == '11'\nassert solution('2\\n1 2\\n2 1') == '3'\nassert solution('2\\n2 1\\n3 2') == '11'\nassert solution('2\\n2 1\\n3 2\\n3 1') == '3'\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n2 1\n3 2''') == 3\nassert solution('''3\n1 2\n3 2\n4 2\n5 3''') == 11\nassert solution('''2\n1 3\n1 2''') == 3\nassert solution('''3\n1 2\n2 1\n2 3''') == 11\nassert solution('''4\n1 2\n1 3\n2 1\n2 4\n3 2\n3 4\n4 3''') == 5\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2 1\") == \"\"\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 1\\n') == '3'\nassert solution('3\\n1 2\\n3 2\\n') == '11'\nassert solution('4\\n1 2\\n1 3\\n2 3\\n3 4\\n') == '1'\nassert solution('3\\n1 2\\n2 3\\n') == '4'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n2 1''') == '3'\nassert solution('''2\n1 2\n3 1''') == '3'\nassert solution('''3\n2 1\n2 2\n2 3''') == '3'\nassert solution('''3\n1 3\n2 3\n2 1''') == '3'\nassert solution('''3\n1 3\n3 1\n2 3''') == '3'\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('527') == '572'\nassert solution('4573') == '3574'\nassert solution('1357997531') == '-1'\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('527') == '572'\nassert solution('4573') == '3574'\nassert solution('1357997531') == '-1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''527''') == '572'\nassert solution(\n'''4573''') == '3574'\nassert solution(\n'''1357997531''') == '-1'"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"527\"\nassert solution(input()) == \"572\"\nassert solution(input()) == \"3574\"\nassert solution(input()) == \"3573\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''527''') == '572'\nassert solution('''4573''') == '3574'\nassert solution('''1357997531''') == '-1'\nprint(\"All tests passed successfully.\")\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == -1\nassert solution('0') == -1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"527\") == \"572\"\nassert solution(\"4573\") == \"3574\"\nassert solution(\"1357997531\") == \"-1\"\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"527\") == \"572\"\nassert solution(\"4573\") == \"3574\"\nassert solution(\"1357997531\") == \"-1\"\nassert solution(\"1000000000000000000\") == \"-1\"\nassert solution(\"129\") == \"-1\"\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1\n1 0 1\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n3\n1 0 0\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n5\n1 0 1 1 1\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n10\n1 0 1 1 1 1 1 1 1\n'''\n    ) == 'NO'\n\nassert solution(\n'''\n10\n0 0 0 0 0 0 0 0 1\n'''\n    ) == 'YES'"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\\n\") == \"\"\nassert solution(\"0 1\\n\") == \"\"\nassert solution(\"0 0 1\\n\") == \"\"\nassert solution(\"0 0 0\\n\") == \"YES\"\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n0\\n0') == 'YES'\nassert solution('1\\n0\\n1') == 'NO'\nassert solution('1\\n1\\n0') == 'NO'\nassert solution('2\\n1\\n0') == 'YES'\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 0 1''') == 'YES'\nassert solution('''3\n1 0 0''') == 'NO'\nassert solution('''3\n0 1 0''') == 'NO'\nassert solution('''5\n0 1 0 1 1''') == 'NO'\nassert solution('''5\n1 0 0 0 1''') == 'YES'\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\") == \"YES\"\nassert solution(\"1 0 0\") == \"NO\"\nassert solution(\"1 1 0\") == \"NO\"\nassert solution(\"0 0 1\") == \"NO\"\nassert solution(\"0 1 0\") == \"YES\"\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 0 1''') == 'YES'\nassert solution('''3\n0 1 1''') == 'NO'\nassert solution('''3\n1 1 0''') == 'YES'\nassert solution('''4\n0 0 0 0\n0 0 0 1''') == 'NO'\nassert solution('''4\n1 0 0 0\n1 0 0 1''') == 'YES'\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '''3\n    1 0 1'''\n) == 'YES'\n\nassert solution(\n    '''3\n    0 1 1'''\n) == 'NO'\n\nassert solution(\n    '''1\n    1'''\n) == 'NO'\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n0\\n') == 'YES'\nassert solution('1\\n1\\n0\\n') == 'NO'\nassert solution('1\\n0\\n0\\n') == 'YES'\nassert solution('1\\n1\\n1\\n') == 'NO'\nassert solution('1\\n0\\n0\\n') == 'NO'\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 0 1\n''') == 'YES'\nassert solution('''\n3\n0 1 0\n''') == 'NO'\nassert solution('''\n3\n0 0 0\n''') == 'NO'\nassert solution('''\n1\n1\n''') == 'YES'\nassert solution('''\n1\n0\n''') == 'NO'\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n4 5 6\") == \"0\"\nassert solution(\"1 2 3\\n4 5 6\\n4 1 5 3\") == \"3\"\nassert solution(\"1 2 3\\n4 5 6\\n4 1 5 3\\n2 1 5 3\") == \"5\"\nassert solution(\"1 2 3\\n4 5 6\\n4 1 5 3\\n2 1 5 3\\n3 2 1 5\") == \"3\"\n\n\n-----Solution-----\n\"\"\""
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n') == '0\\n0\\n0'\nassert solution('1\\n2\\n1\\n') == '0\\n0\\n0'\nassert solution('1\\n2\\n3\\n') == '0\\n0\\n0'\nassert solution('1\\n2\\n3\\n4\\n') == '2\\n1\\n3\\n2'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '4\\n3\\n2\\n1'\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '3'\nassert solution('10\\n7 7 1 3 3 1 1 1\\n7 3 3 1 1 1 1 1 1\\n') == '13'\nassert solution('10\\n9 2 4 1 3 2 1\\n9 3 2 4 1 3 2 1\\n') == '5'\n\n'''\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 2 1 3\n3 2 4 1\n''') == '3'\nassert solution('''\n4\n3 2 1 4\n1 2 3 4\n''') == '2'\nassert solution('''\n8\n8 3 4 6 9 7 2\n2 8 4 3 9 7 6\n''') == '2'\nassert solution('''\n10\n4 1 2 3 5 6 7 8 9 10\n5 4 1 7 8 2 9 3 10 6\n''') == '10'\nassert solution('''\n11\n4 1 2 3 5 6 7 8 9 10 11\n5 4 1 7 8 2 9 3 10 6 11\n''') == '9'\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\"\n\nn = int(input())\np = [int(x) - 1 for x in input().split()]\ns = [int(x) - 1 for x in input().split()]"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n-----\n\nInput\n4\n4 2 1 3\n3 2 4 1\nOutput\n3\n2\n4 3\n3 1\n------\n\nInput\n4\n4 1 2 3\n1 2 3 4\nOutput\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 2 1 3\\n3 2 4 1\\n') == '3'\nassert solution('4\\n4 2 1 3\\n4 3 1 2\\n') == '3'\nassert solution('2\\n1 2\\n2 1\\n') == '2'\nassert solution('4\\n2 3 1 4\\n4 1 2 3\\n') == '1'\nassert solution('1\\n1\\n1\\n') == '0'\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2\\n2') == '0'\nassert solution('3\\n2\\n3\\n2') == '2'\nassert solution('3\\n3\\n2\\n2') == '4'\nassert solution('3\\n3\\n1\\n2') == '4'\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''.#\n...\n...\n''') == \"YES\"\nassert solution('''#\n.#\n''') == \"NO\"\nassert solution('''.#\n.#\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"#..#\") == \"YES\"\nassert solution(\"##.#\") == \"YES\"\nassert solution(\"#.#.\") == \"NO\"\nassert solution(\"#..#.##\") == \"YES\"\nassert solution(\"#...#.\") == \"YES\"\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''####\n....\n####\n....''') == 'NO'\nassert solution('''#..\n##.\n###\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\n\n\n-----\n\n\n----\n\n\n\"\"\"\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"####\\n.#..\\n####\\n....\") == \"YES\"\nassert solution(\"####\\n....\\n####\\n....\") == \"NO\"\nassert solution(\"####\\n.##\\n.##\\n####\\n....\") == \"NO\"\nassert solution(\"####\\n.##\\n.##\\n.##\\n....\") == \"NO\"\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''####\n.#..\n####''') == 'YES'\nassert solution('''####\n....\n####''') == 'NO'\nassert solution('''####\n....\n####''') == 'YES'\nassert solution('''..#\n..#\n...\n''') == 'YES'\nassert solution('''####\n....\n####''') == 'NO'\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"####.\\n....\\n....\\n.####\\n....\\n....\") == 'YES'\nassert solution(\"##..\\n##..\\n##..\\n###..\\n##..\\n##..\") == 'NO'\nassert solution(\"#.\\n#.\\n#.\\n#.\\n#.\\n#.\") == 'NO'\nassert solution(\"##\\n##\\n##\\n##\\n##\\n##\") == 'YES'\nassert solution(\"####\\n##..\\n##..\\n##..\\n####\") == 'NO'\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"#.##\\n.#..\\n#.##\") == \"YES\"\nassert solution(\"####\\n....\\n####\\n....\\n#..#\") == \"NO\"\nassert solution(\"#....\\n#.##.\\n..##.\\n##.##\") == \"YES\"\nassert solution(\"#.##.\\n#..#.\\n.##..\\n....#\") == \"YES\"\nassert solution(\"#..#.\\n.##..\\n....#\\n....#\") == \"NO\"\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('#.#') == 'YES'\nassert solution('#..') == 'NO'\nassert solution('#....') == 'NO'\nassert solution('#......') == 'NO'\nassert solution('#..#..') == 'NO'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5 6 1\") == \"2\"\nassert solution(\"4 40 50 10\") == \"2\"\nassert solution(\"5 25 35 10\") == \"6\"\nassert solution(\"10 10 20 10 20\") == \"2\"\nassert solution(\"5 25 35 10\") == \"6\"\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5 6 1''') == '2'\nassert solution('''1 2 3''') == '0'\nassert solution('''10 20 30 25''') == '0'\nassert solution('''10 10 20 10 20''') == '6'\nassert solution('''5 25 35 10''') == '6'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 5 6 1\\n1 2 3\\n') == '2'\nassert solution('4 40 50 10\\n10 20 30 25\\n') == '2'\nassert solution('5 25 35 10\\n10 10 20 10 20\\n') == '6'\nassert solution('1 2 3 4 5\\n4 5 6 7\\n1 1 1 1 1\\n') == '0'\nassert solution('2 3 5 6 1\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 5 6 1\\n1 2 3\\n\") == \"2\"\nassert solution(\"5 25 35 10\\n10 10 20 10 20\\n\") == \"2\"\nassert solution(\"6 30 30 5\\n10 10 20 10 20\\n\") == \"2\"\nassert solution(\"10 10 10 10\\n10 10 10 10\\n\") == \"6\"\nassert solution(\"5 20 30 10\\n10 10 20 10 20\\n\") == \"2\"\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6') == '12'\nassert solution('1 2 3 4 5 6 7 8') == '48'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 5 6 1\\n1 2 3\\n\") == \"2\"\nassert solution(\"4 40 50 10\\n10 20 30 25\\n\") == \"2\"\nassert solution(\"5 25 35 10\\n10 10 20 10 20\\n\") == \"6\"\n\n\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 5 6 1\\n1 2 3\\n\") == \"2\"\nassert solution(\"4 40 50 10\\n10 20 30 25\\n\") == \"2\"\nassert solution(\"5 25 35 10\\n10 10 20 10 20\\n\") == \"6\"\nassert solution(\"5 35 25 10\\n10 10 20 10 20\\n\") == \"0\"\nassert solution(\"5 35 25 10\\n10 10 10 10 10\\n\") == \"1\"\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 5 6 1') == '2'\nassert solution('4 40 50 10') == '2'\nassert solution('5 25 35 10') == '6'\nassert solution('5 1 10 1') == '2'\nassert solution('5 1 10 1') == '2'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 5 6 1\\n1 2 3') == '2'\nassert solution('4 40 50 10\\n10 20 30 25\\n') == '2'\nassert solution('5 25 35 10\\n10 10 20 10 20\\n') == '6'\nassert solution('5 5 30 15\\n10 10 10 10 10\\n') == '2'\nassert solution('5 30 35 15\\n10 10 10 10 10\\n') == '0'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 5 6 1''') == '2'\nassert solution('''4 40 50 10''') == '2'\nassert solution('''5 25 35 10''') == '6'\nassert solution('''10 10 20 10 20''') == '2'\nassert solution('''15 15 25 15''') == '1'\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n-----Alternate Solution-----"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, k = map(int, stdin.readline().strip().split(' '))\nr = stdin.readline().strip()"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"6 1\nBWBBWW\n\"\"\") == \"WBBBWW\"\nassert solution(\n\"\"\"7 3\nWBWBWBW\n\"\"\") == \"WWWWWWW\"\nassert solution(\n\"\"\"6 4\nBWBWBW\n\"\"\") == \"BWBWBW\"\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 1') == 'WBBBWW'\nassert solution('7 3') == 'WWWWWWW'\nassert solution('6 4') == 'WBWBWBW'\nassert solution('BWBWBW') == 'WBWBWBW'\nassert solution('WBWBWB') == 'WBWBWBW'\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\n__author__ = 'rramachandran'\nfrom collections import deque"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"BBBWWW\"\nassert solution(\"6 3\") == \"WWWWWWW\"\nassert solution(\"6 4\") == \"BWBWBW\"\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\n\n------"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"WBBBWW\"\nassert solution(\"7 3\") == \"WWWWWWW\"\nassert solution(\"6 4\") == \"WBWBWBW\"\nassert solution(\"BWBWBW\") == \"WBWBWB\"\nassert solution(\"WWWWWWW\") == \"WWWWWWW\"\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt').read()) == 'WBWBWB'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 8\n6 2 9 2 7 2 3''') == '6 5'\nassert solution('''6 4\n2 2 2 3 3 3''') == '2 3'\nassert solution('''7 8\n5 5 1 6 1 3 8''') == '3 4'\nassert solution('''7 8\n5 5 1 6 1 3 8''') == '2 3'\nassert solution('''8 5\n6 7 3 4 2 3 8 4 5''') == '2 3'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''7 8''') == '6 5'\nassert solution('''6 4''') == '2 3'\nassert solution('''8 9''') == '6 5'\nassert solution('''9 10''') == '1 2 3 4 5 6 7 8 9'\nassert solution('''10 11''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3\\n6 2 9 2 7 2 3') == '6 5'\nassert solution('7 8\\n6 2 9 2 7 2 3') == '6 5'\nassert solution('7 4\\n2 2 2 3 3 3') == '2 3'\nassert solution('7 4\\n2 2 2 3 3 3') == '2 3'\nassert solution('7 4\\n6 2 9 2 7 2 3') == '6 5'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 8''') == '''6 5'''\nassert solution('''6 4''') == '''2 3'''\nassert solution('''2 2 2 3 3 3''') == '''1 2 4 6 7'''\nassert solution('''1000000 1000000''') == '''1 100000'''\nassert solution('''100000 1000000''') == '''1 100000'''\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 8\\n6 2 9 2 7 2 3') == '6 5\\n1 2 4 6 7'\nassert solution('6 4\\n2 2 2 3 3 3') == '2 3\\n1 2 3'\nassert solution('6 4\\n2 2 2 3 3 3') == '2 3\\n1 2 3'\nassert solution('2 3\\n1 2 3') == '2 3\\n1 2 3'\nassert solution('2 3\\n1 2 3') == '2 3\\n1 2 3'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7 8\n6 2 9 2 7 2 3''') == '6 5'\nassert solution('''6 4\n2 2 2 3 3 3''') == '2 3'\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 8\n6 2 9 2 7 2 3''') == '6 5', 'fail 1'\nassert solution('''6 4\n2 2 2 3 3 3''') == '2 3', 'fail 2'\nassert solution('''2 1\n1\n''') == '2', 'fail 3'\nprint('ok')\n"
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 4\\n2 1 3 2\\n1 2\\n1 3\\n3 4\\n4 5') == '8'\nassert solution('0 3\\n1 2 3\\n1 2\\n2 3\\n3 4\\n4 5') == '3'\nassert solution('2 4\\n1 2 3 2\\n1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20') == '41'\nassert solution('1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20') == '41'\nassert solution('4 8\\n7 8 7 5 4 6 4 10\\n1 6\\n1 2\\n5 8\\n1 3\\n3 5\\n6 7\\n3 4\\n4 9\\n4 8\\n4 7\\n4 6\\n4 5') == '41'\n\n\n-----\n\n'''\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n1 2''') == '3'\nassert solution('''1 2 3\n1 2\n1 3\n3 4''') == '8'\nassert solution('''1 2 3 4\n1 2\n1 3\n1 4\n1 5\n3 6\n2 6\n3 4\n5 6\n3 5\n2 5\n3 4\n4 5\n4 6\n5 6''') == '41'\nassert solution('''3 4\n7 8 7 5 4 6 4 10\n1 6\n1 2\n5 8\n1 3\n3 5\n6 7\n3 4\n1 7\n3 6\n2 6\n3 4\n6 7\n4 5\n4 6\n5 6''') == '41'\nassert solution('''2 3\n3 2\n3 1\n1 2\n1 3\n3 4\n1 4\n3 2\n2 4\n2 3\n3 4\n2 4\n2 3\n3 4\n1 4\n1 3\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(2000)\ninput = sys.stdin.readline"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 4\\n2 1 3 2\\n1 2\\n1 3\\n3 4\\n1 4') == '8'\nassert solution('0 3\\n1 2 3\\n1 2\\n2 3\\n3 4\\n1 4') == '3'\nassert solution('2 3\\n1 2\\n1 3\\n3 4\\n1 4') == '3'\nassert solution('0 0\\n1 1\\n1 2') == '0'\nassert solution('0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"41\"\nassert solution(\"2 1 3 2\") == \"8\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n\n\"\"\""
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1\") == \"0\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom functools import lru_cache\n\nMOD = 1000000007\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 4') == '8'\nassert solution('0 3') == '3'\nassert solution('7 8 7 5 4 6 4 10') == '41'\nassert solution('7 8 7 5 4 6 4 10\\n1 6\\n1 2\\n5 8\\n1 3\\n3 5\\n6 7\\n3 4\\n') == '41'\n'''\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '0 15 15 0'\nassert solution(input()) == '-15 0 0 15'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == expect"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('10 5') == '0 15 15 0'\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('10 -5') == '-15 0 0 15'\nassert solution('10 5') == '0 15 15 0'\nassert solution('-10 -5') == '-15 0 0 15'\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('3 1') == '0 0 0 3'\nassert solution('10 10') == '0 0 0 0'\nassert solution('-10 10') == '0 0 0 0'\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == input()\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == answer(input())\n\n\"\"\"\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('10 5') == '0 15 15 0'\nassert solution('-10 5') == '-15 0 0 15'\nassert solution('100 200') == '0 0 0 0'\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    stdin = '10 5'\n) == '0 15 15 0'\n\nassert solution(\n    stdin = '-10 5'\n) == '-15 0 0 15'\n\nassert solution(\n    stdin = '10 10'\n) == '0 0 15 15'\n\nassert solution(\n    stdin = '-10 10'\n) == '-15 0 0 15'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == \"3\"\n\nInput\n3\n3 1 7 8\n1\n2\n\nOutput\n2\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n1 7 8 3 8''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n11''') == '2'\nassert solution('''1\n2''') == '1'\nassert solution('''1\n3''') == '2'\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n4 1 7 8 3 8\n1''') == '3'\n\nassert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\n\nassert solution('''6\n3 2 6 3 1 2\n2\n''') == '2'\n\nassert solution('''6\n4 1 7 8 3 8\n2\n''') == '2'\n\nassert solution('''7\n2 5 8 1 5 2\n5\n''') == '3'"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n3') == '2'\nassert solution('1\\n3\\n2') == '2'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '2'\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\nassert solution('''1\n1\n''') == '0'\nassert solution('''1\n2\n''') == '2'\nassert solution('''10\n2 1 8 3 2 8 5 6 1 4\n3\n''') == '5'\nassert solution('''10\n2 1 8 3 2 8 5 6 1 4\n3\n''') == '3'\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''4 1 7 8 3 8''') == '3'\n\nassert solution(\n'''1''') == '1'\n\nassert solution(\n'''9''') == '1'\n\nassert solution(\n'''9 9 9 9 9 9 9 9''') == '9'\n\nassert solution(\n'''3''') == '3'"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 2 1 1 1 2 1 1 2\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n7\n7 1 8 3 8 4\n1\n''') == '3'\n\nassert solution('''\n6\n4 1 7 8 3 8\n2\n''') == '4'\n\nassert solution('''\n2\n10\n1\n''') == '2'\n\nassert solution('''\n8\n5 4 3 2 1 5 1\n0\n''') == '2'\n\nassert solution('''\n3\n8 2 1\n0\n''') == '3'"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 9\\n5 3 13\\n\") == \"NO\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == \"YES\\n3 4 5\\n6 7 8\\n\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == \"NO\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == \"NO\"\n\"\"\"\n\nn,m = map(int,input().split())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nl = [a[i]^b[i] for i in range(m)]\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 9\\n5 3 13\") == \"YES\\n3 4 5\"\nassert solution(\"2 3\\n2 9\\n5 3 13\") == \"NO\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\") == \"YES\\n3 4 5\\n6 7 8\"\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 9\\n5 3 13') == 'YES\\n3 4 5\\n6 7 8'\nassert solution('3 3\\n1 7 6\\n2 15 12') == 'NO'\nassert solution('1 2\\n2 2') == 'YES\\n2 2'\nassert solution('2 1\\n2') == 'NO'\nassert solution('4 5\\n1 1 1 1\\n2 1 1 1\\n3 1 1 1\\n4 1 1 1') == 'YES\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3'\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 3 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 3 2\") == \"NO\"\nassert solution(\"2 3 1\") == \"NO\"\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n2 9\\n5 3 13\\n\") == \"YES\\n3 4 5\\n6 7 8\\n\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == \"NO\\n\"\nassert solution(\"3 3\\n2 9\\n5 3 13\\n\") == \"NO\\n\"\nassert solution(\"5 3\\n2 9\\n5 3 13\\n\") == \"YES\\n3 4 5\\n6 7 8\\n\"\nassert solution(\"2 3\\n2 9\\n5 3 13\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 9\\n5 3 13') == 'YES\\n3 4 5\\n6 7 8'\nassert solution('3 3\\n1 7 6\\n2 15 12') == 'NO'\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 9\\n5 3 13\") == \"YES\\n3 4 5\"\nassert solution(\"2 3\\n2 9\\n5 3 13\") == \"NO\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\") == \"NO\"\nassert solution(\"3 3\\n1 7 6\\n2 15 12\") == \"NO\"\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 9\\n5 3 13\") == 'YES\\n3 4 5'\nassert solution(\"2 3\\n2 9\\n5 3 13\") == 'NO'\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == 'YES\\n3 4 5\\n6 7 8'\nassert solution(\"3 3\\n1 7 6\\n2 15 12\\n\") == 'NO'\nassert solution(\"2 2\\n1 1\\n\") == 'NO'\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 9\n5 3 13''') == 'YES'\nassert solution('''3 3\n1 7 6\n2 15 12''') == 'NO'\nassert solution('''2 2\n1 7 6\n3 15 12''') == 'NO'\nassert solution('''2 3\n1 7 6\n3 15 12''') == 'NO'\nassert solution('''3 2\n1 7 6\n1 15 12''') == 'NO'\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n2 9\n5 3 13\n''') == 'YES'\nassert solution('''3 3\n1 7 6\n2 15 12\n''') == 'NO'\nassert solution('''2 3\n1 7 6\n2 15 12\n''') == 'YES'\nassert solution('''3 3\n1 7 6\n2 15 12\n''') == 'NO'\nassert solution('''3 3\n1 7 6\n2 15 12\n''') == 'YES'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 2\n0\n1\n\"\"\".strip()\n) == \"500000004\"\n\nassert solution(\n\"\"\"\n1 2\n1\n0\n\"\"\".strip()\n) == \"0\"\n\nassert solution(\n\"\"\"\n7 26\n0 15 12 9 13 0 14\n11 1 0 13 15 12 0\n\"\"\".strip()\n) == \"230769233\"\n\nassert solution(\n\"\"\"\n7 26\n0\n1\n\"\"\".strip()\n) == \"0\"\n\nassert solution(\n\"\"\"\n5 8\n7 5 2 2 7 8 0\n0 2 0 0 0 0 0 0\n\"\"\".strip()\n) == \"8\""
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0'\nassert solution('1') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'\nassert solution('7 26') == '230769233'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 26') == '230769233'\nassert solution('1 2') == '0'\nassert solution('7 26') == '230769233'\nassert solution('1 2') == '0'\nassert solution('7 26') == '230769233'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2''') == '500000004'\nassert solution('''0''') == '0'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''1 2''') == '500000004'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2') == '0'\nassert solution('7 26') == '230769233'\nassert solution('0 15 12 9 13 0 14') == '500000004'\nassert solution('11 1 0 13 15 12 0') == '0'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 4') == '1/2'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('7 26') == '230769233'\nassert solution('1 2\\n1\\n0\\n') == '0'\nassert solution('7 26\\n1\\n0\\n') == '230769233'\n\n\"\"\"\n\nfrom math import gcd\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2\\n1 1\\n') == '0'\nassert solution('3 1\\n0\\n1\\n') == '0'\nassert solution('4 5\\n1 2 3 4 5\\n2 1 0 3 4\\n') == '0'\nassert solution('4 5\\n1 2 3 4 5\\n2 1 0 3 4\\n') == '0'\nassert solution('7 26\\n0 15 12 9 13 0 14\\n11 1 0 13 15 12 0\\n') == '230769233'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'\n\n\"\"\"\nfrom fractions import Fraction"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2''') == '500000004'\nassert solution('''1 2''') == '500000004'\nassert solution('''1 2''') == '500000004'\nassert solution('''7 26''') == '230769233'\nassert solution('''7 26''') == '230769233'\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == 2\nassert solution('3 14') == 2\nassert solution('5 8') == 1\nassert solution('15 15') == 3\nassert solution('6 6') == 1\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '8'\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 14\") == \"2\""
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 14') == '2'\nassert solution('5 20') == '2'\nassert solution('3 10') == '3'\nassert solution('6 20') == '6'\nassert solution('3 5') == '1'\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 14\") == \"2\"\n\nassert solution(\"7 25\") == \"1\"\n\nassert solution(\"8 10\") == \"2\"\n\nassert solution(\"4 15\") == \"1\"\n\nassert solution(\"5 10\") == \"5\""
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3\\n2 4\\n3 4') == '2'\nassert solution('2 3\\n2 4\\n3 4') == '1'\nassert solution('3 7\\n2 4\\n3 4') == '2'\nassert solution('3 7\\n2 4\\n3 4') == '1'\nassert solution('1 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 14') == '2'\nassert solution('100 100') == '1'\nassert solution('0 100') == '0'\nassert solution('10000 100') == '0'\nassert solution('1000 100') == '0'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('1 3 1\\n2 3 3') == '1'\nassert solution('1 2 1\\n2 3 3') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('1 2 1\\n2 3 3') == '1'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 3 1\") == \"2\"\nassert solution(\"2 3 3\") == \"1\"\nassert solution(\"1 2 1 3 3 3\") == \"2\"\nassert solution(\"1 2 1 2 2 2 1 3 3 3 3 3\") == \"0\"\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1\\n1 3 1\\n2 3 3\\n') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3\\n') == '1'\nassert solution('1 2 1\\n1 3 1\\n1 3 1\\n') == '0'\nassert solution('1 2 1\\n1 3 1\\n2 3 3\\n') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3\\n') == '2'\n\n---29.09%---\n+++\n\n'''\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 5\") == \"\"\nassert solution(\"2 5\") == \"\"\nassert solution(\"1 2 1\") == \"\"\nassert solution(\"1 3 1\") == \"\"\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('3 3\\n1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('3 3\\n1 2 1\\n1 3 1\\n2 3 3\\n1 2 1') == '0'\nassert solution('3 3\\n1 2 1\\n1 3 1\\n2 3 3\\n1 2 1\\n1 3 1') == '0'\nassert solution('3 3\\n1 2 1\\n1 3 1\\n2 3 3\\n1 2 1\\n1 3 1') == '0'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\nassert solution('''3 4\n1 2 1\n1 3 1\n2 3 1\n1 4 1\n2 4 1\n2 4 3\n2 4 2\n2 1 2\n2 2 1\n2 3 1''') == '3'\nassert solution('''4 1\n1 2 1\n1 3 1\n2 3 3\n2 4 1\n3 4 2''') == '0'\nassert solution('''4 2\n1 2 1\n1 3 1\n2 3 3\n2 4 1\n3 4 2\n3 1 1\n1 4 2\n2 1 2''') == '2'\nassert solution('''4 3\n1 2 1\n1 3 1\n2 3 3\n2 4 1\n3 4 2\n3 1 1\n1 4 2\n2 1 2\n2 2 1\n2 3 1''') == '3'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('2 3 3') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3\\n2 4 4\\n3 4 1') == '1'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('2 3 3') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3') == '1'\nassert solution('1 2 1\\n1 3 1\\n2 3 3\\n1 1 3\\n2 2 2') == '2'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 1\\n1 3 1') == '1'\nassert solution('2 3\\n1 3 1\\n2 3 3') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n3 4 4') == '2'\nassert solution('3 3\\n1 2 1\\n2 3 1\\n3 4 4') == '2'\nassert solution('3 3\\n1 2 1\\n1 3 1\\n2 3 3') == '0'\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('??2??5') == 768\nassert solution('121314??4??6?') == 27\nassert solution('999999999999999?') == 2\nassert solution('0?') == 0\nassert solution('?') == 0\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('??2??5') == '768'\nassert solution('??3??5') == '0'\nassert solution('??3??4') == '2'\nassert solution('??5??4') == '13'\nassert solution('??5??5') == '28'\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('??2??5') == '768'\nassert solution('??0??3') == '24576'\nassert solution('?7??7?9') == '96000'\nassert solution('?4?4?4?4?4?') == '384'\nassert solution('??????????????????????????') == '272164544'\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('??2??5') == 768\nassert solution('??2??5') == 768\nassert solution('002865') == 865\nassert solution('002865') == 865\nassert solution('002865') == 865\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('??2??5') == '768'\nassert solution('??2??2') == '20'\nassert solution('?00??5') == '768'\nassert solution('?00??2') == '20'\nassert solution('??09??') == '768'\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('??2??5') == 768\nassert solution('002865') == 448\nassert solution('972665') == 522\nassert solution('99097') == 95\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('??2??5') == '768'\nassert solution('12387543') == '429'\nassert solution('0000') == '0'\nassert solution('0123') == '6'\nassert solution('37') == '5'\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_testcase_01) == output_testcase_01"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 -3\n4 -2 3 2 -3\n''') == 'YES'\nassert solution('''5 2\n5 3 -2 1 -1 5\n3 -5 2 5\n''') == 'NO'\nassert solution('''7 2\n3 -1 6 7\n7 -5 4 2 4 7 -3 4\n''') == 'YES'\nassert solution('''7 2\n2 3 -5 1 -1 1 -5\n1 -5 -2 2 2\n''') == 'NO'\nassert solution('''7 2\n2 3 -5 1 -1 1 -5\n1 -5 -2 2 2\n''') == 'NO'\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 -3\\n4 -2 3 2 -3\") == \"YES\"\nassert solution(\"5 2\\n5 3 -2 1 -1 5\") == \"NO\"\nassert solution(\"7 2\\n3 -5 2 5\\n7 -5 4 2 4 7 -3 4\") == \"YES\"\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"7 2\") == \"NO\"\nassert solution(\"7 2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") is None\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"2 3 -2 1 -1 5\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\"\n\nIn the second sample testcase, first group is a group of all the Rick's from the first universe, second is a group of all the Rick's from the second universe, and both groups are not a group of a single person, so it is impossible for the world to end.\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\nassert solution('6 2\\n6 5 3 1 2 4\\n') == '6'\n\"\"\"\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\nassert solution('6 2\\n6 5 3 1 2 4\\n') == '6'"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n2 2\n1 2\n''') == '2'\n\nassert solution(\n'''\n6 2\n6 5 3 1 2 4\n''') == '6'\n\nassert solution(\n'''\n2 10000000000\n2 1\n''') == '2'\n\nassert solution(\n'''\n100 10\n
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"2 10000000000\") == \"3\"\nassert solution(\"6 2\") == \"3\"\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 2') == '3'\nassert solution('6 2') == '6'\nassert solution('2 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 2\n''') == '2'\nassert solution('''4 2\n3 1 2 4\n''') == '3'\nassert solution('''6 2\n6 5 3 1 2 4\n''') == '6'\nassert solution('''2 10000000000\n2 1\n''') == '2'\nassert solution('''3 2\n1 2\n2 1\n''') == '3'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2\\n1 2') == '2'\nassert solution('1 2\\n1 2\\n1 2') == '2'\nassert solution('3 4') == '1'\nassert solution('2 1\\n1 2') == '1'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 2\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n4 2\n3 1 2 4\n\"\"\"\n) == '3'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\nassert solution('6 2\\n6 5 3 1 2 4\\n') == '6'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\nassert solution('6 2\\n6 5 3 1 2 4\\n') == '6'\n\n\n-----My Notes\n\nYou can get the wrong answer when n is really small.\n\nThe first player gets the power of 1, the second player gets the power of 2, and so on.\n\nAll the powers are distinct.\n\nIf a player can win n games in a row, he is the winner.\n\nThe game is like a roulette.\n\n\n\n\"\"\"\n\nn, k = [int(x) for x in stdin.split()]\n\npowers = [int(x) for x in stdin.split()]\n\na = [1]\nfor i in range(1, n):\n    a.append(a[i - 1] * powers[i - 1])\n\nwhile a:\n    a.pop(0)\n    if len(a) < k:\n        a.append(a[-1] * powers[-1])\n    else:\n        if a[k - 1] < 0:\n            break\n        else:\n            a[k - 1] = a[k - 1] % 10**9 + 7\n\nprint(a[-1])"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 3 5''') == '5'\nassert solution('''5 5\n1 2 1 1 1''') == '3'\nassert solution('''7 7\n4 1 2 4 3 4 4''') == '5'\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2''') == '5'\nassert solution('''5 5''') == '3'\nassert solution('''7 7''') == '5'\nassert solution('''4 1 2 4 3 4 4''') == '5'\n'''"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 3') == '5'\nassert solution('7 7') == '3'\nassert solution('10 10') == '5'\nassert solution('1 1 1 1 1') == '5'\nassert solution('4 1 2 4 3 4 4') == '3'\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 3 5''') == '5'\nassert solution('''7 7\n4 1 2 4 3 4 4''') == '5'\nassert solution('''5 5\n1 2 1 1 1''') == '3'\n'''\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"7 7\") == \"5\"\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"7 7\") == \"5\"\nassert solution(\"4 1 2 4 3 4 4\") == \"3\"\n\"\"\"\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()[1:]))\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 2''') == '5'\nassert solution('''5 5''') == '3'\nassert solution('''7 7''') == '5'\nassert solution('''4 1 2 4 3 4 4''') == '3'\nassert solution('''1 1 1 1 1 1''') == '3'\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 8\\n4 1 2 4 3 4 4\\n\") == \"5\"\nassert solution(\"7 7\\n4 1 2 4 3 4 4\\n\") == \"3\"\nassert solution(\"7 8\\n5 1 2 5\\n\") == \"3\"\nassert solution(\"7 7\\n5 1 2 5\\n\") == \"5\"\nassert solution(\"7 7\\n5 1 2 5\\n\") == \"5\"\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '5'\nassert solution('3 2') == '5'\nassert solution('7 7') == '5'\nassert solution('1 2 1 1 1') == '3'\nassert solution('4 1 2 4 3 4 4') == '3'\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\nNonZero') == '5'\nassert solution('24\\nthis is zero answer text') == '0'\nassert solution('24\\nHarbour Space University') == '1'\nassert solution('24\\nwelcome to the fall!') == '0'\nassert solution('24\\n>$#!&*(<[]{}>}') == '0'\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"NonZERO\\nNonZERO\") == \"5\"\nassert solution(\"this is zero answer text\\nthis is zero answer text\") == \"0\"\nassert solution(\"Harbour Space University\\nHarbour Space University\") == \"1\"\nassert solution(\"Shooting Stars\\nShooting Stars\") == \"2\"\nassert solution(\"5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-5-"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\nNonZERO') == '5'\nassert solution('24\\nthis is zero answer text') == '0'\nassert solution('24\\nHarbour Space University') == '1'\nassert solution('7\\nNonZero') == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\nNonZERO\\n') == '5'\nassert solution('24\\nthis is zero answer text\\n') == '0'\nassert solution('24\\nHarbour Space University\\n') == '1'\nassert solution('24\\nHarbourSpaceUniversity\\n') == '1'\nassert solution('24\\nthisiszerooanswertext\\n') == '0'\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7\nNonZERO\n''') == '5'\nassert solution('''24\nthis is zero answer text\n''') == '0'\nassert solution('''24\nHarbour Space University\n''') == '1'"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('NonZERO\\n'\n    'Harbour Space University\\n') == '1\\n'\nassert solution('this is zero answer text\\n'\n    'Harbour Space University\\n') == '0\\n'\nassert solution('23\\n'\n    'this is zero answer text\\n'\n    'Harbour Space University\\n') == '0\\n'"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('NonZERO') == '5'\nassert solution('this is zero answer text') == '0'\nassert solution('Harbour Space University') == '1'\n\n'''"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\nNonZERO\\n') == '5'\nassert solution('24\\nthis is zero answer text\\n') == '0'\nassert solution('24\\nHarbour Space University\\n') == '1'"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('NonZERO') == '5'\nassert solution('this is zero answer text') == '0'\nassert solution('Harbour Space University') == '1'\nassert solution('this is ZERO answer text') == '0'\nassert solution('I love Berlin') == '2'\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\nNonZero') == '5'\nassert solution('24\\nthis is zero answer text') == '0'\nassert solution('24\\nHarbour Space University') == '1'\nassert solution('15\\nthis is text') == '0'\nassert solution('1\\nthis') == '0'\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10') == '50'\nassert solution('5 5') == '-1'\n\n\n\n\"\"\"\n\n\"\"\"\n\nPossible Solution:\n\nFind the total number of sweets that can be bought in a single transaction.\nWe know that the cost of a chocolate is greater than the cost of a sweet. So, at least one type of sweet must be bought.\nWe have to maximize the number of sweets that can be bought with the given amount of cash.\n\nThe number of sweets that can be bought with the given cash is the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nIt can be easily proved that the number of sweets that can be bought with the given cash is either zero or one.\n\nWe can also prove that the number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash - the number of sweets that can be bought with the given cash.\n\nThe number of sweets that can be bought with the given cash is the maximum number of sweets that can be bought with the given cash -"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5 10\") == \"50\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"5 50\") == \"-1\"\nassert solution(\"5 50\") == \"-1\"\nassert solution(\"5 10\") == \"50\"\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 10') == '50'\nassert solution('5 5') == '-1'\nassert solution('10 10') == '50'\nassert solution('5 4') == '0'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == \"50\"\n\"\"\"\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 10') == '50'\nassert solution('3 90') == '50'\nassert solution('12 0') == '-1'\nassert solution('9 70') == '-1'\nassert solution('5 50') == '-1'\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '50'\n\n\n\"\"\"\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input(\"\")) == ''\n\"\"\"\n\nn, s = map(int, stdin.strip().split(' '))\n\nfor _ in range(n):\n    x, y = map(int, stdin.strip().split(' '))\n    s -= x\n    if s < 0:\n        s += 100 * x\n    s += 100 - y\n    if s < 0:\n        s += 100 * x\nprint(s)\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10\\n3 90\\n12 0\\n9 70\\n5 50\\n7 0') == '50'\nassert solution('5 5\\n10 10\\n20 20\\n30 30\\n40 40\\n50 50\\n') == '-1'\n\"\"\""
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10\\n3 90\\n12 0\\n9 70\\n5 50\\n7 0') == '50'\nassert solution('5 5\\n10 10\\n20 20\\n30 30\\n40 40\\n50 50\\n') == '-1'\nprint(\"All tests passed successfully.\")\n\"\"\"\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\nassert solution('10 2 4') == '104'\nassert solution('1000000000 1000000000 1000000000') == '0'\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 -1') == 1\nassert solution('1 3 1') == 1\nassert solution('3 3 -1') == 16\nassert solution('2 3 -1') == 4\nassert solution('1 1 1') == 3\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 -1') == 1\nassert solution('1 3 1') == 1\nassert solution('3 3 -1') == 16\nassert solution('1 2 -1') == 0\nassert solution('2 4 1') == 3\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\nassert solution('3 3 2') == '15'\nassert solution('3 3 2') == '16'\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 -1') == 1\nassert solution('1 3 1') == 1\nassert solution('3 3 -1') == 16\n\"\"\"\n\nfrom functools import lru_cache\n\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\n\"\"\"\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\nassert solution('1 1 1') == '1'\nassert solution('1 1 -1') == '1'\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 -1\") == \"1\"\nassert solution(\"1 3 1\") == \"1\"\nassert solution(\"3 3 -1\") == \"16\"\n\"\"\"\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == 'NO'\nassert solution('5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n') == 'YES'\nassert solution('300000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"NO\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"YES\"\nassert solution(\"4 6\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"YES\"\nassert solution(\"300000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"YES\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"YES\"\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn, m = [int(x) for x in stdin.split(' ')]\npairs = [sorted([int(x) for x in stdin.split(' ')]) for _ in range(m)]\nfor pair in pairs:\n    if pair[0]!= pair[1]:\n        for i in range(n):\n            if i not in pair:\n                print('YES')\n                break\n        else:\n            print('NO')"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''4 6\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == 'NO'\n\nassert solution(\n'''5 4\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == 'YES'\n\nassert solution(\n'''300000 5\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == 'YES'\n\nassert solution(\n'''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\n\nassert solution(\n'''2 2\n1 1\n2 1\n''') == 'YES'"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"NO\\nNO\"\nassert solution(\"3 4\\n1 2\\n1 2\\n1 2\\n1 2\") == \"NO\\nYES\"\nassert solution(\"300000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\") == \"YES\\nYES\"\n\n\n\"\"\""
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6') == 'NO'\nassert solution('5 4') == 'YES'\nassert solution('300000 5') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 'NO'\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'YES'\nassert solution('300000 5') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 2\\n1 2\\n1 2\\n1 2\\n1 2') == 'YES'\nassert solution('1 2\\n2 3\\n3 4\\n4 5') == 'NO'\n\"\"\"\n\nn, m = map(int, input().split())\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    if x == y or x + y >= n:\n        print('NO')\n    else:\n        print('YES')\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\nba\nac\n''') == '1'\n\nassert solution('''\n2\n1 2\naa\nba\nac\n''') == '-1'\n\nassert solution('''\n2\n1 3 1\naa\nba\nac\n''') == '-1'\n\nassert solution('''\n2\n5 5\nbbb\naaa\n''') == '-1'\n\nassert solution('''\n2\n3 3 1\naaa\naa\n''') == '-1'"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n3 3\nbbb\naaa''') == '-1'\nassert solution('''3\n3 3\naaa\naa\n''') == '-1'\nassert solution('''2\n1 2\nba\nac\n''') == '1'\nassert solution('''2\n3 3\n1 2\nba\nac\n''') == '1'\nassert solution('''2\n1 3 1\naa\nba\nac\n''') == '-1'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n3\\n') == '1'\nassert solution('2\\n3\\n4\\n') == '1'\nassert solution('2\\n3\\n4\\n5\\n') == '-1'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1') == '1'\nassert solution('1\\n2\\n1') == '-1'\nassert solution('2\\n3\\n1') == '1'\nassert solution('3\\n2\\n1') == '-1'\nassert solution('3\\n3\\n1') == '-1'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2\nba\nac''') == '1'\nassert solution('''3\n1 3 1\naa\nba\nac''') == '-1'\nassert solution('''2\n5 5\nbbb\naaa\n''') == '-1'\nassert solution('''2\n3 3\naaa\naa\n''') == '-1'\nassert solution('''3\n1 3 1\naa\nba\nac\n''') == '1'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n4\\n4\\n8\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\nba\nac\n''') == '1'\n\nassert solution('''3\n1 3 1\naa\nba\nac\n''') == '1'\n\nassert solution('''2\n5 5\nbbb\naaa\n''') == '-1'\n\nassert solution('''2\n3 3\naaa\naa\n''') == '-1'\n\nassert solution('''3\n1 3 1\naa\nba\nac\n''') == '-1'"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8\\n2\\n1 1 1 1 1 1 1 1\\n6\\n1 1 1 1 1 1 1') == '0'\nassert solution('8\\n2\\n1 1 1 1 1 1 1\\n6\\n1 1 1 1 1 1 1') == '1'\nassert solution('8\\n2\\n1 1 1 1 1 1\\n6\\n1 1 1 1 1 1') == '0'\nassert solution('8\\n2\\n1 1 1 1 1 1\\n6\\n1 1 1 1 1 1 1') == '1'\nassert solution('8\\n2\\n1 1 1 1 1 1\\n6\\n1 1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\nba\\nac\") == \"1\"\nassert solution(\"2\\n1 3 1\\naa\\nba\\nac\") == \"-1\"\nassert solution(\"2\\n3 3 1\\naa\\na\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2\nba\nac\n''') == '1'\nassert solution('''3\n1 3 1\naa\nba\nac\n''') == '-1'\nassert solution('''2\n3 3\naaa\naa\n''') == '-1'\nassert solution('''2\n5 5\nbbb\naaa\n''') == '-1'\nassert solution('''2\n5 5\naaa\naa\n''') == '1'"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"60\"\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == '9'\nassert solution(\"1 3 3\") == '9'\nassert solution(\"1 2 3\") == '9'\nassert solution(\"2 3 5\") == '60'\nassert solution(\"1 2 3 4\") == '120'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '9'\nassert solution('2\\n10\\n3') == '60'\nassert solution('1\\n2\\n3') == '9'\nassert solution('10\\n2\\n3') == '60'\nassert solution('10\\n10\\n3') == '60'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"9\"\nassert solution(\"2 10 3\") == \"60\""
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 10 3') == '60'\nassert solution('1 2 3') == '6'\nassert solution('2 3 5') == '30'\nassert solution('5 8 3') == '175'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n2\\n3'\n) == '9'\nassert solution(\n    '2\\n10\\n3'\n) == '60'\n\n\n\"\"\"\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '9'\nassert solution('2\\n10\\n3') == '60'\nassert solution('1\\n2\\n3') == '9'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(1,2,3) == \"9\"\nassert solution(2,10,3) == \"60\""
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 1 3') == '9'\nassert solution('1 2 3') == '9'\nassert solution('2 2 3') == '36'\nassert solution('1 10 2') == '101'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '9'\nassert solution('2 10 3') == '60'\nassert solution('2 3 4') == '6'\nassert solution('2 2 4') == '8'\nassert solution('2 1 4') == '3'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '-1'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 2 2\") == \"-1\"\nassert solution(\"8 4 3\") == \"7 8 3\"\nassert solution(\"10 2 2\") == \"-1\"\nassert solution(\"8 4 3\") == \"-1\"\nassert solution(\"10 2 3\") == \"7 8 0\"\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '-1'\nassert solution('5 5 5') == '1 2 3 4'\n\n\n\"\"\"\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '-1'\nassert solution('4 1 1') == '1 3 2'\nassert solution('2 1 1') == '0 1 2'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '-1'\nassert solution('7 4 3') == '0 1 4'\nassert solution('5 4 3') == '0 2 0'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 2 2''') == '-1'\nassert solution('''8 4 3''') == '7 8 3'\nassert solution('''10 2 2''') == '-1'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 2') == '0 3'\nassert solution('8 4 3') == '7 8 3'\nassert solution('10 2 2') == '-1'\nassert solution('10 5 5') == '10 5 5'\nassert solution('20 3 5') == '8 7 3'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == \"0 1\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"2 2 1\") == \"3 0\"\nassert solution(\"3 3 3\") == \"-1\"\nassert solution(\"3 2 2\") == \"0 1\"\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25\\n') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25\\n') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Tie'"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76') == 'Tie'\n\"\"\""
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == 'Limak'\nassert solution('3 6') == 'Radewoosh'\nassert solution('8 1') == 'Tie'"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''3 2\n50 85 250\n10 15 25''') == 'Limak'\nassert solution(\n'''3 6\n50 85 250\n10 15 25''') == 'Radewoosh'\nassert solution(\n'''8 1\n10 20 30 40 50 60 70 80\n8 10 58 63 71 72 75 76''') == 'Tie'\nassert solution(\n'''8 6\n10 20 30 40 50 60 70 80\n8 10 58 63 71 72 75 76''') == 'Limak'\nassert solution(\n'''8 1\n10 20 30 40 50 60 70 80\n10 10 58 63 71 72 75 76''') == 'Radewoosh'\n'''\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n50 85 250\\n10 15 25\") == \"Limak\"\nassert solution(\"3 6\\n50 85 250\\n10 15 25\") == \"Radewoosh\"\nassert solution(\"8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\") == \"Tie\"\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25\\n') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25\\n') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Tie'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Tie'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Limak'\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'Limak'\nassert solution('3 6') == 'Radewoosh'\nassert solution('8 1') == 'Tie'\n\n\"\"\""
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Tie'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Limak'\nassert solution('8 2\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Limak'\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Radewoosh\"\n'''"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25\\n') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25\\n') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76\\n') == 'Tie'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2 3''') == '2'\nassert solution('''1 2 3''') == '0'\nassert solution('''4 3 3''') == '0'\nassert solution('''4 1 2''') == '2'\nassert solution('''10 2 6''') == '2'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 1 1 1\") == \"\"\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2''') == '2'\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2''') == '0'\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2''') == '4'\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2''') == '2'\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2''') == '0'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '2\\n0\\n4\\n0\\n2'\nassert solution('''3 2 2\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1\\n1\\n0'\nassert solution('''3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1\\n0\\n1'\nassert solution('''3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1\\n0\\n0'\nassert solution('''3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1\\n0\\n0'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 2') == '0'\nassert solution('3 3 3') == '0'\nassert solution('2 2 2') == '0'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\"\nimport sys\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'test'\n) == '0'\nassert solution(\n    'test\\n0'\n) == '0'\nassert solution(\n    'test\\n1'\n) == '1'\nassert solution(\n    'test\\n1\\n2\\n3'\n) == '2'\nassert solution(\n    'test\\n1\\n1\\n1'\n) == '1'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(''.join(input() for _ in range(int(input())))) == ''.join(input() for _ in range(int(input())))\n\nprint(solution(''.join(input() for _ in range(int(input())))))\n\n'''\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '2'\n\nassert solution('''2\n1 2 3\n1\n2\n3\n2\n4\n1\n5\n2\n3\n4\n1\n2\n''') == '4'\n\nassert solution('''2\n1 2 3\n1\n2\n3\n2\n4\n1\n5\n2\n3\n4\n1\n2\n''') == '0'\n\nassert solution('''3\n6 3 2\n1 1 1\n1\n2\n2\n2\n2\n2\n2\n2\n1\n2\n''') == '0'\n\nassert solution('''5\n5 3 2\n1 1 2\n1\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"3\"\nassert solution(\"4\\n1 1 1 1\\n1 1 1 1\\n\") == \"-1\"\nassert solution(\"9\\n1 0 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1 0\\n\") == \"4\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n\") == \"4\"\nassert solution(\"9\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"-1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"9\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"9 0 1 0 0\") == \"3\"\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n0\") == \"-1\"\nassert solution(\"1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0') == '-1'\nassert solution('1\\n0\\n0\\n0\\n0') == '3'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\nassert solution('0\\n0\\n0\\n0\\n0') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1') == '4'\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1 0 0') == '3'\nassert solution('0\\n0 0 0') == '-1'\nassert solution('9\\n1 0 0 0 0 0 0 0 1') == '4'\nassert solution('4\\n1 1 1 1\\n1 1 1 1\\n') == '-1'\nassert solution('10\\n1 0 0 0 0 0 0 0 1 0\\n0 1 1 0 1 1 1 1 1 0\\n') == '-1'\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 1 0 0\\n0 1 1 1 1 1\\n') == '3'\nassert solution('1\\n1 1 1 1\\n1 1 1 1 1\\n') == '-1'\nassert solution('2\\n0 0 0\\n0 0 0\\n') == '-1'\nassert solution('1\\n1 1 1 1\\n1 1 1 1 1\\n') == '4'\nassert solution('6\\n1 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1\\n') == '4'\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 1 0 0\\n0 1 1 1 1 1\\n') == '3'\nassert solution('3\\n0 0 0\\n0 0 0\\n') == '-1'\nassert solution('9\\n1 0 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1 0\\n') == '4'\n\"\"\""
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1 1 1 1') == '3'\nassert solution('2\\n0 0 0\\n0 0 0') == '-1'\nassert solution('2\\n1 1 1 1 1') == '4'\nassert solution('2\\n1 1 1 1 1') == '-1'\nassert solution('2\\n1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 1 0 0\\n0 1 1 1 1 1\\n') == '3'\nassert solution('3\\n0 0 0\\n0 0 0\\n') == '-1'\nassert solution('9\\n1 0 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1 0\\n') == '4'\n\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom itertools import product\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''baan\n3\n'''\n) == '2'\n\nassert solution(\n'''bab\n5\n'''\n) == '-1'\n\nassert solution(\n'''bab\n2\n'''\n) == 'bab'\n\nassert solution(\n'''bba\n2\n'''\n) == 'bba'\n\nassert solution(\n'''aba\n1\n'''\n) == 'aba'"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\nbaan\n''') == '2'\nassert solution('''\nbanana\n3\n''') == '3'\nassert solution('''\nbanana\n2\n''') == '-1'\nassert solution('''\nbaan\n4\n''') == '2'\nassert solution('''\nnab\n4\n''') == 'nab'\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('banana') == 'baan'\nassert solution('banana') == 'baan'\nassert solution('banana') == 'baan'\nassert solution('banana') == 'baan'\nassert solution('banana') == 'baan'\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('banana') == 2\nassert solution('banan') == 3\nassert solution('banana') == -1\nassert solution('banan') == -1\nassert solution('banan') == -1\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'banana'\n    '4') == '2'\nassert solution(\n    'banana'\n    '3') == '3'\nassert solution(\n    'banana'\n    '2') == '-1'\nassert solution(\n    'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\nassert solution(\"banana\") == \"baan\"\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces') == 'codeforces'\nassert solution('codeforcesss') == 'codeforcess'\nassert solution('codeforcesisawesome') == 'codeforcesisawesome'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesisawesome') == 'codeforcesisawesome'\nassert solution('codeforcesisawesomecodeforces') == 'codeforcesisawesome'\nassert solution('codeforcesisawesomecodeforcescodeforces') == 'codeforcesisawesome'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == \"\"\nassert solution('c') == 'c'\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesisawesome') == 'codeforcesisawesome'\n\n\n\n'''\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n''') == 'codeforcesss'\nassert solution('''2\n''') == 'codeforces'\nassert solution('''3\n''') == 'codeforces'\nassert solution('''4\n''') == 'codeforces'\nassert solution('''5\n''') == 'codeforces'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesss') == 'codeforcesss'\nassert solution('codeforcesscodeforcescodeforcesscodeforces') == 'codeforcesscodeforcesscodeforcess'\nassert solution('codeforcesscodeforcescodeforcesscodeforcesscodeforcess') == 'codeforcesscodeforcesscodeforcess'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == 'codeforces'\nassert solution('''1\n2\n3''') == 'codeforces'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == 'codeforces'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == 'codeforces'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == 'codeforces'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'codeforces'\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesisawesome') == 'codeforcesisawesome'\nassert solution('codeforcesisawesomecodeforcesisawesome') == 'codeforcesisawesome'\nassert solution('codeforcesisawesomecodeforcesisawesomecodeforcesisawesome') == 'codeforcesisawesome'\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"codeforces\"\nassert solution(\"3\") == \"codeforces\"\nassert solution(\"5\") == \"codeforces\"\nassert solution(\"7\") == \"codeforces\"\nassert solution(\"10\") == \"codeforces\"\n\n\n\"\"\""
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesisawesome') == 'codeforcessisawesome'\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n2 2 3') == '1'\nassert solution('4\\n1 1 1 4 4\\n1 1 1 4 4') == '0'\nassert solution('8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6') == '4'\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"2 2 3\") == \"\"\nassert solution(\"1 1\") == \"\"\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n2 2 3\n1 1\n''') == '1'\nassert solution('''3\n1 2 3\n1 1\n''') == '0'\nassert solution('''8\n7 2 2 5 4 3 1 1\n1 1 1 4 4 5 6\n''') == '4'\n\n'''"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 2 3\\n1 1\\n') == '1'\nassert solution('3\\n2 2 3\\n1 1\\n') == '0'\nassert solution('4\\n1 2 3 4\\n2 1 1\\n') == '4'\nassert solution('8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6\\n') == '4'\nassert solution('2\\n1 1\\n') == '1'\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''3\n    2 2 3\n    1 1\n    '''\n) == '0'\n\nassert solution(\n    '''3\n    1 2 3\n    1 1\n    '''\n) == '4'\n\nassert solution(\n    '''8\n    7 2 2 5 4 3 1 1\n    1 1 1 4 4 5 6\n    '''\n) == '4'"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6\\n\") == \"4\\n\"\nassert solution(\"8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6\\n\") == \"0\\n\"\nassert solution(\"8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6\\n\") == \"0\\n\"\nassert solution(\"8\\n7 2 2 5 4 3 1 1\\n1 1 1 4 4 5 6\\n\") == \"0\\n\"\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == \"\"\nassert input == \"\"\n\"\"\"\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n2\\n1\\n1\") == \"2\"\nassert solution(\"3\\n3\\n2\\n1\\n1\") == \"2\"\nassert solution(\"4\\n4\\n3\\n2\\n1\\n1\") == \"4\"\nassert solution(\"5\\n5\\n4\\n3\\n2\\n1\\n1\") == \"5\"\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\n'''"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 3\\n1 1 1\\n2 2 3\\n3 3 2\\n') == '14'\nassert solution('4 10 2\\n2 3 8\\n3 4 7\\n') == '262'\nassert solution('2 2 1\\n1 1 1\\n1 1 1\\n') == '0'\nassert solution('1 2 1\\n2 1 2\\n1 2 1\\n') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '262'\nassert solution(stdin) == '14'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'\nassert solution(stdin) == '10'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '14'\nassert solution('2 3 8') == '262'\nassert solution('3 3 2') == '14'\nassert solution('4 10 2') == '262'\nassert solution('4 10 2') == '262'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\n\"\"\"\nSolution:\n\n1. Use dynamic programming to find the best solution for all possible buildings on one given height\n2. Compute the profit with a 2-pointer approach\n3. Return the maximum profit\n\"\"\""
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 10 2') == '262'\nassert solution('5 100 4') == '52'\nassert solution('2 10 1') == '1'\nassert solution('2 10 3') == '2'\nassert solution('4 10 3') == '12'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"14\"\nassert solution(\"2 2 3\") == \"262\"\nassert solution(\"3 3 2\") == \"14\"\nassert solution(\"4 10 2\") == \"262\"\nassert solution(\"2 2 1\") == \"11\"\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '262'\n\n'''"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 3\\n1 1 1\\n2 2 3\\n3 3 2\\n') == '14'\nassert solution('4 10 2\\n2 3 8\\n3 4 7\\n') == '262'\nassert solution('3 10 1\\n1 1 1\\n2 2 2\\n3 3 3\\n') == '12'\nassert solution('1 2 3\\n2 2 3\\n2 2 3\\n') == '6'\nassert solution('1 2 3\\n2 1 3\\n2 2 3\\n') == '0'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input_data=\"\"\"\n    3 3 3\n    1 1 1\n    2 2 3\n    3 3 2\n    \"\"\") == '14'"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503''') == 'Sidorov Ivanov\\nAndreev Semenov\\n?\\n?\\n'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503''') == '?\\n?\\n?\\n'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 803\nSidorov 1 800\nSemenov 2 503''') == '?\\n?\\n?\\n'\n\n\n'''\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 2\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503''') == '?'\nassert solution('''5 2\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\nAndreev 3 800\nIvanov 1 763\n''') == 'Sidorov Ivanov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503\nAndreev 3 800\n''') == '?'\n'''\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2\\nIvanov 1 763\\nAndreev 2 800') == 'Sidorov Ivanov'\nassert solution('5 2\\nIvanov 1 800\\nAndreev 2 763\\nPetrov 1 800\\nSidorov 1 800\\nSemenov 2 503') == '?'\n\n\n\n-----Answer-----"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"5 2\\n\" +\n\"Ivanov 1 763\\n\" +\n\"Andreev 2 800\\n\" +\n\"Petrov 1 800\\n\" +\n\"Sidorov 1 800\\n\" +\n\"Semenov 2 503\\n\") == \"Sidorov Ivanov\\nAndreev Semenov\\n\"\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"input_test.txt\") == \"Semenov Ivanov\\nPetrov Sidorov\\n\"\n\nassert solution(\"input_test2.txt\") == \"Semenov Ivanov\\nSemenov Sidorov\\nPetrov Sidorov\\n\"\n\nassert solution(\"input_test3.txt\") == \"?\\n?\\n\"\n\nassert solution(\"input_test4.txt\") == \"?\\n?\\n\"\n\nassert solution(\"input_test5.txt\") == \"Ivanov Ivanov\\nSemenov Semenov\\n\""
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 1\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503\n\"\"\"\n) == \"Sidorov Ivanov\\nAndreev Semenov\\n\"\n\nassert solution(\n\"\"\"\n3 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503\n\"\"\"\n) == \"?\\nAndreev Semenov\\n\"\n\n\n\nimport sys"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"Sidorov Ivanov\"\nassert solution(\"5 2\") == \"??\"\nassert solution(\"5 2\") == \"Andreev Semenov\"\nassert solution(\"5 2\") == \"Ivanov Semenov\"\nassert solution(\"5 2\") == \"Petrov Semenov\"\n"
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '?', \"Example\"\n\n\"\"\"\n\nfrom typing import Tuple\n\nParticipant: Tuple[str, int, int]\nParticipants = list[Participant]\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n123\\n') == '-1'\nassert solution('2\\nab\\n') == '1'\nassert solution('3\\nba\\n') == '2'\nassert solution('4\\nab\\n') == '2'\nassert solution('5\\nab\\n') == '2'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3\\nxyabd') == '29'\nassert solution('7 4\\nproblem') == '34'\nassert solution('2 2\\nab') == '-1'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[2:-3]\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 3\nxyabd\n''') == '29'\nassert solution('''7 4\nproblem\n''') == '34'\nassert solution('''2 2\nab\n''') == '-1'\nassert solution('''12 1\nabaabbaaabbb\n''') == '1'\nassert solution('''2 1\na\n''') == '-1'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3\\nxyabd\\n') == '29'\nassert solution('7 4\\nproblem\\n') == '34'\nassert solution('2 2\\nab\\n') == '-1'\nassert solution('6 1\\nadefga\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\nabcdefg') == '1'\nassert solution('1 1\\nab') == '1'\nassert solution('1 1\\nabcd') == '1'\nassert solution('1 1\\nabcdef') == '-1'\nassert solution('1 1\\nabcd') == '-1'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\nxyabd\\n') == '29'\nassert solution('7 4\\nproblem\\n') == '34'\nassert solution('2 2\\nab\\n') == '-1'\n\n-----Solution-----\n\"\"\"\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\nabc') == '-1'\nassert solution('3 2\\nabcd') == '29'\nassert solution('5 3\\naxybdy') == '1'\nassert solution('5 3\\nabcd') == '34'\nassert solution('7 4\\nabcd') == '-1'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 3\\nxyabd') == '29'\nassert solution('7 4\\nproblem') == '34'\nassert solution('2 2\\nab') == '-1'\nassert solution('12 1\\nabaabbaaabbb') == '1'\nassert solution('10 5\\naaaaaa') == '-1'\n"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '29'\nassert solution('7 4') == '34'\nassert solution('2 2') == '-1'\nassert solution('12 1') == '1'\nassert solution('abaabbaaabbb') == '1'"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '1 5 5'\nassert solution('''100''') == '-1'\nassert solution('''1000''') == '-1'\nassert solution('''25''') == '-1'\nassert solution('''10000''') == '-1'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10''') == '1 5 5'\nassert solution('''10''') == '1 5 5'\nassert solution('''5''') == '3 4 6'\nassert solution('''5''') == '3 4 6'\nassert solution('''6''') == '-1'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1 1 1'\nassert solution('5\\n5\\n5\\n5\\n') == '1 5 5'\nassert solution('1\\n1\\n1\\n1\\n') == '1 1 1'\nassert solution('1\\n1\\n1\\n1\\n') == '1 1 1'\nassert solution('2\\n2\\n2\\n2\\n') == '2 2 2'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10''') == \"1 5 5\"\nassert solution('''10\n5 6 5 6\n6 6 7 7\n5 8 6 6\n9 9 9 9''') == \"3 4 6\"\nassert solution('''10\n3 3 3 3\n3 3 3 3\n3 3 3 3\n3 3 3 3''') == \"-1\"\nassert solution('''5\n3 3 3 3\n3 3 3 3\n3 3 3 3\n3 3 3 3''') == \"3 4 6\"\nassert solution('''5\n6 6 6 6\n7 7 7 7\n4 4 4 4\n8 8 8 8''') == \"3 4 6\"\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('input') == '1 5 5'\nassert solution('input') == '3 4 6'\nassert solution('input') == '-1'\nassert solution('input') == '3 4 6'\nassert solution('input') == '1 5 5'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10\n5 6 5 6\n6 6 7 7\n5 8 6 6\n9 9 9 9''') == '3 4 6'\nassert solution('''10\n3 3 3 3\n3 3 3 3\n3 3 3 3\n3 3 3 3\n''') == '-1'\nassert solution('''5\n3 3 3 3\n3 3 3 3\n3 3 3 3\n3 3 3 3\n''') == '1 5 5'\nassert solution('''4\n6 6 6 6\n7 7 7 7\n4 4 4 4\n8 8 8 8\n''') == '3 4 6'\nassert solution('''7\n4 4 4 4\n7 7 7 7\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5\n6 6 6 6\n''') == '-1'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10') == '1 5 5'\nassert solution('5') == '-1'\nassert solution('1') == '-1'\nassert solution('1 2 3 4') == '1 2 3'\nassert solution('1 2 3 4 5') == '1 2 3'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"15\") == \"1 3 5\"\nassert solution(\"30\") == \"2 4 6\"\nassert solution(\"45\") == \"1 3 5\"\nassert solution(\"90\") == \"2 4 6\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_stdout"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 5 5\") == \"1 5 5\"\nassert solution(\"10\") == \"3 4 6\"\nassert solution(\"10\") == \"3 4 6\"\nassert solution(\"10\") == \"3 4 6\"\nassert solution(\"10\") == \"3 4 6\"\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n8 7\\n\") == \"6 4\"\nassert solution(\"4 4\\n1 1 1 1\\n\") == \"1 1 1 1\"\nassert solution(\"3 10\\n9 8 10\\n\") == \"-1\"\n\"\"\"\n\nN, W = [int(x) for x in input().split()]\nA = [int(x) for x in input().split()]\n\nA.sort()\n\ncont = 0\nwater = 0\n\nfor a in A:\n    water += a\n    cont += 1\n    if (water * 2) < W:\n        continue\n    elif (water * 2) == W:\n        water -= a\n        cont -= 1\n        break\n    else:\n        water -= a\n        cont -= 1\n        break\n\nprint(cont * W // (water * 2))\n\n\"\"\"\nAnother solution:\n\nN, W = [int(x) for x in input().split()]\nA = [int(x) for x in input().split()]\n\ns = 0\nfor i in range(N):\n    s += A[i]\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 1 1 1\\n') == '1 1 1 1'\nassert solution('3 10\\n9 8 10\\n') == '-1'\nassert solution('2 10\\n8 7\\n') == '6 4'\nassert solution('1 1\\n1\\n') == '1 1'\nassert solution('2 10\\n1 1\\n') == '1 1'\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 7') == '6 4'\nassert solution('2 10') == '6 4'\nassert solution('4 4') == '1 1 1 1'\nassert solution('3 10') == '-1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n9 8 10\") == \"1 1 1 1\\n\"\nassert solution(\"2 10\\n8 7\") == \"6 4\\n\"\nassert solution(\"4 4\\n1 1 1 1\\n\") == \"-1\\n\"\nassert solution(\"3 10\\n9 8 10\") == \"-1\\n\"\nassert solution(\"1 10\\n1 1 1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 10\n8 7''') == '6 4'\nassert solution('''4 4\n1 1 1 1''') == '1 1 1 1'\nassert solution('''3 10\n9 8 10''') == '-1'\nassert solution('''5 10\n9 8 10 7 6''') == '7'\nassert solution('''6 10\n1 1 1 1 1 1 1''') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1 1'\nassert solution('1\\n2 3') == '-1'\nassert solution('1\\n2 3 4') == '1 1 1 1'\nassert solution('1\\n2 1 1') == '1 1'\nassert solution('1\\n3 2 1') == '-1'\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 10\n8 7\n''') == '6 4'\nassert solution('''4 4\n1 1 1 1\n''') == '1 1 1 1'\nassert solution('''3 10\n9 8 10\n''') == '-1'\n'''\n'''\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10\\n8 7\\n') == '6 4'\nassert solution('4 4\\n1 1 1 1\\n') == '1 1 1 1'\nassert solution('3 10\\n9 8 10\\n') == '-1'\n\"\"\""
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n8 7\\n\") == \"6 4\\n\"\nassert solution(\"4 4\\n1 1 1 1\\n\") == \"1 1 1 1\\n\"\nassert solution(\"3 10\\n9 8 10\\n\") == \"-1\\n\"\nassert solution(\"4 6\\n8 7 9 10\\n\") == \"-1\\n\"\nassert solution(\"1 1 1 1\\n\") == \"1 1 1 1\\n\"\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 8\n4 4\n''') == '3 3'\nassert solution('''1 3\n5\n''') == '4'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''3 2\n2\n''') == '3'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4\\n2 2') == '3 3'\nassert solution('2 3\\n5') == '4'\nassert solution('1 3\\n2 3') == '0 1'\nassert solution('1 3\\n1 1') == '0'\nassert solution('2 3\\n2 3') == '0 1'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 8''') == '''3 3 \n'''\nassert solution('''1 3''') == '''4 \n'''\nassert solution('''2 3''') == '''0 1 \n'''\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 8\") == \"3 3\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"2 3\") == \"0 1\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4') == '3 3'\nassert solution('1 3') == '4'\nassert solution('2 3') == '0 1'\nassert solution('2 3') == '0 1'\nassert solution('2 3') == '0 1'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n5') == '1 1'\nassert solution('5\\n2 3') == '1 0'\nassert solution('1 3\\n5') == '0 1'\nassert solution('5\\n5') == '0 0'\nassert solution('3 2\\n5') == '1 1'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 8\n4 4\n''') == '3 3'\nassert solution('''1 3\n5\n''') == '4'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''1 3\n5\n''') == '4'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"2 3\") == \"\"\nassert solution(\"2 3 4\") == \"\"\nassert solution(\"2 3 4 5\") == \"\"\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 8\n4 4\n''') == '3 3'\nassert solution('''1 3\n5\n''') == '4'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n1 1\n''') == '4'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 8\n4 4\n''') == '3 3'\n\nassert solution('''1 3\n5\n''') == '4'\n\nassert solution('''2 3\n2 3\n''') == '0 1'\n\nassert solution('''1 2\n2 3\n''') == '0 1'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 0 0') == 'Yes'\nassert solution('5\\n4 2 1 4 3') == 'Yes'\nassert solution('4\\n0 2 3 1') == 'No'\nassert solution('4\\n3 2 1 4') == 'No'\nassert solution('4\\n0 2 3 1') == 'No'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 'Yes'\nassert solution('''5''') == 'Yes'\nassert solution('''4 2 1 4 3''') == 'Yes'\nassert solution('''0 2 3 1''') == 'No'\n'''\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 0 0\n\n''') == 'Yes'\n\nassert solution('''5\n4 2 1 4 3\n\n''') == 'Yes'\n\nassert solution('''4\n0 2 3 1\n\n''') == 'No'\n\nassert solution('''5\n0 2 3 1 4\n\n''') == 'No'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n4') == 'Yes'\nassert solution('2\\n0 3 1') == 'No'\nassert solution('3\\n2 1 0') == 'No'\nassert solution('4\\n1 2 3 4') == 'Yes'\nassert solution('5\\n4 2 1 4 3') == 'Yes'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''3\n1 0 0\n''') == 'Yes'\nassert solution(\n'''5\n4 2 1 4 3\n''') == 'Yes'\nassert solution(\n'''4\n0 2 3 1\n''') == 'No'\nassert solution(\n'''2\n0 2\n''') == 'Yes'\nassert solution(\n'''7\n5 4 3 2 1 0\n''') == 'No'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == 'Yes'\nassert solution('''4 2 1 4 3''') == 'Yes'\nassert solution('''5\n4 2 1 4 3''') == 'No'\nassert solution('''0 0 0''') == 'Yes'\nassert solution('''1 1 1''') == 'Yes'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n1 0 0\"\"\") == \"Yes\"\nassert solution(\"\"\"5\n4 2 1 4 3\"\"\") == \"Yes\"\nassert solution(\"\"\"4\n0 2 3 1\"\"\") == \"No\"\nassert solution(\"\"\"4\n2 2 2 2\"\"\") == \"No\"\nassert solution(\"\"\"2\n1 1\"\"\") == \"No\"\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n1 0 0') == 'Yes'\nassert solution('5\\n4 2 1 4 3') == 'Yes'\nassert solution('4\\n0 2 3 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 0 0\n''') == 'Yes'\nassert solution('''5\n4 2 1 4 3\n''') == 'Yes'\nassert solution('''4\n0 2 3 1\n''') == 'No'\nassert solution('''3\n3 0 0\n''') == 'No'\nassert solution('''7\n4 2 1 4 3\n''') == 'Yes'"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\") == \"No\"\nassert solution(\"4\\n1 0 0\") == \"No\"\nassert solution(\"4\\n4 2 1 4 3\") == \"Yes\"\nassert solution(\"4\\n4 2 3 1\") == \"Yes\"\nassert solution(\"4\\n4 3 1 4\") == \"Yes\"\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"0 2 5\n1 3 5\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"0 1 3\n2 3 6\"\"\"\n) == \"1\"\n\"\"\"\n    :type l_a: int\n    :type r_a: int\n    :type t_a: int\n    :type l_b: int\n    :type r_b: int\n    :type t_b: int\n    :rtype: str\n    \"\"\"\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\nassert solution('''0 2 5''') == '''2'''\n\nassert solution('''0 1 3''') == '''1'''\n\nassert solution('''0 1 2''') == '''0'''\n\nassert solution('''0 2 6''') == '''1'''"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 2 5') == '2'\nassert solution('1 3 5') == '2'\nassert solution('0 1 3') == '1'\nassert solution('2 3 6') == '1'\nassert solution('0 1 3') == '1'\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 2 5\n1 3 5''') == '2'\nassert solution('''0 1 3\n2 3 6''') == '1'\nassert solution('''0 0 0\n2 3 6''') == '0'\nassert solution('''0 0 0\n1 3 5''') == '1'\nassert solution('''0 0 0\n0 1 3''') == '0'\n'''\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 2 5\") == 2\nassert solution(\"1 3 5\") == 2\nassert solution(\"0 1 3\") == 1\nassert solution(\"2 3 6\") == 1\n\"\"\"\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 2 5''') == '2'\nassert solution('''1 3 5''') == '1'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 2 3''') == '0'\nassert solution('''0 1 0''') == '0'\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 2 5''') == '2'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 1 3''') == '1'\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 2 5\") == \"2\"\nassert solution(\"1 3 5\") == \"1\"\nassert solution(\"0 1 3\") == \"1\"\nassert solution(\"0 10 4\") == \"1\"\nassert solution(\"1 0 10\") == \"1\"\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 2 5\n1 3 5\n''') == '2'\nassert solution('''0 1 3\n2 3 6\n''') == '1'\nassert solution('''0 0 2\n1 1 2\n''') == '0'\n'''\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 2 5\n1 3 5''') == '2'\nassert solution('''0 1 3\n2 3 6''') == '1'\nassert solution('''0 1 3\n2 3 5''') == '2'\nassert solution('''0 1 3\n2 3 5''') == '2'\nassert solution('''0 1 3\n0 2 4''') == '2'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('00') == '4'\nassert solution('00') == '4'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"00\") == \"4\"\nassert solution(\"23\") == \"2\"\nassert solution(\"10\") == \"5\"\nassert solution(\"99\") == \"12\"\nassert solution(\"11\") == \"1\"\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('73') == '15'\nassert solution('73') == '15'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('00') == 4\nassert solution('89') == 2\nassert solution('73') == 15\n\nassert solution('73') == 15\nassert solution('73') == 15"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('73') == '15'\nassert solution('09') == '8'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('28') == '20'\nassert solution('35') == '21'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"89\") == \"2\"\nassert solution(\"00\") == \"4\"\nassert solution(\"73\") == \"15\"\nassert solution(\"00\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"89\") == \"2\"\nassert solution(\"00\") == \"4\"\nassert solution(\"73\") == \"15\"\n\nprint(\"all tests passed\")\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('00') == '4'\nassert solution('00') == '4'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n5 5 5\n3 2 4\n1 4 1\n2 1 3\n3 2 4\n3 3 4\"\"\") == \"\"\"1\n1\n\"\"\"\n\nassert solution(\"\"\"7\n10 7 8\n5 10 3\n4 2 6\n5 5 5\n10 2 8\n4 2 1\n7 7 7\"\"\") == \"\"\"2\n1 5\n\"\"\""
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n6\n5 5 5\n3 2 4\n1 4 1\n2 1 3\n3 2 4\n3 3 4\n''') == '1\\n1'\nassert solution('''\n7\n10 7 8\n5 10 3\n4 2 6\n5 5 5\n10 2 8\n4 2 1\n7 7 7\n''') == '2\\n1 5'\n'''\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 5 5\\n3 2 4\\n1 4 1\\n2 1 3\\n3 2 4\\n3 3 4\") == \"1\\n1\\n\"\nassert solution(\"7\\n10 7 8\\n5 10 3\\n4 2 6\\n5 5 5\\n10 2 8\\n4 2 1\\n7 7 7\") == \"2\\n1 5\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\") == \"1\\n1\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\") == \"1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\"\nassert solution(\"1\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\\n1\"\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n5 5 5\n3 2 4\n1 4 1\n2 1 3\n3 2 4\n3 3 4\n''') == '1\\n1'\n\nassert solution('''7\n10 7 8\n5 10 3\n4 2 6\n5 5 5\n10 2 8\n4 2 1\n7 7 7\n''') == '2\\n1 5'\n\nassert solution('''8\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '1\\n1 1'\n\nassert solution('''9\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n''') == '1\\n1 1'\n\nassert solution('''10\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '1\\n1 1'\n'''\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n5 5 5\n3 2 4\n1 4 1\n2 1 3\n3 2 4\n3 3 4''') == '1\\n1\\n'\nassert solution('''7\n10 7 8\n5 10 3\n4 2 6\n5 5 5\n10 2 8\n4 2 1\n7 7 7''') == '2\\n1 5\\n'\nassert solution('''8\n7\n6\n5\n4\n3\n2\n1\n2\n3''') == '3\\n1 2\\n'\nassert solution('''9\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n'\nassert solution('''11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19''') == '1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 19\\n'\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 5 5') == '1'\nassert solution('3 2 4') == '1'\nassert solution('1 4 1') == '1'\nassert solution('2 1 3') == '1'\nassert solution('3 2 4') == '2'\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1''') == '1'\nassert solution('''5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5''') == '1'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '2'\nassert solution('''3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3\n3''') == '1'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '2'\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"20 4\\n3 7 8 4\") == \"777773\"\nassert solution(\"1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1 9\\n1"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 4\\n3 7 8 4') == '777773'\nassert solution('1 0\\n1 0\\n1 0') == '1'\nassert solution('1 1\\n0 1\\n1 0') == '1'\nassert solution('2 1\\n0 1\\n1 0') == '1'\nassert solution('2 2\\n1 0\\n0 1') == '1'\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1 2 3\") == \"\"\nassert solution(\"1 2 3 4\") == \"\"\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 7 8 4') == '777773'\n'''"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 4\n3 7 8 4''') == '777773'\n'''"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 4\n3 7 8 4''') == '777773'\nassert solution('''10 5\n1 4 3 7 9''') == '48913'\nassert solution('''100 99\n5 2 5 8 7 4''') == '68913'\n'''\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"20 4\\n3 7 8 4\") == \"777773\"\nassert solution(\"20 4\\n3 1 2 4\") == \"1\"\nassert solution(\"20 4\\n3 7 1 3 4\") == \"77777\"\nassert solution(\"20 4\\n3 2 2 2 4\") == \"9999\"\nassert solution(\"20 4\\n3 7 8 1 9 4\") == \"999875\"\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 10\n6 1 2 7''') == \"2\"\n\nassert solution('''6 2\n2 1 2 3 4 5''') == \"1\"\n\nassert solution('''6 10\n2 1 2 3 4 5''') == \"2\"\n\nassert solution('''6 10\n2 1 2 3 4 5''') == \"2\"\n\nassert solution('''6 10\n10 9 5 1 2 3 4 5''') == \"0\""
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 3 5 7 11 12 10\") == \"6\"\nassert solution(\"2 7 12 5 6 4\") == \"3\"\nassert solution(\"4 10 12 2 5 6\") == \"2\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 10') == '2'\nassert solution('6 1 2 7') == '2'\nassert solution('1 10') == '0'\nassert solution('2 10') == '0'\nassert solution('3 10') == '0'\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n6 1 2 7\\n\") == \"2\"\nassert solution(\"2 4\\n3 2\\n1 4\\n\") == \"1\"\nassert solution(\"1 1\\n5\\n\") == \"1\"\nassert solution(\"3 1\\n3\\n1\\n\") == \"2\"\nassert solution(\"10 1\\n10\\n\") == \"1\"\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10\\n6 1 2 7') == '2'\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 10\\n6 1 2 7\\n') == '2'\nassert solution('4 10\\n7 1 2 3 4\\n') == '0'\nassert solution('4 10\\n7 1 2 3 4\\n') == '1'\nassert solution('4 10\\n9 1 2 3 4\\n') == '0'\nassert solution('4 10\\n9 1 2 3 4\\n') == '3'\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 2 3\n0 1 1''') == '3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2'\nassert solution('''3 3\n2 2 2\n1 1 1\n2 2 2''') == '3\\n1 1 1 2\\n1 2 1 2\\n1 3 1 2'\nassert solution('''6 4\n1 1 1 1 1 1\n1 2 2 2 2 2\n1 2 1 1 2 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '9\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3\\n0 1 1\") == \"3\"\nassert solution(\"2 3\\n1 2 3\\n0 1 1\\n1 1 0\") == \"3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2\"\nassert solution(\"1 10\\n0 1 2 3 4 5 6 7 8 9 10\") == \"3\"\nassert solution(\"1 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 0 0 0 0 0 0 0 0 0 0\") == \"3\\n1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"2 10\\n0 1 2 3 4 5 6 7 8 9 10\\n0 0 0 0 0 0 0 0 0 0 0\") == \"1\\n1 1 1 1 1 1 1 1 1 1\"\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n0 1 1') == '3\\n1 1 1 2'\nassert solution('2 3\\n1 2 3') == '3\\n1 1 1 2'\nassert solution('1 2 3\\n0 1 1\\n0 1 1') == '1\\n1 1 1 2'\nassert solution('2 3\\n1 2 3\\n0 1 1') == '3\\n1 1 1 2'\nassert solution('2 3\\n1 2 3\\n0 1 1\\n1 0 0') == '1\\n1 1 1 2'\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3\\n0 1 1\") == \"3\\n2 2 2 3\\n1 1 1 2\"\n\"\"\""
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3\\n2 2 2 3\\n1 1 1 2'\nassert solution('0 1 1') == '3\\n1 1 1 2\\n1 3 1 2'\nassert solution('2 3') == '3\\n2 2 2 3\\n1 1 1 2'\nassert solution('1 2 3\\n0 1 1') == '3\\n2 2 2 3\\n1 1 1 2'\nassert solution('1 2 3\\n0 1 1\\n0 1 1') == '3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2'\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n1 2 3\n0 1 1''') == '3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2'\nassert solution('''2 3\n0 1 1\n1 2 3''') == '3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2'\n'''\nassert solution('''3 4\n0 2 3 4\n1 1 1 1\n2 1 1 1\n3 2 1 1''') == '4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n2 2 2 2\\n3 3 3 3'\n'''\nassert solution('''7 9\n1 2 3 4 5 6 7\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '6\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n3 3 3 3 3 3\\n5 5 5 5 5 5\\n5 5 5 5 5 5'\n'''\nassert solution('''4 4\n0 1 1 1\n1 1 2 1\n1 1 1 1\n1 1 1 1''') == '3\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1'\n'''\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"3\\n1 1 1 2\\n1 3 1 2\\n\"\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''2 3\n1 2 3\n0 1 1\n''') == '3\\n2 2 2 3\\n1 1 1 2\\n1 3 1 2\\n'\nassert solution(\n    '''1 1\n1 1\n''') == '0\\n0 0 0 0\\n'\n'''\n(num_rows, num_cols) = (int(x) for x in stdin.split())\n\nfor i in range(num_rows):\n    for j in range(num_cols):\n        num_coins = int(stdin.readline().strip())\n        if num_coins % 2 == 0:\n            print(num_coins)\n            print(' '.join(str(x) for x in (i, j, i, j)))\n'''\n\n'''\nIDEA:\n\nThe given puzzle can be split into two sub-puzzles:\n(a) a grid of cells, each containing a number of coins, where cells are marked by odd integers (odd) and even integers (even)\n(b) a grid of cells, each containing a number of coins, where the cells are marked by odd integers (odd) and even integers (even)\nEach sub-puzzle can be solved separately, and the result is merged together.\n\nThe first solution is to generate the number of odd and even rows and cols, and then fill the grid according to the sub-puzzle with the required number of coins.\n\nThe second solution is to use a heuristic to determine which rows/cols should be filled to get a desired number of coins.\n\nHere is a sample puzzle:\n    - each cell contains an integer\n    - we know the sum of all integers from 0 to 9, and the number of coins in each cell is an integer\n    - we know that in each cell, the number of coins is an even number\n    - we know that the number of coins in each cell is an even number\n    - if we assume that the number of coins in each cell is an even number, the result is valid\n    - we can assume that the number of coins in each cell is an even number\n    - we can also assume that the number of coins in each cell is an even number\n    - the number of cells containing an even number of coins is valid\n    - so the puzzle can be solved by filling each row/col with coins that can be divided evenly by 2 (e.g. fill the odd rows with an odd number of coins and the even rows with an even number of coins)\n    - each row/col will have at least an odd number of coins\n    - each row/col will have at least an even number of coins\n    - the number of rows/cols to fill each row/col is the sum of the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the number of coins in the corresponding row/col - 1\n    - the number of coins in a row/col is the"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '10'\nassert solution('3 3') == '660'\nassert solution('3 2') == '10'\nassert solution('3 3') == '660'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '3 2'\n) == '10'\nassert solution(\n    '4 5'\n) == '1270'\nassert solution(\n    '2 2'\n) == '4'\nassert solution(\n    '5 2'\n) == '210'\nassert solution(\n    '10 1'\n) == '40320'\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '10'\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '10'\nassert solution('10 1') == '49'\nassert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '10'\n'''\n\nimport sys"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nprint(solution(stdin))\n\nassert solution('1 10') == '1'\nassert solution('1 10') == '1'\nassert solution('1 10') == '1'\nprint('Assertions passed')\n\"\"\""
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.split(' ')[1]"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"10\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"4 1\") == \"5\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"4 3\") == \"40\"\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '10'\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1\"\nassert solution(\"2 2\\n1 1\\n1 2\\n2 1\\n2 2\\n1 1\\n2 1\\n2 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\") == \"1 1\\n1 2\\n1 1\\n1 2\\n1 2\\n1 1\\n1 2\\n1 1\\n2 2\\n2 2\\n2 1\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\"\nassert solution(\"1 1\\n1 2\\n1 1\\n1 2\\n2 1\\n2 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\\n2 1\\n2 2\\n1 1\\n1 2\\n1 1\") == \"1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\\n1 2\\n1 1\"\n\n\n-----Alternate Solutions (FROM COLAB)-----\n\nimport sys\n\nn, m, x, y, z, p = [int(s) for s in sys.stdin.readline().strip().split()]"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('2 2 2 2 2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('2 2 2 2 2 2\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('2 2 2 2 2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('2 2 2 2 2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n---\n\"\"\"\n\nn, m, x, y, z, p = [int(x) for x in input().split()]\n\nx -= 1\ny -= 1\n\ncandy_matrix = [[0 for _ in range(m)] for _ in range(n)]\n\ncandy_matrix[x][y] = 1"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\"\nassert solution(\"3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\"\nassert solution(\"3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\"\nassert solution(\"3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\"\nassert solution(\"3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\") == \"1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\"\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\n\n\n---"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\n'''\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10\\n2 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n8 1\\n8 2\\n8 3\\n9 1\\n9 2\\n9 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n2 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n8 1\\n8 2\\n8 3\\n9 1\\n9 2\\n9 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n2 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n8 1\\n8 2\\n8 3\\n9 1\\n9 2\\n9 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n2 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n8 1\\n8 2\\n8 3\\n9 1\\n9 2\\n9 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('1 2 3 4 5 6 7 8 9 10\\n2 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\\n6 1\\n6 2\\n6 3\\n7 1\\n7 2\\n7 3\\n8 1\\n8 2\\n8 3\\n9 1\\n9 2\\n9 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\nassert solution('3 3 3 1 1 9\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3') == '1 3\\n1 2\\n1 1\\n2 3\\n2 2\\n2 1\\n3 3\\n3 2\\n3 1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nm, n = map(int, stdin.readline().split())\nmatrix = [stdin.readline().split() for _ in range(m)]\n\nfor row in zip(*matrix):\n    print(''.join('1' if int(x) == 1 else '0' for x in row))\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 0\") == \"NO\\n\"\nassert solution(\"2 3\\n1 1 1\\n1 1 1\\n\") == \"YES\\n1 1 1\\n1 1 1\\n\"\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 0\n0 0''') == \"NO\"\nassert solution('''2 3\n1 1 1\n1 1 1''') == \"YES\"\nassert solution('''2 3\n0 1 0\n1 1 1''') == \"YES\"\nassert solution('''2 4\n0 1 0 1\n1 1 1 1\n1 1 1 1''') == \"YES\"\nassert solution('''2 3\n0 1 0\n1 1 1''') == \"NO\"\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 3\n0 1 0\n1 1 1''') == 'YES\\n1 1 1\\n0 0 0\\n0 1 0'\nassert solution('''2 3\n1 0 0\n1 1 1''') == 'NO'\nassert solution('''3 2\n0 1 0\n1 1 1\n1 0 0''') == 'YES\\n1 1 1\\n1 1 1\\n1 1 1'\nassert solution('''6 4\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == 'NO'\nassert solution('''4 2\n0 0\n0 0\n0 0\n0 0''') == 'NO'\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 0\\n0 0') == 'NO\\n'\nassert solution('2 3\\n1 1 1\\n1 1 1') == 'YES\\n1 1 1\\n1 1 1\\n'\nassert solution('3 2\\n1 0 0\\n0 0 1\\n0 1 1') == 'YES\\n1 0 0\\n0 0 1\\n0 1 1\\n'\nassert solution('10 6\\n0 1 0 0 1 0 0 1 0 1\\n1 0 0 1 0 0 1 0 1') == 'YES\\n0 0 0\\n1 0 0\\n0 0 1\\n1 0 0\\n0 1 0\\n0 1 0\\n1 0 0\\n0 1 0\\n0 0 1\\n0 0 1\\n0 1 1\\n'\nassert solution('10 6\\n0 1 0 0 1 0 0 1 0 1\\n1 0 0 1 0 0 1 0 1') == 'NO\\n'\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"1 0\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"2 3\") == \"YES\"\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 'NO'\nassert solution('1 0') == 'NO'\nassert solution('0 0') == 'YES'\nassert solution('1 1 1') == 'YES'\nassert solution('1 1 1\\n1 1 1') == 'YES'\n"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"aaa\") == \"aa\"\nassert solution(\"a\") == \"a\"\nassert solution(\"a\"*100) == \"a\"*99\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"wooooooow\") == \"woow\"\nassert solution(\"hoooooo\") == \"hoo\"\nassert solution(\"hoooooo\") == \"hoo\"\nassert solution(\"hoooooo\") == \"hoo\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hello') == 'hello'\nassert solution('helloo') == 'hello'\nassert solution('woow') == 'woow'\nassert solution('woooooo') == 'woow'\nassert solution('heeeelloo') == 'heeeell'\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"kifu\") == \"kifu\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"wooooooow\") == \"woow\"\nassert solution(\"wooooooow\") == \"woow\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"woooooow\") == \"woow\"\n\n\n\"\"\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin.replace(\"olleh\", \"hell\")\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"wooooooow\") == \"woow\"\nassert solution(\"hello\") == \"hello\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"helloo\") == \"hello\"\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\nhello\n''') == 'hello'\n\nassert solution(\n'''\nwooooooow\n''') == 'woow'\n\n\nassert solution(\n'''\nwooooo\n''') == 'woooo'\n\nassert solution(\n'''\nwwaaaaaaaaaaaaaaaaaaaaaaaaaa\n''') == 'a'\n\nassert solution(\n'''\nwooooo\n''') == 'woooo'"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"aabbcc\") == \"aaabc\"\nassert solution(\"aabbccddddeeeee\") == \"aaabc\"\nassert solution(\"aabbccddee\") == \"aaabc\"\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2H') == 'YES'\nassert solution('3D') == 'YES'\nassert solution('4C') == 'YES'\nassert solution('4H') == 'YES'\nassert solution('5H') == 'YES'\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"AD\") == \"YES\"\nassert solution(\"AH\") == \"NO\"\nassert solution(\"5H\") == \"YES\"\nassert solution(\"4D\") == \"YES\"\n\n\n\"\"\""
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''AS\n2H 4C TH JH AD\n''') == 'YES'\n\nassert solution('''2H\n3D 4C AC KD AS\n''') == 'NO'\n\nassert solution('''4D\nAS AC AD AH 5H\n''') == 'YES'"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"AS\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"2H 4C TH JH AD\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"2H 3D 4C AC KD AS\") == \"YES\"\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AD') == 'YES'\nassert solution('4D') == 'NO'\nassert solution('2H') == 'YES'\nassert solution('2H') == 'NO'\nassert solution('KD') == 'YES'\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''AS''') == 'YES'\nassert solution('''2H 4C TH JH AD''') == 'YES'\nassert solution('''2H''') == 'NO'\nassert solution('''3D 4C AC KD AS''') == 'NO'\nassert solution('''4D AS AC AD AH 5H''') == 'YES'\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('2H') == 'YES'\nassert solution('4D') == 'NO'\nassert solution('4C') == 'YES'\nassert solution('AS') == 'YES'\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2H 4C TH JH AD\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"2H 4C AC KD AS\") == \"YES\"\nassert solution(\"4D\") == \"YES\"\nassert solution(\"AS AC AD AH 5H\") == \"YES\"\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4D\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"AS\") == \"YES\"\nassert solution(\"3C\") == \"NO\"\nassert solution(\"3D\") == \"YES\"\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('AS') == 'YES'\nassert solution('2H') == 'NO'\nassert solution('2H 4C TH JH AD') == 'YES'\nassert solution('2H') == 'NO'\nassert solution('2H 4C AC KD AS') == 'YES'\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 2'''\n    ) == 'Malvika'\n\nassert solution(\n'''2 3'''\n    ) == 'Akshat'\n\nassert solution(\n'''3 3'''\n    ) == 'Akshat'\n\nassert solution(\n'''3 4'''\n    ) == 'Malvika'\n\nassert solution(\n'''4 4'''\n    ) == 'Malvika'"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'Akshat'\nassert solution('1 1') == 'Malvika'\nassert solution('2 2') == 'Malvika'\nassert solution('3 2') == 'Akshat'\nassert solution('1 1') == 'Malvika'\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"Malvika\"\nassert solution(\"2 3\") == \"Malvika\"\nassert solution(\"3 3\") == \"Akshat\"\nassert solution(\"2 3\") == \"Malvika\"\nassert solution(\"3 3\") == \"Akshat\"\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == 'Akshat'\nassert solution('2 3') == 'Malvika'\nassert solution('3 3') == 'Malvika'\nassert solution('3 4') == 'Akshat'\nassert solution('4 4') == 'Akshat'\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Akshat\"\nassert solution(\"2 3\") == \"Akshat\"\nassert solution(\"3 3\") == \"Malvika\"\nassert solution(\"1 1\") == \"Malvika\"\nassert solution(\"2 1\") == \"Akshat\"\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''2 2'''\n) == 'Malvika'\n\nassert solution(\n'''2 3'''\n) == 'Malvika'\n\nassert solution(\n'''3 3'''\n) == 'Akshat'\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'Malvika'\nassert solution('2 3') == 'Malvika'\nassert solution('3 3') == 'Akshat'\nassert solution('1 3') == 'Malvika'\nassert solution('3 1') == 'Akshat'\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"Malvika\"\nassert solution(\"2 3\") == \"Malvika\"\nassert solution(\"3 3\") == \"Akshat\"\nassert solution(\"5 5\") == \"Malvika\"\nassert solution(\"5 5\") == \"Malvika\"\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Malvika'\nassert solution('2 3') == 'Malvika'\nassert solution('3 3') == 'Akshat'\n\n'''\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '300'\nassert solution('100 200 300 200 100 300 300 100 200') == '300'\nassert solution('1 3 2 2 1') == '2'\nassert solution('10') == '2'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 2 2 1') == '2'\nassert solution('100 200 300 200 100 300 300 100 200') == '300'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 2 2 1\\n') == '2'\nassert solution('9\\n100 200 300 200 100 300 300 100 200\\n') == '300'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 2 2 1') == '2'\nassert solution('9\\n100 200 300 200 100 300 300 100 200') == '300'\nassert solution('10\\n0 1 2 1 4 2 1 4 3 2 1 1') == '1'\nassert solution('10\\n0 1 2 1 4 2 1 4 3 2 1 1') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '2'\nassert solution('''9''') == '300'\nassert solution('''100 200 300 200 100 300 300 100 200''') == '300'\nassert solution('''1 3 2 2 1''') == '2'\nassert solution('''2 2 1''') == '2'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == 2\nassert solution('9') == 3\nassert solution('100 200 300 200 100 300 300 100 200') == 300\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 2 2 1') == '2'\nassert solution('9\\n100 200 300 200 100 300 300 100 200') == '300'\nassert solution('100\\n100 100 100 100 100 100 100 100 100 100') == '100'\nassert solution('100\\n100 100 100 100 100 100 100 100 100 100') == '100'\nassert solution('100\\n100 100 100 100 100 100 100 100 100 100') == '100'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('5\\n1 2 2 1 1') == '2'\nassert solution('9\\n100 200 300 200 100 300 300 100 200') == '300'\nassert solution('5\\n2 3 2 2 1') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '7'\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('9') == '300'\nassert solution('100 200 300 200 100 300 300 100 200') == '300'\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''1 2\n1\n''') == '1'\nassert solution('''1\n2\n''') == '0'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n2\n1\n''') == '0'\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 1 0 1 0 0\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\") == \"16\"\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''10 10\n5 5 4 4 3 3 2 2 1 1\n1 1 0 1 0 0 0 0 0 0\n''') == '20'\n\n'''"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\n'''\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\\n\") == \"16\"\nassert solution(\"3 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\\n\") == \"16\"\nassert solution(\"3 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\\n\") == \"16\"\nassert solution(\"3 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\\n\") == \"16\"\nassert solution(\"3 3\\n1 3 5 2 5 4\\n1 1 0 1 0 0\\n\") == \"16\"\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == '16'\n'''\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == 16\n\n'''\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 16\n\"\"\"\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\n\nassert solution('''\n6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1\\n3 \\n2'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5'\nassert solution('10 20') == '0'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('9 12') == '2 3 6'\nassert solution('3 7') == '3 6'\nassert solution('1 10') == '1 10'\nassert solution('10 11') == '2 10'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 5') == '1\\n3 2\\n2\\n2 1'\nassert solution('7 3') == '1\\n3 6\\n4\\n1 2 4 5'\nassert solution('10 13') == '2\\n3 6\\n4\\n1 2 4 5 6'\nassert solution('10 15') == '2\\n3 6\\n4\\n1 2 4 5 6 7'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2\\n2\\n1\\n1 2'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5'\nassert solution('2 5') == '0\\n0 0'\nassert solution('6 9') == '1\\n2 3 4 5 6'\nassert solution('3 5') == '1\\n1 2 4 5'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3''') == '1\\n3\\n2'\nassert solution('''9 12''') == '2\\n3 6\\n4\\n1 2 4 5'\n\n\n'''\n\na,b = map(int, stdin.strip().split(' '))\nn = a + b\n\nlst = [set() for i in range(n+1)]"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"9 12\") == \"2 3\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('9 12') == '2 3 6'\nassert solution('1 2 4 5') == '2 3'\nassert solution('1 2 4 5 7 8 9 10 11 12 13 14 15 16 17 18 19') == '0'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n1 4 5\n4 6 7''') == '1 1 1 2 2 2 3 3 3'\nassert solution('''7 3\n3 6 9\n2 5 8\n1 4 7\n3 1 2\n1 4 7\n1 4 7\n3 1 2\n1 4 7''') == '1 1 1 2 2 2 3 3 3'\nassert solution('''9 3\n3 6 9\n2 5 8\n1 4 7\n3 1 2\n4 1 5\n3 1 2\n1 4 7\n1 4 7\n3 1 2''') == '1 1 1 2 2 2 3 3 3 3 3'\nassert solution('''5 2\n4 1 5\n3 1 2\n4 1 5\n3 1 2''') == '2 3 1 1 3'\nassert solution('''5 2\n4 1 5\n4 1 5\n3 1 2\n3 1 2''') == '1 1 1 2 2 2 3 3'\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1 3 3 2 2 1'\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    7 3\n    1 2 3\n    1 4 5\n    4 6 7\n    \"\"\") == \"\"\"\n    1 2 3 3 2 2 1 \n    \"\"\"\n\n\n\"\"\"\nSample Input:\n\n3 2\n1 2\n2 1\n\nSample Output:\n\n1 1 1\n\"\"\"\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3\\n1 4 5\\n4 6 7\\n') == '1 2 3 3 2 2 1\\n'\nassert solution('1 3\\n1 4 5\\n4 6 7\\n') == '1 1 1 2 2 2 3 3 3\\n'\nassert solution('5 3\\n3 6 9\\n2 5 8\\n1 4 7\\n') == '2 3 1 1 3\\n'\nassert solution('7 3\\n1 2 3\\n1 4 5\\n4 6 7\\n') == '1 1 1 2 2 2 3 3 3\\n'\nassert solution('7 2\\n1 2 3\\n1 4 5\\n4 6 7\\n') == '1 1 1 2 2 3 3\\n'\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n1 4 5 6\\n4 7 8 9\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"1 2 3 4\\n1 4 5 6\\n4 7 8 9\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"1 2 3 4\\n1 4 5 6\\n4 7 8 9\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"1 2 3 4\\n1 4 5 6\\n4 7 8 9\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"1 2 3 4\\n1 4 5 6\\n4 7 8 9\") == \"1 1 1 2 2 2 3 3 3\"\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"7 3\\n1 2 3\\n1 4 5\") == \"1 2 3 3 2 2 1\"\nassert solution(\"9 3\\n3 6 9\\n2 5 8\\n1 4 7\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"5 2\\n4 1 5\\n3 1 2\") == \"2 3 1 1 3\"\nassert solution(\"9 3\\n3 6 9\\n2 5 8\\n1 4 7\") == \"2 3 1 1 3\"\nassert solution(\"5 3\\n4 1 5\\n3 1 2\") == \"3 1 1 3\"\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 3\n1 2 3\n1 4 5\n4 6 7\n''') == '1 1 1 2 2 2 3 3 3'\nassert solution('''9 3\n3 6 9\n2 5 8\n1 4 7\n''') == '1 1 1 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n1 4 5\\n4 6 7\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"7 3\\n1 2 3\\n1 4 5\\n4 6 7\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"9 3\\n3 6 9\\n2 5 8\\n1 4 7\\n\") == \"1 1 1 2 2 2 3 3 3\"\nassert solution(\"5 2\\n4 1 5\\n3 1 2\\n\") == \"2 3 1 1 3\"\nassert solution(\"5 2\\n3 1 2\\n\") == \"1 1 1 2 2\"\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '0'\nassert solution('2 5 3') == '1'\nassert solution('100 10 10') == '81'\nassert solution('100 10 10\\n1 1 1\\n') == '0'\nassert solution('100 10 10\\n100 10 10\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"0\"\nassert solution(\"2 5 3\") == \"1\"\nassert solution(\"100 10 10\") == \"81\"\nassert solution(\"100 10 10\") == \"81\"\nassert solution(\"1 100 1\") == \"0\"\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '0'\nassert solution('2 5 3') == '1'\nassert solution('100 10 10') == '81'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4 5''') == '0'\nassert solution('''2 5 3''') == '1'\nassert solution('''100 10 10''') == '81'\nassert solution('''100 10 10''') == '81'\nassert solution('''3 4 5''') == '0'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '0'\nassert solution('2 5 3') == '1'\nassert solution('100 10 10') == '81'\nassert solution('100 10 10') == '81'\nassert solution('100 10 10') == '81'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 5''') == '0'\nassert solution('''2 5 3''') == '1'\nassert solution('''100 10 10''') == '81'\nassert solution('''100 100 100''') == '0'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"0\"\nassert solution(\"2 5 3\") == \"1\"\nassert solution(\"100 10 10\") == \"81\"\nassert solution(\"100 10 10\") == \"81\"\nassert solution(\"100 10 10\") == \"81\"\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '0'\nassert solution('2 5 3') == '1'\nassert solution('100 10 10') == '81'\nassert solution('5 10 3') == '6'\nassert solution('9 8 2') == '3'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 5\\n') == '0'\nassert solution('2 5 3\\n') == '1'\nassert solution('100 10 10\\n') == '81'\n\n\n-----Alternate Solutions-----"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13 3\\n3 2 7') == 'even'\nassert solution('10 9\\n1 2 3 4 5 6 7 8 9') == 'odd'\nassert solution('99 5\\n32 92 85 74 4') == 'odd'\nassert solution('2 2\\n1 0') == 'even'\n\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1 0') == 'even'\nassert solution('2\\n32 92 85 74 4') == 'odd'\nassert solution('2\\n32 92 85 74 4') == 'odd'\nassert solution('2\\n2') == 'even'\nassert solution('2\\n123456789') == 'odd'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"even\"\n\n\"\"\"\nfrom math import log10"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('17 2 3') == 'odd'\nassert solution('17 2 3') == 'odd'\nassert solution('13 3 7') == 'even'\nassert solution('13 3 7') == 'even'\nassert solution('99 5') == 'odd'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13 3') == 'even'\nassert solution('10 9') == 'odd'\nassert solution('99 5') == 'odd'\nassert solution('2 2') == 'even'\nassert solution('32 92 85 74 4') == 'odd'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11 10 3') == 'odd'\nassert solution('12 22 22 22 22 22 22') == 'even'\nassert solution('1 2 3 4 5 6 7 8 9') == 'odd'\nassert solution('32 92 85 74 4') == 'even'\nassert solution('99 9 3 3 4 5 6 7 8 9') == 'odd'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 3\\n3 2 7\\n') == 'even\\n'\nassert solution('99 5\\n32 92 85 74 4\\n') == 'odd\\n'\nassert solution('2 2\\n1 0\\n') == 'even\\n'\nassert solution('99 9\\n1 2 3 4 5 6 7 8 9\\n') == 'odd\\n'\nassert solution('2 0\\n2 0\\n') == 'even\\n'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13 3\\n3 2 7') == 'even'\nassert solution('10 9\\n1 2 3 4 5 6 7 8 9') == 'odd'\nassert solution('99 5\\n32 92 85 74 4') == 'odd'\nassert solution('2 2\\n1 0') == 'even'"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('stdin') == 'odd'\nassert solution('stdin') == 'even'\nassert solution('stdin') == 'odd'\nassert solution('stdin') == 'odd'\nassert solution('stdin') == 'odd'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0 0\n\"\"\") == \"\"\"\nPossible\n1 1 1\n\"\"\"\nassert solution(\"\"\"\n5\n3 3 2 2 2\n\"\"\") == \"\"\"\nPossible\n1 1 2 2 2\n\"\"\"\nassert solution(\"\"\"\n4\n0 1 2 3\n\"\"\") == \"\"\"\nImpossible\n\"\"\"\nassert solution(\"\"\"\n4\n3 3 1 2\n\"\"\") == \"\"\"\nImpossible\n\"\"\"\nassert solution(\"\"\"\n6\n1 2 2 2 2 2\n\"\"\") == \"\"\"\nPossible\n1 1 1 1 1 1\n\"\"\"\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0 0') == 'Possible\\n1 1 1'\nassert solution('5\\n3 3 2 2 2') == 'Possible\\n1 1 2 2 2'\nassert solution('4\\n0 1 2 3') == 'Impossible'\nassert solution('2\\n2 2') == 'Possible\\n1 1'\nassert solution('3\\n0 0 0') == 'Possible\\n1 1 1'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n0\\n0') == 'Impossible'\nassert solution('1\\n0\\n0') == 'Possible'\nassert solution('1\\n1\\n1') == 'Possible'\nassert solution('1\\n1\\n2') == 'Possible'\nassert solution('2\\n2\\n2') == 'Possible'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Possible\"\nassert solution(\"5\\n3 3 2 2 2\") == \"Possible\"\nassert solution(\"5\\n0 0 0\") == \"Possible\"\nassert solution(\"5\\n0 1 2 3\") == \"Possible\"\nassert solution(\"4\\n0 1 2 3\") == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == ''\n\"\"\"\n\nn = int(input())\na = [int(i) for i in input().split()]\nb = []\nfor i in a:\n    if i not in b:\n        b.append(i)\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == \"Impossible\"\nassert solution('0') == \"Impossible\"\nassert solution('3') == \"Possible\"\nassert solution('3 2 1') == \"Possible\"\nassert solution('3 2 0') == \"Possible\"\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 0') == 'Possible\\n1 1 1'\nassert solution('5\\n3 3 2 2 2') == 'Possible\\n1 1 2 2 2'\nassert solution('4\\n0 1 2 3') == 'Impossible'\nassert solution('5\\n3 3 2 2 2') == 'Possible\\n1 1 2 2 2'\nassert solution('4\\n0 1 2 3') == 'Possible\\n1 2 1 2'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 0\\n') == 'Possible\\n1 1 1\\n'\nassert solution('5\\n3 3 2 2 2\\n') == 'Possible\\n1 1 2 2 2\\n'\nassert solution('4\\n0 1 2 3\\n') == 'Impossible\\n'\nassert solution('4\\n0 1 2 3\\n') == 'Impossible\\n'\nassert solution('4\\n0 1 2 3\\n') == 'Impossible\\n'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 0\") == \"Possible\\n1 1 1\"\nassert solution(\"5\\n3 3 2 2 2\") == \"Possible\\n1 1 2 2 2\"\nassert solution(\"4\\n0 1 2 3\") == \"Impossible\"\nassert solution(\"5\\n3 3 2 2 2\") == \"Possible\\n1 1 2 2 2\"\nassert solution(\"4\\n1 2 3 4\") == \"Possible\\n1 1 1 1\"\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n1 2 3\") == \"6\"\nassert solution(\"5\\n999999999 999999999 999999999 999999999\") == \"3999999996\"\nassert solution(\"10\\n
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3''') == '6'\nassert solution('''5\n999999999 999999999 999999999 999999999 999999999''') == '3999999996'\nassert solution('''4\n1 2 3 4''') == '6'\nassert solution('''1\n4''') == '6'\nassert solution('''2\n1 2''') == '4'\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3''') == '6'\nassert solution('''5 9999999 999999999 999999999 999999999''') == '3999999996'\nassert solution('''1 2 3 4 5''') == '0'\n'''\n\nN = int(input())\nnums = [int(x) for x in input().split()]\n\nsums = set()\nmaxSum = 0\n\nfor num in nums:\n    if num % 2 == 0:\n        sums.add(num)\n\nfor i in range(1, len(sums)):\n    sums.add(sums[i-1] + sums[i])\n\nfor i in range(len(sums)):\n    if sums[i] % 2 == 0:\n        maxSum = max(maxSum, sums[i])\n\nprint(maxSum)\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '6'\nassert solution('999999999 999999999 999999999 999999999') == '3999999996'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5') == '6'\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '3999999996'\nassert solution('999999999 999999999 999999999 999999999 999999999') == '3999999996'\nassert solution('999999999 999999999 999999999 999999999 999999999') == '3999999996'\n\"\"\"\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '6'\nassert solution('5\\n999999999 999999999 999999999 999999999 999999999') == '3999999996'\nassert solution('1\\n1\\n') == '2'\nassert solution('1\\n9\\n') == '9'\nassert solution('1\\n8\\n') == '0'\n\n\n-----"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '6'\nassert solution('''99999999 999 999 999 999''') == '3999999996'\nassert solution('''99999999 999999999 999999999 999999999 999999999''') == '3999999996'\nassert solution('''99999999 999999999 999999999 999999999 999999999''') == '3999999996'\nassert solution('''99999999 999999999 999999999 999999999 999999999''') == '3999999996'\n"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2 3''') == \"6\"\nassert solution('''999999999 999999999 999999999 999999999 999999999''') == \"3999999996\"\n\n\n\n'''"
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('3 9 3 9') == '9'\nassert solution('1 2 3') == '6'\nassert solution('2 9 5 2 2') == '10'\nassert solution
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '6'\nassert solution('''1 2 3''') == '6'\nassert solution('''99999 99999 99999 99999 99999 99999''') == '3999999996'\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n3 4\n3 2\n''') == '2'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '3'\nassert solution('''4\n1 2\n1 2\n1 2\n''') == '2'\nassert solution('''2\n2 2\n2 2\n2 2\n''') == '1'\nassert solution('''1\n1\n''') == '1'\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3') == '2'\nassert solution('1 2\\n2 3\\n3 4\\n4 5') == '1'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '3'\nassert solution('1 2\\n2 3\\n4 5\\n6 7') == '3'\nassert solution('1 2\\n2 3\\n4 5\\n4 6\\n6 7\\n7 8') == '3'\n\n\n-----"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input_) == answer_\n\"\"\"\n\nfrom collections import defaultdict\n\nn = int(input())\ncities = []\nroads = []\n\nfor _ in range(n - 1):\n    u, v = map(int, input().split())\n    roads.append((u, v))\n    cities.append((u, v))\n\ncities.sort(key=lambda c: c[0])\nroads.sort(key=lambda r: r[0])\n\nvisited = [False] * n\nroads_broken = defaultdict(int)\ncurr_broken_roads = 0\n\nday = 0\nwhile True:\n    if visited[0] and visited[-1]:\n        break\n    \n    for r in roads:\n        if not visited[r[1] - 1]:\n            visited[r[1] - 1] = True\n            roads_broken[r] += 1\n            if not visited[r[0] - 1]:\n                visited[r[0] - 1] = True\n                roads_broken[r] += 1\n                curr_broken_roads += 1\n            elif not visited[r[0] - 1]:\n                visited[r[0] - 1] = True\n                roads_broken[r] += 1\n                curr_broken_roads += 1\n            else:\n                visited[r[0] - 1] = True\n                roads_broken[r] += 1\n                curr_broken_roads += 1\n        else:\n            roads_broken[r] += 1\n        \n        if roads_broken[r] > 1:\n            roads_broken[r] -= 1\n            curr_broken_roads -= 1\n    \n    day += 1\n\nprint(day)\n\nfor r in roads:\n    print(roads_broken[r])\n    print(' '.join(map(str, list(range(1,roads_broken[r] + 1)))))\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n3 4\\n3 2') == '2'\nassert solution('6\\n3 4\\n5 4\\n3 2\\n1 3\\n4 6') == '3'\nassert solution('6\\n3 4\\n5 4\\n3 2\\n1 3\\n4 6\\n6 1') == '1'\nassert solution('2\\n1 3') == '1 3'\nassert solution('3\\n2 3') == '2 3'\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == answer_expected\n\"\"\"\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nimport sys"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n3 4\\n3 2\\n') == '2'\nassert solution('6\\n3 4\\n5 4\\n3 2\\n1 3\\n4 6\\n') == '3'\nassert solution('1\\n1\\n') == '0'\nassert solution('7\\n7\\n7\\n7\\n7\\n7\\n7\\n') == '7'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n') == '10'\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n3 4\n3 2''') == '2'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '100'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n''') == '2'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n''') == '2'\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n4\n0 10 5 15\n''') == 'yes'\n\nassert solution(\n'''\n4\n0 15 5 10\n''') == 'no'\n\nassert solution(\n'''\n5\n1 2 3 4 5\n''') == 'no'\n\nassert solution(\n'''\n4\n-2 -5 1 1\n''') == 'yes'\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 10 5 15\") == \"yes\"\nassert solution(\"0 15 5 10\") == \"no\"\nassert solution(\"0 5 15 10\") == \"no\"\nassert solution(\"0 10 5 15\") == \"no\"\nassert solution(\"0 5 10 15\") == \"no\"\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 10 5 15\") == \"yes\"\nassert solution(\"4\\n0 15 5 10\") == \"no\"\nassert solution(\"6\\n0 5 4 10 3 2\") == \"yes\"\nassert solution(\"6\\n0 5 4 10 3\") == \"no\"\nassert solution(\"6\\n0 5 4 10\") == \"no\"\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"0 10 5 15\") == \"yes\"\nassert solution(\"0 15 5 10\") == \"no\"\nassert solution(\"0 10 15 5\") == \"no\"\nassert solution(\"0 15 10 5\") == \"no\"\nassert solution(\"0 10 5 10\") == \"yes\"\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == \"no\"\nassert solution(input(\"0 10 5 15\\n\")) == \"yes\"\nassert solution(input(\"0 15 5 10\\n\")) == \"no\"\nassert solution(input(\"4\\n0 10 5 15\\n\")) == \"yes\"\nassert solution(input(\"4\\n0 15 5 10\\n\")) == \"no\"\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 10 5 15\n''') == 'yes'\nassert solution('''0 15 5 10\n''') == 'no'\nassert solution('''0 10 5 15\n''') == 'no'\nassert solution('''-10 10 10 -5 -15\n''') == 'yes'\nassert solution('''10 10 10 -5 -15\n''') == 'no'\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 10 5 15\\n\") == \"yes\"\nassert solution(\"4\\n0 15 5 10\\n\") == \"no\"\nassert solution(\"10\\n-10 -9 -8 -7 -6 -5 -4 -3 -2 -1\\n1 1 1 1 1 1 1 1 1 1 1\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 10 5 15') == 'yes'\nassert solution('0 15 5 10') == 'no'\nassert solution('0 15 15 10') == 'no'\nassert solution('0 10 5 15') == 'yes'\nassert solution('0 10 15 5') == 'no'\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 10 5 15\") == \"yes\"\nassert solution(\"0 15 5 10\") == \"no\"\nassert solution(\"0 10 5 15\") == \"yes\"\nassert solution(\"0 15 5 10\") == \"no\"\nassert solution(\"0 10 5 15\") == \"yes\"\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0 1 0\\n') == 'HARD'\nassert solution('1\\n0\\n') == 'EASY'\nassert solution('2\\n1 0\\n') == 'EASY'\nassert solution('2\\n0 1\\n') == 'EASY'\nassert solution('2\\n1 1\\n') == 'EASY'\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1\") == \"HARD\"\nassert solution(\"0\") == \"EASY\"\nassert solution(\"1 0 1\") == \"EASY\"\nassert solution(\"0 1 0 1\") == \"HARD\"\nassert solution(\"0 0 0 0\") == \"EASY\"\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"EASY\"\nassert solution(\"1\") == \"EASY\"\nassert solution(\"3\") == \"EASY\"\nassert solution(\"0 0 1\") == \"HARD\"\nassert solution(\"0 1 1\") == \"EASY\"\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'EASY'\nassert solution('2') == 'HARD'\nassert solution('3') == 'HARD'\nassert solution('4') == 'EASY'\nassert solution('5') == 'EASY'\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n1\n0''') == 'EASY'\nassert solution('''1\n1\n1''') == 'EASY'\nassert solution('''1\n1\n0''') == 'EASY'\nassert solution('''1\n0\n0''') == 'EASY'\nassert solution('''0\n0\n1''') == 'EASY'\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"HARD\""
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"HARD\"\nassert solution(\"1\") == \"EASY\"\nassert solution(\"2\") == \"EASY\"\nassert solution(\"3\") == \"EASY\"\nassert solution(\"4\") == \"HARD\"\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0\\n1\\n') == 'EASY'\nassert solution('1\\n0\\n1\\n') == 'HARD'\nassert solution('1\\n1\\n1\\n') == 'HARD'\nassert solution('2\\n0\\n0\\n') == 'EASY'\nassert solution('3\\n0\\n1\\n') == 'EASY'\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0 1\\n0 1 1') == 'HARD'\nassert solution('1\\n1') == 'EASY'\nassert solution('2\\n0 0 1\\n0 1 1') == 'EASY'\nassert solution('2\\n0 0 1\\n1 1 1') == 'HARD'\n\n\n\"\"\""
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n') == 'EASY'\nassert solution('2\\n0\\n') == 'HARD'\nassert solution('3\\n0\\n0') == 'EASY'\nassert solution('3\\n0\\n0') == 'EASY'\nassert solution('3\\n0\\n0') == 'EASY'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6\n9\n''') == '2 2'\nassert solution('''4\n6\n7\n''') == '2 3'\nassert solution('''4\n5\n6\n7\n''') == '3 3'\nassert solution('''4\n4\n6\n7\n''') == '3 3'\nassert solution('''4\n4\n5\n6\n7\n''') == '2 3'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"\"\"2 2\n3 3\n3 6\"\"\"\n\n\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\"\"\".replace(\"\\n\", \"\")\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"\"\"2 2\n3 3\n3 6\"\"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"\"\"2 2\n3 3\n3 6\"\"\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"\"\""
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"2 1\") == \"\"\nassert solution(\"2 2\") == \"2 1\"\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n4\\n6\\n9\\n') == '2 2\\n3 3\\n3 6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '3 3\\n6 6\\n9 9\\n'\nassert solution('5\\n6\\n7\\n8\\n9\\n') == '3 3\\n3 6\\n6 9\\n'\nassert solution('4\\n2\\n3\\n1\\n5\\n6\\n7\\n8\\n9\\n') == '2 2\\n6 6\\n9 9\\n'\nassert solution('4\\n2\\n3\\n1\\n4\\n5\\n6\\n7\\n8\\n9\\n') == '3 3\\n3 6\\n6 9\\n'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '2\\n3\\n6\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '3\\n5\\n'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n4\\n6') == '2 2'\nassert solution('4\\n6\\n9\\n') == '3 3'\nassert solution('3\\n6\\n9\\n') == '3 6'\nassert solution('3\\n6\\n9\\n') == '6 6'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n4\n6\n9''') == '2 2'\nassert solution('''4\n6\n9\n3\n5''') == '3 3'\nassert solution('''9\n9\n9\n9\n9''') == '3 3'\nassert solution('''9\n9\n9\n9\n9''') == '3 3'\nassert solution('''1\n1\n1\n1\n1''') == '1 1'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '4',\n    '6',\n    '9'\n])) == '2 2', '3 3'\nassert solution('\\n'.join([\n    '4',\n    '6',\n    '9'\n])) == '3 3', '3 6'\nassert solution('\\n'.join([\n    '3',\n    '4',\n    '5',\n    '6'\n])) == '3 3', '3 3'\nassert solution('\\n'.join([\n    '9'\n])) == '3 3', '9'\nassert solution('\\n'.join([\n    '5',\n    '6',\n    '7',\n    '8'\n])) == '5 5', '6 6'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4\\nface\\n') == '0'\nassert solution('2 3\\nfac\\ncef\\n') == '1'\nassert solution('2 3\\nfac\\ncef\\n') == '1'\nassert solution('1 4\\nface\\n') == '0'\nassert solution('1 3\\nabc\\nabc\\n') == '0'\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\nxxxx\\nxfax\\nxcex\\nxxxx\\n\\n2 3\\nfac\\ncef\\n\\n\") == \"1\"\nassert solution(\"4 2\\nxx\\ncf\\nae\\nxx\\n\\n2 3\\nfac\\ncef\\n\\n\") == \"1\"\nassert solution(\"1 4\\nface\\n\\n\") == \"0\"\n\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 4\nxxxx\nxfax\nxcex\nxxxx\n''') == '1'\n\nassert solution('''4 2\nxx\ncf\nae\nxx\n''') == '1'\n\nassert solution('''1 4\nface\n''') == '0'\n\nassert solution('''2 3\nfac\ncef\n''') == '2'\n\nassert solution('''7 2\noxox\noxox\noxox\noxox\noxox\noxox\noxox\noxox\n''') == '1'"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\nfac\\ncef') == '1'\nassert solution('2 3\\ncef\\nafc') == '2'\nassert solution('1 4\\nface\\nface\\nface\\nface') == '0'\nassert solution('3 5\\nacacb\\nccacb\\nccacb\\nccacb') == '4'\nassert solution('4 5\\naxbcb\\nxabcb\\naecb\\naecb') == '1'\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4\\n'\n'xxxx\\n'\n'xfax\\n'\n'xcex\\n'\n'xxxx\\n') == '1'\nassert solution('4 2\\n'\n'fac\\n'\n'cef\\n') == '1'\nassert solution('2 3\\n'\n'fac\\n'\n'cef\\n') == '2'\nassert solution('1 4\\n'\n'face\\n') == '0'\nassert solution('2 4\\n'\n'fac\\n'\n'cef\\n'\n'ace\\n'\n'fac\\n') == '2'\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\nxxxx\nxfax\nxcex\nxxxx''') == '1'\nassert solution('''4 2\nxx\ncf\nae\nxx\n''') == '1'\nassert solution('''1 4\nface\n''') == '0'\nassert solution('''2 3\nfac\ncef\n''') == '2'\nassert solution('''2 3\ncccc\nceec\n''') == '0'\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\nxxxx\\nxfax\\nxcex\\nxxxx\\n\") == \"1\\n\"\nassert solution(\"4 2\\nxx\\ncf\\nae\\nxx\\n\") == \"1\\n\"\nassert solution(\"2 3\\nfac\\ncef\\n\") == \"2\\n\"\nassert solution(\"1 4\\nface\\n\") == \"0\\n\"\nassert solution(\"4 2\\nxxxx\\nxface\\nxcex\\n\") == \"1\\n\"\n"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 2\nxx\ncf\nae\nxx\n''') == '1'\n\nassert solution('''2 3\nfac\ncef\n''') == '1'\n\nassert solution('''1 4\nface\n''') == '0'\n\nassert solution('''2 4\nxx\ncex\nxx\n''') == '2'\n\nassert solution('''1 2\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx\nxx"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2''') == '1'\nassert solution('''61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576''') == '61803398874989484820458683436563811772030917980576'\n'''\n    pass\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2''') == '1'\nassert solution('''61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576''') == '61803398874989484820458683436563811772030917980576'\nassert solution('''987654321 987654321''') == '987654321'\nassert solution('''1 2''') == '1'\nassert solution('''9 17''') == '1'\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576\") == \"61803398874989484820458683436563811772030917980576\"\n'''\n\n'''\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"61803398874989484820458683436563811772030917980576\""
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\nprint('All tests passed successfully!')\n\"\"\"\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\nassert solution('1000000000 1000000000') == '1000000000'\n\n\n\nfrom typing import Tuple"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576') == '61803398874989484820458683436563811772030917980576'\n"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n1**2\\na3*0\\nc4**\\n\\n\\n\") == \"1\"\nassert solution(\"5 5\\n#*&#*\\na1c&\\n&q2w*\\n#a3c#\\n*&#*&\\n\\n\\n\") == \"3\"\nassert solution(\"3 3\\n#&#&\\n&#&\\n&#&\\n\\n\\n\") == \"3\"\nassert solution(\"4 4\\n&#*\\n#*&\\n#*&\\n#*&\\n\\n\\n\") == \"2\"\nassert solution(\"5 5\\n&#*\\n#*&\\n#*&\\n#*&\\n\\n\\n\") == \"3\"\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1**2\\na3*0\\nc4**\\n\") == \"1\"\nassert solution(\"5 5\\n#*&#*\\na1c&\\n&q2w*\\n#a3c#\\n*&#*&\\n\") == \"3\"\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('a') == 'a'\nassert solution('abc') == 'a'\nassert solution('abc123') == 'a'\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\nassert solution(stdin) == '5'\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n#1\\n*a1c\\n&q2w\\n#a3c#\\n*&#*&\\n') == '3'\nassert solution('6\\n4\\n#a#\\n*abc\\n&q#\\n#ab*\\n&q*&\\n') == '4'\nassert solution('6\\n4\\n#a#\\n*abc\\n&q#\\n#ab*\\n&q*&\\n') == '1'\nassert solution('6\\n4\\n#a#\\n*abc\\n&q#\\n#ab*\\n&q*&\\n') == '2'\nassert solution('6\\n4\\n#a#\\n*abc\\n&q#\\n#ab*\\n&q*&\\n') == '3'\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1 ') == '1'\nassert solution('   ') == ''\nassert solution('*') == '*'\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\"\"\") == '''1\n0\n1\n1\n2\n2\n3\n3\n4\n4\n5\n5\n6\n6\n7\n7\n8\n8\n9\n9\n10\n10\n11\n11\n12\n12\n13\n13\n14\n14\n15\n15\n16\n16\n17\n17\n18\n18\n19\n19\n20\n20\n21\n21\n22\n22\n23\n23\n24\n24\n25\n25\n26\n26\n27\n27\n28\n28\n29\n29\n30\n30\n31\n31\n32\n32\n32\n32\n33\n33\n34\n34\n35\n35\n36\n36\n37\n37\n38\n38\n39\n39\n40\n40\n41\n41\n42\n42\n43\n43\n44\n44\n45\n45\n46\n46\n47\n47\n48\n48\n49\n49\n50\n50\n51\n51\n52\n52\n53\n53\n54\n54\n55\n55\n56\n56\n57\n57\n58\n58\n59\n59\n60\n60\n61\n61\n62\n62\n63\n63\n64\n64\n65\n65\n66\n66\n67\n67\n68\n68\n69\n69\n70\n70\n71\n71\n72\n72\n73\n73\n74\n74\n75\n75\n76\n76\n77\n77\n78\n78\n79\n79\n80\n80\n81\n81\n82\n82\n83\n83\n84\n84\n85\n85\n86\n86\n87\n87\n88\n88\n89\n89\n90\n90\n91\n91\n92\n92\n93\n93\n94\n94\n95\n95\n96\n96\n97\n97\n98\n98\n99\n99\n100\n100\n101\n101\n102\n102\n103\n103\n104\n104\n105\n105\n106\n106\n107\n107\n108\n108\n109\n109\n110\n110\n111\n111\n112\n112\n113\n113\n114\n114\n115\n115\n116\n116\n117\n117\n118\n118\n119\n119\n120\n120\n121\n121\n122\n122\n123\n123\n124\n124\n125\n125\n126\n126\n127\n127\n128\n128\n129\n129\n130\n130\n131\n131\n132\n132\n133\n133\n134\n134\n135\n135\n136\n136\n137\n137\n138\n138\n139\n139\n140\n140\n141\n141\n142\n142\n143\n143\n144\n144\n145\n145\n146\n146\n147\n147\n148\n148\n149\n149\n150\n150\n151\n151\n152\n152\n153\n153\n154\n154\n155\n155\n156\n156\n157\n157\n158\n158\n159\n159\n160\n160\n161\n161\n162\n162\n163\n163\n164\n164\n165\n165\n166\n166\n167\n167\n168\n168\n169\n169\n170\n170\n171\n171\n172\n172\n173\n173\n174\n174\n175\n175\n176\n176\n177\n177\n178\n178\n179\n179\n180\n180\n181\n181\n182\n182\n183\n183\n184\n184\n185\n185\n186\n186\n187\n187\n188\n188\n189\n189\n190\n190\n191\n191\n192\n192\n193\n193\n194\n194\n195\n195\n196\n196\n197\n197\n198\n198\n199\n199\n200\n200\n201\n201\n202\n202\n203\n203\n204\n204\n205\n205\n206\n206\n207\n207\n208\n208\n209\n209\n210\n210\n211\n211\n212\n212\n213\n213\n214\n214\n215\n215\n216\n216\n217\n217\n218\n218\n219\n219\n220\n220\n221\n221\n222\n222\n223\n223\n224\n224\n225\n225\n226\n226\n227\n227\n228\n228\n229\n229\n230\n230\n231\n231\n232\n232\n233\n233\n234\n234\n235\n235\n236\n236\n237\n237\n238\n238\n239\n239\n240\n240\n241\n241\n242\n242\n243\n243\n244\n244\n245\n245\n246\n246\n247\n247\n248\n248\n249\n249\n250\n250\n251\n251\n252\n252\n253\n253\n254\n254\n255\n255\n256\n256\n257\n257\n258\n258\n259\n259\n260\n260\n261\n261\n262\n262\n263\n263\n264\n264\n265\n265\n266\n266\n267\n267\n268\n268\n269\n269\n270\n270\n271\n271\n272\n272\n273\n273\n274\n274\n275\n275\n276\n276\n277\n277\n278\n278\n279\n279\n280\n280\n281\n281\n282\n282\n283\n283\n284\n284\n285\n285\n286\n286\n287\n287\n288\n288\n289\n289\n290\n290\n291\n291\n292\n292\n293\n293\n294\n294\n295\n295\n296\n296\n297\n297\n298\n298\n299\n299\n300\n300\n301\n301\n302\n302\n303\n303\n304\n304\n305\n305\n306\n306\n307\n307\n308\n308\n309\n309\n310\n310\n311\n311\n312\n312\n313\n313\n314\n314\n315\n315\n316\n316\n317\n317\n318\n318\n319\n319\n320\n320\n321\n321\n322\n322\n323\n323\n324\n324\n325\n325\n326\n326\n327\n327\n328\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1**2\\na3*0\\nc4**\\n\\n') == '1'\nassert solution('5 5\\n#*&#*\\na1c&\\n&q2w*\\n#a3c#\\n*&#*&\\n') == '3'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''9''') == '0'\nassert solution('''11''') == '1'\nassert solution('''99''') == '0'\nassert solution('''999999''') == '9'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n11\\n') == '1'\nassert solution('3\\n99\\n') == '0'\nassert solution('3\\n1234\\n') == '0'\nassert solution('3\\n12345\\n') == '5'\nassert solution('3\\n123456\\n') == '6'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3') == '1'\nassert solution('99') == '0'\nassert solution('11') == '1'\nassert solution('9') == '0'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n11\"\"\") == '1'\nassert solution(\"\"\"3\n99\"\"\") == '0'\nassert solution(\"\"\"3\n619\"\"\") == '1'\nassert solution(\"\"\"3\n999\"\"\") == '2'\nassert solution(\"\"\"3\n0\"\"\") == '0'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n11''') == '1'\nassert solution('''3\n99''') == '0'\nassert solution('''3\n101\n''') == '2'\nassert solution('''2\n4''') == '1'\nassert solution('''2\n1''') == '0'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n11\\n') == '1'\nassert solution('3\\n99\\n') == '0'\nassert solution('3\\n1\\n') == '0'\nassert solution('3\\n9\\n') == '0'\nassert solution('3\\n99\\n') == '0'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n11') == '1'\nassert solution('3\\n99') == '0'\nassert solution('3\\n11') == '1'\nassert solution('4\\n99') == '0'\nassert solution('3\\n99') == '0'\n"
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(open(\"test_data/input_13.txt\").read()) == \"2 1\"\nassert solution(open(\"test_data/input_13_1.txt\").read()) == \"3 2 1\"\nassert solution(open(\"test_data/input_13_2.txt\").read()) == \"3 2 1\"\nassert solution(open(\"test_data/input_13_3.txt\").read()) == \"3 3\"\nassert solution(open(\"test_data/input_13_4.txt\").read()) == \"3 3 3\"\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 6\n2 1 1\n5 2 6\n2 3 2\n3 4 3\n4 5 5\n1 5 4\n''') == '2 2\\n1 3\\n'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3''') == '3 3\\n3 4 7\\n'\nassert solution('''7 7\n2 1 7\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3''') == '3 3\\n3 4 7\\n'\nassert solution('''10 10\n3 5 2\n4 2 4\n1 1 1\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n4 1 5\n''') == '3 3\\n3 4 7\\n'\nassert solution('''11 11\n5 2 4\n1 3 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '7 5\\n7 7 9\\n'\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 7') == '3 3'\nassert solution('4 6') == '3 4 7'\nassert solution('3 3') == '3 4'\nassert solution('2 1 1') == '2 2'\nassert solution('5 7') == '3 3'\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 6\n2 1 1\n5 2 6\n2 3 2\n3 4 3\n4 5 5\n1 5 4\n''') == '2 2\\n1 3\\n'\n\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3\\n3 4 7\\n'\nassert solution('''7 10\n2 3 1\n1 3 1\n2 4 1\n3 5 2\n4 5 1\n5 6 2\n6 7 1\n7 8 2\n8 9 1\n9 10 1\n''') == '2 3\\n2 4\\n2 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n'\n\nassert solution('''100 10\n1 2 2\n1 5 2\n2 3 2\n2 6 2\n3 4 1\n3 7 1\n4 5 2\n4 8 2\n5 6 2\n5 9 2\n6 7 1\n6 9 1\n7 8 2\n7 10 2\n8 9 1\n8 10 1\n9 10 1\n''') == '3 4\\n2 3\\n2 4\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n'\n'''\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 6\n2 1 1\n5 2 6\n2 3 2\n3 4 3\n4 5 5\n1 5 4\n''') == '2 2'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\nassert solution('''5 6\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\nassert solution('''5 6\n2 1 1\n5 2 6\n2 3 2\n3 4 3\n4 5 5\n1 5 4\n''') == '2 2'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"2 2\\n1 3\"\nassert solution(\"5 7\") == \"3 3\\n3 4 7\"\nassert solution(\"5 9\") == \"3 3\\n3 4 7\"\nassert solution(\"5 9\") == \"3 3\\n3 4 7\"\nassert solution(\"5 9\") == \"3 3\\n3 4 7\"\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 6') == '2 2'\nassert solution('5 7') == '3 3'\nassert solution('2 1 5') == '3 4 7'\nassert solution('5 7') == '3 4 7'\nassert solution('5 7') == '3 4 7'\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"testing\"\n\"\"\""
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3 3\"\n\n\"\"\"\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 1 2 4 5\") == \"1 2 3 4 5 6\"\nassert solution(\"5 3 1 4 2\") == \"1 2 3 4 5\"\nassert solution(\"5 3 1 4 2\") == \"1 2 3 4 5\"\n\n\n\n\n\nclass Solution:\n    def swapPermutation(self, p: str, A: str) -> str:\n        n = int(p)\n        A = A.split()\n        result = []\n        for i in range(n):\n            result.append(int(A[i]))\n        for i in range(n):\n            for j in range(n):\n                if result[i] == int(A[j]):\n                    result[i], result[j] = result[j], result[i]\n        return \" \".join(str(result[i]) for i in range(n))\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n5 2 4 3 6 7 1\\n0001001\\n0000000\\n0000010\\n1000001\\n0000000\\n0010000\\n1001000\\n') == '1 2 4 3 6 7 5\\n'\nassert solution('5\\n4 2 1 5 3\\n00100\\n00011\\n10010\\n01101\\n01010\\n') == '1 2 3 4 5\\n'\n\n'''\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7\n5 2 4 3 6 7 1\n0001001\n0000000\n0000010\n1000001\n0000000\n0010000\n1001000''') == '1 2 4 3 6 7 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"7\\n5 2 4 3 6 7 1\") == \"1 2 4 3 6 7 5\"\nassert solution(\"7\\n4 2 1 5 3\") == \"1 2 3 4 5\"\nassert solution(\"7\\n4 2 1 5 3\") == \"1 2 3 4 5\"\nassert solution(\"7\\n4 2 1 5 3\") == \"1 2 3 4 5\"\nassert solution(\"7\\n4 2 1 5 3\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"6\\n2 1 4 5 3 6\") == \"1 2 4 3 6 5\"\nassert solution(\"7\\n3 4 5 6 7 1\") == \"1 2 4 3 6 7 5\"\nassert solution(\"5\\n4 2 1 5 3\") == \"1 2 4 3 5\"\nassert solution(\"6\\n1 2 4 5 3 6\") == \"1 2 4 3 6 5\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7\n5 2 4 3 6 7 1\n0001001\n0000000\n0000010\n1000001\n0000000\n0010000\n1001000''') == '1 2 4 3 6 7 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\n'''\n\n'''"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('5\\n5 2 4 3 6 7 1\\n0001001\\n0000000\\n0000010\\n1000001\\n0000000\\n0010000\\n1001000') == '1 2 4 3 6 7 5'\nassert solution('7\\n7 2 4 3 6 7 1\\n0001001\\n0000000\\n0000010\\n1000001\\n0000000\\n0010000\\n1001000') == '1 2 4 3 6 7 5'\nassert solution('5\\n5 2 4 3 6 7 1\\n00100\\n00011\\n10010\\n01101\\n01010\\n0000000') == '1 2 3 4 5'\n\"\"\"\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7\\n5 2 4 3 6 7 1\\n0001001\\n0000000\\n0000010\\n1000001\\n0000000\\n0010000\\n1001000') == '1 2 4 3 6 7 5'\nassert solution('5\\n4 2 1 5 3\\n00100\\n00011\\n10010\\n01101\\n01010') == '1 2 3 4 5'\nassert solution('5\\n4 2 1 5 3\\n00100\\n00011\\n10010\\n01101\\n01010') == '1 2 3 4 5'\nassert solution('5\\n4 2 1 5 3\\n00100\\n00011\\n10010\\n01101\\n01010') == '1 2 3 4 5'\nassert solution('5\\n4 2 1 5 3\\n00100\\n00011\\n10010\\n01101\\n01010') == '1 2 3 4 5'\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 'aabc'\nassert solution('bbb') == 'bbb'\nassert solution('yzyz') == 'zyzy'\nassert solution('abcd') == 'abcd'\nassert solution('dabc') == 'dabc'\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abcd''') == '4'\nassert solution('''bbb''') == '1'\nassert solution('''yzyz''') == '2'\nassert solution('''yz''') == '0'\nassert solution('''zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz''') == '0'\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcd') == 4\nassert solution('bbb') == 1\nassert solution('yzyz') == 2\nassert solution('zyzy') == 1\nassert solution('bbbbb') == 0\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"abcde\") == 5\nassert solution(\"bbb\") == 1\nassert solution(\"yzyz\") == 2\nassert solution(\"abbcdef\") == 6\nassert solution(\"abcdefgh\") == 36\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcd\") == \"dabc\"\nassert solution(\"bbb\") == \"1\"\nassert solution(\"yzyz\") == \"2\"\nassert solution(\"zzzz\") == \"0\"\nassert solution(\"abcdefg\") == \"abcd\"\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcd') == 4\nassert solution('bbb') == 1\nassert solution('yzyz') == 2\nassert solution('xyxy') == 1\nassert solution('xyzxy') == 1\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcd\") == \"abcd\"\nassert solution(\"bbb\") == \"bbb\"\nassert solution(\"yzyz\") == \"yzyz\"\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    'abcd'\n) == 4\n\nassert solution(\n    'bbb'\n) == 1\n\nassert solution(\n    'yzyz'\n) == 2\n\n\n\n\"\"\"\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5 C') == '-1'\nassert solution('2\\n10 AB') == '16'\nassert solution('2\\n15 BA') == '250'\nassert solution('2\\n15 BC') == '-1'\nassert solution('2\\n10 A') == '-1'\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('inputs/example2.in') == '13'\nassert solution('inputs/example1.in') == '15'\nassert solution('inputs/input01.in') == '13'\nassert solution('inputs/input02.in') == '16'\nassert solution('inputs/input03.in') == '-1'\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == -1\nassert solution('a') == -1\nassert solution('a\\n') == -1\nassert solution('a\\na') == -1\nassert solution('a\\na\\na') == -1\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test_input') == '16'\nassert solution('2\\n1 A\\n1 B\\n1 C\\n1 A\\n1 B\\n1 C') == '16'\nassert solution('4\\n5 C\\n6 B\\n16 BAC\\n4 A\\n') == '15'\nassert solution('6\\n10 A\\n9 BC\\n11 CA\\n4 A\\n5 B\\n') == '13'\nassert solution('2\\n5 BA\\n11 CB') == '16'\n\n\n-----Custom test cases-----\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n5 C\n6 B\n16 BAC\n4 A\n''') == '15'\n\nassert solution('''2\n10 AB\n15 BA\n''') == '-1'\n\nassert solution('''5\n10 A\n9 BC\n11 CA\n4 A\n5 B\n''') == '13'\n\nassert solution('''6\n100 A\n355 BCA\n150 BC\n160 AC\n180 B\n190 CA\n''') == '250'\n\nassert solution('''6\n1 BC\n1 B\n1 C\n1 AB\n1 AC\n1 AB\n''') == '16'\n'''\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3 2\\n4') == '1'\nassert solution('1\\n4 2\\n1 2\\n2 3\\n3') == '3'\nassert solution('2\\n2 2\\n1 2\\n2 3\\n2\\n1 2\\n3') == '-1'\nassert solution('4\\n100 2\\n1 2\\n2 2\\n3 3\\n3\\n4') == '100'\nassert solution('5\\n10 A\\n9 BC\\n11 CA\\n4 A\\n5 B\\n') == '15'\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom functools import lru_cache\n\n\n@lru_cache\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n5 C\\n6 B\\n16 BAC\\n4 A\\n') == '15'\nassert solution('2\\n10 AB\\n15 BA\\n') == '-1'\nassert solution('5\\n10 A\\n9 BC\\n11 CA\\n4 A\\n5 B\\n') == '13'\nassert solution('6\\n100 A\\n355 BCA\\n150 BC\\n160 AC\\n180 B\\n190 CA\\n') == '250'\nassert solution('6\\n100 A\\n350 AC\\n200 AC\\n160 AC\\n180 B\\n190 CA\\n') == '-1'\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n    4\n    5 C\n    6 B\n    16 BAC\n    4 A\n''') == '15'\n\nassert solution('''\n    2\n    10 AB\n    15 BA\n''') == '-1'\n\nassert solution('''\n    5\n    10 A\n    9 BC\n    11 CA\n    4 A\n    5 B\n''') == '13'\n\nassert solution('''\n    6\n    100 A\n    355 BCA\n    150 BC\n    160 AC\n    180 B\n    190 CA\n''') == '250'\n\nassert solution('''\n    2\n    5 BA\n    11 CB\n''') == '16'"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\n"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 51\n10 23\n23 42\n39 42\n10 39\n39 58''') == '''10: 1 42\n23: 1 39\n39: 1 23\n42: 1 10\n58: 2 10 42'''\n\nassert solution('''5 100\n1 2\n1 3\n1 4\n2 3\n2 4''') == '''1: 0\n2: 0\n3: 1 4\n4: 1 3\n5: 2 10 42'''\n\nassert solution('''5 100\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '''"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0: 1 1\"\nassert solution(\"10 20\") == \"2: 1 10\"\nassert solution(\"5 6\") == \"1: 0 1 2\"\nassert solution(\"10 100\") == \"9: 0 0 1 2 3 4 5 6 7 8 9\"\nassert solution(\"9 9\") == \"1: 0 1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 2\\n1 3\\n2 3') == '1: 1 2\\n2: 1 3\\n3: 2 3'\nassert solution('3 100\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 5\\n3 4\\n4 5\\n5 6') == '1: 0\\n2: 0\\n3: 1 4\\n4: 1 3\\n5: 2 10 42\\n6: 3 4'\nassert solution('2 1\\n1 2') == '1: 0'\nassert solution('2 1\\n1 3') == '1: 0\\n3: 1 3'\nassert solution('2 1\\n1 4') == '1: 0\\n4:"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 3') == '1 2 3 4'\nassert solution('5 2') == '1 2'\nassert solution('5 1') == '1'\nassert solution('5 0') == '1'\n"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '1: 0\\n2: 0\\n3: 1 4\\n4: 1 3'\nassert solution('5 51\\n10 23\\n23 42\\n39 42\\n10 39\\n39 58\\n') == '10: 1 42\\n23: 1 39\\n39: 1 23\\n42: 1 10\\n58: 2 10 42'\nassert solution('5 100\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '1"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1023 4242') == '1: 1 4 2'\nassert solution('12345 12345') == '1: 1 2 3 4'\nassert solution('1 2 3 4 5') == '1: 1 2'\nassert solution('12345 12345') == '1: 1 2 3 4'\n"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''5 51\n10 23\n23 42\n39 42\n10 39\n39 58\n''') == '10: 1 42\\n23: 1 39\\n39: 1 23\\n42: 1 10\\n58: 2 10 42'\n\nassert solution(\n'''5 100\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '1: 0\\n2: 0\\n3: 1 4\\n4: 1 3\\n'\n\nprint(solution(\n'''5 100\n1 2\n1 3\n1 4\n2 3\n2 4"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hiedi') == \"NO\"\nassert solution('hiedi') == \"NO\"\nassert solution('abcheaibcdi') == \"YES\"\nassert solution('haidis') == \"YES\"\nassert solution('abcheaibcdi') == \"YES\"\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('abbcdihi') == 'YES'\nassert solution('abzhi') == 'NO'\nassert solution('abcheaibcdi') == 'YES'"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('abcheaibcdi') == 'YES'\nassert solution('abc') == 'NO'\nassert solution('abcdefgh') == 'NO'\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('abcheaibcd') == 'YES'\nassert solution('abcdi') == 'NO'\nassert solution('hied') == 'NO'\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hiedi') == 'NO'\nassert solution('heidi') == 'YES'\nassert solution('abcheaibcdi') == 'YES'\nassert solution('a') == 'YES'\nassert solution('abcd') == 'NO'\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hiedi') == 'NO'\nassert solution('abcheaibcdi') == 'YES'\nassert solution('abcd') == 'NO'\nassert solution('abc') == 'NO'\nassert solution('aibcd') == 'YES'\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('hierdgda') == 'YES'\nassert solution('hierdgda') == 'NO'\nassert solution('hierdgda') == 'NO'\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcheaibcdi\") == \"YES\"\nassert solution(\"hiedi\") == \"NO\"\n\n'''"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('ab') == 'YES'\nassert solution('a') == 'YES'\nassert solution('abc') == 'YES'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1') == '-1'\nassert solution('2\\naf') == 'db'\nassert solution('2\\nhey') == '-1'\nassert solution('4\\nbear') == 'roar'\nassert solution('1\\n4') == '4'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcd') == '-1'\nassert solution('efgh') == '-1'\nassert solution('fgh') == '-1'\nassert solution('abcd') == '-1'\nassert solution('efgh') == '-1'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.splitlines()[1]\nprint(solution(stdin))\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('bear', 'roar') == 'roar'\nassert solution('af', 'db') == 'db'\nassert solution('hey', 'db') == '-1'\nassert solution('', 'db') == '-1'\nassert solution('hey', 'hey') == 'hey'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\\\n4 26\nbear\n''') == 'roar'\nassert solution('''\\\n2 7\naf\n''') == 'db'\nassert solution('''\\\n3 1000\nhey\n''') == '-1'\nassert solution('''\\\n2 7\na\n''') == 'a'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\nbear\\n') == 'roar'\nassert solution('2 5\\naf\\n') == 'db'\nassert solution('3 1000\\nhey\\n') == '-1'\nassert solution('6 11\\nhola\\n') == '-1'\nassert solution('6 22\\ncasa\\n') == 'db'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == \"roar\"\nassert solution(input) == \"db\"\nassert solution(input) == \"-1\"\nassert solution(input) == \"hey\"\nassert solution(input) == \"hey\"\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 26\nbear''') == 'roar'\nassert solution('''2 7\naf''') == 'db'\nassert solution('''3 1000\nhey''') == '-1'\nassert solution('''5 10\nabcefghijklmnopqrstuvwxyz''') == '-1'\nassert solution('''10 2000\nabcefghijklmnopqrstuvwxyz''') == '-1'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.splitlines()[1]\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 1 1000\n011\n\"\"\") == \"2\"\nassert solution(\"\"\"4 4 100500\n0110\n1010\n0101\n1001\n\"\"\") == \"1\"\nassert solution(\"\"\"2 2 100000\n00\n01\n\"\"\") == \"0\"\nassert solution(\"\"\"2 1 100\n00\n01\n\"\"\") == \"0\"\nassert solution(\"\"\"2 1 1000\n0110\n1010\n0101\n1001\n\"\"\") == \"0\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1 1000\") == \"\"\nassert solution(\"3 4 100500\") == \"\"\nassert solution(\"3 1 1000\") == \"\"\nassert solution(\"3 1 1000\") == \"\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1000\") == \"2\"\nassert solution(\"4 4 100500\") == \"1\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1000\") == \"2\"\nassert solution(\"4 4 100500\") == \"1\"\nassert solution(\"4 4 1000\") == \"0\"\nassert solution(\"4 4 1000\") == \"0\"\nassert solution(\"4 4 1000\") == \"0\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1000\") == \"2\"\nassert solution(\"4 4 100500\") == \"1\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1000\") == \"1\"\nassert solution(\"2 1 1000\") == \"0\"\nassert solution(\"3 1 1000\") == \"1\"\nassert solution(\"4 1 1000\") == \"0\"\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 1 1000''') == '2'\nassert solution('''4 4 100500''') == '1'\nassert solution('''3 4 1000''') == '0'\nassert solution('''4 4 100000''') == '0'\nassert solution('''2 3 0''') == '1'\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1 1000\n011\n''') == '2'\n\nassert solution('''4 4 100500\n0110\n1010\n0101\n1001\n''') == '1'\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"3 1 1000\"\n\"011\"\n) == \"2\"\n\nassert solution(\n\"4 4 100500\"\n\"0110\"\n) == \"1\"\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '19'\n\n\"\"\"\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3\\n') == '11'\nassert solution('1 2\\n') == '3'\nassert solution('4 6\\n') == '10'\nassert solution('13 14\\n') == '5'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\nassert solution('2 1') == '1'\nassert solution('4 1') == '1'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 6') == '10'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\nassert solution('6 1') == '5'\nassert solution('6 10') == '11'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('2 6\\n') == '10'\nassert solution('3 4\\n') == '9'\nassert solution('4 6\\n') == '8'\nassert solution('5 6\\n') == '7'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\nassert solution('5 4') == '6'\nassert solution('7 5') == '10'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 6\\n') == '10'\nassert solution('1 2\\n') == '3'\nassert solution('6 3\\n') == '11'\nassert solution('1 2\\n') == '3'\nassert solution('8 4\\n') == '10'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6') == '10'\nassert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('6 2') == '3'\nassert solution('5 2') == '6'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\n\n\"\"\"\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n2') == '0'\nassert solution('1\\n2\\n2') == '3'\nassert solution('2\\n2\\n2') == '0'\nassert solution('2\\n2\\n1') == '3'\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"7\\n4 4 2 5 2 3\") == \"14\"\nassert solution(\"9\\n5 1 3 1 5 2 4 2 5\") == \"9\"\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n1 2 3\n''') == '6'\nassert solution(\n'''\n4\n4 4 2 5 2 3\n''') == '14'\nassert solution(\n'''\n5\n5 1 3 1 5 2 4 2 5\n''') == '9'\nassert solution(\n'''\n5\n5 1 3 1 5 2 4 2 5\n''') == '9'\nassert solution(\n'''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '26'\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n5 1 3 1 5 2 4 2 5') == '9'\nassert solution('9\\n5 1 3 1 5 2 4 2 5') == '9'\nassert solution('9\\n1 3 1 5 2 4 2 5') == '9'\nassert solution('9\\n1 3 1 5 2 4 2 5') == '9'\nassert solution('9\\n1 3 1 5 2 4 2 5') == '9'\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6\\n4 4 2 5 2 3\\n\") == \"14\"\nassert solution(\"9\\n5 1 3 1 5 2 4 2 5\\n\") == \"9\"\n\n\n\"\"\"\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"3\"\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6\\n4 4 2 5 2 3') == '14'\nassert solution('9\\n5 1 3 1 5 2 4 2 5') == '9'\n\nprint('Test success!')\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n4 4 2 5 2 3\\n') == '14\\n'\nassert solution('9\\n5 1 3 1 5 2 4 2 5\\n') == '9\\n'\nassert solution('7\\n1 3 1 5 2 4 2 5 3\\n') == '14\\n'\nassert solution('9\\n5 1 3 1 5 2 4 2 5\\n') == '9\\n'\nassert solution('9\\n5 1 3 1 5 2 4 2 5\\n') == '9\\n'\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\"\n\"\"\"\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == '3\\n1\\n2\\n4\\n'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4\\n'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4\\n'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4\\n'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n1 1\\n1 1\\n') == '3\\n1\\n2\\n4\\n'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4\\n'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '-1\\n'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4\\n'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '-1\\n'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4\\n'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == '-1'\nassert solution('1 2') == '1'\nassert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n1 3\\n2 3') == '1 2'\nassert solution('1 2\\n2 3') == '-1'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n2 4') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n4 3') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n4 3\\n4 3') == '3'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n4 3\\n4 3\\n4 3') == '3'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3\\n1\\n2\\n4'\nassert solution('1 2\\n2 3\\n2 4\\n4 1') == '3\\n1\\n2\\n4'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('4 5') == '3\\n1\\n2\\n4'\nassert solution('1 2\\n2 3\\n2 4\\n4 1') == '3\\n1\\n2\\n4'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4'\nassert solution('4 5\\n1 2\\n2 3\\n2 4\\n4 1\\n4 3\\n') == '3\\n1\\n2\\n4'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('5 6\\n1 2\\n2 3\\n3 4\\n4 1\\n5 6') == '-1'\nassert solution('5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '3\\n1\\n2\\n4\\n5'\nassert solution('5 6\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == '-1'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('1 2\\n2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\nassert solution('2 3\\n2 4\\n4 1\\n4 3') == '3\\n1\\n2\\n4'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3''') == '3'\nassert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3''') == '3'\nassert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3''') == '3'\nassert solution('''5 6\n1 2\n2 3\n2 4\n3 4\n4 5\n5 1\n5 6''') == '-1'\nassert solution('''5 6\n1 2\n2 3\n2 4\n3 4\n4 5\n5 1\n5 6''') == '-1'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1') == '4'\nassert solution('5 2') == '5'\nassert solution('6 1') == '3'\nassert solution('7 1') == '1'\nassert solution('8 1') == '0'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('10 3') == '41'\nassert solution('5 7') == '33'\nassert solution('6 10') == '7'\nassert solution('5 2') == '4'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 1\\n3 4\\n') == '4'\nassert solution('7 2\\n2 2\\n5 3\\n7 4\\n7 5\\n3 4\\n5 2\\n7 5\\n5 3\\n6 4\\n6 5\\n2 4\\n4 5\\n5 6\\n') == '0'\nassert solution('7 2\\n2 2\\n5 3\\n7 4\\n7 5\\n3 4\\n5 2\\n7 5\\n5 3\\n6 4\\n6 5\\n2 4\\n4 5\\n5 6\\n7 6\\n7 6\\n7 4\\n7 2\\n') == '3'\nassert solution('7 2\\n2 2\\n5 3\\n7 4\\n7 5\\n3 4\\n5 2\\n7 5\\n5 3\\n6 4\\n6 5\\n2 4\\n4 5\\n5 6\\n7 6\\n7 6\\n7 4\\n7 2\\n7 7\\n') == '2'\nassert solution('7 2\\n2 2\\n5 3\\n7 4\\n7 5\\n3 4\\n5 2\\n7 5\\n5 3\\n6 4\\n6 5\\n2 4\\n4 5\\n5 6\\n7 6\\n7 6\\n7 4\\n7 2\\n7 7\\n7 7\\n') == '1'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"10 1\") == \"2\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"6 1\") == \"2\"\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 1\\n3 4') == '4'\nassert solution('5 2\\n1 1\\n3 4\\n2 5\\n2 4\\n1 3\\n1 2') == '0'\nassert solution('5 3\\n1 1\\n3 4\\n2 5\\n2 4\\n1 3\\n1 2') == '8'\nassert solution('5 3\\n1 1\\n3 4\\n2 5\\n2 4\\n1 3\\n1 2\\n2 3\\n1 2') == '16'\nassert solution('5 10\\n1 1\\n3 4\\n2 5\\n2 4\\n1 3\\n1 2\\n2 3\\n1 2\\n3 4\\n1 2\\n2 3') == '1'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('5 1') == '4'\nassert solution('5 3') == '4'\nassert solution('5 2') == '4'\nassert solution('5 3') == '4'\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '4'\nassert solution('5 2') == '8'\nassert solution('2 5') == '8'\nassert solution('4 3') == '12'\nassert solution('3 4') == '12'\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n--- Part Two ---\nGiven n, the number of companies having a billboard, and a billboard and logo and logo board, your task is to find the billboard with the minimum total area that can be filled with the logo and logo board.\n\nFor example, with n = 3, and the three companies:\n\ncompany 1 - asdfasdfasd\ncompany 2 - qwertyuio\ncompany 3 - 12345678901\n\nYour billboard can have three logo boards (4 * 3) and a logo board (1 * 1). The total area of the three logo boards is 4 * 3 + 1 * 1 = 10.\n\nIf two of the three companies have logo boards of the same area, it is considered a valid solution. For example, with n = 4, and the four companies:\n\ncompany 1 - asdfasdfasd\ncompany 2 - qwertyuio\ncompany 3 - 12345678901\ncompany 4 - 1111111111\n\nYour billboard has two logo boards with the same area. The total area of the three logo boards is 4 + 1 + 1 = 8.\n\nIf one of the three companies has an even larger logo board size, you can still place the billboard with a logo board that is of the same area as the other two.\n\nFor example, with n = 5, and the five companies:\n\ncompany 1 - abcde\ncompany 2 - asdfasdf\ncompany 3 - qwertyuio\ncompany 4 - 12345\ncompany 5 - 111111\n\nYour billboard has four logo boards with the same area. The total area of the five logo boards is 4 + 4 + 4 + 1 = 15.\n\nThus, your billboard can be filled with either the one with a larger logo board size or the two with the same area size.\n\nYour task is to find the billboard with the minimum area that can be filled with the logo and logo board.\n\nFor example, with n = 3, and the three companies:\n\ncompany 1 - asdfasdfasd\ncompany 2 - qwertyuio\ncompany 3 - 12345678901\n\nYour billboard has two logo boards with the same area. The total area of the three logo boards is 4 + 4 + 4 = 12.\n\nThus, the billboard has a total area of 12 and no logo board is needed.\n\nInput\nThe first line of the input contains one integer, n (1 \u2264 n \u2264 1000)\n\nThe next n lines contains three space-separated integers x_i, y_i, m_i, where:\n\nx_{i} is the width of the logo board\ny_{i} is the height of the logo board\nm_{i} is the number of the logo board\nThe logo boards are to be placed on a billboard with no overlap and the billboard mustn't have any empty space\n\nNote that the sizes of the logo boards are the same as the sizes of the logos\n\nOutput\nThe first line of the output is an integer representing the minimum area of the billboard\n\nThe next n lines should contain n uppercase English letters \"A\", \"B\" or \"C\" representing the logo boards.\n\n\n-----Sample-----\nInput\n3\n3 2 3\n4 4 2\n5 5 1\n\nOutput\n10\nAABB\nAABC\nAABB\nAABC\nAABC\nBBBC\nBBBC\nBBBC\n\nInp:2\n5 4 4\n2 3 4\n\nOut:6\nABBC\nABBC\nAABB\nAABB\nAABC\nAABC\n\n\nInp:4\n2 2 2\n2 1 2\n4 4 4\n3 3 3\n\nOut:12\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\nInp:5\n2 2 1\n1 1 1\n2 2 1\n1 1 1\n2 2 1\n\nOut:10\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\n\nInp:3\n1 2 3\n2 4 5\n3 5 6\n\nOut:10\nBBB\nBBB\nBBB\nBBB\n\n\nInp:4\n1 1 2\n2 2 2\n1 1 1\n1 1 1\n\nOut:12\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\nInp:5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\nInp:6\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\nInp:7\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\n\n\nInp:8\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\n\nInp:9\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\nBBBB\n\n\nInp:10\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\nOut:18\nABBB\nBBBB\nBBBB\nBBBB\nBBBB\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nstdin = \"\"\"1 2 5 5 4 4\n2 4 2 2 2 2\n5 1 1 1 1 1\n2 1 2 1 2 1\n1 2 2 2 2 1\n2 1 1 1 1 2\n1 1 1 1 1 1\n3 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2 5 5 2\") == \"5\"\nassert solution(\"4 4 2 6 4 2\") == \"6\"\nassert solution(\"5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n\") == \"6\"\nassert solution(\"5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5 1 2 5 5 2\\n5"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 1 2 5 5 2''') == '5'\nassert solution('''4 4 2 6 4 2''') == '6'\nassert solution('''1 1 1 1 1 1''') == '1'\nassert solution('''3 4 3 3 3 3''') == '4'\nassert solution('''2 1 1 2 2 1''') == '2'\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1 2 5 5 2''') == '5'\nassert solution('''4 4 2 6 4 2''') == '6'\nassert solution('''6 7 4 7 4 6''') == '-1'"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5 1 2 5 5 2'''\n) == '5'\n\nassert solution(\n'''4 4 2 6 4 2'''\n) == '6'\n\nassert solution(\n'''3 1 2 4 3 2'''\n) == '-1'\n\nassert solution(\n'''4 1 2 6 4 2'''\n) == '6'\n\nassert solution(\n'''2 1 3 3 2'''\n) == '-1'\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 5 5 2\") == \"5\"\nassert solution(\"4 4 2 6 4 2\") == \"6\""
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6\nAFFAAA\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n3\nAFI\n\"\"\") == \"1\"\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('AFFAAA') == '4'\nassert solution('AFI') == '1'\nassert solution('AFFAAA') == '4'\nassert solution('AFI') == '1'\nassert solution('AFFAAA') == '4'\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"AFF\") == \"4\"\nassert solution(\"F\") == \"1\"\nassert solution(\"A\") == \"1\"\nassert solution(\"I\") == \"1\"\nassert solution(\"FF\") == \"1\"\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6\nAFFAAA\n\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n3\nAFI\n\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n6\nFFF\n\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n10\nFFFFFF\n\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n'''\n\n'''\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"AFFAAA\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"AFI\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"AFFAAA\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"AFFA\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"AFF\n\"\"\") == \"0\""
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('AFF') == '4'\nassert solution('AFI') == '1'\n'''\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"1\"\nassert solution(\"AFF\") == \"1\"\nassert solution(\"FFFF\") == \"1\"\nassert solution(\"F\") == \"1\"\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1987') == '2013'\nassert solution('2013') == '2014'\nassert solution('2013') == '2014'\nassert solution('1900') == '1901'\nassert solution('2001') == '2003'\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('4') == '2013'\nassert solution('1') == '2014'\nassert solution('1999') == '2000'\nassert solution('9') == '10'\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1987) == 2013\nassert solution(2013) == 2014\nassert solution(2345) == 2245\nassert solution(2345) == 2245\nassert solution(2345) == 2245\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2014'\n\"\"\"\nimport sys\nimport re"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1987) == \"2013\"\nassert solution(2013) == \"2014\"\nassert solution(1573) == \"1600\"\nassert solution(1801) == \"1802\"\nassert solution(2000) == \"2100\"\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1987') == '2013'\nassert solution('2013') == '2014'\nassert solution('1023') == '1024'\nassert solution('1024') == '1025'\nassert solution('1001') == '1012'\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(1987) == 2013\nassert solution(2013) == 2014\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '2014'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1987) == '2013'\nassert solution(2013) == '2014'\nassert solution(2000) == '2005'\nassert solution(2060) == '2063'\nassert solution(2010) == '2031'\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(1987) == 2013\nassert solution(1988) == 2013\nassert solution(1989) == 2014\nassert solution(1990) == 2014\nassert solution(1991) == 2015\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 2 1 3 4\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('4\\n4 3 2 1\\n') == '3'\nassert solution('\\n') == '0'\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5 2 1 3 4\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('4\\n4 3 2 1\\n') == '3'\nassert solution('2\\n2 1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\ncount = 0\nfor i in range(1, n):\n    if a[i] == i + 1:\n        count += 1\n\nprint(count)"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 2 1 3 4') == '2'\nassert solution('3\\n1 2 3') == '0'\nassert solution('4\\n4 3 2 1') == '3'\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n5 2 1 3 4') == '2'\nassert solution('3\\n1 2 3') == '0'\nassert solution('4\\n4 3 2 1') == '3'\nassert solution('\\n'.join(testcases)) == '\\n'.join(solutions)\n'''\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n4 3 2 1') == '0'\nassert solution('5\\n2 1 3 4') == '2'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('5\\n1 2 3 4 5') == '5'\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 2 1 3 4\n''') == '2'\n\nassert solution('''3\n1 2 3\n''') == '0'\n\nassert solution('''4\n4 3 2 1\n''') == '3'"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n5 2 1 3 4''') == '2'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''4\n4 3 2 1''') == '3'\nassert solution('''1\n2''') == '0'"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n1 2 3\n''') == \"YES\"\n\nassert solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n3 1 2\n3 1 2\n''') == \"NO\"\n\nassert solution('''2\ngalileo galilei\nnicolaus copernicus\n2 1\n1 1\n''') == \"YES\"\n\nassert solution('''10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n2 4 9 6 5 7 1 3 8 10\n''') == \"NO\"\n\nassert solution('''10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n4 5 6 7 8 9 1 10\n''') == \"YES\""
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n1 2 3\n3 1 2\n1 2 3\n''') == \"YES\"\nassert solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n1 2 3\n3 1 2\n2 1\n''') == \"NO\"\nassert solution('''10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n1 2 3 4 5 6 7 8 9 10\n''') == \"YES\"\nassert solution('''10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n2 4 9 6 5 7 1 3 8 10\n''') == \"NO\"\nassert solution('''7\ngalileo galilei\nnicolaus copernicus\n2 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == \"YES\"\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nn = int(input())\nd = [input().split() for i in range(n)]\np = sorted(list(map(int, input().split())))\np.reverse()\n\nfor i in range(n):\n    if d[i][0] == d[p[i]][0] or d[i][1] == d[p[i]][1]:\n        continue\n    else:\n        print(\"NO\")\n        break\nelse:\n    print(\"YES\")"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('test') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('gennady korotkevich') == 'NO'\nassert solution('petr mitrichev') == 'YES'\nassert solution('gaoyuan chen') == 'YES'\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\ngalileo galilei\nnicolaus copernicus\n2 1\n''') == 'NO'\n\nassert solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n3 1 2\n''') == 'YES'\n\nassert solution('''2\ngalileo galilei\nnicolaus copernicus\n2 1\n''') == 'YES'\n\nassert solution('''10\nrean schwarzer\nfei claussell\nalisa reinford\neliot craig\nlaura arseid\njusis albarea\nmachias regnitz\nsara valestin\nemma millstein\ngaius worzel\n2 4 9 6 5 7 1 3 8 10\n''') == 'YES'\n\n\nimport unittest\n\n\nclass TestAssign5(unittest.TestCase):\n    def test_simple(self):\n        self.assertEqual(solution('''3\ngennady korotkevich\npetr mitrichev\ngaoyuan chen\n1 2 3\n'''), 'NO')\n\n    def test_simple2(self):\n        self."
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n1 2 3\\n1 2 3\\n3 1 2\\n1 2 3\\n3 1 2') == 'NO'\nassert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n3 1 2\\n3 1 2\\n3 1 2') == 'NO'\nassert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n3 1 2\\n1 2 3\\n3 1 2') == 'YES'\nassert solution('2\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n2 1\\n2 1') == 'NO'\nassert solution('10\\nrean schwarzer\\nfei claussell\\nalisa reinford\\neliot craig\\nlaura arseid\\njusis albarea\\nmachias regnitz\\nsara valestin\\nemma millstein\\ngaius worzel\\n2 4 9 6 5 7 1 3 8 9 10') == 'YES'\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == 'NO'\nassert solution('3\\n1 2\\n3') == 'YES'\nassert solution('2\\n1 2\\n3') == 'NO'\nassert solution('3\\n1 2\\n3') == 'NO'\nassert solution('3\\n3 2 1\\n3') == 'YES'\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n1 2 3\\n1 2 3\\n') == 'YES'\nassert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n1 2 3\\n1 2 3\\n') == 'NO'\nassert solution('3\\ngennady korotkevich\\npetr mitrichev\\ngaoyuan chen\\n1 2 3\\n1 2 3\\n') == 'YES'\nassert solution('10\\nrean schwarzer\\nfei claussell\\nalisa reinford\\neliot craig\\nlaura arseid\\njusis albarea\\nmachias regnitz\\nsara valestin\\nemma millstein\\ngaius worzel\\n2 4 9 6 5 7 1 3 8 10\\n2 4 9 6 5 7 1 3 8 10\\n') == 'NO'\nassert solution('10\\nrean schwarzer\\nfei claussell\\nalisa reinford\\neliot craig\\nlaura arseid\\njusis albarea\\nmachias regnitz\\nsara valestin\\nemma millstein\\ngaius worzel\\n2 4 9 6 5 7 1 3 8 10\\n2 4 9 6 5 7 1 3 8 10\\n') == 'YES'\n\n\n\n-- Python3 --"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == '2'\nassert solution('cbaabc') == '3'\nassert solution('aaabrytaaa') == '3'\nassert solution('ayrat') == '3'\nassert solution('no') == '-1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''abc''') == '-1'\nassert solution('''abc''') == '-1'\nassert solution('''cbaabc''') == '2'\nassert solution('''cbaabc''') == '2'\nassert solution('''cbaabc''') == '2'\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"2\"\nassert solution(\"cbaabc\") == \"3 1\"\nassert solution(\"ami\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('a') == '-1'\nassert solution('aa') == '-1'\nassert solution('b') == '-1'\nassert solution('bc') == '-1'\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"cbaabc\") == \"2\"\nassert solution(\"ayrat\") == \"3 1\"\nassert solution(\"ami\") == \"-1\"\nassert solution(\"no\") == \"-1\"\n\n\"\"\""
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cbaabc') == \"cba\" + \"abc\"\nassert solution('ayrat') == \"a\" + \"yr\" + \"at\"\nassert solution('no') == -1"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ami') == '-1'\nassert solution('cbaabc') == '2'\nassert solution('aaabrytaaa') == '3 1'\nassert solution('aaaaaa') == '1 1'\nassert solution('amirat') == '3 1'\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"2\"\nassert solution(\"cbaabc\") == \"2\"\nassert solution(\"aabrytaaa\") == \"3\"\nassert solution(\"ami\") == \"-1\"\nassert solution(\"no\") == \"-1\"\n"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cbaabc') == '2'\nassert solution('ayrat') == '3 1'\nassert solution('ami') == '-1'"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"\"\n\"\"\"\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_result\n\n\"\"\""
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4' == solution('4'))\n\nassert solution('1' == solution('1'))\n\nassert solution('1 2 3' == solution('1 2 3'))\n\nassert solution('1 2 3 4 5' == solution('1 2 3 4 5'))\n\nassert solution('1 2 3 4 5' == solution('1 2 3 4 5'))"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '1'\nassert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '2'\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\n\nTests:\n\nExamples of positive tests\n\nInput:\n3\n1 2 3\n\nOutput:\n1\n\nInput:\n8\n1 2 3 4 5 6 7 8\n\nOutput:\n2\n\nInput:\n5\n1 2 3 4 5\n\nOutput:\n5\n\nInput:\n5\n1 2 2 2 2\n\nOutput:\n3\n\nInput:\n1\n1\n\nOutput:\n0\n\nInput:\n1\n2\n\nOutput:\n0\n\nInput:\n5\n5 5 5 5 5\n\nOutput:\n0\n\n\"\"\""
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nn = int(input())\n\np = list(map(int, input().split()))\n\nm = sum(p)//2\n\ni = 0\nk = 0\n\nwhile m!= 0:\n    m -= p[i]\n    k += 1\n    i = (i+1) % n\n\nprint(k)"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 6') == '2'\nassert solution('10\\n1 2 3 4 5') == '10'\nassert solution('10\\n1 2 3 4 5 6 7 8') == '7'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '8'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n4 5 6\\n') == '3'\nassert solution('2 4 3\\n5 6 7\\n') == '7'\nassert solution('2 4\\n5 6 7\\n') == '5'\nassert solution('1 2 3\\n4 5 6\\n7 8 9\\n') == '5'\nassert solution('1 2\\n3 4\\n') == '1'\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7 10\n5 6''') == '1'\nassert solution('''1 5 10\n7''') == '0'\nassert solution('''3 10 10\n5 7 7''') == '1'\nassert solution('''1 1 1\n1''') == '0'\nassert solution('''2 5 10\n3 4 6\n''') == '1'\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 7 10''') == '1'\nassert solution('''5 6\n5 6''') == '1'\nassert solution('''1 5 10''') == '0'\nassert solution('''3 10 10''') == '1'\nassert solution('''1 1 1''') == '0'\n'''\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 7 10\\n5 6\\n\") == \"1\\n\"\nassert solution(\"1 5 10\\n7\\n\") == \"0\\n\"\nassert solution(\"3 10 10\\n5 7 7\\n\") == \"1\\n\"\nassert solution(\"1 1 1\\n1\\n\") == \"0\\n\"\n\"\"\"\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 7 10\\n5 6') == '1'\nassert solution('1 5 10\\n7') == '0'\nassert solution('3 10 10\\n5 7 7') == '1'\nassert solution('1 1 1\\n1') == '0'\nassert solution('1 1 1\\n1') == '0'\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1 1''') == ''\nassert solution('''1 5 10''') == ''\nassert solution('''3 10 10''') == ''\nassert solution('''5 7 7''') == ''\nassert solution('''7 7 7''') == ''\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '0'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 7 10\n5 6\n''') == '1'\n\nassert solution('''1 5 10\n7\n''') == '0'\n\nassert solution('''3 10 10\n5 7 7\n''') == '1'\n\n\n\n\"\"\"\n\nn, b, d = map(int, stdin.split(' '))\nl = list(map(int, stdin.split(' ')))\nk = 0\n\nfor i in l:\n    if i <= b:\n        k += 1\n    else:\n        break\n    k += 1\n\nprint(k)\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 7 10\\n5 6\\n') == '1'\nassert solution('1 5 10\\n7\\n') == '0'\nassert solution('3 10 10\\n5 7 7\\n') == '1'\nassert solution('1 1 1\\n1\\n') == '0'\n\"\"\"\n"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n2') == '1'\nassert solution('2\\n3') == '2'\nassert solution('2\\n4') == '3'\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('WWBW') == \"NO\"\nassert solution('BWWW') == \"YES\"\nassert solution('WWWB') == \"YES\"\nassert solution('WWWW') == \"YES\"\nassert solution('WWWWW') == \"NO\"\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"WWBW\nBWWW\nWWWB\"\"\") == \"NO\"\n\nassert solution(\n    \"\"\"WWBW\nBWWW\nWWWB\"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"WWBW\nBWWW\nWWWB\"\"\"\n) == \"NO\"\nassert solution(\n    \"\"\"WWBW\nBWWW\nWWWB\"\"\") == \"YES\"\n\nassert solution(\n    \"\"\"WWBW\nWWWB\nBWWW\nWBBW\nWWWB\nWWBW\nWBBW\nWWBW\"\"\") == \"NO\"\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 2\\nWWBW\\nBWWW\\nWWWB\\n\") == 'NO'\nassert solution(\n    \"3 1\\nB\\nB\\nW\\n\") == 'YES'\nassert solution(\n    \"5 4\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW\\nWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBWBW"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") is None\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"WWBW\") == \"NO\"\nassert solution(\"BWWW\") == \"YES\"\nassert solution(\"WWWB\") == \"YES\"\n\n\n\"\"\"\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('WWBW') == 'NO'\nassert solution('BWWW') == 'YES'\nassert solution('WWWB') == 'YES'\nassert solution('WWWW') == 'YES'\nassert solution
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\n\n'''"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('WWBW') == 'YES'\nassert solution('BWWW') == 'NO'\nassert solution('WWWB') == 'YES'\nassert solution('WBBWW') == 'YES'\nassert solution('WWBW') == 'NO'\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"WWBW\") == \"NO\"\nassert solution(\"BWWW\") == \"YES\"\nassert solution(\"WWWB\") == \"NO\"\n\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 6\") == \"Yes\\n..SD..\\n..SDW.\\n.SD...\\n.DW...\\nDD.W..\\n......\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 5\") == \"Yes\\n.S...\\n...S.\\nS.D..\\n...S.\\n.S...\\n\"\nassert solution(\"5 5\\n.S...\\n...S.\\nS....\\n...S.\\n.S...\\n\") == \"Yes\\n.S...\\n...S.\\nS.D..\\n...S.\\n.S...\\n\"\nassert solution(\"6 6\\n.S...\\n...S.\\nS....\\n...S.\\n.S...\\n\") == \"Yes\\n.S...\\n...S.\\nS.D..\\n...S.\\n.S...\\n\"\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 6') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('5 5') == 'Yes'\nassert solution('.S...') == 'Yes'\nassert solution('.S...') == 'Yes'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......''') == 'Yes'\n\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...\n''') == 'Yes'\n\nassert solution('''1 2\nSW\n''') == 'No'\n\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...\n''') == 'No'\n\nassert solution('''1 2\nSW\n''') == 'No'"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...\n''') == 'Yes'"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 3\n..S...\n..S.W.\n.S....\n..W...\n...W..''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''5 1\n.....\n.....''') == 'Yes'\nassert solution('''5 1\n.S...\n.....''') == 'Yes'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\n..S...\n..S.W.\n.S....\n..W...\n...W..''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......''') == 'Yes'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 6\\n..S...\\n..S.W.\\n.S....\\n..W...\\n...W..\\n......') == 'Yes'\nassert solution('1 2\\nSW') == 'No'\nassert solution('5 5\\n.S...\\n...S.\\nS....\\n...S.\\n.S...') == 'Yes'\nassert solution('5 5\\n.S...\\n...S.\\nS....\\n...S.\\n.S...') == 'Yes'\nassert solution('1 1\\nSS') == 'No'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 6\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\".....\") == \"No\"\nassert solution(\"SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''add 1\nremove\nadd 2\nadd 3\nremove\nremove\nadd 4\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\nremove''') == \"1\"\nassert solution('''add 1\nremove\nadd 2\nadd 3\nremove\nadd 4\nremove\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\nremove''') == \"2\"\nassert solution('''add 1\nremove\nadd 2\nadd 3\nremove\nremove\nadd 4\nremove\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\nremove\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\\\n3\nadd 1\nremove\nadd 2\nadd 3\nremove\nremove\n''') == '1'\n\nassert solution(\n'''\\\n7\nadd 3\nadd 2\nadd 1\nremove\nadd 4\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\n''') == '2'\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"3\\nremove\\n1\\nadd 2\\nremove\\n\") == \"1\"\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\nadd 1\\nremove\") == \"1\"\nassert solution(\"1\\nadd 2\\nadd 3\\nremove\\nremove\") == \"2\"\nassert solution(\"1\\nadd 1\\nremove\\nremove\") == \"1\"\nassert solution(\"1\\nadd 1\\nadd 1\\nremove\\nremove\") == \"1\"\nassert solution(\"1\\nadd 1\\nadd 1\\nremove\\nremove\") == \"1\"\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"add 1\") == \"1\"\nassert solution(\"add 2\") == \"2\"\nassert solution(\"add 3\") == \"3\"\nassert solution(\"remove\") == \"\"\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\nadd 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nremove\\n') == '2'\nassert solution('7\\nadd 3\\nadd 2\\nadd 1\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nremove\\n') == '2'\nassert solution('7\\nadd 3\\nadd 2\\nadd 1\\nremove\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nremove\\n') == '2'\nassert solution('7\\nadd 3\\nadd 2\\nadd 1\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nremove\\n') == '2'\nassert solution('7\\nadd 3\\nadd 2\\nadd 1\\nremove\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nremove\\n') == '2'\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nadd 1\nremove\nadd 2\nadd 3\nremove\nremove\nadd 4\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\nremove\n''') == '1'\n\nassert solution('''7\nadd 3\nadd 2\nadd 1\nremove\nadd 4\nremove\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\nremove\n''') == '2'\n\nassert solution('''9\nadd 9\nadd 1\nremove\nadd 2\nadd 3\nremove\nadd 4\nadd 7\nremove\nremove\nremove\nremove\nremove\nremove\n''') == '5'\n\nassert solution('''4\nadd 2\nadd 3\nadd 4\nremove\nremove\nadd 5\nremove\nremove\nadd 6\nremove\nremove\nadd 7\nadd 8\nremove\nremove\nremove\nremove\nremove\n''') == '4'\n'''\n\nassert solution('''5\nadd 2\nadd 4\nadd 3\nadd 1\nremove\nadd 5\nremove\nremove\nremove\nadd 6\nremove\nremove\nadd 7\nremove\nremove\nremove\nremove\nadd 8\nremove\nremove\nremove\nremove\nremove\nadd 9\nremove\nremove\nadd 10\nremove\nadd 11\nremove\nremove\nremove\nremove\nremove\nremove\n''') == '3'"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"1\"\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('add 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nadd 7\\nremove\\nremove\\nremove\\nremove\\nadd 5\\nremove\\nremove\\nremove\\nremove\\nremove') == '2'\nassert solution('add 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nadd 7\\nremove\\nremove\\nremove\\nremove\\nremove\\nremove') == '2'\nassert solution('add 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nadd 7\\nremove\\nremove\\nremove\\nremove\\nremove\\nremove') == '2'\nassert solution('add 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nadd 7\\nremove\\nremove\\nremove\\nremove\\nremove\\nremove') == '2'\nassert solution('add 1\\nremove\\nadd 2\\nadd 3\\nremove\\nremove\\nadd 4\\nremove\\nremove\\nremove\\nadd 6\\nremove\\nremove\\nremove\\nremove\\nadd 7\\nremove\\nremove\\nremove\\nremove\\nremove\\nremove') == '2'\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n88\\n00\") == \"0\\n2\"\nassert solution(\"3\\n123\\n321\") == \"0\\n2\"\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"123\") == 0\nassert solution(\"88\") == 2\nassert solution(\"00\") == 0\nassert solution(\"00\") == 0\nassert solution(\"01\") == 1\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n123\n321\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n88\n00\n\"\"\") == \"2\"\n\n\n\"\"\"\nimport sys\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nt = sys.stdin.readline().strip()\n\na = int(s)\nb = int(t)\nflicks = 0\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('123') == '2'\nassert solution('88') == '0'\nassert solution('00') == '2'\nassert solution('3') == '0'\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '2'\nassert solution('88') == '2'\nassert solution('88') == '2'\nassert solution('123') == '0'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n5 6\\n10 12') == '6'\nassert solution('1 1\\n1 100000\\n') == '100000'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n5 6\\n10 12') == '6'\nassert solution('1 1\\n1 100000') == '100000'\nassert solution('1 1\\n1 100000\\n1 100000') == '200000'\nassert solution('1 1\\n1 100000\\n1 100000\\n1 100000') == '100000'\nassert solution('1 1\\n1 100000\\n1 100000\\n1 100000\\n1 100000') == '200000'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('5 6') == '6'\nassert solution('1 1') == '100000'\nassert solution('1 100000') == '100000'\nassert solution('1 1000') == '1000'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 1') == '100000'\n\nassert solution('2 3') == '6'\nassert solution('1 1') == '100000'\n\nassert solution('2 3') == '6'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3\\n5 6\\n10 12') == '6'\nassert solution('1 1\\n1 100000') == '100000'\nassert solution('1 1\\n1 10002') == '10002'\nassert solution('1 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11') == '3'\nassert solution('1 1\\n1 100000\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11') == '3'\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"2 1\") == \"100000\"\nassert solution(\"1 1\") == \"100000\"\nassert solution(\"10 12\") == \"6\""
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n5 6\\n10 12') == '6'\nassert solution('1 1\\n1 100000') == '100000'\nassert solution('3 3\\n5 6\\n10 11') == '6'\n\n\n\"\"\""
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n2 3 5 6') == '0\\n3 4\\n'\nassert solution('3 2\\n3 4 5\\n') == '1\\n3\\n'\nassert solution('4 3\\n9 1 1 1\\n') == '2\\n3 4\\n'\nassert solution('4 3\\n2 3 5 6\\n') == '2\\n3 4\\n'\nassert solution('4 3\\n9 1 1 1\\n') == '2\\n3 4\\n'\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2''') == '''1\\n3'''\nassert solution('''4 3''') == '''2\\n3 4'''\nassert solution('''4 3''') == '''0\\n'''\nassert solution('''5 2''') == '''0\\n5'''\nassert solution('''4 3''') == '''0\\n'''\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1\\n3'\nassert solution('4 3') == '2\\n3 4'\nassert solution('4 3') == '2\\n3 4'\nassert solution('5 4') == '1'\nassert solution('5 4') == '1'\n\n\n-----\n\nThe solution is:"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1\\n3\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\nassert solution('4 3\\n2 3 5 6') == '2\\n3\\n4\\n'\nassert solution('4 3\\n9 1 1 1') == '0\\n'\n\n\n\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1\\n3'\nassert solution('4 3') == '2\\n3 4'\nassert solution('4 3') == '2\\n3 4'\nassert solution('4 3') == '2\\n3 4'\nassert solution('5 3') == '2\\n3 4 5'\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 4 5\") == \"1 3\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"4 3 5 6\") == \"2 3 4\"\nassert solution(\"9 1 1 1\") == \"0\"\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '0\\n3'\nassert solution('3 4 5') == '1\\n3\\n4'\nassert solution('4 3') == '2\\n3\\n4'\nassert solution('9 1 1 1') == '0\\n3\\n4\\n6'\nassert solution
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1\\n3\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\nassert solution('4 3') == '0\\n'\nassert solution('6 5') == '2\\n3\\n4\\n5\\n'"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1\\n3'\nassert solution('3 2') == '1\\n3'\nassert solution('4 3') == '2\\n3 4'\nassert solution('9 1 1 1') == '0'\nassert solution('3 3 2 2') == '1\\n2\\n3'\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n5 1 5 2\\n') == '2\\n3 4\\n'\nassert solution('3\\n2 3 5 6\\n') == '1\\n3\\n'\nassert solution('4\\n2 3 5 6\\n') == '0\\n3 4\\n'\nassert solution('4\\n9 1 1 1\\n') == '0\\n'\nassert solution('6\\n1 1 1 1 1 1\\n') == '1\\n'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n.135\\n1247\\n3468\\n5789\") == \"YES\"\nassert solution(\"2\\n....\\n12.1\\n.2..\\n.2..\") == \"NO\"\nassert solution(\"5\\n..1.\\n1111\\n..1.\\n..1.\") == \"YES\"\nassert solution(\"2\\n...1\\n..1.\\n.2..\") == \"NO\"\nassert solution(\"4\\n....\\n.1..\\n.1..\\n.1..\") == \"NO\"\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n.135\\n1247\\n3468\\n5789') == 'YES'\nassert solution('1\\n.135\\n1247\\n3468\\n5789') == 'NO'\nassert solution('5\\n.135\\n1247\\n3468\\n5789') == 'NO'\nassert solution('1\\n.2..\\n.2..\\n.2..') == 'NO'\nassert solution('1\\n.....\\n.....\\n.....') == 'NO'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"....\") == \"NO\"\nassert solution(\"12.1\") == \"YES\"\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"input/sample0.txt\") == \"YES\"\nassert solution(\"input/sample1.txt\") == \"YES\"\nassert solution(\"input/sample2.txt\") == \"YES\"\nassert solution(\"input/sample3.txt\") == \"YES\"\nassert solution(\"input/sample4.txt\") == \"NO\"\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1''') == 'YES'\nassert solution('''1''') == 'NO'\nassert solution('''2''') == 'YES'\nassert solution('''2''') == 'NO'\nassert solution('''3''') == 'YES'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n3') == '2'\nassert solution('3\\n1') == '0'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10\\n8 5\\n') == '3'\nassert solution('3 12\\n1 4 5\\n') == '0'\nassert solution('3 7\\n1 4 9\\n') == '1'\nassert solution('3 7\\n1 4 9\\n') == '1'\nassert solution('3 7\\n1 4 9\\n') == '1'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == '4'\nassert solution('8 5') == '3'\nassert solution('1 4 5') == '0'\nassert solution('3 7') == '1'\nassert solution('1 4 9') == '1'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 10\\n8 5\\n') == '3'\nassert solution('3 12\\n1 4 5\\n') == '0'\nassert solution('3 7\\n1 4 9\\n') == '1'\n\n'''\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10\\n8 5') == '3'\nassert solution('2 13\\n1 4 5') == '0'\nassert solution('2 12\\n1 4 9') == '1'\nassert solution('2 7\\n1 4 9') == '1'\nassert solution('3 7\\n1 4 9') == '1'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n') == '2'\nassert solution('3 7\\n1 4 9\\n') == '0'\nassert solution('3 12\\n1 4 9\\n') == '1'\nassert solution('3 7\\n1 4 9\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10\\n8 5') == '3'\nassert solution('2 10\\n8 5') == '0'\nassert solution('2 4\\n8 4') == '1'\nassert solution('2 4\\n8 4') == '1'\nassert solution('2 10\\n8 5') == '3'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 10\\n8 5\\n') == '3'\nassert solution('3 12\\n1 4 5\\n') == '0'\nassert solution('3 7\\n1 4 9\\n') == '1'"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n7\\n') == '4'\nassert solution('2\\n10\\n') == '3'\nassert solution('3\\n12\\n') == '0'\nassert solution('3\\n7\\n') == '1'"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\"\"\"\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4\\nabac\\ncaab\\nacba') == 'acab'\nassert solution('5 4\\nabcd\\ndcba\\nacbd\\ndbca\\nzzzz') == '-1'\n\n\n\n'''"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"aab\") == \"aba\"\nassert solution(\"aab\") == \"aba\"\nassert solution(\"abab\") == \"abab\"\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nn, k = map(int, stdin.split())\nstrings = [stdin.split()[i] for i in range(k)]\n\nfor i in range(k):\n    for j in range(i + 1, k):\n        strings[i] = strings[i].replace(strings[j][0], strings[j][1])\n        strings[j] = strings[j].replace(strings[i][0], strings[i][1])\n\nfor string in strings:\n    if len(string) == n:\n        print(string)\n        break"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 4\nabac\ncaab\nacba''') == 'acab'\nassert solution('''5 4\nkbbu\nkbub\nubkb\n''') == 'kbub'\nassert solution('''5 4\nabcd\ndcba\nacbd\ndbca\nzzzz''') == '-1'\n\n\n-----\n\nSince the problem was originally posed, but I thought that it would be better to make the task more general, so I decided to make it a bit more complicated.\n\nThe first line contains two integers k and n (1 \u2264 k \u2264 2500, 2 \u2264 n \u2264 5000, k\u00a0\u00b7\u00a0n \u2264 5000).\n\nNext k lines contain the strings s_1, s_2,..., s_{k}, each consisting of exactly n lowercase Latin letters.\n\nOutput\nPrint any suitable string s, or -1 if such string doesn't exist.\n\n-----\n\nInput\n5 2\nabca\nbcad\ncadb\nadbc\nzzzz\n\nOutput\nabca\n\nInput\n5 1\nabcd\ndcba\nacbd\ndbca\nzzzz\n\nOutput\n-1\n\n-----"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == result\n\n\"\"\"\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_stdout\n\"\"\"\n\nfrom collections import Counter\nimport sys"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abac\\ncaab\\nacba\\n') == 'acab'\nassert solution('kbbu\\nkbub\\nubkb\\n') == 'kbub'\nassert solution('abcd\\ndcba\\nacbd\\ndbcA\\nzzzz\\n') == '-1'\nassert solution('\\n') == '-'\nassert solution('abc\\n') == '-'\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\nabac\ncaab\nacba''') == 'acab'\nassert solution('''3 4\nkbbu\nkbub\nubkb''') == 'kbub'\nassert solution('''5 4\nabcd\ndcba\nacbd\ndbca\nzzzz''') == '-1'\n'''\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abac') == 'acab'\nassert solution('kbbu') == 'kbub'\nassert solution('kbbu') == '-1'\nassert solution('kbbu') == '-1'\nassert solution('kbbu') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 3 2 1 2 3 4 5''') == '55555'\nassert solution('''2\n9 11 1 12 5 8 9 10 6''') == '33'\nassert solution('''0\n1 1 1 1 1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n5 4 3 2 1 2 3 4 5') == '55555'\nassert solution('2\\n9 11 1 12 5 8 9 10 6') == '33'\nassert solution('0\\n1 1 1 1 1 1 1 1 1') == '-1'\nassert solution('5\\n1 2 3 4 5 6 7 8 9') == '5555'\nassert solution('5\\n0 1 2 3 4 5 6 7 8') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 4 3 2 1 2 3 4 5\\n\") == \"55555\"\nassert solution(\"0\\n1 1 1 1 1 1 1 1 1\\n\") == \"-1\"\nassert solution(\"2\\n9 11 1 12 5 8 9 10 6\\n\") == \"33\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '55555'\nassert solution('2') == '33'\nassert solution('9 11 1 12 5 8 9 10 6') == '55555'\nassert solution('0') == '-1'\nassert solution('1 1 1 1 1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input(\"\")) == ''\nassert solution(input(\"5\\n5 4 3 2 1 2 3 4 5\\n\")) == '55555'\nassert solution(input(\"2\\n9 11 1 12 5 8 9 10 6\\n\")) == '33'\nassert solution(input(\"0\\n1 1 1 1 1 1 1 1 1\\n\")) == '-1'"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n5 4 3 2 1 2 3 4 5''') == '55555'\nassert solution('''2\n9 11 1 12 5 8 9 10 6''') == '33'\nassert solution('''0\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''1\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''9\n9 9 9 9 9 9 9 9 9''') == '999090909'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n5 4 3 2 1 2 3 4 5''') == '55555'\nassert solution('''2\n9 11 1 12 5 8 9 10 6''') == '33'\nassert solution('''0\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''0\n0 0 0 0 0 0 0 0 0''') == '-1'\nassert solution('''3\n2 3 1 2 3 4 4 3 5''') == '55555'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == '-'\nassert solution('5') == '-1'\nassert solution('12') == '22222'\nassert solution('12345') == '33333'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n5 4 3 2 1 2 3 4 5''') == '55555'\nassert solution('''2\n9 11 1 12 5 8 9 10 6''') == '33'\nassert solution('''0\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''9\n11 1 12 5 8 9 10 6''') == '33'\nassert solution('''9\n11 1 12 5 8 9 10 6''') == '33'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n9') == 'YES'\nassert solution('1\\n5\\n10') == 'NO'\nassert solution('1\\n5\\n10\\n13') == 'YES'\nassert solution('1\\n5\\n5') == 'NO'\nassert solution('1\\n5\\n100') == 'NO'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n120 150\n''') == 'YES'\nassert solution('''3\n1 2\n120 150\n''') == 'NO'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'YES'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'NO'\nassert solution('''3\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == 'NO'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('test') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('10 10') == 'YES'\nassert solution('2 4') == 'YES'\nassert solution('2 4') == 'YES'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n2\n2 3\n1 2\n\nYES\nNO\n\n1\n2\n\"\"\""
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n2 4\n1 2\n120 150''') == 'YES'\nassert solution('''3\n2 4\n1 3\n120 150''') == 'NO'\nassert solution('''3\n1 2\n1 3\n120 150''') == 'NO'\nassert solution('''3\n1 2\n2 4\n120 150''') == 'YES'\nassert solution('''3\n1 2\n1 4\n120 150''') == 'YES'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('3\\n5\\n') == 'NO'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n2\\n') == 'NO'\nassert solution('3\\n5\\n') == 'NO'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\nassert solution(stdin) == stdin\nprint(solution(stdin))\nassert solution(stdin) == stdin\nprint(solution(stdin))\nassert solution(stdin) == stdin\nprint(solution(stdin))\nassert solution(stdin) == stdin\nprint(solution(stdin))\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 3\") == \"30\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 3\") == \"30\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 3\") == \"30\"\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1 2 3''') == '30'\nassert solution('''5 1 2 -3''') == '12'\nassert solution('''5 1 2 3''') == '30'\n'''\n\nstdin = sys.stdin\nn, p, q, r = list(map(int, stdin.readline().split()))\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1 2 -3') == '30'\nassert solution('5 1 2 3') == '30'\nassert solution('5 1 2 -3') == '12'\nassert solution('5 1 2 -3') == '12'\nassert solution('3 1 2 -3') == '30'\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2 3\") == \"30\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 -3\") == \"12\"\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1 2 3''') == '30'\nassert solution('''5 1 2 -3''') == '12'\nassert solution('''5 1 2 3''') == '30'\nassert solution('''5 1 2 3''') == '30'\nassert solution('''5 1 2 -3''') == '12'\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 2 3') == '30'\nassert solution('5 1 2 -3') == '12'\nassert solution('5 1 2 -3 4 -5') == '18'\nassert solution('-1 -2 -3 -4 -5') == '12'\nassert solution('1 2 -3 4 5') == '18'\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2 3\") == \"30\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 3\") == \"30\"\nassert solution(\"5 1 2 -3\") == \"12\"\nassert solution(\"5 1 2 3\") == \"30\"\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 1 2 3\\n1 2 3 4 5\\n\") == 30\nassert solution(\"5 1 2 -3\\n-1 -2 -3 -4 -5\\n\") == 12\nassert solution(\"5 1 2 -3\\n-1 -2 -3 -4 -5\\n\") == 12\nassert solution(\"5 1 2 -3\\n1 2 3 4 5\\n\") == 30\nassert solution(\"5 1 2 -3\\n1 2 -3 4 -5\\n\") == 12\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"6 2 3\") == \"\"\nassert solution(\"15 -1 -1\") == \"2\"\nassert solution(\"10 1 3\") == \"0\"\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''-1 -1 -1\\n3 2 1\\n5 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1''') == '2'\nassert solution('''-1 -1 -1\\n3 2 1\\n5 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1''') == '1'\nassert solution('''-1 -1 -1\\n3 2 1\\n5 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1''') == '0'\nassert solution('''-1 -1 -1\\n3 2 1\\n5 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1''') == '2'\nassert solution('''-1 -1 -1\\n3 2 1\\n5 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1\\n-1 -1 -1''') == '1'\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('15\\n10 1 3\\n5 -1 -1\\n') == '2\\n'\nassert solution('8\\n6 2 3\\n3 4 5\\n12 6 7\\n1 -1 8\\n4 -1 -1\\n5 -1 -1\\n14 -1 -1\\n2 -1 -1\\n') == '1\\n'\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline().strip())\ntree = {}\nfor _ in range(n):\n    x, l, r = map(int, sys.stdin.readline().strip().split())\n    tree[x] = [l, r]\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\\n15 -1 -1\") == \"2\"\nassert solution(\"3\\n15 -1 -1\") == \"2\"\nassert solution(\"4\\n15 -1 -1\") == \"2\"\nassert solution(\"6\\n15 -1 -1\") == \"2\"\nassert solution(\"8\\n15 -1 -1\") == \"2\"\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n15 -1 -1\n10 1 3\n5 -1 -1\n''') == '1'\n\nassert solution('''8\n6 2 3\n3 4 5\n12 6 7\n1 -1 8\n4 -1 -1\n5 -1 -1\n14 -1 -1\n2 -1 -1\n''') == '1'\n'''"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1\n2 1 3\n5 -1 -1''') == '0'\n\nassert solution('''1\n2 1 3\n5 -1 -1\n5 5 5''') == '3'\n\nassert solution('''1\n2 1 3\n5 -1 -1\n5 5 5''') == '0'\n\nassert solution('''2\n2 1 3\n5 -1 -1\n14 -1 -1\n2 -1 -1''') == '1'\n\nassert solution('''6\n6 4 3\n14 4 5\n4 5 9\n5 4 8\n9 4 7\n7 2 6\n2 3 5\n3 1 6\n''') == '0'"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input(\"\")) == output\n\n\"\"\"\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n15 -1 -1\n10 1 3\n5 -1 -1''') == '2'\n\nassert solution('''8\n6 2 3\n3 4 5\n12 6 7\n1 -1 8\n4 -1 -1\n5 -1 -1\n14 -1 -1\n2 -1 -1''') == '1'\n\nassert solution('''10\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1\n15 -1 -1\n10 1 3\n5 -1 -1"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3\\n15 -1 -1\\n10 1 3\\n5 -1 -1') == '2'\nassert solution('8\\n6 2 3\\n3 4 5\\n12 6 7\\n1 -1 8\\n4 -1 -1\\n5 -1 -1\\n14 -1 -1\\n2 -1 -1') == '1'\nassert solution('10\\n6 2 3\\n3 4 5\\n12 6 7\\n1 -1 8\\n4 -1 -1\\n5 -1 -1\\n14 -1 -1\\n2 -1 -1\\n8 -1 -1\\n9 -1 -1\\n10 -1 -1') == '0'\nassert solution('8\\n6 2 3\\n3 4 5\\n12 6 7\\n1 -1 8\\n4 -1 -1\\n5 -1 -1\\n14 -1 -1\\n2 -1 -1\\n10 -1 -1') == '2'\nassert solution('8\\n6 2 3\\n3 4 5\\n12 6 7\\n1 -1 8\\n4 -1 -1\\n5 -1 -1\\n14 -1 -1\\n2 -1 -1\\n10 -1 -1\\n8 -1 -1') == '2'\n\n\n-----"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 2 3\") == \"2\"\nassert solution(\"15 -1 -1\") == \"2\"\nassert solution(\"10 1 3\") == \"2\"\nassert solution(\"5 -1 -1\") == \"1\"\nassert solution(\"12 6 7\") == \"1\"\n"
    }
]