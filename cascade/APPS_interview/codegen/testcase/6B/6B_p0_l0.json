[
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('[::]') == 4\nassert solution('[:||:]') == 6\nassert solution('[:|||:]') == 7\nassert solution('[:|||:|]') == -1\nassert solution('[:|||:|:|]') == -1\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100''') == '99'\nassert solution('''48''') == '48'\nassert solution('''521''') == '499'\nassert solution('''123456789''') == '999999999'\nassert solution('''123456789''') == '999999999'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == \"1\"\nassert solution(201) == \"99\"\nassert solution(4000) == \"1000\"\nassert solution(12345) == \"1000\"\nassert solution(123456789) == \"1000\"\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''4 3\n1 1\n2 2\n2 3\n3 4''') == '2'\nassert solution('''4 4\n1 1\n2 2\n2 3\n3 4''') == '3'\nassert solution('''7 4\n1 1\n2 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '7'\nassert solution('''7 4\n1 1\n2 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '7'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n11 23\n''') == '2'\nassert solution('''5\n01 07\n''') == '0'\nassert solution('''1\n00 00\n''') == '0'\nassert solution('''1\n00 00\n''') == '0'\nassert solution('''1\n00 00\n''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '2'\n\nassert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '3'\n\nassert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\n\nassert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'\n\nassert solution('''3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n''') == '-1'"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '2'\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\nassert solution('''3\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\nassert solution('''3\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('14') == '4 4'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\nGGGSGGGSGG''') == '7'\nassert solution('''4\nGGGG''') == '4'\nassert solution('''3\nSSS''') == '0'\nassert solution('''10\nGGG''') == '0'\nassert solution('''10\nGGG''') == '0'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n''') == '5'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '6'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n3 2 1\n''') == '3 2 1 5 4'\nassert solution('''5 1\n3\n''') == '3 2 1 5 4'\nassert solution('''5 2\n3 4\n''') == '-1'\nassert solution('''5 2\n2 3\n''') == '-1'\nassert solution('''5 2\n2 3\n1\n''') == '3 2 1 5 4'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('0 -4 5') == 'NO'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"(()())()\") == \"1\"\nassert solution(\"(()())((()))\") == \"1\"\nassert solution(\"(()())((()))\") == \"0\"\nassert solution(\"(()())((()))\") == \"0\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\nassert solution('10 5 10') == '0'\nassert solution('10 5 100') == '0'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[::-1]\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\nassert solution('23:59') == '1'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '3'\nassert solution('''4 5 1 3 2''') == '3'\nassert solution('''7''') == '6'\nassert solution('''6 5 4 3 2 1''') == '5'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\nassert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nXXXXXXXX\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\n''') == 'YES'\nassert solution('''\nXXXXXXXX\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\n''') == 'NO'\nassert solution('''\nXXXXXXXX\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\n''') == 'YES'\nassert solution('''\nXXXXXXXX\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\n''') == 'NO'\nassert solution('''\nXXXXXXXX\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\nX.O.X.X.\n''') == 'YES'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1''') == '1 0'\nassert solution('''3 2''') == '1 0 0'\nassert solution('''2 5''') == '-1'\nassert solution('''3 2''') == '1 0 0'\nassert solution('''2 5''') == '-1'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1.1 3.4 2.5''') == 'z^y^x'\nassert solution('''2.0 2.0 2.0''') == 'x^y^z'\nassert solution('''1.9 1.8 1.7''') == '(x^y)^z'\nassert solution('''1.1 3.4 2.5''') == 'z^y^x'\nassert solution('''2.0 2.0 2.0''') == 'x^y^z'\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\nassert solution('abcdefghi') == 9\nassert solution('abcdefghij') == 10\nassert solution('abcdefghijkl') == 11\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n'\nassert solution('''2\n1 0\n2 1\n''') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n'\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\nassert solution('''3\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '6\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\nassert solution('''4\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('110000') == '1'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\nassert solution('5 2') == '2'\nassert solution('5 2') == '2'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\nassert solution('''1 1''') == '1 1'\nassert solution('''2 2''') == '1 1'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n''') == 'YES'\n\nassert solution('''2\n15000 South\n4000 East\n''') == 'NO'\n\nassert solution('''5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n''') == 'YES'\n\nassert solution('''3\n20000 South\n10 East\n20000 North\n''') == 'NO'\n\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North\n''') == 'YES'"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'\nassert solution('''2 4 3 0 6 17''') == '2'\nassert solution('''2 4 3 0 6 17''') == '2'\nassert solution('''2 4 3 0 6 17''') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG''') == 'YES'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'NO'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '-2 0'\nassert solution('''7''') == '3 2'\nassert solution('''0''') == '0 0'\nassert solution('''1''') == '0 -1'\nassert solution('''2''') == '0 1'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7\n''') == 'YES'\n\nassert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\n\nassert solution('''2 4\n1 3\n1 2\n''') == 'NO'\n\nassert solution('''3 4\n1 2 3\n2 3 4\n''') == 'NO'\n\nassert solution('''3 4\n1 2 3\n2 3 4\n''') == 'YES'"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == 'qqqqqqqq'\nassert solution('qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884''') == 'rated'\nassert solution('''4\n1500 1500\n1300 1300\n1200 1200\n1400 1400''') == 'unrated'\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699''') =='maybe'\nassert solution('''6\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n2884 2884''') =='maybe'\nassert solution('''6\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n2884 2884\n3123 3123''') =='maybe'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n2 1 0 3 0 0 3 2 4''') == '2 1 0 1 0 0 1 2 3'\nassert solution('''5\n0 1 2 3 4''') == '0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('1010') == ''\nassert solution('10101010101010') == ''\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('21 21') == '88'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 -2\n-3 8 -2 1 -6''') == '22'\nassert solution('''12 -3\n1 3 3 7 1 3 3 7 1 3 3 7''') == '42'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\nassert solution('''5 10\n-1 -2 -3 -4 -5''') == '0'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('1 10 5') == '5'\nassert solution('1 10 5') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 11\n4 2 5\n4 4 5 4''') == '26'\nassert solution('''2 2 50\n5 7\n4 2''') == '50'\nassert solution('''2 2 50\n5 7\n4 2 4''') == '50'\nassert solution('''2 2 50\n5 7\n4 2 4 4''') == '50'\nassert solution('''2 2 50\n5 7\n4 2 4 4 4''') == '50'\n"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '3'\nassert solution('''25''') == '20'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '3'\nassert solution('''25''') == '20'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('100 50') == 'NO'\nassert solution('100 50') == 'NO'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('23 5') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'No'\nassert solution('1 2') == 'Yes\\n-1 -1'\nassert solution('2 2') == 'Yes\\n-1 -1'\nassert solution('2 2') == 'Yes\\n-1 -1'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5''') == '4'\nassert solution('''4 8''') == '6'\nassert solution('''3 1''') == '3'\nassert solution('''4 1''') == '5'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\nassert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''2\n1 1\n0 0''') == '-1'\nassert solution('''2\n1 1\n1 1''') == '-1'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1\n2\n''') == '1'\n\nassert solution('''5\n3\n4\n''') == '6'\n\nassert solution('''6\n4\n2\n''') == '4'\n\nassert solution('''20\n5\n6\n''') == '2'\n\nassert solution('''20\n5\n6\n''') == '2'"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 5 3 4 6') == 'YES'\nassert solution('01110') == 'YES'\nassert solution('01010') == 'NO'\nassert solution('1 2 5 3 4 6') == 'YES'\nassert solution('01010') == 'NO'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nassert solution('6a') == '19'\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '<'\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '='\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '>'\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '='\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '='\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == 'BitLGM'\nassert solution('''1 2\n''') == 'BitAryo'\nassert solution('''2 1\n''') == 'BitLGM'\nassert solution('''2 2\n''') == 'BitAryo'\nassert solution('''3 1\n''') == 'BitLGM'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\naabb') == 'YES'\nassert solution('6 3\\naacaab') == 'NO'\nassert solution('1 2\\na') == 'YES'\nassert solution('1 2\\na') == 'YES'\nassert solution('1 2\\na') == 'YES'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 3\n''') == '1'\nassert solution('''3\n5 6 5\n''') == '2'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 1 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 3 2') == '3/10'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 0 0') == '?'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nRURUU\n-2 3\n''') == '3'\n\nassert solution('''4\nRULR\n1 1\n''') == '0'\n\nassert solution('''3\nUUU\n100 100\n''') == '-1'\n\nassert solution('''3\nUUU\n-1 -1\n''') == '-1'\n\nassert solution('''3\nUUU\n-1 -1\n''') == '-1'"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('10203049 2') == '3'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'Kuro'\nassert solution('''treasurehunt''') == 'Shiro'\nassert solution('''foPaErcvJ''') == 'Kuro'\nassert solution('''mZaxowpbt''') == 'Shiro'\nassert solution('''mkuOlaHRE''') == 'Kuro'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('27') == '3\\n5 11 11'\nassert solution('27') == '3\\n5 11 11'\nassert solution('27') == '3\\n5 11 11'\nassert solution('27') == '3\\n5 11 11'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'YES\\n1 2'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'NO'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES\\n3 3'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES\\n3 3'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES\\n3 3'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-2 2 -3 1') == 3\nassert solution('2\\n-5 -3') == -1\nassert solution('3\\n2 -5 -3') == -1\nassert solution('4\\n-2 2 -3 1') == 3\nassert solution('5\\n2 -5 -3') == -1\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\nassert solution('5') == '333333338'\nassert solution('6') == '333333338'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\nassert solution('5 10') == '0'\nassert solution('5 10') == '0'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 6\n2 3\n''') == '1\\n1 6\\n2 3'\nassert solution('''36 5\n10 16\n''') == '3\\n16 5\\n5 16'\nassert solution('''3 5\n2 1\n''') == '-1'\nassert solution('''2 1\n2 1\n''') == '-1'\nassert solution('''2 1\n2 1\n''') == '-1'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''2 1 2 2''') == 'Polycarp'\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'\nassert solution('11 1') == '5'\nassert solution('11 7') == '5'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '0'\nassert solution('72057594000000000 72057595000000000') == '0'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == 2\nassert solution('''3''') == 4\nassert solution('''4''') == 6\nassert solution('''5''') == 8\nassert solution('''6''') == 10\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 30''') == '1'\nassert solution('''2 2 7''') == '1'\nassert solution('''3 1 1''') == '6'\nassert solution('''4 3''') == '1'\nassert solution('''5 2''') == '0'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'NO'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'NO'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810''') == 'YES'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('1 1 1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('2 1 1') == '2'\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AB\nXC\nXB\nAC''') == 'YES'\nassert solution('''AB\nXC\nAC\nBX\n''') == 'NO'\nassert solution('''AB\nXC\nAC\nBX\n''') == 'NO'\nassert solution('''AB\nXC\nAC\nBX\n''') == 'NO'\nassert solution('''AB\nXC\nAC\nBX\n''') == 'NO'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13\n12''') == '12'\nassert solution('''16\n11311''') == '475'\nassert solution('''20\n999''') == '3789'\nassert solution('''17\n2016''') == '594'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'NO'\nassert solution('4\\n1') == 'NO'\nassert solution('5\\n1') == 'NO'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''5 5''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''2 3''') == 'YES'\nassert solution('''1 2''') == 'YES'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4''') == '0'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 8\n..w..w..\n........\n........\n..w..w..\n''') == '''..w++w..\n..+..+..\n..+..+..\n..w++w..\n'''\n\nassert solution('''5 6\nw..w.w\n...w..\n......\n.w...\n......\n''') == '''......\n+w+...\n+.+...\n++w...\n......\n'''\n\nassert solution('''2 4\n....\n.w..\n''') == '''....\n.w..\n'''\n\nassert solution('''2 6\nw..w.w\n...w..\n''') == '''-1'''\n\nassert solution('''3 4\n.w...\n...w..\n.w...\n''') == '''.w...\n...w..\n.w...\n'''"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7''') == 'YES'\nassert solution('''100''') == 'YES'\nassert solution('''15''') == 'NO'\nassert solution('''9960594''') == 'YES'\nassert solution('''2551''') == 'YES'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('99') == 'ninety-nine'\nassert solution('99') == 'ninety-nine'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '2'\nassert solution('''998 999 1000''') == '2'\nassert solution('''3''') == '0'\nassert solution('''998 999 1000''') == '2'\nassert solution('''5''') == '4'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 2 1''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2 2''') == '9'\nassert solution('''100\n1 1 1 1 1 1 1 1 1 1 1''') == '99'\nassert solution('''1000\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '999'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '12 1'\nassert solution('''1 9 3''') == '12 1'\nassert solution('''8 6 7''') == '12 1'\nassert solution('''4 2 5''') == '12 1'\nassert solution('''1 9 3 8 6 7 4 2 5''') == '12 1'\n"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n2 2 2 2') == '-3 -3 -3 -3'\nassert solution('3\\n-3 -3 2') == '-3 -3 2'\nassert solution('4\\n2 2 2 2') == '-3 -3 2'\nassert solution('5\\n-3 -3 2 2') == '-3 -3 2'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('12 5') == '6'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''3\n0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''3 2\n1 0 1\n1 0 1\n0 0 0\n''') == '0'\nassert solution('''3 2\n1 0 1\n1 0 1\n0 0 0\n''') == '-1'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\nassert solution('''1 1 1''') == '0.0 0.0 0.0'\nassert solution('''1 1 1''') == '0.0 0.0 0.0'\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\nassert solution('''3 8 53''') == 'NO'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AGCT') == 'AGCT'\nassert solution('????G?') == '==='\nassert solution('AA??') == '==='\nassert solution('AA??AA') == '==='\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('x..x\\n..oo\\no...\\nx.xo') == 'YES'\nassert solution('x.ox\\nox..\\nx.o.\\noo.x') == 'NO'\nassert solution('o.x.\\no...\\n.x..\\nooxx') == 'NO'\nassert solution('x..x\\n..oo\\no...\\nx.xo') == 'YES'\nassert solution('x.ox\\nox..\\nx.o.\\noo.x') == 'NO'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n2 2 3 4 5') == 'YES'\nassert solution('5\\n2 2 3 4 5') == 'YES'\nassert solution('5\\n2 2 3 4 5') == 'YES'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 6 2''') == 'YES'\nassert solution('''5 1 1''') == 'NO'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1''') == 'YES'\nassert solution('''0 1 1 0\n1 0 1 0\n1 1 0 0\n0 0 0 1''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0''') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 1\n3 5\n2 3\n1 5''') == '10'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\nassert solution('''4 1\n0 2\n0 3\n3 5\n0 6''') == '5'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '10'\nassert solution('''1 10''') == '0'\nassert solution('''5 10''') == '0'\nassert solution('''5 10''') == '0'\nassert solution('''5 10''') == '0'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''1 2\nBB''') == '-1'\nassert solution('''3 3\nWWW\nWWW\nWWW''') == '1'\nassert solution('''3 3\nWWW\nWWW\nWWW''') == '-1'\nassert solution('''3 3\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\nWWW\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n90 90 90 90''') == '0'\nassert solution('''3\n100 100 160''') == '40'\nassert solution('''1\n360''') == '360'\nassert solution('''4\n170 30 150 10''') == '0'\nassert solution('''4\n90 90 90 90''') == '0'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('5 3') == 'Yes'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345') == '='\nassert solution('0123\\n9') == '>'\nassert solution('0123\\n111') == '>'\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\nassert solution('1 1 1 1') == '0'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'YES'\nassert solution('''5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'NO'\nassert solution('''3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n2 1\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10') == '281'\nassert solution('1 1\\n1 1') == '0'\nassert solution('2 50\\n20 0\\n3 1') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70') == '26'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n155 70\\n165 70') == '26'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8\n''') == '10'\nassert solution('''0\n0 0 0 0 0 0 0 0\n''') == '0'\nassert solution('''3\n0 4 1 0 0 9 8 3\n''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8\n''') == '10'\nassert solution('''0\n0 0 0 0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\n\nassert solution('''4 3\n10000 1000 100 10\n''') == '10'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n\nassert solution('''4 3\n10 100 1000 10000\n''') == '30'\n\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '10'"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 3 3 6''') == '5'\nassert solution('''2\n2 1''') == '3'\nassert solution('''3\n2 1 3''') == '1'\nassert solution('''4\n2 1 3 4''') == '2'\nassert solution('''5\n1 3 3 3 6''') == '5'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n73452') == 'YES'\nassert solution('4\\n1248') == 'NO'\nassert solution('5\\n1248') == 'NO'\nassert solution('5\\n1248') == 'NO'\nassert solution('5\\n1248') == 'NO'\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\nassert solution(\"wjmzbmq\") == \"IGNORE HIM!\"\nassert solution(\"wjmzbmq\") == \"IGNORE HIM!\"\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('5 1 4 3 2') == 'YES'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '2'\nassert solution('''27''') == '3'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 11\\n1 2 3 4\\n') == '6'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '1'\nassert solution('''3''') == '0'\nassert solution('''5''') == '0'\nassert solution('''6''') == '0'\nassert solution('''7''') == '0'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''2''') == '1 2'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n5\\n7\\n') == '7'\nassert solution('4\\n7\\n13\\n') == '21'\nassert solution('2\\n3\\n2\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '0'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 3 2 4''') == 'YES'\nassert solution('''1\n3 3''') == 'NO'\nassert solution('''2\n1 3 2 4''') == 'YES'\nassert solution('''2\n1 3''') == 'NO'\nassert solution('''2\n1 3 2''') == 'NO'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7 28''') == '1'\nassert solution('''2 7 28''') == '1'\nassert solution('''2 7 28''') == '1'\nassert solution('''2 7 28''') == '1'\nassert solution('''2 7 28''') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''39''') == '''4\n5 3 \n'''\nassert solution('''1''') == '''0\n'''\nassert solution('''7''') == '''0\n'''\nassert solution('''39''') == '''4\n5 3 \n'''\nassert solution('''1''') == '''0\n'''\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 2 3 6 9 8 5 2\n''') == 'YES'\nassert solution('''6\n1 2 1 2 5 3\n''') == 'NO'\nassert solution('''2\n1 10\n''') == 'YES'\nassert solution('''2\n1 10\n''') == 'NO'\nassert solution('''2\n1 10\n''') == 'YES'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hi') == '-'\nassert solution('bob') == '-'\nassert solution('abca') == 'ac'\nassert solution('abacaba') == 'abcba'\nassert solution('abcdcba') == 'abcba'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5++-++') == '3'\nassert solution('++-++') == '1'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n11\n9\n8''') == '2'\nassert solution('''10\n5\n6\n1''') == '2'\nassert solution('''10\n5\n1\n1''') == '2'\nassert solution('''10\n5\n5\n1''') == '2'\nassert solution('''10\n5\n5\n5''') == '2'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3\n''') == '-1'\nassert solution('''2\n1 2\n2 1 3\n''') == '-1'\nassert solution('''2\n1 2\n2 1 3\n1 2\n''') == '-1'\nassert solution('''2\n1 2\n2 1 3\n1 2\n''') == '-1'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Too weak'\nassert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Too weak'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\nassert solution('''1\n5\n3\n''') == '-1'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '-1'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\">^^<\") == \"YES\"\nassert solution(\"^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n1\n0''') == 'YES'\nassert solution('''0\n0\n1\n1\n0''') == 'NO'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('1 1') == '0 1'\nassert solution('1 1') == '0 1'\nassert solution('1 1') == '0 1'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nassert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nassert solution('''1 1 10''') == '10'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('8380011223344') == 'YES'\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 0''') == 'Yes'\nassert solution('''5 6 1''') == 'No'\nassert solution('''3 3 3''') == 'Yes'\nassert solution('''2 2 2''') == 'Yes'\nassert solution('''1 1 1''') == 'Yes'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('5 3 1000') == '590'\nassert solution('5 3 1000') == '590'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\nassert solution('5 2') == '15'\nassert solution('5 3') == '15'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n11\n27\n27\n11''') == 'YES\\n11 27'\nassert solution('''2\n6\n6\n''') == 'NO'\nassert solution('''6\n1\n1\n2\n2\n3\n3\n''') == 'NO'\nassert solution('''6\n10\n20\n30\n20\n10\n20\n''') == 'NO'\nassert solution('''6\n1\n1\n2\n2\n3\n3\n''') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n5 8\\n') == 'YES'\nassert solution('1 2\\n7 1\\n') == 'NO'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n....\n..*.\n...*\n..**\n''') == '3'\nassert solution('''\n1 3\n*.*\n''') == '3'\nassert solution('''\n2 1\n.\n*\n''') == '1'\nassert solution('''\n2 1\n.\n*\n''') == '1'\nassert solution('''\n2 1\n.\n*\n''') == '1'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 2\n1 2 1 1\n''') == '0'\nassert solution('''4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''4 1 1\n1 1 2 1\n''') == '2'\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 2\n1 2''') == '499122177'\nassert solution('''2\n42 1337\n13 420''') == '578894053'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3'\nassert solution('3 4\\n5 3 4\\n') == '2'\nassert solution('3 7\\n1 2 3\\n') == '-1'\nassert solution('3 7\\n1 2 3\\n') == '-1'\nassert solution('3 7\\n1 2 3\\n') == '-1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\nassert solution('''1 50\n5 4''') == '-1'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 16\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\nassert solution('-1 -1\\n1 1') == '0'\nassert solution('-1 -1\\n1 1') == '0'\nassert solution('-1 -1\\n1 1') == '0'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('1\\nD') == 'D'\nassert solution('2\\nDR') == 'R'\nassert solution('3\\nDRR') == 'R'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\nassert solution('1000000000 1 2019') == '500000001500000001'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5') == 'Yes'\nassert solution('2\\n1\\n3\\n5') == 'Yes'\nassert solution('2\\n1\\n3\\n5\\n7') == 'No'\nassert solution('2\\n1\\n3\\n5\\n7\\n9') == 'No'\nassert solution('2\\n1\\n3\\n5\\n7\\n9\\n11') == 'No'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0 1''') == '1 0 1 1'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 2''') == '-1'\nassert solution('''0 0 1 2''') == '-1'\nassert solution('''0 0 1 2''') == '-1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n3''') == '1'\nassert solution('''0 -1\n2''') == '1000000006'\nassert solution('''0 -1\n3''') == '1000000006'\nassert solution('''0 -1\n4''') == '1000000006'\nassert solution('''0 -1\n5''') == '1000000006'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 -3\n''') == 'YES'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''1\n0\n''') == 'NO'\nassert solution('''4\n1 2 3 -5\n''') == 'YES'\nassert solution('''4\n1 2 3 -5\n''') == 'YES'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\nassert solution(stdin) == '6'\nassert solution(stdin) == '3'\nassert solution(stdin) == '6'\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3454') == 'YES'\nassert solution('10') == 'YES'\nassert solution('111111') == 'NO'\nassert solution('123456789') == 'NO'\nassert solution('123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n6 2\n2 1\n7 3\n''') == '4'\nassert solution('''8 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\nassert solution('''10 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\nassert solution('''10 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\nassert solution('''10 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('00') == 0\nassert solution('00X00X0XXX0') == 1\nassert solution('0XXX0X00X00') == 4\nassert solution('0X0X0') == 0\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11\\naaaaBaabAbA') == '2'\nassert solution('12\\nzACaAbbaazzC') == '3'\nassert solution('3\\nABC') == '0'\nassert solution('3\\nABC') == '0'\nassert solution('3\\nABC') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-2 0') == '3'\nassert solution('3\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\nassert solution('6\\n16 23 16 15 42 8\\n') == '120'\nassert solution('6\\n16 23 16 15 42 8\\n') == '120'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''2 9 2 3\n6 4''') == 'IMPOSSIBLE'\nassert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''2 9 2 3\n6 4''') == 'IMPOSSIBLE'\nassert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\nassert solution('5 2') == '0'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\nassert solution('9') == '0'\nassert solution('25') == '0'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('10') == '7'\nassert solution('100') == '10'\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('AAABBB') == 2\nassert solution('AAABBBACFEYUKOTT') == 4\nassert solution('AAABBBACFEYUKOTT') == 4\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2 5') == 'NO'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n141 592 653''') == '653 733'\nassert solution('''5\n10 21 10 21 10''') == '31 41'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 1''') == '1'\nassert solution('''3\n1 1 1''') == '1'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 6 8') == '2'\nassert solution('3 6 5') == '-1'\nassert solution('2 4 8 6 10 18') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '3'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n8 8') == 'Bob'\nassert solution('4\\n3 1 4 1') == 'Alice'\nassert solution('2\\n1 1') == 'Alice'\nassert solution('2\\n1 1') == 'Alice'\nassert solution('2\\n1 1') == 'Alice'\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''1\n1''') == 'YES'\nassert solution('''1\n0''') == 'NO'\nassert solution('''1\n0''') == 'NO'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nababa''') == '2'\nassert solution('''5\nababa''') == '2'\nassert solution('''5\nababa''') == '2'\nassert solution('''5\nababa''') == '2'\nassert solution('''5\nababa''') == '2'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''8 5''') == '3'\nassert solution('''8 5''') == '3'\nassert solution('''8 5''') == '3'\nassert solution('''8 5''') == '3'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Mishka'\nassert solution('''2\n6 1\n1 6''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!^^'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n111\n1*1\n111\n''') == 'YES'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\nassert solution('''2 4\n*.*.\n1211\n''') == 'NO'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''68''') == '3'\nassert solution('''1''') == '0'\nassert solution('''10''') == '1'\nassert solution('''100''') == '0'\nassert solution('''1000''') == '0'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"-o---o-o-\") == \"NO\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('3 6 2') == '3'\nassert solution('3 6 3') == '3'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '1 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\nassert solution('''0 10''') == '0 1'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''003512\n021''') == '30021'\nassert solution('''199966633300\n63''') == '3036366999'\nassert solution
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '5 6 7 8 9'\nassert solution('5') == '0'\nassert solution('5') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n''') == '2 2'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\nassert solution('''5 6 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\nassert solution('''5 6 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\nassert solution('''5 6 2\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2''') == '1'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n0''') == '0'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n1''') == '0'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\nassert solution('10 9') == '1'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2''') == 'YES'\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2''') == 'NO'\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2\n3 3''') == 'YES'\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == 'NO'\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50''') == 'YES'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n100 30\n40 10\n''') == '942477.796077000'\nassert solution('''4\n1 1\n9 7\n1 4\n10 7\n''') == '3983.539484752'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''2\n1 1\n1 1\n''') == '1'\nassert solution('''3\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\nassert solution('1\\n-10') == '0'\nassert solution('2\\n-10 -10') == '0'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'NO'\nassert solution('''1 1 1''') == 'YES'\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('ab') == 1\nassert solution('abc') == 1\nassert solution('abca') == 2\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 4 6 2\n5\n5 1 5 7 9''') == '3'\nassert solution('''4\n1 2 3 4\n4\n10 11 12 13''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''1 1\n2 2\n3 3\n2 2''') == 'Team 2'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Draw'\nassert solution('''1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n2 2\n1 1\n2 2\n3 3\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0523\n''') == 'Bicarp'\nassert solution('''2\n??\n''') == 'Bicarp'\nassert solution('''8\n?054??0?\n''') == 'Bicarp'\nassert solution('''6\n???00?\n''') == 'Monocarp'\nassert solution('''7\n?054??0?0?\n''') == 'Bicarp'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('2 2') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n16\n.**.*..*.***.**.\n''') == 'yes'\nassert solution('''\n11\n.*.*...*.*.\n''') == 'no'\nassert solution('''\n16\n.**.*..*.***.**.\n''') == 'yes'\nassert solution('''\n11\n.*.*...*.*.\n''') == 'no'\nassert solution('''\n16\n.**.*..*.***.**.\n''') == 'yes'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 0 2\n3 5 7\n8 1 6''') == '9'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('2 0') == '-1 -1'\nassert solution('2 0') == '-1 -1'\nassert solution('2 0') == '-1 -1'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '2189'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '2189'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 10\n7 2 7 7 4 2''') == 'YES'\nassert solution('''6 2 3\n4 5 3 13 4 10''') == 'YES'\nassert solution('''3 2 5\n10 16 22''') == 'NO'\nassert solution('''3 2 5\n10 16 22''') == 'NO'\nassert solution('''3 2 5\n10 16 22''') == 'NO'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\nassert solution(\"RRYBGRYBGR\") == \"0 0 0 0\"\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.5000000000'\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\n\"\"\""
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '0'\nassert solution('''113''') == '110'\nassert solution('''1000000000''') == '1000000000'\nassert solution('''5432359''') == '5432360'\nassert solution('''5432360''') == '5432360'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e l l o w o r l d a v i s t a b a y'\nassert solution('merrychristmas') =='m r e y c r i s t a b a y'\nassert solution('hastalavistababy') == 'h e l l o w o r l d a v i s t a b a y'\nassert solution('christmasmerry') == 'c r i s t a b a y m r e y'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('harry potter') == 'hap'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n[[][]][]''') == '''+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\nassert solution('''6\n[[[]]]''') == '''+-     -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-        -++-\n'''\nassert solution('''6\n[[[]]]''') == '''+-        -++- -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-        -++-\n'''\nassert solution('''2\n[]''') == '''+- -+\n|   |\n+- -+\n'''\nassert solution('''4\n[][]''') == '''+- -++- -+\n|   ||   |\n+- -++- -+\n'''\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '>'\nassert solution('1000\\n1000') == '='\nassert solution('00100\\n00100') == '='\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nred\npurple\nyellow\norange''') == '2\\nSpace\\nTime'\nassert solution('''0''') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\nassert solution('''1\nred''') == '6'\nassert solution('''2\nred\npurple''') == '2\\nSpace'\nassert solution('''3\nred\npurple\nyellow''') == '2\\nSpace\\nTime'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\nassert solution('8 7 5') == '2'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '-1'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '-1'\nassert solution('''3 2\n1 4 2\n10 4\n2 6''') == '10'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('4 2\\n1001\\n') == '-1'\nassert solution('12 3\\n101111100101\\n') == '4'\nassert solution('8 4\\n11100101\\n') == '3'\nassert solution('8 4\\n11100101\\n') == '3'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\nassert solution('''5''') == '2'\nassert solution('''6''') == '3'\nassert solution('''7''') == '3'\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '6'\nassert solution('11') == '7'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3''') == '1 3'\nassert solution('''6 3''') == '1 3'\nassert solution('''6 3''') == '1 3'\nassert solution('''6 3''') == '1 3'\nassert solution('''6 3''') == '1 3'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\nassert solution('100') == '4'\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVK\") == 1\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '2'\nassert solution('''2''') == '3'\nassert solution('''4''') == '4'\nassert solution('''10''') == '10'\nassert solution('''100''') == '100'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '2'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"10 1024\") == \"2046\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\nassert solution('''1''') == '2'\nassert solution('''3''') == '3'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'NO'\nassert solution('4\\n1') == 'YES'\nassert solution('5\\n1') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''3\n3 3\n3 3 3''') == '-1'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\nassert solution('1 1 1') == 'YES\\n1 0\\n1 1\\n1 0'\nassert solution('1 1 1') == 'YES\\n1 0\\n1 1\\n1 0'\nassert solution('1 1 1') == 'YES\\n1 0\\n1 1\\n1 0'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == 'YES'\nassert solution('''10 4''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''10 4''') == 'NO'\nassert solution('''1 1''') == 'YES'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 8') == 'biceps'\nassert solution('3\\n5 1 10') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\nassert solution('1\\n1') == 'chest'\nassert solution('2\\n1 1') == 'chest'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 4 4\\n') == '2'\nassert solution('4\\n5 4 5 5\\n') == '0'\nassert solution('4\\n5 3 3 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '1'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(121) == \"6\"\nassert solution(12) == \"3\"\nassert solution(10) == \"1\"\nassert solution(100) == \"1\"\nassert solution(1000) == \"1\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0 6\n2 3''') == 'YES'\nassert solution('''1 1 3 6\n1 5''') == 'NO'\nassert solution('''0 0 0 6\n2 3''') == 'YES'\nassert solution('''1 1 3 6\n1 5''') == 'NO'\nassert solution('''0 0 0 6\n2 3''') == 'YES'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''97''') == '2'\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('233 233 10007 1') == '1'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2''') == '3'\nassert solution('''8 16''') == '31'\nassert solution('''1 1''') == '0'\nassert solution('''1 2''') == '3'\nassert solution('''1 1''') == '0'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''999999999999999999 999999999999999986''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('1\\n0\\n') == '0'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2\n''') == '2'\nassert solution('''3 17\n10 10 10\n''') == '3'\nassert solution('''1 9\n10\n''') == '-1'\nassert solution('''2 3\n1 2\n''') == '2'\nassert solution('''3 17\n10 10 10\n''') == '3'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4'\nassert solution('''3 1\n0 0 0\n''') == '1'\nassert solution('''4 6\n2 4 3 5\n''') == '0'\nassert solution('''4 1\n2 4 3 5\n''') == '2 4 3 5'\nassert solution('''4 1\n2 4 3 5\n''') == '2 4 3 5'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '36'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''toosmallword''') == 'NO'\nassert solution('''TheQuickBrownFoxJumpsOverTheLazyDog''') == 'YES'\nassert solution('''toosmallword''') == 'NO'\nassert solution('''TheQuickBrownFoxJumpsOverTheLazyDog''') == 'YES'\nassert solution('''toosmallword''') == 'NO'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('0:0') == '0:0'\nassert solution('0:0') == '0:0'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == 'YES'\nassert solution('''4 5\n10100\n01000\n00110\n00101''') == 'NO'\nassert solution('''4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\nassert solution('''4 5\n10100\n01000\n00110\n00101\n''') == 'NO'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n4 2\\n6 4') == '0'\nassert solution('1\\n2 3\\n4 4\\n') == '-1'\nassert solution('3\\n1 4\\n2 3\\n4 4\\n') == '1'\nassert solution('3\\n1 4\\n2 3\\n4 4\\n') == '1'\nassert solution('3\\n1 4\\n2 3\\n4 4\\n') == '1'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n-1 -1\\n2 -1') == 'Yes'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'No'\nassert solution('3\\n1 2\\n2 1\\n4 60') == 'Yes'\nassert solution('3\\n1 2\\n2 1\\n4 60\\n-1 1') == 'No'\nassert solution('3\\n1 2\\n2 1\\n4 60\\n-1 1\\n-2 2') == 'No'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1 3 45\\n1"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ba 3\\nabc 4\\ncbaa 5') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('ba 3\\nabc 4\\ncbaa 5\\n') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\nassert solution(\"nineteenineteen\") == 2\nassert solution(\"nineteenineteen\") == 2\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n6 1\n1 6\n1 1''') == 'YES'\nassert solution('''2 2\n4 4\n4 5\n5 4\n4 4''') == 'NO'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'YES'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'NO'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9''') == 'NO'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''233''') == '77 77 79'\nassert solution('''233''') == '77 77 79'\nassert solution('''233''') == '77 77 79'\nassert solution('''233''') == '77 77 79'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n3 4 3 2 1\\n6 8') == '3'\nassert solution('5\\n0 3 3 4 2\\n3 10') == '4'\nassert solution('2\\n2 5\\n3 6\\n') == '0'\nassert solution('2\\n2 5\\n3 6\\n') == '0'\nassert solution('2\\n2 5\\n3 6\\n') == '0'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'\nassert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''9\n2\n3\n1\n''') == '6'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''1''') == '1 1'\nassert solution('''10''') == '10 1'\nassert solution('''100''') == '10 1'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''5 2\n8 7 6\nrrrr''') == '27'\nassert solution('''5 2\n8 7 6\nrrrr''') == '27'\nassert solution('''5 2\n8 7 6\nrrrr''') == '27'\nassert solution('''5 2\n8 7 6\nrrrr''') == '27'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == 4\nassert solution('2 1 2') == 7\nassert solution('3 5 2') == 11\nassert solution('1000000000 1000000000 1000000000') == 4000000000\nassert solution('2 2 1') == 6\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 5 18 4''') == '4 1'\nassert solution('''5 3 5 16 4''') == '-1'\nassert solution('''5 3 5 16 4''') == '-1'\nassert solution('''5 3 5 16 4''') == '-1'\nassert solution('''5 3 5 16 4''') == '-1'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('codeforces') == 'NO'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '4'\nassert solution('7 0\\n') == '0'\nassert solution('3 1\\n1 3\\n') == '1'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n') == '16'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n') == '16'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\nassert solution('''2 2\n100 200\n1 2\n''') == '400'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 40 60 80 100''') == '4900'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''119 119 119 119 119'''\n    '''0 0 0 0 0'''\n    '''10 0''') == '4930'\n'''\n\n'''"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 10\n11 5\n9 4\n3 12\n''') == 'Possible'\nassert solution('''2 3\n2 4 5\n4 5 6\n3 6 7\n8 10 11\n''') == 'Impossible'\nassert solution('''3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\n''') == 'Possible'\nassert solution('''3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\n''') == 'Possible'\nassert solution('''3 2\n1 3\n2 4\n5 10\n3 1\n3 6\n4 8\n''') == 'Possible'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 1 9\n''') == '1'\nassert solution('''4 20\n10 3 6 3\n''') == '0'\nassert solution('''4 20\n10 3 6 3\n''') == '0'\nassert solution('''4 20\n10 3 6 3\n''') == '0'\nassert solution('''4 20\n10 3 6 3\n''') == '0'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 5\n2 6\n3 7\n''') == '1 2 3'\nassert solution('''10\n1 2\n1 3\n1 5\n''') == '2 3 5'\nassert solution('''6\n1 3\n2 2\n2 2\n''') == '2 2 2'\nassert solution('''10\n1 2\n1 3\n1 5\n''') == '2 2 2'\nassert solution('''6\n1 3\n2 2\n2 2\n''') == '2 2 2'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 4 5 6 7''') == 'UP'\nassert solution('''7\n12 13 14 15 14 13 12''') == 'DOWN'\nassert solution('''1\n8''') == '-1'\nassert solution('''2\n1 2''') == '-1'\nassert solution('''3\n1 2 3''') == '-1'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('ua') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''\n..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\nassert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''\n..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\nassert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '-1'\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3\\n4 7\\n8 11\\n2\\n') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9\\n') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\nassert solution('1\\n1 7\\n4\\n') == '1'\nassert solution('1\\n1 7\\n4\\n') == '1'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('CODEWAITFORITFORCES') == 'YES'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\nassert solution('5') == '10'\nassert solution('6') == '18'\nassert solution('7') == '22'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13''') == '17'\nassert solution('''4''') == '4'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2 1 4 2\\n') == '2'\nassert solution('5 2\\n2 2 4 5 3\\n') == '-1'\nassert solution('3 10\\n1 2 3\\n') == '4'\nassert solution('3 10\\n1 2 3\\n') == '-1'\nassert solution('3 10\\n1 2 3\\n') == '-1'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''2 10\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''2 10\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('1 2') == '-1'\nassert solution('1 2 3') == '-1'\nassert solution('1 2 3 4') == '-1'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\nassert solution('aabcd') == 'abcba'\nassert solution('aabcd') == 'abcba'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'White'\nassert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Black'\nassert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\nassert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\nassert solution('rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''9 3\n0001000100\n''') == '1 3 2 3'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11\n-1 2''') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('''11\n-1 2\n-1 2''') == '-1'\nassert solution('''11\n-1 2\n-1 2\n-1 2''') == '-1'\nassert solution('''11\n-1 2\n-1 2\n-1 2\n-1 2''') == '-1'\nassert solution('''11\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2\n-1 2"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('10') == '-1'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''0 0 4''') == '7.25298806364175601379'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n3 1 2\n''') == '3'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('reading\\nreading\\n') == '1'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == '8'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\nassert solution('''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == '93'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\nassert solution('15 2') == '2'\nassert solution('15 2') == '2'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\nXXX\nXXX''') == 'YES'\nassert solution('''2 2\n.X\nXX''') == 'NO'\nassert solution('''5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'YES'\nassert solution('''5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'NO'\nassert solution('''5 5\n.....\n..X..\n.....\n.....\n.....\n''') == 'NO'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 -1\\n1 1\\n1 2\\n') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\nassert solution('1 1\\n1 2\\n1 3\\n') == '1'\nassert solution('1 1\\n1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == 'YES'\nassert solution('''2 1''') == 'YES'\nassert solution('''1 2''') == 'NO'\nassert solution('''1 2\n1 3''') == 'NO'\nassert solution('''1 2\n1 3\n2 3''') == 'YES'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3 4\ncodeforces\nfor\n1 3\n3 10\n5 6\n5 7''') == '0\\n1\\n0\\n1'\nassert solution('''15 2 3\nabacabadabacaba\nba\n1 15\n3 4\n2 14''') == '4\\n0\\n3'\nassert solution('''3 5 2\naaa\nbaaab\n1 3\n1 1''') == '0\\n0\\n3'\n'''\n'''\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nBBW\n''') == '1\\n2\\n'\nassert solution('''5\nBWBWB\n''') == '3\\n1 1 1\\n'\nassert solution('''4\nWWWW\n''') == '0\\n4\\n1 1 1\\n'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3\\n'\nassert solution('''14\n
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 4 5\") == \"()\"\nassert solution(\"12 5 3\") == \"(()())\"\nassert solution(\"8 8 8\") == \"()()\"\nassert solution(\"(())()\") == \"()()\"\nassert solution(\"(()(()))\") == \"()()\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n2\n> 100 Y\n< -100 Y\n''') == 'Impossible'\nassert solution('''\n2\n> 100 Y\n< -100 Y\n''') == 'Impossible'\nassert solution('''\n2\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n2\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('''9 8\nYES NO''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('''3 2\nNO NO''') == 'Na Na Na'\nassert solution('''3 2\nNO NO''') == 'Na Na Na'\nassert solution('''3 2\nNO NO''') == 'Na Na Na'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == 'bb\\nww'\nassert solution('''3''') == 'bb\\nww\\nbb'\nassert solution('''4''') == 'bb\\nww\\nbb\\nbb'\nassert solution('''5''') == 'bb\\nww\\nbb\\nbb\\nbb'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('1011') == 'No'\nassert solution('10001') == 'No'\nassert solution('10101') == 'No'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''5\n1 3 5 6 8''') == '2'\nassert solution('''3\n1 5 3''') == '1'\nassert solution('''3\n1 5 3''') == '1'\nassert solution('''3\n1 5 3''') == '1'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('1 1000000000') == '0'\nassert solution('1 1000000000') == '0'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\nassert solution('1000 1001') == 'Yes'\nassert solution('1000 1001') == 'Yes'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8') == '1'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('<><') == 0\nassert solution('<<><') == 2\nassert solution('<><<<><') == 3\nassert solution('<<><<<><') == 4\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\nassert solution('''4\n100003 100004 100005 100006''') == '10000800015'\nassert solution('''4\n1000000000 1000000000 1000000000 1000000000''') == '1000000000000000'\nassert solution('''4\n1000000000 1000000000 1000000000 1000000000''') == '1000000000000000'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\nab\\nde\\naj') == '47'\nassert solution('5\\nabcdef\\ngij\\nbdef\\naccbd\\ng') == '136542'\nassert solution('3\\naa\\njj\\naa') == '44'\nassert solution('3\\naa\\njj\\naa') == '44'\nassert solution('3\\naa\\njj\\naa') == '44'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('ABBA') == 'YES'\nassert solution('ABBABA') == 'YES'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\nassert solution('''5\n1 1 1 3 3\n1\n15\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n1\n15\n''') == 'NO'\nassert solution('''5\n1 2 3 4 5\n2\n1 6\n''') == 'NO'\nassert solution('''5\n1 2 3 4 5\n2\n1 6\n''') == 'NO'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n80 7 16 4 48\\n') == '16 3\\n'\nassert solution('4\\n21 5 3 33\\n') == '1 4\\n'\nassert solution('4\\n21 5 3 33\\n') == '1 4\\n'\nassert solution('4\\n21 5 3 33\\n') == '1 4\\n'\nassert solution('4\\n21 5 3 33\\n') == '1 4\\n'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('10 10') == '0'\nassert solution('10 100') == '1'\nassert solution('10 1000') == '9'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\nassert solution('''3\n101 99 100''') == '2'\nassert solution('''4\n101 99 100 100''') == '2'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\nNYNNY\n''') == 'YES'\nassert solution('''6 1\n????NN\n''') == 'NO'\nassert solution('''6 1\nNNNNNN\n''') == 'NO'\nassert solution('''6 1\nNNNNNN\n''') == 'YES'\nassert solution('''6 1\nNNNNNN\n''') == 'YES'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'YES'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2084 2214\nsubscriber 2833 2749\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2084 2214\nsubscriber 2833 2749\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''3\nBudAlNik 2084 2214\nsubscriber 2833 2749\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('100000000') == 4\nassert solution('101') == 2\nassert solution('10100') == 3\nassert solution('10101') == 1\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n7 11\n4 7\n''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '3'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n''') == '4'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n5 5\\n2 2') == 'YES'\nassert solution('2 2\\n5 6\\n2 2') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'NO'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n-1\n?\n''') == 'Yes'\nassert solution('''2 100\n-10000\n0\n1\n''') == 'Yes'\nassert solution('''4 5\n?\n1\n?\n1\n?\n''') == 'No'\nassert solution('''4 5\n-1\n-1\n-1\n-1\n''') == 'No'\nassert solution('''4 5\n-1\n-1\n-1\n-1\n''') == 'No'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''14''') == '6'\nassert solution('''20''') == '15'\nassert solution('''8192''') == '8191'\nassert solution('''14''') == '6'\nassert solution('''20''') == '15'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n100 200 100\n''') == 'YES'\n\nassert solution('''4\n100 100 100 200\n''') == 'NO'\n\nassert solution('''5\n100 100 100 100 100\n''') == 'YES'\n\nassert solution('''6\n100 100 100 100 100 100\n''') == 'NO'\n\nassert solution('''7\n100 100 100 100 100 100 100\n''') == 'NO'"
    },
    {
        "number": 431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0010\n0100''') == '5'\nassert solution('''3 4\n001000\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010\n000010"
    },
    {
        "number": 432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 -5') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\nassert solution('5 1 3') == '4'\nassert solution('3 2 7') == '3'\n"
    },
    {
        "number": 434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n8 6 4 2 1 4 7 10 2''') == '3'\nassert solution('''9\n-1 6 -1 2 -1 4 7 -1 2''') == '3'\nassert solution('''5\n-1 -1 -1 -1 -1''') == '1'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\nassert solution('''7\n-1 -1 4 5 1 2 3''') == '2'\n"
    },
    {
        "number": 435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nabba\n''') == '4'\nassert solution('''8 1\naabaabaa\n''') == '5'\nassert solution('''8 1\naabaabaa\n''') == '5'\nassert solution('''8 1\naabaabaa\n''') == '5'\nassert solution('''8 1\naabaabaa\n''') == '5'\n"
    },
    {
        "number": 436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n100 50 50''') == '2\\n1 2'\nassert solution('''3\n80 60 60''') == '0\\n1 2'\nassert solution('''2\n6 5''') == '1\\n1 2'\nassert solution('''4\n51 25 99 25''') == '3\\n1 2 4'\nassert solution('''4\n51 25 99 25''') == '3\\n1 2 4'\n"
    },
    {
        "number": 437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.500000000000'\nassert solution('3') == '2.000000000000'\nassert solution('4') == '2.500000000000'\nassert solution('5') == '3.000000000000'\n"
    },
    {
        "number": 438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''9''') == '3'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n42''') == '10'\nassert solution('''1\n58''') == '0'\nassert solution('''98765432\n23456789''') == '23456789'\nassert solution('''4\n4''') == '0'\nassert solution('''4\n4\n4\n4''') == '0'\n"
    },
    {
        "number": 440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('weird') == 'werd'\nassert solution('word') == 'word'\nassert solution('aaeaa') == 'a'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\n"
    },
    {
        "number": 441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('6 2 3') == '4'\nassert solution('11 3 10') == '7'\nassert solution
    },
    {
        "number": 442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 1''') == '2\\n1 2'\nassert solution('''2\n5 5''') == '-1'\nassert solution('''1\n10''') == '-1'\nassert solution('''3\n1 2 1''') == '2\\n1 2'\nassert solution('''2\n5 5''') == '-1'\n"
    },
    {
        "number": 444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''4''') == '2 2'\nassert solution('''27''') == '3 9 9'\nassert solution('''27''') == '3 9 9'\nassert solution('''27''') == '3 9 9'\n"
    },
    {
        "number": 445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 3\n''') == '2'\nassert solution('''2\n2 2\n''') == '1'\nassert solution('''3\n2 1 1\n''') == '3'\nassert solution('''3\n2 1 1\n''') == '1'\nassert solution('''3\n2 1 1\n''') == '1'\n"
    },
    {
        "number": 446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\n"
    },
    {
        "number": 447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6\\n10\\n99\\n') == '8'\nassert solution('2 0\\n1\\n9\\n') == '4'\nassert solution('19 7\\n1000\\n9999\\n') == '6'\nassert solution('2 0\\n1\\n9\\n') == '4'\nassert solution('19 7\\n1000\\n9999\\n') == '6'\n"
    },
    {
        "number": 448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3 1 4 2') == '4'\nassert solution('2 4\\n1 1 2 2 3 3') == '6'\nassert solution('3 4\\n1 1 2 2 3 3') == '6'\nassert solution('4 4\\n1 1 2 2 3 3') == '6'\nassert solution('5 4\\n1 1 2 2 3 3') == '6'\n"
    },
    {
        "number": 449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('125') == '3'\nassert solution('43') == '5'\nassert solution('1000000000') == '10000000'\nassert solution('1000000000') == '10000000'\nassert solution('1000000000') == '10000000'\n"
    },
    {
        "number": 450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '0'\nassert solution('3 2') == '4'\nassert solution('4 1') == '6'\nassert solution('7 4') == '328'\n"
    },
    {
        "number": 451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n4 3 4 1 6\nRROWW''') == '11'\nassert solution('''5 2\n10 20 14 20 11\nRRRRR''') == '-1'\nassert solution('''11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWOORWORROW''') == '28'\nassert solution('''11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWRRRR''') == '-1'\nassert solution('''11 5\n5 6 3 2 3 4 7 5 4 5 6\nRWRRRR''') == '-1'\n"
    },
    {
        "number": 452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 4\\n2\\n2 4\\n') == 'YES'\nassert solution('9 4\\n3\\n2 3 1\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\nassert solution('9 4\\n3\\n1 2 4\\n') == 'NO'\n"
    },
    {
        "number": 453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"||+|=|||||\") == \"|||+|=||||\"\nassert solution(\"|||||+||=||\") == \"||||+||=||\"\nassert solution(\"||||+||=||\") == \"||||+||=||\"\nassert solution(\"||||||+||=||\") == \"||||||+||=||\"\nassert solution(\"||||||+||=||\") == \"||||||+||=||\"\n"
    },
    {
        "number": 454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n-1 0\\n0 3\\n2 -1'\n) == '2\\n1 2\\nRL\\nUU\\nDR'\n\nassert solution(\n    '3\\n-1 0\\n0 3\\n2 -1'\n) == '2\\n1 2\\nRL\\nUU\\nDR'\n\nassert solution(\n    '3\\n-1 0\\n0 3\\n2 -1'\n) == '2\\n1 2\\nRL\\nUU\\nDR'\n\nassert solution(\n    '3\\n-1 0\\n0 3\\n2 -1'\n) == '2\\n1 2\\nRL\\nUU\\nDR'\n\nassert solution(\n    '3\\n-1 0\\n0 3\\n2 -1'\n) == '2\\n1 2\\nRL\\nUU\\nDR'"
    },
    {
        "number": 456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\nassert solution('ogoogoogo') == '*********'\nassert solution('aogogob') == 'a***b'\nassert solution('ogogmgogogogo') == '***gmg***'\n"
    },
    {
        "number": 457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2') == '2'\nassert solution('20190929 1605') == '363165664'\nassert solution('947 987654321987654321') == '593574252'\nassert solution('947 987654321987654321 947 987654321987654321') == '593574252'\nassert solution
    },
    {
        "number": 458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 8''') == '3'\nassert solution('''1 2 -18''') == '0'\nassert solution('''2 2 -1''') == '4'\nassert solution('''2 2 -1''') == '4'\nassert solution('''2 2 -1''') == '4'\n"
    },
    {
        "number": 459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5 4 6 1 3 6 2 5 5 1 2 3 5 3 1 1 2 4 6 6 4 3 4') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'YES'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'NO'\nassert solution('5 3 5 3 2 5 2 5 6 2 6 2 4 4 4 4 1 1 1 1 6 3 6 3') == 'NO'\n"
    },
    {
        "number": 460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n3\n1''') == '3'\nassert solution('''1\n2\n3\n5''') == '0'\nassert solution('''2\n2\n3\n5''') == '3'\nassert solution('''3\n2\n3\n5''') == '3'\nassert solution('''3\n2\n3\n5''') == '3'\n"
    },
    {
        "number": 462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 1 4') == '6'\nassert solution('30 20 10') == '20'\nassert solution('30 20 10') == '20'\nassert solution('30 20 10') == '20'\nassert solution('30 20 10') == '20'\n"
    },
    {
        "number": 463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2 3 4 5') == '-1'\nassert solution('1 2 3 4 5 6') == '-1'\nassert solution('1 2 3 4 5 6 7') == '-1'\n"
    },
    {
        "number": 464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n......\n..*...\n.****.\n..*...\n..*...\n''') == 'YES'\nassert solution('''3 5\n..*..\n****.\n.*...\n''') == 'NO'\nassert solution('''7 7\n.......\n...*...\n..****.\n...*...\n...*...\n.......\n.*.....\n''') == 'NO'\nassert solution('''5 6\n..**..\n..**..\n******\n..**..\n..**..\n''') == 'NO'\nassert solution('''3 7\n.*...*.\n***.***\n.*...*.\n''') == 'NO'\n"
    },
    {
        "number": 465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 10\n7 2\n1''') == '2'\nassert solution('''2 2\n2 1\n2''') == '0'\nassert solution('''1 10\n7 2\n2''') == '0'\nassert solution('''1 10\n7 2\n1''') == '0'\nassert solution('''1 10\n7 2\n1''') == '0'\n"
    },
    {
        "number": 467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'Impossible'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'YXWVUTGHIJKLM'\nassert solution('BUVTYZFQSNRIWOXXGJLKACPEMDH') == 'ZABCDEFSRQPON'\n"
    },
    {
        "number": 468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8') == '>'\nassert solution('10 3') == '<'\nassert solution('6 6') == '='\nassert solution('10 9') == '<'\nassert solution('10 10') == '='\n"
    },
    {
        "number": 469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3 7 3 20') == '26'\nassert solution('7 9 3 1 8') == '28'\nassert solution('10 10 10 10 10') == '20'\nassert solution('7 3 7 3 1 8') == '28'\nassert solution('7 9 3 1 8') == '28'\n"
    },
    {
        "number": 471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 10\n1 7 12''') == '7'\nassert solution('''2 0\n11 -10''') == '10'\nassert solution('''5 0\n0 0 1000 0 0''') == '0'\nassert solution('''5 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0''') == '0'\nassert solution('''5 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0 0 1000 0 0\n0"
    },
    {
        "number": 472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('110') == '10'\nassert solution('4') == '-1'\nassert solution('1') == '1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('05:50') == '00:06'\nassert solution('05:44') == '00:06'\nassert solution('00:00') == '23:00'\nassert solution('00:01') == '00:01'\nassert solution('00:00') == '00:01'\n"
    },
    {
        "number": 474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6 1 6 6 0''') == 2\nassert solution('''5\n6 1 6 6 0''') == 2\nassert solution('''5\n6 1 6 6 0''') == 2\nassert solution('''5\n6 1 6 6 0''') == 2\nassert solution('''5\n6 1 6 6 0''') == 2\n"
    },
    {
        "number": 475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('14') == 'NO'\nassert solution('1414') == 'NO'\nassert solution('141414') == 'NO'\n"
    },
    {
        "number": 477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7 1 3 2 2''') == '2'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\nassert solution('''5 5 2 3 1 1''') == 'Poor Inna and pony!'\n"
    },
    {
        "number": 478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('b') == 1\nassert solution('ba') == 1\nassert solution('baa') == 2\nassert solution('baab') == 2\n"
    },
    {
        "number": 479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 20\n10 50 100 500 1000 5000\n8\n4200\n100000\n95000\n96000\n99000\n10100\n2015\n9950''') == '6\\n20\\n19\\n20\\n-1\\n3\\n-1\\n-1'\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15''') == '1\\n1\\n1\\n2\\n2\\n2\\n2\\n-1'\nassert solution('''5 2\n1 2 3 5 8\n8\n1\n3\n5\n7\n9\n11\n13\n15\n17\n19\n21\n23\n25\n27\n29\n31\n33\n35\n37\n39\n41\n43\n45\n47\n49\n51\n53\n55\n57\n59\n61\n63\n65\n67\n69\n71\n73\n75\n77\n79\n81\n83\n85\n87\n89\n91\n93\n95\n97\n99\n101\n103\n105\n107\n109\n111\n113\n115\n117\n119\n121\n123\n125\n127\n129\n131\n133\n135\n137\n139\n141\n143\n145\n147\n149\n151\n153\n155\n157\n159\n161\n163\n165\n167\n169\n171\n173\n175\n177\n179\n181\n183\n185\n187\n189\n191\n193\n195\n197\n199\n201\n203\n205\n207\n209\n211\n213\n215\n217\n219\n221\n223\n225\n227\n229\n231\n233\n235\n237\n239\n241\n243\n245\n247\n249\n251\n253\n255\n257\n259\n261\n263\n265\n267\n269\n271\n273\n275\n277\n279\n281\n283\n285\n287\n289\n291\n293\n295\n297\n299\n301\n303\n305\n307\n309\n311\n313\n315\n317\n319\n321\n323\n325\n327\n329\n331\n333\n335\n337\n339\n341\n343\n345\n347\n349\n351\n353\n355\n357\n359\n361\n363\n365\n367\n369\n371\n373\n375\n377\n379\n381\n383\n385\n387\n389\n391\n393\n395\n397\n399\n401\n403\n405\n407\n409\n411\n413\n415\n417\n419\n421\n423\n425\n427\n429\n431\n433\n435\n437\n439\n441\n443\n445\n447\n449\n451\n453\n455\n457\n459\n461\n463\n465\n467\n469\n471\n473\n475\n477\n479\n481\n483\n485\n487\n489\n491\n493\n495\n497\n499\n501\n503\n505\n507\n509\n511\n513\n515\n517\n519\n521\n523\n525\n527\n529\n531\n533\n535\n537\n539\n541\n543\n545\n547\n549\n551\n553\n555\n557\n559\n561\n563\n565\n567\n569\n571\n573\n575\n577\n579\n581\n583\n585\n587\n589\n591\n593\n595\n597\n599\n601\n603\n605\n607\n609\n611\n613\n615\n617\n619\n621\n623\n625\n627\n629\n631\n633\n635\n637\n639\n641\n643\n645\n647\n649\n651\n653\n655\n657\n659\n661\n663\n665\n667\n669\n671\n673\n675\n677\n679\n681\n683\n685\n687\n689\n691\n693\n695\n697\n699\n701\n703\n705\n707\n709\n711\n713\n715\n717\n719\n721\n723\n725\n727\n729\n731\n733\n735\n737\n739\n741\n743\n745\n747\n749\n751\n753\n755\n757\n759\n761\n763\n765\n767\n769\n771\n773\n775\n777\n779\n781\n783\n785\n787\n789\n791\n793\n795\n797\n799\n801\n803\n805\n807\n809\n811\n813\n815\n817\n819\n821\n823\n825\n827\n829\n831\n833\n835\n837\n839\n841\n843\n845\n847\n849\n851\n853\n855\n857\n859\n861\n863\n865\n867\n869\n871\n873\n875\n877\n879\n881\n883\n885\n887\n889\n891\n893\n895\n897\n899\n901\n903\n905\n907\n909\n911\n913\n915\n917\n919\n921\n923\n925\n927\n929\n931\n933\n935\n937\n939\n941\n943\n945\n947\n949\n951\n953\n955\n957\n959\n961\n963\n965\n967\n969\n971\n973\n975\n977\n979\n981\n983\n985\n987\n989\n991\n993\n995\n997\n999\n1001\n1003\n1005\n1007\n1009\n1011\n1013\n1015\n1017\n1019\n1021\n1023\n1025\n1027\n1029\n1031\n1033\n1035\n1037\n1039\n1041\n1043\n1045\n1047\n1049\n1051\n1053\n1055\n1057\n1059\n1061\n1063\n1065\n1067\n1069\n1071\n1073\n1075\n1077\n1079\n1081\n1083\n1085\n1087\n1089\n1091\n1093\n1095\n1097\n1099\n1101\n1103\n1105\n1107\n1109\n1111\n1113\n1115\n1117\n1119\n1121\n1123\n1125\n1127\n1129\n1131\n1133\n1135\n1137\n1139\n1141\n1143\n1145\n1147\n1149"
    },
    {
        "number": 480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 4\n3 4\n1 1\n''') == '8'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\nassert solution('''5 4 0\n1 2\n3 1\n''') == '7'\n"
    },
    {
        "number": 481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nn, x = map(int, input().split())\n\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if i * j == x:\n            print(1)\n            break\n    else:\n        print(0)\n"
    },
    {
        "number": 482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3''') == 'java'\nassert solution('''6 6''') == 'python'\nassert solution('''5 2''') == 'phphp'\nassert solution('''5 2''') == 'phphp'\nassert solution('''5 2''') == 'phphp'\n"
    },
    {
        "number": 483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nRLRL\n2 4 6 10\n''') == '1'\n\nassert solution('''3\nLLR\n40 50 60\n''') == '-1'\n\nassert solution('''4\nLLRL\n2 4 6 10\n''') == '1'\n\nassert solution('''4\nLLRL\n2 4 6 10\n''') == '-1'\n\nassert solution('''4\nLLRL\n2 4 6 10\n''') == '1'"
    },
    {
        "number": 484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 2''') == '4'\nassert solution('''1 2\n2 1''') == '4'\nassert solution('''2 10 9''') == '56'\nassert solution('''4 10 9''') == '0'\nassert solution('''3 10 10''') == '0'\n"
    },
    {
        "number": 485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n0 1\n0 2\n1 0\n1 1\n1 2\n2 0\n2 1\n2 2''') == '1 1'\nassert solution('''2\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2''') == '0 3'\nassert solution('''2\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2''') == '0 3'\nassert solution('''2\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2''') == '0 3'\nassert solution('''2\n0 0\n0 1\n0 2\n0 3\n1 0\n1 2\n2 0\n2 1\n2 2''') == '0 3'\n"
    },
    {
        "number": 486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('390') == '216'\nassert solution('7') == '7'\nassert solution('1000000000') == '387420489'\nassert solution('1000000000') == '387420489'\nassert solution('1000000000') == '387420489'\n"
    },
    {
        "number": 487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabb') == '2'\nassert solution('aabcaa') == '1'\nassert solution('aabcaa') == '1'\nassert solution('aabcaa') == '1'\nassert solution('aabcaa') == '1'\n"
    },
    {
        "number": 489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '4'\nassert solution('1 3 2 3 4') == '2'\nassert solution('1 3 3 1 3 2') == '1'\nassert solution('1 3 3 1 3 2') == '1'\nassert solution('1 3 3 1 3 2') == '1'\n"
    },
    {
        "number": 490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\n"
    },
    {
        "number": 491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2230') == '2230'\nassert solution('-10') == '0'\nassert solution('-100003') == '-100003'\nassert solution('-100000') == '-100000'\nassert solution('-1000000') == '-1000000'\n"
    },
    {
        "number": 492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"> ^\") == \"cw\"\nassert solution(\"< ^\") == \"ccw\"\nassert solution(\"^ >\") == \"undefined\"\nassert solution(\"< ^\") == \"undefined\"\nassert solution(\"^ v\") == \"undefined\"\n"
    },
    {
        "number": 493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".L.R...LR..L..\") == \"4\"\nassert solution(\"R....\") == \"0\"\nassert solution(\".\") == \"1\"\nassert solution(\"L....\") == \"1\"\nassert solution(\"L.L.R.R.\") == \"0\"\n"
    },
    {
        "number": 494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5\\n2 3 1 4 4\\n') == '3 1 2 4'\nassert solution('3 3\\n3 1 2\\n') == '-1'\nassert solution('3 3\\n3 1 2\\n') == '-1'\nassert solution('3 3\\n3 1 2\\n') == '-1'\nassert solution('3 3\\n3 1 2\\n') == '-1'\n"
    },
    {
        "number": 495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1990 1''') == '9190'\nassert solution('''300 0''') == '300'\nassert solution('''1034 2''') == '3104'\nassert solution('''9090000078001234 6''') == '9907000008001234'\nprint('Testcases passed')\n"
    },
    {
        "number": 496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('836 624 412 200') == '-12'\nassert solution('1 334 667 1000') == '1333'\nassert solution('836 624 412 200') == '-12'\n"
    },
    {
        "number": 497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 2 3\\n') == '4'\nassert solution('3\\n1 2 1\\n') == '1'\nassert solution('7\\n1 1 3 1 1 1\\n') == '4'\nassert solution('7\\n1 1 3 1 1 1\\n') == '4'\nassert solution('7\\n1 1 3 1 1 1\\n') == '4'\n"
    },
    {
        "number": 498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 9''') == '2 2 L'\nassert solution('''4 3 24''') == '4 3 R'\nassert solution('''2 4 4''') == '1 2 R'\nassert solution('''2 4 4''') == '1 2 R'\nassert solution('''2 4 4''') == '1 2 R'\n"
    },
    {
        "number": 499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RB') == 'G'\nassert solution('GRG') == 'BR'\nassert solution('BBBBB') == 'B'\nassert solution('RRRRR') == 'RR'\nassert solution('RRRRR') == 'RR'\n"
    },
    {
        "number": 500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == 'YES'\nassert solution('''6\n1 2\n2 3\n2 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == 'YES'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == 'NO'\nassert solution('''4\n1 2\n2 3\n3 4\n1 2\n''') == 'NO'\n"
    },
    {
        "number": 501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('5 14') == '105'\nassert solution('88005553535 99999999999') == '761141116'\nassert solution('1 2') == '3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '82913'\n"
    },
    {
        "number": 502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom math import atan2, degrees"
    },
    {
        "number": 503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 2 2 4\n''') == '4'\nassert solution('''3 1\n1 1 1\n''') == '1'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\nassert solution('''10 3\n1 2 6 2 3 6 9 18 3 9\n''') == '6'\n"
    },
    {
        "number": 504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == '27'\nassert solution('''3 0 3''') == '26'\nassert solution('''10 8\n7 11\n5 2''') == '26'\nassert solution('''10 8\n7 11\n5 2\n10 15\n6 1''') == '27'\nassert solution('''10 8\n7 11\n5 2\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n10 15\n6 1\n"
    },
    {
        "number": 505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n.**\nX..\n''') == 'RL'\nassert solution('''5 6 14\n..***.\n*...X.\n..*...\n..*.**\n....*.\n''') == 'DLDDLLLRRRUURU'\nassert solution('''3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'\nassert solution('''3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'\nassert solution('''3 3 4\n***\n*X*\n***\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('10 7') == '6'\nassert solution('1000000000000 1') == '1000000000000'\nassert solution('1000000000000 10') == '1000000000000'\nassert solution('1000000000000 1000000000') == '1000000000000'\n"
    },
    {
        "number": 507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''1 2 5 4 3'''\nassert solution('''4''') == '''1 2 3 4'''\nassert solution('''1 2 3 4''') == '''1 2 3 4'''\nassert solution('''1 2 3 4''') == '''1 2 3 4'''\nassert solution('''1 2 3 4''') == '''1 2 3 4'''\n"
    },
    {
        "number": 508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10\\n20\\n30') == 'YES'\nassert solution('3\\n10\\n10\\n10') == 'NO'\nassert solution('3\\n120\\n120\\n120') == 'YES'\nassert solution('3\\n120\\n120\\n120') == 'YES'\nassert solution('3\\n120\\n120\\n120') == 'YES'\n"
    },
    {
        "number": 510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 6 3') == '2'\nassert solution('3 1 5 6') == '8'\nassert solution('8 3 3 2') == '2'\nassert solution('2 3 10 4') == '3'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n0 1\n0 2\n1 0\n1 2\n2 0\n2 1\n2 2''') =='respectable'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0''') == 'ugly'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0''') =='respectable'\nassert solution('''0 0\n1 0\n2 0\n3 0\n4 0\n5 0\n6 0\n7 0\n8 0\n9 0\n10 0\n11 0\n12 0\n13 0\n14 0\n15 0\n16 0\n17 0\n18 0\n19 0\n20 0\n21 0\n22 0\n23 0\n24 0\n25 0\n26 0\n27 0\n28 0\n29 0\n30 0\n31 0\n32 0\n33 0\n34 0\n35 0\n36 0\n37 0\n38 0\n39 0\n40 0\n41 0\n42 0\n43 0\n44 0\n45 0\n46 0\n47 0\n48 0\n49 0\n50 0\n51 0\n52 0\n53 0\n54 0\n55 0\n56 0\n57 0\n58 0\n59 0\n60 0\n61 0\n62 0\n63 0\n64 0\n65 0\n66 0\n67 0\n68 0\n69 0\n70 0\n71 0\n72 0\n73 0\n74 0\n75 0\n76 0\n77 0\n78 0\n79 0\n80 0\n81 0\n82 0\n83 0\n84 0\n85 0\n86 0\n87 0\n88 0\n89 0\n90 0\n91 0\n92 0\n93 0\n94 0\n95 0\n96 0\n97 0\n98 0\n99 0\n100 0\n101 0\n102 0\n103 0\n104 0\n105 0\n106 0\n107 0\n108 0\n109 0\n110 0\n111 0\n112 0\n113 0\n114 0\n115 0\n116 0\n117 0\n118 0\n119 0\n120 0\n121 0\n122 0\n123 0\n124 0\n125 0\n126 0\n127 0\n128 0\n129 0\n130 0\n131 0\n132 0\n133 0\n134 0\n135 0\n136 0\n137 0\n138 0\n139 0\n140 0\n141 0\n142 0\n143 0\n144 0\n145 0\n146 0\n147 0\n148 0\n149 0\n150 0\n151 0\n152 0\n153 0\n154 0\n155 0\n156 0\n157 0\n158 0\n159 0\n160 0\n161 0\n162 0\n163 0\n164 0\n165 0\n166 0\n167 0\n168 0\n169 0\n170 0\n171 0\n172 0\n173 0\n174 0\n175 0\n176 0\n177 0\n178 0\n179 0\n180 0\n181 0\n182 0\n183 0\n184 0\n185 0\n186 0\n187 0\n188 0\n189 0\n190 0\n191 0\n192 0\n193 0\n194 0\n195 0\n196 0\n197 0\n198 0\n199 0\n200 0\n201 0\n202 0\n203 0\n204 0\n205 0\n206 0\n207 0\n208 0\n209 0\n210 0\n211 0\n212 0\n213 0\n214 0\n215 0\n216 0\n217 0\n218 0\n219 0\n220 0\n221 0\n222 0\n223 0\n224 0\n225 0\n226 0\n227 0\n228 0\n229 0\n230 0\n231 0\n232 0\n233 0\n234 0\n235 0\n236 0\n237 0\n238 0\n239 0\n240 0\n241 0\n242 0\n243 0\n244 0\n245 0\n246 0\n247 0\n248 0\n249 0\n250 0\n251 0\n252 0\n253 0\n254 0\n255 0\n256 0\n257 0\n258 0\n259 0\n260 0\n261 0\n262 0\n263 0\n264 0\n265 0\n266 0\n267 0\n268 0\n269 0\n270 0\n271 0\n272 0\n273 0\n274 0\n275 0\n276 0\n277 0\n278 0\n279 0\n280 0\n281 0\n282 0\n283 0\n284 0\n285 0\n286 0\n287 0\n288 0\n289 0\n290 0\n291 0\n292 0\n293 0\n294 0\n295 0\n296 0\n297 0\n298 0\n299 0\n300 0\n301 0\n302 0\n303 0\n304 0\n305 0\n306 0\n307 0\n308 0\n309 0\n310 0\n311 0\n312 0\n313 0\n314 0\n315 0\n316 0\n317 0\n318 0\n319 0\n320 0\n321 0\n322 0\n323 0\n324 0\n325 0\n326 0\n327 0\n328 0\n329 0\n330 0\n331 0\n332 0\n333 0\n334 0\n335 0\n336 0\n337 0\n338 0\n339 0\n340 0\n341 0\n342 0\n343 0\n344 0\n345 0\n346 0\n347 0\n348 0\n349 0\n350 0\n351 0\n352 0\n353 0\n354 0\n355 0\n356 0\n357 0\n358 0\n359 0\n360 0\n361 0\n362 0\n363 0\n364 0\n365 0\n366 0\n367 0\n368 0\n369 0\n370 0\n371 0\n372 0\n373 0\n374 0\n375 0\n376 0\n377 0\n378 0\n379 0\n380 0\n381 0\n382 0\n383 0\n384 0\n385 0\n386 0\n387 0\n388 0\n389 0\n390 0\n391 0\n392 0\n393 0\n394 0\n395 0\n396 0\n397 0\n398 0\n399 0\n400 0\n401 0\n402 0\n403 0\n404 0\n405 0\n406 0\n407 0\n408 0\n409 0\n410 0\n411 0\n412 0\n413 0\n414 0\n415 0\n416 0\n417 0\n418 0\n419 0\n420 0\n421 0\n422 0\n423 0\n424 0\n425 0\n426 0\n427 0\n428 0\n429 0\n430 0\n431 0\n432 0\n433 0\n434 0\n435 0\n436 0\n437 0\n438 0\n439 0\n440 0\n441 0\n442 0\n443 0\n444 0\n445 0\n446 0\n447 0\n448 0\n449 0\n450 0\n451 0\n452 0\n453 0\n454 0\n455 0\n456 0\n457 0\n458 0\n459 0\n460 0\n461 0\n462 0\n463 0\n464 0\n465 0\n466 0\n467 0\n468 0\n469 0\n470 0\n471 0\n472 0\n473 0\n474 0\n475 0\n476 0\n477 0\n478 0\n479 0\n480 0\n481 0\n482 0\n483 0\n484 0\n485 0\n486 0\n487 0\n488 0\n489 0\n490 0\n491 0\n492 0\n493 0\n494 0\n495 0\n496 0\n497 0\n498 0\n499 0\n500 0\n501 0\n502 0\n503 0\n504 0\n505 0\n506 0\n507 0\n508 0"
    },
    {
        "number": 514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n') == 'YES'\nassert solution('2\\n2\\n') == 'NO'\nassert solution('2\\n3\\n') == 'NO'\nassert solution('2\\n4\\n') == 'NO'\n"
    },
    {
        "number": 515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '462'\nassert solution('''6''') == '8080'\nassert solution('''1''') == '-1'\nassert solution('''10''') == '-1'\nassert solution('''100''') == '-1'\n"
    },
    {
        "number": 516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\nabc\nxaybz''') == '2'\nassert solution('''4 10\nabcd\nebceabazcd''') == '1'\nassert solution('''4 10\nabcd\nebceabazcd''') == '2'\nassert solution('''4 10\nabcd\nebceabazcd''') == '2'\nassert solution('''4 10\nabcd\nebceabazcd''') == '2'\n"
    },
    {
        "number": 517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 2''') == '''1 2\n1 3\n3 4\n3 5'''\nassert solution('''8 5 2''') == '''-1\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\nassert solution('''8 4 2''') == '''4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\nassert solution('''8 4 2''') == '''-1\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\nassert solution('''8 4 2''') == '''-1\n4 8\n5 7\n2 3\n8 1\n2 1\n5 6\n1 5'''\n"
    },
    {
        "number": 518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '6.4641016'\nassert solution('6 1') == '1.0000000'\nassert solution('100 100') == '3.2429391'\nassert solution('100 100') == '3.2429391'\nassert solution('100 100') == '3.2429391'\n"
    },
    {
        "number": 519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2050') == '2050'\nassert solution('2\\n2050\\n2050') == '2050'\nassert solution('2\\n2050\\n2050\\n2050') == '2050'\nassert solution('2\\n2050\\n2050\\n2050\\n2050') == '2050'\nassert solution('2\\n2050\\n2050\\n2050\\n2050\\n2050') == '2050'\n"
    },
    {
        "number": 521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\nCY??Y') == 'Yes'\nassert solution('5\\nC?C?Y') == 'Yes'\nassert solution('5\\nC??MM') == 'No'\nassert solution('5\\nC??MM') == 'No'\nassert solution('5\\nC??MM') == 'No'\n"
    },
    {
        "number": 522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 2 5 3') == '72900'\nassert solution('17 97 41 37 11') == '317451037'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\ntab\none\nbat''') == '6'\nassert solution('''4 2\noo\nox\nxo\nxx''') == '6'\nassert solution('''9 4\nabab\nbaba\nabcd\nbcde\ncdef\n"
    },
    {
        "number": 524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4\n2 1 3 1\n2\n420 420\n''') == '1'\nassert solution('''2\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''2\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''2\n4\n2 1 3 1\n2\n420 420\n''') == '2'\nassert solution('''2\n4\n2 1 3 1\n2\n420 420\n''') == '2'\n"
    },
    {
        "number": 526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\nassert solution('''2 3\n0 0\n0 0\n0 0''') == 'NIE'\nassert solution('''2 3\n7 7 7\n7 7 10''') == 'TAK'\n"
    },
    {
        "number": 527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('contest') == '10'\nassert solution('son') == '-1'\nassert solution('contestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontestcontest"
    },
    {
        "number": 528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 3\n3 4\n1 4\n''') == 'YES'\n\nassert solution('''4 4\n3 1\n2 3\n3 4\n1 2\n''') == 'NO'\n\nassert solution('''10 4\n4 3\n5 10\n8 9\n1 2\n''') == 'YES'\n\nassert solution('''3 2\n1 2\n2 3\n''') == 'NO'\n\nassert solution('''3 2\n1 2\n2 3\n3 4\n1 2\n''') == 'NO'"
    },
    {
        "number": 529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AprilFool') == 'AprILFooL'\nassert solution('a') == 'a'\nassert solution('aA') == 'aA'\nassert solution('aAa') == 'aAa'\nassert solution('aAaA') == 'aAaA'\n"
    },
    {
        "number": 530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0111\n0001\n''') == 'First'\nassert solution('''3\n110110\n001001\n''') == 'First'\nassert solution('''4\n01010110\n00101101\n''') == 'Draw'\nassert solution('''4\n01100000\n10010011\n''') == 'Second'\nassert solution('''4\n01100000\n10010011\n''') == 'Draw'\n"
    },
    {
        "number": 531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n-1 1 1 0 0 -1''') == '2'\nassert solution('''3\n100 100 101''') == '3'\nassert solution('''7\n-10 -9 -10 -8 -10 -9 -9''') == '5'\nassert solution('''7\n-10 -9 -10 -8 -10 -9 -9''') == '5'\nassert solution('''7\n-10 -9 -10 -8 -10 -9 -9''') == '5'\n"
    },
    {
        "number": 532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('zeus') == '18'\nassert solution('map') == '35'\nassert solution('ares') == '34'\nassert solution('z') == '1'\nassert solution('a') == '0'\n"
    },
    {
        "number": 533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\nBGGBG''') == 'GBGGB'\nassert solution('''5 2\nBGGBG''') == 'GGBGB'\nassert solution('''4 1\nGGGB''') == 'GGGB'\nassert solution('''4 2\nGGGB''') == 'GGGB'\nassert solution('''4 3\nGGGB''') == 'GGGB'\n"
    },
    {
        "number": 535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1') == '3'\nassert solution('6 2') == '875000008'\nassert solution('60 5') == '237178099'\nassert solution('60 6') == '237178099'\nassert solution('60 7') == '237178099'\n"
    },
    {
        "number": 536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2''') == '101'\nassert solution('''4 8''') == '110110110101'\nassert solution('''4 10''') == '11011011011011'\nassert solution('''1 5''') == '-1'\nassert solution('''1 1''') == '-1'\n"
    },
    {
        "number": 537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''18 2''') == '3 6 9'\nassert solution('''9 10''') == '0 0 9'\nassert solution('''1000000000000 5''') == '83333333333 416666666665 500000000002'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\nassert solution('''1000000000000 499999999999''') == '1 499999999999 500000000000'\n"
    },
    {
        "number": 538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '1'\nassert solution('''10''') == '2'\nassert solution('''1''') == '0'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6\nX...XX\n...XX.\n.X..X.\n......\n1 6\n2 2''') == 'YES'\nassert solution('''5 4\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1''') == 'NO'\nassert solution('''4 7\n..X.XX.\n.XX..X.\nX...X..\nX......\n2 2\n1 6\n''') == 'YES'\nassert solution('''4 7\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1''') == 'NO'\nassert solution('''4 7\n.X..\n...X\nX.X.\n....\n.XX.\n5 3\n1 1''') == 'NO'\n"
    },
    {
        "number": 541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n2\\n-3\\n-4\\n3\\n') =='second'\nassert solution('3\\n-1\\n-2\\n3\\n') == 'first'\nassert solution('2\\n4\\n-4\\n') =='second'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'NO'\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'NO'\nassert solution('''5\n6\nabccba\n2\ncf\n4\nadfa\n8\nabaazaba\n2\nml\n''') == 'YES'\n"
    },
    {
        "number": 545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\nabc\nxyc''') == 'ayd'\nassert solution('''1 0\nc\nb''') == '-1'\nassert solution('''3 2\nabc\nxyc\n''') == 'ayd'\nassert solution('''3 2\nabc\nxyc\n''') == 'ayd'\nassert solution('''3 2\nabc\nxyc\n''') == 'ayd'\n"
    },
    {
        "number": 546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ab\na?a\n2\naaa\naab\n''') == '''YES\nNO\nNO\nYES\n'''\n\nassert solution('''abc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == '''NO\nYES\nNO\nYES\n'''\n\nassert solution('''abc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == '''NO\nYES\nNO\nYES\n'''\n\nassert solution('''abc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == '''NO\nYES\nNO\nYES\n'''\n\nassert solution('''abc\na?a?a*\n4\nabacaba\nabaca\napapa\naaaaax\n''') == '''NO\nYES\nNO\nYES\n'''"
    },
    {
        "number": 547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\ncba\nabc\nbb1\nabC\nABC\nabc\n''') == '1 15'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\nassert solution('''4 100\n11\n22\n1\n2\n22\n''') == '3 4'\n"
    },
    {
        "number": 548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"First\"\n\n\"\"\""
    },
    {
        "number": 549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '2 4'\nassert solution('64') == '8 8'\nassert solution('5') == '1 5'\nassert solution('999999') == '999 1001'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1_wat') == 'Yes'\nassert solution('2_wat') == 'No'\nassert solution('wat_1') == 'No'\nassert solution('000') == 'No'\nassert solution('00') == 'No'\n"
    },
    {
        "number": 551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n7 5 8 6 9') == 'Yes'\nassert solution('5\\n-1 -2 0 0 -5') == 'No'\nassert solution('5\\n1000000000 0 0 0 0') == 'Yes'\nassert solution('5\\n1000000000 0 0 0 0') == 'Yes'\nassert solution('5\\n1000000000 0 0 0 0') == 'Yes'\n"
    },
    {
        "number": 552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\naabbaa\nbaaaab\naaaaa''') == '4'\nassert solution('''5 4\nazaza\nzazaz\nazaz\n''') == '11'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\nassert solution('''9 12\nabcabcabc\nxyzxyzxyz\nabcabcayzxyz\n''') == '2'\n"
    },
    {
        "number": 553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"123465\") == \"2\"\nassert solution(\"123465\") == \"0\"\nassert solution(\"123465\") == \"0\"\n"
    },
    {
        "number": 554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 -2 1 3 -4\n1 2\n4 5\n3 4\n1 4\n''') == '7'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 4\n1 1\n''') == '16'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\nassert solution('''2 2\n-1 -2\n1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n0 2\n2 4\n3 5''') == 'YES'\nassert solution('''3 7\n0 4\n2 5\n6 7''') == 'NO'\nassert solution('''3 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7''') == 'NO'\nassert solution('''3 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7''') == 'NO'\nassert solution('''3 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n6 7\n0 4\n2 5\n"
    },
    {
        "number": 558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 0''') == '1 1'\nassert solution('''2\n1 1''') == '0 1'\nassert solution('''3\n1 0 1''') == '1 1'\nassert solution('''3\n1 1 0''') == '0 1'\nassert solution('''4\n1 0 1 0''') == '1 1'\n"
    },
    {
        "number": 560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 8\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4\nS...\n....\n..S.\n\nOutput\n8\n\n\n\nInput\n3 4"
    },
    {
        "number": 561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 1 7\n''') == '2\\n-2 10\\n'\nassert solution('''1\n10\n''') == '-1\\n'\nassert solution('''4\n4 3 4 5\n''') == '0\\n7\\n0 3 6\\n'\nassert solution('''2\n2 4\n''') == '3\\n0 3 6\\n'\nassert solution('''3\n1 3 5 9\n''') == '1\\n7\\n0 3 6\\n'\n"
    },
    {
        "number": 562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n4 5''') == 'YES'\nassert solution('''4\n1 2\n2 3\n2 3\n1 2''') == 'NO'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1''') == 'YES'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1''') == 'NO'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2 3 4'\nassert solution('10 11') == '-1'\nassert solution('900000000000000009 900000000000000029') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('900000000000000009 900000000000000010 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\nassert solution('900000000000000009 900000000000000010 900000000000000021') == '900000000000000009 900000000000000010 900000000000000021'\n"
    },
    {
        "number": 564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 1 1\n''') == 'YES'\nassert solution('''3 4\n3 1 3\n''') == 'YES'\nassert solution('''3 4\n4 4 4\n''') == 'NO'\nassert solution('''3 4\n1 1 1\n''') == 'YES'\nassert solution('''3 4\n3 1 3\n''') == 'NO'\n"
    },
    {
        "number": 565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 13 9') == '24'\nassert solution('13 3 6') == '9'\nassert solution('13 3 6') == '9'\nassert solution('13 3 6') == '9'\nassert solution('13 3 6') == '9'\n"
    },
    {
        "number": 566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 3 3\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 9''') == '8'\nassert solution('''2\n2 999995''') == '5'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '20'\nassert solution('2') == '680'\nassert solution('3') == '20'\nassert solution('4') == '680'\nassert solution('5') == '20'\n"
    },
    {
        "number": 569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aa') == '1'\nassert solution('koko') == '2'\nassert solution('murat') == '0'\nassert solution('koko') == '2'\nassert solution('koko') == '2'\n"
    },
    {
        "number": 570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('1 1') == 'Vladik'\nassert solution('7 6') == 'Valera'\nassert solution('1 1') == 'Vladik'\n"
    },
    {
        "number": 571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1000000000\n10 -9 -3 5\n''') == '3'\nassert solution('''3 12\n10 -9 -3 5\n''') == '2'\nassert solution('''2 20\n14 -7 19\n''') == '0'\nassert solution('''3 10\n10 -9 -3 5\n''') == '2'\nassert solution('''3 12\n10 -9 -3 5\n''') == '2'\n"
    },
    {
        "number": 573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n') == '2'\nassert solution('2\\n2\\n1\\n') == '1'\n"
    },
    {
        "number": 574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 5''') == '13'\nassert solution('''1 1 5 5''') == '13'\n"
    },
    {
        "number": 575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n4 4\n1 3\n3 1\n''') == 'YES'\nassert solution('''8\n4 4\n2 3\n1 6\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n''') == 'NO'\nassert solution('''8\n3 5\n1 2\n6 1\n''') == 'NO'\n"
    },
    {
        "number": 576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n13 35 77''') == '1001'\nassert solution('''6\n1 2 4 8 16 32''') == '32'\nassert solution('''10\n1 2 4 8 16 32''') == '32'\nassert solution('''10\n1 2 4 8 16 32''') == '32'\nassert solution('''10\n1 2 4 8 16 32''') == '32'\n"
    },
    {
        "number": 577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n5 2\n2 1''') == '2'\nassert solution('''1 5\n2 3\n''') == '0'\nassert solution('''2 5\n2 1\n1 3\n''') == '500000000'\nassert solution('''2 5\n2 1\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1"
    },
    {
        "number": 578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8.549e2') == '854.9'\nassert solution('8.549e3') == '8549'\nassert solution('0.33e0') == '0.33'\nassert solution('0.33e-1') == '0.33'\nassert solution('0.33e-2') == '0.33'\n"
    },
    {
        "number": 579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '3'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n''') == '9'\nassert solution('''1\n1\n''') == '0'\nassert solution('''2\n1 2\n1 3\n''') == '3'\nassert solution('''3\n1 2\n1 3\n2 3\n''') == '6'\n"
    },
    {
        "number": 582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nn = int(input())\ns = input()"
    },
    {
        "number": 584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"_Hello_Vasya(and_Petya)__bye_(and_OK)\") == \"5 4\"\nassert solution(\"(LoooonG)__shOrt__(LoooonG)\") == \"5 2\"\nassert solution(\"(___)\") == \"0 0\"\nassert solution(\"(___)\") == \"0 0\"\nassert solution(\"(___)\") == \"0 0\"\n"
    },
    {
        "number": 585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n12 10 20 20 25 30\n10 20 30''') == '2'\nassert solution('''4 2\n1 3 3 7\n3 7''') == '0'\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2''') == '7'\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2''') == '7'\nassert solution('''8 2\n1 2 2 2 2 2 2 2\n1 2''') == '7'\n"
    },
    {
        "number": 586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''2 3''') == '6'\nassert solution('''49 1808''') == '359087121'\nassert solution('''1 1''') == '0'\nassert solution('''2 3''') == '6'\n"
    },
    {
        "number": 587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\nassert solution('''5 3\n1 9\n1 7\n2 6\n2 5\n3 1''') == '26'\n"
    },
    {
        "number": 588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\nassert solution(\"?JGJ9\") == \"51919\"\n"
    },
    {
        "number": 590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 2 2 3''') == '2'\nassert solution('''6\n4 5 6 3 2 1''') == '0'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '3'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '3'\nassert solution('''10\n6 8 4 6 7 1 6 3 4 5''') == '3'\n"
    },
    {
        "number": 591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 0\n"
    },
    {
        "number": 593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n2 3 1\n1 2 1''') == '2'\nassert solution('''3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7''') == '1'\nassert solution('''3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7''') == '1'\nassert solution('''3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7''') == '1'\nassert solution('''3 4\n10 10 3\n5 1 6\n2 2 2\n1 5 7''') == '1'\n"
    },
    {
        "number": 594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2016) == 2044\nassert solution(2000) == 2028\nassert solution(50501) == 50507\nassert solution(0) == 0\nassert solution(1) == 1\n"
    },
    {
        "number": 596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1900:01:01\n2038:12:31''') == '50768'\nassert solution('''1996:03:09\n1991:11:12''') == '1579'\nassert solution('''2000:01:01\n2038:12:31''') == '0'\nassert solution('''2000:01:01\n2038:12:31''') == '0'\nassert solution('''2000:01:01\n2038:12:31''') == '0'\n"
    },
    {
        "number": 597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n2 7\n''') == '2'\nassert solution('''6 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '4'\nassert solution('''7 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '2'\nassert solution('''7 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '2'\nassert solution('''7 4\n1 2\n2 3\n2 4\n4 5\n4 6\n2 4 5 6\n''') == '2'\n"
    },
    {
        "number": 598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 3 4\n1 2 5\n5 6 1\n1 2 4\n''') == '5'\n\nassert solution('''3 2\n4 6 3\n2 4 1\n3 5 4\n''') == '-1'\n\nassert solution('''2 2\n1 1 1\n1 1 1\n''') == '0'\n\nassert solution('''2 2\n1 1 1\n1 1 1\n''') == '0'\n\nassert solution('''2 2\n1 1 1\n1 1 1\n''') == '0'"
    },
    {
        "number": 599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"revive\") == \"reviver\"\nassert solution(\"ee\") == \"eye\"\nassert solution(\"kitayuta\") == \"NA\"\nassert solution(\"kitayut\") == \"NA\"\nassert solution(\"kitayut\") == \"NA\"\n"
    },
    {
        "number": 600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4\\n') == '1'\nassert solution('101\\n99\\n') == '2'\nassert solution('5\\n10\\n') == '9'\nassert solution('5\\n10\\n') == '9'\nassert solution('5\\n10\\n') == '9'\n"
    },
    {
        "number": 601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '20'\nassert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '3'\nassert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '11'\nassert solution('''3\n33 27\n6 10\n5 6\n100 200\n10 10\n5 5\n1 19\n1 3\n19 5\n''') == '20'\n"
    },
    {
        "number": 602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == \"Adams\"\nassert solution(8) == \"Van Buren\"\nassert solution(29) == \"Harding\"\n\"\"\"\n"
    },
    {
        "number": 603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 6 9') == '6'\nassert solution('4 4 4') == '4'\nassert solution('0 0 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('2\\n0\\n-1') == '2'\nassert solution('3\\n2\\n-1') == '3'\nassert solution('4\\n5\\n-6\\n-5\\n1') == '4'\nassert solution('5\\n-6\\n-5\\n1') == '4'\n"
    },
    {
        "number": 605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''500 1000 20 30''') == 'Vasya'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1500 1000 176 177''') == 'Misha'\nassert solution('''1000 1000 1 1''') == 'Tie'\nassert solution('''1000 1000 1 1''') == 'Tie'\n"
    },
    {
        "number": 606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 993244853') == '1'\nassert solution('2 993244853') == '6'\nassert solution('3 993244853') == '32'\nassert solution('2019 993244853') == '923958830'\nassert solution('2020 437122297') == '265955509'\n"
    },
    {
        "number": 608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nxooox\noxoxo\nsoxoo\noxoxo\nxooox''') == 'NO'\nassert solution('''3\nwsw\nsws\nwsw\n''') == 'YES'\nassert solution('''3\nxpx\npxp\nxpe\n''') == 'NO'\nassert solution('''3\nxox\noxo\nxox\n''') == 'YES'\nassert solution('''3\nxox\noxo\nxox\n''') == 'NO'\n"
    },
    {
        "number": 610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2 1'\nassert solution('2 4') == '3 2'\nassert solution('1 1') == '0 0'\nassert solution('1 1') == '0 0'\nassert solution('1 1') == '0 0'\n"
    },
    {
        "number": 611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n-1 3\n0 0\n-1 -4''') == '-2.500000000000000'\nassert solution('''3 2\n0 2\n5 0''') == '7.000000000000000'\nassert solution('''3 2\n-1 2\n0 0\n-1 -4''') == '-2.500000000000000'\nassert solution('''3 2\n-1 2\n0 0\n-1 -4''') == '-2.500000000000000'\nassert solution('''3 2\n-1 2\n0 0\n-1 -4''') == '-2.500000000000000'\n"
    },
    {
        "number": 612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 3\n2 6 10 5 9\n''') == 'YES'\nassert solution('''5 5 3\n7 14 2 9 5\n''') == 'NO'\nassert solution('''5 3 1\n1 2 3 7 5\n''') == 'YES'\nassert solution('''5 3 1\n1 2 3 7 5\n''') == 'NO'\nassert solution('''5 3 1\n1 2 3 7 5\n''') == 'YES'\n"
    },
    {
        "number": 613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 3') == '1'\nassert solution('2 3 3') == 'inf'\nassert solution('2 3 3') == 'inf'\nassert solution('2 3 3') == 'inf'\n"
    },
    {
        "number": 614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2 1\n''') == '0'\nassert solution('''2 2\n1 3\n2 2\n''') == '3'\nassert solution('''4 3\n3 10\n2 7\n2 8\n1 1\n''') == '10'\nassert solution('''5 3\n3 10\n2 7\n2 8\n1 1\n''') == '10'\nassert solution('''6 3\n3 10\n2 7\n2 8\n1 1\n''') == '10'\n"
    },
    {
        "number": 615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\nassert solution('5\\n3 2 4 1 2\\n3 2 4 1 2\\n3 2 4 1 2\\n3 2 4 1 2') == '2'\n"
    },
    {
        "number": 616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '25'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '-1'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '-1'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '-1'\nassert solution('''2 3\n10 1\n1\n15 1\n2\n30 2\n1 2''') == '-1'\n"
    },
    {
        "number": 617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3+5*7+8*4') == '303'\nassert solution('2+3*5') == '25'\nassert solution('3*4*5') == '60'\nassert solution('3*4*5') == '60'\nassert solution('3*4*5') == '60'\n"
    },
    {
        "number": 618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AC|T\") == \"AC|TL\"\nassert solution(\"L\") == \"AC|TL\"\nassert solution(\"W|T\") == \"Impossible\"\nassert solution(\"ABC|\") == \"Impossible\"\nassert solution(\"F\") == \"Impossible\"\n"
    },
    {
        "number": 619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 0\n0 1''') == '3'\nassert solution('''0 0\n1 0\n0 1\n1 1''') == '3'\nassert solution('''0 0\n1 0\n0 1\n1 1''') == '3'\nassert solution('''0 0\n1 0\n0 1\n1 1\n0 0''') == '3'\nassert solution('''0 0\n1 0\n0 1\n1 1\n0 0''') == '3'\n"
    },
    {
        "number": 621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11\n1 2 3 -4 -5 -6 5 -5 -6 -7 6''') == '3'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\nassert solution('''5\n0 -1 100 -1 0''') == '1'\n"
    },
    {
        "number": 622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 8') == '4'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == 2\nassert solution(5) == -3\nassert solution(6) == -5\nassert solution(7) == -7\nassert solution(8) == -9\n"
    },
    {
        "number": 626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2 0') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('7') == '1'\nassert solution('4 2 3 0 1') == '3'\n"
    },
    {
        "number": 627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3\n3 2 1\n3 2 2 3\n''') == '12'\nassert solution('''3\n1 2\n3 3\n2 1 3\n''') == '11'\nassert solution('''2\n1\n1\n1 1\n''') == '4'\nassert solution('''1\n1\n1\n1 1\n''') == '4'\nassert solution('''1\n1\n1\n1 1\n''') == '4'\n"
    },
    {
        "number": 630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 0\n0 1 1 2 3 2\n''') == '1 2 2 3 3 3'\nassert solution('''10 1\n0 1 0 3 4 5 2 3 7 0\n''') == '2 3 3 4 5 6 6 6 8 2'\nassert solution('''2 2\n0 1\n''') == '2 2'\nassert solution('''3 2\n0 1 0\n''') == '3 3'\nassert solution('''4 2\n0 1 0 0\n''') == '4 4'\n"
    },
    {
        "number": 631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '''10'''\nassert solution('''5 1''') == '''10'''\nassert solution('''8 2''') == '''12'''\nassert solution('''3 4''') == '''12'''\nassert solution('''5 1''') == '''10'''\n"
    },
    {
        "number": 633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Possible\"\n\n\"\"\"\n\nfrom fractions import gcd"
    },
    {
        "number": 634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 1\n''') == 'WIN'\nassert solution('''12 2\n4 1\n8 1\n''') == 'WIN'\nassert solution('''1 1\n1 2\n''') == 'LOSE'\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439"
    },
    {
        "number": 635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 1 1 1 1\\n1 1 1 1 1\\n') == 'YES'\nassert solution('5 4\\n1 0 0 0 1\\n0 1 1 1 1\\n') == 'YES'\nassert solution('5 2\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\nassert solution('5 2\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\nassert solution('5 2\\n0 1 1 1 1\\n1 1 1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9\\n0 0 0 1 1 1 0 0 0') == 'YES'\nassert solution('7\\n0 0 0 1 1 1 1') == 'NO'\nassert solution('5\\n1 1 1 1 1') == 'YES'\nassert solution('8\\n1 1 1 0 0 0 1 1') == 'NO'\nassert solution('9\\n1 1 0 1 1 0 1 1 0') == 'NO'\n"
    },
    {
        "number": 638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0 4 5 6 7\n''') == '2'\n\nassert solution('''1 0\n0\n''') == '1'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'\n\nassert solution('''5 0\n1 2 3 4 5\n''') == '0'"
    },
    {
        "number": 640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5') == '3 0 3'\nassert solution('2 4') == '2 1 3'\nassert solution('1 1') == '0 1 0'\nassert solution('1 2') == '0 0 1'\nassert solution('1 3') == '0 0 0'\n"
    },
    {
        "number": 641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 of week') == '52'\nassert solution('30 of month') == '11'\nassert solution('1 of week') == '0'\nassert solution('2 of week') == '0'\nassert solution('3 of week') == '0'\n"
    },
    {
        "number": 642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 5\n2 4 8 3 6''') == 'NO'\nassert solution('''10 5\n2 4 5 7 9''') == 'YES'\nassert solution('''10 5\n2 4 5 7 9''') == 'NO'\nassert solution('''10 5\n2 4 5 7 9''') == 'NO'\nassert solution('''10 5\n2 4 5 7 9''') == 'NO'\n"
    },
    {
        "number": 643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1''') == '4'\nassert solution('''4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1''') == '10'\nassert solution('''4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1''') == '0'\nassert solution('''4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1''') == '-1'\nassert solution('''4\n3 10 1 2\n7 14 3 8\n20 70 2 7\n5 6 1 1''') == '4'\n"
    },
    {
        "number": 644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nadd\nfor 43\nend\nfor 10\nfor 15\nadd\nend\nadd\nend\n''') == '161'\n\nassert solution('''2\nfor 62\nend\n''') == '0'\n\nassert solution('''11\nfor 100\nfor 100\nfor 100\nfor 100\nfor 100\nadd\nend\nend\nend\nend\nend\n''') == 'OVERFLOW!!!'\n\nassert solution('''1\nadd\nfor 43\nend\n''') == '0'\n\nassert solution('''1\nfor 43\nend\n''') == '0'"
    },
    {
        "number": 645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ee') == 2\nassert solution('z') == 0\nassert solution('0ay1') == 2\nassert solution('0ay1') == 0\nassert solution('0ay1') == 0\n"
    },
    {
        "number": 646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n100 0\n0 100\n-100 0\n0 -100\n''') == '100'\nassert solution('''7\n0 2\n1 0\n-3 0\n0 -2\n-1 -1\n-1 -3\n-2 -3\n''') == '-1'\nassert solution('''5\n0 0\n0 -1\n3 0\n-2 0\n-2 1\n''') == '2'\nassert solution('''5\n0 0\n2 0\n0 -1\n-2 0\n-2 1\n''') == '2'\nassert solution('''5\n0 0\n0 -1\n3 0\n-2 0\n-2 1\n''') == '2'\n"
    },
    {
        "number": 647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nLLRLLL''') == '1 4\\n2 5\\n6 3'\nassert solution('''4\nRRLL''') == '3 1\\n4 2'\nassert solution('''6\nLLRLLL''') == '1 4\\n2 5\\n6 3'\nassert solution('''4\nRRLL''') == '3 1\\n4 2'\nassert solution('''6\nLLRLLL''') == '1 4\\n2 5\\n6 3'\n"
    },
    {
        "number": 648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 2 2 3''') == '39'\nassert solution('''6\n1 1 1 1 1 3''') == '85'\nassert solution('''1\n3''') == '3'\nassert solution('''2\n1 1''') == '2'\nassert solution('''3\n1 1 1''') == '6'\n"
    },
    {
        "number": 650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"NEAT\") == \"YES\"\nassert solution(\"WORD\") == \"NO\"\nassert solution(\"CODER\") == \"NO\"\nassert solution(\"APRILFOOL\") == \"NO\"\nassert solution(\"AI\") == \"YES\"\n"
    },
    {
        "number": 651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n.....#\nS....#\n.#....\n.#....\n...E..\n333300012''') == '1'\nassert solution('''6 6\n......\n......\n..SE..\n......\n......\n......\n01232123212302123021''') == '14'\nassert solution('''5 3\n...\n.S.\n###\n.E.\n...\n3''') == '0'\nassert solution('''5 3\n...\n.S.\n###\n.E.\n...\n3''') == '0'\nassert solution('''5 3\n...\n.S.\n###\n.E.\n...\n3''') == '0'\n"
    },
    {
        "number": 652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\nassert solution('''0 1\n1 0\n1 1\n2 0''') == '1'\n"
    },
    {
        "number": 653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\nLLRL1RL1') == '1010000011'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\nassert solution('9\\nL0L0LLRR9') == '1100000010'\n"
    },
    {
        "number": 654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3\n''') == 'Black'\nassert solution('''5\n3 5\n''') == 'White'\nassert solution('''2\n2 2\n''') == 'Black'\nassert solution('''2\n2 2\n''') == 'Black'\nassert solution('''2\n2 2\n''') == 'Black'\n"
    },
    {
        "number": 656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n-5 20 -3 0''') == '2'\nassert solution('''4 2\n-5 20 -3 0''') == '4'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\nassert solution('''10 6\n2 -5 1 3 0 0 -4 -3 1 0''') == '3'\n"
    },
    {
        "number": 657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n2 1 1''') == '2'\nassert solution('''3 9\n1 1 3''') == '1'\nassert solution('''12345678 87654321\n43043751 1000000000 53798715''') == '2147483648'\nassert solution('''12345678 87654321\n43043751 1000000000 53798715''') == '2147483648'\nassert solution('''12345678 87654321\n43043751 1000000000 53798715''') == '2147483648'\n"
    },
    {
        "number": 658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4''') == '5.0000000000'\nassert solution('''5 5 1 2\n1 2\n3 1\n4 3\n3 4\n1 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n''') == '-1'\nassert solution('''2\n1 2\n''') == '-1'\nassert solution('''4\n1 2 3 4\n''') == '1 2'\nassert solution('''3\n1 1 1\n''') == '-1'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2'\n"
    },
    {
        "number": 660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '20 15'\nassert solution('8 2 4') == '35 32'\nassert solution('1 2 3') == '0 0'\nassert solution('1 1 1') == '0 0'\nassert solution('1 1 1 1') == '0 0'\n"
    },
    {
        "number": 661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n') == 'YES'\nassert solution('2\\n1\\n2\\n') == 'NO'\nassert solution('1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == 'YES'\n"
    },
    {
        "number": 663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1''') == '1'\nassert solution('''3\n1 3 2''') == '-1'\nassert solution('''2\n1 2''') == '0'\nassert solution('''3\n1 3 2''') == '-1'\nassert solution('''4\n1 3 2 4''') == '-1'\n"
    },
    {
        "number": 665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5''') == '2'\nassert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5''') == '1'\nassert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5''') == '0'\nassert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5''') == '0'\nassert solution('''7 11\n2 9 1 3 18 1 4\n4 35\n11 9 10 7\n1 8\n5''') == '0'\n"
    },
    {
        "number": 666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '2'\nassert solution('''10''') == '4'\nassert solution('''55''') == '10'\nassert solution('''56''') == '1'\n"
    },
    {
        "number": 667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == 2\nassert solution('0 1 4') == 2\nassert solution('0 1 4 0') == 2\nassert solution('0 1 4 0 0') == 2\nassert solution('0 1 4 0 0 0') == 2\n"
    },
    {
        "number": 668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 1 0''') == '3'\nassert solution('''6\n2 0 1 3 2 0''') == '6'\nassert solution('''3\n0 2 2''') == '-1'\nassert solution('''2\n0 0''') == '-1'\nassert solution('''1\n0''') == '-1'\n"
    },
    {
        "number": 669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789101112131415') == '3'\nassert solution('123456789101112131415') == '0'\nassert solution('123456789101112131415') == '0'\nassert solution('123456789101112131415') == '0'\nassert solution('123456789101112131415') == '0'\n"
    },
    {
        "number": 672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('21 5') == '2'\nassert solution('9435152 272') == '282'\nassert solution('10 10') == 'infinity'\nassert solution('10 10') == 'infinity'\nassert solution('10 10') == 'infinity'\n"
    },
    {
        "number": 673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''mail\nai\nlru\ncf\n''') == 'cfmailru'\nassert solution('''kek\npreceq\ncheburek\n''') == 'kek'\nassert solution('''kek\npreceq\ncheburek\n''') == 'kek'\nassert solution('''kek\npreceq\ncheburek\n''') == 'kek'\nassert solution('''kek\npreceq\ncheburek\n''') == 'kek'\n"
    },
    {
        "number": 675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 8 3''') == '3'\nassert solution('''2 10 1''') == '1'\nassert solution('''1 1 3''') == '-1'\nassert solution('''1 1 3''') == '-1'\nassert solution('''1 1 3''') == '-1'\n"
    },
    {
        "number": 676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1\n1\n''') == 'YES'\nassert solution('''3\n1\n1\n1\n''') == 'NO'\nassert solution('''4\n1\n2\n2\n3\n''') == 'YES'\nassert solution('''4\n1\n2\n2\n3\n''') == 'NO'\nassert solution('''4\n1\n1\n1\n1\n''') == 'NO'\n"
    },
    {
        "number": 677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\nassert solution('''2 4 2\n5 10 4\n3 10 1\n1 2 3\n4 6 5''') == '6\\n4\\n1\\n3\\n10'\n"
    },
    {
        "number": 678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n1\n''') == '0.666667'\nassert solution('''0\n1\n2\n''') == '0.333333'\nassert solution('''0\n1\n2\n3\n''') == '0.16667'\nassert solution('''0\n1\n2\n3\n4\n''') == '0.08333'\nassert solution('''0\n1\n2\n3\n4\n5\n''') == '0.04167'\n"
    },
    {
        "number": 679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AB..C') == 'Yes'\nassert solution('AA..CB') == 'No'\nassert solution('AA..BB') == 'No'\nassert solution('AA..BB..') == 'No'\nassert solution('AA..BB..C') == 'No'\n"
    },
    {
        "number": 680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 1\n2 2''') == '5'\nassert solution('''0 0\n2 0\n1 1''') == '4'\nassert solution('''0 0\n2 0\n1 1\n2 2''') == '4'\nassert solution('''0 0\n1 1\n2 2\n3 3''') == '4'\nassert solution('''0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 434\n435 435\n436 436\n437 437\n438 438\n439 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448 448\n449"
    },
    {
        "number": 681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 1 6''') == '2 1 3'\nassert solution('''5 5 5 6''') == '1 0 1'\nassert solution('''1 1 1 1''') == '0 0 0'\nassert solution('''1 1 1 1''') == '0 0 0'\nassert solution('''1 1 1 1''') == '0 0 0'\n"
    },
    {
        "number": 683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('3') == '8'\nassert solution('10') == '1024'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '3 4 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '5 5 5'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '182690 214748 300999'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '1 977539810 977539810'\nassert solution('''1 3 5 7\n1 5 5 7\n100000 200000 300000 400000\n1 1 977539810 977539810''') == '1 977539810 977539810'\n"
    },
    {
        "number": 685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2 5\n7 9\n10 11''') == '10'\nassert solution('''5 10\n5 7\n11 12\n16 20\n25 26\n30 33''') == '18'\nassert solution('''1 1000000000\n1 1000000000''') == '1999999999'\nassert solution('''1 1000000000\n1 1000000000''') == '1999999999'\nassert solution('''1 1000000000\n1 1000000000''') == '1999999999'\n"
    },
    {
        "number": 686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\nassert solution('''4\n100 98\n42 32\n1000000000000000000 1\n41 40\n''') == 'YES'\n"
    },
    {
        "number": 687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '199 200'\nassert solution('4 4') == '412 413'\nassert solution('5 7') == '-1'\nassert solution('6 2') == '-1'\nassert solution('7 2') == '-1'\n"
    },
    {
        "number": 688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc''') == 'YES'\nassert solution('''4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc''') == 'NO'\nassert solution('''4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc''') == 'YES'\nassert solution('''4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc''') == 'NO'\nassert solution('''4\n2\ncaa\ncbb\n3\ncba\ncba\ncbb\n4\nccab\ncbac\nbca\nacbcc\n4\nacb\ncaf\nc\ncbafc''') == 'YES'\n"
    },
    {
        "number": 690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == 'O-|OO-OO'\nassert solution('''13''') == 'O-|OOO-O'\nassert solution('''720''') == 'O-|-OOOO'\nassert solution('''0''') == 'O-|-OOOO'\nassert solution('''1''') == 'O-|-OOOO'\n"
    },
    {
        "number": 691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0.500000'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0.666667'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0.750000'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0.833334'\nassert solution('''0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16''') == '0.933334'\n"
    },
    {
        "number": 693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''116401024\n97 1024''') == 'YES\\n11640\\n1024'\nassert solution('''284254589153928171911281811000\n1009 1000''') == 'YES\\n2842545891539\\n28171911281811000'\nassert solution('''120\n12 1''') == 'NO'\nassert solution('''12\n12 1''') == 'NO'\nassert solution('''12\n12 1''') == 'NO'\n"
    },
    {
        "number": 695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 7') == '0'\nassert solution('13 10') == '1'\nassert solution('1 1') == '0'\nassert solution('3 7') == '0'\n"
    },
    {
        "number": 696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''5''') == '2'\nassert solution('''7''') == '3'\nassert solution('''13''') == '4'\nassert solution('''17''') == '5'\n"
    },
    {
        "number": 697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 2') == '0'\nassert solution('2 0') == '2'\nassert solution('2 2') == '5'\nassert solution('2000 2000') == '674532367'\nassert solution('2000 2000') == '674532367'\n"
    },
    {
        "number": 698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0''') == '0 0'\nassert solution('''3 2''') == '0 0'\nassert solution('''9 3''') == '2 3'\nassert solution('''10 0''') == '5 9'\nassert solution('''1 2 3''') == '0 0'\n"
    },
    {
        "number": 699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == '2 8 14 20 26'\nassert solution(input()) == '-1'\nassert solution(input()) == '2 8 14 20 26'\nassert solution(input()) == '-1'\nassert solution(input()) == '2 8 14 20 26'\n"
    },
    {
        "number": 700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nXOOO\nXXOO\nOOOO\nXXXX\nXOOO\nXOOO\nXOXO\nXOXX''') == 'Yes'\nassert solution('''2\nXX\nOO\nXO\nOX\n''') == 'No'\nassert solution('''2\nXX\nOO\nXO\nOX\n''') == 'No'\nassert solution('''2\nXX\nOO\nXO\nOX\n''') == 'No'\nassert solution('''2\nXX\nOO\nXO\nOX\n''') == 'No'\n"
    },
    {
        "number": 701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''4''') == 'YES'\nassert solution('''5''') == 'NO'\nassert solution('''#.#''') == 'YES'\nassert solution('''....#''') == 'YES'\n"
    },
    {
        "number": 703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Karen\"\n\n\"\"\""
    },
    {
        "number": 706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n3 12 18\n2 6 5 3 3\n''') == 'YES'\nassert solution('''4 2\n1 5 17 19\n4 5\n''') == 'NO'\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'YES'\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'NO'\nassert solution('''4 2\n1 5 17 19\n2 1\n''') == 'NO'\n"
    },
    {
        "number": 708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''8''') == '1'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\n"
    },
    {
        "number": 710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 6''') == '4'\nassert solution('''2 6''') == '4'\nassert solution('''2 6''') == '4'\nassert solution('''2 6''') == '4'\nassert solution('''2 6''') == '4'\n"
    },
    {
        "number": 712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0.50 1') == '0.5'\nassert solution('1 0.50 4') == '0.9375'\nassert solution('4 0.20 2') == '0.4'\n"
    },
    {
        "number": 713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '3'\nassert solution('4 3') == '4'\nassert solution('1 1') == '0 1'\nassert solution('1 1') == '0 1'\nassert solution('1 1') == '0 1'\n"
    },
    {
        "number": 714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 5 7 4 4 3') == '1 3'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\nassert solution('10 10 10 10') == '1 2'\n"
    },
    {
        "number": 715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"A.VFleaKing_is_the_author_of_this_problem\") == \"D\"\nassert solution(\"B.Picks_is_the_author_of_this_problem\") == \"C\"\nassert solution(\"C.Picking_is_the_author_of_this_problem\") == \"B\"\nassert solution(\"D.Ftiasch_is_cute\") == \"B\"\nassert solution(\"A.ab\") == \"C\"\n"
    },
    {
        "number": 716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('179') == '1'\nassert solution('-1') == '9'\nassert solution('18') == '10'\nassert solution('-1') == '9'\nassert solution('18') == '10'\n"
    },
    {
        "number": 719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 0\n3 1\n3 4\n''') == '2'\n\nassert solution('''3\n0 0\n0 0\n0 0\n''') == '1'\n\nassert solution('''1\n5 4\n''') == '5'\n\nassert solution('''1\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n5 4\n"
    },
    {
        "number": 721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1\\n2 1\\n2') == '3'\nassert solution('2 1\\n2 1\\n10') == '-5'\nassert solution('2 1\\n2 1\\n100') == '-5'\nassert solution('2 1\\n2 1\\n1000') == '-5'\nassert solution('2 1\\n2 1\\n10000') == '-5'\n"
    },
    {
        "number": 722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nIAO'15\nIAO'2015\nIAO'1\nIAO'9\nIAO'0''') == '2015'\nassert solution('''4\nIAO'9\nIAO'99\nIAO'999\nIAO'9999''') == '1989'\nassert solution('''1\nIAO'9''') == '1989'\nassert solution('''2\nIAO'9\nIAO'99''') == '1999'\nassert solution('''3\nIAO'9\nIAO'99\nIAO'999''') == '2999'\n"
    },
    {
        "number": 723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 1\n20 2\n30 3''') == '180'\nassert solution('''3\n3 1\n2 2\n4 3''') == '21'\nassert solution('''1\n5 10''') == '50'\nassert solution('''3\n3 1\n2 2\n4 3''') == '21'\nassert solution('''3\n3 1\n2 2\n4 3''') == '21'\n"
    },
    {
        "number": 724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == '1'\nassert solution('''3 0''') == '0'\nassert solution('''6 3''') == '3'\nassert solution('''1 3 4 6 9 10''') == '0'\nassert solution('''1 3 4 6 9 10''') == '0'\n"
    },
    {
        "number": 725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\nC M\nY Y\n''') == '#Color'\nassert solution('''3 2\nW W\nW W\nB B\n''') == '#Black&White'\nassert solution('''1 1\nW\n''') == '#Black&White'\nassert solution('''2 2\nC M\nY Y\n''') == '#Color'\nassert solution('''3 2\nW W\nW W\nB B\n''') == '#Black&White'\n"
    },
    {
        "number": 726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n-3 2 9 16\n''') == '6'\nassert solution('''5 2\n4 8 11 18 19\n''') == '5'\nassert solution('''5 2\n4 8 11 18 19\n''') == '5'\nassert solution('''5 2\n4 8 11 18 19\n''') == '5'\nassert solution('''5 2\n4 8 11 18 19\n''') == '5'\n"
    },
    {
        "number": 727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 1 11 2 8''') == '4'\nassert solution('''4\n1 8 8 8''') == '6'\nassert solution('''2\n7 6''') == '0'\nassert solution('''3\n1 2 3''') == '0'\nassert solution('''4\n1 2 3 4''') == '0'\n"
    },
    {
        "number": 729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn = int(input())\ns = input()"
    },
    {
        "number": 730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9''') == '''+------------------------+\n|O.O.O.#.#.#.#.#.#.#.#.|D|)\n|O.O.O.#.#.#.#.#.#.#.#.|.|\n|O.......................|\n|O.O.#.#.#.#.#.#.#.#.#.|.|)\n+------------------------+'''\n\nassert solution('''20''') == '''+------------------------+\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|D|)\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|\n|O.......................|\n|O.O.O.O.O.O.O.O.O.#.#.#.#.|.|)\n+------------------------+'''\n"
    },
    {
        "number": 731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 1 1''') == '9'\nassert solution('''77 7 7''') == '7'\nassert solution('''114 5 14''') == '6'\nassert solution('''1 1 2''') == '0'\nassert solution('''1 1 1''') == '0'\n"
    },
    {
        "number": 732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '10'\nassert solution('''123''') == '113'\nassert solution('''10''') == '10'\nassert solution('''123''') == '113'\nassert solution('''10''') == '10'\n"
    },
    {
        "number": 733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 6 18') == '3'\nassert solution('2 3 6 18') == '3'\nassert solution('2 3 6 18') == '3'\nassert solution('2 3 6 18') == '3'\nassert solution('2 3 6 18') == '3'\n"
    },
    {
        "number": 734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'yes\\n1 1'\nassert solution('2\\n1') == 'yes\\n1 1'\nassert solution('2\\n2') == 'no'\nassert solution('2\\n2\\n2') == 'no'\nassert solution('2\\n2\\n2\\n2') == 'no'\n"
    },
    {
        "number": 736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2') == '6'\nassert solution('3 5') == '-1'\nassert solution('10 3') == '3'\nassert solution('10 4') == '-1'\nassert solution('10 5') == '3'\n"
    },
    {
        "number": 737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == 8\nassert solution(11) == 14\nassert solution(22) == 20\n\n\"\"\""
    },
    {
        "number": 738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 2 5') == '3'\nassert solution('500000 500000 500000 500000') == '1'\nassert solution('1 2 2 5') == '3'\nassert solution('1 2 2 5') == '3'\n"
    },
    {
        "number": 739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 4 10007') == '5563'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 1 5 5 5''') == '15'\nassert solution('''8 4 3 2 10 5 2''') == '32'\nassert solution('''1 1 1 1 5 5 5''') == '15'\nassert solution('''8 4 3 2 10 5 2''') == '32'\nassert solution('''1 1 1 1 5 5 5''') == '15'\n"
    },
    {
        "number": 741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 10\\n4 6 7') == '8'\nassert solution('2 12\\n1 10') == '9'\nassert solution('2 7\\n3 4') == '6'\nassert solution('2 7\\n3 4\\n5 6') == '9'\nassert solution('2 7\\n3 4\\n5 6\\n7 8') == '9'\n"
    },
    {
        "number": 742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 2'\nassert solution('''5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '-1'\nassert solution('''5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '4 5 1 2 3 6'\nassert solution('''5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '-1'\nassert solution('''5\n1\n1\n2\n4 1\n3\n4 1 3\n4\n2 3 4 5\n5\n1 5 7 2 8\n''') == '1 3 5 6 7 9 2 4 8 10'\n"
    },
    {
        "number": 743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 4\\n') == '2'\nassert solution('2 4\\n2 4\\n') == '6'\nassert solution('3\\n2 4 6\\n') == '6'\nassert solution('5\\n45 12 27 30 18\\n') == '15'\nassert solution('2\\n12 18\\n') == '12'\n"
    },
    {
        "number": 744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('FSSF') == 'NO'\nassert solution('SF') == 'YES'\nassert solution('FFFFFFFFFF') == 'NO'\nassert solution('SSFFSFFSFF') == 'YES'\n"
    },
    {
        "number": 745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''3 3''') == '0'\nassert solution('''4 0''') == '24'\nassert solution('''1337 42''') == '807905441'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '1.00000000000000000000'\nassert solution('1 3') == '0.50000000000000000000'\nassert solution('3') == '0.50000000000000000000'\nassert solution('3 3 2') == '0.50000000000000000000'\nassert solution('-2 3 6') == '0.50000000000000000000'\n"
    },
    {
        "number": 747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5''') == '4'\nassert solution('''5 3\n0 2 4\n1 3 1\n0 8 3\n0 20 10\n1 5 5\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0"
    },
    {
        "number": 748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2 2 2') == '1 2 4'\nassert solution('2 2 1 1 4 6') == '1 2 4'\nassert solution('1 1 1 2 2 2') == '-1'\nassert solution('2 2 1 1 4 6') == '1 2 4'\nassert solution('1 1 1 2 2 2') == '-1'\n"
    },
    {
        "number": 749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacaba') == 2\nassert solution('zzzzz') == 1\nassert solution('abcde') == 3\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n"
    },
    {
        "number": 750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5') == '10'\nassert solution('15 6') == '38'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n2 3 2 1''') == '3'\nassert solution('''3 4\n1 2 1''') == '1'\nassert solution('''3 4\n1 2 1''') == '1'\nassert solution('''3 4\n1 2 1''') == '1'\nassert solution('''3 4\n1 2 1''') == '1'\n"
    },
    {
        "number": 752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nXS\nXS\nM\nXL\nS\nXS\n''') == '2'\nassert solution('''2\nXXXL\nXXL\nXXL\nXXXS\n''') == '1'\nassert solution('''2\nM\nXS\nXS\nM\n''') == '0'\nassert solution('''2\nM\nXS\nXS\nM\n''') == '0'\nassert solution('''2\nM\nXS\nXS\nM\n''') == '0'\n"
    },
    {
        "number": 753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 3 2') == '1/3'\nassert solution('4 3 2 2') == '1/4'\nassert solution('1 1 3 2') == '1/3'\n"
    },
    {
        "number": 754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nRRG\n''') == '1'\nassert solution('''5\nRRRRR\n''') == '4'\nassert solution('''4\nBRBG\n''') == '0'\nassert solution('''7\nRBRGGB\n''') == '3'\nassert solution('''8\nRRRRRRRRRR\n''') == '0'\n"
    },
    {
        "number": 755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('12') == '3'\nassert solution('1000000') == '1000000'\nassert solution('1000000000') == '1000000000'\nassert solution('1000000000000') == '1000000000000'\n"
    },
    {
        "number": 756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n7 20 88') == '35'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '15'\nassert solution('9\\n16 20 30 40 50 60 70 80 90') == '90'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\nassert solution('9\\n15 20 30 40 50 60 70 80 90') == '90'\n"
    },
    {
        "number": 757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('RBR') == '2'\nassert solution('RBBR') == '6'\nassert solution('RBBRR') == '6'\nassert solution('RBRRR') == '6'\n"
    },
    {
        "number": 759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaba') == '6'\nassert solution('aaabbbb') == '6'\nassert solution('abracadabra') == '20'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 1') == '4'\nassert solution('5\\n0 -1 -1 -1 -1') == '4'\nassert solution('5\\n-1 -1 -1 -1 -1') == '4'\nassert solution('5\\n-1 -1 -1 -1 -1') == '4'\nassert solution('5\\n-1 -1 -1 -1 -1') == '4'\n"
    },
    {
        "number": 762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 4\n1 2 5 10 15 20\n''') == '1'\n\nassert solution('''4 10\n1 3 2 4\n''') == '0'\n\nassert solution('''6 100\n1 2 3 4 5 6\n''') == '2'\n\nassert solution('''6 100\n1 2 3 4 5 6\n''') == '0'\n\nassert solution('''6 100\n1 2 3 4 5 6\n''') == '0'"
    },
    {
        "number": 763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 16\n\"\"\""
    },
    {
        "number": 764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1010''') == '3'\nassert solution('''4\n1010''') == '3'\nassert solution('''4\n1010''') == '3'\nassert solution('''4\n1010''') == '3'\nassert solution('''4\n1010''') == '3'\n"
    },
    {
        "number": 765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('5 4 7') == '1'\nassert solution('6 2 3') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ababa') == 'Yes'\nassert solution('zzcxx') == 'Yes'\nassert solution('yeee') == 'No'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'Yes'\n"
    },
    {
        "number": 767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 3 3 7\\n') == '2'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'\nassert solution('5 5\\n10 9 5 8 7\\n') == '1'\n"
    },
    {
        "number": 768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\nYYY\nNNN\nYNY''') == '2'\nassert solution('''4 4 1\nNNNY\nNNYN\nNYNN\nYNNN''') == '4'\nassert solution('''3 3 2\nNNN\nNNN\nNNN''') == '0'\nassert solution('''3 3 2\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNNN\nNN"
    },
    {
        "number": 769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('2 3 7') == '-1'\nassert solution('2 3 5') == '2'\nassert solution('2 3 5') == '2'\nassert solution('2 3 5') == '2'\n"
    },
    {
        "number": 770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 0 1 0\n''') == '3'\nassert solution('''5\n1 1 0 0 1\n''') == '4'\nassert solution('''2\n0 0\n''') == '0'\nassert solution('''3\n0 0 0\n''') == '0'\nassert solution('''4\n0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 3''') == 'Yes'\nassert solution('''3 3 3''') == 'No'\nassert solution('''4 3 5''') == 'Yes'\nassert solution('''2 7 7 7''') == 'Yes'\nassert solution('''1 8 4''') == 'No'\n"
    },
    {
        "number": 772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0 0\n0 0 0\n0 0 1''') == '''001\n010\n100'''\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''\nassert solution('''1 0 1\n8 8 8\n2 0 3''') == '''010\n011\n100'''\n"
    },
    {
        "number": 773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 0''') == '3'\nassert solution('''3 1''') == '5'\nassert solution('''3 2''') == '9'\nassert solution('''3 2\n1 1 3 2\n2 1 3 2\n''') == '-1'\nassert solution('''3 2\n1 1 3 2\n2 1 3 1\n''') == '-1'\n"
    },
    {
        "number": 774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7 6') == '2/5'\nassert solution('7 2 4') == '7/2'\nassert solution('1 1 1') == '1/1'\nassert solution('1 1 1') == '1/1'\nassert solution('1 1 1') == '1/1'\n"
    },
    {
        "number": 775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 4\n3 4 6\n1 2\n2 5\n5 7\n7 1''') == '1'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\nassert solution('''5 1 2\n2\n1 2\n2 4\n''') == '2'\n"
    },
    {
        "number": 776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == '3 14'\nassert solution('''4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '3 14'\nassert solution('''2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2''') == '3 14'\nassert solution('''2 1 1\n4\n5 USB\n6 PS/2\n3 PS/2\n7 PS/2\n8 PS/2\n9 PS/2\n10 PS/2\n11 PS/2\n12 PS/2\n13 PS/2\n14 PS/2\n15 PS/2\n16 PS/2\n17 PS/2\n18 PS/2\n19 PS/2\n20 PS/2\n21 PS/2\n22 PS/2\n23 PS/2\n24 PS/2\n25 PS/2\n26 PS/2\n27 PS/2\n28 PS/2\n29 PS/2\n30 PS/2\n31 PS/2\n32 PS/2\n33 PS/2\n34 PS/2\n35 PS/2\n36 PS/2\n37 PS/2\n38 PS/2\n39 PS/2\n40 PS/2\n41 PS/2\n42 PS/2\n43 PS/2\n44 PS/2\n45 PS/2\n46 PS/2\n47 PS/2\n48 PS/2\n49 PS/2\n50 PS/2\n51 PS/2\n52 PS/2\n53 PS/2\n54 PS/2\n55 PS/2\n56 PS/2\n57 PS/2\n58 PS/2\n59 PS/2\n60 PS/2\n61 PS/2\n62 PS/2\n63 PS/2\n64 PS/2\n65 PS/2\n66 PS/2\n67 PS/2\n68 PS/2\n69 PS/2\n70 PS/2\n71 PS/2\n72 PS/2\n73 PS/2\n74 PS/2\n75 PS/2\n76 PS/2\n77 PS/2\n78 PS/2\n79 PS/2\n80 PS/2\n81 PS/2\n82 PS/2\n83 PS/2\n84 PS/2\n85 PS/2\n86 PS/2\n87 PS/2\n88 PS/2\n89 PS/2\n90 PS/2\n91 PS/2\n92 PS/2\n93 PS/2\n94 PS/2\n95 PS/2\n96 PS/2\n97 PS/2\n98 PS/2\n99 PS/2\n100 PS/2\n101 PS/2\n102 PS/2\n103 PS/2\n104 PS/2\n105 PS/2\n106 PS/2\n107 PS/2\n108 PS/2\n109 PS/2\n110 PS/2\n111 PS/2\n112 PS/2\n113 PS/2\n114 PS/2\n115 PS/2\n116 PS/2\n117 PS/2\n118 PS/2\n119 PS/2\n120 PS/2\n121 PS/2\n122 PS/2\n123 PS/2\n124 PS/2\n125 PS/2\n126 PS/2\n127 PS/2\n128 PS/2\n129 PS/2\n130 PS/2\n131 PS/2\n132 PS/2\n133 PS/2\n134 PS/2\n135 PS/2\n136 PS/2\n137 PS/2\n138 PS/2\n139 PS/2\n140 PS/2\n141 PS/2\n142 PS/2\n143 PS/2\n144 PS/2\n145 PS/2\n146 PS/2\n147 PS/2\n148 PS/2\n149 PS/2\n150 PS/2\n151 PS/2\n152 PS/2\n153 PS/2\n154 PS/2\n155 PS/2\n156 PS/2\n157 PS/2\n158 PS/2\n159 PS/2\n160 PS/2\n161 PS/2\n162 PS/2\n163 PS/2\n164 PS/2\n165 PS/2\n166 PS/2\n167 PS/2\n168 PS/2\n169 PS/2\n170 PS/2\n171 PS/2\n172 PS/2\n173 PS/2\n174 PS/2\n175 PS/2\n176 PS/2\n177 PS/2\n178 PS/2\n179 PS/2\n180 PS/2\n181 PS/2\n182 PS/2\n183 PS/2\n184 PS/2\n185 PS/2\n186 PS/2\n187 PS/2\n188 PS/2\n189 PS/2\n190 PS/2\n191 PS/2\n192 PS/2\n193 PS/2\n194 PS/2\n195 PS/2\n196 PS/2\n197 PS/2\n198 PS/2\n199 PS/2\n200 PS/2\n201 PS/2\n202 PS/2\n203 PS/2\n204 PS/2\n205 PS/2\n206 PS/2\n207 PS/2\n208 PS/2\n209 PS/2\n210 PS/2\n211 PS/2\n212 PS/2\n213 PS/2\n214 PS/2\n215 PS/2\n216 PS/2\n217 PS/2\n218 PS/2\n219 PS/2\n220 PS/2\n221 PS/2\n222 PS/2\n223 PS/2\n224 PS/2\n225 PS/2\n226 PS/2\n227 PS/2\n228 PS/2\n229 PS/2\n230 PS/2\n231 PS/2\n232 PS/2\n233 PS/2\n234 PS/2\n235 PS/2\n236 PS/2\n237 PS/2\n238 PS/2\n239 PS/2\n240 PS/2\n241 PS/2\n242 PS/2\n243 PS/2\n244 PS/2\n245 PS/2\n246 PS/2\n247 PS/2\n248 PS/2\n249 PS/2\n250 PS/2\n251 PS/2\n252 PS/2\n253 PS/2\n254 PS/2\n255 PS/2\n256 PS/2\n257 PS/2\n258 PS/2\n259 PS/2\n260 PS/2\n261 PS/2\n262 PS/2\n263 PS/2\n264 PS/2\n265 PS/2\n266 PS/2\n267 PS/2\n268 PS/2\n269 PS/2\n270 PS/2\n271 PS/2\n272 PS/2\n273 PS/2\n274 PS/2\n275 PS/2\n276 PS/2\n277 PS/2\n278 PS/2\n279 PS/2\n280 PS/2\n281 PS/2\n282 PS/2\n283 PS/2\n284"
    },
    {
        "number": 777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('a') == 51\nassert solution('hi') == 76\nassert solution('aab') == 51\nassert solution('aabcc') == 51\nassert solution('aabccc') == 51\n"
    },
    {
        "number": 778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 0''') == '9'\nassert solution('''3 1''') == '1'\nassert solution('''4 1''') == '3'\nassert solution('''3 2''') == '0'\nassert solution('''3 3''') == '1'\n"
    },
    {
        "number": 779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '3'\nassert solution('100') == '24'\nassert solution('1000') == '4950'\nassert solution('10000') == '989500'\n"
    },
    {
        "number": 780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0840') == '-1 17 7 7 7 -1 2 17 2 7'\nassert solution('0246802468024') == '0246802468024'\nassert solution('0246802468024') == '0246802468024'\nassert solution('0246802468024') == '0246802468024'\nassert solution('0246802468024') == '0246802468024'\n"
    },
    {
        "number": 781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"WBWBWBWB\"\n    \"BWBWBWBW\"\n    \"BWBWBWBW\"\n    \"BWBWBWBW\"\n    \"WBWBWBWB\"\n    \"WBWBWBWB\"\n    \"BWBWBWBW\"\n    \"WBWBWBWB\"\n) == \"YES\"\n\nassert solution(\n    \"WBWBWBWB\"\n    \"BWBWBWBW\"\n    \"BWBWBWBW\"\n    \"BWBWBWBW\"\n    \"WBWBWBWB\"\n    \"WBWBWBWB\"\n    \"BWBWBWBW\"\n    \"WBWBWBWB\"\n) == \"NO\"\n\nassert solution(\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n) == \"YES\"\n\nassert solution(\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n) == \"NO\"\n\nassert solution(\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n    \"WWWWWWWW\"\n) == \"NO\""
    },
    {
        "number": 782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4 6 12''') == '3\\n4 6 12'\nassert solution('''2\n2 3''') == '-1'\nassert solution('''2\n2 3''') == '-1'\nassert solution('''2\n2 3''') == '-1'\nassert solution('''2\n2 3''') == '-1'\n"
    },
    {
        "number": 783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 1 2''') == '3 2 0 2 0'\nassert solution('''4\n3 2 1 4''') == '2 3 4 0'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9 8 7 6 5 4 3 2 1 0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9 8 7 6 5 4 3 2 1 0'\n"
    },
    {
        "number": 784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 162''') == 'YES'\nassert solution('''4 42''') == 'NO'\nassert solution('''100 40021''') == 'YES'\nassert solution('''2 4 8 81 162''') == '5'\nassert solution('''2 4 8 81 162''') == '5'\n"
    },
    {
        "number": 785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-7 1\n5 2\n8 2''') == '1907'\nassert solution('''2\n57 1\n22 2''') == 'Impossible'\nassert solution('''1\n-5 1\n''') == 'Infinity'\nassert solution('''4\n27 2\n13 1\n-50 1\n8 2''') == '1897'\nassert solution('''5\n-7 1\n5 2\n8 2\n-5 1\n-5 1\n''') == '1897'\n"
    },
    {
        "number": 787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\nabca''') == 'YES'\nassert solution('''2\naaacas''') == 'YES'\nassert solution('''4\nabc''') == 'NO'\nassert solution('''5\nabc''') == 'NO'\nassert solution('''6\nabc''') == 'NO'\n"
    },
    {
        "number": 788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A221033') == 21\nassert solution('A223635') == 22\nassert solution('A232726') == 23\nassert solution('A234567') == 23\nassert solution('A2345678') == 23\n"
    },
    {
        "number": 789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1100''') == '3'\nassert solution('''4\n1111''') == '4'\nassert solution('''4\n0000''') == '4'\nassert solution('''4\n1111''') == '4'\nassert solution('''4\n1100''') == '3'\n"
    },
    {
        "number": 792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 10\n-1 5 0 -5 3''') == '0'\nassert solution('''3 4\n-10 0 20''') == '-1'\nassert solution('''5 10\n-5 0 10 -11 0''') == '2'\nassert solution('''5 10\n-5 0 10 -11 0''') == '-1'\nassert solution('''5 10\n-5 0 10 -11 0''') == '-1'\n"
    },
    {
        "number": 793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''2 2\n1 3\n3 1''') == '3'\nassert solution('''2 2\n1 3\n3 1''') == '3'\n"
    },
    {
        "number": 794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '1'\nassert solution('''74''') == '35'\nassert solution('''1''') == '0'\nassert solution('''10''') == '0'\nassert solution('''100''') == '0'\n"
    },
    {
        "number": 796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '7'\nassert solution('123 456789') == '689974806'\nassert solution
    },
    {
        "number": 797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '111'\n\n\"\"\"\n\nn, m, a, b = map(int, stdin.split())\ng0, x, y, z = map(int, stdin.split())"
    },
    {
        "number": 798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 2') == '0 1 1'\nassert solution('3 4 5') == '1 3 2'\nassert solution('4 1 1') == 'Impossible'\nassert solution('1 1 1') == 'Impossible'\nassert solution('1 1 1') == 'Impossible'\n"
    },
    {
        "number": 799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 2 3 4\\n') == '10'\nassert solution('5\\n1 1 0 1 1\\n') == '1'\nassert solution('3\\n1 3 1\\n') == '4'\nassert solution('1\\n12\\n') == '0'\nassert solution('3\\n1 3 1\\n') == '4'\n"
    },
    {
        "number": 800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 0\n0 2\n''') == '90.0000000000'\nassert solution('''3\n2 0\n0 2\n-2 2\n''') == '135.0000000000'\nassert solution('''4\n2 0\n0 2\n-2 0\n0 -2\n''') == '270.0000000000'\nassert solution('''2\n2 1\n1 2\n''') == '36.8698976458'\nassert solution('''3\n2 0\n0 2\n-2 0\n0 -2\n''') == '135.0000000000'\n"
    },
    {
        "number": 801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\nAaA') == '2'\nassert solution('7\\nbcAAcbc') == '3'\nassert solution('6\\naaBCCe') == '5'\nassert solution('1\\nA') == '1'\nassert solution('2\\nB') == '1'\n"
    },
    {
        "number": 803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nxxXx\n''') == '1'\nassert solution('''2\nXX\n''') == '1'\nassert solution('''6\nxXXxXx\n''') == '0'\nassert solution('''8\nxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXxXx"
    },
    {
        "number": 804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('yandex') == 0\nassert solution('yahoo') == 1\nassert solution('google') == 'impossible'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'impossible'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'impossible'\n"
    },
    {
        "number": 805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 5\n2 8\n1 6''') == '1'\nassert solution('''3\n0 10\n1 5\n7 15''') == '3'\nassert solution('''3\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15\n0 10\n1 5\n7 15"
    },
    {
        "number": 806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 3') == '3'\nassert solution('3 2 2') == '1'\nassert solution('9 9 99') == '711426616'\nassert solution('9 9 9') == '0'\nassert solution('9 9 9') == '0'\n"
    },
    {
        "number": 807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n5 10 7 3 20''') == '3'\nassert solution('''6 2\n100 1 10 40 10 40''') == '97'\nassert solution('''3 0\n1 2 3''') == '0'\nassert solution('''3 1\n1 2 3''') == '0'\nassert solution('''3 2\n1 2 3''') == '0'\n"
    },
    {
        "number": 808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('16') == '1.6E1'\nassert solution('01.23400') == '1.234'\nassert solution('.100') == '1E-1'\nassert solution('100.') == '1E2'\nassert solution('0.1') == '1E-1'\n"
    },
    {
        "number": 809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 3 2''') == 'GBGBG'\nassert solution('''7 2 2 5''') == 'BBGBGBB'\nassert solution('''4 3 4 0''') == 'NO'\nassert solution('''7 2 2 5''') == 'BBGBGBB'\nassert solution('''7 2 2 5''') == 'BBGBGBB'\n"
    },
    {
        "number": 810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 3''') == '1'\nassert solution('''2 3 10''') == '165'\nassert solution('''1 2 3''') == '0'\nassert solution('''1 2 3 4''') == '0'\nassert solution('''1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '7'\nassert solution('6 3') == '8'\nassert solution('1 1') == '1'\nassert solution('1000 1000') == '1000'\nassert solution('1 1000') == '1000'\n"
    },
    {
        "number": 812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 3\n1 2\n2 3 4\n''') == '1 1 2 2'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\nassert solution('''5 5 2\n3 4 1 2 5\n2 3\n''') == '1 1 1 1 1'\n"
    },
    {
        "number": 814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 2 1 2''') == '1 2 2 3'\nassert solution('''3\n2 3 8''') == '2 3 8'\nassert solution('''2\n2 3 8''') == '2 3 8'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n1''') == '1'\n"
    },
    {
        "number": 815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2\n''') == '1'\nassert solution('''6 1\n5 1 2 3 4 1\n''') == '2'\nassert solution('''6 1\n5 1 2 3 4 1\n''') == '2'\nassert solution('''6 1\n5 1 2 3 4 1\n''') == '2'\nassert solution('''6 1\n5 1 2 3 4 1\n''') == '2'\n"
    },
    {
        "number": 817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcdd\") == \"3 abc\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\nassert solution(\"abbcdddeaaffdfouurtytwoo\") == \"18 abbcd...tw\"\n"
    },
    {
        "number": 818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n2\\n1\\n3\\n') == '2'\nassert solution('3\\n6\\n2\\n3\\n2\\n') == '3'\nassert solution('2\\n5\\n5\\n10\\n') == '1'\nassert solution('2\\n5\\n5\\n10\\n') == '1'\nassert solution('2\\n5\\n5\\n10\\n') == '1'\n"
    },
    {
        "number": 821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1 2 1 2') == 'First'\nassert solution('3 3 1 1 1') == 'Second'\nassert solution('4 5 3 1 5') == 'Friendship'\nassert solution('1 1 1 1 1') == 'Friendship'\nassert solution('1 1 1 1 1') == 'Friendship'\n"
    },
    {
        "number": 822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('1 2 5') == '2'\nassert solution('2 3 9') == '1'\nassert solution('2 3 9') == '1'\nassert solution('2 3 9') == '1'\n"
    },
    {
        "number": 823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0') == '0'\nassert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('-1 -1') == '0'\nassert solution('0 -1') == '0'\n"
    },
    {
        "number": 824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"((()))\") == \"6\"\nassert solution(\"()()()\") == \"7\"\nassert solution(\"(()())\") == \"0\"\nassert solution(\"(()()())\") == \"7\"\nassert solution(\"(()()()\") == \"0\"\n"
    },
    {
        "number": 825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '3'\nassert solution('''5''') == '4'\nassert solution('''6''') == '5'\nassert solution('''7''') == '6'\nassert solution('''8''') == '7'\n"
    },
    {
        "number": 827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('1111') == '1111'\n"
    },
    {
        "number": 828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 0 2''') == '1'\nassert solution('''5 3\n1 0 0 4 1''') == '2'\nassert solution('''5 3\n1 0 0 4 1''') == '2'\nassert solution('''5 3\n1 0 0 4 1''') == '2'\nassert solution('''5 3\n1 0 0 4 1''') == '2'\n"
    },
    {
        "number": 829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''bbaze\n3\nbzb 2\naeb 3\nba 10\n''') == '8'\n\nassert solution('''abacaba\n4\naba 2\nbcc 1\ncaa 2\nbbb 5\n''') == '18'\n\nassert solution('''xyz\n4\naxx 8\nza 1\nefg 4\nt 1\n''') == '-1'\n\nassert solution('''bbb\n1\nbbb 1\nbbb 1\nbbb 1\nbbb 1\n''') == '-1'\n\nassert solution('''bbb\n1\nbbb 1\nbbb 1\nbbb 1\nbbb 1\n''') == '-1'"
    },
    {
        "number": 832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 4\n3 4''') == '1'\nassert solution('''4\n100 42\n42 100\n5 42\n100 5''') == '5'\nassert solution('''2\n1 2\n1 2''') == '0'\nassert solution('''1\n1 2''') == '0'\nassert solution('''2\n1 2\n1 2''') == '0'\n"
    },
    {
        "number": 833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 5\n2 3''') == '8'\nassert solution('''5 10\n3 20\n2 20\n1 20\n4 20\n5 20''') == '60'\nassert solution('''5 10\n3 20\n2 20\n1 20\n4 20\n5 20\n1 10\n2 10\n3 10\n4 10\n5 10''') == '60'\nassert solution('''5 10\n3 20\n2 20\n1 20\n4 20\n5 20\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10\n2 10\n3 10\n4 10\n5 10\n1 10"
    },
    {
        "number": 834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3') == '3'\nassert solution('4\\n2\\n3\\n3\\n4') == '2'\nassert solution('5\\n2\\n3\\n3\\n4\\n4') == '3'\n"
    },
    {
        "number": 835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''BBBSSC''') == '2'\nassert solution('''BBC''') == '7'\nassert solution('''BSC''') == '200000000001'\nassert solution('''BBBSSC''') == '2'\nassert solution('''BSC''') == '7'\n"
    },
    {
        "number": 836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 1 1''') == '4'\nassert solution('''8 1 10''') == '8'\nassert solution('''8 1 10''') == '8'\nassert solution('''8 1 10''') == '8'\nassert solution('''8 1 10''') == '8'\n"
    },
    {
        "number": 838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '8'\nassert solution('1 0 1') == '1'\nassert solution('0 1 0') == '1'\nassert solution('1 0 1 0') == '1'\n"
    },
    {
        "number": 839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1000000000\n1\n1000000000\n''') == '2000000000'\nassert solution('''10 1\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''3 1\n2 1 4\n11 3 16\n''') == '3'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20\n''') == '3'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20\n''') == '3'\n"
    },
    {
        "number": 841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1''') == '113337'\nassert solution('''6\n1\n1\n1\n1\n1\n1''') == '113337'\nassert solution('''6\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('10') == '1001'\nassert solution('100') == '11'\nassert solution('1000') == '1001'\n"
    },
    {
        "number": 843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n><\n1 2\n''') == 'FINITE'\nassert solution('''3\n>><\n2 1 1\n''') == 'INFINITE'\nassert solution('''3\n>>><\n2 1 1\n''') == 'INFINITE'\nassert solution('''3\n>>><\n2 1 1\n''') == 'INFINITE'\nassert solution('''3\n>>><\n2 1 1\n''') == 'INFINITE'\n"
    },
    {
        "number": 844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11010111''') == '4'\nassert solution('''111''') == '0'\nassert solution
    },
    {
        "number": 845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\nInput\nL\nqwertyuiop\n\nOutput\nasdfghjkl;\n\nassert solution(stdin) == stdin\n\nInput\nL\nqwertyuiop\n\nOutput\nzxcvbnm,./\n\nassert solution(stdin) == stdin\n\nInput\nL\nqwertyuiop\n\nOutput\nzxcvbnm,./\n\nassert solution(stdin) == stdin\n\nInput\nL\nqwertyuiop\n\nOutput\nzxcvbnm,./\n\nassert solution(stdin) == stdin\n\nInput\nL\nqwertyuiop\n\nOutput\nzxcvbnm,./"
    },
    {
        "number": 846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n4 3 1 2''') == '1 1 3 4 4'\nassert solution('''5 5\n5 4 3 2 1''') == '1 2 3 4 5'\nassert solution('''5 5\n5 4 3 2 1''') == '1 2 3 4 5'\nassert solution('''5 5\n5 4 3 2 1''') == '1 2 3 4 5'\nassert solution('''5 5\n5 4 3 2 1''') == '1 2 3 4 5'\n"
    },
    {
        "number": 847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('-1 1 2') == '1'\nassert solution('-2 -2') == '2'\nassert solution('-1 -1') == '0'\n"
    },
    {
        "number": 848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == '3'\nassert solution('''3 2''') == '1 2'\nassert solution('''3 3''') == '1 2 3'\nassert solution('''3 4''') == '1 2 3 4'\nassert solution('''3 5''') == '1 2 3 4 5'\n"
    },
    {
        "number": 849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 0.666666666667\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n1.0\n\nInput\n1 1 1 1\n\nOutput\n0.0\n\nInput\n1 1 1 1\n\nOutput\n"
    },
    {
        "number": 850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n100 10 1 0''') == '4'\nassert solution('''3\n2 70 3''') == '2'\nassert solution('''2\n2 70''') == '2'\nassert solution('''1\n1''') == '1'\nassert solution('''0\n0''') == '0'\n"
    },
    {
        "number": 851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n010\n''') == '1'\nassert solution('''8 3\n01010110\n''') == '3'\nassert solution('''8 3\n01010101\n''') == '3'\nassert solution('''8 3\n
    },
    {
        "number": 852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == 'Yes'\nassert solution('''1 0''') == 'No'\nassert solution('''5 2 3''') == 'Yes'\nassert solution('''1 2 3 2 2''') == 'Yes'\nassert solution('''4 3 4''') == 'Yes'\n"
    },
    {
        "number": 853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n5 0 5 0\\n') == '0'\nassert solution('11\\n5 5 5 5 5 5 5 5 0 5 5\\n') == '5555555550'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 2 1') == '1 9'\nassert solution('8 1 1') == '5 2'\nassert solution('5 1 1') == '0 0'\nassert solution('5 1 1') == '0 0'\nassert solution('5 1 1') == '0 0'\n"
    },
    {
        "number": 856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 1\nassert solution('4') == 2\n"
    },
    {
        "number": 859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('++-+-') == '1.000000000000'\nassert solution('+-+-+') == '0.500000000000'\nassert solution('+++') == '0.000000000000'\nassert solution('+-??') == '0.000000000000'\nassert solution('+-++') == '0.000000000000'\n"
    },
    {
        "number": 860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 3 0 1') == 'Possible\\n4 5 1 3 2'\nassert solution('9\\n0 2 3 4 1 1 0 2 2') == 'Possible\\n7 5 2 1 6 8 3 4 9'\nassert solution('4\\n0 2 1 1') == 'Impossible'\nassert solution('9\\n0 2 3 4 1 1 0 2 2') == 'Possible\\n7 5 2 1 6 8 3 4 9'\nassert solution('4\\n0 2 1 1') == 'Impossible'\n"
    },
    {
        "number": 861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('4') == None\n"
    },
    {
        "number": 869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '1 1'\nassert solution('2 3') == '2 0'\nassert solution('7 3') == '3 2'\nassert solution('7 3') == '3 2'\nassert solution('7 3') == '3 2'\n"
    },
    {
        "number": 870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 60\n0 0\n1 20\n3 21\n5 0\n19 30\n23 40\n''') == '6 1'\nassert solution('''16 50\n0 30\n1 20\n3 0\n4 30\n6 10\n7 50\n9 30\n11 10\n12 50\n14 30\n16 10\n17 50\n19 30\n21 10\n22 50\n23 59\n''') == '24 50'\nassert solution('''3 17\n0 30\n1 0\n12 0\n''') == '0 0'\nassert solution('''3 17\n0 30\n1 0\n12 0\n''') == '0 0'\nassert solution('''3 17\n0 30\n1 0\n12 0\n''') == '0 0'\n"
    },
    {
        "number": 872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('3\\n1 1 1') == '1 1 1'\nassert solution('4\\n1 1 1 1') == '1 1 1 1'\nassert solution('5\\n1 1 1 1 1') == '1 1 1 1 1'\n"
    },
    {
        "number": 873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '13'\nassert solution('''82195''') == '13'\nassert solution('''64723''') == '13'\nassert solution('''9''') == '13'\nassert solution('''0''') == '13'\n"
    },
    {
        "number": 874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == '2 1'\nassert solution('''4''') == '2 1 4 3'\nassert solution('''5''') == '2 1 4 3 5'\nassert solution('''6''') == '2 1 4 3 5 6'\n"
    },
    {
        "number": 875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 4\n*aba\na*ab\nba*b\nabb*''') == '1\\n4 1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '-1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '1\\n4 1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '1\\n4 1'\nassert solution('''4\n2 3 4\n*abc\na*ab\nba*b\ncbb*''') == '1\\n4 1'\n"
    },
    {
        "number": 876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 1\n''') == '1'\nassert solution('''3 6\n1 1 1\n''') == '2'\nassert solution('''3 1\n1 0 1\n''') == '0'\nassert solution('''3 1\n1 0 1\n''') == '0'\nassert solution('''3 1\n1 0 1\n''') == '0'\n"
    },
    {
        "number": 877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 4\n5 2''') == '2'\nassert solution('''3 3\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''3 2\n3 1\n3 2\n''') == '1'\nassert solution('''3 2\n3 1\n3 2\n1 3\n''') == '1'\nassert solution('''3 2\n3 1\n3 2\n1 3\n1 2\n''') == '2'\n"
    },
    {
        "number": 878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 3''') == 'Finite'\nassert solution('''3\n1 2 3''') == 'Infinite'\nassert solution('''3\n1 2 1''') == 'Finite'\nassert solution('''3\n1 1 1''') == 'Finite'\nassert solution('''3\n1 1 1''') == 'Finite'\n"
    },
    {
        "number": 879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 2 2 3 2 5''') == '1 2 5 8'\nassert solution('''1 2 3 4 5''') == '1 2 3 4 5'\nassert solution('''1 1 2 3 4 3''') == '1 2 3 4 5 6'\nassert solution('''1 1 2 3 4 3''') == '1 2 3 4 5 6'\nassert solution('''1 1 2 3 4 3''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '56'\nassert solution('10') == '30052700'\nassert solution('100') == '564373700'\nassert solution('1000') == '898691200'\n"
    },
    {
        "number": 881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''winlose???winl???w??\nwin\n''') == '5'\nassert solution('''glo?yto?e??an?\nor\n''') == '3'\nassert solution('''??c?????\nabcab\n''') == '2'\nassert solution('''???c???\nabcab\n''') == '2'\nassert solution('''???c???\nabcab\n''') == '2'\n"
    },
    {
        "number": 883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '3'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3 5') == '3'\nassert solution('2\\n3 5') == '2'\nassert solution('2\\n4 5') == '2'\n"
    },
    {
        "number": 884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1\n''') == '3'\nassert solution('''3\n1 2\n2 3\n''') == '11'\nassert solution('''4\n1 2\n1 3\n2 3\n3 4\n''') == '6'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '6'\nassert solution('''6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n''') == '6'\n"
    },
    {
        "number": 886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''527''') == '''572'''\nassert solution('''4573''') == '''3574'''\nassert solution('''1357997531''') == '''-1'''\nassert solution('''527''') == '''572'''\nassert solution('''4573''') == '''3574'''\n"
    },
    {
        "number": 887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 0 1''') == 'YES'\nassert solution('''3\n1 0 0''') == 'NO'\nassert solution('''3\n0 1 0''') == 'NO'\nassert solution('''3\n0 0 1''') == 'NO'\nassert solution('''3\n1 1 1''') == 'YES'\n"
    },
    {
        "number": 888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 2 1 3\n3 2 4 1\n''') == '3'\nassert solution('''4\n4 2 1 3\n3 2 4 1\n''') == '2'\nassert solution('''4\n4 2 1 3\n3 2 4 1\n''') == '1'\nassert solution('''4\n4 2 1 3\n3 2 4 1\n''') == '0'\nassert solution('''4\n4 2 1 3\n3 2 4 1\n''') == '3'\n"
    },
    {
        "number": 889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n####\n.#..\n####\n....\n''') == 'YES'\nassert solution('''\n####\n....\n####\n....\n''') == 'NO'\nassert solution('''\n####\n....\n####\n....\n''') == 'NO'\nassert solution('''\n####\n....\n####\n....\n''') == 'NO'\nassert solution('''\n####\n....\n####\n....\n''') == 'NO'\n"
    },
    {
        "number": 890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5 6 1') == '2'\nassert solution('4 40 50 10') == '2'\nassert solution('5 25 35 10') == '6'\nassert solution('10 10 20 10 20') == '2'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 8\n6 2 9 2 7 2 3''') == '6 5'\nassert solution('''6 4\n2 2 2 3 3 3''') == '2 3'\nassert solution('''7 4\n2 2 2 3 3 3''') == '2 3'\nassert solution('''7 4\n2 2 2 3 3 3''') == '2 3'\nassert solution('''7 4\n2 2 2 3 3 3''') == '2 3'\n"
    },
    {
        "number": 893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\nx, y = [int(x) for x in input().split()]\n\nprint(x, y, x, y)\n"
    },
    {
        "number": 895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\nassert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\nassert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\nassert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\nassert solution('''6\n4 1 7 8 3 8\n1\n''') == '3'\n"
    },
    {
        "number": 896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n2 9\n5 3 13''') == 'YES'\nassert solution('''3 3\n1 7 6\n2 15 12''') == 'NO'\nassert solution('''3 3\n1 7 6\n2 15 12\n1 7 6\n2 15 12''') == 'YES'\nassert solution('''2 3\n2 9\n5 3 13\n1 7 6\n2 15 12\n1 7 6\n2 15 12''') == 'NO'\nassert solution('''2 3\n2 9\n5 3 13\n1 7 6\n2 15 12\n1 7 6\n2 15 12\n1 7 6\n2 15 12''') == 'YES'\n"
    },
    {
        "number": 897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n0\\n1\\n') == '500000004'\nassert solution('1 2\\n1\\n0\\n') == '0'\nassert solution('7 26\\n0 15 12 9 13 0 14\\n11 1 0 13 15 12 0\\n') == '230769233'\nassert solution('7 26\\n0 15 12 9 13 0 14\\n11 1 0 13 15 12 0\\n') == '230769233'\nassert solution('7 26\\n0 15 12 9 13 0 14\\n11 1 0 13 15 12 0\\n') == '230769233'\n"
    },
    {
        "number": 898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 14') == '2'\nassert solution('3 4') == '2'\nassert solution('3 4') == '2'\nassert solution('3 4') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\nassert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\nassert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\nassert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\nassert solution('''3 3\n1 2 1\n1 3 1\n2 3 3''') == '1'\n"
    },
    {
        "number": 900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('??2??5') == '768'\nassert solution('??0??5') == '768'\nassert solution('??0??0') == '768'\nassert solution('??0??0??0??0') == '768'\nassert solution('??0??0??0??0??0') == '768'\n"
    },
    {
        "number": 901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 -3\n4 -2 3 2 -3\n''') == 'YES'\nassert solution('''5 2\n5 3 -2 1 -1 5\n3 -5 2 5\n''') == 'NO'\nassert solution('''7 2\n3 -1 6 7\n7 -5 4 2 4 7 -3 4\n''') == 'YES'\nassert solution('''7 2\n3 -1 6 7\n7 -5 4 2 4 7 -3 4\n''') == 'NO'\nassert solution('''7 2\n3 -1 6 7\n7 -5 4 2 4 7 -3 4\n''') == 'NO'\n"
    },
    {
        "number": 902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 2\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\nassert solution('6 2\\n6 5 3 1 2 4\\n') == '6'\nassert solution('2 10000000000\\n2 1\\n') == '2'\nassert solution('4 2\\n3 1 2 4\\n') == '3'\n"
    },
    {
        "number": 903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('NonZERO') == '5'\nassert solution('this is zero answer text') == '0'\nassert solution('Harbour Space University') == '1'\nassert solution('this is zero answer text') == '0'\nassert solution('Harbour Space University') == '1'\n"
    },
    {
        "number": 905,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 906,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1 -1') == '1'\nassert solution('1 3 1') == '1'\nassert solution('3 3 -1') == '16'\nassert solution('3 3 1') == '1'\nassert solution('3 3 -1') == '16'\n"
    },
    {
        "number": 907,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 'NO'\nassert solution('5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n') == 'YES'\nassert solution('300000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 'YES'\nassert solution('1000000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 'YES'\nassert solution('1000000 5\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n') == 'YES'\n"
    },
    {
        "number": 908,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\nba\nac''') == '1'\nassert solution('''3\n1 3 1\naa\nba\nac''') == '-1'\nassert solution('''2\n5 5\nbbb\naaa\n''') == '-1'\nassert solution('''2\n3 3\naaa\naa\n''') == '-1'\nassert solution('''2\n3 3\naaa\naa\n''') == '-1'\n"
    },
    {
        "number": 909,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '9'\nassert solution('2\\n10\\n3') == '60'\nassert solution('1\\n2\\n3') == '9'\nassert solution('2\\n10\\n3') == '60'\nassert solution('1\\n2\\n3') == '9'\n"
    },
    {
        "number": 910,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 2''') == '0 3'\nassert solution('''8 4 3''') == '7 8 3'\nassert solution('''10 2 2''') == '-1'\nassert solution('''10 2 2''') == '-1'\nassert solution('''10 2 2''') == '-1'\n"
    },
    {
        "number": 911,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2\\n50 85 250\\n10 15 25') == 'Limak'\nassert solution('3 6\\n50 85 250\\n10 15 25') == 'Radewoosh'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76') == 'Tie'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76') == 'Tie'\nassert solution('8 1\\n10 20 30 40 50 60 70 80\\n8 10 58 63 71 72 75 76') == 'Tie'\n"
    },
    {
        "number": 912,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '2'\n\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '0'\n\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '4'\n\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '2'\n\nassert solution('''5\n5 2 3\n1 2 3\n4 3 3\n4 1 2\n10 2 6\n1 2 3 4 5 7\n2 1 1\n2\n100 76 8\n76 75 36 67 41 74 10 77\n''') == '0'"
    },
    {
        "number": 913,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1 1 0 0\\n0 1 1 1 1 1\\n') == '3'\nassert solution('3\\n0 0 0\\n0 0 0\\n') == '-1'\nassert solution('9\\n1 0 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1 0\\n') == '4'\nassert solution('4\\n1 1 1 1\\n1 1 1 1\\n') == '-1'\nassert solution('9\\n1 0 0 0 0 0 0 0 1\\n0 1 1 0 1 1 1 1 0\\n') == '4'\n"
    },
    {
        "number": 914,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 915,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('codeforces') == 'codeforces'\nassert solution('codeforcesisawesome') == 'codeforcesss'\nassert solution('codeforcesisawesomecodeforcesisawesome') == 'codeforcesss'\nassert solution('codeforcesisawesomecodeforcesisawesomecodeforcesisawesome') == 'codeforcesss'\n"
    },
    {
        "number": 916,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 3\n1 1\n''') == '1'\nassert solution('''3\n1 2 3\n1 1\n''') == '0'\nassert solution('''8\n7 2 2 5 4 3 1 1\n1 1 1 4 4 5 6\n''') == '4'\nassert solution('''8\n7 2 2 5 4 3 1 1\n1 1 1 4 4 5 6\n''') == '0'\nassert solution('''8\n7 2 2 5 4 3 1 1\n1 1 1 4 4 5 6\n''') == '0'\n"
    },
    {
        "number": 917,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '262'\n\n\"\"\""
    },
    {
        "number": 918,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\nIvanov 1 763\nAndreev 2 800\nPetrov 1 595\nSidorov 1 790\nSemenov 2 503''') == 'Sidorov Ivanov\\nAndreev Semenov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503''') == '?\\nAndreev Semenov'\nassert solution('''5 2\nIvanov 1 800\nAndreev 2 763\nPetrov 1 800\nSidorov 1 800\nSemenov 2 503\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1 790\nSemenov 1"
    },
    {
        "number": 919,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\nxyabd\\n') == '29'\nassert solution('7 4\\nproblem\\n') == '34'\nassert solution('2 2\\nab\\n') == '-1'\nassert solution('12 1\\nabaabbaaabbb\\n') == '1'\nassert solution('12 1\\nabababababab\\n') == '-1'\n"
    },
    {
        "number": 920,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '1 5 5'\nassert solution('''5''') == '-1'\nassert solution('''6 6 6 6''') == '3 4 6'\nassert solution('''7 7 7 7''') == '-1'\nassert solution('''4 4 4 4''') == '3 4 6'\n"
    },
    {
        "number": 921,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10\\n8 7\\n') == '6 4'\nassert solution('4 4\\n1 1 1 1\\n') == '1 1 1 1'\nassert solution('3 10\\n9 8 10\\n') == '-1'\nassert solution('3 10\\n9 8 10\\n') == '-1'\nassert solution('3 10\\n9 8 10\\n') == '-1'\n"
    },
    {
        "number": 922,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 8\n4 4\n''') == '3 3'\nassert solution('''1 3\n5\n''') == '4'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n2 3\n''') == '0 1'\nassert solution('''2 3\n2 3\n''') == '0 1'\n"
    },
    {
        "number": 923,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 0 0') == 'Yes'\nassert solution('5\\n4 2 1 4 3') == 'Yes'\nassert solution('4\\n0 2 3 1') == 'No'\nassert solution('4\\n0 2 3 1') == 'No'\nassert solution('4\\n0 2 3 1') == 'No'\n"
    },
    {
        "number": 924,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 2 5''') == '2'\nassert solution('''1 3 5''') == '1'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 1 3''') == '1'\nassert solution('''0 1 3''') == '1'\n"
    },
    {
        "number": 925,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('89') == '2'\nassert solution('00') == '4'\nassert solution('73') == '15'\nassert solution('00') == '4'\nassert solution('00') == '4'\n"
    },
    {
        "number": 926,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5 5 5\n3 2 4\n1 4 1\n2 1 3\n3 2 4\n3 3 4''') == '1\\n1'\nassert solution('''7\n10 7 8\n5 10 3\n4 2 6\n5 5 5\n10 2 8\n4 2 1\n7 7 7''') == '2\\n1 5'\nassert solution('''8\n10 10 10\n5 5 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '3\\n1 1 1'\nassert solution('''9\n10 10 10\n5 5 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '4\\n1 1 1 1'\nassert solution('''10\n10 10 10\n5 5 5\n4 4 4\n3 3 3\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == '5\\n1 1 1 1 1'\n"
    },
    {
        "number": 927,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 928,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 929,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 930,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '10'\nassert solution('3 2') == '10'\nassert solution('3 2') == '10'\nassert solution('3 2') == '10'\nassert solution('3 2') == '10'\n"
    },
    {
        "number": 931,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 932,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 0\n0 0''') == 'NO'\nassert solution('''2 3\n1 1 1\n1 1 1''') == 'YES'\nassert solution('''2 3\n0 1 0\n1 1 1''') == 'YES'\nassert solution('''2 3\n0 1 0\n1 1 1''') == 'YES'\nassert solution('''2 3\n1 1 1\n1 1 1''') == 'YES'\n"
    },
    {
        "number": 933,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"helloo\") == \"hello\"\nassert solution(\"woooooow\") == \"woow\"\nassert solution(\"helloo\") == \"hello\"\n"
    },
    {
        "number": 934,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AS\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"2H 4C TH JH AD\") == \"YES\"\nassert solution(\"2H\") == \"NO\"\nassert solution(\"2H 4C TH JH AD\") == \"YES\"\n"
    },
    {
        "number": 935,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Malvika\"\nassert solution(\"2 3\") == \"Malvika\"\nassert solution(\"3 3\") == \"Akshat\"\nassert solution(\"3 4\") == \"Malvika\"\nassert solution(\"4 4\") == \"Akshat\"\n"
    },
    {
        "number": 936,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''9''') == '300'\nassert solution('''100 200 300 200 100 300 300 100 200''') == '300'\nassert solution('''1 3 2 2 1''') == '2'\nassert solution('''9''') == '300'\n"
    },
    {
        "number": 937,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\nassert solution('''6 3\n1 3 5 2 5 4\n1 1 0 1 0 0\n''') == '16'\n"
    },
    {
        "number": 938,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1\\n3\\n2\\n2 1\\n'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5\\n'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5\\n'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5\\n'\nassert solution('9 12') == '2\\n3 6\\n4\\n1 2 4 5\\n'\n"
    },
    {
        "number": 939,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3\n1 4 5\n4 6 7\n''') == '1 1 1 2 2 2 3 3 3'\nassert solution('''9 3\n3 6 9\n2 5 8\n1 4 7\n''') == '1 1 1 2 2 2 3 3 3 3'\nassert solution('''5 2\n4 1 5\n3 1 2\n''') == '2 3 1 1 3'\nassert solution('''7 2\n4 1 5\n3 1 2\n''') == '1 1 1 2 2 2 3 3'\nassert solution('''7 2\n4 1 5\n3 1 2\n4 1 5\n3 1 2\n''') == '1 1 1 2 2 2 3 3'\n"
    },
    {
        "number": 940,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '0'\nassert solution('2 5 3') == '1'\nassert solution('100 10 10') == '81'\nassert solution('100 10 10') == '81'\nassert solution('100 10 10') == '81'\n"
    },
    {
        "number": 941,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('13 3\\n3 2 7\\n') == 'even'\nassert solution('10 9\\n1 2 3 4 5 6 7 8 9\\n') == 'odd'\nassert solution('99 5\\n32 92 85 74 4\\n') == 'odd'\nassert solution('2 2\\n1 0\\n') == 'even'\nassert solution('2 2\\n1 0\\n') == 'even'\n"
    },
    {
        "number": 942,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 943,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == '6'\nassert solution('''5\n999999999 999999999 999999999 999999999 999999999''') == '3999999996'\nassert solution('''1\n1''') == '2'\nassert solution('''2\n1''') == '2'\nassert solution('''1\n2''') == '3'\n"
    },
    {
        "number": 944,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n3 4\n3 2\n''') == '2'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '3'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '1'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '2'\nassert solution('''6\n3 4\n5 4\n3 2\n1 3\n4 6\n''') == '2'\n"
    },
    {
        "number": 945,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 10 5 15\n''') == 'yes'\nassert solution('''4\n0 15 5 10\n''') == 'no'\nassert solution('''4\n0 10 5 15\n''') == 'no'\nassert solution('''4\n0 15 5 10\n''') == 'no'\nassert solution('''4\n0 15 5 10\n''') == 'no'\n"
    },
    {
        "number": 946,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 1') == 'HARD'\nassert solution('1 0 1') == 'EASY'\nassert solution('0 1 1') == 'EASY'\nassert solution('1 1 1') == 'EASY'\nassert solution('0 0 0') == 'EASY'\n"
    },
    {
        "number": 947,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519"
    },
    {
        "number": 948,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\nxxxx\nxfax\nxcex\nxxxx\n''') == '1'\n\nassert solution('''4 2\nxx\ncf\nae\nxx\n''') == '1'\n\nassert solution('''2 3\nfac\ncef\n''') == '2'\n\nassert solution('''1 4\nface\n''') == '0'\n\nassert solution('''4 4\nxxxx\nxfax\nxcex\nxxxx\n''') == '1'"
    },
    {
        "number": 949,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2''') == '1'\nassert solution('''61803398874989484820458683436563811772030917980576 61803398874989484820458683436563811772030917980576''') == '61803398874989484820458683436563811772030917980576'\nprint('All tests passed successfully!')\n"
    },
    {
        "number": 950,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 951,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n11''') == '1'\nassert solution('''3\n99''') == '0'\nassert solution('''3\n9''') == '0'\nassert solution('''3\n9''') == '0'\nassert solution('''3\n9''') == '0'\n"
    },
    {
        "number": 952,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n2 1 1\n5 2 6\n2 3 2\n3 4 3\n4 5 5\n1 5 4\n''') == '2 2'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\nassert solution('''5 7\n2 1 5\n3 2 3\n1 3 3\n2 4 1\n4 3 5\n5 4 1\n1 5 3\n''') == '3 3'\n"
    },
    {
        "number": 953,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n5 2 4 3 6 7 1\n0001001\n0000000\n0000010\n1000001\n0000000\n0010000\n1001000''') == '1 2 4 3 6 7 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\nassert solution('''5\n4 2 1 5 3\n00100\n00011\n10010\n01101\n01010''') == '1 2 3 4 5'\n"
    },
    {
        "number": 954,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abcd\") == 4\nassert solution(\"bbb\") == 1\nassert solution(\"yzyz\") == 2\nassert solution(\"zyzy\") == 2\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 26\n"
    },
    {
        "number": 955,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 C\n6 B\n16 BAC\n4 A\n''') == '15'\n\nassert solution('''2\n10 AB\n15 BA\n''') == '-1'\n\nassert solution('''5\n10 A\n9 BC\n11 CA\n4 A\n5 B\n''') == '13'\n\nassert solution('''6\n100 A\n355 BCA\n150 BC\n160 AC\n180 B\n190 CA\n''') == '250'\n\nassert solution('''6\n100 A\n355 BCA\n150 BC\n160 AC\n180 B\n190 CA\n''') == '250'"
    },
    {
        "number": 956,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 51\n10 23\n23 42\n39 42\n10 39\n39 58''') == '10: 1 42\\n23: 1 39\\n39: 1 23\\n42: 1 10\\n58: 2 10 42'\nassert solution('''5 100\n1 2\n1 3\n1 4\n2 3\n2 4''') == '1: 0\\n2: 0\\n3: 1 4\\n4: 1 3\\n5: 2 10 42'\nassert solution('''5 100\n1 2\n1 3\n1 4\n2 3\n2 4''') == '"
    },
    {
        "number": 957,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcheaibcdi') == 'YES'\nassert solution('hiedi') == 'NO'\nassert solution('hiedi') == 'NO'\nassert solution('hiedi') == 'NO'\nassert solution('hiedi') == 'NO'\n"
    },
    {
        "number": 958,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 26\nbear\n''') == 'roar'\nassert solution('''2 7\naf\n''') == 'db'\nassert solution('''3 1000\nhey\n''') == '-1'\nassert solution('''4 26\nbear\n''') == 'roar'\nassert solution('''2 7\naf\n''') == 'db'\n"
    },
    {
        "number": 959,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 1000\n011\n''') == '2'\nassert solution('''4 4 100500\n0110\n1010\n0101\n1001\n''') == '1'\nassert solution('''3 2 1000\n011\n1010\n0101\n1001\n''') == '0'\nassert solution('''3 2 1000\n011\n1010\n0101\n1001\n''') == '0'\nassert solution('''3 2 1000\n011\n1010\n0101\n1001\n''') == '0'\n"
    },
    {
        "number": 960,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == '11'\nassert solution('1 2') == '3'\nassert solution('4 6') == '10'\nassert solution('1 2') == '3'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 961,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 4 2 5 2 3') == '14'\nassert solution('9\\n5 1 3 1 5 2 4 2 5') == '9'\nassert solution('1\\n1') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n1 1 1') == '1'\n"
    },
    {
        "number": 962,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3''') == '3\\n1\\n2\\n4'\nassert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3''') == '-1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n4 1\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4 3\n4"
    },
    {
        "number": 963,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 964,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 965,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 966,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1987) == \"2013\"\nassert solution(2013) == \"2014\"\nassert solution(2014) == \"2015\"\nassert solution(2015) == \"2016\"\nassert solution(2016) == \"2017\"\n"
    },
    {
        "number": 967,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2 1 3 4\n''') == '2'\nassert solution('''3\n1 2 3\n''') == '0'\nassert solution('''4\n4 3 2 1\n''') == '3'\nassert solution('''1\n1\n''') == '0'\nassert solution('''2\n1 2\n''') == '1'\n"
    },
    {
        "number": 968,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 969,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 970,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 971,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7 10\n5 6\n''') == '1'\n\nassert solution('''1 5 10\n7\n''') == '0'\n\nassert solution('''3 10 10\n5 7 7\n''') == '1'\n\nassert solution('''1 1 1\n1\n''') == '0'\n\nassert solution('''2 1 1\n1\n''') == '0'"
    },
    {
        "number": 972,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''WWWW\nBWWW\nWWWW''') == 'NO'\nassert solution('''WWWW\nBWWW\nWWWW''') == 'YES'\nassert solution('''WWWW\nBWWW\nWWWW''') == 'NO'\nassert solution('''WWWW\nBWWW\nWWWW''') == 'YES'\nassert solution('''WWWW\nBWWW\nWWWW''') == 'NO'\n"
    },
    {
        "number": 973,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 6\n..S...\n..S.W.\n.S....\n..W...\n...W..\n......''') == 'Yes'\nassert solution('''1 2\nSW''') == 'No'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\nassert solution('''5 5\n.S...\n...S.\nS....\n...S.\n.S...''') == 'Yes'\n"
    },
    {
        "number": 974,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nadd 1\nremove\nadd 2\nadd 3\nremove\nremove\n''') == '1'\n\nassert solution('''7\nadd 3\nadd 2\nadd 1\nremove\nadd 4\nremove\nremove\nremove\nadd 6\nadd 7\nadd 5\nremove\nremove\nremove\n''') == '2'\n\nassert solution('''1\nadd 1\nremove\n''') == '0'\n\nassert solution('''1\nremove\n''') == '0'\n\nassert solution('''1\nremove\n1\nremove\n''') == '0'"
    },
    {
        "number": 975,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 976,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n5 6\n10 12''') == '6'\nassert solution('''1 1\n1 100000\n''') == '100000'\nassert solution('''2 1\n1 100000\n''') == '100000'\nassert solution('''2 1\n1 100000\n1 100000\n''') == '100000'\nassert solution('''2 1\n1 100000\n1 100000\n1 100000\n''') == '100000'\n"
    },
    {
        "number": 977,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 4 5\n''') == '1\\n3\\n'\nassert solution('''4 3\n2 3 5 6\n''') == '2\\n3 4\\n'\nassert solution('''4 3\n9 1 1 1\n''') == '0\\n'\nassert solution('''4 3\n1 1 1 1\n''') == '1\\n3\\n'\nassert solution('''4 3\n1 1 1 1\n''') == '2\\n3 4\\n'\n"
    },
    {
        "number": 978,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n.135\n1247\n3468\n5789''') == 'YES'\nassert solution('''5\n..1.\n1111\n..1.\n..1.\n''') == 'YES'\nassert solution('''1\n....\n12.1\n.2..\n.2..\n''') == 'NO'\nassert solution('''2\n.1.\n.1.\n.1.\n''') == 'NO'\nassert solution('''3\n.1.\n.1.\n.1.\n''') == 'NO'\n"
    },
    {
        "number": 979,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 10\\n8 5\\n') == '3'\nassert solution('3 12\\n1 4 5\\n') == '0'\nassert solution('3 7\\n1 4 9\\n') == '1'\nassert solution('3 7\\n1 4 9\\n') == '1'\nassert solution('3 7\\n1 4 9\\n') == '1'\n"
    },
    {
        "number": 980,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\nabac\ncaab\nacba''') == 'acab'\nassert solution('''3 4\nkbbu\nkbub\nubkb''') == 'kbub'\nassert solution('''5 4\nabcd\ndcba\nacbd\ndbca\nzzzz''') == '-1'\nassert solution('''5 4\nabcd\ndcba\nacbd\ndbca\nzzzz''') == '-1'\nassert solution('''3 4\nabcd\ndcba\nacbd\ndbca\nzzzz''') == '-1'\n"
    },
    {
        "number": 981,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 3 2 1 2 3 4 5''') == '55555'\nassert solution('''2\n9 11 1 12 5 8 9 10 6''') == '33'\nassert solution('''0\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''1\n1 1 1 1 1 1 1 1 1''') == '-1'\nassert solution('''1\n1 1 1 1 1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 982,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4\n1 2\n120 150\n''') == 'YES'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'NO'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'YES'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'NO'\nassert solution('''3\n3 4\n1 2\n120 150\n''') == 'YES'\n"
    },
    {
        "number": 983,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 984,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n15 -1 -1\n10 1 3\n5 -1 -1''') == '2'\nassert solution('''8\n6 2 3\n3 4 5\n12 6 7\n1 -1 8\n4 -1 -1\n5 -1 -1\n14 -1 -1\n2 -1 -1''') == '1'\nassert solution('''8\n6 2 3\n3 4 5\n12 6 7\n1 -1 8\n4 -1 -1\n5 -1 -1\n14 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n2 -1 -1\n"
    },
    {
        "number": 985,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 5\\n3 3\\n5 1\\n5 5') == '6'\nassert solution('3\\n1 1\\n2 3\\n3 5') == '0'\nassert solution('5\\n1 1\\n2 3\\n3 5\\n4 1\\n5 5') == '6'\nassert solution('5\\n1 1\\n2 3\\n3 5\\n4 1\\n5 5\\n6 1\\n7 5') == '6'\nassert solution('5\\n1 1\\n2 3\\n3 5\\n4 1\\n5 5\\n6 1\\n7 5\\n8 1\\n9 5') == '6'\n"
    },
    {
        "number": 986,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 987,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n1 2\n3 4\n5 6\n7 8\n9''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9''') == '7 8 9 4 5 6 1 2 3'\nassert solution('''9 6\n1 2 3 4 5 6 7 8 9\n1 4\n4 7\n2 5\n5 8\n3 6\n6 9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4\n5 6\n7 8\n9\n1 2\n3 4"
    },
    {
        "number": 988,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n''') == '**-**-**\\n**-**-**\\n**-**-**\\n**-P-**-**\\n**-**-**\\n**-**-**'\nassert solution('''**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n''') == '**-**-**\\n**-**-**\\n**-P-**-**\\n**-**-**\\n**-**-**\\n**-**-**'\nassert solution('''**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n''') == '**-**-**\\n**-**-**\\n**-P-**-**\\n**-**-**\\n**-**-**\\n**-**-**'\nassert solution('''**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n''') == '**-**-**\\n**-**-**\\n**-P-**-**\\n**-**-**\\n**-**-**\\n**-**-**'\nassert solution('''**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n**-**-**\n''') == '**-**-**\\n**-**-**\\n**-P-**-**\\n**-**-**\\n**-**-**\\n**-**-**'\n"
    },
    {
        "number": 989,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 990,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n1\n1 3\n''') == '3'\nassert solution('''3\n1 2\n2 3\n1\n1 3\n''') == '3'\nassert solution('''3\n1 2\n2 3\n1\n1 3\n''') == '3'\nassert solution('''3\n1 2\n2 3\n1\n1 3\n''') == '3'\nassert solution('''3\n1 2\n2 3\n1\n1 3\n''') == '3'\n"
    },
    {
        "number": 991,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3 2 1\\n1 2 1 2\\n1 3 2 4\\n1 11\\n1 2\\n2 5'\n) == '2\\n14'\n\nassert solution(\n    '3 2 1\\n1 2 1 2\\n1 3 2 4\\n1 11\\n1 2\\n2 5'\n) == '2\\n14'\n\nassert solution(\n    '3 2 1\\n1 2 1 2\\n1 3 2 4\\n1 11\\n1 2\\n2 5'\n) == '2\\n14'\n\nassert solution(\n    '3 2 1\\n1 2 1 2\\n1 3 2 4\\n1 11\\n1 2\\n2 5'\n) == '2\\n14'\n\nassert solution(\n    '3 2 1\\n1 2 1 2\\n1 3 2 4\\n1 11\\n1 2\\n2 5'\n) == '2\\n14'"
    },
    {
        "number": 992,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '6'\nassert solution('2 2 4') == '6'\nassert solution('1 2 3 4 5') == '6'\nassert solution('1 2 3 4 5 6') == '6'\nassert solution('1 2 3 4 5 6 7') == '6'\n"
    },
    {
        "number": 993,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('1 2 3 4 5 6') == '0'\n"
    },
    {
        "number": 994,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 2\n2 0\n7 0''') == '2'\nassert solution('''8 3\n2 0\n7 0\n8 3\n''') == 'IMPOSSIBLE'\nassert solution('''8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n''') == 'IMPOSSIBLE'\nassert solution('''8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n''') == 'IMPOSSIBLE'\nassert solution('''8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3\n2 0\n7 0\n8 3"
    },
    {
        "number": 995,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 -4 2 1 8''') == '5 5 3 2 0'\nassert solution('''5\n5 -4 2 1 8''') == '5 5 3 2 0'\nassert solution('''5\n5 -4 2 1 8''') == '5 5 3 2 0'\nassert solution('''5\n5 -4 2 1 8''') == '5 5 3 2 0'\nassert solution('''5\n5 -4 2 1 8''') == '5 5 3 2 0'\n"
    },
    {
        "number": 996,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 3\n000\n000\n''') == '2'\n\nassert solution('''3 3 3\n111\n111\n111\n''') == '19'\n\nassert solution('''1 1 10\n0101010101\n''') == '0'\n\nassert solution('''3 3 3\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111\n111"
    },
    {
        "number": 997,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aba,123;1a;0\") == \"123,0\"\nassert solution(\"1;;01,a0,\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"a\") == \"-\"\nassert solution(\"\") == \"-\"\n"
    },
    {
        "number": 998,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 999,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 5\n2 6\n2 3\n2\n2 4\n6 8''') == '3'\nassert solution('''3\n1 5\n2 6\n3 7\n2\n2 4\n1 4''') == '0'\nassert solution('''3\n1 5\n2 6\n3 7\n2\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n"
    },
    {
        "number": 1000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '4'\nassert solution('7 6') == '6'\nassert solution('1 1') == '0'\nassert solution
    },
    {
        "number": 1001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '3'\nassert solution('9 3') == '13'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 1004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 7 -7 3 -1 -3\n''') == '1'\n\nassert solution('''8\n1 -1 1 2 -1 -2 3 -3\n''') == '2'\n\nassert solution('''6\n2 5 -5 5 -5 -2\n''') == '-1'\n\nassert solution('''3\n-8 1 1\n''') == '-1'\n\nassert solution('''3\n-8 1 1\n''') == '-1'"
    },
    {
        "number": 1005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == 'YES'\nassert solution('''4''') == 'NO'\nassert solution('''6''') == 'YES'\nassert solution('''3''') == 'YES'\nassert solution('''6\n.#....\n####..\n.####.\n.#.##.\n######\n.#..#.\n''') == 'NO'\n"
    },
    {
        "number": 1007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('saba') == 'NO'\nassert solution('saddastavvat') == 'YES'\nassert solution('saddastavvat') == 'YES'\nassert solution('saddastavvat') == 'YES'\nassert solution('saddastavvat') == 'YES'\n"
    },
    {
        "number": 1009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n0 1 0\\n') == '1'\nassert solution('5\\n1 0 1 0 1\\n') == '4'\nassert solution('5\\n1 0 1 0 1\\n') == '4'\nassert solution('5\\n1 0 1 0 1\\n') == '4'\nassert solution('5\\n1 0 1 0 1\\n') == '4'\n"
    },
    {
        "number": 1011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n2\n5 6\n''') == '9:6'\nassert solution('''5\n6 7 8 9 10\n5\n1 2 3 4 5\n''') == '15:10'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0:0'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0:0'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '0:0'\n"
    },
    {
        "number": 1012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\naa\nabacaba\nxdd''') == '-1'\nassert solution('''3\nabacaba\nxdd\nabacaba''') == 'abaacba'\nassert solution('''3\nabacaba\nxdd\nabacaba''') == 'xdd'\nassert solution('''3\nabacaba\nxdd\nabacaba''') == '-1'\nassert solution('''3\nabacaba\nxdd\nabacaba''') == '-1'\n"
    },
    {
        "number": 1013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 0 0\n0 1 0\n0 0 0''') == '4'\nassert solution('''4 3\n0 0 0\n0 0 1\n1 0 0\n0 0 0''') == '2'\nassert solution('''5 5\n0 0 0\n0 0 1\n0 1 0\n0 0 0\n0 0 0''') == '6'\nassert solution('''6 6\n0 0 0\n0 0 1\n0 1 0\n0 0 0\n0 0 0\n0 0 0''') == '8'\nassert solution('''7 7\n0 0 0\n0 0 1\n0 1 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '10'\n"
    },
    {
        "number": 1014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == 'white'\nassert solution('''3''') == 'black'\nassert solution('''4''') == 'white'\nassert solution('''5''') == 'black'\nassert solution('''6''') == 'white'\n"
    },
    {
        "number": 1015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 0 0 1\\n') == '0 2 3 3 3 3 3 3 3 3 3'\nassert solution('12\\n0 0 0 0 1 1 1 1 0 1 1 0\\n
    },
    {
        "number": 1016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0') == '1'\nassert solution('2 1') == '2'\nassert solution('3 2') == '4'\nassert solution('1 2\\n2 3') == '2'\nassert solution('1 2\\n2 3\\n3 1') == '4'\n"
    },
    {
        "number": 1017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 1018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 3') == '2'\nassert solution('5\\n5 4 5 4 4') == '5'\nassert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '2'\n"
    },
    {
        "number": 1019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 3'\nassert solution('12') == '5 7'\nassert solution('100000000') == '100000000 1'\nassert solution('10000000000') == '10000000000 1'\n"
    },
    {
        "number": 1020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 1') == '8'\nassert solution('7 9 1') == '28'\nassert solution('7 9 2') == '40'\nassert solution('7 9 3') == '56'\nassert solution('7 9 4') == '72'\n"
    },
    {
        "number": 1021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n7 2 4 12''') == 'Yes'\nassert solution('''3\n4 4 4''') == 'No'\nassert solution('''3\n4 4 4''') == 'No'\nassert solution('''3\n4 4 4''') == 'No'\nassert solution('''3\n4 4 4''') == 'No'\n"
    },
    {
        "number": 1022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0 1 1 2\n2 0 1 0 0\n''') == 'YES'\nassert solution('''4\n0 0 2 0\n1 1 1 1\n''') == 'NO'\nassert solution('''3\n0 0 0\n0 0 0\n''') == 'YES'\nassert solution('''3\n0 0 0\n0 0 0\n''') == 'YES'\nassert solution('''3\n0 0 0\n0 0 0\n''') == 'YES'\n"
    },
    {
        "number": 1023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 1''') == '1.916666666666666666666666666667'\nassert solution('''3\n2 3 1''') == '1.916666666666666666666666666667'\nassert solution('''3\n2 3 1''') == '1.916666666666666666666666666667'\nassert solution('''3\n2 3 1''') == '1.916666666666666666666666666667'\nassert solution('''3\n2 3 1''') == '1.916666666666666666666666666667'\n"
    },
    {
        "number": 1025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1 1\\n2 0\\n2 2') == '3'\nassert solution('1 1\\n2 0\\n2 2') == '1'\nassert solution('1 1\\n2 2\\n2 0') == '0'\nassert solution('1 1\\n2 2\\n2 2') == '0'\nassert solution('1 1\\n2 2\\n2 2\\n2 2') == '0'\n"
    },
    {
        "number": 1026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n10 7 1 9 10 15''') == '26'\nassert solution('''1\n400000''') == '400000'\nassert solution('''7\n8 9 26 11 12 29 14''') == '55'\nassert solution('''8\n8 9 26 11 12 29 14''') == '55'\nassert solution('''9\n8 9 26 11 12 29 14''') == '55'\n"
    },
    {
        "number": 1027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1') == '10 10'\nassert solution('3 2') == '1 1'\nassert solution('6 3') == '3 6'\nassert solution('1 1') == '1 1'\nassert solution('2 2') == '1 1'\n"
    },
    {
        "number": 1029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('17 5 2') == '<< 3 4 (5) 6 7 >>'\nassert solution('6 5 2') == '<< 3 4 (5) 6 \nassert solution('6 1 2') == '(1) 2 3 >>'\nassert solution('6 2 2') == '1 (2) 3 4 >>'\nassert solution('9 6 3') == '<< 3 4 5 (6) 7 8 9'\n"
    },
    {
        "number": 1031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') =='/ \\     \\n  \\    \\n   \\   \\n    \\  \\n     \\ /'\nassert solution('2\\n1') =='/ \\     \\n  \\    \\n   \\   \\n    \\  \\n     \\ /'\nassert solution('3\\n1') =='/ \\     \\n  \\    \\n   \\   \\n    \\  \\n     \\ /'\nassert solution('4\\n1') =='/ \\     \\n  \\    \\n   \\   \\n    \\  \\n     \\ /'\nassert solution('5\\n1') =='/ \\     \\n  \\    \\n   \\   \\n    \\  \\n     \\ /'\n"
    },
    {
        "number": 1032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1\\n3\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\nassert solution('4 3') == '2\\n3\\n4\\n'\n"
    },
    {
        "number": 1033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2''') == '3'\nassert solution('''6 8''') == '3'\nassert solution('''6 8''') == '3'\nassert solution('''6 8''') == '3'\nassert solution('''6 8''') == '3'\n"
    },
    {
        "number": 1034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 2 8\n4 6\n1 5\n3 8''') == '19\\n17\\n15\\n14\\n13\\n12\\n10\\n8'\nassert solution('''2 2 2 8\n4 6\n1 5\n3 8\n2 4\n1 3\n2 3\n1 2\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 1035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 18') == '3'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 1036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'P'\n"
    },
    {
        "number": 1037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5''') == '3\\n2\\n4'\nassert solution('''5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5''') == '3\\n2\\n4'\nassert solution('''5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5''') == '3\\n2\\n4'\nassert solution('''5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5''') == '3\\n2\\n4'\nassert solution('''5\n1 2 1\n1 3 1\n2 4 1\n3 5 1\n3 1\n2 4\n2 3\n4 5''') == '3\\n2\\n4'\n"
    },
    {
        "number": 1040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('icefox') == 'ice'\nassert solution('ice') == 'ice'\nassert solution('ice') == 'ice'\nassert solution('ice') == 'ice'\nassert solution('ice') == 'ice'\n"
    },
    {
        "number": 1041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''30\n000100000100000110000000001100''') == 'YES'\nassert solution('''6\n314159''') == 'NO'\nassert solution('''1\n1''') == 'YES'\nassert solution('''1\n0''') == 'NO'\nassert solution('''1\n0''') == 'NO'\n"
    },
    {
        "number": 1042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 9') == '3'\nassert solution('5 8') == '0'\nassert solution('1 2') == '0'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 1043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 9 1 -1''') == '0'\nassert solution('''8\n11 -1 13 19 24 7 17 5''') == '12'\nassert solution('''8\n11 -1 13 19 24 7 17 5''') == '12'\nassert solution('''8\n11 -1 13 19 24 7 17 5''') == '12'\nassert solution('''8\n11 -1 13 19 24 7 17 5''') == '12'\n"
    },
    {
        "number": 1044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '2'\nassert solution('''5\n1 1 5 1 1\n''') == '2'\nassert solution('''5\n1 1 5 1 1\n''') == '2'\nassert solution('''5\n1 1 5 1 1\n''') == '2'\nassert solution('''5\n1 1 5 1 1\n''') == '2'\n"
    },
    {
        "number": 1045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('25') == '4'\nassert solution('1\\n1') == '1'\nassert solution('1\\n25') == '4'\n"
    },
    {
        "number": 1046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 7 1 7 10') == '2'\nassert solution('1 1 1') == '-1'\nassert solution('1 0 0') == '0'\nassert solution
    },
    {
        "number": 1047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9''') == '9'\nassert solution('''32''') == '3'\nassert solution('''1''') == '1'\nassert solution('''0''') == '0'\nassert solution('''10''') == '1'\n"
    },
    {
        "number": 1048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('U') == 'U'\nassert solution('UD') == 'U'\nassert solution('UDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUD"
    },
    {
        "number": 1049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n10\n00\n''') == '2'\n\nassert solution('''4 1\n0100\n''') == '1'\n\nassert solution('''4 5\n1101\n1111\n0110\n1011\n1111\n''') == '2'\n\nassert solution('''4 5\n1101\n1111\n0110\n1011\n1111\n''') == '2'\n\nassert solution('''4 5\n1101\n1111\n0110\n1011\n1111\n''') == '2'"
    },
    {
        "number": 1050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 8 6') == 'Yes'\nassert solution('3 9 3') == 'Yes'\nassert solution('8 5 20') == 'No'\nassert solution('1 2 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\n"
    },
    {
        "number": 1051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25\\n2 3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25 26 28') == '3'\nassert solution('5\\n16 23 8 15 4') == '0'\nassert solution('3\\n14 15 92') == '67'\nassert solution('3\\n14 15 92') == '67'\nassert solution('3\\n14 15 92') == '67'\n"
    },
    {
        "number": 1052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '4'\nassert solution('''5''') == '5'\nassert solution('''6''') == '6'\nassert solution('''7''') == '7'\nassert solution('''8''') == '8'\n"
    },
    {
        "number": 1054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n2 2''') == '4'\nassert solution('''0 0\n0 3''') == '9'\nassert solution('''0 0\n0 3\n1 1\n1 2''') == '9'\nassert solution('''0 0\n0 3\n1 1\n1 2\n2 2''') == '9'\nassert solution('''0 0\n0 3\n1 1\n1 2\n2 2''') == '9'\n"
    },
    {
        "number": 1055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 2 4''') == '4'\nassert solution('''8\n11 12 1 2 13 14 3 4''') == '2'\nassert solution('''4\n7 6 5 4''') == '1'\nassert solution('''8\n7 6 5 4 11 12 13 14 15 16''') == '1'\nassert solution('''8\n7 6 5 4 11 12 13 14 15 16 17''') == '2'\n"
    },
    {
        "number": 1056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0''') == '33.0476190476'\nassert solution('''0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0''') == '20.2591405923'\nassert solution('''0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0''') == '15.9047592939'\nassert solution('''0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0"
    },
    {
        "number": 1057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('ab') == 2\nassert solution('abc') == 3\nassert solution('abcd') == 4\n"
    },
    {
        "number": 1058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n2 1 4\n1 2 4\n3 4 4\n2 8 3\n3 16 3\n1 32 2\n''') == '63'\nassert solution('''7\n1 100000 1\n1 100000 2\n1 100000 2\n4 50000 3\n3 50000 4\n4 50000 4\n3 50000 3\n''') == '300000'\nassert solution('''4\n1 1000 1\n2 500 2\n3 250 3\n4 125 4\n''') == '1000'\nassert solution('''5\n1 100000 1\n2 500 2\n3 250 3\n4 125 4\n5 100000 5\n''') == '100000'\nassert solution('''6\n1 100000 1\n2 500 2\n3 250 3\n4 125 4\n5 100000 5\n6 100000 6\n''') == '100000'\n"
    },
    {
        "number": 1059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '-1'\nassert solution('36') == 'agoeuioaeiruuimaeoieauoweouoiaouimae'\nassert solution('1') == 'a'\nassert solution('2') == 'ae'\nassert solution('3') == 'ai'\n"
    },
    {
        "number": 1060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n3 4 6 8 10 18 21 24''') == 3\nassert solution('''8\n3 4 6 8 10 18 21 24''') == 3\nassert solution('''8\n3 4 6 8 10 18 21 24''') == 3\nassert solution('''8\n3 4 6 8 10 18 21 24''') == 3\nassert solution('''8\n3 4 6 8 10 18 21 24''') == 3\n"
    },
    {
        "number": 1061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0 0 0\n0 0 0 0 0\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == '3'\nassert solution('''0 0 0 0 0\n0 0 0 0 0\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '1'\nassert solution('''0 0 0 0 0\n0 0 0 0 0\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '0'\nassert solution('''0 0 0 0 0\n0 0 0 0 0\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '0'\nassert solution('''0 0 0 0 0\n0 0 0 0 0\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '0'\n"
    },
    {
        "number": 1062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\npergament\npermanent\n''') == '1'\n\nassert solution('''6\nwookie\ncookie\n''') == '1'\n\nassert solution('''4\npetr\negor\n''') == '2'\n\nassert solution('''6\ndouble\nbundle\n''') == '2'\n\nassert solution('''1\na\na\n''') == '-1'"
    },
    {
        "number": 1063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n?\n18\n1?\n''') == 'YES\\n1\\n18\\n19\\n'\nassert solution('''2\n??\n?\n''') == 'NO\\n'\nassert solution('''5\n12224\n12??5\n12226\n?0000\n?00000\n''') == 'YES\\n12224\\n12225\\n12226\\n20000\\n100000\\n'\nassert solution('''1\n?\n?\n''') == 'NO\\n'\nassert solution('''1\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n"
    },
    {
        "number": 1064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3''') == '6'\nassert solution('''4 3 4''') == '1000'\nassert solution('''5 1 5''') == '-1'\nassert solution('''7 4 3''') == '-1'\nassert solution('''7 4 3''') == '-1'\n"
    },
    {
        "number": 1065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3') == '5'\nassert solution('7 7') == '6'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '5'\n"
    },
    {
        "number": 1067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-1') == '2'\nassert solution('2\\n-1 1') == '2'\nassert solution('2\\n-1 1 1') == '4'\nassert solution('2\\n-1 1 1 1') == '13'\nassert solution('2\\n-1 1 1 1 1') == '13'\n"
    },
    {
        "number": 1068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12345168') == '123+45=168'\nassert solution('099') == '0+9=9'\nassert solution('199100') == '1+99=100'\nassert solution('123123123456456456579579579') == '123123123+456456456=579579579'\nassert solution('12312312345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 1069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == 4\nassert solution(124356983594583453458888889) == 0\n\"\"\""
    },
    {
        "number": 1070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\n"
    },
    {
        "number": 1072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('codeforces') == '0'\nassert solution('case') == '2'\nassert solution('care') == '4'\nassert solution('test') == '1'\nassert solution('code') == '3'\n"
    },
    {
        "number": 1073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('URLLDR') == 2\nassert solution('DLUU') == 0\nassert solution('RLRLRLR') == 12\nassert solution('RRRLLRLL') == 12\nassert solution('LLLLRRRR') == 12\n"
    },
    {
        "number": 1074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(129) == 1\nassert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\n"
    },
    {
        "number": 1075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == -1\nassert solution('1') == -1\nassert solution('2') == 0\nassert solution('3') == 1\nassert solution('4') == 2\n"
    },
    {
        "number": 1076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '969862773'\n\"\"\""
    },
    {
        "number": 1077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 1079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '1'\nassert solution('111') == '2'\nassert solution('1101101') == '4'\nassert solution
    },
    {
        "number": 1080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n2\\n') == 'YES'\nassert solution('1\\n1\\n2\\n2\\n') == 'NO'\nassert solution('1\\n1\\n2\\n2\\n') == 'NO'\nassert solution('1\\n1\\n2\\n2\\n') == 'NO'\nassert solution('1\\n1\\n2\\n2\\n') == 'NO'\n"
    },
    {
        "number": 1081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(5) == \"YES\"\nassert solution(13) == \"NO\"\nassert solution(24) == \"NO\"\nassert solution(46) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 1082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '15'\nassert solution('''4\n2 2 2 2\n''') == '7'\nassert solution('''5\n1 2 4 5 8\n''') == '7'\nassert solution('''6\n1 2 4 5 8 9\n''') == '7'\nassert solution('''7\n1 2 4 5 8 9 10\n''') == '7'\n"
    },
    {
        "number": 1083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '0'\nassert solution('''2\n''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 1084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n.#.#..#.\n.....#..\n.#.#..#.\n"
    },
    {
        "number": 1085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n3 4\n3 4\n2 1''') == '0'\nassert solution('''2 2\n1 2\n3 4\n3 4\n2 1''') == '0'\nassert solution('''2 2\n1 2\n3 4\n3 4\n2 1''') == '0'\nassert solution('''2 2\n1 2\n3 4\n3 4\n2 1''') == '0'\nassert solution('''2 2\n1 2\n3 4\n3 4\n2 1''') == '0'\n"
    },
    {
        "number": 1087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '8'\nassert solution('2 2 2') == '8'\nassert solution('2 2 2') == '8'\nassert solution('2 2 2') == '8'\nassert solution('2 2 2') == '8'\n"
    },
    {
        "number": 1090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 1\\nLRLRRL') == '3'\nassert solution('6 1\\nRLLRL') == '3'\nassert solution('6 1\\nRLRLR') == '3'\nassert solution('6 1\\nRLRRL') == '3'\nassert solution('6 1\\nRLLRR') == '3'\n"
    },
    {
        "number": 1091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 7''') == '2 5'\nassert solution('''3\n10 2 8''') == '1 8'\nassert solution('''6\n3 8 2 9 4 14''') == '6 9'\nassert solution('''10\n2 8 2 9 4 14''') == '1 8'\nassert solution('''10\n2 8 2 9 4 14''') == '1 8'\n"
    },
    {
        "number": 1092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1\n''') == '1'\nassert solution('''4 2\n1 4\n''') == '2'\nassert solution('''11 2\n4 8\n''') == '6720'\nassert solution('''11 2\n4 8\n''') == '6720'\nassert solution('''11 2\n4 8\n''') == '6720'\n"
    },
    {
        "number": 1093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 1094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\nalex\\nivan\\nroman\\nivan\\n') == 'ivan\\nroman\\nalex\\n'\nassert solution('8\\nalina\\nmaria\\nekaterina\\ndarya\\ndarya\\nekaterina\\nmaria\\nalina\\n') == 'alina\\nmaria\\nekaterina\\ndarya\\n'\nassert solution('8\\nalina\\nmaria\\nekaterina\\ndarya\\ndarya\\nekaterina\\nmaria\\nalina\\n') == 'alina\\nmaria\\nekaterina\\ndarya\\n'\nassert solution('8\\nalina\\nmaria\\nekaterina\\ndarya\\ndarya\\nekaterina\\nmaria\\nalina\\n') == 'alina\\nmaria\\nekaterina\\ndarya\\n'\nassert solution('8\\nalina\\nmaria\\nekaterina\\ndarya\\ndarya\\nekaterina\\nmaria\\nalina\\n') == 'alina\\nmaria\\nekaterina\\ndarya\\n'\n"
    },
    {
        "number": 1095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 1096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('e4') == 8\nassert solution('d4') == 4\nassert solution('c3') == 3\nassert solution('a1') == 0\nassert solution('h8') == 0\n"
    },
    {
        "number": 1097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 3''') == '7'\nassert solution('''2 3 1''') == '7'\nassert solution('''14 5 6''') == '14'\nassert solution('''4 4 2 2 1''') == '14'\nassert solution('''3 1 1''') == '-1'\n"
    },
    {
        "number": 1098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n05:43\n''') == '23:59'\nassert solution('''4\n22:00\n03:21\n16:03\n09:59\n''') == '06:37'\nassert solution('''1\n22:00\n03:21\n16:03\n09:59\n''') == '06:37'\nassert solution('''1\n22:00\n03:21\n16:03\n09:59\n''') == '06:37'\nassert solution('''1\n22:00\n03:21\n16:03\n09:59\n''') == '06:37'\n"
    },
    {
        "number": 1099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 5\n2 6\n3 2\n1 2\n2 4\n''') == '1'\n\nassert solution('''4\n2 4\n4 1\n3 4\n''') == '0'\n\nassert solution('''6\n2 4\n4 1\n3 4\n1 2\n2 5\n''') == '1'\n\nassert solution('''6\n2 4\n4 1\n3 4\n1 2\n2 5\n''') == '0'\n\nassert solution('''6\n2 4\n4 1\n3 4\n1 2\n2 5\n''') == '1'"
    },
    {
        "number": 1100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '9'\nassert solution('''3''') == '1'\nassert solution('''10''') == '3'\nassert solution('''100''') == '3'\nassert solution('''1000''') == '3'\n"
    },
    {
        "number": 1101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n0100100\n''') == '2'\nassert solution('''5 1\n01010\n''') == '2'\nassert solution('''3 2\n000\n''') == '1'\nassert solution('''7 2\n01010\n''') == '2'\nassert solution('''7 2\n01010\n''') == '2'\n"
    },
    {
        "number": 1102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n1 1 1 0 1 0\n''') == '3'\nassert solution('''5 2\n0 0 0 1 0\n''') == '1'\nassert solution('''5 2\n0 0 0 1 0\n''') == '1'\nassert solution('''5 2\n0 0 0 1 0\n''') == '1'\nassert solution('''5 2\n0 0 0 1 0\n''') == '1'\n"
    },
    {
        "number": 1103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1'\nassert solution('''8''') == '8'\nassert solution('''24''') == '17'\nassert solution('''1 8 1 2 8 2 3 8 3 4 8 4 5 8 5 6 8 6 7 8 7 8 8 8 8''') == '17'\nassert solution('''8 7 6 5 4 3 2 1''') == '1'\n"
    },
    {
        "number": 1104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 3 2\n1 2 0\n''') == 'YES'\nassert solution('''3\n1 3\n3 2\n''') == 'NO'\nassert solution('''3\n1 3\n3 2\n''') == 'NO'\nassert solution('''3\n1 3\n3 2\n''') == 'NO'\nassert solution('''3\n1 3\n3 2\n''') == 'NO'\n"
    },
    {
        "number": 1105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n1 1''') == 'YES'\nassert solution('''0 1\n1 2\n1 1\n0 2''') == 'NO'\nassert solution('''0 1\n1 1\n0 1\n0 2\n''') == 'YES'\nassert solution('''0 1\n1 1\n0 1\n0 2\n''') == 'NO'\nassert solution('''0 1\n1 1\n0 1\n0 2\n''') == 'YES'\n"
    },
    {
        "number": 1106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 3 4 5 6\n''') == '5'\nassert solution('''3\n1 2 3 4 5 6 7\n''') == '6'\nassert solution('''4\n1 2 3 4 5 6 7 8\n''') == '7'\nassert solution('''5\n1 2 3 4 5 6 7 8 9 10\n''') == '8'\nassert solution('''6\n1 2 3 4 5 6 7 8 9 10 11 12 13\n''') == '9'\n"
    },
    {
        "number": 1107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabbba\n''') == '1'\nassert solution('''4\nabbab\n''') == '0'\nassert solution('''4\nabbbb\n''') == '1'\nassert solution('''4\nabbbb\n''') == '0'\nassert solution('''4\nabbbb\n''') == '1'\n"
    },
    {
        "number": 1108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 1110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '7'\nassert solution('1') == '1'\nassert solution('4') == '5'\nassert solution('5') == '10'\n"
    },
    {
        "number": 1111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 3 2 3\n''') == '160'\nassert solution('''5 2\n1 2 3 4 5\n''') == '645'\nassert solution('''5 2\n1 2 3 4 5\n''') == '645'\nassert solution('''5 2\n1 2 3 4 5\n''') == '645'\nassert solution('''5 2\n1 2 3 4 5\n''') == '645'\n"
    },
    {
        "number": 1112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 1\n1 0 1\n1 1 0''') == '1 1 1\\n1 1 1\\n1 1 1'\nassert solution('''0 3 6\n5 0 5\n4 7 0''') == '6 3 6\\n5 5 5\\n4 7 4'\nassert solution('''0 3 6\n5 0 5\n4 7 0''') == '6 3 6\\n5 5 5\\n4 7 4'\nassert solution('''0 3 6\n5 0 5\n4 7 0''') == '6 3 6\\n5 5 5\\n4 7 4'\nassert solution('''0 3 6\n5 0 5\n4 7 0''') == '6 3 6\\n5 5 5\\n4 7 4'\n"
    },
    {
        "number": 1113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 1 2 1\n''') == '-1'\nassert solution('''3\n1 0 1\n''') == '1'\nassert solution('''4\n0 1 2 239\n''') == '4'\nassert solution('''4\n0 1 2 239\n''') == '-1'\nassert solution('''4\n0 1 2 239\n''') == '-1'\n"
    },
    {
        "number": 1114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n3 2 1\\n1 2 3') == 'Possible\\n3 2 1'\nassert solution('3 3\\n1 1 1\\n1 1 1') == 'Ambiguity'\nassert solution('3 3\\n1 2 1\\n3 3 3') == 'Impossible'\nassert solution('3 3\\n1 2 1\\n3 3 3') == 'Impossible'\nassert solution('3 3\\n1 2 1\\n3 3 3') == 'Impossible'\n"
    },
    {
        "number": 1115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 4\n2\n1 4\n7 9''') == '7'\nassert solution('''1\n5\n1\n1 5\n''') == '-1'\nassert solution('''1\n5\n1\n1 5\n''') == '5'\nassert solution('''1\n5\n1\n1 5\n''') == '-1'\nassert solution('''1\n5\n1\n1 5\n''') == '5'\n"
    },
    {
        "number": 1116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 2\n2 10 4\n5 2 3\n3 2 2''') == 'OBEY'\nassert solution('''1 1 2\n2 10 4\n5 2 3\n3 2 2''') == 'REBEL'\nassert solution('''1 1 2\n2 10 4\n5 2 3\n3 2 2''') == 'REBEL'\nassert solution('''1 1 2\n2 10 4\n5 2 3\n3 2 2''') == 'REBEL'\nassert solution('''1 1 2\n2 10 4\n5 2 3\n3 2 2''') == 'REBEL'\n"
    },
    {
        "number": 1117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n5 2 2 1') == '2'\nassert solution('8\\n4 5 2 2 1 3 5 5') == '4'\nassert solution('1\\n4') == '0'\nassert solution('8\\n4 5 2 2 1 3 5 5') == '4'\nassert solution('1\\n4') == '0'\n"
    },
    {
        "number": 1119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '370000006'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 1120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('24') == '5'\nassert solution('10') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 1121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'ABA'\nassert solution('2 2') == 'AA'\nassert solution('3 4') == 'AAAB'\nassert solution('3 4') == 'AAAB'\nassert solution('3 4') == 'AAAB'\n"
    },
    {
        "number": 1122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1''') == '2 3'\nassert solution('''4 1''') == '2 3'\nassert solution('''4 1''') == '2 3'\nassert solution('''4 1''') == '2 3'\nassert solution('''4 1''') == '2 3'\n"
    },
    {
        "number": 1123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '9'\nassert solution('3 1') == '1'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\nassert solution('3 2') == '9'\n"
    },
    {
        "number": 1124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 6 6''') == '2'\nassert solution('''3\n2 6 6''') == '2'\nassert solution('''3\n2 6 6''') == '2'\nassert solution('''3\n2 6 6''') == '2'\nassert solution('''3\n2 6 6''') == '2'\n"
    },
    {
        "number": 1125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 3''') == '1'\nassert solution('''2\n5 3''') == '1'\nassert solution('''2\n5 3''') == '1'\nassert solution('''2\n5 3''') == '1'\nassert solution('''2\n5 3''') == '1'\n"
    },
    {
        "number": 1126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2 1001') == '1369'\nassert solution('6 2 1001') == '1369'\nassert solution('6 2 1001') == '1369'\nassert solution('6 2 1001') == '1369'\nassert solution('6 2 1001') == '1369'\n"
    },
    {
        "number": 1127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1\n2\n1\n3\n3\n102\n4\n2069''') == '2\\n1\\n1\\n2'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 1128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 1129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n\n\"\"\""
    },
    {
        "number": 1130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 3 1 6''') == '2'\nassert solution('''4 2 3 1 7''') == '4'\nassert solution('''1 2 3 2 6''') == '13'\nassert solution('''1 1 2 1 1''') == '0'\nassert solution('''1 1 2 1 2''') == '0'\n"
    },
    {
        "number": 1132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n2 3\n3 4\n4 1''') == 'bus topology'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == 'ring topology'\nassert solution('''4 4\n1 2\n1 3\n1 4\n4 1''') =='star topology'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == 'unknown topology'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 2\n2 3\n3 4\n4 1''') == 'unknown topology'\n"
    },
    {
        "number": 1133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabb\ncacc\naaa\nbbb''') == '9'\nassert solution('''5\na\na\nbcbcb\ncdecdecdecdecdecde\naaaa''') == '6'\nassert solution('''1\na''') == '1'\nassert solution('''2\na\na''') == '2'\nassert solution('''3\na\na\na''') == '3'\n"
    },
    {
        "number": 1134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n0 1 0 3 0 2''') == '6'\nassert solution('''5\n0 1 2 1 2''') == '1'\nassert solution('''5\n0 1 1 2 2''') == '0'\nassert solution('''5\n0 1 1 2 2''') == '0'\nassert solution('''5\n0 1 1 2 2''') == '0'\n"
    },
    {
        "number": 1135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nlogva''') == 'volga'\nassert solution('''2\nno''') == 'no'\nassert solution('''4\nabba''') == 'baba'\nassert solution('''4\nabba''') == 'baba'\nassert solution('''4\nabba''') == 'baba'\n"
    },
    {
        "number": 1136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 4') == '4'\nassert solution('4 4') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 1137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 2''') == '2'\nassert solution('''9 12 4''') == '7'\nassert solution('''bbaaababb\nabbbabbaaaba''') == '7'\nassert solution('''aabaa\naaba\naabaa''') == '7'\nassert solution('''aabaa\naaba\naabaa''') == '7'\n"
    },
    {
        "number": 1138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RRU\") == \"-1\"\nassert solution(\"UDUR\") == \"1\"\nassert solution(\"RUUR\") == \"2\"\nassert solution(\"LDRR\") == \"3\"\nassert solution(\"RDRR\") == \"4\"\n"
    },
    {
        "number": 1139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 4\n5 5''') == '36'\nassert solution('''4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 2\n3 5\n''') == '36'\nassert solution('''4 5\n2\n1 2\n3 5\n2\n1 3\n4 5\n3\n1 1\n2 2\n3 5\n''') == '36'\n"
    },
    {
        "number": 1140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 2') == '1 1'\nassert solution('2\\n1 2') == '1 1'\nassert solution('3\\n1 2 3\\n1 2 3') == '4 1'\nassert solution('5\\n3 1 2 3 1') == '2 4'\nassert solution('5\\n3 1 2 3 1') == '2 4'\n"
    },
    {
        "number": 1141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\nioi\n1 1 i n''') == 'noi'\nassert solution('''5 3\nwxhak\n3 3 h x\n1 5 x a\n1 3 w g''') == 'gaaak'\nassert solution('''5 3\nioi\n1 1 i n\n1 3 w g\n1 5 x a\n1 3 h x''') == 'gaaak'\nassert solution('''5 3\nioi\n1 1 i n\n1 3 w g\n1 5 x a\n1 3 h x''') == 'gaaak'\nassert solution('''5 3\nioi\n1 1 i n\n1 3 w g\n1 5 x a\n1 3 h x''') == 'gaaak'\n"
    },
    {
        "number": 1142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n2 3 6\n3 4 3\n''') == '9'\nassert solution('''2 5\n3 7 11\n10 12 15\n''') == '30'\nassert solution('''5 42\n42 42 42\n42 43 42\n43 44 42\n44 45 42\n45 45 1\n''') == '-1'\nassert solution('''1 10\n100 111 1\n''') == '1'\nassert solution('''2 10\n100 111 1\n''') == '-1'\n"
    },
    {
        "number": 1143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 23 1 2\n3 13 2 3\n''') == '2'\nassert solution('''3\n12 9 2 1\n12 8 1 3\n12 8 2 2\n''') == '3'\nassert solution('''1\n1 10 1 13\n''') == '1'\nassert solution('''2\n1 10 1 13\n1 10 1 13\n''') == '1'\nassert solution('''3\n12 9 2 1\n12 8 1 3\n12 8 2 2\n''') == '3'\n"
    },
    {
        "number": 1144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nbb?a?\n1''') == '2'\nassert solution('''9\nab??ab???\n3''') == '2'\nassert solution('''9\nab??ab???\n3''') == '2'\nassert solution('''9\nab??ab???\n3''') == '2'\nassert solution('''9\nab??ab???\n3''') == '2'\n"
    },
    {
        "number": 1145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 1 4''') == '1'\nassert solution('''5\n1 2 3 2 5''') == '2'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 2 3''') == '2'\n"
    },
    {
        "number": 1146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2 1 4\n3 1 3 1\n1 2\n''') == 'YES'\nassert solution('''3 3\n1 1\n1 2\n1 1\n''') == 'NO'\nassert solution('''3 3\n1 1\n1 2\n1 1\n''') == 'NO'\nassert solution('''3 3\n1 1\n1 2\n1 1\n''') == 'NO'\nassert solution('''3 3\n1 1\n1 2\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 1147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2 1\\n1 3 5 7\\n') == '3'\nassert solution('4 2 0\\n5 3 1 7\\n') == '4'\nassert solution('5 3 1\\n3 3 3 3 3\\n') == '25'\nassert solution('5 3 1\\n3 3 3 3 3\\n') == '25'\nassert solution('5 3 1\\n3 3 3 3 3\\n') == '25'\n"
    },
    {
        "number": 1148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Oh, my keyboard!\"\n\"\"\""
    },
    {
        "number": 1150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-2 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n-1 1 0 0\n2 2 0 1\n-1 0 0 -2\n3 0 0 -2\n-1 1 -2 0\n''') == '1\\n-1\\n3\\n3'\n\nassert solution('''4\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-2 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n-1 1 0 0\n2 2 0 1\n-1 0 0 -2\n3 0 0 -2\n-1 1 -2 0\n''') == '1\\n-1\\n3\\n3'\n\nassert solution('''4\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-2 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n-1 1 0 0\n2 2 0 1\n-1 0 0 -2\n3 0 0 -2\n-1 1 -2 0\n''') == '1\\n-1\\n3\\n3'\n\nassert solution('''4\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-2 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n-1 1 0 0\n2 2 0 1\n-1 0 0 -2\n3 0 0 -2\n-1 1 -2 0\n''') == '1\\n-1\\n3\\n3'\n\nassert solution('''4\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-2 1 0 0\n-1 1 0 0\n1 -1 0 0\n1 1 0 0\n-1 1 0 0\n-1 1 0 0\n-1 1 0 0\n2 2 0 1\n-1 0 0 -2\n3 0 0 -2\n-1 1 -2 0\n''') == '1\\n-1\\n3\\n3'"
    },
    {
        "number": 1151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 1152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 1 0\n0 1 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0''') == 'Yes'\nassert solution('''6 7\n0 0 1 1 0 0 1\n0 1 0 0 1 0 1\n0 0 0 1 0 0 1\n1 0 1 0 1 0 0\n0 1 0 0 1 0 1\n0 1 0 1 0 0 1\n1 1 0 1 0 1 1\n0 1 1 0 1 0 0\n1 1 0 1 0 1 1\n0 1 1 0 1 0 0\n0 1 1 1 1 0 1\n0 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == 'Yes'\nassert solution('''3 4\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'No'\nassert solution('''3 4\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'No'\nassert solution('''3 4\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 1 1 1\n1 1 1 1\n1 1 1 1''') == 'No'\n"
    },
    {
        "number": 1153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 6\\n2 5 3 1 11 4 4\\n7 8 2 4 1 8\\n') == '3'\nassert solution('3 3\\n1 10 100\\n1 100 10\\n') == '2'\nassert solution('1 4\\n4\\n1 1 1 1\\n') == '1'\nassert solution('1 1\\n1\\n1\\n') == '1'\nassert solution('1 1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 1154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 3''') == '5'\nassert solution('''5 6 3''') == '10'\nassert solution('''5 6 3''') == '2'\nassert solution('''5 6 3''') == '10'\nassert solution('''5 6 3''') == '2'\n"
    },
    {
        "number": 1155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 -3 3 -1 1''') == '8 7'\nassert solution('''10\n4 2 -4 3 1 2 -4 3 2 3''') == '28 27'\nassert solution('''5\n-1 -2 -3 -4 -5''') == '9 6'\nassert solution('''10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10''') == '28 27'\nassert solution('''10\n-1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26 -27 -28 -29 -30 -31 -32 -33 -34 -35 -36 -37 -38 -39 -40 -41 -42 -43 -44 -45 -46 -47 -48 -49 -50''') == '28 27'\n"
    },
    {
        "number": 1158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 2 1 3''') == '1'\nassert solution('''10 3\n1 3 3 1 3 5 5 5 5 100''') == '14'\nassert solution('''10 3\n1 3 3 1 3 5 5 5 5 100''') == '14'\nassert solution('''10 3\n1 3 3 1 3 5 5 5 5 100''') == '14'\nassert solution('''10 3\n1 3 3 1 3 5 5 5 5 100''') == '14'\n"
    },
    {
        "number": 1159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '5'\nassert solution('''8''') == '13'\nassert solution('''1''') == '-1'\nassert solution('''2''') == '-1'\nassert solution('''3''') == '-1'\n"
    },
    {
        "number": 1160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 0 1 1 0''') == 'NO'\nassert solution('''3\nXL\nS,M\nXL,XXL''') == 'YES'\nassert solution('''1 1 2 0 1 1''') == 'NO'\nassert solution('''5\nS\nM\nS,M\nXXL,XXXL\nXL,XXL''') == 'YES'\nassert solution('''0 1 0 1 1 0''') == 'NO'\n"
    },
    {
        "number": 1161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"[<}){}\") == \"2\"\nassert solution(\"{()}[]\") == \"0\"\nassert solution(\"]]\") == \"Impossible\"\nassert solution(\"[<{})]\") == \"Impossible\"\nassert solution(\"[<{})]\") == \"Impossible\"\n"
    },
    {
        "number": 1162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6 3') == '124780545'\nassert solution('5 20 11') == '1'\nassert solution('10 30 10') == '85932500'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 1163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'GBGBGB'\nassert solution('4 2') == 'BGBGBB'\nassert solution('1 1') == 'B'\nassert solution('2 2') == 'BB'\nassert solution('3 3') == 'GBGBGB'\n"
    },
    {
        "number": 1164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('chipsy48.32televizor12.390') == '12.438.32'\nassert solution('a1b2c3.38') == '6.38'\nassert solution('aa0.01t0.03') == '0.04'\nassert solution('aa0.01t0.03') == '0.04'\n"
    },
    {
        "number": 1165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2''') == '''2\n6\n-1\n4\n'''\n\nassert solution('''6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2''') == '''2\n6\n-1\n4\n'''\n\nassert solution('''6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2''') == '''2\n6\n-1\n4\n'''\n\nassert solution('''6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2''') == '''2\n6\n-1\n4\n'''\n\nassert solution('''6 4\n1 2 1 1 3 5\n1 4 1\n2 6 2\n3 4 1\n3 4 2''') == '''2\n6\n-1\n4\n'''"
    },
    {
        "number": 1166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8''') == 'BAAAABAB'\nassert solution('''15''') == 'ABAAAABBBAABAAB'\nassert solution('''3''') == 'ABAAAABAB'\nassert solution('''11''') == 'ABAAAABBBAABAAB'\nassert solution('''2''') == 'ABAAAABAB'\n"
    },
    {
        "number": 1167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4''') == '7 1'\nassert solution('''7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4''') == '-1'\nassert solution('''7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4''') == '1 3'\nassert solution('''7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4''') == '1 3'\nassert solution('''7 5 4 5 8\n7 5 4 5 2\n20 53 45 26 4''') == '1 3'\n"
    },
    {
        "number": 1168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 1 6 5''') == '8'\nassert solution('''4\n3 3 3 3''') == '0'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '0'\nassert solution('''3\n1 2 3''') == '0'\n"
    },
    {
        "number": 1169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '0 1'\nassert solution('3 1') == '1 1'\nassert solution('3 2') == '0 1'\nassert solution('3 3') == '0 1'\nassert solution('3 4') == '0 1'\n"
    },
    {
        "number": 1170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\n21\n0\n1\n''') == '5 2'\nassert solution('''\n3\n0\n1\n''') == '1 1'\nassert solution('''\n3\n1\n2\n3\n''') == '-1'\nassert solution('''\n3\n1\n2\n3\n''') == '-1'\nassert solution('''\n3\n1\n2\n3\n''') == '-1'\n"
    },
    {
        "number": 1171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A??C') == '8'\nassert solution('A??B') == '2'\nassert solution('A??B??C') == '3'\nassert solution('A??B??C???') == '3'\nassert solution('A??B??C???') == '3'\n"
    },
    {
        "number": 1173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 3\n1 2''') == '3'\nassert solution('''3\n2 3\n1 3\n1 2''') == '-1'\nassert solution('''3\n2 3\n1 3\n1 2''') == '3'\nassert solution('''3\n2 3\n1 3\n1 2''') == '-1'\nassert solution('''3\n2 3\n1 3\n1 2''') == '3'\n"
    },
    {
        "number": 1174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2 13 8') == '9'\nassert solution('3 3\\n2 13 8\\n2 13 8') == '9'\nassert solution('3 3\\n2 13 8\\n2 13 8\\n2 13 8') == '9'\nassert solution('3 3\\n2 13 8\\n2 13 8\\n2 13 8\\n2 13 8') == '9'\nassert solution('3 3\\n2 13 8\\n2 13 8\\n2 13 8\\n2 13 8\\n2 13 8') == '9'\n"
    },
    {
        "number": 1175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 19\n"
    },
    {
        "number": 1177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 5') == '4'\nassert solution('10 4 18 3') == '4'\nassert solution('1 2') == '1'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 1180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1\\n108') == '27'\nassert solution('3 2\\n108') == '9'\nassert solution('3 3\\n108') == '6'\nassert solution('3 4\\n108') == '5'\nassert solution('3 5\\n108') == '4'\n"
    },
    {
        "number": 1181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, m = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))"
    },
    {
        "number": 1182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '5\\n101\\n2\\n2\\n60'\n\nassert solution('''5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '5\\n101\\n2\\n2\\n60'\n\nassert solution('''5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '5\\n101\\n2\\n2\\n60'\n\nassert solution('''5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '5\\n101\\n2\\n2\\n60'\n\nassert solution('''5\n6 2\n3 1 1 5 7 10\n1 100\n100\n11 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1\n1\n4 57\n80 60 40 20\n''') == '5\\n101\\n2\\n2\\n60'"
    },
    {
        "number": 1184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"{a, b, c}\") == \"3\"\nassert solution(\"{b, a, b, a}\") == \"2\"\nassert solution(\"{}\") == \"0\"\nassert solution(\"{a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z}\") == \"26\"\nassert solution(\"{a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z}\") == \"52\"\n"
    },
    {
        "number": 1185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 1''') == '9'\nassert solution('''7 1 3''') == '61'\nassert solution('''7 1 3''') == '61'\nassert solution('''7 1 3''') == '61'\nassert solution('''7 1 3''') == '61'\n"
    },
    {
        "number": 1186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'NO'\nassert solution('''6''') == 'YES'\nassert solution('''1''') == 'NO'\nassert solution('''2''') == 'NO'\nassert solution('''3''') == 'NO'\n"
    },
    {
        "number": 1187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 2\n1 3\n3 4\n2 4\n1 4\n''') == '1\\n1 1 1 1 1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '2\\n1 1 2'\nassert solution('''2 2\n1 2\n2 1\n''') == '2\\n1 1'\nassert solution('''2 2\n1 2\n2 1\n''') == '2\\n1 1'\nassert solution('''2 2\n1 2\n2 1\n''') == '2\\n1 1'\n"
    },
    {
        "number": 1188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1''') == '5'\nassert solution('''2 2''') == '5'\nassert solution('''3 2''') == '9'\nassert solution('''11 5''') == '4367'\nassert solution('''37 63''') == '230574'\n"
    },
    {
        "number": 1190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n4 5 9 7\n1 2 11 33\n''') == '1 3 46 36'\nassert solution('''5 1\n1 2 3 4 5\n1 2 3 4 5\n''') == '1 3 5 7 9'\nassert solution('''1 0\n2\n3\n''') == '3'\nassert solution('''1 0\n2\n3\n''') == '3'\nassert solution('''1 0\n2\n3\n''') == '3'\n"
    },
    {
        "number": 1192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '0.833333333333333'\nassert solution('1 3 2') == '1.458333333333334'\nassert solution('1 3 2 4 5') == '0.833333333333333'\nassert solution('1 3 2 4 5 6 7 8 9 10') == '0.833333333333333'\nassert solution('1 3 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '0.833333333333333'\n"
    },
    {
        "number": 1193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1\\n0 1') == '0 1'\nassert solution('0 1\\n0 1') == '0 1'\nassert solution('2\\n0 1\\n0 1') == '1 0 2'\nassert solution('2\\n0 1\\n1 0') == '1 0 2'\nassert solution('3\\n1 2 0\\n2 1 0') == '1 0 2 3'\n"
    },
    {
        "number": 1195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 1196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n3-a 2-b 4-c 3-a 2-c\n2-a 2-b 1-c\n''') == '1'\nassert solution('''6 1\n3-a 6-b 7-a 4-c 8-e 2-a\n3-a\n''') == '6'\nassert solution('''5 5\n1-h 1-e 1-l 1-l 1-o\n1-w 1-o 1-r 1-l 1-d\n''') == '0'\nassert solution('''5 5\n1-h 1-e 1-l 1-l 1-o\n1-w 1-o 1-r 1-l 1-d\n''') == '0'\nassert solution('''5 5\n1-h 1-e 1-l 1-l 1-o\n1-w 1-o 1-r 1-l 1-d\n''') == '0'\n"
    },
    {
        "number": 1197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 1199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n1 3 2 2 1 1\n''') == '6'\nassert solution('''4 2\n1 2 1 1\n''') == '2'\nassert solution('''6 3\n1 3 2 2 1 1\n''') == '6'\nassert solution('''6 3\n1 3 2 2 1 1\n''') == '6'\nassert solution('''6 3\n1 3 2 2 1 1\n''') == '6'\n"
    },
    {
        "number": 1200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-1') == '0'\nassert solution('2\\n-1 1') == '1'\nassert solution('3\\n-1 1 1') == '0'\nassert solution('4\\n-1 1 1 1') == '1'\nassert solution('5\\n-1 1 1 1 1') == '0'\n"
    },
    {
        "number": 1201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 7 4\n2 6 5\n3 7 6''') == '11'\nassert solution('''2\n5 6 1\n3 3 5''') == '1'\nassert solution('''3\n5 6 1\n3 3 5\n2 4 1''') == '1'\nassert solution('''3\n5 6 1\n3 3 5\n2 4 1\n1 1 1''') == '1'\nassert solution('''3\n5 6 1\n3 3 5\n2 4 1\n1 1 1''') == '1'\n"
    },
    {
        "number": 1202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1.5000000000000'\nassert solution('3 5') == '2.6666666666667'\nassert solution('1 1') == '0.0'\nassert solution('1 1') == '0.0'\nassert solution('1 1') == '0.0'\n"
    },
    {
        "number": 1204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '3'\nassert solution('''2 1''') == '-1'\nassert solution('''5 2''') == '12'\nassert solution('''2 1''') == '-1'\nassert solution('''3 2''') == '3'\n"
    },
    {
        "number": 1205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 1\n3 3''') == '3'\nassert solution('''2\n4 3\n1 2\n''') == '-1'\nassert solution('''1\n1 1\n''') == '1'\nassert solution('''2\n1 1\n1 1\n''') == '-1'\nassert solution('''3\n1 1\n1 1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 1206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 7\\n8 10\\n5 5') == '5.7500000000'\nassert solution('3\\n2 5\\n3 4\\n1 6') == '3.5000000000'\nassert solution('3\\n2 5\\n3 4\\n1 6\\n2 7\\n3 8\\n4 9\\n5 10') == '5.7500000000'\nassert solution('3\\n2 5\\n3 4\\n1 6\\n2 7\\n3 8\\n4 9\\n5 10\\n6 11\\n7 12\\n8 13\\n9 14\\n10 15\\n11 16\\n12 17\\n13 18\\n14 19\\n15 20\\n16 21\\n17 22\\n18 23\\n19 24\\n20 25\\n21 26\\n22 27\\n23 28\\n24 29\\n25 30\\n26 31\\n27 32\\n28 33\\n29 34\\n30 35\\n31 36\\n32 37\\n33 38\\n34 39\\n35 40\\n36 41\\n37 42\\n38 43\\n39 44\\n40 45\\n41 46\\n42 47\\n43 48\\n44 49\\n45 50\\n46 51\\n47 52\\n48 53\\n49 54\\n50 55\\n51 56\\n52 57\\n53 58\\n54 59\\n55 60\\n56 61\\n57 62\\n58 63\\n59 64\\n60 65\\n61 66\\n62 67\\n63 68\\n64 69\\n65 70\\n66 71\\n67 72\\n68 73\\n69 74\\n70 75\\n71 76\\n72 77\\n73 78\\n74 79\\n75 80\\n76 81\\n77 82\\n78 83\\n79 84\\n80 85\\n81 86\\n82 87\\n83 88\\n84 89\\n85 90\\n86 91\\n87 92\\n88 93\\n89 94\\n90 95\\n91 96\\n92 97\\n93 98\\n94 99\\n95 100') == '5.7500000000'\nassert solution('3\\n2 5\\n3 4\\n1 6\\n2 7\\n3 8\\n4 9\\n5 10\\n6 11\\n7 12\\n8 13\\n9 14\\n10 15\\n11 16\\n12 17\\n13 18\\n14 19\\n15 20\\n16 21\\n17 22\\n18 23\\n19 24\\n20 25\\n21 26\\n22 27\\n23 28\\n24 29\\n25 30\\n26 31\\n27 32\\n28 33\\n29 34\\n30 35\\n31 36\\n32 37\\n33 38\\n34 39\\n35 40\\n36 41\\n37 42\\n38 43\\n39 44\\n40 45\\n41 46\\n42 47\\n43 48\\n44 49\\n45 50\\n46 51\\n47 52\\n48 53\\n49 54\\n50 55\\n51 56\\n52 57\\n53 58\\n54 59\\n55 60\\n56 61\\n57 62\\n58 63\\n59 64\\n60 65\\n61 66\\n62 67\\n63 68\\n64 69\\n65 70\\n66 71\\n67 72\\n68 73\\n69 74\\n70 75\\n71 76\\n72 77\\n73 78\\n74 79\\n75 80\\n76 81\\n77 82\\n78 83\\n79 84\\n80 85\\n81 86\\n82 87\\n83 88\\n84 89\\n85 90\\n86 91\\n87 92\\n88 93\\n89 94\\n90 95\\n91 96\\n92 97\\n93 98\\n94 99\\n95 100') == '5.7500000000'\n"
    },
    {
        "number": 1207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n2 1\n1 3\n2 3\n4 2\n4 3\n''') == '4'\nassert solution('''3 2\n1 2\n3 2\n''') == '-1'\nassert solution('''3 2\n1 2\n2 3\n''') == '-1'\nassert solution('''3 2\n1 2\n2 3\n1 3\n''') == '-1'\nassert solution('''3 2\n1 2\n2 3\n1 3\n''') == '-1'\n"
    },
    {
        "number": 1208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4.58413\n1.22491\n-2.10517\n-3.70387''') == '4\\n2\\n-2\\n-4'\nassert solution('''5\n-6.32509\n3.30066\n-0.93878\n2.00000\n1.96321''') == '-6\\n3\\n-1\\n2\\n2'\n'''\n"
    },
    {
        "number": 1210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4500.0'\n\n\"\"\""
    },
    {
        "number": 1211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''19 3\n5 4 10''') == '2 4'\nassert solution('''28 3\n5 6 30''') == '1 5'\nassert solution('''28 3\n5 6 30''') == '1 5'\nassert solution('''28 3\n5 6 30''') == '1 5'\nassert solution('''28 3\n5 6 30''') == '1 5'\n"
    },
    {
        "number": 1212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 6 1 1 7 1''') == '3'\nassert solution('''7 3\n1 2 6 1 1 7 1''') == '3'\nassert solution('''7 3\n1 2 6 1 1 7 1''') == '3'\nassert solution('''7 3\n1 2 6 1 1 7 1''') == '3'\nassert solution('''7 3\n1 2 6 1 1 7 1''') == '3'\n"
    },
    {
        "number": 1213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\nR1''') == '''R1\nR1\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT\nPRINT!\nLEFT\nPRINT R\nLEFT\nPRINT 1\nLEFT\nPRINT R\nLEFT"
    },
    {
        "number": 1214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5 11 44\n''') == 'Yes'\nassert solution('''2\n9900\n''') == 'Yes'\nassert solution('''6\n314 1592 6535\n''') == 'No'\nassert solution('''6\n314 1592 6535\n''') == 'No'\nassert solution('''6\n314 1592 6535\n''') == 'No'\n"
    },
    {
        "number": 1215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 0\n"
    },
    {
        "number": 1216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13\npobeeeedaaaaa''') == 'pobeda'\nassert solution('''22\niiiimpleeemeentatiioon''') == 'implemeentatioon'\nassert solution('''18\naeiouyaaeeiioouuyy''') == 'aeiouyaeeioouy'\nassert solution('''24\naaaoooiiiuuuyyyeeeggghhh''') == 'aoiuyeggghhh'\n"
    },
    {
        "number": 1217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 3 5 7 9\n6 4 2 8''') == '3 2 1 4'\nassert solution('''5 5\n1 2 1 2 5\n3 1 4 1 5''') == '4 2 4 2 5'\nassert solution('''5 5\n1 2 1 2 5\n3 1 4 1 5''') == '4 2 4 2 5'\nassert solution('''5 5\n1 2 1 2 5\n3 1 4 1 5''') == '4 2 4 2 5'\nassert solution('''5 5\n1 2 1 2 5\n3 1 4 1 5''') == '4 2 4 2 5'\n"
    },
    {
        "number": 1218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 6 7 8''') == '26'\nassert solution('''5\n4 -5 9 -2 1''') == '15'\nassert solution('''5\n-4 -5 9 -2 1''') == '15'\nassert solution('''5\n-4 -5 9 -2 1''') == '15'\nassert solution('''5\n-4 -5 9 -2 1''') == '15'\n"
    },
    {
        "number": 1220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2\n3 4\n3 2\n4 2\n2 5''') == '2\\n1 4\\n'\nassert solution('''5 5\n1 2\n3 4\n3 2\n4 2\n2 5\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n1 3\n1 2\n1 4\n"
    },
    {
        "number": 1221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n20 18\n2 14''') == '252'\nassert solution('''5 3\n-1 0 1 2 3\n-1 0 1''') == '2'\nassert solution('''5 3\n-1 0 1 2 3\n-1 0 1''') == '2'\nassert solution('''5 3\n-1 0 1 2 3\n-1 0 1''') == '2'\nassert solution('''5 3\n-1 0 1 2 3\n-1 0 1''') == '2'\n"
    },
    {
        "number": 1222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 1223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '5'\nassert solution('2 3 1') == '5'\nassert solution('2 3 1') == '5'\nassert solution('2 3 1') == '5'\nassert solution('2 3 1') == '5'\n"
    },
    {
        "number": 1224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''106''') == '4 2'\nassert solution('''1''') == '-1'\nassert solution('''10''') == '-1'\nassert solution('''100''') == '-1'\nassert solution('''1000''') == '-1'\n"
    },
    {
        "number": 1225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '0'\nassert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('1000') == '50'\n"
    },
    {
        "number": 1226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''100\n1''') == '19'\nassert solution('''100\n2''') == '19'\nassert solution('''100\n3''') == '19'\nassert solution('''100\n4''') == '19'\nassert solution('''100\n5''') == '19'\n"
    },
    {
        "number": 1228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('33') == '0 A'\nassert solution('98') == '1 B'\nassert solution('100') == '1 B'\nassert solution('101') == '2 B'\nassert solution('102') == '2 B'\n"
    },
    {
        "number": 1229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\nabcde\nabcde\nabcde\nabcde\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '3'\nassert solution('''4 3\nabc\nada\nssa\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''3 3\nabc\nada\nssa\n1 1 1\n1 1 1\n1 1 1''') == '2'\nassert solution('''3 3\nabc\nada\nssa\n1 1 1\n1 1 1\n1 1 1''') == '0'\nassert solution('''3 3\nabc\nada\nssa\n1 1 1\n1 1 1\n1 1 1''') == '2'\n"
    },
    {
        "number": 1230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 3 3''') == '3'\nassert solution('''4\n1 1 1 1''') == '0 2 4'\nassert solution('''2\n0 2''') == '-1'\nassert solution('''35\n21 26 18 4 28 2 15 13 16 25 6 32 11 5 31 17 9 3 24 33 14 27 29 1 20 4 12 7 10 30 34 8 19 23 22''') == '13 15 17 19 21'\nassert solution('''35\n21 26 18 4 28 2 15 13 16 25 6 32 11 5 31 17 9 3 24 33 14 27 29 1 20 4 12 7 10 30 34 8 19 23 22''') == '13 15 17 19 21'\n"
    },
    {
        "number": 1231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('3 1') == 'NO'\nassert solution('2 1') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 1232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 1\n1 2 3\n3 4 5''') == 'YES'\nassert solution('''3 3\n3 3\n1 2 3\n3 4 5''') == 'NO'\nassert solution('''5 2\n3 1\n1 1 1 1 1\n2 2''') == 'YES'\nassert solution('''5 2\n3 1\n1 1 1 1 1\n2 2''') == 'NO'\nassert solution('''5 2\n3 1\n1 1 1 1 1\n2 2''') == 'NO'\n"
    },
    {
        "number": 1233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 0 3 1 2''') == '3 2'\nassert solution('''5\n1 2 3 4 0''') == '3 4'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 1234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 2 3\\n5 2 5 2 4 1 1 3 2\\n') == '21'\nassert solution('6 1 4\\n4 1 3 2 2 3\\n') == '12'\nassert solution('2 1 2\\n-1000000000 1000000000\\n') == '0'\nassert solution('2 1 2\\n1000000000 1000000000\\n') == '1'\nassert solution('2 1 2\\n1000000000 1000000000\\n') == '1'\n"
    },
    {
        "number": 1235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n20\n2\n10 20\n''') == '20 20'\nassert solution('''3\n3 2 2\n5\n1 5 7 7 9\n''') == '3 1'\nassert solution('''4\n1 3 5 7\n4\n7 5 3 1\n''') == '1 1'\nassert solution('''4\n1 3 5 7\n4\n7 5 3 1\n''') == '1 1'\nassert solution('''4\n1 3 5 7\n4\n7 5 3 1\n''') == '1 1'\n"
    },
    {
        "number": 1236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7') == '11'\nassert solution('5 10') == '79'\nassert solution('2 77') == '11'\nassert solution('3 33') == '79'\nassert solution('8 21') == '79'\n"
    },
    {
        "number": 1238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10 13 12 8''') == '2'\nassert solution('''5\n7 5 6 4 8''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1''') == '0'\nassert solution('''3\n1''') == '0'\n"
    },
    {
        "number": 1239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n6 -3 0 4') == '2 1'\nassert solution('3\\n-2 0 2') == '2 2'\nassert solution('3\\n-2 0 2') == '2 2'\nassert solution('3\\n-2 0 2') == '2 2'\nassert solution('3\\n-2 0 2') == '2 2'\n"
    },
    {
        "number": 1240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 6\n8 9\n10 3''') == '3'\nassert solution('''2\n6 5\n5 6''') == '1'\nassert solution('''6\n5 9\n1 3\n4 8\n4 5\n23 54\n12 32''') == '0'\nassert solution('''6\n5 9\n1 3\n4 8\n4 5\n23 54\n12 32\n''') == '0'\nassert solution('''6\n5 9\n1 3\n4 8\n4 5\n23 54\n12 32\n''') == '0'\n"
    },
    {
        "number": 1241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 1\n1 0 0 1 1 0 1\n''') == '4'\nassert solution('''10 2\n1 0 0 1 0 1 0 1 0 1\n''') == '5'\nassert solution('''10 3\n1 0 0 1 0 1 0 1 0 1\n''') == '5'\nassert solution('''10 4\n1 0 0 1 0 1 0 1 0 1\n''') == '5'\nassert solution('''10 5\n1 0 0 1 0 1 0 1 0 1\n''') == '5'\n"
    },
    {
        "number": 1242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('bbab') == '0 1 1 0'\nassert solution('aaaaa') == '1 0 0 0 1'\nassert solution('aaaaa') == '1 0 0 0 1'\nassert solution('aaaaa') == '1 0 0 0 1'\n"
    },
    {
        "number": 1243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n''') == 'YES'\nassert solution('''3\n1 1 2\n''') == 'YES'\nassert solution('''4\n7 7 7 7\n''') == 'NO'\nassert solution('''5\n1 1 2 3 4\n''') == 'NO'\nassert solution('''6\n1 1 2 3 4 5\n''') == 'NO'\n"
    },
    {
        "number": 1245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1\n1 1\n1 1\n1 1''') == '(()()()()'\nassert solution('''3\n5 5\n3 3\n2 2''') == '((()))'\nassert solution('''3\n5 5\n3 3\n2 2''') == 'IMPOSSIBLE'\nassert solution('''3\n2 3\n1 4\n1 4\n''') == '((()))'\nassert solution('''3\n2 3\n1 4\n1 4\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 1246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\ninsert 3\ngetMin 4\n''') == '4'\n\nassert solution('''4\ninsert 1\ninsert 1\nremoveMin\ngetMin 2\n''') == '6'\n\nassert solution('''2\ninsert 3\ngetMin 4\n''') == '4'\n\nassert solution('''4\ninsert 1\ninsert 1\nremoveMin\ngetMin 2\n''') == '6'\n\nassert solution('''2\ninsert 3\ngetMin 4\n''') == '4'"
    },
    {
        "number": 1247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"First\"\nassert solution(\"abca\") == \"Second\"\nassert solution(\"abc\") == \"First\"\nassert solution(\"abc\") == \"Second\"\nassert solution(\"abc\") == \"Second\"\n"
    },
    {
        "number": 1248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 2 2''') == '1'\nassert solution('''13 4 3 3''') == '-1'\nassert solution('''13 4 1 3''') == '9'\nassert solution('''13 4 1 3''') == '9'\nassert solution('''13 4 1 3''') == '9'\n"
    },
    {
        "number": 1250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 1 1') == '-1'\n"
    },
    {
        "number": 1251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 2 1 2 1''') == '3'\nassert solution('''2\n2 2''') == '2'\nassert solution('''1\n5''') == '1'\nassert solution('''2\n2 2''') == '2'\nassert solution('''2\n2 2 1 2 1''') == '3'\n"
    },
    {
        "number": 1252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 13''') == '3'\nassert solution('''6 6 7''') == '4'\nassert solution('''5 5 6''') == '3'\nassert solution('''1 2 2''') == '1'\nassert solution('''2 4 2''') == '1 2'\n"
    },
    {
        "number": 1253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n-1 -1 1''') == '3'\nassert solution('''3 1\n-1 -1 1''') == '1'\nassert solution('''3 1\n-1 -1 1''') == '1'\nassert solution('''3 1\n-1 -1 1''') == '1'\nassert solution('''3 1\n-1 -1 1''') == '1'\n"
    },
    {
        "number": 1254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3\\n2 6\\n3 6\\n2 5\\n3 5\\n1 9\\n3 1') == '22'\nassert solution('5 3\\n2 6\\n3 6\\n2 5\\n3 5\\n1 11\\n') == '23'\nassert solution('5 2\\n1 -1\\n1 -5\\n2 -1\\n2 -1\\n1 -10\\n') == '0'\nassert solution('5 2\\n1 -1\\n1 -5\\n2 -1\\n2 -1\\n1 -10\\n') == '0'\nassert solution('5 2\\n1 -1\\n1 -5\\n2 -1\\n2 -1\\n1 -10\\n') == '0'\n"
    },
    {
        "number": 1255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n8 0\n8 10\n8 10\n8 45''') == '2'\nassert solution('''3\n0 12\n10 11\n22 22''') == '1'\nassert solution('''1\n0 0''') == '1'\nassert solution('''2\n0 0\n0 0''') == '1'\nassert solution('''2\n0 0\n0 0\n0 0''') == '1'\n"
    },
    {
        "number": 1256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3+2+1') == '1+2+3'\nassert solution('1+1+3+1+3') == '1+1+1+3+3'\nassert solution('2') == '2'\nassert solution('3+2+1') == '1+2+3'\nassert solution('1+1+3+1+3') == '1+1+1+3+3'\n"
    },
    {
        "number": 1257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1''') == '28'\nassert solution('''5 3''') == '85'\nassert solution('''5 3''') == '85'\nassert solution('''5 3''') == '85'\nassert solution('''5 3''') == '85'\n"
    },
    {
        "number": 1258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3 2\n2 3 5\n4 1 2\n''') == '1 4 2 3 5'\nassert solution('''5\n4 3 2\n2 3 5\n4 1 2\n''') == '1 4 2 3 5'\nassert solution('''5\n4 3 2\n2 3 5\n4 1 2\n''') == '1 4 2 3 5'\nassert solution('''5\n4 3 2\n2 3 5\n4 1 2\n''') == '1 4 2 3 5'\nassert solution('''5\n4 3 2\n2 3 5\n4 1 2\n''') == '1 4 2 3 5'\n"
    },
    {
        "number": 1259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 6\n1 3\n3 4\n4 2\n2 6\n5 6\n5 1\n1 4\n2 5''') == '1\\n1 6 4\\n'\nassert solution('''6 8\n1 3\n3 4\n4 2\n2 6\n5 6\n5 1\n1 4\n2 5''') == '2\\n4\\n1 5 2 4\\n'\nassert solution('''5 4\n1 2\n1 3\n2 4\n2 5\n5 1\n1 4\n2 5''') == '1\\n3 4 5\\n'\nassert solution('''5 4\n1 2\n1 3\n2 4\n2 5\n5 1\n1 4\n2 5''') == '1\\n3 4 5\\n'\nassert solution('''5 4\n1 2\n1 3\n2 4\n2 5\n5 1\n1 4\n2 5''') == '1\\n3 4 5\\n'\n"
    },
    {
        "number": 1260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 -2 0 1 -3''') == '2 3'\nassert solution('''5\n5 2 0 4 0''') == '1 1 2'\nassert solution('''2\n-1''') == '2 2'\nassert solution('''4\n0 -10 0 0\n''') == '1 1 2'\nassert solution('''4\n0 0 0 0\n''') == '1 1 2'\n"
    },
    {
        "number": 1261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1 1 3'\nassert solution('2') == '1 2'\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1 2'\n"
    },
    {
        "number": 1262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n10 8 1\n2 7 1''') == '18'\nassert solution('''5 3\n4 4 4 4 4\n2 2 2 2 2''') == '-1'\nassert solution('''5 3\n4 4 4 4 4\n2 2 2 2 2''') == '-1'\nassert solution('''5 3\n4 4 4 4 4\n2 2 2 2 2''') == '-1'\nassert solution('''5 3\n4 4 4 4 4\n2 2 2 2 2''') == '-1'\n"
    },
    {
        "number": 1264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0 0 1 0') == '4'\nassert solution('1 0 0 1') == '4'\nassert solution('1 0 0 1 1') == '4'\nassert solution('1 0 0 1 1 1') == '4'\nassert solution('1 0 0 1 1 1 1') == '4'\n"
    },
    {
        "number": 1265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11\n10''') == 'YES'\nassert solution('''1\n01''') == 'NO'\nassert solution('''000\n101''') == 'NO'\nassert solution('''11\n11''') == 'YES'\nassert solution('''11\n10''') == 'YES'\n"
    },
    {
        "number": 1266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4 2\nR 1 1\nB 1 5\n''') == 'YES'\nassert solution('''2\n4 2\nR 3 3\nB 1 5\n''') == 'NO'\nassert solution('''2\n4 2\nR 3 3\nB 1 5\n''') == 'NO'\nassert solution('''2\n4 2\nR 3 3\nB 1 5\n''') == 'NO'\nassert solution('''2\n4 2\nR 3 3\nB 1 5\n''') == 'NO'\n"
    },
    {
        "number": 1267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 5\\n3 6\\n') == 'YES'\nassert solution('3\\n6 8 9\\n6 10 12\\n') == 'NO'\nassert solution('5\\n0 0 5 0 0\\n1 1 8 10 5\\n') == 'YES'\nassert solution('4\\n4 1 0 3\\n5 2 2 3\\n') == 'YES'\nassert solution('6\\n0 0 5 0 0\\n1 1 8 10 5\\n') == 'NO'\n"
    },
    {
        "number": 1269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\""
    },
    {
        "number": 1270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '2'\nassert solution('''6''') == '3'\nassert solution('''10''') == '2'\nassert solution('''100''') == '2'\nassert solution('''1000''') == '2'\n"
    },
    {
        "number": 1271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3''') == '2\\n1\\n2'\nassert solution('''3\n1 2\n2 3''') == '2\\n1\\n2'\nassert solution('''3\n1 2\n2 3''') == '2\\n1\\n2'\nassert solution('''3\n1 2\n2 3''') == '2\\n1\\n2'\nassert solution('''3\n1 2\n2 3''') == '2\\n1\\n2'\n"
    },
    {
        "number": 1274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '4'\nassert solution('2 2') == '4'\nassert solution('2 3') == '4'\nassert solution('2 4') == '4'\nassert solution('2 5') == '4'\n"
    },
    {
        "number": 1276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nRRGB''') == '1'\nassert solution('''4\nRGRB''') == '0'\nassert solution('''4\nRGRB''') == '0'\nassert solution('''4\nRRGB''') == '1'\nassert solution('''4\nRRGB''') == '1'\n"
    },
    {
        "number": 1277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ababab''') == '5'\nassert solution('''acbacbacaa''') == '8'\nassert solution('''ababab''') == '5'\nassert solution('''00000000000000000000000000''') == '8'\nassert solution('''01000000000000000000000000''') == '5'\n"
    },
    {
        "number": 1281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('MFM') == '1'\nassert solution('MMFF') == '3'\nassert solution('FFMMM') == '0'\nassert solution('MFMFM') == '1'\nassert solution('MMFFMM') == '3'\n"
    },
    {
        "number": 1283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n"
    },
    {
        "number": 1284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 10 2''') == '17'\nassert solution('''1\n4''') == '4'\nassert solution('''2\n1''') == '1'\nassert solution('''3\n1''') == '1'\nassert solution('''4\n1''') == '1'\n"
    },
    {
        "number": 1285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\nE7\nE7\nE7\n00\n00\nE7\nE7\nE7\n''') == '1'\nassert solution('''4\n7\nF\nF\nF\n''') == '1'\nassert solution('''8\n7\nF\nF\nF\n''') == '1'\nassert solution('''8\n7\nF\nF\nF\n''') == '1'\nassert solution('''8\n7\nF\nF\nF\n''') == '1'\n"
    },
    {
        "number": 1286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n''') == '0/1'\nassert solution('''3\n1 1 1\n''') == '0/1'\nassert solution('''3\n1 1 1\n''') == '0/1'\nassert solution('''3\n1 1 1\n''') == '0/1'\nassert solution('''3\n1 1 1\n''') == '0/1'\n"
    },
    {
        "number": 1287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0.0 0.5 0.8\n0.5 0.0 0.4\n0.2 0.6 0.0''') == '0.680000000000000'\nassert solution('''0.0 0.5 0.8\n0.5 0.0 0.4\n0.2 0.6 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0 0.0 0.0\n0.0"
    },
    {
        "number": 1288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 3 4\\n') == '1'\nassert solution('4 3\\n1 2 3 4\\n') == '2'\nassert solution('5 3\\n5 3 4 2 6\\n') == '2'\nassert solution('6 4\\n5 3 50 2 4 5\\n') == '3'\nassert solution('6 4\\n5 3 50 2 4 5\\n') == '3'\n"
    },
    {
        "number": 1289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n2 3 5 7 11 13\n5\n3 4 5 5 6\n''') == '10'\n\nassert solution('''6\n2 3 5 7 11 13\n9\n1 2 2 3 3 4 5 5 6\n''') == '16'\n\nassert solution('''3\n10 200 300\n4\n1 2 2 3\n''') == '-1'\n\nassert solution('''3\n1 2 3\n4\n1 2 2 3\n''') == '3'\n\nassert solution('''3\n1 2 3\n4\n1 2 2 3\n''') == '-1'"
    },
    {
        "number": 1290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 9\n1 1 2 2 2 3 1 2 3''') == '2'\nassert solution('''3 9\n1 1 2 2 2 3 1 2 3''') == '2'\nassert solution('''3 9\n1 1 2 2 2 3 1 2 3''') == '2'\nassert solution('''3 9\n1 1 2 2 2 3 1 2 3''') == '2'\nassert solution('''3 9\n1 1 2 2 2 3 1 2 3''') == '2'\n"
    },
    {
        "number": 1291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n-1 0\n1 0\n0 -1\n0 1\n''') == 'NO'\nassert solution('''4 4\n1 0\n0 1\n-1 0\n0 -1\n1 1\n-1 1\n-1 -1\n1 -1\n''') == 'YES'\nassert solution('''2 2\n-1 0\n1 0\n0 -1\n0 1\n''') == 'NO'\nassert solution('''4 4\n1 0\n0 1\n-1 0\n0 -1\n1 1\n-1 1\n-1 -1\n1 -1\n''') == 'YES'\nassert solution('''2 2\n-1 0\n1 0\n0 -1\n0 1\n''') == 'NO'\n"
    },
    {
        "number": 1292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 1\n1..\n...\n..2''') == '6 3'\nassert solution('''3 4 4\n1 1 1 1\n....\n"
    },
    {
        "number": 1293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''4\n1 2 2 1''') == '3'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 2 3''') == '2'\n"
    },
    {
        "number": 1294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''a\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n"
    },
    {
        "number": 1295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n-2 2 4\n-3 0''') == '4'\nassert solution('''5 3\n1 5 10 14 17\n4 11 15''') == '3'\nassert solution('''5 3\n1 5 10 14 17\n4 11 15''') == '3'\nassert solution('''5 3\n1 5 10 14 17\n4 11 15''') == '3'\nassert solution('''5 3\n1 5 10 14 17\n4 11 15''') == '3'\n"
    },
    {
        "number": 1296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 11\n2 3 5\n''') == '2 11'\nassert solution('''4 100\n1 2 5 6\n''') == '4 54'\nassert solution('''1 7\n7\n''') == '0 0'\nassert solution('''2 3\n1 2\n''') == '1 1'\nassert solution('''2 4\n1 2 3 4\n''') == '2 4'\n"
    },
    {
        "number": 1297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"GTTAAAG\") == \"1\"\nassert solution(\"AACCAACCAAAAC\") == \"5\"\nassert solution(\"GTTAAAG\") == \"1\"\nassert solution(\"AACCAACCAAAAC\") == \"5\"\nassert solution(\"GTTAAAG\") == \"1\"\n"
    },
    {
        "number": 1298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('11') == ''\nassert solution('111') == ''\nassert solution('1111') == ''\n"
    },
    {
        "number": 1299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n3 6 1 1 6''') == '1 4'\nassert solution('''6 2\n1 1 1 1 1 1''') == '1 3'\nassert solution('''6 2\n1 1 1 1 1 1''') == '1 3'\nassert solution('''6 2\n1 1 1 1 1 1''') == '1 3'\nassert solution('''6 2\n1 1 1 1 1 1''') == '1 3'\n"
    },
    {
        "number": 1300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 9\\n9 9 9 9 9 9 9\\n') == '6'\nassert solution('3 2\\n6 2 6\\n') == '2'\nassert solution('3 2\\n6 2 6\\n') == '2'\nassert solution('3 2\\n6 2 6\\n') == '2'\nassert solution('3 2\\n6 2 6\\n') == '2'\n"
    },
    {
        "number": 1301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"7\\nj......\\n\") == \"jolteon\"\nassert solution(\"7\\n...feon\\n\") == \"leafeon\"\nassert solution(\"7\\n.l.r.o.\\n\") == \"flareon\"\nassert solution(\"7\\n.l.r.o.\\n\") == \"flareon\"\nassert solution(\"7\\n.l.r.o.\\n\") == \"flareon\"\n"
    },
    {
        "number": 1302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2 4 3 1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 1303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 0 4\n2 3\n0 1\n''') == '3'\nassert solution('''2 3 0 20\n15 17\n23 26\n1 4\n7 11\n15 17\n''') == '20'\nassert solution('''2 3 0 20\n15 17\n23 26\n1 4\n7 11\n15 17\n''') == '20'\nassert solution('''1 1 0 4\n2 3\n0 1\n''') == '3'\nassert solution('''2 3 0 20\n15 17\n23 26\n1 4\n7 11\n15 17\n''') == '20'\n"
    },
    {
        "number": 1304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n.........\n.........\n.........\n\n.........\n.........\n... xxx...\n\n.........\n.........\n.........\n''') == '''\n......... \n......... \n......... \n\n......... \n......... \n... xxx... \n\n......... \n......... \n......... \n'''\n\nassert solution('''\nxoo x.. x..\nooo......\nooo......\n\nx.. x.. x..\n.........\n.........\n\nx.. x.. x..\n.........\n.........\n7 4\n''') == '''\nxoo x!! x!! \nooo!!!!!! \nooo!!!!!! \n\nx!! x!! x!! \n!!!!!!!!! \n!!!!!!!!! \n\nx!! x!! x!! \n!!!!!!!!! \n!!!!!!!!! \n'''\n\nassert solution('''\no........\n.........\n.........\n\n... xxx...\n... xox...\n... ooo...\n\n.........\n.........\n.........\n5 5\n''') == '''\no!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n\n!!! xxx!!! \n!!! xox!!! \n!!! ooo!!! \n\n!!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n'''\n\nassert solution('''\no........\n.........\n.........\n\n... xxx...\n... xox...\n... ooo...\n\n.........\n.........\n.........\n7 4\n''') == '''\no!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n\n!!! xxx!!! \n!!! xox!!! \n!!! ooo!!! \n\n!!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n'''\n\nassert solution('''\no........\n.........\n.........\n\n... xxx...\n... xox...\n... ooo...\n\n.........\n.........\n.........\n5 5\n''') == '''\no!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n\n!!! xxx!!! \n!!! xox!!! \n!!! ooo!!! \n\n!!!!!!!!! \n!!!!!!!!! \n!!!!!!!!! \n'''"
    },
    {
        "number": 1305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n25 25 50 50''') == 'YES'\nassert solution('''2\n25 100''') == 'NO'\nassert solution('''4\n50 50 25 25''') == 'NO'\nassert solution('''4\n50 50 25 25''') == 'NO'\nassert solution('''4\n50 50 25 25''') == 'NO'\n"
    },
    {
        "number": 1306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == \"Mahmoud\"\nassert solution(2) == \"Ehab\"\nassert solution(3) == \"Mahmoud\"\nassert solution(4) == \"Ehab\"\nassert solution(5) == \"Mahmoud\"\n"
    },
    {
        "number": 1308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 3 4\n''') == '1'\nassert solution('''4\n1 3 4 6 3 4 100 200\n''') == '5'\nassert solution('''5\n1 3 4 6 3 4 100 200\n''') == '0'\nassert solution('''6\n1 3 4 6 3 4 100 200\n''') == '1'\nassert solution('''7\n1 3 4 6 3 4 100 200\n''') == '2'\n"
    },
    {
        "number": 1310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 1 2''') == '3'\nassert solution('''3\n1 2 7''') == '7'\nassert solution('''4\n4 2 4 8''') == '14'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1''') == '1'\n"
    },
    {
        "number": 1311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3\n3 1\n6 1\n0 2''') == '3'\nassert solution('''4\n2 3\n3 1\n6 1\n0 2\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422 423\n423 424\n424 425\n425 426\n426 427\n427 428\n428 429\n429 430\n430 431\n431 432\n432 433\n433 434\n434 435\n435 436\n436 437\n437 438\n438 439\n439 440\n440 441\n441 442\n442 443\n443 444\n444 445\n445 446\n446 447\n447 448\n448 449\n449 450\n450 451\n451 452\n452 453\n453 454\n454 455\n455 456\n456 457\n457 458\n458 459\n459 460\n460 461\n461 462\n462 463\n463 464\n464 465\n465 466\n467 468\n468 469\n469 470\n470 471\n471 472\n472 473\n473 474\n474 475\n475 476\n477 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n489 489\n490 490\n491 491\n492 492\n493 493\n494 494\n495 495\n496 496\n497 497\n498 498\n499 499\n500 500"
    },
    {
        "number": 1312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 3') == '4 4 4'\nassert solution('15 4') == '3 4 4 4'\nassert solution('18 7') == '2 2 2 3 3 3 3'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 1313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"First\"\n\n\"\"\""
    },
    {
        "number": 1314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 5\n-6 4\n7 -2''') == '1 2'\nassert solution('''4\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14''') == '9 -12'\nassert solution('''2\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14''') == '9 -12'\nassert solution('''2\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14''') == '9 -12'\nassert solution('''2\n2 2\n8 2\n-7 0\n-2 6\n1 -14\n16 -12\n11 -18\n7 -14''') == '9 -12'\n"
    },
    {
        "number": 1315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n11 8''') == '9 10'\nassert solution('''5\n10 9 7 10 6''') == ':(\nassert solution('''3\n12 3 3''') == '4 4 10'\nassert solution('''4\n12 3 3 4''') == '4 4 10'\nassert solution('''6\n12 3 3 4 5 6''') == '4 4 10'\n"
    },
    {
        "number": 1316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\nassert solution('6 5') == '13'\nassert solution('1000000000 1') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('1000000000 1000000000') == '1000000000000000000'\n"
    },
    {
        "number": 1318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 50\n2 100\n5 30\n3\n4 6 9''') == '2 130'\nassert solution('''3\n10 50\n2 100\n5 30\n3\n4 6 9\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n"
    },
    {
        "number": 1319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 3\n''') == '36'\nassert solution('''3\n2 3 2\n''') == '1728'\nassert solution('''4\n2 3 2 4\n''') == '8128'\nassert solution('''5\n2 3 2 4 5\n''') == '8128'\nassert solution('''6\n2 3 2 4 5 6\n''') == '8128'\n"
    },
    {
        "number": 1320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '4'\nassert solution('''4''') == '9'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\n"
    },
    {
        "number": 1321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 10\n5 5\n10 1''') == '75 110 60'\nassert solution('''3\n2 1\n1 2\n2 1''') == '6 4 6'\nassert solution('''3\n1 1\n1 1\n1 1''') == '1 1 1'\nassert solution('''3\n1 1\n1 1\n1 1''') == '1 1 1'\nassert solution('''3\n1 1\n1 1\n1 1''') == '1 1 1'\n"
    },
    {
        "number": 1322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == 19\nassert solution('''3''') == 19\nassert solution('''4''') == 19\nassert solution('''5''') == 19\nassert solution('''6''') == 19\n"
    },
    {
        "number": 1323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n2 6\n3 100''') == '11'\nassert solution('''2 3\n10 10\n1 1 1''') == '6'\nassert solution('''2 3\n10 10\n1 1 1''') == '6'\nassert solution('''2 3\n10 10\n1 1 1''') == '6'\nassert solution('''2 3\n10 10\n1 1 1''') == '6'\n"
    },
    {
        "number": 1324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n\n\"\"\""
    },
    {
        "number": 1326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '23'\nassert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '2'\nassert solution('''4''') == '3'\n"
    },
    {
        "number": 1327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9''') == '56'\nassert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9''') == '56'\nassert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9''') == '56'\nassert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9''') == '56'\nassert solution('''5 3\n3 1 4\n1 5 9\n2 6 5\n3 5 8\n9 7 9''') == '56'\n"
    },
    {
        "number": 1328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 1') == '3'\nassert solution('1 2 1') == '3'\nassert solution('2 1 2') == '3'\nassert solution('3 3 10') == '3'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 1329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9''') == '0'\nassert solution('''1''') == '1'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\nassert solution('''4''') == '1'\n"
    },
    {
        "number": 1330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5 4 0 4') == '3'\nassert solution('4 5 9 2 1') == '-1'\nassert solution('4 5 9 2 1') == '-1'\nassert solution('4 5 9 2 1') == '-1'\nassert solution('4 5 9 2 1') == '-1'\n"
    },
    {
        "number": 1333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == '###\\n..#\\n###'\nassert solution('3 4') == '####\\n...#\\n####'\nassert solution('5 3') == '#####\\n....#\\n#####'\nassert solution('9 9') == '########\\n........\\n########\\n#........\\n########\\n........\\n########\\n#........'\nassert solution('9 9') == '########\\n........\\n########\\n#........\\n########\\n........\\n########\\n#........'\n"
    },
    {
        "number": 1334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc') == 'ac'\nassert solution('ayy') == 'yaa'\nassert solution('ba') == 'baa'\nassert solution('baa') == 'baa'\nassert solution('baa') == 'baa'\n"
    },
    {
        "number": 1335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 1\\n4 2\\n4 2\\n2 1\\n5 4\\n6 4\\n3 2') == '6'\nassert solution('7\\n4 1\\n4 2\\n4 2\\n2 1\\n5 4\\n6 4\\n3 2') == '6'\nassert solution('7\\n4 1\\n4 2\\n4 2\\n2 1\\n5 4\\n6 4\\n3 2') == '6'\nassert solution('7\\n4 1\\n4 2\\n4 2\\n2 1\\n5 4\\n6 4\\n3 2') == '6'\nassert solution('7\\n4 1\\n4 2\\n4 2\\n2 1\\n5 4\\n6 4\\n3 2') == '6'\n"
    },
    {
        "number": 1337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 2\n2\n3 2\n2 3''') == '2'\nassert solution('''6\n6 3 1 1 3 7\n5\n1 2 3 4 5\n2 3 4 5 1\n''') == '1'\nassert solution('''6\n6 3 1 1 3 7\n5\n1 2 3 4 5\n2 3 4 5 1\n''') == '1'\nassert solution('''6\n6 3 1 1 3 7\n5\n1 2 3 4 5\n2 3 4 5 1\n''') == '1'\nassert solution('''6\n6 3 1 1 3 7\n5\n1 2 3 4 5\n2 3 4 5 1\n''') == '1'\n"
    },
    {
        "number": 1338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('3 2') == '1 3 2'\nassert solution('3 2') == '1 3 2'\nassert solution('3 2') == '1 3 2'\nassert solution('3 2') == '1 3 2'\n"
    },
    {
        "number": 1339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2 2\n3 3''') == '-1'\nassert solution('''1 5\n2 3\n1 10\n7 10\n7 7\n10 10''') == '3'\nassert solution('''1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 434\n435 435\n436 436\n437 437\n438 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448 448\n449 449\n450 450\n451 451\n452 452\n453 453\n454 454\n455 455\n456 456\n457 457\n458 459\n460 460\n461 461\n462 462\n463 463\n464 464\n465 465\n466 466\n467 468\n469 469\n470 470\n471 471\n472 472\n473 473\n474 474\n475 475\n476 476\n477 477\n478 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n489 489\n490 490\n491 491\n492 492\n493 493\n494 494\n495 495\n496 496\n497 497\n498 498\n499 499\n500 500\n501 501\n502 502\n503 503\n504 504\n505 505\n506 506\n507 507\n508 509\n510 511\n512 513\n514 515\n516 517\n518 519\n520 520\n521 521\n522 523\n524 525\n526 527"
    },
    {
        "number": 1340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n3 4 2 3 4 2 2''') == '3'\nassert solution('''5\n20 1 14 10 2''') == '0'\nassert solution('''13\n5 5 4 4 3 5 7 6 5 4 4 6 5''') == '21'\nassert solution('''13\n5 5 4 4 3 5 7 6 5 4 4 6 5''') == '21'\nassert solution('''13\n5 5 4 4 3 5 7 6 5 4 4 6 5''') == '21'\n"
    },
    {
        "number": 1341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('1\\n2') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n3') == '1'\n"
    },
    {
        "number": 1343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 2\n1 2 5\n1 2 3\n2 3 4\n1 4 10\n1 5\n''') == '3'\nassert solution('''3 1 1\n1 2 3\n3\n''') == '-1'\nassert solution('''3 1 1\n1 2 3\n3\n''') == '-1'\nassert solution('''3 1 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n"
    },
    {
        "number": 1344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 7 2 11 15''') == '3'\nassert solution('''6\n100 100 100 100 100 100''') == '1'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '2'\n"
    },
    {
        "number": 1345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 2') == '1'\nassert solution('2 2') == '2'\nassert solution('2 1') == '1'\nassert solution('2 1 2') == '0'\nassert solution('2 1 2 3') == '1'\n"
    },
    {
        "number": 1347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AbRb r Zz\n4\nxR abRb\naA xr\nzz Z\nxr y''') == '2 6'\nassert solution('''RuruRu fedya\n1\nruruRU fedor\n''') == '1 10'\nassert solution('''RuruRu fedya\n1\nruruRU fedor\n''') == '1 10'\nassert solution('''RuruRu fedya\n1\nruruRU fedor\n''') == '1 10'\nassert solution('''RuruRu fedya\n1\nruruRU fedor\n''') == '1 10'\n"
    },
    {
        "number": 1348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n0 1 1\n''') == '3'\nassert solution('''4 2\n2 0 1 3\n''') == '3'\nassert solution('''3 1\n0 0 0\n''') == '-1'\nassert solution('''3 1\n0 0 0\n''') == '-1'\nassert solution('''3 1\n0 0 0\n''') == '-1'\n"
    },
    {
        "number": 1349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n3\n3 3\n1 2 3\n4 1\n1''') == '3'\nassert solution('''5 1\n3\n3 3\n1 2 3\n4 1\n1''') == '1'\nassert solution('''5 1\n3\n3 3\n1 2 3\n4 1\n2''') == '4'\nassert solution('''5 1\n3\n3 3\n1 2 3\n4 1\n2''') == '2'\nassert solution('''5 1\n3\n3 3\n1 2 3\n4 1\n3''') == '3'\n"
    },
    {
        "number": 1350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('121 130') == '123'\nassert solution('98766 100000') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 1 1') == '-1'\n"
    },
    {
        "number": 1352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('2\\n4') == '0'\n"
    },
    {
        "number": 1353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11 3 3\n5\n4 8 6 1 11\n''') == '3'\nassert solution('''5 1 3\n2\n1 5\n''') == '-1'\nassert solution('''5 1 3\n1\n3\n''') == '1'\nassert solution('''5 1 3\n1\n3\n''') == '-1'\nassert solution('''5 1 3\n1\n3\n''') == '1'\n"
    },
    {
        "number": 1355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1''') == '1.41421356237309514547\\n1.00000000000000000000\\n0.00000000000000000000\\n'\nassert solution('''4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1''') == '1.41421356237309514547\\n1.00000000000000000000\\n0.00000000000000000000\\n'\nassert solution('''4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1''') == '1.41421356237309514547\\n1.00000000000000000000\\n0.00000000000000000000\\n'\nassert solution('''4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1''') == '1.41421356237309514547\\n1.00000000000000000000\\n0.00000000000000000000\\n'\nassert solution('''4 3\n0 0\n1 0\n1 1\n0 1\n0 0 1 1\n0 0 0 1\n0 0 1 -1''') == '1.41421356237309514547\\n1.00000000000000000000\\n0.00000000000000000000\\n'\n"
    },
    {
        "number": 1356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"xaxxxxa\") == 3\nassert solution(\"aaabaa\") == 6\nassert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"aa\") == 2\n"
    },
    {
        "number": 1357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\nassert solution('''4 12\n1 2\n1 3\n1 4\n2 1\n2 3\n2 4\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n''') == '12'\nassert solution('''5 4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\nassert solution('''5 4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\nassert solution('''5 4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\n"
    },
    {
        "number": 1360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '2'\n"
    },
    {
        "number": 1362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6 7''') == '3'\nassert solution('''5 4 100''') == '26'\nassert solution('''5 4 100''') == '26'\nassert solution('''5 4 100''') == '26'\nassert solution('''5 4 100''') == '26'\n"
    },
    {
        "number": 1363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u044f"
    },
    {
        "number": 1364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n2 2 2 1 1 2 2''') == '4'\nassert solution('''6\n1 2 1 2 1 2''') == '2'\nassert solution('''9\n2 2 1 1 1 2 2 2 2''') == '6'\nassert solution('''9\n2 2 1 1 1 2 2 2 2 2''') == '6'\nassert solution('''9\n2 2 1 1 1 2 2 2 2 2 2''') == '6'\n"
    },
    {
        "number": 1365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0\n1 2\n''') == '1'\nassert solution('''2 1\n1 2\n''') == '3'\nassert solution('''4 1\n1 2\n2 3\n3 4\n''') == '9'\nassert solution('''7 2\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n''') == '91'\nassert solution('''8 2\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n7 8\n8 9\n''') == '91'\n"
    },
    {
        "number": 1366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1\n2 2\n3 3\n4 4''') == '4'\nassert solution('''4\n1 2\n2 3\n3 4\n4 1''') == '0'\nassert solution('''4\n1 2\n2 3\n3 4\n4 1''') == '0'\nassert solution('''4\n1 1\n2 2\n3 3\n4 4''') == '4'\nassert solution('''4\n1 2\n2 3\n3 4\n4 1''') == '0'\n"
    },
    {
        "number": 1367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n3 8 10 1 7 9 6 5 2''') == '4'\nassert solution('''10\n3 8 10 1 7 9 6 5 2''') == '4'\nassert solution('''10\n3 8 10 1 7 9 6 5 2''') == '4'\nassert solution('''10\n3 8 10 1 7 9 6 5 2''') == '4'\nassert solution('''10\n3 8 10 1 7 9 6 5 2''') == '4'\n"
    },
    {
        "number": 1368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 2''') == '4.500000'\nassert solution('''5 2 2''') == '4.500000'\nassert solution('''5 2 2''') == '4.500000'\nassert solution('''5 2 2''') == '4.500000'\nassert solution('''5 2 2''') == '4.500000'\n"
    },
    {
        "number": 1369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 0\n''') == '0.500000000000000000'\nassert solution('''1 0\n0 0\n''') == '0.500000000000000000'\nassert solution('''1 1\n1 1\n''') == '0.500000000000000000'\nassert solution('''1 1\n1 1\n1 1\n''') == '0.500000000000000000'\nassert solution('''1 1\n1 1\n1 1\n1 1\n''') == '0.500000000000000000'\n"
    },
    {
        "number": 1370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 1372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 3\n8 3\n4 2\n2 1''') == '4'\nassert solution('''9 3\n8 3\n4 2\n2 1''') == '4'\nassert solution('''9 3\n8 3\n4 2\n2 1''') == '4'\nassert solution('''9 3\n8 3\n4 2\n2 1''') == '4'\nassert solution('''9 3\n8 3\n4 2\n2 1''') == '4'\n"
    },
    {
        "number": 1373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '10'\nassert solution('''3 2''') == '10'\nassert solution('''3 2''') == '10'\nassert solution('''3 2''') == '10'\nassert solution('''3 2''') == '10'\n"
    },
    {
        "number": 1374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 30 20''') == '30'\nassert solution('''3\n10 30 20''') == '30'\nassert solution('''3\n10 30 20''') == '30'\nassert solution('''3\n10 30 20''') == '30'\nassert solution('''3\n10 30 20''') == '30'\n"
    },
    {
        "number": 1375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 1 2''') == '0 2 1'\nassert solution('''3\n0 1 2\n0 1 2''') == '0 2 1'\nassert solution('''3\n0 1 2\n0 1 2''') == '0 2 1'\nassert solution('''3\n0 1 2\n0 1 2\n0 1 2''') == '0 2 1'\nassert solution('''3\n0 1 2\n0 1 2\n0 1 2''') == '0 2 1'\n"
    },
    {
        "number": 1379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 3''') == '3'\nassert solution('''10 10 1''') == '2'\nassert solution('''10 10 1''') == '2 1 1 2 2 1 2 1 2'\nassert solution('''10 10 1''') == '2 1 1 2 2 1 2 1 2'\nassert solution('''10 10 1''') == '2 1 1 2 2 1 2 1 2'\n"
    },
    {
        "number": 1380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3 2 3') == '4'\nassert solution('5 3 100 1') == '5'\nassert solution('5 3 100 1') == '5'\nassert solution('5 3 100 1') == '5'\nassert solution('5 3 100 1') == '5'\n"
    },
    {
        "number": 1382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n1 3\n4 2\n4 3''') == '1 2'\nassert solution('''3 3\n1 2\n2 3\n3 1''') == '0 1'\nassert solution('''3 0\n''') == '3 1'\nassert solution('''4 0\n1 2\n2 3\n3 1\n4 2\n4 3\n4 1\n''') == '3 1'\nassert solution('''4 0\n1 2\n1 3\n2 3\n3 1\n''') == '3 1'\n"
    },
    {
        "number": 1383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 0 2 1\n2 0 1 1\n''') == '1'\nassert solution('''3 2\n0 0 0\n1 1 1\n''') == '1'\nassert solution('''5 10\n0 0 0 1 2\n2 1 0 0 0\n''') == '0'\nassert solution('''5 10\n0 0 0 1 2\n2 1 0 0 0\n''') == '0'\nassert solution('''5 10\n0 0 0 1 2\n2 1 0 0 0\n''') == '0'\n"
    },
    {
        "number": 1384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 0 1\n''') == '3'\nassert solution('''6\n0 1 0 0 1 0\n''') == '4'\nassert solution('''1\n0\n''') == '1'\nassert solution('''0\n0\n''') == '1'\nassert solution('''0\n0\n''') == '1'\n"
    },
    {
        "number": 1385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"RUn.exe O\"\"\") == \"<RUn.exe O>\"\nassert solution(\"\"\"   2ne, \" two!. \" \"\n\"\"\") == \"<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<>\\n<"
    },
    {
        "number": 1386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"64\"\n"
    },
    {
        "number": 1387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 4\n1 2 1 2 1 2 1\n''') == 'YES'\nassert solution('''8 5\n1 2 1 2 1 1 1\n''') == 'NO'\nassert solution('''8 5\n1 2 1 2 1 1 1\n''') == 'NO'\nassert solution('''8 5\n1 2 1 2 1 1 1\n''') == 'NO'\nassert solution('''8 5\n1 2 1 2 1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 1388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 8\nBBBBBBBB\nBBBBBBBB\nBBBBBBBB\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\n''') == '2'\n\nassert solution('''3 3\nWWBBWW\nBBWWWW\nWWWWWW\n''') == '4'\n\nassert solution('''4 4\nBBBB\nBBBB\nBBBB\nBBBW\n''') == '4'\n\nassert solution('''6 6\nWWBBWW\nWWBBWW\nWWBBWW\nWWBBWW\nWWBBWW\nWWBBWW\n''') == '3'\n\nassert solution('''3 6\nWWBBWW\nWWBBWW\nWWBBWW\n''') == '3'"
    },
    {
        "number": 1390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 1391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 6\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560\n1234560''') == '10'\nassert solution('''2 1\n1\n10''') == '1'\nassert solution('''2 1\n1\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n10\n2\n"
    },
    {
        "number": 1393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AbC''') == '0 0'\nassert solution('''DCbA''') == '3 0'\nassert solution('''AbC''') == '0 3'\nassert solution('''abc''') == '0 0'\nassert solution('''AbC''') == '0 3'\n"
    },
    {
        "number": 1394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('521') == '2'\nassert solution('1001') == '0'\nassert solution('5678901234567890123456789') == '123'\nassert solution('12345678901234567890123456789') == '123'\nassert solution('123456789012345678901234567890123456789') == '123'\n"
    },
    {
        "number": 1396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 3\n''') == '3'\nassert solution('''4 1\n1 3\n2 3\n1 3\n''') == '3'\nassert solution('''4 1\n1 3\n2 3\n1 3\n2 3\n''') == '3'\nassert solution('''4 1\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n2 3\n1 3\n"
    },
    {
        "number": 1398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 3 2 4') == '0'\nassert solution('6\\n4 5 3 8 3 7') == '2'\nassert solution('4\\n4 3 2 4') == '0'\nassert solution('4\\n4 3 2 4') == '0'\nassert solution('4\\n4 3 2 4') == '0'\n"
    },
    {
        "number": 1399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n0 0 4 4\n-1 5 4 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1''') == '42'\nassert solution('''4\n-1 2 1 2\n-1 0 1 0\n-1 0 0 3\n0 3 1 0''') == '7'\nassert solution('''4\n-1 2 1 2\n-1 0 1 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1''') == '42'\nassert solution('''4\n-1 2 1 2\n-1 0 1 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1''') == '42'\nassert solution('''4\n-1 2 1 2\n-1 0 1 0\n4 0 4 4\n5 2 11 2\n6 1 6 7\n5 6 11 6\n10 1 10 7\n7 0 9 8\n10 -1 11 -1''') == '42'\n"
    },
    {
        "number": 1400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '750000007'\nassert solution(stdin) == '125000003'\n\"\"\"\n\nfrom fractions import Fraction"
    },
    {
        "number": 1401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 1402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n90\n09\n''') == '1'\nassert solution('''2\n11\n55\n''') == '0'\nassert solution('''5\n?????\n?????\n''') == '993531194'\nassert solution('''5\n11\n55\n''') == '0'\nassert solution('''5\n11\n55\n''') == '0'\n"
    },
    {
        "number": 1403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 1\\n101 53 42 102 101 55 54\\n') == '3'\nassert solution('6 5\\n20 15 10 15 20 25\\n') == '1'\nassert solution('7 1000000\\n1 1 1 1 1 1 1\\n') == '7'\nassert solution('7 1000000\\n1 1 1 1 1 1 1\\n') == '7'\nassert solution('7 1000000\\n1 1 1 1 1 1 1\\n') == '7'\n"
    },
    {
        "number": 1404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 -1 2''') == '1'\nassert solution('''2\n-1 -1''') == '200'\nassert solution('''2\n1 1''') == '200'\nassert solution('''2\n1 -1''') == '200'\nassert solution('''2\n1 1''') == '200'\n"
    },
    {
        "number": 1405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 -1''') == '3'\nassert solution('''5\n28 35 7 14 21''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''3\n1 2 -1''') == '3'\n"
    },
    {
        "number": 1406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n5 6 1\\n4 4 1') == '1'\nassert solution('2 3\\n4 8 8\\n9 2 9') == '3'\nassert solution('2 2\\n1 3\\n4 2') == '0'\nassert solution('3 3\\n1 2 3\\n4 8 8\\n9 2 9') == '3'\nassert solution('3 3\\n1 2 3\\n4 8 8\\n9 2 9') == '3'\n"
    },
    {
        "number": 1408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 12\n1 3\n2 15\n2 5\n2 1''') == '5'\nassert solution('''3\n1 10\n2 1\n2 4''') == '3'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 1409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 4 5 1 0') == '1'\nassert solution('0 1 2 3 4 5') == '0'\nassert solution('0 0 0 0 0 0') == '2'\nassert solution('0 0 0 0 0 0') == '2'\nassert solution('0 0 0 0 0 0') == '2'\n"
    },
    {
        "number": 1410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 3\n4 3 2\n3 1 3\n1 2\n2 3\n''') == '6'\nassert solution('''5\n3 4 2 1 2\n4 2 1 5 4\n5 3 2 1 1\n1 2\n3 2\n4 3\n5 4\n''') == '-1'\nassert solution('''5\n3 4 2 1 2\n4 2 1 5 4\n5 3 2 1 1\n1 2\n3 2\n4 3\n5 4\n''') == '9'\nassert solution('''5\n3 4 2 1 2\n4 2 1 5 4\n5 3 2 1 1\n1 2\n3 2\n4 3\n5 4\n''') == '-1'\nassert solution('''5\n3 4 2 1 2\n4 2 1 5 4\n5 3 2 1 1\n1 2\n3 2\n4 3\n5 4\n''') == '9'\n"
    },
    {
        "number": 1411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 100\n40 70\n120 130\n125 180\n''') == '31'\nassert solution('''3 2\n1 12\n15 20\n25 30\n''') == '0'\nassert solution('''5 2\n1 10\n5 15\n14 50\n30 70\n99 100\n''') == '21'\nassert solution('''5 2\n1 10\n5 15\n14 50\n30 70\n99 100\n''') == '3 4'\nassert solution('''5 2\n1 10\n5 15\n14 50\n30 70\n99 100\n''') == '3 4'\n"
    },
    {
        "number": 1413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1234''') == '6'\nassert solution('''4\n2244''') == '10'\nassert solution('''4\n1234''') == '6'\nassert solution('''4\n1234''') == '6'\nassert solution('''4\n1234''') == '6'\n"
    },
    {
        "number": 1414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\nDI\n''') == 'Poor Dima!'\nassert solution('''2 2\nMA\nID\n''') == 'Poor Inna!'\nassert solution('''5 5\nDIMAD\nDIMAI\nDIMAM\nDDMAA\nAAMID\n''') == '4'\nassert solution('''5 5\nDIMAD\nDIMAI\nDIMAM\nDDMAA\nAAMID\n''') == '4'\nassert solution('''5 5\nDIMAD\nDIMAI\nDIMAM\nDDMAA\nAAMID\n''') == '4'\n"
    },
    {
        "number": 1415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 1 1 1\n''') == '3'\nassert solution('''3 18\n4 4 4 2 2 2\n''') == '18'\nassert solution('''1 5\n2 3\n''') == '4.5'\nassert solution('''1 5\n2 3\n''') == '4.5'\nassert solution('''1 5\n2 3\n''') == '4.5'\n"
    },
    {
        "number": 1417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('10') == '19210869'\nassert solution('100') == '8489901'\nassert solution('1000') == '8489901'\nassert solution('10000') == '8489901'\n"
    },
    {
        "number": 1418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '1 2 1'\nassert solution('''3''') == '2 1'\nassert solution('''10''') == '2 1'\nassert solution('''100''') == '2 1'\nassert solution('''1000''') == '2 1'\n"
    },
    {
        "number": 1419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\ngarage for sa-le''') == '7'\nassert solution('''4\nEdu-ca-tion-al Ro-unds are so fun''') == '10'\nassert solution('''4\nEdu-ca-tion-al Ro-unds are so fun''') == '10'\nassert solution('''4\nEdu-ca-tion-al Ro-unds are so fun''') == '10'\nassert solution('''4\nEdu-ca-tion-al Ro-unds are so fun''') == '10'\n"
    },
    {
        "number": 1420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 5 -1 4 3 2 6 5\n1 2\n2 4\n2 5\n1 3\n3 6\n6 7\n6 8\n''') == '25'\nassert solution('''1 -5 1 1\n1 2\n1 4\n2 3\n''') == '2'\nassert solution('''1 -5 1 1\n1 2\n1 4\n2 3\n''') == 'Impossible'\nassert solution('''1 -5 1 1\n1 2\n1 4\n2 3\n''') == 'Impossible'\nassert solution('''1 -5 1 1\n1 2\n1 4\n2 3\n''') == 'Impossible'\n"
    },
    {
        "number": 1422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('0') == 'NO'\nassert solution('1') == 'NO'\nassert solution('01') == 'NO'\nassert solution('0101') == 'NO'\n"
    },
    {
        "number": 1423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 5\n1 1 1 1 1\n3 1 5 4 2\n''') == '3 1 5 4 2'\nassert solution('''4 2 9\n3 4 8 9\n3 2 1 4\n''') == '2 2 2 9'\nassert solution('''6 1 5\n1 1 1 1 1 1\n2 3 5 4 1 6\n''') == '2 2 2 9'\nassert solution('''7 1 5\n1 1 1 1 1 1 1\n2 3 5 4 1 6 7\n''') == '2 2 2 9'\nassert solution('''8 1 5\n1 1 1 1 1 1 1\n2 3 5 4 1 6 7 8\n''') == '2 2 2 9'\n"
    },
    {
        "number": 1424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3 1''') == '0'\nassert solution('''8\n5\n111\n17''') == '3'\nassert solution('''3 3 3''') == '0'\nassert solution('''1\n2\n3\n4''') == '3'\nassert solution('''7 3 1''') == '0'\n"
    },
    {
        "number": 1425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 4') == 'YES'\nassert solution('1 2 3 4 5 6 7 8') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'NO'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13') == 'NO'\n"
    },
    {
        "number": 1426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n''') == '2'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n''') == '-1'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n''') == '2'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n''') == '-1'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n1 3\n''') == '2'\n"
    },
    {
        "number": 1427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\n\"\"\""
    },
    {
        "number": 1428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3\n''') == '3'\nassert solution('''2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3\n''') == '3'\nassert solution('''2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3\n''') == '3'\nassert solution('''2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3\n''') == '3'\nassert solution('''2 3\n0 1 1\n1 0 1\n1 4 0\n1 2\n3 3\n''') == '3'\n"
    },
    {
        "number": 1429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('A') == 'A'\nassert solution('AGCT') == '2'\nassert solution('GCTA') == '2'\nassert solution('GCTAA') == '2'\n"
    },
    {
        "number": 1430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 0 0''') == '1\\n1\\n1'\nassert solution('''3\n0 1 0''') == '-1'\nassert solution('''3\n1 1 1''') == '1\\n1\\n1'\nassert solution('''3\n1 1 1''') == '-1'\nassert solution('''3\n1 1 1''') == '-1'\n"
    },
    {
        "number": 1432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n0 1 0 0\n1 0 1 0\n''') == '9'\nassert solution('''4 4\n0 0 0 0\n1 0 0 1\n0 1 1 0\n0 1 0 0\n''') == '20'\nassert solution('''4 4\n0 0 0 0\n1 0 0 1\n0 1 1 0\n0 1 0 0\n''') == '20'\nassert solution('''4 4\n0 0 0 0\n1 0 0 1\n0 1 1 0\n0 1 0 0\n''') == '20'\nassert solution('''4 4\n0 0 0 0\n1 0 0 1\n0 1 1 0\n0 1 0 0\n''') == '20'\n"
    },
    {
        "number": 1434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 0\n1 0''') == '2\\n1 0\\n2 0'\nassert solution('''2\n1 1\n1 0''') == '1\\n0 1'\nassert solution('''3\n1 1\n1 0\n2 1''') == '2\\n1 0\\n1 1'\nassert solution('''4\n1 1\n1 0\n2 1\n2 1''') == '2\\n1 0\\n1 1\\n2 1'\nassert solution('''5\n1 1\n1 0\n2 1\n2 1\n2 1''') == '2\\n1 0\\n1 1\\n2 1\\n2 1'\n"
    },
    {
        "number": 1435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 1436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-1') == '1'\nassert solution('2\\n-1') == '0'\nassert solution('3\\n-1') == '0'\nassert solution('4\\n-1') == '0'\nassert solution('5\\n-1') == '0'\n"
    },
    {
        "number": 1437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('z') == '3'\nassert solution('V_V') == '9'\nassert solution('Codeforces') == '130653412'\nassert solution('z') == '3'\nassert solution('V_V') == '9'\n"
    },
    {
        "number": 1438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n2 1 4\n11 3 16''') == '4'\nassert solution('''4 3\n4 3 5 6\n11 12 14 20''') == '3'\nassert solution('''3 3\n4 3 5 6\n11 12 14 20''') == '3'\nassert solution('''3 3\n4 3 5 6\n11 12 14 20''') == '3'\nassert solution('''3 3\n4 3 5 6\n11 12 14 20''') == '3'\n"
    },
    {
        "number": 1439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('1 6') == 'NO'\nassert solution('4 6') == 'YES'\nassert solution('6 6') == 'YES'\nassert solution('3 1 1 3') == 'YES'\n"
    },
    {
        "number": 1440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 2 2\\n') == '3'\nassert solution('3\\n3 3 3\\n') == '0'\nassert solution('3\\n1 1 1\\n') == '0'\nassert solution('3\\n3 3 3\\n') == '3'\nassert solution('3\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 1441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 2 1 2''') == '120'\nassert solution('''8\n1 2 2 1 2 1 1 2''') == '16800'\nassert solution('''10\n1 2 2 1 2 1 1 2 1 2''') == '16800'\nassert solution('''100\n1 2 2 1 2 1 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1"
    },
    {
        "number": 1442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\nassert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\nassert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\nassert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\nassert solution('''6 2\nB 10 3\nS 50 2\nS 40 1\nS 50 6\nB 20 4\nB 25 10''') == 'S 50 8\\nS 40 1\\nB 25 10\\nB 20 4'\n"
    },
    {
        "number": 1443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n10\nG\n''') == '30'\nassert solution('''2\n10 10\nWL\n''') == '40'\nassert solution('''3\n10 10 10\nGLW\n''') == '80'\nassert solution('''4\n10 10 10 10\nGLW\n''') == '120'\nassert solution('''5\n10 10 10 10 10\nGLW\n''') == '240'\n"
    },
    {
        "number": 1444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 100 101\n2''') == '2 3'\nassert solution('''3\n1 100 101\n2\n''') == '2 3'\nassert solution('''3\n1 100 101\n2\n''') == '2 3'\nassert solution('''3\n1 100 101\n3\n''') == '1 2'\nassert solution('''3\n1 100 101\n3\n''') == '1 2'\n"
    },
    {
        "number": 1445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 7 6 9 1 2''') == '2 3 9 6 7 1 4'\nassert solution('''8\n6 1 4 2 5 6 9 2''') == '2 1 6 2 5 4 9 6'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('''100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\n'''\n"
    },
    {
        "number": 1446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 2\n1 3\n2 3 0\n3 4 0\n2 4 1\n2 1 2''') == 'Yes\\n0 2\\n2 0\\n'\nassert solution('''3 1 2\n2 1\n1 2 0\n2 3 1\n''') == 'Yes\\n0 1\\n1 0\\n'\nassert solution('''3 2 2\n2 1\n1 2 0\n2 3 1\n''') == 'Yes\\n0 1\\n1 0\\n'\nassert solution('''3 0 2\n1 2\n1 2 0\n2 3 1\n''') == 'No\\n'\nassert solution('''3 1 2\n2 1\n1 2 0\n2 3 1\n''') == 'No\\n'\n"
    },
    {
        "number": 1447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0.6666666666666666'\nassert solution('4 4') == '0.4000000000000000'\nassert solution('1 2') == '1.0000000000000000'\nassert solution('1 1') == '1.0000000000000000'\nassert solution('1 1') == '1.0000000000000000'\n"
    },
    {
        "number": 1448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n4\n2 4\n4 1\n6 3\n4 5''') == 'YES\\nNO\\nNO\\nYES'\nassert solution('''8 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''8 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''8 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\nassert solution('''8 7\n4\n4 4\n2 8\n8 1\n6 1\n''') == 'YES\\nNO\\nYES\\nYES'\n"
    },
    {
        "number": 1449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '-1'\n\nassert solution('''6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '1'\n\nassert solution('''6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '2'\n\nassert solution('''6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '2'\n\nassert solution('''6\n4 1\n0 0 0 1\n3 1\n3 3 3\n11 3\n0 1 2 2 3 3 3 4 4 4\n5 3\n1 2 3 4 5\n9 4\n2 2 3 5 7 11 13 13 17\n10 7\n0 1 1 2 3 3 4 5 5 6\n''') == '1'"
    },
    {
        "number": 1450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"010210\") == \"100210\"\nassert solution(\"11222121\") == \"11112222\"\nassert solution(\"20\") == \"20\"\nassert solution(\"100210\") == \"001120\"\nassert solution(\"11222121\") == \"11112222\"\n"
    },
    {
        "number": 1451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 4\\n1 2 4') == '3'\nassert solution('3 2\\n447 44 77') == '2'\nassert solution('3 2\\n1 2 4') == '3'\nassert solution('3 2\\n1 2 4\\n1 2 4') == '3'\nassert solution('3 2\\n1 2 4\\n1 2 4\\n1 2 4') == '3'\n"
    },
    {
        "number": 1452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('2\\n2') == '2'\nassert solution('2\\n3') == '3'\nassert solution('2\\n4') == '4'\n"
    },
    {
        "number": 1454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 3 5 6 7\\n3 0 7 0 9\\n5 0 0 0 10\\n8 9 10 11 12') == '144'\nassert solution('3 3\\n1 2 3\\n2 0 4\\n4 5 6') == '30'\nassert solution('3 3\\n1 2 3\\n3 0 4\\n4 5 6') == '-1'\nassert solution('3 3\\n1 2 3\\n3 0 4\\n4 5 6') == '-1'\nassert solution('3 3\\n1 2 3\\n3 0 4\\n4 5 6') == '-1'\n"
    },
    {
        "number": 1455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '2'\nassert solution('''4''') == '3'\nassert solution('''5''') == '4'\nassert solution('''6''') == '5'\nassert solution('''7''') == '6'\n"
    },
    {
        "number": 1456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\noxxxx\nx...x\nx...x\nx...x\nxxxxo''') == 'YES'\nassert solution('''6\n.x.x..\nx.x.x.\n.xo..x\nx..ox.\n.x.x.x\n..x.x.\n''') == 'YES'\nassert solution('''3\no.x\noxx\no.x\n''') == 'NO'\nassert solution('''4\no.x\noxx\no.x\noxx\n''') == 'NO'\nassert solution('''4\no.x\noxx\no.x\noxx\n''') == 'NO'\n"
    },
    {
        "number": 1457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 1458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\nassert solution(stdin) == \"NO\"\n"
    },
    {
        "number": 1459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 1460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '''12\n1 0\n2 0\n0 1\n1 1\n2 1\n3 1\n0 2\n1 2\n2 2\n3 2\n1 3\n2 3''')\nassert solution('''1''') == '''1\n0 0'''\nassert solution('''2''') == '''1\n0 0\n0 1'''\nassert solution('''3''') == '''1\n0 0\n0 1\n0 2'''\nassert solution('''4''') == '''12\n1 0\n2 0\n0 1\n1 1\n2 1\n3 1\n0 2\n1 2\n2 2\n3 2\n1 3\n2 3'''\n"
    },
    {
        "number": 1461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 4 3 2 6\n6 3 1 4 2 2 3\n''') == '10 1\\n8 1\\n7 1\\n10 2\\n8 2\\n7 1\\n9 3\\n'\nassert solution('''4 4\n0 1 2 3\n0 1 2 3\n''') == '0 0\\n4 1\\n8 2\\n12 3\\n'\nassert solution('''5 3\n1 2 3 4 0\n4 1 2 14 3\n''') == '7 1\\n17 1\\n19 2\\n21 3\\n8 1\\n'\nassert solution('''6 3\n1 2 3 4 3 2 6\n6 3 1 4 2 2 3\n''') == '10 1\\n8 1\\n7 1\\n10 2\\n8 2\\n7 1\\n9 3\\n'\nassert solution('''7 3\n1 2 3 4 3 2 6\n6 3 1 4 2 2 3\n''') == '10 1\\n8 1\\n7 1\\n10 2\\n8 2\\n7 1\\n9 3\\n'\n"
    },
    {
        "number": 1462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 2\\n2 3 1\\n6 4 1') == 'Yes'\nassert solution('3\\n1 5 2\\n1 1 1\\n1 2 3') == 'No'\nassert solution('3\\n1 5 2\\n1 1 1\\n1 2 3') == 'No'\nassert solution('3\\n1 5 2\\n1 1 1\\n1 2 3') == 'No'\nassert solution('3\\n1 5 2\\n1 1 1\\n1 2 3') == 'No'\n"
    },
    {
        "number": 1464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('threehorses') == 'j'\nassert solution('goodsubstrings') == 'ab'\nassert solution('secret') == 'ab'\nassert solution('primematrix') == 'ab'\nassert solution('beautifulyear') == 'ab'\n"
    },
    {
        "number": 1465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 1466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 2 1\n3 2 1\n1 3 3\n''') == '2\\n1 2\\n'\nassert solution('''4 5 2\n4 1 8\n2 4 1\n2 1 3\n3 4 9\n3 1 5\n''') == '2\\n3 2\\n'\nassert solution('''3 3 2\n1 2 1\n3 2 1\n1 3 3\n''') == '2\\n1 2\\n'\nassert solution('''4 5 2\n4 1 8\n2 4 1\n2 1 3\n3 4 9\n3 1 5\n''') == '2\\n3 2\\n'\nassert solution('''3 3 2\n1 2 1\n3 2 1\n1 3 3\n''') == '2\\n1 2\\n'\n"
    },
    {
        "number": 1467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '-1'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('5\\n1 2 3 4 5') == '-1'\n"
    },
    {
        "number": 1468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n"
    },
    {
        "number": 1469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '8 10'\nassert solution('''5\n1 2 0\n2 3 0\n3 4 0\n1 5 0\n2 6 0\n3 7 0\n4 8 0\n5 6 1\n6 7 1\n7 8 1\n''') == '8 10'\nassert solution('''6\n1 2 0\n2 3 0\n3 4 0\n1 5 0\n2 6 0\n3 7 0\n4 8 0\n5 6 1\n6 7 1\n7 8 1\n''') == '8 10'\nassert solution('''7\n1 2 0\n2 3 0\n3 4 0\n1 5 0\n2 6 0\n3 7 0\n4 8 0\n5 6 1\n6 7 1\n7 8 1\n''') == '8 10'\nassert solution('''8\n1 2 0\n2 3 0\n3 4 0\n1 5 0\n2 6 0\n3 7 0\n4 8 0\n5 6 1\n6 7 1\n7 8 1\n''') == '8 10'\n"
    },
    {
        "number": 1470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 1471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 4') == '5\\n4\\n1\\n0\\n'\nassert solution('5 2 4') == '5\\n4\\n1\\n0\\n'\nassert solution('5 2 4') == '5\\n4\\n1\\n0\\n'\nassert solution('5 2 4') == '5\\n4\\n1\\n0\\n'\nassert solution('5 2 4') == '5\\n4\\n1\\n0\\n'\n"
    },
    {
        "number": 1473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n92 31\n0 7\n31 0\n7 141''') == '92 7 31 141'\nassert solution('''2\n0 0\n0 0''') == '0 0'\nassert solution('''2\n0 0\n0 0''') == '0 0'\nassert solution('''2\n0 0\n0 0''') == '0 0'\nassert solution('''2\n0 0\n0 0''') == '0 0'\n"
    },
    {
        "number": 1474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n''') == '0'\nassert solution('''3\n3 4 2\n''') == '13'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n''') == '0'\nassert solution('''6\n1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 1475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12 1 5 10''') == '3'\nassert solution('''3 2 1 2''') == '0'\nassert solution('''3 2 1 2''') == '6'\nassert solution('''3 2 1 2''') == '0'\nassert solution('''3 2 1 2''') == '6'\n"
    },
    {
        "number": 1476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6''') == '6'\nassert solution('''3''') == '2'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\n"
    },
    {
        "number": 1477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n0 1 0 1\n0 1\n1 2\n2 3''') == '2'\nassert solution('''4 3\n1 1 1 0\n0 1\n0 2\n3 0''') == '1'\nassert solution('''4 3\n1 1 1 0\n0 1\n0 2\n3 0''') == '1'\nassert solution('''4 3\n1 1 1 0\n0 1\n0 2\n3 0''') == '1'\nassert solution('''4 3\n1 1 1 0\n0 1\n0 2\n3 0''') == '1'\n"
    },
    {
        "number": 1478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 1479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\n...\nR.L\nR.U\n''') == '0 2 2'\nassert solution('''2 2 2\n..\nRL\n''') == '1 1'\nassert solution('''3 4 8\n....\nRRLL\nUUUU\n''') == '1 3 3 1'\nassert solution('''2 2 2\n..\nUU\n''') == '0 0'\nassert solution('''3 4 8\n....\nRRLL\nUUUU\n''') == '1 3 3 1'\n"
    },
    {
        "number": 1480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5\\n10 4 11 4 1') == '4 2 5 6 1'\nassert solution('3 2\\n2 5') == '3 2'\nassert solution('3 2\\n2 5\\n2 5') == '3 2'\nassert solution('3 2\\n2 5\\n2 5\\n2 5') == '3 2'\nassert solution('3 2\\n2 5\\n2 5\\n2 5\\n2 5') == '3 2'\n"
    },
    {
        "number": 1481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nxxo\nxox\noxx''') == 'YES'\nassert solution('''4\nxxxo\nxoxo\noxox\nxxxx''') == 'NO'\nassert solution('''1\nx\n''') == 'YES'\nassert solution('''2\nx\nx''') == 'NO'\nassert solution('''3\nx\nx\nx''') == 'NO'\n"
    },
    {
        "number": 1482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n4 1''') == '2 4'\nassert solution('''3 1\n2''') == '3 2 1'\nassert solution('''3 1\n3''') == '3 3 2'\nassert solution('''3 1\n4''') == '3 4 2'\nassert solution('''3 1\n5''') == '3 4 2'\n"
    },
    {
        "number": 1483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n-1 -1''') == '9'\nassert solution('''5 2\n1 -1 -1 1 2''') == '0'\nassert solution('''5 3\n1 -1 -1 1 2''') == '2'\nassert solution('''4 200000\n-1 -1 12345 -1''') == '735945883'\nassert solution('''5 3\n1 -1 -1 1 2''') == '2'\n"
    },
    {
        "number": 1485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 6\n2\n''') == '11'\nassert solution('''1 6\n7\n''') == '14'\nassert solution('''2 10\n13 7\n''') == '36'\nassert solution('''2 10\n7\n''') == '36'\nassert solution('''2 10\n13 7\n''') == '36'\n"
    },
    {
        "number": 1486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-5 -2 2 7''') == '3 12'\nassert solution('''-1 1''') == '2 2'\nassert solution('''-1 -1''') == '2 2'\nassert solution('''-1 -1 -1''') == '2 2'\nassert solution('''-1 -1 -1 -1''') == '2 2'\n"
    },
    {
        "number": 1487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'impossible'\nassert solution('0001') == '0011'\nassert solution('000') == 'impossible'\nassert solution('111') == 'impossible'\nassert solution('0101') == '0101'\n"
    },
    {
        "number": 1488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 5') == '22 3'\nassert solution('2 3 5') == '22 3'\nassert solution('2 3 5') == '22 3'\nassert solution('2 3 5') == '22 3'\nassert solution('2 3 5') == '22 3'\n"
    },
    {
        "number": 1489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1\n1 2\n2 1\n2 2''') == '16'\nassert solution('''2\n-1 -1\n0 1''') == '9'\nassert solution('''1\n1 1''') == '1'\nassert solution('''1\n1 1''') == '1'\nassert solution('''1\n1 1''') == '1'\n"
    },
    {
        "number": 1490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 7\n1 3 4\n''') == '2'\nassert solution('''4 14\n4 6 12 8\n''') == '4'\nassert solution('''4 14\n4 6 12 8\n''') == '4'\nassert solution('''4 14\n4 6 12 8\n''') == '4'\nassert solution('''4 14\n4 6 12 8\n''') == '4'\n"
    },
    {
        "number": 1491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n12 14 30 4''') == '2'\nassert solution('''6\n0 0 0 0 0 0''') == '6'\nassert solution('''6\n120 110 23 34 25 45''') == '0'\nassert solution('''10\n121 56 78 81 45 100 1 0 54 78''') == '3'\nassert solution('''10\n
    },
    {
        "number": 1492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\nXXXXXX\nXXXXXX\nXXXXXX''') == '1'\nassert solution('''10 10\n.XXXXXX...\n.XXXXXX...\n.XXXXXX...\n.XXXXXX...\n.XXXXXXXX.\n...XXXXXX.\n...XXXXXX.\n...XXXXXX.\n...XXXXXX.\n..........''') == '2'\nassert solution('''4 5\nX....\n..XXX\n..XXX\n..XXX\n''') == '0'\nassert solution('''4 5\nX....\n..XXX\n..XXX\n..XXX\n''') == '0'\nassert solution('''4 5\nX....\n..XXX\n..XXX\n..XXX\n''') == '0'\n"
    },
    {
        "number": 1493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == 'B'\nassert solution('''2 2''') == 'BW'\nassert solution('''3 3''') == 'B-B'\nassert solution('''4 4''') == '---'\nassert solution('''5 5''') == '---B'\n"
    },
    {
        "number": 1494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 8 2''') == '2'\nassert solution('''3\n3 5 6''') == '5'\nassert solution('''3\n3 5 6''') == '5'\nassert solution('''3\n3 5 6''') == '5'\nassert solution('''3\n3 5 6''') == '5'\n"
    },
    {
        "number": 1496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 2 2''') == '3'\nassert solution('''4 3 2 200''') == '1 1'\nassert solution('''4 3 2 200''') == '1 1'\nassert solution('''4 3 2 200''') == '1 1'\nassert solution('''4 3 2 200''') == '1 1'\n"
    },
    {
        "number": 1497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0101\n1000\n1111\n0101''') == '2'\nassert solution('''3\n111\n111\n111''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''0\n0''') == '0'\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 1498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 3 2\n2 2 1\n3 4 3\n''') == '6\\n-1\\n10\\n'\nassert solution('''3 2\n3 2 3\n5 1 2\n''') == '3\\n3\\n30\\n'\nassert solution('''8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n''') == '6\\n9\\n30\\n-1\\n15\\n36\\n'\nassert solution('''8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n''') == '6\\n9\\n30\\n-1\\n15\\n36\\n'\nassert solution('''8 6\n1 3 20\n4 2 1\n6 5 5\n10 1 1\n15 3 6\n21 8 8\n''') == '6\\n9\\n30\\n-1\\n15\\n36\\n'\n"
    },
    {
        "number": 1499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7''') == '5 1 6 2 7 3 4'\nassert solution('''9 36''') == '19 1 20 2 21 3 22 4 23 5 24 6 25 7 26 8 27 9 28 10 29 11 30 12 31 13 32 14 33 15 34 16 35 17 36 18'\nassert solution('''2 7''') == '5 1 6 2 7 3 4'\nassert solution('''9 36''') == '19 1 20 2 21 3 22 4 23 5 24 6 25 7 26 8 27 9 28 10 29 11 30 12 31 13 32 14 33 15 34 16 35 17 36 18'\nassert solution('''2 7''') == '5 1 6 2 7 3 4'\n"
    },
    {
        "number": 1500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 1501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\n\n\"\"\""
    },
    {
        "number": 1503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2 3\n2 3 1''') == '4'\nassert solution('''5 6\n1 2 3 4 5\n2 3 1 4 5\n3 4 5 1 2\n3 5 4 2 1\n2 3 5 4 1\n1 2 3 4 5''') == '5'\nassert solution('''2 2\n1 2\n2 1''') == '2'\nassert solution('''2 2\n1 2\n2 1''') == '2'\nassert solution('''2 2\n1 2\n2 1''') == '2'\n"
    },
    {
        "number": 1504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 8 0 2 8 3 4 5''') == '''8.000000000000 11.000000000000\n4.000000000000 8.000000000000\n6.000000000000 8.000000000000\n6.000000000000 3.000000000000\n10.000000000000 3.000000000000\n10.000000000000 8.000000000000\n12.000000000000 8.000000000000'''\n\nassert solution('''8 8 0 2 8 3 4 5''') == '''8.000000000000 11.000000000000\n4.000000000000 8.000000000000\n6.000000000000 8.000000000000\n6.000000000000 3.000000000000\n10.000000000000 3.000000000000\n10.000000000000 8.000000000000\n12.000000000000 8.000000000000'''\n\nassert solution('''8 8 0 2 8 3 4 5''') == '''8.000000000000 11.000000000000\n4.000000000000 8.000000000000\n6.000000000000 8.000000000000\n6.000000000000 3.000000000000\n10.000000000000 3.000000000000\n10.000000000000 8.000000000000\n12.000000000000 8.000000000000'''\n\nassert solution('''8 8 0 2 8 3 4 5''') == '''8.000000000000 11.000000000000\n4.000000000000 8.000000000000\n6.000000000000 8.000000000000\n6.000000000000 3.000000000000\n10.000000000000 3.000000000000\n10.000000000000 8.000000000000\n12.000000000000 8.000000000000'''\n\nassert solution('''8 8 0 2 8 3 4 5''') == '''8.000000000000 11.000000000000\n4.000000000000 8.000000000000\n6.000000000000 8.000000000000\n6.000000000000 3.000000000000\n10.000000000000 3.000000000000\n10.000000000000 8.000000000000\n12.000000000000 8.000000000000'''"
    },
    {
        "number": 1506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '1'\nassert solution('3 1 2') == '4'\nassert solution('1 1 2') == '1'\nassert solution('3 1 2') == '4'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 1507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 1\\nAABBB') == 'NO'\nassert solution('5 1\\nABABB') == 'YES'\nassert solution('5 1\\nABBBB') == 'NO'\nassert solution('5 1\\nABBBB') == 'NO'\nassert solution('5 1\\nABBBB') == 'NO'\n"
    },
    {
        "number": 1508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('100 -100 50 0 -50') == '100 -50 0 50 -100'\nassert solution('100 -100 50 0 -50') == '100 -50 0 50 -100'\n"
    },
    {
        "number": 1509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1 3''') == '7'\nassert solution('''4\n2 1 1 3''') == '11'\nassert solution('''10\n1 5 2 5 5 3 10 6 5 1''') == '104'\nassert solution('''10\n1 5 2 5 5 3 10 6 5 1''') == '104'\nassert solution('''10\n1 5 2 5 5 3 10 6 5 1''') == '104'\n"
    },
    {
        "number": 1510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 5\n1 0 0\n1 0 2\n2 3 1\n3 2 0''') == '1\\n1\\n3\\n0'\nassert solution('''3 2 2\n1 2\n1 2\n2 2''') == '1\\n1\\n0'\nassert solution('''1 1 1\n0''') == '0'\nassert solution('''1 1 1\n1''') == '1'\nassert solution('''1 1 1\n1''') == '1'\n"
    },
    {
        "number": 1512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'\n\n'''"
    },
    {
        "number": 1513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 100 2\\n20 30 75 80\\n') == '17'\nassert solution('5 100 3\\n1 2 4 60 87\\n') == '6'\nassert solution('5 100 3\\n1 2 4 60 87\\n') == '6'\nassert solution('5 100 3\\n1 2 4 60 87\\n') == '6'\nassert solution('5 100 3\\n1 2 4 60 87\\n') == '6'\n"
    },
    {
        "number": 1514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 5 3 5\n6 7 4 6\n''') == '3 4 6 5 7'\nassert solution('''3\n2 4\n3 2\n''') == '-1'\nassert solution('''8\n2 3 1 1 2 4 3\n3 4 4 2 5 5 4\n''') == '3 4 5 2 1 4 3 2'\nassert solution('''8\n2 3 1 1 2 4 3\n3 4 4 2 5 5 4\n''') == '3 4 5 2 1 4 3 2'\nassert solution('''8\n2 3 1 1 2 4 3\n3 4 4 2 5 5 4\n''') == '3 4 5 2 1 4 3 2'\n"
    },
    {
        "number": 1515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 5') == '142857'\nassert solution('1 2') == 'Impossible'\nassert solution('6 4') == '102564'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 1516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n12 33 45\n''') == '26730'\nassert solution('''2\n123 456\n''') == '1115598'\nassert solution('''1\n1\n''') == '11'\nassert solution('''5\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '265359409'\nassert solution('''5\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '265359409'\n"
    },
    {
        "number": 1517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '18'\nassert solution('''5''') == '1800'\nassert solution('''10''') == '18000000'\nassert solution('''15''') == '18000000000'\nassert solution('''16''') == '180000000000'\n"
    },
    {
        "number": 1518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2 1''') == '1\\n1 3\\n'\nassert solution('''2\n1 2''') == '0\\n2 1\\n'\nassert solution('''4\n4 2 3 1''') == '3\\n2 4\\n1 2\\n2 4\\n'\nassert solution('''5\n5 4 3 2 1''') == '3\\n2 4\\n1 2\\n2 4\\n1 2\\n'\nassert solution('''6\n6 4 3 2 1''') == '3\\n2 4\\n1 2\\n2 4\\n1 2\\n1 2\\n'\n"
    },
    {
        "number": 1519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 11 3\n0 1\n1 1''') == '3'\nassert solution('''0 5 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n"
    },
    {
        "number": 1520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\na\nb\na''') == '3'\nassert solution('''2\nbnn\na''') == '1'\nassert solution('''3\na\nb\na''') == '3'\nassert solution('''3\na\nb\na''') == '3'\nassert solution('''3\na\nb\na''') == '3'\n"
    },
    {
        "number": 1521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 5\n0\n21\n53\n41\n53''') == '4'\nassert solution('''5 5\n0\n1\n2\n3\n4\n''') == '-1'\nassert solution('''5 5\n0\n1\n2\n3\n4\n5\n''') == '-1'\nassert solution('''5 5\n0\n1\n2\n3\n4\n5\n6\n''') == '-1'\nassert solution('''5 5\n0\n1\n2\n3\n4\n5\n6\n7\n''') == '-1'\n"
    },
    {
        "number": 1522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\naAbB''') == '0'\nassert solution('''4\naBaCaB''') == '3'\nassert solution('''5\nxYyXzZaZ''') == '2'\nassert solution('''6\nxYyXzZaZ''') == '2'\nassert solution('''7\nxYyXzZaZ''') == '2'\n"
    },
    {
        "number": 1523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"RRLRL\") == \"0 1 2 1 1\"\nassert solution(\"RRLLL\") == \"0 1 2 1 1\"\nassert solution(\"RLRLRL\") == \"0 1 2 1 1\"\nassert solution(\"RLRRLL\") == \"0 1 2 1 1\"\nassert solution(\"RLRLLR\") == \"0 1 2 1 1\"\n"
    },
    {
        "number": 1525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5 4') == '2'\nassert solution('2 5 4') == '2'\nassert solution('2 5 4') == '2'\nassert solution('2 5 4') == '2'\nassert solution('2 5 4') == '2'\n"
    },
    {
        "number": 1527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n...\n...\n...''') == '4'\nassert solution('''3 3\n..\n..\n..''') == '4'\nassert solution('''3 3\n..\n..\n..''') == '4'\nassert solution('''3 3\n..\n..\n..''') == '4'\nassert solution('''3 3\n..\n..\n..''') == '4'\n"
    },
    {
        "number": 1528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 7') == '4'\nassert solution('2 7') == '4'\nassert solution('2 7') == '4'\nassert solution('2 7') == '4'\nassert solution('2 7') == '4'\n"
    },
    {
        "number": 1529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''I will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.''') == 'Freda's'\nassert solution('''I will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.''') == 'Rainbow's'\nassert solution('''I will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.''') == 'OMG>.< I don't know!'\nassert solution('''I will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.''') == 'OMG>.< I don't know!'\nassert solution('''I will go to play with you lala.\nwow, welcome.\nmiao.lala.\nmiao.\nmiao.''') == 'OMG>.< I don't know!'\n"
    },
    {
        "number": 1530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 2'\nassert solution('4 2 3 1 6') == '4 2 2 4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 1531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 1 2''') == '8 1'\nassert solution('''5\n1 -2 3 1 -2''') == '5 2'\nassert solution('''5\n1 -2 3 1 -2''') == '5 2'\nassert solution('''5\n1 -2 3 1 -2''') == '5 2'\nassert solution('''5\n1 -2 3 1 -2''') == '5 2'\n"
    },
    {
        "number": 1532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '1 1'\nassert solution('''4''') == '1 1 1'\nassert solution('''5''') == '1 1 1 1'\nassert solution('''6''') == '1 1 1 1 1'\n"
    },
    {
        "number": 1533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('tom\\nlucius\\nginny\\nharry\\nginny\\nharry\\n') == 'NO\\nNO\\nNO\\nNO\\nYES\\nYES'\nassert solution('a\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 1534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abba') == 4\nassert solution('bab') == 2\nassert solution('baa') == 2\nassert solution('baa') == 2\nassert solution('baa') == 2\n"
    },
    {
        "number": 1535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 0 0\n1 1\n2 2\n2 0\n-1 -1''') == '2'\nassert solution('''2 1 2\n1 1\n1 0\n''') == '1'\nassert solution('''2 1 2\n1 1\n1 0\n''') == '1'\nassert solution('''2 1 2\n1 1\n1 0\n''') == '1'\nassert solution('''2 1 2\n1 1\n1 0\n''') == '1'\n"
    },
    {
        "number": 1536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '3 6\\n5 1\\n2 4\\n'\nassert solution('''8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5\\n1 6\\n2 7\\n3 8\\n'\nassert solution('''10\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\nassert solution('''20\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\nassert solution('''30\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n21 21 21\n22 22 22\n23 23 23\n24 24 24\n25 25 25\n26 26 26\n27 27 27\n28 28 28\n29 29 29\n30 30 30\n31 31 31\n32 32 32\n33 33 33\n34 34 34\n35 35 35\n36 36 36\n37 37 37\n38 38 38\n39 39 39\n40 40 40\n41 41 41\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n47 47 47\n48 48 48\n49 49 49\n50 50 50\n51 51 51\n52 52 52\n53 53 53\n54 54 54\n55 55 55\n56 56 56\n57 57 57\n58 58 58\n59 59 59\n60 60 60\n61 61 61\n62 62 62\n63 63 63\n64 64 64\n65 65 65\n66 66 66\n67 67 67\n68 68 68\n69 69 69\n70 70 70\n71 71 71\n72 72 72\n73 73 73\n74 74 74\n75 75 75\n76 76 76\n77 77 77\n78 78 78\n79 79 79\n80 80 80\n81 81 81\n82 82 82\n83 83 83\n84 84 84\n85 85 85\n86 86 86\n87 87 87\n88 88 88\n89 89 89\n90 90 90\n91 91 91\n92 92 92\n93 93 93\n94 94 94\n95 95 95\n96 96 96\n97 97 97\n98 98 98\n99 99 99\n100 100 100\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\n"
    },
    {
        "number": 1537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nBWWW\nWBBW\nWBBW\nWWWB''') == '4'\nassert solution('''3 1\nBWB\nWWB\nBWB\n''') == '2'\nassert solution('''2 1\nWW\nWW\n''') == '4'\nassert solution('''5 3\nBWBBB\nBWBBB\nBBBBB\nBBBBB\nWBBBW\n''') == '2'\nassert solution('''2 2\nBW\nWB\n''') == '4'\n"
    },
    {
        "number": 1538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 5\n3 2''') == '2'\nassert solution('''3\n2 4 4\n1 1 1\n''') == '0'\nassert solution('''6\n2 2 1 1 3 3\n4 3 5 5 2 1\n''') == '8'\nassert solution('''10\n2 2 1 1 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '0'\nassert solution('''10\n2 2 1 1 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 1540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 5\n1 1 1 1\n1 0 1 1\n1 1 0 0\n1 1\n3 1\n1 3\n2 4\n3 2''') == '3 3 1'\nassert solution('''4 3 4\n0 1 1\n1 0 1\n1 1 1\n0 0 0\n1 2\n2 1\n3 1\n1 3''') == '0 2 3 0'\nassert solution('''4 3 4\n0 1 1\n1 0 1\n1 1 1\n0 0 0\n1 2\n2 1\n3 1\n1 3''') == '0 2 3 0'\nassert solution('''4 3 4\n0 1 1\n1 0 1\n1 1 1\n0 0 0\n1 2\n2 1\n3 1\n1 3''') == '0 2 3 0'\nassert solution('''4 3 4\n0 1 1\n1 0 1\n1 1 1\n0 0 0\n1 2\n2 1\n3 1\n1 3''') == '0 2 3 0'\n"
    },
    {
        "number": 1541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"=^==\") == \"left\"\nassert solution(\"9===^==1\") == \"right\"\nassert solution(\"2==^7==\") == \"balance\"\nassert solution(\"41^52==\") == \"balance\"\nassert solution(\"=^==\") == \"left\"\n"
    },
    {
        "number": 1542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 10 8 6 11\n4\n1\n10\n3\n11''') == '0\\n4\\n1\\n5'\nassert solution('''5\n3 10 8 6 11\n4\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n1\n10\n3\n11\n5\n"
    },
    {
        "number": 1543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n-5 R\n0 P\n3 P\n7 B\n''') == '12'\nassert solution('''5\n10 R\n14 B\n16 B\n21 R\n32 R\n''') == '24'\nassert solution('''5\n10 R\n14 B\n16 B\n21 R\n32 R\n''') == '24'\nassert solution('''5\n10 R\n14 B\n16 B\n21 R\n32 R\n''') == '24'\nassert solution('''5\n10 R\n14 B\n16 B\n21 R\n32 R\n''') == '24'\n"
    },
    {
        "number": 1544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '24'\nassert solution('''3''') == '108'\nassert solution('''4''') == '864'\nassert solution('''5''') == '1456'\nassert solution('''6''') == '2496'\n"
    },
    {
        "number": 1545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\naab\n2 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '3'\nassert solution('''10\nabcdeabcde\n5 5 5 5 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '401'\nassert solution('''10\nabcdeabcde\n5 5 5 5 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '4'\nassert solution('''10\nabcdeabcde\n5 5 5 5 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '3'\nassert solution('''10\nabcdeabcde\n5 5 5 5 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 1546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2''') == '1 2 3 4 5'\nassert solution('''6\n5 6\n4 3\n5 3\n2 4\n6 1\n3 1\n6 2\n2 5\n1 4\n3 6\n1 2\n4 5''') == '1 2 4 5 3 6'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1\n1 3\n2 4\n3 5\n4 6\n5 7\n6 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '1 2 3 4 5 6 7'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 1\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '1 2 3 4 5 6 7 8'\nassert solution('''9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 1\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 1547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 3\n1 1 3\n2 2 1\n1 2 2''') == '3 1 3\\n2 2 2\\n0 1 0'\nassert solution('''5 3 5\n1 1 1\n1 3 1\n1 5 1\n2 1 1\n2 3 1''') == '1 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 1 1'\nassert solution('''5 3 5\n1 1 1\n1 3 1\n1 5 1\n2 1 1\n2 3 1''') == '1 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 1 1'\nassert solution('''5 3 5\n1 1 1\n1 3 1\n1 5 1\n2 1 1\n2 3 1''') == '1 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 1 1'\nassert solution('''5 3 5\n1 1 1\n1 3 1\n1 5 1\n2 1 1\n2 3 1''') == '1 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 1 1'\n"
    },
    {
        "number": 1548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == '26'\nassert solution('''4\n1 1 2 2''') == '20'\nassert solution('''5\n1 1 2 2 3''') == '26'\nassert solution('''6\n1 1 2 2 3 3''') == '26'\nassert solution('''7\n1 1 2 2 3 3 4''') == '26'\n"
    },
    {
        "number": 1549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 4 10\n3 1 1 1 2 2\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n''') == '4\\n3\\n4\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n'\nassert solution('''4 5 4\n4 4 5 1\n15\n9\n13\n6\n''') == '5\\n3\\n3\\n3\\n'\nassert solution('''4 5 4\n4 4 5 1\n15\n9\n13\n6\n''') == '5\\n3\\n3\\n3\\n'\nassert solution('''4 5 4\n4 4 5 1\n15\n9\n13\n6\n''') == '5\\n3\\n3\\n3\\n'\nassert solution('''4 5 4\n4 4 5 1\n15\n9\n13\n6\n''') == '5\\n3\\n3\\n3\\n'\n"
    },
    {
        "number": 1550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 3 1 3 2 1 2\n''') == '2\\n3 5 2\\n6 7 4'\nassert solution('''4\n2 1 1 2\n''') == '0'\nassert solution('''7\n1 3 1 3 2 1 2\n''') == '2\\n3 5 2\\n6 7 4'\nassert solution('''7\n1 3 1 3 2 1 2\n''') == '2\\n3 5 2\\n6 7 4'\nassert solution('''7\n1 3 1 3 2 1 2\n''') == '2\\n3 5 2\\n6 7 4'\n"
    },
    {
        "number": 1553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 1''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''7\n1 2 1 3 1 2 1''') == '2'\nassert solution('''7\n1 2 1 3 1 2 1''') == '-1'\nassert solution('''7\n1 2 1 3 1 2 1''') == '-1'\n"
    },
    {
        "number": 1555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n>>>>\n>>>>\n>>>>''') == 'Yes'\nassert solution('''3 3\n==\n=<\n==\n''') == 'No'\nassert solution('''3 2\n==\n=<\n==\n''') == 'Yes'\nassert solution('''3 2\n==\n=<\n==\n''') == 'No'\nassert solution('''3 2\n==\n=<\n==\n''') == 'Yes'\n"
    },
    {
        "number": 1556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 1''') == '5 4 3 5 2'\nassert solution('''5 3 1''') == '5 4 3 5 2'\nassert solution('''5 3 1''') == '5 4 3 5 2'\nassert solution('''5 3 1''') == '5 4 3 5 2'\nassert solution('''5 3 1''') == '5 4 3 5 2'\n"
    },
    {
        "number": 1557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 6 100''') == '4'\nassert solution('''11 6 100''') == '2'\nassert solution('''12 5''') == '2'\nassert solution('''10 6 100''') == '4'\nassert solution('''11 6 100''') == '2'\n"
    },
    {
        "number": 1558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\nrbbrr') == '1'\nassert solution('5\\nbbbbb') == '2'\nassert solution('3\\nrbr') == '0'\nassert solution('5\\nrrrr') == '0'\nassert solution('5\\nrrrr') == '0'\n"
    },
    {
        "number": 1561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2''') == '3'\nassert solution('''1 2 2''') == '1'\nassert solution('''3 3 4''') == '0'\nassert solution('''*.*\n*.*\n.*.*''') == '0'\nassert solution('''*.*\n.*.*\n.*.*''') == '0'\n"
    },
    {
        "number": 1562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 3 2\n1 1\n2 1\n3 1\n2 3\n''') == '6'\nassert solution('''3 5 3 2\n1 2\n2 3\n3 1\n1 5\n''') == '8'\nassert solution('''3 6 3 2\n1 6\n2 2\n3 4\n1 6\n''') == '15'\nassert solution('''3 6 3 2\n1 6\n2 2\n3 4\n1 6\n''') == '15'\nassert solution('''3 6 3 2\n1 6\n2 2\n3 4\n1 6\n''') == '15'\n"
    },
    {
        "number": 1563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 6\n1 1 2 3 5 8\n1 2\n3 2\n1 4\n4 3\n4 5\n4 6\n''') == '3'\nassert solution('''5 6\n4 2 5 2 4\n1 2\n2 3\n3 1\n5 3\n5 4\n3 4\n''') == '2'\nassert solution('''5 6\n4 2 5 2 4\n1 2\n2 3\n3 1\n5 3\n5 4\n3 4\n1 4\n''') == '1'\nassert solution('''5 6\n4 2 5 2 4\n1 2\n2 3\n3 1\n5 3\n5 4\n3 4\n1 4\n1 4\n''') == '1'\nassert solution('''5 6\n4 2 5 2 4\n1 2\n2 3\n3 1\n5 3\n5 4\n3 4\n1 4\n1 4\n1 4\n''') == '1'\n"
    },
    {
        "number": 1564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabab\naabb\n''') == '2'\n\nassert solution('''1\na\nb\n''') == '-1'\n\nassert solution('''8\nbabbaabb\nabababaa\n''') == '3'\n\nassert solution('''8\nbabbaabb\nabababaa\n''') == '-1'\n\nassert solution('''8\nbabbaabb\nabababaa\n''') == '-1'"
    },
    {
        "number": 1565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1234567''') == '1801'\nassert solution('''3\n101''') == '11'\nassert solution('''7\n1234567''') == '1801'\nassert solution('''3\n101''') == '11'\nassert solution('''7\n1234567''') == '1801'\n"
    },
    {
        "number": 1566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n6\n000000\n000000\n012100\n024200\n012100\n000000\n''') == 'Yes'\nassert solution('''\n6\n000000\n000000\n012100\n024200\n012100\n000000\n''') == 'No'\nassert solution('''\n6\n000000\n000000\n012100\n024200\n012100\n000000\n''') == 'Yes'\nassert solution('''\n6\n000000\n000000\n012100\n024200\n012100\n000000\n''') == 'No'\nassert solution('''\n6\n000000\n000000\n012100\n024200\n012100\n000000\n''') == 'Yes'\n"
    },
    {
        "number": 1567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3''') == '16'\nassert solution('''3 7''') == '0'\nassert solution('''1337 42''') == '95147305'\nassert solution('''1 1''') == '1'\nassert solution('''500000 1''') == '500000'\n"
    },
    {
        "number": 1568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 5 3 5\n1 5 5 4\n''') == '20'\n\nassert solution('''5 3 1 1 3\n2 2 2 1 1\n''') == '15'\n\nassert solution('''5 5 3 4 5\n1 2 3 4 5\n''') == '35'\n\nassert solution('''5 5 3 4 5\n1 2 3 4 5\n''') == '35'\n\nassert solution('''5 5 3 4 5\n1 2 3 4 5\n''') == '35'"
    },
    {
        "number": 1569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2 0\n''') == '1'\n\nassert solution('''4 4\n1 2 1\n1 3 0\n2 3 1\n3 4 1\n''') == '3'\n\nassert solution('''8 9\n1 2 0\n8 3 0\n2 3 1\n1 4 1\n8 7 0\n1 5 1\n4 6 1\n5 7 0\n6 8 0\n''') == '3'\n\nassert solution('''8 9\n1 2 0\n8 3 0\n2 3 1\n1 4 1\n8 7 0\n1 5 1\n4 6 1\n5 7 0\n6 8 0\n''') == '3'\n\nassert solution('''8 9\n1 2 0\n8 3 0\n2 3 1\n1 4 1\n8 7 0\n1 5 1\n4 6 1\n5 7 0\n6 8 0\n''') == '3'"
    },
    {
        "number": 1570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\n\nInput\n3 10 2\n\nOutput\n0\n\nInput\n3 10 3\n\nOutput\n3\n\nInput\n3 10 4\n\nOutput\n3\n\nInput\n3 10 5\n\nOutput\n4\n\nInput\n3 10 6\n\nOutput\n5\n\nInput\n3 10 7\n\nOutput\n6\n\nInput\n3 10 8\n\nOutput\n7\n\nInput\n3 10 9\n\nOutput\n8\n\nInput\n3 10 10\n\nOutput\n9\n\nInput\n3 10 11\n\nOutput\n10\n\nInput\n3 10 12\n\nOutput\n11\n\nInput\n3 10 13\n\nOutput\n12\n\nInput\n3 10 14\n\nOutput\n13\n\nInput\n3 10 15\n\nOutput\n14\n\nInput\n3 10 16\n\nOutput\n15\n\nInput\n3 10 17\n\nOutput\n16\n\nInput\n3 10 18\n\nOutput\n17\n\nInput\n3 10 19\n\nOutput\n18\n\nInput\n3 10 20\n\nOutput\n19\n\nInput\n3 10 21\n\nOutput\n20\n\nInput\n3 10 22\n\nOutput\n21\n\nInput\n3 10 23\n\nOutput\n22\n\nInput\n3 10 24\n\nOutput\n23\n\nInput\n3 10 25\n\nOutput\n24\n\nInput\n3 10 26\n\nOutput\n25\n\nInput\n3 10 27\n\nOutput\n26\n\nInput\n3 10 28\n\nOutput\n27\n\nInput\n3 10 29\n\nOutput\n28\n\nInput\n3 10 30\n\nOutput\n29\n\nInput\n3 10 31\n\nOutput\n30\n\nInput\n3 10 32\n\nOutput\n31\n\nInput\n3 10 33\n\nOutput\n32\n\nInput\n3 10 34\n\nOutput\n33\n\nInput\n3 10 35\n\nOutput\n34\n\nInput\n3 10 36\n\nOutput\n35\n\nInput\n3 10 37\n\nOutput\n36\n\nInput\n3 10 38\n\nOutput\n37\n\nInput\n3 10 39\n\nOutput\n38\n\nInput\n3 10 40\n\nOutput\n39\n\nInput\n3 10 41\n\nOutput\n40\n\nInput\n3 10 42\n\nOutput\n41\n\nInput\n3 10 43\n\nOutput\n42\n\nInput\n3 10 44\n\nOutput\n43\n\nInput\n3 10 45\n\nOutput\n44\n\nInput\n3 10 46\n\nOutput\n45\n\nInput\n3 10 47\n\nOutput\n46\n\nInput\n3 10 48\n\nOutput\n47\n\nInput\n3 10 49\n\nOutput\n48\n\nInput\n3 10 50\n\nOutput\n49\n\nInput\n3 10 51\n\nOutput\n50\n\nInput\n3 10 52\n\nOutput\n51\n\nInput\n3 10 53\n\nOutput\n52\n\nInput\n3 10 54\n\nOutput\n53\n\nInput\n3 10 55\n\nOutput\n54\n\nInput\n3 10 56\n\nOutput\n55\n\nInput\n3 10 57\n\nOutput\n56\n\nInput\n3 10 58\n\nOutput\n57\n\nInput\n3 10 59\n\nOutput\n58\n\nInput\n3 10 60\n\nOutput\n59\n\nInput\n3 10 61\n\nOutput\n60\n\nInput\n3 10 62\n\nOutput\n61\n\nInput\n3 10 63\n\nOutput\n62\n\nInput\n3 10 64\n\nOutput\n63\n\nInput\n3 10 65\n\nOutput\n64\n\nInput\n3 10 66\n\nOutput\n65\n\nInput\n3 10 67\n\nOutput\n66\n\nInput\n3 10 68\n\nOutput\n67\n\nInput\n3 10 69\n\nOutput\n68\n\nInput\n3 10 70\n\nOutput\n69\n\nInput\n3 10 71\n\nOutput\n70\n\nInput\n3 10 72\n\nOutput\n71\n\nInput\n3 10 73\n\nOutput\n72\n\nInput\n3 10 74\n\nOutput\n73\n\nInput\n3 10 75\n\nOutput\n74\n\nInput\n3 10 76\n\nOutput\n75\n\nInput\n3 10 77\n\nOutput\n76\n\nInput\n3 10 78\n\nOutput\n77\n\nInput\n3 10 79\n\nOutput\n78\n\nInput\n3 10 80\n\nOutput\n79\n\nInput\n3 10 81\n\nOutput\n80\n\nInput\n3 10 82\n\nOutput\n81\n\nInput\n3 10 83\n\nOutput\n82\n\nInput\n3 10 84\n\nOutput\n83\n\nInput\n3 10 85\n\nOutput\n84\n\nInput\n3 10 86\n\nOutput\n85\n\nInput\n3 10 87\n\nOutput\n86\n\nInput\n3 10 88\n\nOutput\n87\n\nInput\n3 10 89\n\nOutput\n88\n\nInput\n3 10 90\n\nOutput\n89\n\nInput\n3 10 91\n\nOutput\n90\n\nInput\n3 10 92\n\nOutput\n91\n\nInput\n3 10 93\n\nOutput\n92\n\nInput\n3 10 94\n\nOutput\n93\n\nInput\n3 10 95\n\nOutput\n94\n\nInput\n3 10 96\n\nOutput\n95\n\nInput\n3 10 97\n\nOutput\n96\n\nInput\n3 10 98\n\nOutput\n97\n\nInput\n3 10 99\n\nOutput\n98\n\nInput\n3 10 100\n\nOutput\n99\n\nInput\n3 10 101\n\nOutput\n100\n\nInput\n3 10 102\n\nOutput\n101\n\nInput\n3 10 103\n\nOutput\n102\n\nInput\n3 10 104\n\nOutput\n103\n\nInput\n3 10 105\n\nOutput\n104\n\nInput\n3 10 106\n\nOutput\n105\n\nInput\n3 10 107\n\nOutput\n106\n\nInput\n3 10 108\n\nOutput\n107\n\nInput\n3 10 109\n\nOutput\n108\n\nInput\n3 10 110\n\nOutput\n109\n\nInput\n3 10 111\n\nOutput\n110\n\nInput\n3 10 112\n\nOutput\n111\n\nInput\n3 10 113\n\nOutput\n112\n\nInput\n3 10 114\n\nOutput\n113\n\nInput\n3 10 115\n\nOutput\n114\n\nInput\n3 10 116\n\nOutput\n115\n\nInput\n3 10 117\n\nOutput\n116\n\nInput\n3 10 118\n\nOutput\n117\n\nInput\n3 10 119\n\nOutput\n118\n\nInput\n3 10 120\n\nOutput\n119\n\nInput\n3 10 121\n\nOutput\n120\n\nInput\n3 10 122\n\nOutput\n121\n\nInput\n3 10 123\n\nOutput\n122\n\nInput\n3 10 124\n\nOutput\n123\n\nInput\n3 10 125\n\nOutput\n124\n\nInput\n3 10 126\n\nOutput\n125\n\nInput\n3 10 127\n\nOutput\n126\n\nInput\n3 10 128\n\nOutput\n127\n\nInput\n3 10 129\n\nOutput\n128\n\nInput\n3 10 130\n\nOutput\n129\n\nInput\n3 10 131\n\nOutput\n130\n\nInput\n3 10 132\n\nOutput\n131\n\nInput\n3 10 133\n\nOutput\n132\n\nInput\n3 10 134\n\nOutput\n133\n\nInput\n3 10 135\n\nOutput\n134\n\nInput\n3 10 136\n\nOutput\n135\n\nInput\n3 10 137\n\nOutput\n136\n\nInput\n3 10 138\n\nOutput\n137\n\nInput\n3 10 139\n\nOutput\n138\n\nInput\n3 10 140\n\nOutput\n139\n\nInput\n3 10 141\n\nOutput\n140\n\nInput\n3 10 142\n\nOutput\n141\n\nInput\n3 10 143\n\nOutput\n142\n\nInput\n3 10 144\n\nOutput\n143\n\nInput\n3 10 145\n\nOutput\n144\n\nInput\n3 10 146\n\nOutput\n145\n\nInput\n3 10 147\n\nOutput\n146\n\nInput\n3 10 148\n\nOutput\n147\n\nInput\n3 10 149\n\nOutput\n148\n\nInput\n3 10 150\n\nOutput\n149\n\nInput\n3 10 151\n\nOutput\n150\n\nInput\n3 10 152\n\nOutput\n151\n\nInput"
    },
    {
        "number": 1571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\nThe second test:\n\n$\\text{baba abab bbaa baab baab}$\n\nThe red ones are the magic spells. In the first operation, Kaavi can either add the first character \"a\" at the front or the back of $A$, although the results are the same, they are considered as different operations. So the answer is $6\\times2=12$.\n"
    },
    {
        "number": 1572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 5 8 13 21 34 55 89''') == 10\nassert solution('''1 1 1 1 1''') == 2\nassert solution
    },
    {
        "number": 1573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 4\n3 4\n4 5''') == '2'\nassert solution('''7 4\n2 1\n3 6\n5 1\n1 7''') == '-1'\nassert solution('''7 4\n2 1\n3 6\n5 1\n1 7\n2 3\n3 4\n4 5\n5 6\n6 7''') == '-1'\nassert solution('''7 4\n2 1\n3 6\n5 1\n1 7\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '-1'\nassert solution('''7 4\n2 1\n3 6\n5 1\n1 7\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '-1'\n"
    },
    {
        "number": 1575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ncteho') == 'techno'\nassert solution('erfdcoeocs') == 'codeforces'\nassert solution('z') == 'z'\n"
    },
    {
        "number": 1577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\nADAAAA') == 'Anton'\nassert solution('7\\nDDDAADA') == 'Danik'\nassert solution('6\\nDADADA') == 'Friendship'\nassert solution('7\\nADAAAA') == 'Anton'\nassert solution('7\\nDDDAADA') == 'Danik'\n"
    },
    {
        "number": 1578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 1579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 4') == '45.0000000000'\nassert solution('2 2 4') == '45.0000000000'\nassert solution('2 2 4') == '45.0000000000'\nassert solution('2 2 4') == '45.0000000000'\nassert solution('2 2 4') == '45.0000000000'\n"
    },
    {
        "number": 1584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 2 1') == '1'\nassert solution('3\\n4 2 1\\n2 1 1') == '2'\nassert solution('3\\n4 2 1\\n2 1 1\\n1 1 1') == '3'\nassert solution('3\\n4 2 1\\n2 1 1\\n1 1 1\\n1 1 1') == '4'\nassert solution('3\\n4 2 1\\n2 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '5'\n"
    },
    {
        "number": 1585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[1]\n"
    },
    {
        "number": 1586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 1587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 4 5\n''') == '999993 1000000'\nassert solution('''1\n1\n''') == '1000000'\nassert solution('''1\n1\n''') == '1000000'\nassert solution('''1\n1\n''') == '1000000'\nassert solution('''1\n1\n''') == '1000000'\n"
    },
    {
        "number": 1589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0 0 0 1\n1 0 1 1\n''') == '3'\nassert solution('''1 3\n1 1 0 1 0 0\n''') == '2'\nassert solution('''1 1\n1 1 0 1 0 0\n''') == '2'\nassert solution('''1 1\n1 1 0 1 0 0\n''') == '2'\nassert solution('''1 1\n1 1 0 1 0 0\n''') == '2'\n"
    },
    {
        "number": 1590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 2 4 7''') == '167'\nassert solution('''3\n123456789 214365879 987654321''') == '582491518'\nassert solution('''2\n123456789 214365879 987654321''') == '582491518'\nassert solution('''1\n123456789 214365879 987654321''') == '582491518'\nassert solution('''5\n123456789 214365879 987654321''') == '582491518'\n"
    },
    {
        "number": 1591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 1592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n2 1''') == '3 1'\nassert solution('''1\n1000000 10\n2 1''') == '1000010 10'\nassert solution('''3\n3 3\n4 3\n5 3''') == '12 7'\nassert solution('''1\n1000000 10\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n11 1\n12 1\n13 1\n14 1\n15 1\n16 1\n17 1\n18 1\n19 1\n20 1\n21 1\n22 1\n23 1\n24 1\n25 1\n26 1\n27 1\n28 1\n29 1\n30 1\n31 1\n32 1\n33 1\n34 1\n35 1\n36 1\n37 1\n38 1\n39 1\n40 1\n41 1\n42 1\n43 1\n44 1\n45 1\n46 1\n47 1\n48 1\n49 1\n50 1\n51 1\n52 1\n53 1\n54 1\n55 1\n56 1\n57 1\n58 1\n59 1\n60 1\n61 1\n62 1\n63 1\n64 1\n65 1\n66 1\n67 1\n68 1\n69 1\n70 1\n71 1\n72 1\n73 1\n74 1\n75 1\n76 1\n77 1\n78 1\n79 1\n80 1\n81 1\n82 1\n83 1\n84 1\n85 1\n86 1\n87 1\n88 1\n89 1\n90 1\n91 1\n92 1\n93 1\n94 1\n95 1\n96 1\n97 1\n98 1\n99 1\n100 1\n101 1\n102 1\n103 1\n104 1\n105 1\n106 1\n107 1\n108 1\n109 1\n110 1\n111 1\n112 1\n113 1\n114 1\n115 1\n116 1\n117 1\n118 1\n119 1\n120 1\n121 1\n122 1\n123 1\n124 1\n125 1\n126 1\n127 1\n128 1\n129 1\n130 1\n131 1\n132 1\n133 1\n134 1\n135 1\n136 1\n137 1\n138 1\n139 1\n140 1\n141 1\n142 1\n143 1\n144 1\n145 1\n146 1\n147 1\n148 1\n149 1\n150 1\n151 1\n152 1\n153 1\n154 1\n155 1\n156 1\n157 1\n158 1\n159 1\n160 1\n161 1\n162 1\n163 1\n164 1\n165 1\n166 1\n167 1\n168 1\n169 1\n170 1\n171 1\n172 1\n173 1\n174 1\n175 1\n176 1\n177 1\n178 1\n179 1\n180 1\n181 1\n182 1\n183 1\n184 1\n185 1\n186 1\n187 1\n188 1\n189 1\n190 1\n191 1\n192 1\n193 1\n194 1\n195 1\n196 1\n197 1\n198 1\n199 1\n200 1\n201 1\n202 1\n203 1\n204 1\n205 1\n206 1\n207 1\n208 1\n209 1\n210 1\n211 1\n212 1\n213 1\n214 1\n215 1\n216 1\n217 1\n218 1\n219 1\n220 1\n221 1\n222 1\n223 1\n224 1\n225 1\n226 1\n227 1\n228 1\n229 1\n230 1\n231 1\n232 1\n233 1\n234 1\n235 1\n236 1\n237 1\n238 1\n239 1\n240 1\n241 1\n242 1\n243 1\n244 1\n245 1\n246 1\n247 1\n248 1\n249 1\n250 1\n251 1\n252 1\n253 1\n254 1\n255 1\n256 1\n257 1\n258 1\n259 1\n260 1\n261 1\n262 1\n263 1\n264 1\n265 1\n266 1\n267 1\n268 1\n269 1\n270 1\n271 1\n272 1\n273 1\n274 1\n275 1\n276 1\n277 1\n278 1\n279 1\n280 1\n281 1\n282 1\n283 1\n284 1\n285 1\n286 1\n287 1\n288 1\n289 1\n290 1\n291 1\n292 1\n293 1\n294 1\n295 1\n296 1\n297 1\n298 1\n299 1\n300 1\n301 1\n302 1\n303 1\n304 1\n305 1\n306 1\n307 1\n308 1\n309 1\n310 1\n311 1\n312 1\n313 1\n314 1\n315 1\n316 1\n317 1\n318 1\n319 1\n320 1\n321 1\n322 1\n323 1\n324 1\n325 1\n326 1\n327 1\n328 1\n329 1\n330 1\n331 1\n332 1\n333 1\n334 1\n335 1\n336 1\n337 1\n338 1\n339 1\n340 1\n341 1\n342 1\n343 1\n344 1\n345 1\n346 1\n347 1\n348 1\n349 1\n350 1\n351 1\n352 1\n353 1\n354 1\n355 1\n356 1\n357 1\n358 1\n359 1\n360 1\n361 1\n362 1\n363 1\n364 1\n365 1\n366 1\n367 1\n368 1\n369 1\n370 1\n371 1\n372 1\n373 1\n374 1\n375 1\n376 1\n377 1\n378 1\n379 1\n380 1\n381 1\n382 1\n383 1\n384 1\n385 1\n386 1\n387 1\n388 1\n389 1\n390 1\n391 1\n392 1\n393 1\n394 1\n395 1\n396 1\n397 1\n398 1"
    },
    {
        "number": 1593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 999998\n1 1 1\n2 2 1\n3 3 1\n2 -2 1''') == '2.8284271'\nassert solution('''4 999998\n1 1 2\n2 2 1\n3 3 1\n2 -2 1''') == '1.4142136'\nassert solution('''2 1\n1 1 999997\n2 2 1''') == '-1'\nassert solution('''2 1\n1 1 999997\n2 2 1''') == '-1'\nassert solution('''2 1\n1 1 999997\n2 2 1''') == '-1'\n"
    },
    {
        "number": 1594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 8\n1 16''') == '1'\nassert solution('''4 9\n1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9''') == '1'\nassert solution('''1 2\n2 1\n1 1\n2 2\n1 2 3 4 5 6 7 8 9''') == '1'\n"
    },
    {
        "number": 1595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5') == '2\\n4 5\\n'\nassert solution('4 3') == '3\\n2 3 1\\n'\nassert solution('5 1') == '-1\\n'\nassert solution('1 1') == '-1\\n'\nassert solution('1 1') == '-1\\n'\n"
    },
    {
        "number": 1596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ouuokarinn') == '4'\nassert solution('banana') == '1'\nassert solution('nnn') == '3'\nassert solution('amanda') == '0'\nassert solution('ouuokarinn') == '4'\n"
    },
    {
        "number": 1597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 1598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''..#\n...#\n.#.#\n.#.#''') == '1'\nassert solution('''#..#\n"
    },
    {
        "number": 1600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == '3'\nassert solution('''4\n2 1 3 2''') == '2'\nassert solution('''5\n2 1 3 2 4''') == '2'\nassert solution('''6\n2 1 3 2 4 5''') == '2'\nassert solution('''7\n2 1 3 2 4 5 6''') == '2'\n"
    },
    {
        "number": 1601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3 1 0\n0 3 0\n2 2 0\n1 0 0\n1 3 0\n0 1 0\n''') == '3 6\\n5 1\\n2 4\\n'\nassert solution('''8\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n''') == '4 5\\n1 6\\n2 7\\n3 8\\n'\nassert solution('''10\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\nassert solution('''20\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\nassert solution('''50\n0 1 1\n1 0 1\n1 1 0\n1 1 1\n2 2 2\n3 2 2\n2 3 2\n2 2 3\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n21 21 21\n22 22 22\n23 23 23\n24 24 24\n25 25 25\n26 26 26\n27 27 27\n28 28 28\n29 29 29\n30 30 30\n31 31 31\n32 32 32\n33 33 33\n34 34 34\n35 35 35\n36 36 36\n37 37 37\n38 38 38\n39 39 39\n40 40 40\n41 41 41\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n47 47 47\n48 48 48\n49 49 49\n50 50 50\n''') == '5 6\\n1 7\\n2 8\\n3 9\\n'\n"
    },
    {
        "number": 1602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 0 11 6''') == '11 6 4 0'\nassert solution('''1\n13''') == '13'\nassert solution('''2\n1 2''') == '1 2'\nassert solution('''3\n1 2 3''') == '1 2 3'\nassert solution('''4\n1 2 3 4''') == '1 2 3 4'\n"
    },
    {
        "number": 1603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n6 4 2 7 2 7\n3\n2 3 6\n1 3 4\n1 1 6\n''') == '24'\nassert solution('''4\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '10'\nassert solution('''5\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '15'\nassert solution('''5\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '5'\nassert solution('''5\n5 5 2 3\n10\n1 2 4\n2 1 4\n1 1 1\n2 1 4\n2 1 2\n1 1 1\n1 3 3\n1 1 3\n1 4 4\n1 2 2\n''') == '5'\n"
    },
    {
        "number": 1604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3\\n1 7\\n3 8\\n4 5\\n6 7\\n1 3\\n5 10\\n8 9') == '9'\nassert solution('3 1\\n1 1\\n2 2\\n3 3\\n') == '3'\nassert solution('3 2\\n1 1\\n2 2\\n3 3\\n') == '0'\nassert solution('3 3\\n1 3\\n2 3\\n3 3\\n') == '1'\nassert solution('5 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n') == '7'\n"
    },
    {
        "number": 1605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"bb\") == \"1 2\"\nassert solution(\"baab\") == \"2 4\"\nassert solution(\"babaa\") == \"2 7\"\nassert solution(\"babaa\") == \"2 7\"\nassert solution(\"babb\") == \"2 5\"\n"
    },
    {
        "number": 1606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\n\nassert solution('''3\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\n\nassert solution('''3\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\n\nassert solution('''3\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'\n\nassert solution('''3\n1 1 1\n0 1 1\n1 0 0\n12\n3\n2 3\n3\n2 2\n2 2\n1 3\n3\n3\n1 2\n2 1\n1 1\n3\n''') == '01001'"
    },
    {
        "number": 1607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, k = map(int, stdin.readline().split())"
    },
    {
        "number": 1608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == '5'\nassert solution('''4\n1 1 1 1''') == '15'\nassert solution('''7\n1 3 5 15 3 105 35''') == '100'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 1''') == '1'\n"
    },
    {
        "number": 1609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2''') == '1 3 2'\nassert solution('''4\n2 2 3 3''') == '2 1 3 4'\nassert solution('''1\n2''') == '1'\nassert solution('''2\n2''') == '1'\nassert solution('''3\n1 3 2''') == '1 3 2'\n"
    },
    {
        "number": 1610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 1''') == '1'\nassert solution('''5\n20 4 3 2 1''') == '11'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''3\n1 2 1''') == '1'\n"
    },
    {
        "number": 1612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n3 2 4 1\n2 10 11''') == 'YES'\nassert solution('''2\n1 1\n1 1''') == 'NO'\nassert solution('''1\n1 1''') == 'NO'\nassert solution('''1\n1 1''') == 'NO'\nassert solution('''1\n1 1''') == 'NO'\n"
    },
    {
        "number": 1613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 1614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 1615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2\n3 4''') == '2'\nassert solution('''3 7\n1 2\n3 3\n4 7''') == '0'\nassert solution('''3 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7''') == '0'\nassert solution('''3 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7''') == '0'\nassert solution('''3 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7\n1 2\n3 3\n4 7''') == '0'\n"
    },
    {
        "number": 1616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 1617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') == '1 5 9 21'\nassert solution('16') == '1 10 28 64 136'\nassert solution('16') == '1 10 28 64 136'\nassert solution('16') == '1 10 28 64 136'\nassert solution('16') == '1 10 28 64 136'\n"
    },
    {
        "number": 1618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 6 6\n4\n1 1\n3 1\n1 1\n4 3\n''') == '1\\n3\\n4\\n6\\n'\nassert solution('''3\n1 2 3\n2\n1 1\n3 1\n''') == '1\\n3\\n'\nassert solution('''1\n1\n5\n1 2\n1 10\n1 10\n1 10\n1 10\n''') == '1\\n3\\n13\\n23\\n33\\n'\nassert solution('''1\n1\n5\n1 2\n1 10\n1 10\n1 10\n1 10\n''') == '1\\n3\\n13\\n23\\n33\\n'\nassert solution('''1\n1\n5\n1 2\n1 10\n1 10\n1 10\n1 10\n''') == '1\\n3\\n13\\n23\\n33\\n'\n"
    },
    {
        "number": 1619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0 0\n2 0 0\n2 2 0\n0 2 0\n4\n1 1 -1\n1 1 1\n1 3 1\n1 3 -1''') == 'YES'\nassert solution('''4\n0 0 0\n2 0 0\n2 2 0\n0 2 0\n4\n1 1 -1\n1 1 1\n1 3 1\n1 3 -1''') == 'NO'\nassert solution('''4\n0 0 0\n2 0 0\n2 2 0\n0 2 0\n4\n1 1 -1\n1 1 1\n1 3 1\n1 3 -1''') == 'NO'\nassert solution('''4\n0 0 0\n2 0 0\n2 2 0\n0 2 0\n4\n1 1 -1\n1 1 1\n1 3 1\n1 3 -1''') == 'NO'\nassert solution('''4\n0 0 0\n2 0 0\n2 2 0\n0 2 0\n4\n1 1 -1\n1 1 1\n1 3 1\n1 3 -1''') == 'NO'\n"
    },
    {
        "number": 1620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abca') == 'abca'\n"
    },
    {
        "number": 1621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abc''') == 'abc'\nassert solution('''abc''') == 'abc'\nassert solution('''abc''') == 'abc'\nassert solution('''abc''') == 'abc'\nassert solution('''abc''') == 'abc'\n"
    },
    {
        "number": 1622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3''') == 'YES'\nassert solution('''4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3''') == 'NO'\nassert solution('''4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3''') == 'YES'\nassert solution('''4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3''') == 'NO'\nassert solution('''4 9\n1 4 3\n2 4\n3 3 1\n1 2 3\n2 2\n3 1 2\n1 3 1\n2 2\n3 1 3''') == 'YES'\n"
    },
    {
        "number": 1623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 2''') == '5 7'\nassert solution('''5 1 5''') == '5 31'\nassert solution('''5 1 5''') == '5 31'\nassert solution('''5 1 5''') == '5 31'\nassert solution('''5 1 5''') == '5 31'\n"
    },
    {
        "number": 1624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n8 5 2 3\\n') == '164'\nassert solution('6\\n1 1 1 2 2 2\\n') == '27'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n') == '1'\n"
    },
    {
        "number": 1625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4''') == '14'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n"
    },
    {
        "number": 1626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 4 3\n''') == '1 4\\n'\n\nassert solution('''7\n36 28 57 39 66 69 68\n''') == '1 4\\n6 7\\n'\n\nassert solution('''5\n1 2 1 2 1\n''') == '2 5\\n3 4\\n1 4\\n1 4\\n'\n\nassert solution('''1\n1\n''') == '\\n'\n\nassert solution('''2\n1 1\n''') == '1 1\\n'"
    },
    {
        "number": 1628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"x\") == \"x\"\nassert solution(\"xy\") == \"xy\"\nassert solution(\"xyx\") == \"xyx\"\nassert solution(\"xyxy\") == \"xyxy\"\nassert solution(\"xyxyx\") == \"xyxyx\"\n"
    },
    {
        "number": 1629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n4 3 1 6\n''') == '3 2 5 4'\nassert solution('''5 2\n3 2 0 2 7\n''') == '2 1 4 1 6'\nassert solution('''3 3\n2 3 1\n''') == '1 2 3'\nassert solution('''4 4\n4 3 1 6\n''') == '3 2 5 4'\nassert solution('''5 2\n3 2 0 2 7\n''') == '2 1 4 1 6'\n"
    },
    {
        "number": 1630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nDINAMO BYTECITY\nFOOTBALL MOSCOW''') == 'YES'\nassert solution('''2\nDINAMO BYTECITY\nDINAMO BITECITY''') == 'NO'\nassert solution('''3\nPLAYFOOTBALL MOSCOW\nPLAYVOLLEYBALL SPB\nGOGO TECHNOCUP''') == 'YES'\nassert solution('''3\nABC DEF\nABC EFG\nABD OOO''') == 'YES'\nassert solution('''3\nABC DEF\nABC EFG\nABD OOO''') == 'NO'\n"
    },
    {
        "number": 1631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nrivest\nshamir\nadleman''') == 'bcdefghijklmnopqrsatuvwxyz'\nassert solution('''10\ntourist\npetr\nwjmzbmr\nyeputons\nvepifanov\nscottwu\noooooooooooooooo\nsubscriber\nrowdark\ntankengineer''') == 'aghjlnopefikdmbcqrstuvwxyz'\nassert solution('''10\npetr\negor\nendagorion\nfeferivan\nilovetanyaromanova\nkostka\ndmitriyh\nmaratsnowbear\nbredorjaguarturnik\ncgyforever''') == 'acbdefhijklmnopqrstuvwxyz'\nassert solution('''7\ncar\ncare\ncareful\ncarefully\nbecarefuldontforgetsomething\notherwiseyouwillbehacked\ngoodluck''') == 'acbdefhijklmnopqrstuvwxyz'\nassert solution('''7\ncar\ncare\ncareful\ncarefully\nbecarefuldontforgetsomething\notherwiseyouwillbehacked\ngoodluck''') == 'acbdefhijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 1632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == '0.0000000000'\nassert solution('3\\n1 2 10') == '0.0740740741'\nassert solution('3\\n1 2 10') == '0.0740740741'\nassert solution('3\\n1 2 10') == '0.0740740741'\nassert solution('3\\n1 2 10') == '0.0740740741'\n"
    },
    {
        "number": 1633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 4\n1 1\n1 2\n2 1\n2 2''') == '4'\nassert solution('''2 3 6\n2 3\n2 2\n1 3\n2 2\n1 2\n1 1''') == '5'\nassert solution('''5 3 7\n2 3\n1 2\n1 1\n4 1\n3 1\n5 3\n3 2''') == '0'\nassert solution('''5 3 7\n2 3\n1 2\n1 1\n4 1\n3 1\n5 3\n3 2''') == '0'\nassert solution('''5 3 7\n2 3\n1 2\n1 1\n4 1\n3 1\n5 3\n3 2''') == '0'\n"
    },
    {
        "number": 1634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 7 19''') == '12'\nassert solution('''4 3 2 1''') == '1'\nassert solution('''100 100 8 100''') == '16'\nassert solution('''100 100 8 100''') == '16'\nassert solution('''100 100 8 100''') == '16'\n"
    },
    {
        "number": 1635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '3'\nassert solution('''6''') == '2'\nassert solution('''2''') == '1'\nassert solution('''1''') == '0'\nassert solution('''2''') == '1'\n"
    },
    {
        "number": 1636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 0\n0 0\n1 0\n1 1\n0 1 2\n0 -1 -2 1 0\n''') == 'YES'\nassert solution('''3\n1 0\n0 0\n2 0\n0 1 2\n''') == 'NO'\nassert solution('''3\n1 0\n0 0\n2 0\n0 1 2\n''') == 'NO'\nassert solution('''3\n1 0\n0 0\n2 0\n0 1 2\n''') == 'NO'\nassert solution('''3\n1 0\n0 0\n2 0\n0 1 2\n''') == 'NO'\n"
    },
    {
        "number": 1637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3\n1 3\n1 2\n2 3''') == '3 0 3'\nassert solution('''3 3\n1 2\n2 3\n1 3\n1 2\n2 3\n1 3\n1 2\n2 3''') == '0 0 0'\nassert solution('''5 3\n-1 3\n2 4\n1 1\n3 5\n2 2\n1 4\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2\n2 3\n3 5\n1 3\n1 2"
    },
    {
        "number": 1638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''3\n10 6 8''') == '10 6 6'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\n"
    },
    {
        "number": 1639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n2 2 1 3 4 1''') == '3'\nassert solution('''3\n2 2 9''') == '3'\nassert solution('''3\n2 2 9''') == '3'\nassert solution('''3\n2 2 9''') == '3'\nassert solution('''3\n2 2 9''') == '3'\n"
    },
    {
        "number": 1640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 1 3\n''') == '4'\nassert solution('''4\n6 6 5 5\n''') == '0'\nassert solution('''4\n6 6 4 4\n''') == '-8'\nassert solution('''4\n1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 1641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n0 1\n1 1\n1 0''') == '0.3535533906'\nassert solution('''5 0\n10 0\n12 -4\n10 -8\n5 -8\n3 -4''') == '1.0000000000'\nassert solution('''6\n5 0\n10 0\n12 -4\n10 -8\n5 -8\n3 -4''') == '1.0000000000'\nassert solution('''6\n5 0\n10 0\n12 -4\n10 -8\n5 -8\n3 -4\n0 0''') == '0.3535533906'\nassert solution('''6\n5 0\n10 0\n12 -4\n10 -8\n5 -8\n3 -4\n0 0\n0 1\n1 1\n1 0''') == '0.3535533906'\n"
    },
    {
        "number": 1643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 -3') == '5'\nassert solution('3\\n1 2 -3') == '3'\nassert solution('3\\n41 -41 41') == '3'\nassert solution('3\\n1 2 -1 -3') == '3'\nassert solution('3\\n1 2 -1 -3') == '3'\n"
    },
    {
        "number": 1646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nabb\ndad\n''') == '2'\nassert solution('''8\ndrpepper\ncocacola\n''') == '7'\nassert solution('''8\ndrpepper\ncocacola\n''') == '7'\nassert solution('''8\ndrpepper\ncocacola\n''') == '7'\nassert solution('''8\ndrpepper\ncocacola\n''') == '7'\n"
    },
    {
        "number": 1648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '5'\nassert solution('1000') == '5'\nassert solution('10000') == '5'\nassert solution('100000') == '5'\n"
    },
    {
        "number": 1651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 1652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('erasedream') == 'YES'\nassert solution('dreamer') == 'NO'\nassert solution('dream') == 'YES'\nassert solution('erase') == 'YES'\nassert solution('eraser') == 'YES'\n"
    },
    {
        "number": 1653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3''') == '10011'\nassert solution('''AABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3''') == '10011'\nassert solution('''AABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3''') == '10011'\nassert solution('''AABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3''') == '10011'\nassert solution('''AABCCBAAB\nABCB\n5\n1 3 1 2\n2 2 2 4\n7 9 1 1\n3 4 2 3\n4 5 1 3''') == '10011'\n"
    },
    {
        "number": 1654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('?aa?', 'ab') == 'baab'\nassert solution('??b?', 'za') == 'azbz'\nassert solution('abcd', 'abacaba') == 'abcd'\nassert solution('?b?', 'ab') == 'ab'\nassert solution('?b?', 'ab') == 'ab'\n"
    },
    {
        "number": 1655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"vvvovvv\") == 4\nassert solution(\"vvovooovovvovoovoovvvvovovvvov\") == 100\nassert solution(\"vvovvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv"
    },
    {
        "number": 1657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n2 2\n2 1000''') == '2.0000000000'\nassert solution('''1 100\n1 1''') == '-1'\nassert solution('''3 5\n4 3\n5 2\n6 1''') == '0.5000000000'\nassert solution('''2 1\n2 2\n2 1000''') == '2.0000000000'\nassert solution('''1 100\n1 1''') == '-1'\n"
    },
    {
        "number": 1658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n''') == '8'\nassert solution('''3 3\n1 2 3\n''') == '8'\nassert solution('''3 3\n1 2 3\n''') == '8'\nassert solution('''3 3\n1 2 3\n''') == '8'\nassert solution('''3 3\n1 2 3\n''') == '8'\n"
    },
    {
        "number": 1659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7\n+ 5\n- 10\n- 20\n+ 40\n- 20''') == '22 1'\nassert solution('''5 17\n- 16\n- 2\n- 98\n+ 100\n- 98''') == '3 2'\nassert solution('''5 17\n- 16\n- 2\n- 98\n+ 100\n- 98''') == '3 2'\nassert solution('''5 17\n- 16\n- 2\n- 98\n+ 100\n- 98''') == '3 2'\nassert solution('''5 17\n- 16\n- 2\n- 98\n+ 100\n- 98''') == '3 2'\n"
    },
    {
        "number": 1660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n2 3 1\\n3 1 1') == '1'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n3 1 3\\n1 2 1\\n2 3 2\\n3 1 3') == '3'\nassert solution('6 7\\n1 2 1\\n3 2 5\\n2 4 2\\n2 5 2\\n2 6 9\\n5 4 3\\n4 3 4') == '6'\nassert solution('6 7\\n1 2 1\\n3 2 5\\n2 4 2\\n2 5 2\\n2 6 9\\n5 4 3\\n4 3 4') == '6'\nassert solution('6 7\\n1 2 1\\n3 2 5\\n2 4 2\\n2 5 2\\n2 6 9\\n5 4 3\\n4 3 4') == '6'\n"
    },
    {
        "number": 1661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 5 2 4\n5 3 4 6\n''') == '3'\nassert solution('''5 2\n20 40 50 20 40\n19 20\n''') == '0'\nassert solution('''6 4\n4 8 15 16 23 42\n1000 1000 1000 1000\n''') == '4'\nassert solution('''6 4\n4 8 15 16 23 42\n1000 1000 1000 1000\n''') == '0'\nassert solution('''6 4\n4 8 15 16 23 42\n1000 1000 1000 1000\n''') == '0'\n"
    },
    {
        "number": 1662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\nassert solution('''6\n1 1 2 2 3 3''') == '5'\nassert solution('''7\n1 1 2 2 3 3 4''') == '6'\nassert solution('''8\n1 1 2 2 3 3 4 5''') == '7'\nassert solution('''9\n1 1 2 2 3 3 4 5 6''') == '8'\n"
    },
    {
        "number": 1663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('107') == '42'\nassert solution('100500100500') == '428101984'\nassert solution('100500100500') == '428101984'\nassert solution('100500100500') == '428101984'\nassert solution('100500100500') == '428101984'\n"
    },
    {
        "number": 1664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''c=aa#bb\nd12=c\nres=c^d12\ntmp=aa$c\n''') == '''2\naaaa=aa#bb\nres=aaaa^aaaa\n'''\n\nassert solution('''max=aaaa$bbbb\nmin=bbbb^aaaa\n''') == '0'\n\nassert solution('''max=aaaa$bbbb\nmin=bbbb^aaaa\n''') == '0'\n\nassert solution('''max=aaaa$bbbb\nmin=bbbb^aaaa\n''') == '0'\n\nassert solution('''max=aaaa$bbbb\nmin=bbbb^aaaa\n''') == '0'"
    },
    {
        "number": 1665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '0\\n1\\n'\nassert solution('''6\n1 2\n1 3\n2 4\n2 5\n5 6\n''') == '0\\n3\\n2\\n4\\n1\\n'\nassert solution('''9\n1 2\n1 3\n2 4\n2 5\n5 6\n6 7\n6 8\n7 8\n8 9\n''') == '0\\n3\\n2\\n4\\n1\\n'\nassert solution('''10\n1 2\n1 3\n2 4\n2 5\n5 6\n6 7\n6 8\n7 8\n8 9\n9 10\n''') == '0\\n3\\n2\\n4\\n1\\n'\nassert solution('''11\n1 2\n1 3\n2 4\n2 5\n5 6\n6 7\n6 8\n7 8\n8 9\n9 10\n10 11\n''') == '0\\n3\\n2\\n4\\n1\\n'\n"
    },
    {
        "number": 1666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8\\n1 2 7 3 4 8 5 6') == '7'\nassert solution('6\\n25 1 2 3 14 36') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 1668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0\\n1234\\n0600\\n1\\n1337\\n1237\\n3\\n3139\\n3138\\n3939\\n6139'\n\nassert solution('''3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0\\n1234\\n0600\\n1\\n1337\\n1237\\n3\\n3139\\n3138\\n3939\\n6139'\n\nassert solution('''3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0\\n1234\\n0600\\n1\\n1337\\n1237\\n3\\n3139\\n3138\\n3939\\n6139'\n\nassert solution('''3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0\\n1234\\n0600\\n1\\n1337\\n1237\\n3\\n3139\\n3138\\n3939\\n6139'\n\nassert solution('''3\n2\n1234\n0600\n2\n1337\n1337\n4\n3139\n3139\n3139\n3139\n''') == '0\\n1234\\n0600\\n1\\n1337\\n1237\\n3\\n3139\\n3138\\n3939\\n6139'"
    },
    {
        "number": 1669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('( ) + ++ : -> >> >>: b c)') == '(a++ +4c )>> :d b->+10>>:e'\nassert solution('( ) + ++ : -> >> >>: b c)') == '(a++ +4c )>> :d b->+10>>:e'\nassert solution('( ) + ++ : -> >> >>: b c)') == '(a++ +4c )>> :d b->+10>>:e'\nassert solution('( ) + ++ : -> >> >>: b c)') == '(a++ +4c )>> :d b->+10>>:e'\nassert solution('( ) + ++ : -> >> >>: b c)') == '(a++ +4c )>> :d b->+10>>:e'\n"
    },
    {
        "number": 1670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''MC\nCSKA''') == '''MC 25 70\nMC 42 82\nCSKA 13 90'''\n\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == '''MC 25 70\nMC 42 82\nCSKA 13 90'''\n\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r''') == '''MC 25 70\nMC 42 82\nCSKA 13 90'''\n\nassert solution('''MC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n70 h 25 y\n77 a 4 y\n79 a 25 y\n82 h 42 r\n89 h 16 y\n90 a 13 r\nMC\nCSKA\n9\n28 a 3 y\n62 h 25 y\n66 h 42 y\n"
    },
    {
        "number": 1671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 2 3') == '1'\nassert solution('2\\n1 2 3 4') == '2'\nassert solution('2\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 1672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10\\n10\\n10\\n01\\n10\\n10\\n') == '3'\nassert solution('01\\n01\\n10\\n10\\n') == '2'\nassert solution('01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01\\n01"
    },
    {
        "number": 1673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n1 7 3 5\\n') == '8'\nassert solution('2\\n5\\n1 10 100 1000 10000\\n') == '9'\nassert solution('2\\n5\\n1 10 100 1000 10000\\n') == '9'\nassert solution('2\\n5\\n1 10 100 1000 10000\\n') == '9'\nassert solution('2\\n5\\n1 10 100 1000 10000\\n') == '9'\n"
    },
    {
        "number": 1674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 5 16 18 7 2 10\nbaaaaca\n''') == '54'\nassert solution('''5 5\n2 4 1 3 1000\naaaaa\n''') == '1010'\nassert solution('''5 4\n2 4 1 3 1000\naaaaa\n''') == '1009'\nassert solution('''8 1\n10 15 2 1 4 8 15 16\nqqwweerr\n''') == '41'\nassert solution('''6 3\n14 18 9 19 2 15\ncccccc\n''') == '52'\n"
    },
    {
        "number": 1675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n2 1''') == '2 0'\nassert solution('''3\n1 2\n2 1\n1 3''') == '3 1'\nassert solution('''4\n1 2\n2 1\n1 3\n2 4\n''') == '3 1'\nassert solution('''5\n1 2\n2 1\n1 3\n2 4\n1 4\n''') == '3 1'\nassert solution('''6\n1 2\n2 1\n1 3\n2 4\n1 5\n2 5\n''') == '3 1'\n"
    },
    {
        "number": 1676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n2 9\n4 8\n10 9\n15 2\n19 1''') == '11 19 -1 21 22'\nassert solution('''4 1\n2 8\n4 8\n10 9\n15 2\n''') == '10 18 27 -1'\nassert solution('''5 1\n2 9\n4 8\n10 9\n15 2\n19 1\n''') == '10 18 27 -1'\nassert solution('''5 1\n2 9\n4 8\n10 9\n15 2\n19 1\n''') == '10 18 27 -1'\nassert solution('''5 1\n2 9\n4 8\n10 9\n15 2\n19 1\n''') == '10 18 27 -1'\n"
    },
    {
        "number": 1677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 5\n''') == '2'\n\nassert solution('''4\n10 20 10 30\n''') == '3'\n\nassert solution('''5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''6\n1 2 3 4 5 6\n''') == '2'\n\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '3'"
    },
    {
        "number": 1678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4\\n5 -1 3 4 -1\\n') == '5'\nassert solution('3 0\\n-1 2 -3\\n') == '4'\nassert solution('4 -1\\n-2 1 -2 3\\n') == '3'\nassert solution('-1\\n-2 1 -2 3\\n') == '3'\nassert solution('-1\\n-2 1 -2 3\\n') == '3'\n"
    },
    {
        "number": 1679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('11') == '3'\nassert solution('111') == '7'\nassert solution('1111') == '15'\n"
    },
    {
        "number": 1680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n0 3 2 1''') == '4'\nassert solution('''6 0\n200 100 100 100 200 200''') == '6'\nassert solution('''6 0\n0 0 0 0 0 0''') == '0'\nassert solution('''6 0\n0 0 0 0 0 0''') == '0'\nassert solution('''6 0\n0 0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 1681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''aaabbac''') == '6'\nassert solution('''aabbccac''') == '-1'\nassert solution('''a''') == '-1'\nassert solution('''z''') == '-1'\nassert solution('''aaabbac''') == '6'\n"
    },
    {
        "number": 1682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n5 4 6\n3 1 5''') == '10'\nassert solution('''5 3\n3 4 7 10 3\n4 5 5 12 5''') == '25'\nassert solution('''5 3\n3 4 7 10 3\n4 5 5 12 5''') == '25'\nassert solution('''5 3\n3 4 7 10 3\n4 5 5 12 5''') == '25'\nassert solution('''5 3\n3 4 7 10 3\n4 5 5 12 5''') == '25'\n"
    },
    {
        "number": 1683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n12 3 45''') == '12330'\nassert solution('''2\n123 456''') == '1115598'\nassert solution('''3\n12 3 45''') == '12330'\nassert solution('''3\n12 3 45''') == '12330'\nassert solution('''3\n12 3 45''') == '12330'\n"
    },
    {
        "number": 1684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''15 2\n4\nUURL\n8\nLRLLLLLLLL''') == '10\\n5'\n'''"
    },
    {
        "number": 1686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3''') == '255.255.254.0'\nassert solution('''5 2\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3''') == '255.255.0.0'\nassert solution('''2 1\n255.0.0.1\n0.0.0.2\n''') == '-1'\nassert solution('''2 1\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3''') == '-1'\nassert solution('''2 1\n0.0.0.1\n0.1.1.2\n0.0.2.1\n0.1.1.0\n0.0.2.3''') == '-1'\n"
    },
    {
        "number": 1687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 2 4''') == '2'\nassert solution('''5\n2 1 3 1 6''') == '1'\nassert solution('''3\n2 3 5''') == '-1'\nassert solution('''4\n2 1 3 1 6''') == '1'\nassert solution('''6\n2 1 3 1 6''') == '-1'\n"
    },
    {
        "number": 1688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nOO|OX\nXO|XX\nOX|OX\nXX|OX\nOO|OO\nOO|XX\n''') == 'YES'\nassert solution('''4\nXO|OX\nXO|XX\nOX|OX\nXX|OX\n''') == 'NO'\nassert solution('''5\nXX|XX\nXX|XX\nXO|OX\nXO|OO\nOX|XO\n''') == 'YES'\nassert solution('''5\nXX|XX\nXX|XX\nXO|OX\nXO|OO\nOX|XO\n''') == 'NO'\nassert solution('''5\nXX|XX\nXX|XX\nXO|OX\nXO|OO\nOX|XO\n''') == 'NO'\n"
    },
    {
        "number": 1690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 1692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == ''\nassert solution('12') == ''\nassert solution('1234') == ''\n"
    },
    {
        "number": 1693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''3\n10 6 8''') == '10 6 6'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\nassert solution('''10\n1 2 3 2 1''') == '1 2 3 2 1'\n"
    },
    {
        "number": 1694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"XXRR\"\n\nInput\n3 5 1 3\n1 1 2\n2 2 3\n3 3 3\n4 1 1\n10 1 3\n\nOutput\nRRRR\n"
    },
    {
        "number": 1695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"16\"\nassert solution(stdin) == \"21\"\nassert solution(stdin) == \"16\"\n"
    },
    {
        "number": 1696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 7 3''') == '3'\nassert solution('''10 5 1''') == '2'\nassert solution('''7 5 1''') == '2'\nassert solution('''7 7 1''') == '2'\nassert solution('''7 7 1''') == '2'\n"
    },
    {
        "number": 1697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\nAAAA\nABCA\nAAAA\n''') == 'Yes'\n\nassert solution('''3 4\nAAAA\nABCA\nAADA\n''') == 'No'\n\nassert solution('''4 4\nYYYR\nBYBY\nBBBY\nBBBY\n''') == 'Yes'\n\nassert solution('''7 6\nAAAAAB\nABBBAB\nABAAAB\nABABBB\nABAAAB\nABBBAB\nAAAAAB\n''') == 'Yes'\n\nassert solution('''2 13\nABCDEFGHIJKLM\nNOPQRSTUVWXYZ\n''') == 'No'"
    },
    {
        "number": 1698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\nmain 192.168.0.2\nreplica 192.168.0.1\nblock 192.168.0.1;\nproxy 192.168.0.2;\n''') == '''block 192.168.0.1; #replica\nproxy 192.168.0.2; #main\n'''\n\nassert solution('''3 5\ngoogle 8.8.8.8\ncodeforces 212.193.33.27\nserver 138.197.64.57\nredirect 138.197.64.57;\nblock 8.8.8.8;\ncf 212.193.33.27;\nunblock 8.8.8.8;\ncheck 138.197.64.57;\n''') == '''redirect 138.197.64.57; #server\nblock 8.8.8.8; #google\ncf 212.193.33.27; #codeforces\nunblock 8.8.8.8; #google\ncheck 138.197.64.57; #server\n"
    },
    {
        "number": 1702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('(()())') == '0'\nassert solution('(()())') == '0'\nassert solution('(()())') == '0'\nassert solution('(()())') == '0'\nassert solution('(()())') == '0'\n"
    },
    {
        "number": 1704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7\\n0000000\\n') == '8'\nassert solution('2 5\\n0010010\\n0010010\\n') == '97'\nassert solution('3 5\\n0100001\\n1001001\\n1010011\\n') == '-1'\nassert solution('3 5\\n0100001\\n1001001\\n1010011\\n') == '-1'\nassert solution('3 5\\n0100001\\n1001001\\n1010011\\n') == '-1'\n"
    },
    {
        "number": 1705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n0 0 1 0 0') == '3'\nassert solution('4\\n1 0 0 1') == '3'\nassert solution('3\\n1 0 0') == '2'\nassert solution('2\\n1 0') == '1'\nassert solution('1\\n1') == '0'\n"
    },
    {
        "number": 1706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abc') == 'abc'\nassert solution('abcdef') == 'abcdef'\n"
    },
    {
        "number": 1707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 5 -3''') == '2'\nassert solution('''2\n3 6''') == '1'\nassert solution('''2\n3 6\n2 5 -3''') == '2'\nassert solution('''2\n3 6\n2 5 -3''') == '2'\nassert solution('''2\n3 6\n2 5 -3''') == '2'\n"
    },
    {
        "number": 1708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 2''') == '10'\nassert solution('''3 2 3''') == '0'\nassert solution('''3 2 2''') == '-1'\nassert solution('''3 2 3''') == '0'\nassert solution('''3 2 2''') == '0'\n"
    },
    {
        "number": 1710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''4 2''') == '2'\nassert solution('''6 3 8 1''') == '2'\nassert solution('''1 1''') == '1'\nassert solution('''4 2''') == '2'\n"
    },
    {
        "number": 1711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4') == '6'\nassert solution('3 5') == '10'\nassert solution('42 1337') == '806066790'\nassert solution('100000 200000') == '707899035'\nassert solution('1000000 1000000') == '1'\n"
    },
    {
        "number": 1712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 2''') == 'Vanya'\nassert solution('''2 1 1''') == 'Both'\nassert solution('''1 2 3''') == 'Vanya'\nassert solution('''1 1 1''') == 'Both'\nassert solution('''1 1 1''') == 'Both'\n"
    },
    {
        "number": 1713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 1\n2 3 4 1\n''') == '3'\nassert solution('''4 3 3\n4 1 3 2\n''') == '0'\nassert solution('''4 3 4\n1 2 3 4\n''') == '-1'\nassert solution('''3 1 3\n2 1 3\n''') == '-1'\nassert solution('''3 1 3\n2 1 3\n''') == '-1'\n"
    },
    {
        "number": 1714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0''') == '1 2'\nassert solution('''2 1''') == '3 2 1 4'\nassert solution('''4 0''') == '2 7 4 6 1 3 5 8'\nassert solution('''3 1''') == '2 3 1 4'\nassert solution('''4 1''') == '2 3 1 4'\n"
    },
    {
        "number": 1715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799''') == '350\\n1400\\n301\\n399'\nassert solution('''2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799''') == '350\\n1400\\n301\\n399'\nassert solution('''2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799''') == '350\\n1400\\n301\\n399'\nassert solution('''2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799''') == '350\\n1400\\n301\\n399'\nassert solution('''2 3 4\n100\n600\n400\n900\n1000\n150\n2000\n899\n799''') == '350\\n1400\\n301\\n399'\n"
    },
    {
        "number": 1716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 1\n1 1\n1 2\n2 2\n1 2''') == '3'\nassert solution('''2 3 1\n1 1\n1 2\n2 2\n1 2''') == '3'\nassert solution('''2 3 1\n1 1\n1 2\n2 2\n1 2''') == '3'\nassert solution('''2 3 1\n1 1\n1 2\n2 2\n1 2''') == '3'\nassert solution('''2 3 1\n1 1\n1 2\n2 2\n1 2''') == '3'\n"
    },
    {
        "number": 1717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '7'\nassert solution('''5''') == '7'\nassert solution('''10''') == '7'\nassert solution('''30''') == '7'\nassert solution('''100''') == '7'\n"
    },
    {
        "number": 1718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AC') == 2\nassert solution('AGC') == 3\nassert solution('AGCGT') == 4\n"
    },
    {
        "number": 1720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 4\n....\n###.\n....\n1 1 3 1''') == '3'\nassert solution('''3 4 1\n....\n###.\n....\n1 1 3 1''') == '8'\nassert solution('''2 2 1\n.#\n"
    },
    {
        "number": 1721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaab') == 'baa'\nassert solution('aab') == 'ab'\n"
    },
    {
        "number": 1722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\njorge\\njose\\noscar\\njerry\\n') == '1'\nassert solution('7\\nkambei\\ngorobei\\nshichiroji\\nkyuzo\\nheihachi\\nkatsushiro\\nkikuchiyo\\n') == '2'\nassert solution('5\\nmike\\nmike\\nmike\\nmike\\nmike\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '4'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '4'\n"
    },
    {
        "number": 1723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '-1'\nassert solution('''8''') == '1 2'\nassert solution('''8\n1 2\n1 3\n2 4\n2 5\n3 6\n4 7\n4 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8''') == '1 2'\nassert solution('''8\n1 2\n1 3\n2 4\n2 5\n3 6\n4 7\n4 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n2 4\n2 5\n2 6\n3 7\n6 8\n1 2\n1 3\n"
    },
    {
        "number": 1724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 8\n10\n''') == '3'\n\nassert solution('''5\n17 0 10 2 1\n11010\n''') == '27'\n\nassert solution('''3\n3 8\n10\n''') == '3'\n\nassert solution('''4\n3 8\n10\n''') == '3'\n\nassert solution('''5\n17 0 10 2 1\n11010\n''') == '27'"
    },
    {
        "number": 1725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 2\n2 4\n6 8''') == '4'\nassert solution('''1 2 7\n6 7''') == '-1'\nassert solution('''2 2 2\n2 4\n6 8''') == '4'\nassert solution('''2 2 2\n2 4\n6 8''') == '4'\nassert solution('''2 2 2\n2 4\n6 8''') == '4'\n"
    },
    {
        "number": 1726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n86400 86398''') == '2'\nassert solution('''2 86400\n0 86400''') == '1'\nassert solution('''2 86400\n0 86400''') == '1'\nassert solution('''2 86400\n0 86400''') == '1'\nassert solution('''2 86400\n0 86400''') == '1'\n"
    },
    {
        "number": 1727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n2 1\n5 10\n10 9\n19 1''') == '3'\nassert solution('''5\n1 2\n2 1\n5 10\n10 9\n20 1''') == '4'\nassert solution('''5\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2\n2 1\n5 10\n10 9\n20 1\n1 2"
    },
    {
        "number": 1728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 2 1 5\n2 1 1 1 1 1\n''') == '3'\nassert solution('''7\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n''') == '5'\nassert solution('''8\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n''') == '8'\nassert solution('''9\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n''') == '9'\nassert solution('''10\n1 1 2 3 1 4\n3 3 1 1 1 2 3\n''') == '9'\n"
    },
    {
        "number": 1729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '0 1 0 1 0 0 0 0 0 0'\nassert solution('''1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '2 2 2 0 0 0 0 0 0 0'\nassert solution('''1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '0 0 0 0 0 0 0 0 0 0'\nassert solution('''1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '2 3 2 1 0 0 0 0 0 0'\nassert solution('''1>3>22<\n1 3\n4 7\n7 7\n1 7\n''') == '0 0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 1730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 2\n2 3\n3 1''') == '3'\nassert solution('''4 6 3\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''4 6 3\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''4 6 3\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''4 6 3\n4 3\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\n"
    },
    {
        "number": 1731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '5'\nassert solution('10 1') == '55'\nassert solution('723 9') == '157557417'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 1732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n100 99 9900\n1 1 1\n''') == '2'\nassert solution('''5\n10 20 30 40 50\n1 1 1 1 1\n''') == '-1'\nassert solution('''7\n15015 10010 6006 4290 2730 2310 1\n1 1 1 1 1 1 10\n''') == '6'\nassert solution('''8\n4264 4921 6321 6984 2316 8432 6120 1026\n4264 4921 6321 6984 2316 8432 6120 1026\n''') == '7237'\n'''\n"
    },
    {
        "number": 1733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '9'\nassert solution('''123456789''') == '9'\nassert solution('''100000000''') == '9'\nassert solution('''100123456''') == '9'\nassert solution('''193456789''') == '9'\n"
    },
    {
        "number": 1735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"No\"\nassert solution(\"iiq\") == \"Yes\"\nassert solution(\"abba\") == \"No\"\nassert solution(\"abab\") == \"Yes\"\nassert solution(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n\n\n\n\"\"\""
    },
    {
        "number": 1736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\na 3\n2\nb 1\nc 1\n\nb 2\n0\n\nb 1\n1\nb 2\n\nc 1\n1\nb 2\n''') == '2\\nb 1\\nc 1'\n\nassert solution('''9\ncodehorses 5\n3\nwebfrmk 6\nmashadb 1\nmashadb 2\n\ncommons 2\n0\n\nmashadb 3\n0\n\nwebfrmk 6\n2\nmashadb 3\ncommons 2\n\nextra 4\n1\nextra 3\n\nextra 3\n0\n\nextra 1\n0\n\nmashadb 1\n1\nextra 3\n\nmashadb 2\n1\nextra 1\n''') == '4\\ncommons 2\\nextra 1\\nmashadb 2\\nwebfrmk 6'\n\nassert solution('''3\nabc 1\n2\nabc 3\ncba 2\n\nabc 3\n0\n\ncba 2\n0\n\nOutput\n1\ncba 2\n''') == '1\\nabc 3\\nabc 1'\n\nassert solution('''9\nabc 1\n2\nwebfrmk 6\nmashadb 1\nmashadb 2\n\ncommons 2\n0\n\nmashadb 3\n0\n\nwebfrmk 6\n2\nmashadb 3\ncommons 2\n\nextra 4\n1\nextra 3\n\nextra 3\n0\n\nextra 1\n0\n\nmashadb 1\n1\nextra 3\n\nmashadb 2\n1\nextra 1\n''') == '4\\ncommons 2\\nextra 1\\nmashadb 2\\nwebfrmk 6'\n\nassert solution('''3\nabc 1\n2\nabc 3\ncba 2\n\nabc 3\n0\n\ncba 2\n0\n\nOutput\n1\ncba 2\n''') == '1\\nabc 3\\nabc 1'"
    },
    {
        "number": 1738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaaaaaaaaa') == 3\nassert solution('abcab') == 6\nassert solution('cczabababab') == 7\nassert solution('cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"
    },
    {
        "number": 1739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n2 2\\n') == '8'\nassert solution('3 3\\n1 2 3\\n') == '27'\nassert solution('2 2\\n29 29\\n') == '73741817'\nassert solution('4 5\\n0 0 0 0\\n') == '1'\nassert solution('2 2\\n0 0 0\\n') == '1'\n"
    },
    {
        "number": 1740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''3 1 4 2 5'''\nassert solution('''6''') == '''3 1 4 2 5 6'''\nassert solution('''7''') == '''3 1 4 2 5 6 7'''\nassert solution('''8''') == '''3 1 4 2 5 6 7 8'''\nassert solution('''9''') == '''3 1 4 2 5 6 7 8 9'''\n"
    },
    {
        "number": 1741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n0 1\n''') == '0.5'\nassert solution('''3\n0 1\n0 2\n0 -3\n''') == '-1'\nassert solution('''2\n0 1\n1 1\n''') == '0.625'\nassert solution('''4\n0 1\n1 1\n1 2\n1 -2\n''') == '-1'\nassert solution('''5\n0 1\n1 1\n1 2\n1 -2\n1 -3\n''') == '-1'\n"
    },
    {
        "number": 1742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2\n1 2''') == '1'\nassert solution('''3 3\n3 1 2\n1 2\n3 1\n3 2''') == '2'\nassert solution('''5 2\n3 1 5 4 2\n5 2\n5 4\n''') == '1'\nassert solution('''5 2\n3 1 5 4 2\n5 2\n5 4\n''') == '2'\nassert solution('''5 2\n3 1 5 4 2\n5 2\n5 4\n''') == '1'\n"
    },
    {
        "number": 1743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 4\n4 3 2 1\n0 1 1 0\n''') == '13'\nassert solution('''7\n8 5 7 6 1 8 9\n2 7 9 5 4 3 1\n2 3 3 4 1 1 3\n''') == '44'\nassert solution('''3\n1 1 1\n1 2 1\n1 1 1\n''') == '4'\nassert solution('''1\n1 1 1\n1 2 1\n1 1 1\n''') == '4'\nassert solution('''2\n1 1 1\n1 2 1\n1 1 1\n''') == '4'\n"
    },
    {
        "number": 1744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n...\n..#\n...''') == '3'\nassert solution('''4 2\n..\n..\n..\n..\n''') == '2'\nassert solution('''4 5\n"
    },
    {
        "number": 1746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1\n1\n1\n''') == 'Yes'\nassert solution('''7\n1\n1\n1\n2\n2\n2\n''') == 'No'\nassert solution('''8\n1\n1\n1\n1\n3\n3\n3\n''') == 'Yes'\nassert solution('''8\n1\n1\n1\n1\n3\n3\n3\n''') == 'No'\nassert solution('''8\n1\n1\n1\n1\n3\n3\n3\n''') == 'Yes'\n"
    },
    {
        "number": 1747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n''') == '1 5'\nassert solution('''9 3\n6 5 1 2 3 2 1 4 5\n''') == '3 7'\nassert solution('''3 1\n1 2 3\n''') == '1 1'\nassert solution('''3 1\n1 2 3\n''') == '1 1'\nassert solution('''3 1\n1 2 3\n''') == '1 1'\n"
    },
    {
        "number": 1748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 4''') == 'TRUTH'\nassert solution('''3 1 2''') == 'LIE'\nassert solution('''4 2 4''') == 'TRUTH'\nassert solution('''1 1 1 1''') == 'LIE'\nassert solution('''3 2 3''') == 'TRUTH'\n"
    },
    {
        "number": 1750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n1 3\n''') == '3'\nassert solution('''5\n2 1\n3 2\n4 3\n5 4\n''') == '5'\nassert solution('''5\n2 1\n3 2\n4 3\n5 4\n''') == '3'\nassert solution('''5\n2 1\n3 2\n4 3\n5 4\n''') == '5'\nassert solution('''5\n2 1\n3 2\n4 3\n5 4\n''') == '3'\n"
    },
    {
        "number": 1751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '16'\nassert solution('''583291''') == '135712853'\nassert solution('''1''') == '0'\nassert solution('''2''') == '0'\nassert solution('''3''') == '0'\n"
    },
    {
        "number": 1752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == '2\\n3 4\\n1 4\\n4\\n1 2\\n2 2\\n2 4\\n5 4\\n1\\n5 1\\n'\nassert solution('''3 1\n1 3\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'\nassert solution('''3 1\n1 3\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'\nassert solution('''3 1\n1 3\n''') == '1\\n1 1\\n1\\n1 2\\n1\\n1 3\\n'\n"
    },
    {
        "number": 1754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 3 1\\n1 5 3 4 6 7 2\\n1 3 1 2 1 2 3\\n3\\n') == '1'\nassert solution('8 4 4\\n1 2 3 4 5 6 7 8\\n4 3 2 1 4 3 2 1\\n3 4 5 6\\n') == '2'\nassert solution('8 4 4\\n1 2 3 4 5 6 7 8\\n4 3 2 1 4 3 2 1\\n3 4 5 6\\n') == '2'\nassert solution('8 4 4\\n1 2 3 4 5 6 7 8\\n4 3 2 1 4 3 2 1\\n3 4 5 6\\n') == '2'\nassert solution('8 4 4\\n1 2 3 4 5 6 7 8\\n4 3 2 1 4 3 2 1\\n3 4 5 6\\n') == '2'\n"
    },
    {
        "number": 1755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n1 2 1 1 3 5 1\n3 5\n''') == '4'\nassert solution('''3 3\n1 3 2\n1 2 3\n''') == '-1'\nassert solution('''5 0\n4 3 1 2 3\n2 4 9\n''') == '2'\nassert solution('''10 3\n1 3 5 6 12 9 8 10 13 15\n2 4 9\n''') == '3'\nassert solution('''7 0\n4 3 1 2 3\n2 4 9\n''') == '-1'\n"
    },
    {
        "number": 1756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 1''') == '5'\nassert solution('''3 6\n3 3 3''') == '12'\nassert solution('''5 6\n4 2 3 1 3''') == '15'\nassert solution('''5 6\n1 2 3 1 2 3''') == '12'\nassert solution('''5 6\n1 2 3 4 1 2 3''') == '15'\n"
    },
    {
        "number": 1757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8''') == 'OOOOOoOooO'\nassert solution('''15''') == 'OOOoOooOooooOoo'\nassert solution('''1''') == 'O'\nassert solution('''2''') == 'o'\nassert solution('''3''') == 'o'\n"
    },
    {
        "number": 1758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1\n2\n3\n4\n5''') == '1 3 6 10 15'\nassert solution('''4 2\n2 5\n3 1\n5 3\n10 1''') == '7 8 13 21'\nassert solution('''5 2\n2 5\n3 1\n5 3\n10 1''') == '7 8 13 21'\nassert solution('''5 2\n2 5\n3 1\n5 3\n10 1''') == '7 8 13 21'\nassert solution('''5 2\n2 5\n3 1\n5 3\n10 1''') == '7 8 13 21'\n"
    },
    {
        "number": 1760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nUUD\n''') == '5 6 3'\nassert solution('''10\nUUDUDUUDDUUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUDUD"
    },
    {
        "number": 1761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('i') == 'yes'\nassert solution('i<3i<3love<23you<3') == 'yes'\nassert solution('i<3i<3love<23you<3') == 'no'\nassert solution('i<3i<3love<23you<3') == 'no'\nassert solution('i<3i<3love<23you<3') == 'no'\n"
    },
    {
        "number": 1762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 5\n2 5\n3 5''') == '6'\nassert solution('''6 1\n1 1000000000\n2 1000000000\n3 1000000000\n4 1000000000\n5 1000000000\n6 3''') == '1000000001'\nassert solution('''6 1\n1 1000000000\n2 1000000000\n3 1000000000\n4 1000000000\n5 1000000000\n6 3''') == '1000000001'\nassert solution('''6 1\n1 1000000000\n2 1000000000\n3 1000000000\n4 1000000000\n5 1000000000\n6 3''') == '1000000001'\nassert solution('''6 1\n1 1000000000\n2 1000000000\n3 1000000000\n4 1000000000\n5 1000000000\n6 3''') == '1000000001'\n"
    },
    {
        "number": 1763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 1\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '3'\nassert solution('''8\n2 1 2 1 1 1 1 1\n''') == '0'\nassert solution('''8\n2 1 2 1 1 1 1\n''') == '3'\nassert solution('''8\n1 1 1 1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 1765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2 4'\nassert solution('''3\n1 2 4''') == '1 4'\nassert solution('''3\n1 2 4''') == '1 4'\nassert solution('''3\n1 2 4''') == '1 4'\nassert solution('''3\n1 2 4''') == '1 4'\n"
    },
    {
        "number": 1766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 1 2 10\n''') == '12 5'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '16 12'\nassert solution('''1\n1\n''') == '0 0'\nassert solution('''2\n1 2\n''') == '1 1'\nassert solution('''3\n1 2 3\n''') == '2 2'\n"
    },
    {
        "number": 1767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 4 3 2\n2 3 3 12 1\n''') == '22'\nassert solution('''10\n13 2 7 11 8 4 9 8 5 1\n5 7 18 9 2 3 0 11 8 6\n''') == '46'\nassert solution('''10\n13 2 7 11 8 4 9 8 5 1\n5 7 18 9 2 3 0 11 8 6\n''') == '46'\nassert solution('''10\n13 2 7 11 8 4 9 8 5 1\n5 7 18 9 2 3 0 11 8 6\n''') == '46'\nassert solution('''10\n13 2 7 11 8 4 9 8 5 1\n5 7 18 9 2 3 0 11 8 6\n''') == '46'\n"
    },
    {
        "number": 1768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nkoyomi\n3\n1 o\n4 o\n4 m\n''') == '3'\nassert solution('''15\nyamatonadeshiko\n10\n1 a\n2 a\n3 a\n4 a\n5 a\n1 b\n2 b\n3 b\n4 b\n5 b\n''') == '4'\nassert solution('''10\naaaaaaaaaa\n2\n10 b\n10 z\n''') == '10'\nassert solution('''10\naaaaaaaaaa\n2\n10 b\n10 z\n''') == '10'\nassert solution('''10\naaaaaaaaaa\n2\n10 b\n10 z\n''') == '10'\n"
    },
    {
        "number": 1769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1''') == '2 1'\nassert solution('''1\n1''') == '1 3 4 2'\nassert solution('''2\n1''') == '1 3 4 2'\nassert solution('''3\n1''') == '1 3 4 2'\nassert solution('''4\n1''') == '1 3 4 2'\n"
    },
    {
        "number": 1770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 2\n-2 1\n2 1\n3 -1\n5 -1\n7 -1''') == '4'\nassert solution('''4 10 1\n-20 1\n-10 -1\n0 1\n10 -1''') == '1'\nassert solution('''4 10 1\n-20 1\n-10 -1\n0 1\n10 -1''') == '1'\nassert solution('''4 10 1\n-20 1\n-10 -1\n0 1\n10 -1''') == '1'\nassert solution('''4 10 1\n-20 1\n-10 -1\n0 1\n10 -1''') == '1'\n"
    },
    {
        "number": 1772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 3 4 2 7''') == '2'\nassert solution('''6\n2 2 6 8 6 12''') == '0'\nassert solution('''3\n11 4 10''') == '1'\nassert solution('''7\n1 1 1 1 1 1 1''') == '0'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 1773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n-1 5\n1 5''') == '10'\nassert solution('''3\n-2 2\n1 4\n-1 3''') == '9'\nassert solution('''3\n1 9\n3 5\n7 10''') == '9'\nassert solution('''3\n1 9\n3 5\n7 10\n-1 3\n-1 2\n-1 1\n-1 0\n-1 -1\n-1 -2\n-1 -3''') == '9'\nassert solution('''3\n1 9\n3 5\n7 10\n-1 3\n-1 2\n-1 1\n-1 0\n-1 -1\n-1 -2\n-1 -3''') == '9'\n"
    },
    {
        "number": 1774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"HHHH\") == \"Yes\"\nassert solution(\"HQHQH\") == \"No\"\nassert solution(\"HHQQHHQQHH\") == \"Yes\"\nassert solution(\"HHQQHHQQHH\") == \"No\"\nassert solution(\"HHQQHHQQHH\") == \"Yes\"\n"
    },
    {
        "number": 1775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 4\n4 0\n1 2\n2 1\n0 2\n1 3\n''') == '2 2'\nassert solution('''3 2 4\n1 2\n1 3\n2 2\n''') == '1 3'\nassert solution('''3 2 4\n1 2\n1 3\n2 2\n''') == '1 3'\nassert solution('''3 2 4\n1 2\n1 3\n2 2\n''') == '1 3'\nassert solution('''3 2 4\n1 2\n1 3\n2 2\n''') == '1 3'\n"
    },
    {
        "number": 1776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(1?1)\") == \"2\"\nassert solution(\"(2?(1?2))\") == \"1\"\nassert solution(\"((1?(5?7))?((6?2)?7))\") == \"18\"\nassert solution(\"((1?(5?7))?((6?2)?7))\") == \"16\"\nassert solution(\"((1?(5?7))?((6?2)?7))\") == \"16\"\n"
    },
    {
        "number": 1777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(()())\") == \"((()))\"\nassert solution(\"(()())((()))\") == \"((()())((())))\"\nassert solution(\"(()())((()))(()())\") == \"((()())((())))(()())\"\nassert solution(\"(()())((()))(()())\") == \"((()())((())))(()())\"\nassert solution(\"(()())((()))(()())\") == \"((()())((())))(()())\"\n"
    },
    {
        "number": 1778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n2\\n') == '0'\n"
    },
    {
        "number": 1779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''qwertyuiopasdfghjklzxcvbnm\nveamhjsgqocnrbfxdtwkylupzi\nTwccpQZAvb2017''') == 'HelloVKCup2017'\nassert solution('''mnbvcxzlkjhgfdsapoiuytrewq\nasdfghjklqwertyuiopzxcvbnm\n7abaCABAABAcaba7''') == '7uduGUDUUDUgudu7'\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 1780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 -1\n1 1\n1 2\n2 2''') == '0\\n1\\n0\\n1\\n0'\nassert solution('''5 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5''') == '0\\n1\\n0\\n1\\n0'\nassert solution('''5 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5''') == '0\\n1\\n0\\n1\\n0'\nassert solution('''5 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5''') == '0\\n1\\n0\\n1\\n0'\nassert solution('''5 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2 5\n1 5\n-1 1 1 1 -1\n1 1\n2 3\n3 5\n2"
    },
    {
        "number": 1781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solutionP"
    },
    {
        "number": 1782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 4 7\n''') == '9.0000000000'\nassert solution('''1 1\n10\n''') == '10.0000000000'\nassert solution('''8 2\n1 2 4 100000 123 456 789 1\n''') == '28964.2857142857'\nassert solution('''8 2\n1 2 4 100000 123 456 789 1\n''') == '28964.2857142857'\nassert solution('''8 2\n1 2 4 100000 123 456 789 1\n''') == '28964.2857142857'\n"
    },
    {
        "number": 1784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == 'YES'\nassert solution('''5 2\n3 2 4 1 3\n''') == 'NO'\nassert solution('''5 4\n3 2 4 3 5\n''') == 'YES'\nassert solution('''5 4\n3 2 4 3 5\n''') == 'YES'\nassert solution('''5 4\n3 2 4 3 5\n''') == 'YES'\n"
    },
    {
        "number": 1785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\nC\n''') == '1'\n\nassert solution('''2\nAG\n''') == '4'\n\nassert solution('''3\nTTT\n''') == '1'\n\nassert solution('''4\nTTT\n''') == '27'\n\nassert solution('''5\nTTT\n''') == '27'"
    },
    {
        "number": 1786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 4\nH 2\nV 2\nV 3\nV 1''') == '8\\n4\\n4\\n2\\n'\nassert solution('''7 6 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '28\\n16\\n12\\n6\\n4\\n'\nassert solution('''7 6 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '28\\n16\\n12\\n6\\n4\\n'\nassert solution('''7 6 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '28\\n16\\n12\\n6\\n4\\n'\nassert solution('''7 6 5\nH 4\nV 3\nV 5\nH 2\nV 1''') == '28\\n16\\n12\\n6\\n4\\n'\n"
    },
    {
        "number": 1787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abbaa') == '5'\nassert solution('baaaa') == '4'\nassert solution('agaa') == '3'\nassert solution('aaaaa') == '0'\nassert solution('aaaaaa') == '0'\n"
    },
    {
        "number": 1788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 -2') == '0 2'\nassert solution('2 -2') == '0 2'\nassert solution('2 -2') == '0 2'\nassert solution('2 -2') == '0 2'\nassert solution('2 -2') == '0 2'\n"
    },
    {
        "number": 1789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 4 6\\n2 1 4\\n5 10 5 6 4 1\\n5 1 2 3 4 5\\n5 4 1 3 2 5\\n4 10 1 5 3\\n') == '1 4\\n'\nassert solution('5\\n1 1\\n10 10 9 8 7 100 5 4 3 99 1\\n5 1 2 3 4 5\\n5 4 1 3 2 5\\n4 10 1 5 3\\n') == '1 4\\n'\nassert solution('5\\n1 1\\n10 10 9 8 7 100 5 4 3 99 1\\n5 1 2 3 4 5\\n5 4 1 3 2 5\\n4 10 1 5 3\\n') == '1 4\\n'\nassert solution('5\\n1 1\\n10 10 9 8 7 100 5 4 3 99 1\\n5 1 2 3 4 5\\n5 4 1 3 2 5\\n4 10 1 5 3\\n') == '1 4\\n'\nassert solution('5\\n1 1\\n10 10 9 8 7 100 5 4 3 99 1\\n5 1 2 3 4 5\\n5 4 1 3 2 5\\n4 10 1 5 3\\n') == '1 4\\n'\n"
    },
    {
        "number": 1791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"ABRACADABRA\") == 3\nassert solution(\"ABBBCBDB\") == 3\nassert solution(\"AB\") == 1\nassert solution(\"ABCDEFGHIJK\") == 5\nassert solution(\"X|XXXXX|X|X|XXXXXX\") == 7\n"
    },
    {
        "number": 1792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 12\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom collections import defaultdict"
    },
    {
        "number": 1793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 1795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 5 1 3') == 'YES'\nassert solution('5\\n5 5 5 5 1') == 'NO'\nassert solution('5\\n5 5 5 5 1') == 'NO'\nassert solution('5\\n5 5 5 5 1') == 'NO'\nassert solution('5\\n5 5 5 5 1') == 'NO'\n"
    },
    {
        "number": 1796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n++X\n''') == '1'\nassert solution('''\nX++\n--X\n''') == '0'\nassert solution('''\n++X\nX++\n--X\n''') == '0'\nassert solution('''\n++X\nX++\n--X\n''') == '1'\nassert solution('''\n++X\nX++\n--X\n''') == '1'\n"
    },
    {
        "number": 1797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1') == '2'\nassert solution('3\\n1') == '3'\nassert solution('4\\n1') == '4'\nassert solution('5\\n1') == '5'\n"
    },
    {
        "number": 1798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n''') == '1\\n2 0\\n'\nassert solution('''8\n1 2 1 3 1 2 1 5\n''') == '4\\n1 2\\n2 4\\n3 0\\n5 0\\n'\nassert solution('''8\n1 2 1 3 1 2 1 5\n''') == '4\\n1 2\\n2 4\\n3 0\\n5 0\\n'\nassert solution('''8\n1 2 1 3 1 2 1 5\n''') == '4\\n1 2\\n2 4\\n3 0\\n5 0\\n'\nassert solution('''8\n1 2 1 3 1 2 1 5\n''') == '4\\n1 2\\n2 4\\n3 0\\n5 0\\n'\n"
    },
    {
        "number": 1799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 2 3\n2 2''') == '2 1 3'\nassert solution('''4 2\n1 2 4 3\n2 3\n1 2\n''') == '2 4 1 3'\nassert solution('''4 2\n1 2 4 3\n2 3\n1 2\n''') == '2 4 1 3'\nassert solution('''4 2\n1 2 4 3\n2 3\n1 2\n''') == '2 4 1 3'\nassert solution('''4 2\n1 2 4 3\n2 3\n1 2\n''') == '2 4 1 3'\n"
    },
    {
        "number": 1801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n2\\n7\\n') == '1'\nassert solution('2\\n1 2\\n2 3\\n11\\n') == '2'\nassert solution('1\\n1\\n2\\n7\\n') == '1'\nassert solution('2\\n1 2\\n2 3\\n11\\n') == '2'\nassert solution('1\\n1\\n2\\n7\\n') == '1'\n"
    },
    {
        "number": 1802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n-3 -4 -2 -3 3') == '2\\n-3 1'\nassert solution('5\\n2 -3 -1 -4 3') == '1\\n-4 2'\nassert solution('5\\n2 -3 -1 -4 3') == '1\\n-4 2'\nassert solution('5\\n2 -3 -1 -4 3') == '1\\n-4 2'\nassert solution('5\\n2 -3 -1 -4 3') == '1\\n-4 2'\n"
    },
    {
        "number": 1803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n10 10 10 10 10\n5\n2 5\n3 13\n2 12\n1 13\n4 6''') == '0\\n12\\n5\\n0\\n16'\nassert solution('''3\n2 4 1\n1\n2 2\n''') == '3\\n0\\n3\\n0\\n6'\nassert solution('''3\n2 4 1\n1\n2 2\n''') == '3\\n0\\n3\\n0\\n6'\nassert solution('''3\n2 4 1\n1\n2 2\n''') == '3\\n0\\n3\\n0\\n6'\nassert solution('''3\n2 4 1\n1\n2 2\n''') == '3\\n0\\n3\\n0\\n6'\n"
    },
    {
        "number": 1804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '6'\nassert solution('''10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '2'\nassert solution('''10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '2'\nassert solution('''10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '2'\nassert solution('''10 10\n2\n1 1\n3 3\n2\n1 10\n4 4\n''') == '2'\n"
    },
    {
        "number": 1805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2''') == '0'\nassert solution('''5\n5''') == '1'\nassert solution('''8\n8''') == '0'\nassert solution('''11\n11''') == '1'\nassert solution('''15\n15''') == '2'\n"
    },
    {
        "number": 1806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 3\n2 4\n1 3\n1 4\n3 4\n1 2\n1 3\n1 4\n1 5''') == '1\\n2\\n1\\n1\\n-1\\n-1'\nassert solution('''3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n1 2\n1 3\n1 4\n1 5''') == '1\\n1\\n-1\\n-1\\n-1'\nassert solution('''3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n1 2\n1 3\n1 4\n1 5''') == '1\\n1\\n-1\\n-1\\n-1'\nassert solution('''3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n1 2\n1 3\n1 4\n1 5''') == '1\\n1\\n-1\\n-1\\n-1'\nassert solution('''3 4\n1 3\n1 3\n4 5\n1 2\n1 3\n1 4\n1 5\n1 2\n1 3\n1 4\n1 5''') == '1\\n1\\n-1\\n-1\\n-1'\n"
    },
    {
        "number": 1807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3''') == '12'\nassert solution('''10 15''') == '39'\nassert solution('''1 2''') == '1'\nassert solution('''1 2 3''') == '1'\nassert solution('''1 2 3 4''') == '1'\n"
    },
    {
        "number": 1808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n1 2 3\n1 3 2 3 1''') == '12'\nassert solution('''3 5\n1 2 3\n1 3 2 3 1''') == '12'\nassert solution('''3 5\n1 2 3\n1 3 2 3 1''') == '12'\nassert solution('''3 5\n1 2 3\n1 3 2 3 1''') == '12'\nassert solution('''3 5\n1 2 3\n1 3 2 3 1''') == '12'\n"
    },
    {
        "number": 1810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3000''') == '1'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '1'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 1811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1''') == 'YES'\nassert solution('''5 2''') == 'YES'\nassert solution('''7 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''2 2''') == 'YES'\n"
    },
    {
        "number": 1812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n2''') == '3'\nassert solution('''3\n4857\n''') == '5'\nassert solution('''2\n3\n4857\n''') == '20'\nassert solution('''1\n1\n''') == '1'\nassert solution('''1\n2\n''') == '1'\n"
    },
    {
        "number": 1813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3''') == '7\\n5\\n4'\nassert solution('''5 6 1 1 3\n2\n5\n3\n1 1 5 6\n1 3 5 4\n3 3 5 3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1"
    },
    {
        "number": 1815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13''') == '13'\nassert solution('''5''') == '5'\nassert solution('''1''') == '1'\nassert solution('''7''') == '6'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 1816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 2') == '3'\nassert solution('5\\n1 3 5 4 2') == '10'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 1') == '0'\nassert solution('1\\n1 1 1') == '0'\n"
    },
    {
        "number": 1817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 3') == '2'\nassert solution('3\\n2 2 2') == '2'\nassert solution('3\\n2 2 1') == '2'\nassert solution('3\\n2 1 2') == '2'\nassert solution('3\\n2 1 1') == '2'\n"
    },
    {
        "number": 1818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 4\n''') == '3'\nassert solution('''3\n5 3 1\n''') == '1'\nassert solution('''3\n5 3 1\n''') == '1'\nassert solution('''3\n1 2 4\n''') == '3'\nassert solution('''3\n5 3 1\n''') == '1'\n"
    },
    {
        "number": 1819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '2 3 6'\n\nassert solution('''3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '-1'\n\nassert solution('''3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '1 2 3'\n\nassert solution('''3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '-1'\n\nassert solution('''3\n7\n4 6 11 11 15 18 20\n4\n10 10 10 11\n3\n1 1 1000000000\n''') == '-1'"
    },
    {
        "number": 1821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 4 5''') == '4'\nassert solution('''6\n62 22 60 61 48 49''') == '5'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '2'\nassert solution('''3\n1 2 3''') == '2'\n"
    },
    {
        "number": 1822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1\n2 0 4 0 6 0\n''') == '2\\n4\\n6\\n'\nassert solution('''6 2\n2 3 0 5 6 0\n''') == '1\\n3\\n4\\n6\\n'\nassert solution('''4 1\n0 0 0 0\n''') == '1\\n2\\n3\\n4\\n'\nassert solution('''6 2\n0 0 1 0 4 5\n''') == '1\\n3\\n4\\n6\\n'\nassert solution('''6 2\n0 0 1 0 4 5\n''') == '1\\n3\\n4\\n6\\n'\n"
    },
    {
        "number": 1823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n1 1 2 3 2 3 3 1 1 3''') == '3'\nassert solution('''7 3\n3 1 3 2 3 1 2''') == '1'\nassert solution('''7 3\n3 1 3 2 3 1 2''') == '1'\nassert solution('''7 3\n3 1 3 2 3 1 2''') == '1'\nassert solution('''7 3\n3 1 3 2 3 1 2''') == '1'\n"
    },
    {
        "number": 1824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 8 123 7\n123 7 5 1\n5 1 7''') == '8'\nassert solution('''6\n1 4 3 3 5 7\n3 7 5 4 3\n4 3 7 5\n''') == '1'\nassert solution('''7\n1 4 3 3 5 7\n3 7 5 4 3\n4 3 7 5\n''') == '3'\nassert solution('''8\n1 4 3 3 5 7\n3 7 5 4 3\n4 3 7 5\n''') == '1'\nassert solution('''9\n1 4 3 3 5 7\n3 7 5 4 3\n4 3 7 5\n''') == '3'\n"
    },
    {
        "number": 1825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''a 4 1 3 5 7\nab 2 1 5\nca 1 4\n''') == 'ababab'\nassert solution('''a 1 3\nab 1 3 5 7\nca 1 4\n''') == 'ababab'\nassert solution('''a 1 3\nab 1 3 5 7\nca 1 4\n''') == 'ababab'\nassert solution('''a 1 3\nab 1 3 5 7\nca 1 4\n''') == 'ababab'\nassert solution('''a 1 3\nab 1 3 5 7\nca 1 4\n''') == 'ababab'\n"
    },
    {
        "number": 1826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nRUURU''') == '3'\nassert solution('''17\nUUURRRRRUUURURUUU''') == '13'\nassert solution('''1\nU''') == '1'\nassert solution('''2\nUU''') == '2'\nassert solution('''3\nUUUU''') == '3'\n"
    },
    {
        "number": 1827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2 4 5 3''') == '1 5'\nassert solution('''3\n1 1 1 2 2 2''') == '1 2'\nassert solution('''3\n1 1 1 2 2 2''') == '1 2'\nassert solution('''3\n1 1 1 2 2 2''') == '1 2'\nassert solution('''3\n1 1 1 2 2 2''') == '1 2'\n"
    },
    {
        "number": 1828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 2\\n2 2\\n2 0\\n0 0\\n') == '1'\nassert solution('16\\n1 1\\n1 5\\n3 5\\n3 7\\n2 7\\n2 9\\n6 9\\n6 7\\n5 7\\n5 3\\n4 3\\n4 4\\n3 4\\n3 2\\n5 2\\n5 1\\n1 1\\n') == '6'\nassert solution('16\\n1 1\\n1 5\\n3 5\\n3 7\\n2 7\\n2 9\\n6 9\\n6 7\\n5 7\\n5 3\\n4 3\\n4 4\\n3 4\\n3 2\\n5 2\\n5 1\\n1 1\\n') == '6'\nassert solution('16\\n1 1\\n1 5\\n3 5\\n3 7\\n2 7\\n2 9\\n6 9\\n6 7\\n5 7\\n5 3\\n4 3\\n4 4\\n3 4\\n3 2\\n5 2\\n5 1\\n1 1\\n') == '6'\nassert solution('16\\n1 1\\n1 5\\n3 5\\n3 7\\n2 7\\n2 9\\n6 9\\n6 7\\n5 7\\n5 3\\n4 3\\n4 4\\n3 4\\n3 2\\n5 2\\n5 1\\n1 1\\n') == '6'\n"
    },
    {
        "number": 1829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\npolandball\nis\na\ncool\ncharacter\nnope''') == 'YES'\nassert solution('''2 2\nkremowka\nwadowicka\nkremowka\nwiedenska''') == 'YES'\nassert solution('''1 2\na\na\nb\n''') == 'NO'\nassert solution('''1 2\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\na\n"
    },
    {
        "number": 1830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 1\n3 1\n2 2''') == '4 2 0'\nassert solution('''5 2\n1 5\n5 1''') == '16 9'\nassert solution('''100000 1\n300 400\n''') == '9999800001'\nassert solution('''3 3\n1 1\n3 1\n2 2''') == '4 2 0'\nassert solution('''5 2\n1 5\n5 1''') == '16 9'\n"
    },
    {
        "number": 1831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 1\n4 1''') == 'no'\nassert solution('''6 5\n1 2\n2 3\n3 4\n4 5\n3 6''') == 'yes'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 1832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'aeren'\nassert solution('''4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'ari'\nassert solution('''4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'arousal'\nassert solution('''4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'around'\nassert solution('''4\n4\n1 2 4 2\n2\n5 3\n3\n1 3 1\n3\n0 0 0\n''') == 'ari'\n"
    },
    {
        "number": 1833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 2 1 22 14') == '13'\nassert solution('5 2 2 1 22 14') == '13'\nassert solution('5 2 2 1 22 14') == '13'\nassert solution('5 2 2 1 22 14') == '13'\n"
    },
    {
        "number": 1834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 2 1''') == '1 2 1 2'\nassert solution('''5\n1 3 2 2 5''') == '1 5 2 3 2'\nassert solution('''6\n1 2 2 1 2 1''') == '1 2 1 2 2 1'\nassert solution('''7\n1 2 2 1 2 1 2''') == '1 2 1 2 2 2 1'\nassert solution('''8\n1 2 2 1 2 1 2 2''') == '1 2 1 2 2 2 2 1'\n"
    },
    {
        "number": 1835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1\\n2\\n2\\n2'\nassert solution('''4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1\\n2\\n2\\n2'\nassert solution('''4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1\\n2\\n2\\n2'\nassert solution('''4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1\\n2\\n2\\n2'\nassert solution('''4\n1\n0\n3\n1110\n100110\n010101\n2\n11111\n000001\n2\n001\n11100111\n''') == '1\\n2\\n2\\n2'\n"
    },
    {
        "number": 1836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 6\n4 5\n3 5\n2 5\n1 2\n2 8\n6 7''') == '9'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '12'\nassert solution('''8 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422 423\n423 424\n424 425\n425 426\n426 427\n427 428\n428 429\n429 430\n430 431\n431 432\n432 433\n433 434\n434 435\n435 436\n436 437\n437 438\n438 439\n439 440\n440 441\n441 442\n442 443\n443 444"
    },
    {
        "number": 1837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1 3 4 2\n\nOutput\n3\n\nInput\n5\n0 1"
    },
    {
        "number": 1838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n\n''') == '''YES\nYES\nNO\n1\n2\n2\n2\n3\n3\n1\n1\n2\n2\n2\n'''\n\nassert solution('''8 6 5\nhi welcome hello ihateyou goaway dog cat rat\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n\n''') == '''YES\nYES\nNO\n1\n2\n2\n2\n3\n3\n1\n1\n2\n2\n2\n'''\n\nassert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n\n''') == '''YES\nYES\nNO\n1\n2\n2\n2\n3\n3\n1\n1\n2\n2\n2\n'''\n\nassert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n\n''') == '''YES\nYES\nNO\n1\n2\n2\n2\n3\n3\n1\n1\n2\n2\n2\n'''\n\nassert solution('''3 3 4\nhate love like\n1 love like\n2 love hate\n1 hate like\nlove like\nlove hate\nlike hate\nhate like\n\n1 hi welcome\n1 ihateyou goaway\n2 hello ihateyou\n2 hi goaway\n2 hi hello\n1 hi hello\ndog cat\ndog hi\nhi hello\nihateyou goaway\nwelcome ihateyou\n\n''') == '''YES\nYES\nNO\n1\n2\n2\n2\n3\n3\n1\n1\n2\n2\n2\n'''"
    },
    {
        "number": 1839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n1 2\n2 1\n2 2''') == '1 4'\nassert solution('''1\n1 1\n''') == '1'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 1840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4''') == '1 9 11 9 11'\nassert solution('''5 4\n1 3 5 2 4\n0 1\n4 2\n2 8\n9 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 1841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n\nassert solution('''10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n\nassert solution('''10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n\nassert solution('''10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'\n\nassert solution('''10 10\n1 2 3 4 1 2 3 4 100000 99999\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n6\\n6\\n6\\n6\\n5\\n4\\n3\\n2\\n1\\n'"
    },
    {
        "number": 1842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 30 200') == '-10.000000000000000'\nassert solution('1 30 200') == '-20.000000000000000'\nassert solution('1 30 200') == '-10.000000000000000'\nassert solution('1 30 200') == '-20.000000000000000'\nassert solution('1 30 200') == '-10.000000000000000'\n"
    },
    {
        "number": 1843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4\n1000000000''') == '-4'\nassert solution('''2\n4\n1000000000''') == '499999998352516354'\nassert solution('''2\n4\n1000000000''') == '-4'\nassert solution('''2\n4\n1000000000''') == '499999998352516354'\nassert solution('''2\n4\n1000000000''') == '-4'\n"
    },
    {
        "number": 1844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 6 15') == '3'\nassert solution('3\\n2 4 6') == '-1'\nassert solution('7\\n30 60 21 42 70 15 30') == '3'\nassert solution('7\\n30 60 21 42 70 15 30') == '-1'\nassert solution('7\\n30 60 21 42 70 15 30') == '-1'\n"
    },
    {
        "number": 1845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '14'\nassert solution('4\\n4 2 4 4') == '14'\nassert solution('5\\n2 4 2 3 7') == '18'\nassert solution('5\\n2 4 2 3 7') == '18'\nassert solution('5\\n2 4 2 3 7') == '18'\n"
    },
    {
        "number": 1846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 7 6 11''') == '4'\nassert solution('''3 4 3 10''') == '6'\nassert solution('''3 4 3 10''') == '-1'\nassert solution('''1 1 2 10''') == '4'\nassert solution('''1 1 3''') == '6'\n"
    },
    {
        "number": 1848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n20 30 10 50 40\\n') == '4'\nassert solution('4\\n200 100 100 200\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 1849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '180'\nassert solution('3') == '180 10'\nassert solution('4') == '180 10'\n"
    },
    {
        "number": 1850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n1 3 3 6 7 6 8 8 9''') == '4'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\nassert solution('''1\n2 3''') == '2'\nassert solution('''1\n2 3 4''') == '3'\n"
    },
    {
        "number": 1852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12''') == '1'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '0'\nassert solution('''4\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12''') == '3'\nassert solution('''5\n1 2\n1 3\n2 4\n2 5\n3 6\n3 13\n3 14\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12\n7 19\n7 20\n8 21\n8 22\n9 23\n9 24\n10 25\n10 26\n11 27\n11 28\n12 29\n12 30\n13 31\n13 32\n14 33\n14 34\n15 35\n15 36\n16 37\n16 38\n17 39\n17 40\n18 41\n18 42\n19 43\n19 44\n20 45\n20 46\n21 47\n21 48\n22 49\n22 50\n23 51\n23 52\n24 53\n24 54\n25 55\n25 56\n26 57\n26 58\n27 59\n27 60\n28 61\n28 62\n29 63\n29 64\n30 65\n30 66\n31 67\n31 68\n32 69\n32 70\n33 71\n33 72\n34 73\n34 74\n35 75\n35 76\n36 77\n36 78\n37 79\n37 80\n38 81\n38 82\n39 83\n39 84\n40 85\n40 86\n41 87\n41 88\n42 89\n42 90\n43 91\n43 92\n44 93\n44 94\n45 95\n45 96\n46 97\n46 98\n47 99\n47 100\n48 101\n48 102\n49 103\n49 104\n50 105\n50 106\n51 107\n51 108\n52 109\n52 110\n53 111\n53 112\n54 113\n54 114\n55 115\n55 116\n56 117\n56 118\n57 119\n57 120\n58 121\n58 122\n59 123\n59 124\n60 125\n60 126\n61 127\n61 128\n62 129\n62 130\n63 131\n63 132\n64 133\n64 134\n65 135\n65 136\n66 137\n66 138\n67 139\n67 140\n68 141\n68 142\n69 143\n69 144\n70 145\n70 146\n71 147\n71 148\n72 149\n72 150\n73 151\n73 152\n74 153\n74 154\n75 155\n75 156\n76 157\n76 158\n77 159\n77 160\n78 161\n78 162\n79 163\n79 164\n80 165\n80 166\n81 167\n81 168\n82 169\n82 170\n83 171\n83 172\n84 173\n84 174\n85 175\n85 176\n86 177\n86 178\n87 179\n87 180\n88 181\n88 182\n89 183\n89 184\n90 185\n90 186\n91 187\n91 188\n92 189\n92 190\n93 191\n93 192\n94 193\n94 194\n95 195\n95 196\n96 197\n96 198\n97 199\n97 200\n98 201\n98 202\n99 203\n99 204\n100 205\n100 206\n101 207\n101 208\n102 209\n102 210\n103 211\n103 212\n104 213\n104 214\n105 215\n105 216\n106 217\n106 218\n107 219\n107 220\n108 221\n108 222\n109 223\n109 224\n110 225\n110 226\n111 227\n111 228\n112 229\n112 230\n113 231\n113 232\n114 233\n114 234\n115 235\n115 236\n116 237\n116 238\n117 239\n117 240\n118 241\n118 242\n119 243\n119 244\n120 245\n120 246\n121 247\n121 248\n122 249\n122 250\n123 251\n123 252\n124 253\n124 254\n125 255\n125 256\n126 257\n126 258\n127 259\n127 260\n128 261\n128 262\n129 263\n129 264\n130 265\n130 266\n131 267\n131 268\n132 269\n132 270\n133 271\n133 272\n134 273\n134 274\n135 275\n135 276\n136 277\n136 278\n137 279\n137 280\n138 281\n138 282\n139 283\n139 284\n140 285\n140 286\n141 287\n141 288\n142 289\n142 290\n143 291\n143 292\n144 293\n144 294\n145 295\n145 296\n146 297\n146 298\n147 299\n147 300\n148 301\n148 302\n149 303\n149 304\n150 305\n150 306\n151 307\n151 308\n152 309\n152 310\n153 311\n153 312\n154 313\n154 314\n155 315\n155 316\n156 317\n156 318\n157 319\n157 320\n158 321\n158 322\n159 323\n159 324\n160 325\n160 326\n161 327\n161 328\n162 329\n162 330\n163 331\n163 332\n164 333\n164 334\n165 335\n165 336\n166 337\n166 338\n167 339\n167 340\n168 341\n168 342\n169 343\n169 344\n170 345\n170 346\n171 347\n171 348\n172 349\n172 350\n173 351\n173 352\n174 353\n174 354\n175 355\n175 356\n176 357\n176 358\n177 359\n177 360\n178 361\n178 362\n179 363\n179 364\n180 365\n180 366\n181 367\n181 368\n182 369\n182 370\n183 371\n183 372\n184 373\n184 374\n185 375\n185 376\n186 377\n186 378\n187 379\n187 380\n188 381\n188 382\n189 383\n189 384\n190 385\n190 386\n191 387\n191 388\n192 389\n192 390\n193 391\n193 392\n194 393\n194 394\n195 395\n195 396\n196 397\n196 398\n197 399\n197 400\n198 401\n198 402\n199 403\n199 404\n200 405\n200 406\n201 407\n201 408\n202 409\n202 410\n203 411\n203 412\n204 413\n204 414\n205 415\n205 416\n206 417\n206 418\n207 419\n207 420\n208 421\n208 422\n209 423\n209 424\n210 425\n210 426\n211 427\n211 428\n212 429\n212 430\n213 431\n213 432\n214 433\n214 434\n215 435\n215 436\n216 437\n216 438\n217 439\n217 440\n218 441\n218 442\n219 443"
    },
    {
        "number": 1853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0''') == 'NO'\nassert solution('''3 1''') == 'YES'\nassert solution('''4 3''') == 'YES'\nassert solution('''1 2''') == 'NO'\nassert solution('''1 3''') == 'YES'\n"
    },
    {
        "number": 1854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 2''') == 'YES 2'\nassert solution('''5\n1 4 1 1 1''') == 'YES 2'\nassert solution('''3\n1 1 1''') == 'NO'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\nassert solution('''3\n1 1 1''') == 'NO'\n"
    },
    {
        "number": 1855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\na\nb\nab\nd''') == '2'\nassert solution('''3\nab\nbc\nabc''') == '1'\nassert solution('''1\ncodeforces''') == '1'\nassert solution('''2\nab\nbc\nabc''') == '1'\nassert solution('''3\nab\nbc\nabc''') == '1'\n"
    },
    {
        "number": 1857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '120'\nassert solution('''10''') == '210'\nassert solution('''100''') == '5050'\nassert solution
    },
    {
        "number": 1858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'No'\nassert solution('3') == 'Yes'\nassert solution('2') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n"
    },
    {
        "number": 1859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 1860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\n"
    },
    {
        "number": 1861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nSET\nETS\nTSE''') == '1'\nassert solution('''3 4\nSETE\nETSE\nTSES''') == '0'\nassert solution('''5 4\nSETT\nTEST\nEEET\nESTE\nSTES''') == '2'\nassert solution('''3 4\nSETT\nTEST\nEEET\nESTE\nSTES''') == '2'\nassert solution('''3 4\nSETT\nTEST\nEEET\nESTE\nSTES''') == '2'\n"
    },
    {
        "number": 1862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1 1''') == '1'\nassert solution('''3\n2 1 1 3 2 3''') == '2'\nassert solution('''2\n2 1 1''') == '1'\nassert solution('''2\n2 1 1 3 2 3''') == '2'\nassert solution('''2\n2 1 1 3 2 3''') == '2'\n"
    },
    {
        "number": 1863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 999\n999 1''') == 'AG'\nassert solution('''3\n400 600\n400 600\n400 600''') == 'AGA'\nassert solution('''4\n1 999\n999 1\n999 1\n999 1''') == 'AGAG'\nassert solution('''5\n1 999\n999 1\n999 1\n999 1\n999 1''') == 'AGAGA'\nassert solution('''6\n1 999\n999 1\n999 1\n999 1\n999 1\n999 1''') == 'AGAGAGA'\n"
    },
    {
        "number": 1864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''5\n1 2 3 4 5''') == '-1'\nassert solution('''5\n1 2 3 4 5''') == '-1'\n"
    },
    {
        "number": 1865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 2 5 1 4\n''') == '''2\n0 3\n4 2\n'''\n\nassert solution('''6\n10 20 20 40 60 60\n''') == '''0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n'''\n\nassert solution('''2\n101 100\n''') == '''1\n0 1\n'''\n\nassert solution('''3\n1 2 3\n2 3 4\n3 4 5\n''') == '''0\n0 1\n1 2\n2 3\n'''\n\nassert solution('''4\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '''0\n0 1\n1 2\n2 3\n3 4\n'''"
    },
    {
        "number": 1866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '1\\n1 2\\n'\nassert solution('''4''') == '2\\n1 2\\n3 4\\n'\nassert solution('''5''') == '2\\n1 2\\n3 4\\n5 6\\n'\nassert solution('''6''') == '2\\n1 2\\n3 4\\n5 6\\n7 8\\n'\nassert solution('''7''') == '2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n'\n"
    },
    {
        "number": 1867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 2 1''') == '1 5'\nassert solution('''5\n1 2 2 3 1''') == '2 3'\nassert solution('''6\n1 2 2 1 1 2''') == '1 5'\nassert solution('''6\n1 2 2 3 1 1 2''') == '2 3'\nassert solution('''6\n1 2 2 3 1 1 2''') == '2 3'\n"
    },
    {
        "number": 1868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 1\\n') == '11'\nassert solution('3 3\\n1 1 1\\n') == '10'\nassert solution('4 2\\n5 1 2 1\\n') == '10'\nassert solution('3 3\\n1 1 1\\n') == '6'\nassert solution('4 2\\n1 1 1 1\\n') == '11'\n"
    },
    {
        "number": 1872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 10') == '108.395919545675'\nassert solution('1 10') == '0.0'\nassert solution('1 1') == '0.0'\nassert solution('1 1 1') == '0.0'\nassert solution('1 1 1 1') == '0.0'\n"
    },
    {
        "number": 1873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n2 1 3 1\n''') == '5'\nassert solution('''7 4\n4 2 3 1 2 4 3\n''') == '18'\nassert solution('''7 4\n4 2 3 1 2 4 3\n''') == '18'\nassert solution('''7 4\n4 2 3 1 2 4 3\n''') == '18'\nassert solution('''7 4\n4 2 3 1 2 4 3\n''') == '18'\n"
    },
    {
        "number": 1874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 5 3') == '38.546168065709'\nassert solution('2 3 4') == '25.0'\nassert solution('1 1 1') == '1.0'\nassert solution('1 1 1 1') == '1.0'\nassert solution('1 1 1 1 1') == '1.0'\n"
    },
    {
        "number": 1875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n0 4\n4 0\n4 4\n2 3''') == '16.000000'\nassert solution('''0 0\n0 4\n4 0\n4 4\n2 3''') == '16.000000'\nassert solution('''0 0\n0 4\n4 0\n4 4\n2 3\n-1 -1\n-1 -1\n-1 -1\n-1 -1''') == '16.000000'\nassert solution('''0 0\n0 4\n4 0\n4 4\n2 3\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1"
    },
    {
        "number": 1876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 1\n2 3 1\n3 4 1\n''') == '252'\nassert solution('''4 6\n1 2 0\n1 3 0\n1 4 0\n''') == '0'\nassert solution('''3 5\n1 2 1\n2 3 0\n''') == '210'\nassert solution('''3 5\n1 2 1\n2 3 0\n''') == '0'\nassert solution('''3 5\n1 2 1\n2 3 0\n''') == '0'\n"
    },
    {
        "number": 1877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('U') == '0'\nassert solution('RURUUR') == '1'\nassert solution('URRRUUU') == '2'\nassert solution('RURRRUUU') == '3'\n"
    },
    {
        "number": 1878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '4'\nassert solution('3\\n3\\n3\\n3') == '9'\nassert solution('4\\n4\\n4\\n4') == '16'\nassert solution('5\\n5\\n5\\n5') == '25'\n"
    },
    {
        "number": 1879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12345') == '71232'\nassert solution('1234567') == '712345'\nassert solution('12345678') == '71234567'\nassert solution('123456789') == '712345678'\nassert solution('12345678901') == '712345678901'\n"
    },
    {
        "number": 1881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, k = map(int, stdin.split())\np = list(map(int, stdin.split()))"
    },
    {
        "number": 1882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 300\n3 100\n4 150\n4 80\n2 90\n2 300\n''') == '2'\nassert solution('''2 100\n1 787\n2 788\n''') == '0'\nassert solution('''2 100\n2 42\n2 58\n''') == '2'\nassert solution('''2 100\n2 42\n2 58\n''') == '2'\nassert solution('''2 100\n2 42\n2 58\n''') == '2'\n"
    },
    {
        "number": 1883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0 0 0 1\n0 1 2 3 4\n''') == '5\\n1 2 3 4 5'\nassert solution('''5\n0 0 1 0 1\n0 1 2 2 4\n''') == '1\\n1'\nassert solution('''5\n1 0 0 0 1\n0 1 2 2 4\n''') == '1\\n4 5'\nassert solution('''5\n1 0 0 0 1\n0 1 2 2 4\n''') == '1\\n1'\nassert solution('''5\n1 0 0 0 1\n0 1 2 2 4\n''') == '1\\n1'\n"
    },
    {
        "number": 1884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 8 16\n3 5 2 9 8 7\n''') == 'Yes'\nassert solution('''4 20 32\n21 11 11 12\n''') == 'No'\nassert solution('''5 12 20\n7 8 4 11 9\n''') == 'No'\nassert solution('''5 12 20\n7 8 4 11 9\n''') == 'No'\nassert solution('''5 12 20\n7 8 4 11 9\n''') == 'No'\n"
    },
    {
        "number": 1885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7''') == '29'\nassert solution('''7''') == '29'\nassert solution('''7''') == '29'\nassert solution('''7''') == '29'\nassert solution('''7''') == '29'\n"
    },
    {
        "number": 1886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ApPLe') == 'ApPLe'\nassert solution('konjac') == 'Konjac'\nassert solution('Konjac') == 'Konjac'\nassert solution('Konjac') == 'Konjac'\nassert solution('Konjac') == 'Konjac'\n"
    },
    {
        "number": 1887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 1888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 10\\n2 3 1\\n2 4 1') == '10'\nassert solution('3 0\\n') == '0'\nassert solution('4 3\\n1 2 1\\n2 3 1\\n3 1 1\\n') == '0'\nassert solution('5 3\\n1 2 10\\n2 3 1\\n2 4 1\\n3 1 1\\n') == '10'\nassert solution('5 3\\n1 2 10\\n2 3 1\\n2 4 1\\n3 1 1\\n4 1 1\\n') == '10'\n"
    },
    {
        "number": 1889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1''') == '3'\nassert solution('''5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1''') == '4'\nassert solution('''5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1''') == '3'\nassert solution('''5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1''') == '4'\nassert solution('''5 4 5\n0 1 1 0\n1 0 0 1\n0 1 1 0\n1 0 0 1\n0 0 0 0\n1 1''') == '3'\n"
    },
    {
        "number": 1890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1256') == '4'\nassert solution('13990') == '528'\nassert solution('555') == '63'\nassert solution('123456789') == '0'\nassert solution
    },
    {
        "number": 1891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 1 2') == '6'\nassert solution('3 2 1 2') == '8'\nassert solution('3 2 1 2') == '8'\nassert solution('3 2 1 2') == '8'\nassert solution('3 2 1 2') == '8'\n"
    },
    {
        "number": 1892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\nf\nf\ns\n''') == '2'\nassert solution('''\n4\nf\ns\nf\n''') == '1'\nassert solution('''\n4\nf\nf\nf\ns\n''') == '0'\nassert solution('''\n4\nf\nf\nf\nf\n''') == '0'\nassert solution('''\n4\nf\nf\nf\nf\nf\n''') == '0'\n"
    },
    {
        "number": 1893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 1000000''') == '1011.060722383550382782399454922040'\n'''\n1000 1000000\n'''\n\nassert solution('''1000 1000000''') == '1011.060722383550382782399454922040'\n'''\n1000 1000000\n'''\n\nassert solution('''1000 1000000''') == '1011.060722383550382782399454922040'\n'''\n1000 1000000\n'''\n\nassert solution('''1000 1000000''') == '1011.060722383550382782399454922040'\n'''\n1000 1000000\n'''\n\nassert solution('''1000 1000000''') == '1011.060722383550382782399454922040'\n'''\n1000 1000000\n'''"
    },
    {
        "number": 1894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n..+.#\n"
    },
    {
        "number": 1895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1\n2 motarack\n2 mike\n1\n2 light''') == '1'\nassert solution('''4 3\n1\n2 alice\n2 bob\n2 tanyaromanova''') == '1'\nassert solution('''4 3\n1\n2 alice\n2 bob\n2 tanyaromanova''') == '1'\nassert solution('''4 3\n1\n2 alice\n2 bob\n2 tanyaromanova''') == '1'\nassert solution('''4 3\n1\n2 alice\n2 bob\n2 tanyaromanova''') == '1'\n"
    },
    {
        "number": 1896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '19'\nassert solution('''3''') == '37'\nassert solution('''4''') == '55'\nassert solution('''5''') == '70'\nassert solution('''6''') == '85'\n"
    },
    {
        "number": 1897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('IEAIAIO') == '28.0000000'\nassert solution('BYOB') == '5.8333333'\nassert solution('YISVOWEL') == '17.0500000'\nassert solution('YISVOWEL') == '17.0500000'\nassert solution('YISVOWEL') == '17.0500000'\n"
    },
    {
        "number": 1898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'I hate it'\nassert solution('2') == 'I hate that I love it'\nassert solution('3') == 'I hate that I love that I hate it'\nassert solution('4') == 'I hate that I love that I hate that I love it'\nassert solution('5') == 'I hate that I love that I hate that I love it'\n"
    },
    {
        "number": 1899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 1900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 1902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''snow affects sports such as skiing, snowboarding, and snowmachine travel.\nsnowboarding is a recreational activity and olympic and paralympic sport.\n''') == '141'\nassert solution('''thun-thun-thunder, thunder, thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, thunder\n''') == '183'\nassert solution('''co-co-co, codeforces?!''') == '25'\nassert solution('''thun-thun-thunder, thunder, thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, thunder\n''') == '183'\nassert solution('''thun-thun-thunder, thunder, thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, feel the thunder\nlightning then the thunder\nthunder, thunder\n''') == '183'\n"
    },
    {
        "number": 1903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 8\n4 2\n5 5\n4 2\n3 2''') == '8'\nassert solution('''4 3 12\n3 4\n2 4\n3 5\n3 4\n3 5\n5 2\n3 4\n''') == '11'\nassert solution('''2 2 2\n5 3\n6 3\n4 2\n8 1\n''') == '0'\nassert solution('''2 2 2\n5 3\n6 3\n4 2\n8 1\n''') == '0'\nassert solution('''2 2 2\n5 3\n6 3\n4 2\n8 1\n''') == '0'\n"
    },
    {
        "number": 1904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hhardh') == '5'\nassert solution('hhzarwde') == '4'\nassert solution('hhaarr') == '0'\nassert solution('hhzazrzd') == '4'\nassert solution('hhaaaaard') == '0'\n"
    },
    {
        "number": 1905,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 6\n2 1\n2 2\n3 1 1 1\n3 2 2 2\n3 1 2 8\n3 2 1 8''') == '8 2\\n1 8\\n'\nassert solution('''3 3 2\n1 2\n3 2 2 5\n3 1 2 8\n3 2 1 8''') == '0 0 0\\n0 0 5\\n0 0 0\\n'\nassert solution('''3 3 2\n1 2\n3 2 2 5\n3 1 2 8\n3 2 1 8''') == '0 0 0\\n0 0 5\\n0 0 0\\n'\nassert solution('''3 3 2\n1 2\n3 2 2 5\n3 1 2 8\n3 2 1 8''') == '0 0 0\\n0 0 5\\n0 0 0\\n'\nassert solution('''3 3 2\n1 2\n3 2 2 5\n3 1 2 8\n3 2 1 8''') == '0 0 0\\n0 0 5\\n0 0 0\\n'\n"
    },
    {
        "number": 1906,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12''') == '2'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 1907,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 6\n0 4 1\n2 -1 3\n1 -2 1\n4 -1 1''') == '138.23007676'\nassert solution('''8\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8''') == '289.02652413'\nassert solution('''8\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n0 0 9''') == '289.02652413'\nassert solution('''8\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n0 0 9\n0 0 10''') == '289.02652413'\nassert solution('''8\n0 0 1\n0 0 2\n0 0 3\n0 0 4\n0 0 5\n0 0 6\n0 0 7\n0 0 8\n0 0 9\n0 0 10\n0 0 11''') == '289.02652413'\n"
    },
    {
        "number": 1908,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 1\n1 2\n2 3\n1 3\n''') == 'ALIVE'\nassert solution('''3 2\n1 1 0\n1 2\n1 3\n''') == 'ALIVE'\nassert solution('''4 4\n1 2 0 1\n1 3\n1 2\n2 3\n2 4\n''') == 'ALIVE'\nassert solution('''5 5\n1 1 1 2 1\n3 4\n1 2\n2 3\n4 5\n4 5\n''') == 'ALIVE'\nassert solution('''4 10\n2 4 1 4\n3 2\n4 2\n4 1\n3 1\n4 1\n1 3\n3 2\n2 1\n3 1\n2 4\n''') == 'DEAD'\n"
    },
    {
        "number": 1909,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1910,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '24'\nassert solution('''4''') == '120'\nassert solution('''5''') == '840'\nassert solution('''6''') == '1260'\nassert solution('''7''') == '1680'\n"
    },
    {
        "number": 1911,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1912,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1913,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 10 1''') == '50'\nassert solution('''4\n1 1 10 11''') == '110'\nassert solution('''5\n0 3 1 100 1''') == '0'\nassert solution('''6\n0 0 0 0 0 0''') == '0'\nassert solution('''7\n0 0 0 0 0 0 0''') == '0'\n"
    },
    {
        "number": 1914,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aaabacaa', 2, 'a', 'aa') == '5'\nassert solution('aaabacaa', 4, 'a', 'a', 'a', 'b') == '33'\nassert solution('aaabacaa', 4, 'a', 'a', 'a', 'b') == '33'\nassert solution('aaabacaa', 4, 'a', 'a', 'a', 'b') == '33'\nassert solution('aaabacaa', 4, 'a', 'a', 'a', 'b') == '33'\n"
    },
    {
        "number": 1915,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('5') == '70'\nassert solution('1\\n5') == '70'\nassert solution('1\\n5\\n1') == '1'\n"
    },
    {
        "number": 1916,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 1917,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 32\\n1 2 3 4 5 5 5 5 5 5\\n') == '1 2 3 3 3 4 4 4 4 4'\nassert solution('5 8\\n4 4 8 2 1\\n') == '2 2 2 1 1'\nassert solution('5 8\\n4 4 8 2 1\\n') == '2 2 2 1 1'\nassert solution('5 8\\n4 4 8 2 1\\n') == '2 2 2 1 1'\nassert solution('5 8\\n4 4 8 2 1\\n') == '2 2 2 1 1'\n"
    },
    {
        "number": 1918,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1919,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 1920,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nM 151 307\nF 343 352\nF 117 145\nM 24 128''') == '2'\nassert solution('''6\nM 128 130\nF 128 131\nF 131 140\nF 131 141\nM 131 200\nM 140 200''') == '4'\nassert solution('''1\nM 128 130''') == '1'\nassert solution('''2\nM 128 130\nF 128 131''') == '2'\nassert solution('''3\nM 128 130\nF 128 131\nF 131 140''') == '2'\n"
    },
    {
        "number": 1921,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1922,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 1923,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1924,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1925,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1926,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 5 4 3 2''') == '3 2 1 0'\nassert solution('''6\n2 2 2 2 2 2''') == '0 0 0 0 0'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 1''') == '0'\nassert solution('''3\n1 1 1''') == '0'\n"
    },
    {
        "number": 1927,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n3 5 1 4\n''') == '1 3\\n2 5\\n1 4\\n1 5\\n1 5'\nassert solution('''4 3\n1 2 4\n''') == '1 3\\n1 2\\n3 4\\n1 4'\nassert solution('''4 3\n1 2 4\n''') == '1 3\\n1 2\\n3 4\\n1 4'\nassert solution('''4 3\n1 2 4\n''') == '1 3\\n1 2\\n3 4\\n1 4'\nassert solution('''4 3\n1 2 4\n''') == '1 3\\n1 2\\n3 4\\n1 4'\n"
    },
    {
        "number": 1928,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 4''') == '8'\nassert solution('''1 1 1''') == '0'\nassert solution('''2 2 2''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''1 1 1''') == '0'\n"
    },
    {
        "number": 1929,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1930,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 -1 -1') == '499122179'\nassert solution('2\\n1 2') == '0'\nassert solution('2\\n-1 -1') == '499122177'\nassert solution('2\\n-1 -1') == '499122177'\nassert solution('2\\n1 2') == '0'\n"
    },
    {
        "number": 1931,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n14\n15\n24\n1\n''') == '1'\nassert solution('''3\n14\n15\n24\n1\n''') == '2'\nassert solution('''3\n14\n15\n24\n1\n''') == '1'\nassert solution('''3\n14\n15\n24\n1\n''') == '3'\nassert solution('''3\n14\n15\n24\n1\n''') == '0'\n"
    },
    {
        "number": 1932,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\nIcosahedron\\nCube\\nTetrahedron\\nDodecahedron') == '42'\nassert solution('3\\nDodecahedron\\nOctahedron\\nOctahedron') == '28'\nassert solution('3\\nDodecahedron\\nOctahedron\\nOctahedron\\nOctahedron') == '28'\nassert solution('3\\nDodecahedron\\nOctahedron\\nOctahedron\\nOctahedron\\nOctahedron') == '28'\nassert solution('3\\nDodecahedron\\nOctahedron\\nOctahedron\\nOctahedron\\nOctahedron\\nOctahedron') == '28'\n"
    },
    {
        "number": 1933,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.split()]\na = [[int(x) for x in stdin.split()] for _ in range(n)]"
    },
    {
        "number": 1934,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 1 2 3 2\n1 5\n2 4\n3 5''') == '1\\n-1\\n2\\n2\\n3'\nassert solution('''6 5\n1 2 1 3 2 3\n4 6\n1 3\n2 5\n2 4\n1 6\n''') == '2\\n2\\n3\\n-1\\n2\\n3'\nassert solution('''6 5\n1 2 1 3 2 3\n4 6\n1 3\n2 5\n2 4\n1 6\n''') == '2\\n2\\n3\\n-1\\n2\\n3'\nassert solution('''6 5\n1 2 1 3 2 3\n4 6\n1 3\n2 5\n2 4\n1 6\n''') == '2\\n2\\n3\\n-1\\n2\\n3'\nassert solution('''6 5\n1 2 1 3 2 3\n4 6\n1 3\n2 5\n2 4\n1 6\n''') == '2\\n2\\n3\\n-1\\n2\\n3'\n"
    },
    {
        "number": 1935,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''15 5\n0 3 7 14 15\n11 11\n''') == '45'\nassert solution('''13 4\n0 3 7 13\n9 9\n''') == '-1'\nassert solution('''15 5\n0 3 7 14 15\n11 11\n''') == '45'\nassert solution('''15 5\n0 3 7 14 15\n11 11\n''') == '-1'\nassert solution('''15 5\n0 3 7 14 15\n11 11\n''') == '45'\n"
    },
    {
        "number": 1936,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1937,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 6''') == '2 3 3 3'\nassert solution('''6\n2 1 2''') == '0 0 1 1 1 2'\nassert solution('''6\n2 1 2''') == '0 0 1 1 1 2'\nassert solution('''6\n2 1 2''') == '0 0 1 1 1 2'\nassert solution('''6\n2 1 2''') == '0 0 1 1 1 2'\n"
    },
    {
        "number": 1938,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n3 4') == '5'\nassert solution('3 1\\n1 3\\n1 3\\n1 3\\n') == '3'\nassert solution('3 2\\n1 3\\n1 3\\n1 3\\n') == '6'\nassert solution('3 3\\n1 3\\n1 3\\n1 3\\n') == '3'\nassert solution('3 1\\n1 2\\n2 3\\n3 4\\n') == '5'\n"
    },
    {
        "number": 1939,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4''') == '''1 3\n3 1'''\nassert solution('''4 7''') == '''2 1 0 4\n4 0 2 1\n1 3 3 0\n0 3 2 2'''\nassert solution('''4 7''') == '''2 1 0 4\n4 0 2 1\n1 3 3 0\n0 3 2 2'''\nassert solution('''4 7''') == '''2 1 0 4\n4 0 2 1\n1 3 3 0\n0 3 2 2'''\nassert solution('''4 7''') == '''2 1 0 4\n4 0 2 1\n1 3 3 0\n0 3 2 2'''\n"
    },
    {
        "number": 1940,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1941,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 4\n1 5 3\n3 3 10\n7 10 2\n6 4 8''') == '4'\nassert solution('''1 5 2\n1 5 10\n2 7 4\n''') == '1'\nassert solution('''1 5 2\n1 5 10\n2 7 4\n''') == '2'\nassert solution('''1 5 2\n1 5 10\n2 7 4\n''') == '-1'\nassert solution('''1 5 2\n1 5 10\n2 7 4\n''') == '8'\n"
    },
    {
        "number": 1942,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 3''') == '1 2 1'\nassert solution('''3 3 6''') == '1 3 2 3'\nassert solution('''99995 9998900031 9998900031''') == '1 9998900031 9998900031'\nassert solution('''1 1 1''') == '1'\nassert solution('''1 1 1 1''') == '1'\n"
    },
    {
        "number": 1943,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 40 100 100\n60 0 40 40\n0 60 0 45\n0 60 55 0\n''') == '1.75'\nassert solution('''0 0 100 0 100 0 0 0\n100 0 100 0 0 0 0 100 100\n0 0 0 100 100 0 0 0\n100 100 0 0 0 0 100 100\n0 100 0 100 0 0 100 0\n100 100 100 100 100 0 0 0\n100 0 100 0 0 100 0 0\n100 0 100 0 100 100 100 0\n100 100 100 100 100 100 100 100\n100 0 100 0 0 100 0 0\n100 0 100 0 100 100 100 100\n''') == '12'\nassert solution('''0 21 41 26\n79 0 97 33\n59 3 0 91\n74 67 9 0\n''') == '3.141592'\nassert solution('''0 0 100 0 100 0 0 0\n100 0 100 0 0 0 0 100 100\n0 0 0 100 100 0 0 0\n100 100 0 0 0 0 100 100\n0 100 0 100 0 0 100 0\n100 100 100 100 100 0 0 0\n100 0 100 0 0 100 0 0\n100 0 100 0 100 100 100 0\n100 100 100 100 100 100 100 100\n100 0 100 0 0 100 0 0\n100 0 100 0 100 100 100 100\n''') == '12'\nassert solution('''0 21 41 26\n79 0 97 33\n59 3 0 91\n74 67 9 0\n''') == '3.141592'\n"
    },
    {
        "number": 1944,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 1''') == 'Happy Alex'\nassert solution('''1 2\n2 1''') == 'Poor Alex'\nassert solution('''1 2\n2 1''') == 'Happy Alex'\nassert solution('''1 2\n2 1''') == 'Poor Alex'\nassert solution('''1 2\n2 1''') == 'Happy Alex'\n"
    },
    {
        "number": 1945,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''Misha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3\\nPetya Ivanov\\nMisha MikeMirzayanov\\nVasya VasyaPetrov123'\n\nassert solution('''Misha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3\\nPetya Ivanov\\nMisha MikeMirzayanov\\nVasya VasyaPetrov123'\n\nassert solution('''Misha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3\\nPetya Ivanov\\nMisha MikeMirzayanov\\nVasya VasyaPetrov123'\n\nassert solution('''Misha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3\\nPetya Ivanov\\nMisha MikeMirzayanov\\nVasya VasyaPetrov123'\n\nassert solution('''Misha ILoveCodeforces\nVasya Petrov\nPetrov VasyaPetrov123\nILoveCodeforces MikeMirzayanov\nPetya Ivanov\n''') == '3\\nPetya Ivanov\\nMisha MikeMirzayanov\\nVasya VasyaPetrov123'"
    },
    {
        "number": 1946,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n7 2\n3 10\n4\n1 4\n2 4\n3 4\n4 4''') == '24'\nassert solution('''1\n1000000000 239\n3\n14 15\n92 65\n35 89''') == '408'\nassert solution('''1\n1000000000 239\n3\n14 15\n92 65\n35 89\n1 4\n2 4\n3 4\n4 4''') == '24'\nassert solution('''1\n1000000000 239\n3\n14 15\n92 65\n35 89\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n3 4\n4 4\n1 4\n2 4\n"
    },
    {
        "number": 1947,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '1\\n2\\n2\\n1'\nassert solution('''4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2\\n2\\n2\\n1'\nassert solution('''4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2\\n2\\n2\\n1'\nassert solution('''4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2\\n2\\n2\\n1'\nassert solution('''4 7 3\n1 2 3 4\n0\n1 2 3\n0\n1 1 3\n0\n1 3 1\n0\n''') == '2\\n2\\n2\\n1'\n"
    },
    {
        "number": 1948,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '4'\nassert solution('5 2\\n1 2\\n2 3\\n3 4\\n2 5\\n') == '6'\nassert solution('5 2\\n1 2\\n2 3\\n3 4\\n2 5\\n1 3\\n') == '6'\nassert solution('5 2\\n1 2\\n2 3\\n3 4\\n2 5\\n1 3\\n2 4\\n') == '6'\nassert solution('5 2\\n1 2\\n2 3\\n3 4\\n2 5\\n1 3\\n2 4\\n3 5\\n') == '6'\n"
    },
    {
        "number": 1949,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 5\\n1 2 3\\n') == '1\\n1\\n1\\n0\\n0'\nassert solution('4 2\\n10 3 5 3\\n') == '3\\n2'\nassert solution('4 2\\n10 3 5 3\\n') == '3\\n2'\nassert solution('4 2\\n10 3 5 3\\n') == '3\\n2'\nassert solution('4 2\\n10 3 5 3\\n') == '3\\n2'\n"
    },
    {
        "number": 1950,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '6'\nassert solution('''4\n2 3 4 5\n''') == '19'\nassert solution('''5\n1 2 3 4 5\n''') == '19'\nassert solution('''6\n1 2 3 4 5 6\n''') == '19'\nassert solution('''7\n1 2 3 4 5 6 7\n''') == '19'\n"
    },
    {
        "number": 1951,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n+\n+\n- 2\n+\n- 3\n+\n- 1\n- 4''') == 'YES'\nassert solution('''1\n- 1\n+\n''') == 'NO'\nassert solution('''3\n+\n+\n+\n- 2\n- 1\n- 3\n''') == 'NO'\nassert solution('''3\n+\n+\n+\n- 2\n- 1\n- 3\n''') == 'YES'\nassert solution('''3\n+\n+\n+\n- 2\n- 1\n- 3\n''') == 'YES'\n"
    },
    {
        "number": 1952,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 2 3\n4 1 1\n''') == '3'\nassert solution('''6 10\n5 8 1 10 8 7\n6 6 4 4 3 2 2 2 1 1\n''') == '2'\nassert solution('''5 1\n1 1 1 1 1\n5\n''') == '1'\nassert solution('''5 1\n1 1 1 1 1\n1\n''') == '5'\nassert solution('''5 1\n1 1 1 1 1\n1\n''') == '5'\n"
    },
    {
        "number": 1953,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n3') == '3'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n2\\n3\\n4\\n5') == '5'\n"
    },
    {
        "number": 1954,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 1955,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2\n0 1 0 2 1 0 2\n2 1''') == '5'\nassert solution('''10 3\n0 0 1 2 3 0 2 0 1 2\n1 1 4''') == '9'\nassert solution('''5 1\n1 1 1 1 1\n5''') == '-1'\nassert solution('''7 1\n1 1 1 1 1\n7''') == '-1'\nassert solution('''7 1\n1 1 1 1 1\n7''') == '-1'\n"
    },
    {
        "number": 1956,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 8\n1 4\n3 10\n''') == '1 1'\nassert solution('''4\n1 2\n2 3\n3 4\n4 5\n''') == '0 0'\nassert solution('''1\n1 1\n''') == '0 1'\nassert solution('''2\n1 9\n4 5\n''') == '0 0'\nassert solution('''6\n216986951114298167 235031205335543871\n148302405431848579 455670351549314242\n506251128322958430 575521452907339082\n1 768614336404564650\n189336074809158272 622104412002885672\n588320087414024192 662540324268197150\n''') == '1 0'\n"
    },
    {
        "number": 1957,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 10 3\\n2 2 2 2\\n') == '1'\nassert solution('4 80 20\\n3 2 1 4\\n') == '0'\nassert solution('5 10 10\\n1000 1 1 1 1\\n') == '4'\nassert solution('5 10 10\\n1000 1 1 1 1\\n') == '4'\nassert solution('5 10 10\\n1000 1 1 1 1\\n') == '4'\n"
    },
    {
        "number": 1958,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 10\nhalf\nhalfplus''') == '15'\nassert solution('''3 10\nhalfplus\nhalfplus\nhalfplus''') == '55'\nassert solution('''2 10\nhalf\nhalfplus\nhalfplus\nhalfplus''') == '55'\nassert solution('''2 10\nhalf\nhalfplus\nhalfplus\nhalfplus\nhalfplus''') == '55'\nassert solution('''2 10\nhalf\nhalfplus\nhalfplus\nhalfplus\nhalfplus\nhalfplus''') == '55'\n"
    },
    {
        "number": 1959,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n5 6 7 9 4 5''') == '1'\nassert solution('''8 6\n7 7 7 7 8 8 8 8''') == '6'\nassert solution('''4 1\n4 2 1 10''') == '-1'\nassert solution('''4 1\n4 2 1 10''') == '-1'\nassert solution('''4 1\n4 2 1 10''') == '-1'\n"
    },
    {
        "number": 1960,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n4''') == '3'\nassert solution('''4\n1 3 2 5''') == '3223'\nassert solution('''4\n1 5 2 3''') == '3133'\nassert solution('''4\n1 5 2 3''') == '3133'\nassert solution('''4\n1 3 2 5''') == '3223'\n"
    },
    {
        "number": 1961,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n###\\n#.#\\n###\\n') == 'YES'\nassert solution('3 3\\n###\\n###\\n###\\n') == 'NO'\nassert solution('3 3\\n###\\n###\\n###\\n') == 'YES'\nassert solution('3 3\\n###\\n###\\n###\\n') == 'NO'\nassert solution('3 3\\n###\\n###\\n###\\n') == 'YES'\n"
    },
    {
        "number": 1962,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 1\n2 2 1 2 3 2 2 3\n''') == '7'\nassert solution('''2 1 0\n10 10\n''') == '20'\nassert solution('''3 2 1\n1 2 3 4 5 6\n''') == '0'\nassert solution('''1 2 1\n5 2\n''') == '2'\nassert solution('''3 2 1\n1 2 3 4 5 6\n''') == '0'\n"
    },
    {
        "number": 1963,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 6 9 3 6''') == '1 3'\nassert solution('''5\n1 3 5 7 9''') == '1 4'\nassert solution('''5\n2 3 5 7 11''') == '5 0'\nassert solution('''5\n2 3 5 7 11''') == '5 0'\nassert solution('''5\n1 3 5 7 9''') == '1 4'\n"
    },
    {
        "number": 1964,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1\n''') == '20'\nassert solution('''4\n1 4 3 2\n100\n1 2 2 3\n1 9 1\n7 8\n''') == '100'\nassert solution('''1\n1\n1\n''') == '20'\nassert solution('''4\n1 4 3 2\n100\n1 2 2 3\n1 9 1\n7 8\n''') == '100'\nassert solution('''1\n1\n1\n''') == '20'\n"
    },
    {
        "number": 1965,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 69\n68 70\n6 4\n4 4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20''') == '1'\nassert solution('''2 69\n68 70\n6 4\n4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20''') == '0'\nassert solution('''2 69\n68 70\n6 4\n4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20''') == '2'\nassert solution('''2 69\n68 70\n6 4\n4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20''') == '1'\nassert solution('''2 69\n68 70\n6 4\n4 4 4 4 4\n9 38\n-21 83 50 -59 -77 15 -71 -78 20''') == '0'\n"
    },
    {
        "number": 1966,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n0\n\n0\n\n1\n\n0\n''') == '2'\nassert solution('''3\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n\n''') == '3'\nassert solution('''4\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n\n''') == '4'\nassert solution('''5\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n\n''') == '5'\nassert solution('''6\n101\n010\n101\n\n101\n000\n101\n\n010\n101\n011\n\n010\n101\n010\n\n''') == '6'\n"
    },
    {
        "number": 1967,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n.*.\n.*.\n''') == '''....\n....\n****\n****\n....\n....\n'''\n\nassert solution('''9 20\n**.......\n****.....\n******...\n*******..\n..******.\n....****.\n......***\n*.....***\n*********\n*********\n*********\n*********\n....**...\n...****..\n..******.\n.********\n****..***\n***...***\n**.....**\n*.......*\n''') == '''********......**********........********\n********......**********........********\n********........********......********..\n********........********......********..\n..********......********....********....\n..********......********....********....\n..********......********..********......\n..********......********..********......\n....********....****************........\n....********....****************........\n....********....****************........\n....********....****************........\n......******************..**********....\n......******************..**********....\n........****************....**********..\n........****************....**********..\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......**********\n............************......"
    },
    {
        "number": 1968,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 50000\n1 40000\n2 20000 60000\n3 10000 70000 190000''') == '3'\nassert solution('''3 50000\n1 50000\n3 100000 120000 110000\n3 120000 110000 120000''') == '0'\nassert solution('''3 50000\n1 50000\n3 120000 110000 120000\n3 120000 110000 120000''') == '0'\nassert solution('''3 50000\n1 50000\n3 120000 110000 120000\n3 120000 110000 120000''') == '0'\nassert solution('''3 50000\n1 50000\n3 120000 110000 120000\n3 120000 110000 120000''') == '0'\n"
    },
    {
        "number": 1969,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '1'\nassert solution('''2''') == '0'\nassert solution('''6''') == '4'\nassert solution('''......\nX.X.X.\n.X.X.X\nX.X.X.\n.X.X.X\n......''') == '4'\nassert solution('''.....\n.XXX.\n.XXX.\n.XXX.\n.....''') == '1'\n"
    },
    {
        "number": 1970,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'YES'\n\nassert solution('''........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\n\nassert solution('''........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'NO'\n\nassert solution('''........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'YES'\n\nassert solution('''........\n........\n......#.\nK..##..#\n.......#\n...##..#\n......#.\nK.......\n\n........\n........\n..#.....\n..#..#..\n..####..\n...##...\n........\n....K#K#\n''') == 'YES'"
    },
    {
        "number": 1971,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 4 3\n''') == '3 4 2 1'\nassert solution('''4\n2 1 3 4\n''') == '-1'\nassert solution('''5\n2 3 4 5 1\n''') == '4 5 1 2 3'\nassert solution('''5\n2 3 4 5 1\n''') == '-1'\nassert solution('''5\n2 3 4 5 1\n''') == '4 5 1 2 3'\n"
    },
    {
        "number": 1972,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0''') == '4'\nassert solution('''1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0''') == '4'\nassert solution('''1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0''') == '4'\nassert solution('''1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0''') == '4'\nassert solution('''1 3 4\n2 3 0\n2 4 3\n1 4 -4\n2 1 0''') == '4'\n"
    },
    {
        "number": 1973,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13''') == '13'\nassert solution('''5''') == '5'\nassert solution('''1''') == '1'\nassert solution('''7''') == '6'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 1974,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '3'\nassert solution('''0 0''') == '1'\nassert solution('''2 3''') == '4'\nassert solution('''0 0''') == '1'\nassert solution('''1 10''') == '4'\n"
    },
    {
        "number": 1975,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('2 2') == '3'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1 1'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 1976,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2 5\n2 1 8\n2 2 8\n1 2 1\n1 3 4\n2 3 2''') == '8'\nassert solution('''3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100''') == '-1'\nassert solution('''3 3 2 5\n1 2 2\n2 2 1\n2 3 5\n3 2 10\n2 1 100\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1"
    },
    {
        "number": 1977,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\nabcd\nbcde\nbcad\nbcde''') == 'aaabcde'\nassert solution('''5 3\nbwwwz\nhrhdh\nsepsp\nsqfaf\najbvw''') == 'aaaepfafw'\nassert solution('''7 6\nypnxnnp\npnxonpm\nnxanpou\nxnnpmud\nnhtdudu\nnpmuduh\npmutsnz''') == 'aaaaaaadudsnz'\n'''\n"
    },
    {
        "number": 1978,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0110\n0010\n0001\n1000\n4\n1 2 3 4\n''') == '3'\nassert solution('''4\n0110\n0010\n1001\n1000\n20\n1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4\n''') == '11'\nassert solution('''3\n011\n101\n110\n7\n1 2 3 1 3 2 1\n''') == '7'\nassert solution('''4\n0110\n0001\n0001\n1000\n3\n1 2 4\n''') == '2'\nassert solution('''4\n0110\n0001\n0001\n1000\n3\n1 2 4\n''') == '2'\n"
    },
    {
        "number": 1979,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1980,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1981,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1 1 0 0\n1 2\n1 3\n1 4\n''') == '2'\nassert solution('''7 1\n1 0 1 1 0 0 0\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '2'\nassert solution('''7 1\n1 0 1 1 0 0 0\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '2'\nassert solution('''7 1\n1 0 1 1 0 0 0\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '2'\nassert solution('''7 1\n1 0 1 1 0 0 0\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n''') == '2'\n"
    },
    {
        "number": 1982,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 1983,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1984,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 3 2\nA.A\n...\nA.a\n..C\nX.Y\n...\n''') == '14\\n1 0\\n2 1\\n3 1\\n'\nassert solution('''1 1 4 1\nA\n.\nB\n.\n''') == '3\\n1 0\\n2 0\\n4 2\\n3 0\\n'\nassert solution('''1 3 5 2\nABA\nBBB\nBBA\nBAB\nABB\n''') == '11\\n1 0\\n3 1\\n2 3\\n4 2\\n5 1\\n'\nassert solution('''1 3 5 2\nABA\nBBB\nBBA\nBAB\nABB\n''') == '11\\n1 0\\n3 1\\n2 3\\n4 2\\n5 1\\n'\nassert solution('''1 3 5 2\nABA\nBBB\nBBA\nBAB\nABB\n''') == '11\\n1 0\\n3 1\\n2 3\\n4 2\\n5 1\\n'\n"
    },
    {
        "number": 1985,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n-5 5 0 20\n10\n''') == '3'\n\nassert solution('''2 2\n-2000 -2000\n3998000 4000000\n''') == '1'\n\nassert solution('''2 2\n-2000 -2000\n3998000 4000000\n''') == '0'\n\nassert solution('''2 2\n-2000 -2000\n3998000 4000000\n''') == '0'\n\nassert solution('''2 2\n-2000 -2000\n3998000 4000000\n''') == '0'"
    },
    {
        "number": 1986,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n3 3\n4 5''') == '4'\nassert solution('''4 6\n5 8\n3 6\n2 3\n2 2''') == '3'\nassert solution('''1 5\n1 7\n''') == '-1'\nassert solution('''2 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '0'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 1987,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1988,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'abab'\nassert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == '1'\nassert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == '3'\nassert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'ertyqw'\nassert solution('''4\nabab\n6\nqwerty\n5\naaaaa\n6\nalaska\n9\nlfpbavjsm\n1\np\n''') == 'avjsmbpfl'\n"
    },
    {
        "number": 1989,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2 1 1 2 2 1''') == '8'\nassert solution('''3\n1 1 1''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '0'\n"
    },
    {
        "number": 1990,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('(a)') == '1'\nassert solution('(a)') == '1'\nassert solution('(a)') == '1'\nassert solution('(a)') == '1'\n"
    },
    {
        "number": 1991,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7''') == '0'\nassert solution('''5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7''') == '2'\nassert solution('''5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7''') == '2'\nassert solution('''5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7''') == '2'\nassert solution('''5\n1 2 3 4 5\n7\n3 2 4 5 1 6 7''') == '2'\n"
    },
    {
        "number": 1992,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 3 3\n1 2 3 4 5 6 7 8\n7 8 1\n''') == '7'\nassert solution('''5 4 2\n3 1 5 2 4\n4 4 4 4\n''') == '8'\nassert solution('''5 4 2\n3 1 5 2 4\n4 4 4 4\n''') == '7'\nassert solution('''5 4 2\n3 1 5 2 4\n4 4 4 4\n''') == '8'\nassert solution('''5 4 2\n3 1 5 2 4\n4 4 4 4\n''') == '7'\n"
    },
    {
        "number": 1993,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n*.*\n.*.\n*.*''') == '3.3'\nassert solution('''4 5\n**..*\n..***\n.*.*.\n*.*.*''') == '46..3'\nassert solution('''4 5\n**..*\n..***\n.*.*.\n*.*.*''') == '46..3'\nassert solution('''4 5\n**..*\n..***\n.*.*.\n*.*.*''') == '46..3'\nassert solution('''4 5\n**..*\n..***\n.*.*.\n*.*.*''') == '46..3'\n"
    },
    {
        "number": 1994,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ABACABA') == '3\\n1 4\\n3 2\\n7 1'\nassert solution('AAA') == '3\\n1 3\\n2 2\\n3 1'\nassert solution('AAAB') == '3\\n1 3\\n2 2\\n3 1'\nassert solution('AAABAA') == '3\\n1 3\\n2 2\\n3 1'\nassert solution('AAABAAB') == '3\\n1 3\\n2 2\\n3 1'\n"
    },
    {
        "number": 1995,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == 'baabcaa'\nassert solution('''abacaba''') == 'baabcaa'\nassert solution('''abacaba''') == 'baabcaa'\nassert solution('''abacaba''') == 'baabcaa'\nassert solution('''abacaba''') == 'baabcaa'\n"
    },
    {
        "number": 1996,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n! abc\n. ad\n. b\n! cd\n? c\n''') == '1'\nassert solution('''8\n! hello\n! codeforces\n? c\n. o\n? d\n? h\n. l\n? e\n''') == '2'\nassert solution('''7\n! ababahalamaha\n? a\n? b\n? a\n? b\n? a\n? h\n''') == '0'\nassert solution('''7\n! ababahalamaha\n? a\n? b\n? a\n? b\n? a\n? h\n''') == '0'\nassert solution('''7\n! ababahalamaha\n? a\n? b\n? a\n? b\n? a\n? h\n''') == '0'\n"
    },
    {
        "number": 1997,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n1 3\n2 4\n2 5''') == '3 2'\nassert solution('''6\n1 2\n1 3\n3 4\n1 5\n5 6''') == '3 3'\nassert solution('''7\n1 2\n1 3\n3 4\n1 5\n5 6\n6 7\n7 8''') == '3 3'\nassert solution('''8\n1 2\n1 3\n3 4\n1 5\n5 6\n6 7\n7 8\n8 9''') == '3 3'\nassert solution('''9\n1 2\n1 3\n3 4\n1 5\n5 6\n6 7\n7 8\n8 9\n9 10''') == '3 3'\n"
    },
    {
        "number": 1998,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1999,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n3 4 1 2 2 1 1\n''') == '4\\n3 8 2 1'\n\nassert solution('''5\n1 1 3 1 1\n''') == '2\\n3 4'\n\nassert solution('''5\n10 40 20 50 30\n''') == '5\\n10 40 20 50 30'\n\nassert solution('''5\n10 40 20 50 30\n''') == '5\\n10 40 20 50 30'\n\nassert solution('''5\n10 40 20 50 30\n''') == '5\\n10 40 20 50 30'"
    },
    {
        "number": 2000,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n7 3 2 1''') == '2'\nassert solution('''3\n1 1 1''') == '3'\nassert solution('''1\n1 1 1''') == '3'\nassert solution('''2\n1 1''') == '1'\nassert solution('''2\n2 2''') == '0'\n"
    },
    {
        "number": 2001,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, q = map(int, stdin.readline().split())\nl = [int(stdin.readline().strip(), 2) for _ in range(n)]\n\nfor _ in range(q):\n    l1, l2 = map(int, stdin.readline().split())\n    print(sum(l[l1-1:l2]) % (10**9+7))\n"
    },
    {
        "number": 2002,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2003,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11''') == '11'\nassert solution('''+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11''') == '10'\nassert solution('''+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11''') == '14'\nassert solution('''+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11''') == '13'\nassert solution('''+ 8\n+ 9\n+ 11\n+ 6\n+ 1\n? 3\n- 8\n? 3\n? 8\n? 11''') == '12'\n"
    },
    {
        "number": 2004,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '3'\nassert solution('''3''') == '4'\nassert solution('''4''') == '5'\nassert solution('''5''') == '6'\nassert solution('''6''') == '7'\n"
    },
    {
        "number": 2005,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == '6.00000000'\nassert solution('''4 2 1''') == '6.50000000'\nassert solution('''4 2 1''') == '6.50000000'\nassert solution('''4 2 1''') == '6.50000000'\nassert solution('''4 2 1''') == '6.50000000'\n"
    },
    {
        "number": 2006,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n*G*S\nG**S\n*G*S''') == '2'\nassert solution('''1 3\nS*G\n\nOutput\n-1''') == '-1'\nassert solution('''1 1\n*G*S\n\nOutput\n-1''') == '-1'\nassert solution('''1 1\n*G*S\nG**S\n*G*S''') == '2'\nassert solution('''1 1\n*G*S\nG**S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n*G*S\n"
    },
    {
        "number": 2007,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3'\n\n'''\n"
    },
    {
        "number": 2008,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n4 2\\n2 3\\n6 1') == '12'\nassert solution('4\\n2 4\\n3 3\\n7 1\\n2 3') == '25'\nassert solution('10\\n5 10\\n12 4\\n31 45\\n20 55\\n30 17\\n29 30\\n41 32\\n7 1\\n5 5\\n3 15') == '1423'\nassert solution('10\\n5 10\\n12 4\\n31 45\\n20 55\\n30 17\\n29 30\\n41 32\\n7 1\\n5 5\\n3 15\\n2 3') == '1423'\nassert solution('10\\n5 10\\n12 4\\n31 45\\n20 55\\n30 17\\n29 30\\n41 32\\n7 1\\n5 5\\n3 15\\n2 3\\n1 4') == '1423'\n"
    },
    {
        "number": 2009,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2010,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9''') == '2 9 11 20 30 40 39'\nassert solution('''10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9''') == '2 9 11 20 30 40 39'\nassert solution('''10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9''') == '2 9 11 20 30 40 39'\nassert solution('''10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9''') == '2 9 11 20 30 40 39'\nassert solution('''10 11\n1 2 3 4 5 6 7 8 9 10\n3 2\n3 9\n2 10\n3 1\n3 10\n1 1 10\n2 10\n2 10\n3 1\n3 10\n3 9''') == '2 9 11 20 30 40 39'\n"
    },
    {
        "number": 2011,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2012,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2013,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2014,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3''') == 3\nassert solution('''4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3''') == 3\nassert solution('''4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3''') == 3\nassert solution('''4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3''') == 3\nassert solution('''4 3\n1 4 2 3\n4 1 2 3\n1 2 4 3''') == 3\n"
    },
    {
        "number": 2015,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2016,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 100\n1 4 9\n2 19 49\n2 19 49''') == 'YES'\nassert solution('''3 100\n1 4 9\n2 19 49\n2 19 49''') == 'NO'\nassert solution('''3 100\n1 4 9\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n2 19 49\n"
    },
    {
        "number": 2017,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4') == '4'\nassert solution('2 4\\n1 4') == '4'\nassert solution('1 2\\n3 4\\n2 4') == '4'\nassert solution('1 2\\n3 4\\n2 4\\n1 4') == '4'\nassert solution('1 2\\n3 4\\n2 4\\n1 4\\n1 4') == '4'\n"
    },
    {
        "number": 2018,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2019,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('01') == 'DA'\nassert solution('1111') == 'NET'\nassert solution('0011') == 'NET'\nassert solution('10101') == 'NET'\nassert solution('10110') == 'DA'\n"
    },
    {
        "number": 2020,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 1\n0 2\n1 0''') == '2'\nassert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'\nassert solution('''4\n1 1\n1 2\n2 3\n3 3''') == '3'\nassert solution('''4\n1 1\n1 2\n2 3\n3 3''') == '3'\nassert solution('''4\n1 1\n1 2\n2 3\n3 3''') == '3'\n"
    },
    {
        "number": 2021,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27\\n30'\nassert solution('''7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27\\n30'\nassert solution('''7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27\\n30'\nassert solution('''7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27\\n30'\nassert solution('''7\n7 1 3 1 4 10 8\n2\n3 4\n''') == '27\\n30'\n"
    },
    {
        "number": 2022,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n''') == '1\\n1 3'\nassert solution('''4 5 3\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n''') == '2\\n3'\nassert solution('''5 4 5\n1 2\n1 3\n2 4\n2 5\n''') == '1\\n1 4 5'\nassert solution('''6 4 3\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n2 5\n''') == '2\\n3'\nassert solution('''7 4 3\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n2 5\n2 6\n''') == '2\\n3'\n"
    },
    {
        "number": 2023,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '0\\n3\\n-1\\n3\\n2\\n3\\n-1\\n'\n\nassert solution('''5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '0\\n3\\n-1\\n3\\n2\\n3\\n-1\\n'\n\nassert solution('''5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '0\\n3\\n-1\\n3\\n2\\n3\\n-1\\n'\n\nassert solution('''5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '0\\n3\\n-1\\n3\\n2\\n3\\n-1\\n'\n\nassert solution('''5 10\n1 2 0 -1 3\n3 1 5 -2 0\n2 5\n1 3 3 3\n2 5\n2 4\n2 1\n1 2 1 4\n2 1\n2 4\n1 4 2 1\n2 2\n''') == '0\\n3\\n-1\\n3\\n2\\n3\\n-1\\n'"
    },
    {
        "number": 2024,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 4 9\n''') == '20'\nassert solution('''4\n4 3 2 1\n''') == '0'\nassert solution('''3\n4 2 1\n''') == '6'\nassert solution('''8\n42 1337 13 37 420 666 616 97\n''') == '19200'\nassert solution('''8\n42 1337 13 37 420 666 616 97\n''') == '19200'\n"
    },
    {
        "number": 2025,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n2\n3''') == '-1'\nassert solution('''1\n2\n3''') == '-1'\n"
    },
    {
        "number": 2026,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RRRULURURUULULLLDLDDRDRDLD') == '7'\nassert solution('RRRULURURUULULLLDLDDRDRDLD') == '7'\nassert solution('RRRULURURUULULLLDLDDRDRDLD') == '7'\nassert solution('RRRULURURUULULLLDLDDRDRDLD') == '7'\nassert solution('RRRULURURUULULLLDLDDRDRDLD') == '7'\n"
    },
    {
        "number": 2027,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6 -4 8 -2 3''') == '2 4 6 1 3'\nassert solution('''5\n3 -2 -1 5 6''') == '1 -3 4 11 6'\nassert solution('''5\n-2 -1 5 6''') == '1 -3 4 11 6'\nassert solution('''5\n-2 -1 5 6''') == '1 -3 4 11 6'\nassert solution('''5\n-2 -1 5 6''') == '1 -3 4 11 6'\n"
    },
    {
        "number": 2028,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 5\n5 2\n3 7\n7 3''') == '6'\nassert solution('''5\n1 10\n2 10\n3 10\n4 10\n5 5''') == '5'\nassert solution('''1\n1 10\n2 10\n3 10\n4 10\n5 5''') == '5'\nassert solution('''1\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5''') == '5'\nassert solution('''1\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2 10\n3 10\n4 10\n5 5\n1 10\n2"
    },
    {
        "number": 2029,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n1 3\n1 4\n''') == '2.000000000000000000'\nassert solution('''6 1\n2 1\n2 3\n2 5\n5 4\n5 6\n''') == '0.500000000000000000'\nassert solution('''5 5\n1 2\n2 3\n3 4\n3 5\n''') == '3.333333333333333333'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n''') == '3.333333333333333333'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3.333333333333333333'\n"
    },
    {
        "number": 2030,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0.25 0.75\n0.75 0.25\n''') == '0.5 0.5'\nassert solution('''3\n0.125 0.25 0.625\n0.625 0.25 0.125\n''') == '0.25 0.25 0.5'\nassert solution('''4\n0.1 0.2 0.3 0.4\n0.4 0.3 0.2 0.1\n''') == '0.25 0.25 0.5 0.5'\nassert solution('''5\n0.1 0.2 0.3 0.4 0.5\n0.5 0.4 0.3 0.2 0.1\n''') == '0.25 0.25 0.5 0.5 0.5'\nassert solution('''6\n0.1 0.2 0.3 0.4 0.5 0.6\n0.6 0.5 0.4 0.3 0.2 0.1\n''') == '0.25 0.25 0.5 0.5 0.5 0.5'\n"
    },
    {
        "number": 2031,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\""
    },
    {
        "number": 2032,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 7\n7 4 17\n3 0 8\n11 2 0\n13 3 5\n3 1\n2 1\n4 3\n''') == '5'\nassert solution('''4 3 7\n7 4 17\n3 0 8\n11 2 0\n14 3 5\n3 1\n2 1\n4 1\n''') == '-1'\nassert solution('''4 3 7\n7 4 17\n3 0 8\n11 2 0\n14 3 5\n3 1\n2 1\n4 3\n''') == '22'\nassert solution('''4 3 7\n7 4 17\n3 0 8\n11 2 0\n14 3 5\n3 1\n2 1\n4 1\n''') == '-1'\nassert solution('''4 3 7\n7 4 17\n3 0 8\n11 2 0\n14 3 5\n3 1\n2 1\n4 1\n''') == '-1'\n"
    },
    {
        "number": 2033,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 9\n1 5\n5 4\n1 2\n2 3\n3 4\n4 1\n2 6\n6 4\n4 2\n4\n1 2 3 4\n''') == '0 0'\nassert solution('''7 7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 1\n7\n1 2 3 4 5 6 7\n''') == '0 3'\nassert solution('''8 13\n8 7\n8 6\n7 5\n7 4\n6 5\n6 4\n5 3\n5 2\n4 3\n4 2\n3 1\n2 1\n1 8\n5\n8 7 5 2 1\n''') == '0 3'\nassert solution('''8 13\n8 7\n8 6\n7 5\n7 4\n6 5\n6 4\n5 3\n5 2\n4 3\n4 2\n3 1\n2 1\n1 8\n5\n8 7 5 2 1\n''') == '0 3'\nassert solution('''8 13\n8 7\n8 6\n7 5\n7 4\n6 5\n6 4\n5 3\n5 2\n4 3\n4 2\n3 1\n2 1\n1 8\n5\n8 7 5 2 1\n''') == '0 3'\n"
    },
    {
        "number": 2034,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n2 1\n1 3\n4 3''') == '1'\nassert solution('''5 5\n2 1\n1 3\n2 3\n2 5\n4 3\n''') == '0'\nassert solution('''6 5\n1 2\n2 3\n4 5\n4 6\n5 6\n''') == '1'\nassert solution('''6 5\n1 2\n2 3\n4 5\n4 6\n5 6\n''') == '0'\nassert solution('''6 5\n1 2\n2 3\n4 5\n4 6\n5 6\n''') == '0'\n"
    },
    {
        "number": 2035,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2036,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 2037,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 11\n2 3 1 2 2 2 3 2 2 3 1''') == '00100000001'\nassert solution('''4 8\n4 1 3 3 2 3 3 3\n''') == '00001000'\nassert solution('''3 4\n1 2 3 4\n''') == '00001000'\nassert solution('''3 4\n1 2 3 4\n''') == '00001000'\nassert solution('''3 4\n1 2 3 4\n''') == '00001000'\n"
    },
    {
        "number": 2038,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1''') == '1'\nassert solution('''4\n3 4 1 2''') == '4'\nassert solution('''6\n2 5 3 1 4 6''') == '3'\nassert solution('''8\n7 6 5 4 3 2 1''') == '0'\nassert solution('''10\n9 8 7 6 5 4 3 2 1''') == '5'\n"
    },
    {
        "number": 2039,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3''') == '0'\nassert solution('''1 2 3 4''') == '0'\nassert solution('''1 2 3 4 5''') == '2'\nassert solution('''1 2 3 4 5 6''') == '2'\nassert solution('''1 2 3 4 5 6 7''') == '3'\n"
    },
    {
        "number": 2040,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n2\n3''') == '1\\n2\\n3'\nassert solution('''3\n3\n2\n1''') == '3\\n11\\n100'\nassert solution('''3\n3\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 2041,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 20 10\n6\n1 1\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n''') == '20\\n10\\n20\\n10\\n20\\n10\\n'\nassert solution('''7\n1 2 1 3 1 2 1\n9\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n''') == '2\\n3\\n2\\n3\\n2\\n3\\n1\\n1\\n3\\n'\nassert solution('''7\n1 2 1 3 1 2 1\n9\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n''') == '2\\n3\\n2\\n3\\n2\\n3\\n1\\n1\\n3\\n'\nassert solution('''7\n1 2 1 3 1 2 1\n9\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n''') == '2\\n3\\n2\\n3\\n2\\n3\\n1\\n1\\n3\\n'\nassert solution('''7\n1 2 1 3 1 2 1\n9\n2 1\n2 2\n3 1\n3 2\n3 3\n1 1\n7 1\n7 7\n7 4\n''') == '2\\n3\\n2\\n3\\n2\\n3\\n1\\n1\\n3\\n'\n"
    },
    {
        "number": 2042,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 3\n******\n*..*.*\n******\n*....*\n******\n2 2\n2 5\n4 3''') == '6'\nassert solution('''4 4 1\n****\n*..*\n*.**\n****\n3 2\n''') == '8'\nassert solution('''4 4 1\n****\n*..*\n*.**\n****\n3 2\n''') == '10'\nassert solution('''4 4 1\n****\n*..*\n*.**\n****\n3 2\n''') == '10'\nassert solution('''4 4 1\n****\n*..*\n*.**\n****\n3 2\n''') == '10'\n"
    },
    {
        "number": 2043,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aba') == '2'\nassert solution('baobababbah') == '2'\nassert solution('mars') == '0'\nassert solution('sunvenusearthmarsjupitersaturnuranusneptune') == '0'\nprint(\"All tests past, you are good to go!\")\n"
    },
    {
        "number": 2044,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2045,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2046,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2''') == '3\\n2\\n1'\nassert solution('''5\n4 5 1 2 3''') == '5\\n4\\n3\\n2\\n1'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''3\n1''') == '1'\n"
    },
    {
        "number": 2047,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n3 2 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''3\n1 2 3\n3 2 1\n1 1\n1 2\n''') == 'NO'\nassert solution('''3\n1 2 3\n3 2 1\n1 1\n1 2\n''') == 'NO'\nassert solution('''3\n1 2 3\n3 2 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''3\n1 2 3\n3 2 1\n1 1\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 2048,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 5 4 10\n40 30 20 10 40\n''') == '90'\nassert solution('''3\n100 101 100\n2 4 5\n''') == '-1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n10 13 11 14 15 12 13 13 18 13\n''') == '33'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n10 13 11 14 15 12 13 13 18 13\n''') == '-1'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n10 13 11 14 15 12 13 13 18 13\n''') == '-1'\n"
    },
    {
        "number": 2049,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8''') == '''Yes\nYes\nNo\nYes\nNo\nYes\nYes'''\n\nassert solution('''8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8''') == '''No\nNo\nYes\nYes\nNo\nYes\nYes'''\n\nassert solution('''8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8''') == '''Yes\nYes\nNo\nYes\nNo\nYes\nYes'''\n\nassert solution('''8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8''') == '''No\nNo\nYes\nYes\nNo\nYes\nYes'''\n\nassert solution('''8 6\n1 2 1 3 3 5 2 1\n1 3\n2 3\n2 4\n8 8\n1 4\n5 8''') == '''No\nNo\nYes\nYes\nNo\nYes\nYes'''"
    },
    {
        "number": 2050,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2051,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 3''') == '2'\nassert solution('''3 2 2''') == '0'\nassert solution('''3 2 3''') == '2'\nassert solution('''3 2 3''') == '2'\nassert solution('''3 2 3''') == '2'\n"
    },
    {
        "number": 2052,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 5\\n0 0 1 0 2 0 0 1 0\\n') == '3'\nassert solution('10 3\\n1 1 1 1 2 1 1 1 1\\n') == '3'\nassert solution('10 3\\n1 1 1 1 2 1 1 1 1\\n') == '3'\nassert solution('10 3\\n1 1 1 1 2 1 1 1 1\\n') == '3'\nassert solution('10 3\\n1 1 1 1 2 1 1 1 1\\n') == '3'\n"
    },
    {
        "number": 2053,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 3 2 1\n4\n1 1 1 1\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n4\n1 2 3 4\n''') == '0'\nassert solution('''5\n1 2 3 4 5\n4\n1 2 3 4\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n4\n1 2 3\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n4\n1 2 3 4\n''') == '1'\n"
    },
    {
        "number": 2054,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 4\n1000000000 0\n7 15\n8 7''') == '2'\nassert solution('''4\n4 4\n1000000000 0\n7 15\n8 7''') == '0'\nassert solution('''4\n4 4\n1000000000 0\n7 15\n8 7''') == '7'\nassert solution('''4\n4 4\n1000000000 0\n7 15\n8 7''') == '5'\nassert solution('''4\n4 4\n1000000000 0\n7 15\n8 7''') == '2'\n"
    },
    {
        "number": 2055,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 2056,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '3'\nassert solution('''5''') == '4'\n"
    },
    {
        "number": 2057,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n0\n''') == '2'\n\nassert solution('''1\n0\n''') == '2'\n\nassert solution('''2\n0 1\n''') == '3'\n\nassert solution('''3\n0 1 0 1 3\n''') == '3'\n\nassert solution('''4\n0 1 0 1 3\n''') == '4'"
    },
    {
        "number": 2058,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''01''') == '0'\nassert solution('''00111''') == '3'\nassert solution('''0011''') == '2'\nassert solution('''0110''') == '2'\nassert solution('''0101''') == '1'\n"
    },
    {
        "number": 2059,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n6 4 5 5\\n') == '1'\nassert solution('3\\n0 1 2\\n') == '0'\nassert solution('4\\n821 500 479 717\\n') == '239'\nassert solution('4\\n0 1 2\\n') == '0'\nassert solution('4\\n0 1 2\\n') == '0'\n"
    },
    {
        "number": 2060,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n6\n5''') == 'YES'\nassert solution('''2\n6\n5\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''2\n6\n5\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\nassert solution('''2\n6\n5\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'NO'\nassert solution('''2\n6\n5\n3\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES'\n"
    },
    {
        "number": 2061,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 1\n****\n*..*\n****\n**.*\n..**\n''') == '1'\nassert solution('''3 3 0\n***\n*.*\n***\n''') == '1'\nassert solution('''3 3 0\n***\n*.*\n***\n''') == '1'\nassert solution('''3 3 0\n***\n*.*\n***\n''') == '1'\nassert solution('''3 3 0\n***\n*.*\n***\n''') == '1'\n"
    },
    {
        "number": 2062,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2063,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2064,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '7'\nassert solution('''4''') == '14'\nassert solution('''5''') == '28'\nassert solution('''6''') == '56'\n"
    },
    {
        "number": 2065,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3\n1 2 1''') == '-1'\nassert solution('''4 2\n1 2\n3 4\n1 2 3 3''') == '3'\nassert solution('''4 2\n1 2\n3 4\n1 2 3 3''') == '2'\nassert solution('''4 2\n1 2\n3 4\n1 2 3 3''') == '1'\nassert solution('''4 2\n1 2\n3 4\n1 2 3 3''') == '3'\n"
    },
    {
        "number": 2066,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abcd') == 'cadb'\nassert solution('gg') == 'gg'\nassert solution('codeforces') == 'codfoerces'\nassert solution('abaca') == 'abaca'\n"
    },
    {
        "number": 2067,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n6\n8\n1 5 6\n1 9 4\n2 4 2\n''') == '1'\n\nassert solution('''0 2\n1 1000000000 4\n1 1000000000 2\n''') == '2'\n\nassert solution('''2 3\n4\n1 5 3\n1 9 4\n4 6 6\n''') == '1'\n\nassert solution('''0 0\n''') == '0'\n\nassert solution('''2 3\n4\n1 5 3\n1 9 4\n4 6 6\n''') == '2'"
    },
    {
        "number": 2068,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''tourist reposted Polycarp\nPetr reposted Tourist\nWJMZBMR reposted Petr\nsdya reposted wjmzbmr\nvepifanov reposted sdya''') == '6'\nassert solution('''Mike reposted Polycarp\nMax reposted Polycarp\nEveryOne reposted Polycarp\n111 reposted Polycarp\nVkCup reposted Polycarp\nCodeforces reposted Polycarp''') == '2'\nassert solution('''SoMeStRaNgEgUe reposted PoLyCaRp''') == '2'\nassert solution('''tourist reposted Polycarp\nPetr reposted Tourist\nWJMZBMR reposted Petr\nsdya reposted wjmzbmr\nvepifanov reposted sdya\n''') == '6'\nassert solution('''Mike reposted Polycarp\nMax reposted Polycarp\nEveryOne reposted Polycarp\n111 reposted Polycarp\nVkCup reposted Polycarp\nCodeforces reposted Polycarp\n''') == '2'\n"
    },
    {
        "number": 2069,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 3 2 4\n3 2\n2 4\n''') == '5'\nassert solution('''9 5\n9 7 2 3 1 4 6 5 8\n1 6\n4 5\n2 7\n7 2\n2 7\n''') == '20'\nassert solution('''9 5\n9 7 2 3 1 4 6 5 8\n1 6\n4 5\n2 7\n7 2\n2 7\n''') == '20'\nassert solution('''9 5\n9 7 2 3 1 4 6 5 8\n1 6\n4 5\n2 7\n7 2\n2 7\n''') == '20'\nassert solution('''9 5\n9 7 2 3 1 4 6 5 8\n1 6\n4 5\n2 7\n7 2\n2 7\n''') == '20'\n"
    },
    {
        "number": 2070,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 2071,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n6 5 4\n''') == '70'\nassert solution('''3\n1 1000 10000\n10 100 100000\n''') == '543210'\nassert solution('''3\n1 1000 10000\n10 100 100000\n''') == '543210'\nassert solution('''3\n1 1000 10000\n10 100 100000\n''') == '543210'\nassert solution('''3\n1 1000 10000\n10 100 100000\n''') == '543210'\n"
    },
    {
        "number": 2072,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 1 3\n1 2 1\n''') == '2.000000000000'\nassert solution('''4\n5 10 3 2\n2 3 2 4\n''') == '1.400000000000'\nassert solution('''5\n5 10 3 2\n2 3 2 4\n''') == '0.800000000000'\nassert solution('''6\n5 10 3 2\n2 3 2 4\n''') == '0.600000000000'\nassert solution('''7\n5 10 3 2\n2 3 2 4\n''') == '0.400000000000'\n"
    },
    {
        "number": 2073,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2074,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2075,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2076,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4 5\n1 0 5\n5 3 2''') == '9'\nassert solution('''3 4 5\n1 0 5\n5 3 2''') == '0'\nassert solution('''3 4 5\n1 0 5\n5 3 2''') == '6'\nassert solution('''3 4 5\n1 0 5\n5 3 2''') == '9'\nassert solution('''3 4 5\n1 0 5\n5 3 2''') == '9'\n"
    },
    {
        "number": 2077,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 1\n2 1 3\n''') == '2 1 3'\nassert solution('''3 3\n1 2\n2 3\n3 1\n1 1 1\n''') == '-1'\nassert solution('''5 3\n1 2\n2 3\n4 5\n2 1 2 2 1\n''') == '2 5 1 3 4'\nassert solution('''5 3\n1 2\n2 3\n4 5\n2 1 2 2 1\n''') == '-1'\nassert solution('''5 3\n1 2\n2 3\n4 5\n2 1 2 2 1\n''') == '-1'\n"
    },
    {
        "number": 2078,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 2079,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 1\n0011\n''') == '2 1 1 2'\nassert solution('''6\n10 8 9 11 13 5\n010010011101\n''') == '6 6 2 3 3 1 4 4 1 2 5 5'\nassert solution('''2\n3 1\n0011\n0101\n''') == '2 1 1 2'\nassert solution('''6\n10 8 9 11 13 5\n010010011101\n''') == '6 6 2 3 3 1 4 4 1 2 5 5'\nassert solution('''2\n3 1\n0011\n0101\n''') == '2 1 1 2'\n"
    },
    {
        "number": 2080,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n4\n6''') == '2'\nassert solution('''3\n3\n4\n6\n3\n4\n6''') == '3'\nassert solution('''3\n3\n4\n6\n3\n4\n6\n3\n4\n6''') == '6'\nassert solution('''3\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n3\n4\n6\n"
    },
    {
        "number": 2081,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2082,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3\\n10 20 30 40\\n1 3\\n2 3\\n4 3\\n') == '16.666667'\nassert solution('3 3\\n10 20 30\\n1 2\\n2 3\\n3 1\\n4 3\\n5 7\\n1 4\\n5 7\\n') == '13.333333'\nassert solution('7 8\\n40 20 10 30 20 50 40\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 4\\n5 7\\n') == '18.571429'\nassert solution('7 8\\n40 20 10 30 20 50 40\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 4\\n5 7\\n') == '18.571429'\nassert solution('7 8\\n40 20 10 30 20 50 40\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 4\\n5 7\\n') == '18.571429'\n"
    },
    {
        "number": 2083,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 2.000000\n1\n1\n1\n''') == '1.000000 0.500000 0.500000'\nassert solution('''11 4 1.250000\n9 11 7 5 15 6 6 6 6 6 6\n8\n4 5 6 7 8 9 10 11\n''') == '8.000000 4.449600 0.443800'\nassert solution('''13 4 1.250000\n3 3 3 3 3 3 3 3 3 3 3 3\n10\n4 5 6 7 8 9 10 11 12 13\n''') == '3.000000 1.771200 0.409600'\nassert solution('''13 4 1.250000\n3 3 3 3 3 3 3 3 3 3 3 3\n10\n4 5 6 7 8 9 10 11 12 13\n''') == '3.000000 2.016960 0.327680'\nassert solution('''13 4 1.250000\n3 3 3 3 3 3 3 3 3 3 3 3\n10\n4 5 6 7 8 9 10 11 12 13\n''') == '7.250000 5.613568 0.225715'\n"
    },
    {
        "number": 2084,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 5\n1 1 1 1 1 1 1 1\n''') == '5'\nassert solution('''10 3\n16 8 2 4 512 256 32 128 64 1\n''') == '7'\nassert solution('''5 1\n20 10 50 30 46\n''') == '10'\nassert solution('''6 6\n6 6 6 6 6 6\n''') == '36'\nassert solution('''1 1\n100\n''') == '100'\n"
    },
    {
        "number": 2085,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2086,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n1 3\n''') == '3'\nassert solution('''5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''5\n1 2 3 4 1\n1 3\n''') == '4'\nassert solution('''5\n1 2 3 4 1\n1 3\n''') == '4'\n"
    },
    {
        "number": 2087,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2088,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n''') == '1 1 2'\nassert solution('''5\n1 1 3 3\n''') == '1 1 1 2 3'\nassert solution('''10\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9\n''') == '1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9'\nassert solution('''100\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19\n''') == '1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 19'\nassert solution('''1000\n1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 19\n''') == '1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 19 19'\n"
    },
    {
        "number": 2089,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4 1 5\n1 2\n2 3\n3 4\n4 5''') == '0'\nassert solution('''5 4 3 5\n1 2\n2 3\n3 4\n4 5\n3 5\n2 5''') == '3'\nassert solution('''5 6 1 5\n1 2\n1 3\n1 4\n4 5\n3 5\n2 5''') == '3'\nassert solution('''5 6 1 5\n1 2\n1 3\n1 4\n4 5\n3 5\n2 5\n1 4\n2 3\n3 4\n4 5''') == '0'\nassert solution('''5 6 1 5\n1 2\n1 3\n1 4\n4 5\n3 5\n2 5\n1 4\n2 3\n3 4\n4 5\n1 2\n1 3\n1 4\n4 5\n3 5\n2 5''') == '3'\n"
    },
    {
        "number": 2090,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2091,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2092,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\nassert solution('''5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\nassert solution('''5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\nassert solution('''5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\nassert solution('''5 6 4 14\n1 2 3 4 5\n1 5 2\n1 2 5\n2 3 5\n3 5 3\n''') == '3'\n"
    },
    {
        "number": 2093,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''3\n3 2 1''') == '3'\nassert solution('''3\n8 12 7''') == '3'\nassert solution('''3\n3 2 1''') == '2'\nassert solution('''3\n3 2 1''') == '2'\n"
    },
    {
        "number": 2094,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2095,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n-1 0 0\n0 -1 1\n0 2 -1''') == '2\\n1 3'\nassert solution('''4\n-1 3 3 3\n3 -1 3 3\n3 3 -1 3\n3 3 3 -1''') == '0\\n1 3'\nassert solution('''5\n-1 3 3 3 3\n3 -1 3 3 3\n3 3 -1 3 3\n3 3 3 -1 3\n3 3 3 3 -1''') == '0\\n1 3'\nassert solution('''6\n-1 3 3 3 3 3\n3 -1 3 3 3 3\n3 3 -1 3 3 3\n3 3 3 -1 3 3\n3 3 3 3 -1 3\n3 3 3 3 3 -1''') == '0\\n1 3'\nassert solution('''7\n-1 3 3 3 3 3 3\n3 -1 3 3 3 3 3\n3 3 -1 3 3 3 3\n3 3 3 -1 3 3 3\n3 3 3 3 -1 3 3\n3 3 3 3 3 -1 3\n3 3 3 3 3 3 -1''') == '0\\n1 3'\n"
    },
    {
        "number": 2096,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n10 99''') == '1'\nassert solution('''2\n13 24 13 45''') == '4'\nassert solution('''3\n10 99 10 99''') == '1'\nassert solution('''4\n10 99 10 99 10''') == '2'\nassert solution('''5\n10 99 10 99 10 99''') == '3'\n"
    },
    {
        "number": 2097,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1\\n2\\n0\\n2'\nassert solution('''3\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1\\n2\\n0\\n2'\nassert solution('''3\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1\\n2\\n0\\n2'\nassert solution('''3\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1\\n2\\n0\\n2'\nassert solution('''3\n3\n2 -1 -1\n4\n-1 0 0 1\n2\n-1 2\n3\n0 -2 1\n''') == '1\\n2\\n0\\n2'\n"
    },
    {
        "number": 2098,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 4\n1 4\n3 4\n''') == 'YES'\nassert solution('''3\n1 3\n1 3\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n1 3\n''') == 'NO'\nassert solution('''3\n1 2\n2 3\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 2099,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 10\n17:05:53\n17:05:58\n17:06:01\n22:39:47''') == '3'\nassert solution('''1 2 86400\n00:00:00''') == 'No solution'\nassert solution('''1 2 86400\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00:00:00\n00"
    },
    {
        "number": 2100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1\n1 0\n0 1\n1 1\n0 1''') == '3'\nassert solution('''5\n0 0\n1 0\n0 1\n1 1\n0 1''') == '1'\nassert solution('''5\n0 0\n0 1\n0 1\n0 1\n0 1''') == '0'\nassert solution('''5\n0 0\n0 1\n1 0\n0 1\n0 1''') == '0'\nassert solution('''5\n0 0\n0 1\n1 0\n0 1\n0 1''') == '0'\n"
    },
    {
        "number": 2101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1''') == '20'\nassert solution('''3\n5\n4''') == '20'\nassert solution('''10 1 1''') == '99'\nassert solution('''11 7 20 15 19 14 2 4 13 14''') == '372'\nassert solution('''8\n11\n''') == '99'\n"
    },
    {
        "number": 2102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 8') == 'YES\\n2 7\\n4 1\\n3 8\\n6 5'\nassert solution('1 2') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\n"
    },
    {
        "number": 2105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6 5 7\n3 1 2 2 3 1\n3 2 2 2 5 5\n4 2 2 2 5 3\n3 2 2 1 4 3\n2 3 1 4 1 5 1\n''') == '8'\nassert solution('''4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\nassert solution('''4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\nassert solution('''4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\nassert solution('''4 4 9 5\n4 7 9 5\n1 2 1 7\n8 3 4 9\n5 7 7 2\n7 1 9 2 5\n''') == '4'\n"
    },
    {
        "number": 2108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n2 2 2\n3 1\n5 4\n2 5\n''') == 'YES\\n112323'\nassert solution('''5 9\n0 2 3\n1 2\n1 3\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\nassert solution('''5 9\n0 2 3\n1 2\n1 3\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\nassert solution('''5 9\n0 2 3\n1 2\n1 3\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\nassert solution('''5 9\n0 2 3\n1 2\n1 3\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == 'NO'\n"
    },
    {
        "number": 2109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-1 -2 -3 0''') == '1 -1\\n1 2\\n1 0'\nassert solution('''-1 -2 -3 0''') == '1 -1\\n2 -3 -2\\n1 0'\nassert solution('''-1 -2 -3 0''') == '1 -1\\n2 -3 -2\\n1 0'\nassert solution('''-1 -2 -3 0''') == '1 -1\\n2 -3 -2\\n1 0'\nassert solution('''-1 -2 -3 0''') == '1 -1\\n2 -3 -2\\n1 0'\n"
    },
    {
        "number": 2110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\n3 4 U\n6 1 L\n2 5 L\n1 6 U\n4 3 U''') == '4\\n3\\n2\\n1\\n2\\n'\nassert solution('''10 6\n2 9 U\n10 1 U\n1 10 U\n8 3 L\n10 1 L\n6 5 U''') == '9\\n1\\n10\\n6\\n0\\n2'\nassert solution('''10 10\n2 9 U\n10 1 U\n1 10 U\n8 3 L\n10 1 L\n6 5 U''') == '9\\n1\\n10\\n6\\n0\\n2'\nassert solution('''10 10\n2 9 U\n10 1 U\n1 10 U\n8 3 L\n10 1 L\n6 5 U''') == '9\\n1\\n10\\n6\\n0\\n2'\nassert solution('''10 10\n2 9 U\n10 1 U\n1 10 U\n8 3 L\n10 1 L\n6 5 U''') == '9\\n1\\n10\\n6\\n0\\n2'\n"
    },
    {
        "number": 2112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n5 2 3\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4 5 2\n3 5\n3 1 4"
    },
    {
        "number": 2113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '0'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '2'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n1 3\n''') == '2'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n1 3\n1 4\n''') == '2'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n1 3\n1 4\n1 5\n''') == '2'"
    },
    {
        "number": 2114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''4''') == '4 3 6 12'\nassert solution('''4\n4 3 6 12\n7 5 9 15\n14 1 11 10\n13 8 16 2''') == '4 3 6 12'\nassert solution('''4\n4 3 6 12\n7 5 9 15\n14 1 11 10\n13 8 16 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 2115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n5 2 1 1 2 2''') == '2'\nassert solution('''4\n1000000000 1000000000 1000000000 1000000000''') == '1'\nassert solution('''7\n4 10 22 11 12 5 6''') == '7'\nassert solution('''7\n4 10 22 11 12 5 6''') == '7'\nassert solution('''7\n4 10 22 11 12 5 6''') == '7'\n"
    },
    {
        "number": 2116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 5\n3 4 1 2 5\n1 5\n3 1''') == '14'\nassert solution('''2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\nassert solution('''2 2 5\n3 4 1 2 5\n1 5\n3 1\n''') == '14'\n"
    },
    {
        "number": 2117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n''') == '1 3 3'\nassert solution('''4\n1 2\n3 2\n4 2\n''') == '1 3 4 4'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '1 3 4 4'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '1 3 4 4'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '1 3 4 4'\n"
    },
    {
        "number": 2118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3''') == '2 1 3'\nassert solution('''4 1''') == '1 2 3 4'\nassert solution('''5 6''') == '-1'\nassert solution('''1 1''') == '1'\nassert solution('''2 2''') == '1 2'\n"
    },
    {
        "number": 2119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n3 6 1 4 2\n1 2\n2 4\n2 5\n1 3\n''') == '3'\nassert solution('''4 2\n1 5 5 5\n1 2\n1 3\n1 4\n''') == '1'\nassert solution('''4 2\n1 5 5 5\n1 2\n1 3\n1 4\n''') == '1'\nassert solution('''4 2\n1 5 5 5\n1 2\n1 3\n1 4\n''') == '1'\nassert solution('''4 2\n1 5 5 5\n1 2\n1 3\n1 4\n''') == '1'\n"
    },
    {
        "number": 2122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\nVladik netman\n2\n?: Hello, Vladik!\n?: Hi\n''') == '''netman: Hello, Vladik!\nVladik: Hi\n'''\n\nassert solution('''1\n2\nnetman vladik Fedosik\n2\n?: users are netman, vladik, Fedosik\nvladik: something wrong with this chat\n4\nnetman tigerrrrr banany2001 klinchuh\n4\n?: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\n?: yes, netman\nbanany2001: yes of course.\n''') == '''Impossible\nnetman: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\ntigerrrrr: yes, netman\nbanany2001: yes of course.\n'''\n\nassert solution('''1\n2\nnetman vladik Fedosik\n2\n?: users are netman, vladik, Fedosik\nvladik: something wrong with this chat\n4\nnetman tigerrrrr banany2001 klinchuh\n4\n?: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\n?: yes, netman\nbanany2001: yes of course.\n''') == '''Impossible\nnetman: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\ntigerrrrr: yes, netman\nbanany2001: yes of course.\n'''\n\nassert solution('''1\n2\nnetman vladik Fedosik\n2\n?: users are netman, vladik, Fedosik\nvladik: something wrong with this chat\n4\nnetman tigerrrrr banany2001 klinchuh\n4\n?: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\n?: yes, netman\nbanany2001: yes of course.\n''') == '''Impossible\nnetman: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\ntigerrrrr: yes, netman\nbanany2001: yes of course.\n'''\n\nassert solution('''1\n2\nnetman vladik Fedosik\n2\n?: users are netman, vladik, Fedosik\nvladik: something wrong with this chat\n4\nnetman tigerrrrr banany2001 klinchuh\n4\n?: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\n?: yes, netman\nbanany2001: yes of course.\n''') == '''Impossible\nnetman: tigerrrrr, banany2001, klinchuh, my favourite team ever, are you ready?\nklinchuh: yes, coach!\ntigerrrrr: yes, netman\nbanany2001: yes of course.\n'''"
    },
    {
        "number": 2125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\naaa\nbbb\nccb\nddd''') == '6'\nassert solution('''6 1\na\na\nb\nb\nc\nc\n''') == '1'\nassert solution('''6 1\na\na\nb\nb\nc\nc\n''') == '1'\nassert solution('''6 1\na\na\nb\nb\nc\nc\n''') == '1'\nassert solution('''6 1\na\na\nb\nb\nc\nc\n''') == '1'\n"
    },
    {
        "number": 2126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 7 3\n2 3 0 0 2 0 1\n2 1 3\n1 0 0 0 1 0 0\n0 0 0 0 0 0 1\n1 1 0 0 0 0 0\n''') == '1 0 0 0 2 0 0\\n0 0 0 0 0 0 1\\n2 3 0 0 0 0 0\\n'\n\nassert solution('''4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\n''') == '0 0 0 0 4\\n1 0 2 0 0\\n0 5 0 0 0\\n3 4 1 0 0\\n'\n\nassert solution('''4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\n''') == '0 0 0 0 4\\n1 0 2 0 0\\n0 5 0 0 0\\n3 4 1 0 0\\n'\n\nassert solution('''4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\n''') == '0 0 0 0 4\\n1 0 2 0 0\\n0 5 0 0 0\\n3 4 1 0 0\\n'\n\nassert solution('''4 5 5\n3 5 2 0 4\n4 2 5 4\n0 0 0 0 1\n1 0 1 0 0\n0 1 0 0 0\n1 1 1 0 0\n''') == '0 0 0 0 4\\n1 0 2 0 0\\n0 5 0 0 0\\n3 4 1 0 0\\n'"
    },
    {
        "number": 2127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'\n\nassert solution('''\n9\n+ 3 2\n+ 2 3\n? 1 20\n? 3 3\n? 2 3\n+ 1 5\n? 10 10\n? 1 5\n+ 1 1\n''') == 'NO\\nYES\\nYES\\nYES\\nNO'"
    },
    {
        "number": 2128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n50''') == '2'\nassert solution('''3\n10 20 50''') == '112'\nassert solution('''2\n10 20 50''') == '112'\nassert solution('''3\n10 20 50''') == '112'\nassert solution('''4\n10 20 50''') == '112'\n"
    },
    {
        "number": 2129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3'\nassert solution('''5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '1 3'\nassert solution('''5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3'\nassert solution('''5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '1 3'\nassert solution('''5 5\n2 1\n4 5\n2 3\n1 3\n3 5\n7 2\n3 7\n4 2\n''') == '3'\n"
    },
    {
        "number": 2130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'No'\nassert solution('''6''') == 'Yes'\nassert solution('''1 2 3''') == 'No'\nassert solution('''4 7 7 12 31 61''') == 'Yes'\nassert solution('''1 2 3''') == 'No'\n"
    },
    {
        "number": 2131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == 'Yes'\nassert solution('''6\n1 2\n2 3\n3 4\n2 5\n3 6\n''') == 'No'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == 'Yes'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == 'Yes'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == 'Yes'\n"
    },
    {
        "number": 2132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 2133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11\n0 0 0 1 1 0 1 0 0 1 1\n1 2\n1 3\n2 4\n2 5\n5 6\n5 7\n3 8\n3 9\n3 10\n9 11''') == '2'\nassert solution('''4\n0 0 0 0\n1 2\n2 3\n3 4\n''') == '0'\nassert solution('''0\n0 0 0 0\n1 2\n2 3\n3 4\n''') == '0'\nassert solution('''1\n0 0 0 0\n1 2\n2 3\n3 4\n''') == '0'\nassert solution('''2\n0 0 0 0\n1 2\n2 3\n3 4\n''') == '0'\n"
    },
    {
        "number": 2134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 2 3 6\n2 8 5 10\n''') == '15'\nassert solution('''3\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''1\n0\n1\n''') == '0'\nassert solution('''2\n1 2\n1 2\n''') == '0'\nassert solution('''2\n1 2\n2 1\n''') == '0'\n"
    },
    {
        "number": 2135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 8\n....#..#\n.#......\n##.#....\n##..#.##\n........\n4\n1 1 2 3\n4 1 4 1\n1 2 4 5\n2 5 5 8''') == '4'\n\nassert solution('''7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..#..#..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8''') == '53'\n\nassert solution('''7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..#..#..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8''') == '89'\n\nassert solution('''7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..#..#..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8''') == '120'\n\nassert solution('''7 39\n.......................................\n.###..###..#..###.....###..###..#..###.\n...#..#.#..#..#.........#..#.#..#..#...\n.###..#.#..#..###.....###..#.#..#..###.\n.#....#.#..#....#.....#....#.#..#..#.#.\n.###..###..#..###.....###..#..#..#..###.\n.......................................\n6\n1 1 3 20\n2 10 6 30\n2 10 7 30\n2 2 7 7\n1 7 7 7\n1 8 7 8''') == '23'"
    },
    {
        "number": 2136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1\\n3 4\\n2\\n1 2\\n2 1\\n0'\nassert solution('''3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1\\n3 4\\n2\\n1 2\\n2 1\\n0'\nassert solution('''3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1\\n3 4\\n2\\n1 2\\n2 1\\n0'\nassert solution('''3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1\\n3 4\\n2\\n1 2\\n2 1\\n0'\nassert solution('''3\n4\nS010\n0001\n1000\n111F\n3\nS10\n101\n01F\n5\nS0101\n00000\n01111\n11111\n0001F\n''') == '1\\n3 4\\n2\\n1 2\\n2 1\\n0'\n"
    },
    {
        "number": 2137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1 1\n1 -1 -1\n2 1 1\n3 1 1\n4 -1 -1''') == '8'\nassert solution('''3 1 0\n0 0 0\n1 0 0\n2 0 0\n''') == '0'\nassert solution('''3 1 0\n0 0 0\n1 0 0\n2 0 0\n''') == '0'\nassert solution('''3 1 0\n0 0 0\n1 0 0\n2 0 0\n''') == '0'\nassert solution('''3 1 0\n0 0 0\n1 0 0\n2 0 0\n''') == '0'\n"
    },
    {
        "number": 2138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 4\n''') == '8\\n3 1\\n4 2\\n4 5\\n2 5\\n5 1\\n3 2\\n2 1\\n5 3'\nassert solution('''3\n1 2 3\n''') == '4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 1\\n5 3'\nassert solution('''3\n1 2 3\n''') == '4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 1\\n5 3'\nassert solution('''3\n1 2 3\n''') == '4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 1\\n5 3'\nassert solution('''3\n1 2 3\n''') == '4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 1\\n5 3'\n"
    },
    {
        "number": 2139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('bearbtear') == '6'\nassert solution('bearaabearc') == '20'\nassert solution('bear') == '20'\nassert solution('bear') == '20'\nassert solution('bear') == '20'\n"
    },
    {
        "number": 2140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abcdef''') == '''fbdcea'''\nassert solution('''vwxyz''') == '''vwxyz'''\nassert solution('''abcdef''') == '''fbdcea'''\nassert solution('''vwxyz''') == '''vwxyz'''\nassert solution('''abcdef''') == '''fbdcea'''\n"
    },
    {
        "number": 2141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'WBW'\nassert solution('''4''') == 'BBBB'\nassert solution('''5''') == 'BBBBBB'\nassert solution('''6''') == 'BBBBBBBB'\nassert solution('''7''') == 'BBBBBBBBBB'\n"
    },
    {
        "number": 2142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES\\n1 4\\nYES\\n1 3\\nNO\\nYES\\n1 3\\nYES'\n\nassert solution('''5\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES\\n1 4\\nYES\\n1 3\\nNO\\nYES\\n1 3\\nYES'\n\nassert solution('''5\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES\\n1 4\\nYES\\n1 3\\nNO\\nYES\\n1 3\\nYES'\n\nassert solution('''5\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES\\n1 4\\nYES\\n1 3\\nNO\\nYES\\n1 3\\nYES'\n\nassert solution('''5\n4 5\n10 8 6 4\n1 2 3 4 5\n1 1\n3\n3\n1 1\n3\n2\n5 3\n1000 2 2 2 3\n3 1 5\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == 'YES\\n1 4\\nYES\\n1 3\\nNO\\nYES\\n1 3\\nYES'"
    },
    {
        "number": 2143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 9\n5 10\n42 9999999967''') == '6\\n1\\n9999999966'\nassert solution('''1\n1 1\n1 1''') == '1\\n1'\nassert solution('''2\n1 1\n1 1''') == '1\\n1'\nassert solution('''3\n1 1\n1 1''') == '1\\n1'\nassert solution('''4\n1 1\n1 1\n1 1''') == '1\\n1'\n"
    },
    {
        "number": 2145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 2 3''') == '0 1 2'\nassert solution('''5\n1 2 3 4 5''') == '0 1 2 3 4'\nassert solution('''7\n4 4 4 4 7 7 7''') == '0 1 2 1 2 3 3'\nassert solution('''7\n1 2 3 4 5 6 7''') == '0 1 2 1 2 3 3'\nassert solution('''7\n1 2 3 4 5 6 7''') == '0 1 2 1 2 3 3'\n"
    },
    {
        "number": 2147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 2\n1 2 2\n1 2 2\n1 2 2\n2 1 1\n2 1 1\n2 1 1\n2 1 1\n''') == 'YES'\nassert solution('''3\n1 2 3\n1 1 1\n1 1 1\n1 1 1\n2 1 3\n2 2 2\n2 2 2\n2 2 2\n3 1 2\n3 3 3\n3 3 3\n3 3 3\n''') == 'YES'\nassert solution('''4\n1 2 2\n1 1 1\n1 1 1\n1 1 1\n2 1 3\n2 2 2\n2 2 2\n2 2 2\n3 1 2\n3 3 3\n3 3 3\n3 3 3\n''') == 'NO'\nassert solution('''5\n1 2 2\n1 1 1\n1 1 1\n1 1 1\n2 1 3\n2 2 2\n2 2 2\n2 2 2\n3 1 2\n3 3 3\n3 3 3\n3 3 3\n''') == 'YES'\nassert solution('''6\n1 2 2\n1 1 1\n1 1 1\n1 1 1\n2 1 3\n2 2 2\n2 2 2\n2 2 2\n3 1 2\n3 3 3\n3 3 3\n3 3 3\n''') == 'YES'\n"
    },
    {
        "number": 2148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 1 -2 1\n''') == '0 1 2 0 3'\nassert solution('''3\n1000 999999000 -1000000000\n''') == '1000 1000000000 0'\nassert solution('''5\n2 1 2 2 3\n''') == '2 3 5 7 10'\nassert solution('''5\n2 1 2 2 3\n''') == '2 3 5 7 10'\nassert solution('''5\n2 1 2 2 3\n''') == '2 3 5 7 10'\n"
    },
    {
        "number": 2151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'YES\\n3\\n6 54 321\\nYES\\n3\\n1 3 37\\nNO\\nYES\\n2\\n21 22'\nassert solution('''4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO\\n'\nassert solution('''4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO\\n'\nassert solution('''4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO\\n'\nassert solution('''4\n6\n654321\n4\n1337\n2\n33\n4\n2122\n''') == 'NO\\n'\n"
    },
    {
        "number": 2152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '10'\nassert solution('''1 3\n2 2\n3 1''') == '10'\nassert solution('''3\n1 3\n2 1\n3 2''') == '8'\nassert solution('''3\n1 3\n2 1\n3 2''') == '8'\nassert solution('''3\n1 3\n2 1\n3 2\n4 1\n5 2\n6 3''') == '8'\n"
    },
    {
        "number": 2153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 1 4 5') == '3'\nassert solution('4\\n4 2 2 4') == '1'\nassert solution('2\\n1 1') == '1'\nassert solution('5\\n100 1 100 1 100') == '2'\nassert solution('5\\n100 1 100 1 100') == '2'\n"
    },
    {
        "number": 2154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n10 5 4 7 9 12 6 2 10''') == '20'\nassert solution('''20\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4''') == '41'\nassert solution('''9\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4''') == '41'\nassert solution('''9\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4''') == '41'\nassert solution('''9\n3 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4''') == '41'\n"
    },
    {
        "number": 2155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20\n1 0 2 3 5 3 2 1 3 2 3 1 4 2 1 4 2 3 2 4\n''') == '4 5'\nassert solution('''18\n2 2 3 2 4 3 3 3 0 2 4 2 1 3 2 1 1 1\n''') == '3 6'\nassert solution('''6\n2 1 0 2 1 2\n''') == '-1'\nassert solution('''6\n2 1 0 2 1 2\n''') == '-1'\nassert solution('''6\n2 1 0 2 1 2\n''') == '-1'\n"
    },
    {
        "number": 2156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom math import log2"
    },
    {
        "number": 2157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n5 3 2\n1 2\n2 3\n1 3''') == '25'\nassert solution('''5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\nassert solution('''5 3\n5 2 4 1 3\n1 5\n2 3\n2 3\n''') == '33'\n"
    },
    {
        "number": 2158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 1 2''') == '7 3 0 0'\nassert solution('''3\n1 1 1''') == '6 0 0'\nassert solution('''1\n1 1 1''') == '6 0 0'\nassert solution('''2\n1 1 1''') == '6 0 0'\nassert solution('''3\n1 1 1''') == '6 0 0'\n"
    },
    {
        "number": 2160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n5 1 4\n''') == '9'\nassert solution('''4 8\n1 2 3 4 4 3 2 1\n''') == '0'\nassert solution('''100000 1\n42\n''') == '299997'\nassert solution('''1000000 1\n1000000\n''') == '0'\nassert solution('''1000000 1\n1000000\n''') == '0'\n"
    },
    {
        "number": 2161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nivan 1 00123\nmasha 1 00123\n''') == '2\\nmasha 1 00123\\nivan 1 00123\\n'\nassert solution('''3\nkarl 2 612 12\npetr 1 12\nkatya 1 612\n''') == '3\\nkatya 1 612\\npetr 1 12\\nkarl 1 612\\n'\nassert solution('''4\nivan 3 123 123 456\nivan 2 456 456\nivan 8 789 3 23 6 56 9 89 2\ndasha 2 23 789\n''') == '4\\ndasha 2 23 789\\nivan 3 123 123 456\\nivan 2 456 456\\nivan 8 789 3 23 6 56 9 89 2\\n'\nassert solution('''5\nivan 4 789 123 2 456\nivan 8 789 3 23 6 56 9 89 2\ndasha 2 23 789\n''') == '5\\ndasha 2 23 789\\nivan 4 789 123 2 456\\nivan 8 789 3 23 6 56 9 89 2\\n'\nassert solution('''6\nivan 5 123 123 456\nivan 8 789 3 23 6 56 9 89 2\ndasha 2 23 789\n''') == '6\\ndasha 2 23 789\\nivan 5 123 123 456\\nivan 8 789 3 23 6 56 9 89 2\\n'\n"
    },
    {
        "number": 2162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 2\\n3 1\\n4\\n2 5\\n') == '1'\nassert solution('3 2 1\\n3 2 1\\n5 4\\n6\\n') == '0'\nassert solution('2 1 3\\n5 4\\n4\\n1 2 3\\n') == '3'\nassert solution('1 5 1\\n6\\n5 1 2 4 7\\n3\\n') == '2'\nassert solution('1 5 1\\n6\\n5 1 2 4 7\\n3\\n') == '2'\n"
    },
    {
        "number": 2163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 100\n3 10\n50 150\n''') == '6.000000000000000'\nassert solution('''3 9\n5 5 30\n6 6 10\n''') == '40.000000000000000'\nassert solution('''2 12\n1 3\n10 15\n''') == '1.666666666666667'\nassert solution('''2 12\n1 3\n10 15\n1 1 1\n''') == '0.5'\nassert solution('''2 12\n1 3\n10 15\n1 1 1\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 2166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n-1 -1 4 3 -1''') == '2'\nassert solution('''5\n-1 -1 4 3 -1''') == '2'\nassert solution('''5\n-1 -1 4 3 -1''') == '2'\nassert solution('''5\n-1 -1 4 3 -1''') == '2'\nassert solution('''5\n-1 -1 4 3 -1''') == '2'\n"
    },
    {
        "number": 2167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1''') == '1'\nassert solution('''3\n1 4 1''') == '3'\nassert solution('''4\n1 4 1 4\n''') == '3'\nassert solution('''5\n1 4 1 4 1\n''') == '4'\nassert solution('''6\n1 4 1 4 1 4\n''') == '5'\n"
    },
    {
        "number": 2168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n2 4 3\\n2 2 1') == '13'\nassert solution('3\\n2 4 3\\n2 2 1\\n3 1 1 1') == '13'\nassert solution('3\\n2 4 3\\n2 2 1\\n3 1 1 1\\n3 1 1 1') == '13'\nassert solution('3\\n2 4 3\\n2 2 1\\n3 1 1 1\\n3 1 1 1\\n3 1 1 1') == '13'\nassert solution('3\\n2 4 3\\n2 2 1\\n3 1 1 1\\n3 1 1 1\\n3 1 1 1\\n3 1 1 1') == '13'\n"
    },
    {
        "number": 2169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8\n''') == '5'\nassert solution('''3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8\n''') == '5'\nassert solution('''3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8\n''') == '5'\nassert solution('''3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8\n''') == '5'\nassert solution('''3 3 2\n1 4 3\n2 5 7\n8 9 6\n1\n4 8\n''') == '5'\n"
    },
    {
        "number": 2170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 2171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0) == \"yes\"\nassert solution(1) == \"yes\"\nassert solution(2) == \"no\"\nassert solution(3) == \"yes\"\nassert solution(4) == \"yes\"\n"
    },
    {
        "number": 2172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''codeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest''') == 'codeforces round letter round'\nassert solution('''joll wuqrd\neuzf un\nhbnyiyc rsoqqveh\nhbnyiyc joll joll euzf joll''') == 'hbnyiyc joll joll un joll'\nassert solution('''codeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest''') == 'codeforces round letter round'\nassert solution('''joll wuqrd\neuzf un\nhbnyiyc rsoqqveh\nhbnyiyc joll joll euzf joll''') == 'hbnyiyc joll joll un joll'\nassert solution('''codeforces codesecrof\ncontest round\nletter message\ncodeforces contest letter contest''') == 'codeforces round letter round'\n"
    },
    {
        "number": 2173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 1 1''') == '5 1 2'\nassert solution('''1\n1000000000''') == '1000000000'\nassert solution('''2\n1000000000''') == '1000000000'\nassert solution('''3\n1000000000''') == '1000000000'\nassert solution('''4\n1000000000''') == '1000000000'\n"
    },
    {
        "number": 2174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n3 0') == '2'\nassert solution('3\\n-1 -1 2') == '6'\nassert solution('3\\n-1 -1 2\\n-1 -1 2') == '6'\nassert solution('3\\n-1 -1 2\\n-1 -1 2') == '6'\nassert solution('3\\n-1 -1 2\\n-1 -1 2\\n-1 -1 2') == '6'\n"
    },
    {
        "number": 2175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n5 10\n6\n1 1 4\n2 1\n1 2 5\n1 1 4\n2 1\n2 2\n''') == '4\\n5\\n8\\n'\nassert solution('''3\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n''') == '7\\n10\\n5\\n'\nassert solution('''4\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n2 4\n''') == '7\\n10\\n5\\n8\\n'\nassert solution('''5\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n2 4\n2 5\n''') == '7\\n10\\n5\\n8\\n12\\n'\nassert solution('''6\n5 10 8\n6\n1 1 12\n2 2\n1 1 6\n1 3 2\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '7\\n10\\n5\\n8\\n12\\n6\\n'\n"
    },
    {
        "number": 2176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 1\n''') == '3'\nassert solution('''4\n2 3\n2 2\n2 1\n2 4\n''') == '0'\nassert solution('''3\n1 1\n1 1\n2 3\n''') == '4'\nassert solution('''3\n1 1\n1 1\n2 3\n''') == '4'\nassert solution('''3\n1 1\n1 1\n2 3\n''') == '4'\n"
    },
    {
        "number": 2177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 1\n2 3 1\n1 3 2\n3\n1 2\n2 3\n3\n''') == '2'\nassert solution('''4 4\n1 2 1\n2 3 1\n3 4 1\n4 1 2\n4\n1 2\n2 3\n3\n''') == '4 3 2'\nassert solution('''5 5\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n4 5\n5\n1 2\n2 3\n3 4\n"
    },
    {
        "number": 2180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '2'\nassert solution('''1''') == '1'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 2181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n2\n''') == '''1.0000000000 2.0000000000\n2.0000000000 0.0000000000\n'''\n\nassert solution('''4.147 2.8819\n6\n''') == '''2.8819000000 0.0000000000\n4.1470000000 1.6168000000\n3.7953000000 4.1470000000\n0.9134000000 4.1470000000\n0.0000000000 2.1785000000\n0.7034000000 0.0000000000\n'''\n\nassert solution('''2.5 2.5\n2\n''') == '''1.0000000000 1.0000000000\n1.0000000000 0.0000000000\n'''\n\nassert solution('''2.5 2.5\n3\n''') == '''1.0000000000 1.0000000000\n1.0000000000 0.0000000000\n1.0000000000 1.0000000000\n0.0000000000 1.0000000000\n0.0000000000 0.0000000000\n'''\n\nassert solution('''2.5 2.5\n4\n''') == '''1.0000000000 1.0000000000\n1.0000000000 0.0000000000\n1.0000000000 1.0000000000\n1.0000000000 0.0000000000\n1.0000000000 1.0000000000\n0.0000000000 1.0000000000\n0.0000000000 0.0000000000\n'''"
    },
    {
        "number": 2182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n603\\n006\\n205\\n228\\n1053\\n0000000000000000000000000000000000000000000000') =='red\\nred\\ncyan\\ncyan\\ncyan\\nred'\nassert solution('6\\n603\\n006\\n205\\n228\\n1053\\n0000000000000000000000000000000000000000000000') =='red\\nred\\ncyan\\ncyan\\ncyan\\nred'\nassert solution('6\\n603\\n006\\n205\\n228\\n1053\\n0000000000000000000000000000000000000000000000') =='red\\nred\\ncyan\\ncyan\\ncyan\\nred'\nassert solution('6\\n603\\n006\\n205\\n228\\n1053\\n0000000000000000000000000000000000000000000000') =='red\\nred\\ncyan\\ncyan\\ncyan\\nred'\nassert solution('6\\n603\\n006\\n205\\n228\\n1053\\n0000000000000000000000000000000000000000000000') =='red\\nred\\ncyan\\ncyan\\ncyan\\nred'\n"
    },
    {
        "number": 2183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1') == '2'\n"
    },
    {
        "number": 2184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n00110011\n00000111\n11110000\n00011111\n''') == 'y'\nassert solution('''\n00110011\n00000111\n11110000\n00011111\n''') == 'x'\nassert solution('''\n00110011\n00000111\n11110000\n00011111\n''') == 'y'\nassert solution('''\n00110011\n00000111\n11110000\n00011111\n''') == 'x'\nassert solution('''\n00110011\n00000111\n11110000\n00011111\n''') == 'y'\n"
    },
    {
        "number": 2185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'YES'\n\nassert solution('''4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'NO'\n\nassert solution('''4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'NO'\n\nassert solution('''4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'YES'\n\nassert solution('''4\n6\n3 7 1 4 1 2\n3 7 3 6 3 2\n5\n1 1 1 1 1\n1 2 1 3 1\n2\n42 42\n42 42\n1\n7\n6\n''') == 'YES'"
    },
    {
        "number": 2186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n''') == 'YES\\nNO\\nNO\\n'\nassert solution('''2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n''') == 'NO\\nNO\\nNO\\n'\nassert solution('''2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n''') == 'NO\\nNO\\nNO\\n'\nassert solution('''2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n''') == 'NO\\nNO\\nNO\\n'\nassert solution('''2 3\naaaaa\nacacaca\naabaa\nccacacc\ncaaac\n''') == 'NO\\nNO\\nNO\\n'\n"
    },
    {
        "number": 2187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 7\n6 4\n2 10\n9 8\n3 5''') == '3\\n1 5 3'\nassert solution('''3\n5 4\n3 2\n6 1''') == '3\\n3 2 1'\nassert solution('''10\n1 2\n3 4\n5 6\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422 423\n423 424\n424 425\n425 426\n426 427\n427 428\n428 429\n429 430\n430 431\n431 432\n432 433\n433 434\n434 435\n435 436\n436 437\n437 438\n438 439\n439 440\n440 441\n441"
    },
    {
        "number": 2189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n1 3\n3 2''') == '1 3 2'\nassert solution('''4 5\n3 1\n2 1\n2 3\n4 5''') == '3 1 2 4 5'\nassert solution('''5 4\n3 1\n2 1\n2 3\n4 5\n3 4\n2 4\n''') == '3 1 2 4 5'\nassert solution('''6 4\n3 1\n2 1\n2 3\n4 5\n3 4\n2 4\n3 5\n4 5\n''') == '3 1 2 4 5'\nassert solution('''7 4\n3 1\n2 1\n2 3\n4 5\n3 4\n2 4\n3 5\n4 5\n3 6\n2 4\n''') == '3 1 2 4 5'\n"
    },
    {
        "number": 2190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '0'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\n"
    },
    {
        "number": 2191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n11?000''') == '6 3 2 1 0 0'\nassert solution('''5\n01?01''') == '5 1 0 0 0'\nassert solution('''12\n???1??????1?''') == '12 6 4 3 2 2 1 1 1 1 1 1'\nassert solution('''12\n???1??????1?''') == '12 6 4 3 2 2 1 1 1 1 1 1'\nassert solution('''12\n???1??????1?''') == '12 6 4 3 2 2 1 1 1 1 1 1'\n"
    },
    {
        "number": 2192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n4\n3 2\n''') == '1.00000000 3.00000000 5.00000000\\n3.00000000 5.00000000 7.00000000\\n5.00000000 7.00000000 9.00000000\\n0.00000000 -1.00000000 -2.00000000\\n1.00000000 0.00000000 -1.00000000\\n2.00000000 1.00000000 0.00000000'\nassert solution('''2\n1 4\n3 2\n''') == '1.00000000 3.00000000 5.00000000\\n3.00000000 5.00000000 7.00000000\\n5.00000000 7.00000000 9.00000000\\n0.00000000 -1.00000000 -2.00000000\\n1.00000000 0.00000000 -1.00000000\\n2.00000000 1.00000000 0.00000000'\nassert solution('''3\n1 2 3\n4 5 6\n7 8 9\n''') == '1.00000000 3.00000000 5.00000000\\n3.00000000 5.00000000 7.00000000\\n5.00000000 7.00000000 9.00000000\\n0.00000000 -1.00000000 -2.00000000\\n1.00000000 0.00000000 -1.00000000\\n2.00000000 1.00000000 0.00000000'\nassert solution('''4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '1.00000000 3.00000000 5.00000000\\n3.00000000 5.00000000 7.00000000\\n5.00000000 7.00000000 9.00000000\\n0.00000000 -1.00000000 -2.00000000\\n1.00000000 0.00000000 -1.00000000\\n2.00000000 1.00000000 0.00000000'\nassert solution('''5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n''') == '1.00000000 3.00000000 5.00000000\\n3.00000000 5.00000000 7.00000000\\n5.00000000 7.00000000 9.00000000\\n0.00000000 -1.00000000 -2.00000000\\n1.00000000 0.00000000 -1.00000000\\n2.00000000 1.00000000 0.00000000'\n"
    },
    {
        "number": 2193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 2 0\n1 3 1\n2 3 0\n2 3 1''') == '2'\nassert solution('''4 8\n1 1 0\n1 3 0\n1 3 1\n3 2 0\n2 1 0\n3 4 1\n2 4 0\n2 4 1''') == '3'\nassert solution('''5 10\n1 2 0\n1 3 1\n1 4 0\n2 3 0\n2 3 1\n2 5 0\n3 4 0\n3 4 1\n4 2 1\n4 5 0''') == '-1'\nassert solution('''5 10\n1 2 0\n1 3 1\n1 4 0\n2 3 0\n2 3 1\n2 5 0\n3 4 0\n3 4 1\n4 2 1\n4 5 0''') == '11111'\nassert solution('''5 10\n1 2 0\n1 3 1\n1 4 0\n2 3 0\n2 3 1\n2 5 0\n3 4 0\n3 4 1\n4 2 1\n4 5 0''') == '11111'\n"
    },
    {
        "number": 2194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n7 4 9 9\n1 2 8\n3 1\n4 2 4\n''') == '24'\nassert solution('''3 8\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '29'\nassert solution('''3 8\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '29'\nassert solution('''3 8\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '29'\nassert solution('''3 8\n7 0 8 8 7 1 5 2\n4 3 7\n2 1\n3 2\n4 1 6\n2 3\n1 5 16\n4 8 8\n3 0\n''') == '29'\n"
    },
    {
        "number": 2195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n391 555\n0 0''') == '1337'\nassert solution('''9 4\n0 0''') == '0'\nassert solution('''1 3\n391 555\n9 4''') == '1337'\nassert solution('''1 3\n391 555\n1 1''') == '0'\nassert solution('''1 3\n391 555\n1 1''') == '0'\n"
    },
    {
        "number": 2196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 1 1 1') == '0'\nassert solution('1 3') == '3'\nassert solution('1 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '0'\nassert solution('1 1 1 1 1 1') == '0'\n"
    },
    {
        "number": 2197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".b..bz....\") == \"hb.bz[..]..\"\nassert solution(\".cc.\") == \".\"\nassert solution(\".cc.\") == \".\"\nassert solution(\".cc.\") == \".\"\nassert solution(\".cc.\") == \".\"\n"
    },
    {
        "number": 2199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n2\n1 4\n2\n1 8\n2''') == '0.0000000000\\n0.5000000000\\n3.0000000000'\nassert solution('''1 1\n1 4\n1 5\n2\n''') == '2.0000000000'\nassert solution('''1 1\n1 4\n1 5\n2\n''') == '2.0000000000'\nassert solution('''1 1\n1 4\n1 5\n2\n''') == '2.0000000000'\nassert solution('''1 1\n1 4\n1 5\n2\n''') == '2.0000000000'\n"
    },
    {
        "number": 2200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 4\n12 6 11 9 1''') == '0 2 3 1 1'\nassert solution('''3 1 2\n1 2 3''') == '1 0 1'\nassert solution('''1 1 1\n1''') == '0'\nassert solution('''1 1 1\n1''') == '0'\nassert solution('''1 1 1\n1''') == '0'\n"
    },
    {
        "number": 2201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n3 4 6 0\n''') == '7'\n\nassert solution('''4 3\n4 10 14 1\n3 6 6 0\n2 3 3 1\n''') == '14'\n\nassert solution('''4 2\n3 4 5 1\n2 3 3 1\n''') == 'Data not sufficient!'\n\nassert solution('''4 2\n3 4 5 1\n2 3 3 1\n''') == 'Game cheated!'\n\nassert solution('''4 2\n3 4 5 1\n2 3 3 1\n''') == 'Data not sufficient!'"
    },
    {
        "number": 2204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 2205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3''') == '3'\nassert solution('''1\n1''') == '1'\nassert solution('''1\n2''') == '2'\nassert solution('''1\n2\n3''') == '6'\nassert solution('''1\n2\n3\n4''') == '10'\n"
    },
    {
        "number": 2206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 1\n0 0 1\n1 1 0\n1 1 0''') == '1'\nassert solution('''0 0 1\n0 0 1\n1 1 0\n1 1 0''') == '0'\nassert solution('''0 0 1\n0 0 1\n1 1 0\n1 1 0''') == '0'\nassert solution('''0 0 1\n0 0 1\n1 1 0\n1 1 0''') == '0'\nassert solution('''0 0 1\n0 0 1\n1 1 0\n1 1 0''') == '0'\n"
    },
    {
        "number": 2207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 7\n.......\n.......\n.BB.B..\n''') == '2'\n\nassert solution('''4 5\n..B..\nB.B.B\nBBB.B\nBBBBBB\n''') == '2'\n\nassert solution('''4 6\n..B...\nB.B.BB\nBBB.BB\nBBBBBB\n''') == '1'\n\nassert solution('''1 1\nB\n''') == '1'\n\nassert solution('''10 7\n.......\n.......\n.......\n.......\n.......\n.......\n.......\n...B...\nB.BB.B.\n''') == '3'"
    },
    {
        "number": 2208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 3 2 1 4\n6 7 1 2 3 2\n''') == '2'\nassert solution('''3\n3 3 3\n1 1 1\n''') == '0'\nassert solution('''3\n3 3 3\n1 1 1\n''') == '0'\nassert solution('''3\n3 3 3\n1 1 1\n''') == '0'\nassert solution('''3\n3 3 3\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 2209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) =='sssshhshhhs'\n\n\"\"\""
    },
    {
        "number": 2210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n3 1\n2 1\n3 1''') == 'Ashish'\nassert solution('''1\n3 2\n1 2\n1 3\n''') == 'Ayush'\nassert solution('''1\n3 2\n1 2\n1 3\n''') == 'Ashish'\nassert solution('''1\n3 2\n1 2\n1 3\n''') == 'Ayush'\nassert solution('''1\n3 2\n1 2\n1 3\n''') == 'Ashish'\n"
    },
    {
        "number": 2211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''aaab\n2\naa 0 0\naab 1 1\n''') == '3'\n\nassert solution('''ltntlnen\n3\nn 0 0\nttlneenl 1 4\nlelllt 1 1\n''') == '2'\n\nassert solution('''a\n0\n''') == '1'\n\nassert solution('''a\n0\n''') == '1'\n\nassert solution('''a\n0\n''') == '1'"
    },
    {
        "number": 2212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''3''') == '2 1 4'\nassert solution('''5''') == '3 5 7'\nassert solution('''7''') == '6 9 8'\nassert solution('''9''') == '10 11 12 13 14 15 16 17 18 19'\n"
    },
    {
        "number": 2213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 2215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 3\n2 4\n2 5''') == '01100'\nassert solution('''6 3\n5 6\n1 4\n4 6''') == '110010'\nassert solution('''6 3\n5 6\n1 4\n4 6\n1 4\n4 6''') == '110010'\nassert solution('''6 3\n5 6\n1 4\n4 6\n1 4\n4 6''') == '110010'\nassert solution('''6 3\n5 6\n1 4\n4 6\n1 4\n4 6\n1 4\n4 6''') == '110010'\n"
    },
    {
        "number": 2216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 3''') == '''3 1 1 1 2 1 3\n3 2 1 2 2 2 3\n3 3 1 3 2 3 3'''\nassert solution('''2 3 1''') == '''6 1 1 1 2 1 3 2 3 2 2 2 1'''\nassert solution('''2 3 2''') == '''6 1 1 1 2 1 3 2 3 2 2 2 1'''\nassert solution('''2 3 3''') == '''6 1 1 1 2 1 3 2 3 2 2 2 1'''\nassert solution('''2 3 4''') == '''6 1 1 1 2 1 3 2 3 2 2 2 1'''\n"
    },
    {
        "number": 2217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12''') == '1'\nassert solution('''288807105787200''') == '547558588'\nassert solution('''1''') == '1'\nassert solution('''1 1''') == '1'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 2218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n''') == '1 1\\n1 2\\n2 3 2'\nassert solution('''2 1\n7 12\n''') == '1 12\\n1 2'\nassert solution('''3 3\n1 2 3\n''') == '1 1\\n1 2\\n1 3'\nassert solution('''3 3\n1 2 3\n''') == '1 1\\n1 2\\n1 3'\nassert solution('''3 3\n1 2 3\n''') == '1 1\\n1 2\\n1 3'\n"
    },
    {
        "number": 2219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 0 1 1 0 1\n1 2 2 2 2\n''') == '1'\n\nassert solution('''5\n1 0 1 0 1\n1 1 1 1\n''') == '4'\n\nassert solution('''8\n1 0 0 1 0 1 1 0\n1 1 2 2 3 3 3\n''') == '5'\n\nassert solution('''9\n1 1 0 0 1 0 1 0 1\n1 1 2 2 3 3 4 4\n''') == '4'\n\nassert solution('''9\n1 1 0 0 1 0 1 0 1\n1 1 2 2 3 3 4 4\n''') == '5'"
    },
    {
        "number": 2223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n2 4\\n4 1\\n3 1\\n') == '1'\nassert solution('3\\n1 2\\n1 3\\n') == '-1'\nassert solution('10\\n7 1\\n8 4\\n8 10\\n4 7\\n6 5\\n9 3\\n3 5\\n2 10\\n2 5\\n') == '4'\nassert solution('2\\n1 2\\n') == '0'\nassert solution('10\\n7 1\\n8 4\\n8 10\\n4 7\\n6 5\\n9 3\\n3 5\\n2 10\\n2 5\\n') == '-1'\n"
    },
    {
        "number": 2224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 3''') == '3'\nassert solution('''1 2\n1 5''') == '3'\nassert solution('''2 3\n1 2''') == '0'\nassert solution('''3 4\n1 2\n1 5''') == '3'\nassert solution('''4 5\n1 2\n1 5''') == '3'\n"
    },
    {
        "number": 2225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1\\n3\\n3\\n3'\nassert solution('''2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1\\n3\\n3\\n3'\nassert solution('''2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1\\n3\\n3\\n3'\nassert solution('''2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1\\n3\\n3\\n3'\nassert solution('''2 4\n1 6 3 5\n1 4\n3 4\n1 2\n1 2\n''') == '1\\n3\\n3\\n3'\n"
    },
    {
        "number": 2226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 8 25\n1 2 1\n2 3 10\n3 4 2\n1 5 2\n5 6 7\n6 4 15\n5 3 1\n1 7 3\n''') == '4361'\n\nassert solution('''2 1 5\n1 2 4\n\n''') == '60'\n\nassert solution('''15 15 23\n13 10 12\n11 14 12\n2 15 5\n4 10 8\n10 2 4\n10 7 5\n3 10 1\n5 6 11\n1 13 8\n9 15 4\n4 2 9\n11 15 1\n11 12 14\n10 8 12\n3 6 11\n''') == '3250'\n\nassert solution('''5 10 10000000\n2 4 798\n1 5 824\n5 2 558\n4 1 288\n3 4 1890\n3 1 134\n2 3 1485\n4 5 284\n3 5 1025\n1 2 649\n''') == '768500592'\n\nassert solution('''15 15 23\n13 10 12\n11 14 12\n2 15 5\n4 10 8\n10 2 4\n10 7 5\n3 10 1\n5 6 11\n1 13 8\n9 15 4\n4 2 9\n11 15 1\n11 12 14\n10 8 12\n3 6 11\n''') == '3250'"
    },
    {
        "number": 2227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"heavymetalisheavymetal\") == \"3\"\nassert solution(\"heavymetalismetal\") == \"2\"\nassert solution(\"trueheavymetalissotruewellitisalsosoheavythatyoucanalmostfeeltheweightofmetalonyou\") == \"3\"\nassert solution(\"heavymetalismetal\") == \"2\"\nassert solution(\"heavymetalismetal\") == \"2\"\n"
    },
    {
        "number": 2228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 5\n2 4\n5 6''') == '2 2'\nassert solution('''4\n3 4\n4 5\n4 6\n8 10''') == '4 2'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '1 1'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '1 1'\nassert solution('''7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '1 1'\n"
    },
    {
        "number": 2229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 3 5 4 13\n''') == '2 3 5 7 11'\nassert solution('''3\n10 3 7\n''') == '10 3 7'\nassert solution('''3\n10 3 7\n''') == '10 3 7'\nassert solution('''3\n10 3 7\n''') == '10 3 7'\nassert solution('''3\n10 3 7\n''') == '10 3 7'\n"
    },
    {
        "number": 2230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1 4\\n2 3'\nassert solution('4') == '1 4\\n2 3\\n4 3\\n6 5'\nassert solution('6') == '1 4\\n2 3\\n4 3\\n6 5\\n8 7'\nassert solution('8') == '1 4\\n2 3\\n4 3\\n6 5\\n8 7\\n10 9'\nassert solution('10') == '1 4\\n2 3\\n4 3\\n6 5\\n8 7\\n10 9\\n14 15'\n"
    },
    {
        "number": 2231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n7 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5 5\n''') == '2 7 7 2\\n2 2 1 1\\n5 5 5 5'\nassert solution('''4\n7\n2 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5 5\n''') == '2 7 7 2\\n2 2 1 1\\n5 5 5 5'\nassert solution('''4\n7\n2 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5 5\n''') == '2 7 7 2\\n2 2 1 1\\n5 5 5 5'\nassert solution('''4\n7\n2 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5 5\n''') == '2 7 7 2\\n2 2 1 1\\n5 5 5 5'\nassert solution('''4\n7\n2 2 2 7\n8\n2 8 1 4 8 2 1 5\n5\n5 5 5 5 5\n''') == '2 7 7 2\\n2 2 1 1\\n5 5 5 5'\n"
    },
    {
        "number": 2232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 4\n1 5\n1 6\n2 3\n2 4\n4 7\n''') == '3 6'\nassert solution('''9\n9 3\n3 5\n1 2\n4 3\n4 7\n1 7\n4 6\n3 8\n''') == '2 9'\nassert solution('''10\n6 8\n10 3\n3 7\n5 8\n1 7\n7 2\n2 9\n2 8\n1 4\n''') == '10 6'\nassert solution('''11\n1 2\n2 3\n3 4\n1 5\n1 6\n6 7\n5 8\n5 9\n4 10\n4 11\n''') == '9 11'\nassert solution('''6\n6 3\n3 5\n1 2\n4 3\n4 7\n1 7\n4 6\n3 8\n''') == '2 9'\n"
    },
    {
        "number": 2233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 2235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5 0 -5''') == '1'\nassert solution('''4\n-1 0 1 0''') == '2'\nassert solution('''4\n1 2 3 -6''') == '3'\nassert solution('''4\n1 2 3 -5''') == '2'\nassert solution('''4\n1 2 3 -4''') == '2'\n"
    },
    {
        "number": 2237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3') == '0 1 3 2'\nassert solution('1 2 3 4') == '3'\nassert solution('2 4') == '0 2 1 3 6 7 5 4'\nassert solution('1') == '0'\n"
    },
    {
        "number": 2238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '*D*'\nassert solution('''5''') == '**D**'\nassert solution('''7''') == '***D***'\nassert solution('''9''') == '****D****'\nassert solution('''11''') == '********D********'\n"
    },
    {
        "number": 2239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2\n13\n37\n100''') == '1\\n3\\n8\\n27'\nassert solution('''4\n2\n13\n37\n100\n1\n3\n8\n27''') == '1\\n3\\n8\\n27'\nassert solution('''4\n2\n13\n37\n100\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n27\n1\n3\n8\n"
    },
    {
        "number": 2240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('01') == '0'\nassert solution('aaaaa') == '4'\nassert solution('kokokokotlin') == '2'\nassert solution('001') == '0'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 2241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 2\n2 2 3\n''') == '4'\nassert solution('''1\n2\n5\n''') == '-1'\nassert solution('''1\n2\n5\n''') == '-1'\nassert solution('''1\n2\n5\n''') == '-1'\nassert solution('''1\n2\n5\n''') == '-1'\n"
    },
    {
        "number": 2242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1817181712114') == '3'\nassert solution('1817181712114') == '3'\nassert solution('1817181712114') == '3'\nassert solution('1817181712114') == '3'\nassert solution('1817181712114') == '3'\n"
    },
    {
        "number": 2243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 8\n300 950 500 200\n1 3\n2 4\n2 3\n1 1\n1 2\n2 4\n2 3''') == 'NO\\nNO\\nNO\\nYES\\nYES\\n'\nassert solution('''6 3 9\n50 20 51 17 99 24\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3''') == 'NO\\nNO\\nNO\\nYES\\nYES\\n'\nassert solution('''6 3 9\n50 20 51 17 99 24\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3''') == 'NO\\nNO\\nNO\\nYES\\nYES\\n'\nassert solution('''6 3 9\n50 20 51 17 99 24\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3''') == 'NO\\nNO\\nNO\\nYES\\nYES\\n'\nassert solution('''6 3 9\n50 20 51 17 99 24\n1 3\n1 4\n1 5\n1 2\n2 4\n2 2\n1 1\n2 4\n2 3''') == 'NO\\nNO\\nNO\\nYES\\nYES\\n'\n"
    },
    {
        "number": 2244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2\n''') == '2 1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '2 1 3'\nassert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n''') == '2 1 3 4'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '2 1 3 4 5'\nassert solution('''6 6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 1\n''') == '2 1 3 4 5 6'\n"
    },
    {
        "number": 2245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 3\n3 3\n3 4\n4 4''') == 'Bob'\nassert solution('''0 3\n3 3\n3 4\n4 4''') == 'Alice'\nassert solution('''0 3\n3 3\n3 4\n4 4''') == 'Bob'\nassert solution('''0 3\n3 3\n3 4\n4 4''') == 'Alice'\nassert solution('''0 3\n3 3\n3 4\n4 4''') == 'Bob'\n"
    },
    {
        "number": 2246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 3\n2 4\n''') == '1.500000000000000'\nassert solution('''5\n1 2\n1 3\n3 4\n2 5\n''') == '2.000000000000000'\nassert solution('''1\n1\n''') == '0.0'\nassert solution('''2\n1\n2\n''') == '0.5'\nassert solution('''3\n1\n2\n3\n''') == '1.5'\n"
    },
    {
        "number": 2247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3 1 1''') == '13'\nassert solution('''1000000000 1 1000000000 1''') == '1000000001000000000'\nassert solution('''1000000000 1 1000000000 1''') == '1000000001000000000'\nassert solution('''1000000000 1 1000000000 1''') == '1000000001000000000'\nassert solution('''1000000000 1 1000000000 1''') == '1000000001000000000'\n"
    },
    {
        "number": 2248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n1 3\n1 4\n''') == '2'\nassert solution('''5 4\n1 2\n2 3\n3 4\n3 5\n''') == '3'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 2249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '0'\nassert solution('''4\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '1'\nassert solution('''4\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '1'\nassert solution('''4\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '1'\nassert solution('''4\n4\nRLRL\n6\nLRRRRL\n8\nRLLRRRLL\n12\nLLLLRRLRRRLL\n5\nRRRRR\n''') == '1'\n"
    },
    {
        "number": 2251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 2 1\n1 2 2\n2 3 1\n2 3 3\n2 4 3\n3\n1 2\n3 4\n1 4\n''') == '''2\n1\n0\n'''\n\nassert solution('''5 7\n1 5 1\n2 5 1\n3 5 1\n4 5 1\n1 2 2\n2 3 2\n3 4 2\n5\n1 5\n5 1\n2 5\n1 5\n1 4\n''') == '''1\n1\n1\n1\n2\n'''\n\nassert solution('''5 7\n1 5 1\n2 5 1\n3 5 1\n4 5 1\n1 2 2\n2 3 2\n3 4 2\n5\n1 5\n5 1\n2 5\n1 5\n1 4\n''') == '''1\n1\n1\n1\n2\n'''\n\nassert solution('''5 7\n1 5 1\n2 5 1\n3 5 1\n4 5 1\n1 2 2\n2 3 2\n3 4 2\n5\n1 5\n5 1\n2 5\n1 5\n1 4\n''') == '''1\n1\n1\n1\n2\n'''\n\nassert solution('''5 7\n1 5 1\n2 5 1\n3 5 1\n4 5 1\n1 2 2\n2 3 2\n3 4 2\n5\n1 5\n5 1\n2 5\n1 5\n1 4\n''') == '''1\n1\n1\n1\n2\n'''"
    },
    {
        "number": 2252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n5 4 3 2 1\n1 5 3\n1 3 1\n2 4 3\n4 4 4\n2 5 3\n''') == 'Yes\\nNo\\nYes\\nYes\\nNo'\nassert solution('''6 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes'\nassert solution('''6 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes'\nassert solution('''6 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes'\nassert solution('''6 5\n1 4 3 2 5 6\n2 4 3\n1 6 2\n4 5 4\n1 3 3\n2 6 3\n''') == 'Yes\\nNo\\nYes\\nNo\\nYes'\n"
    },
    {
        "number": 2253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('kamusta_po') == 'FILIPINO'\nassert solution('genki_desu') == 'JAPANESE'\nassert solution('ohayou_gozaimasu') == 'JAPANESE'\nassert solution('annyeong_hashimnida') == 'KOREAN'\nassert solution('hajime_no_ippo') == 'JAPANESE'\n"
    },
    {
        "number": 2254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n6 7 14''') == '2'\nassert solution('''4\n1 2 1 16''') == '4'\nassert solution('''4\n1 2 1 16''') == '4'\nassert solution('''4\n1 2 1 16''') == '4'\nassert solution('''4\n1 2 1 16''') == '4'\n"
    },
    {
        "number": 2255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n1 3\n''') == '1 2 3'\nassert solution('''5 5\n1 4\n3 4\n5 4\n3 2\n1 5\n''') == '1 4 3 2 5'\nassert solution('''10 10\n1 4\n6 8\n2 5\n3 7\n9 4\n5 6\n3 4\n8 10\n8 9\n1 10\n''') == '1 4 3 7 9 8 6 5 2 10'\nassert solution('''100 100\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 39"
    },
    {
        "number": 2256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 2257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 -1 0 5 3\n0 2\n5 2''') == '6'\nassert solution('''4 0 0 5 0\n9 4\n8 3\n-1 0\n1 4''') == '33'\nassert solution('''2 -1 0 5 3\n0 2\n5 2\n-1 0\n1 4''') == '33'\nassert solution('''2 -1 0 5 3\n0 2\n5 2\n-1 0\n1 4\n-1 0\n1 4''') == '33'\nassert solution('''2 -1 0 5 3\n0 2\n5 2\n-1 0\n1 4\n-1 0\n1 4\n-1 0\n1 4''') == '33'\n"
    },
    {
        "number": 2258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2''') == '2'\nassert solution('''4\n1 8 1 6''') == '2'\nassert solution('''5\n1 1 1 2 2''') == '0'\nassert solution('''6\n1 1 1 2 2 3''') == '0'\nassert solution('''7\n1 1 1 2 2 3 3''') == '0'\n"
    },
    {
        "number": 2259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1 2''') == '2'\nassert solution('''3\n3 1 2''') == '2'\nassert solution('''3\n3 1 2''') == '2'\nassert solution('''3\n3 1 2''') == '2'\nassert solution('''3\n3 1 2''') == '2'\n"
    },
    {
        "number": 2260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '25'\nassert solution('1') == '5'\nassert solution('2') == '10'\nassert solution('3') == '15'\nassert solution('4') == '20'\n"
    },
    {
        "number": 2261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '++**\\n+*+*\\n++++\\n+**+'\nassert solution('3') == '++**\\n+*+*\\n++++\\n+**+\\n+++++\\n++++++'\nassert solution('4') == '++**\\n+*+*\\n++++\\n+**+\\n++++\\n+++++\\n++++++'\nassert solution('5') == '++**\\n+*+*\\n++++\\n+**+\\n++++\\n+++++\\n++++++\\n+++++++'\nassert solution('6') == '++**\\n+*+*\\n++++\\n+**+\\n++++\\n+++++\\n++++++\\n+++++++\\n+++++++*'\n"
    },
    {
        "number": 2262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\na aa aaa ab abb\n''') == '2'\nassert solution('''3\namer arem mrea\n''') == '1'\nassert solution('''1\na\n''') == '1'\nassert solution('''2\na\na\n''') == '2'\nassert solution('''3\na\na\na\n''') == '3'\n"
    },
    {
        "number": 2263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nfrom sys import stdin, stdout\nfrom math import ceil, log"
    },
    {
        "number": 2264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1''') == '2'\nassert solution('''4\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1''') == '4'\nassert solution('''4\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1''') == '0'\nassert solution('''4\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1''') == '0'\nassert solution('''4\n3\n4 5\n5 9\n7 7\n5\n11 19\n4 17\n16 16\n3 12\n14 17\n1\n1 10\n1\n1 1''') == '0'\n"
    },
    {
        "number": 2265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\""
    },
    {
        "number": 2266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2 4\n1 6\n1 2\n2 3\n3 4\n4 5\n5 6''') == '1'\nassert solution('''6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6''') in ('4 5', '5 4')\nassert solution('''6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6''') == '2'\nassert solution('''6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6''') == '4 5'\nassert solution('''6 3 2\n1 5 6\n1 2\n1 3\n1 4\n1 5\n5 6''') == '5 4'\n"
    },
    {
        "number": 2267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nabba\nabacaba\nbcd\ner''') == 'abacabaabbabcder'\nassert solution('''5\nx\nxx\nxxa\nxxaa\nxxaaa''') == 'xxaaaxxaaxxaxxx'\nassert solution('''3\nc\ncb\ncba''') == 'cbacbc'\nassert solution('''1\na''') == 'a'\nassert solution('''2\nab''') == 'ab'\n"
    },
    {
        "number": 2268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 1\npolice\np m\n''') =='molice'\n\nassert solution('''11 6\nabacabadaba\na b\nb c\na d\ne g\nf a\nb b\n''') == 'cdcbcdcfcdc'\n\nassert solution('''11 6\nabacabadaba\na b\nb c\na d\ne g\nf a\nb b\n''') == 'cdcbcdcfcdc'\n\nassert solution('''11 6\nabacabadaba\na b\nb c\na d\ne g\nf a\nb b\n''') == 'cdcbcdcfcdc'\n\nassert solution('''11 6\nabacabadaba\na b\nb c\na d\ne g\nf a\nb b\n''') == 'cdcbcdcfcdc'"
    },
    {
        "number": 2269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123') == 3\nassert solution('12222133333332') == 3\nassert solution('112233') == 4\nassert solution('332211') == 4\nassert solution('12121212') == 4\n"
    },
    {
        "number": 2270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2''') == 'NO'\nassert solution('''6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2''') == 'YES'\nassert solution('''6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2''') == 'NO'\nassert solution('''6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2''') == 'YES'\nassert solution('''6\n1 1 1 2 1 1\n6\n+ 2\n+ 1\n- 1\n+ 2\n- 1\n+ 2''') == 'NO'\n"
    },
    {
        "number": 2271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 3\n1 4\n''') == '3'\nassert solution('''5\n1 2\n2 3\n3 4\n3 5\n''') == '4'\nassert solution('''1\n1\n''') == '1'\nassert solution('''2\n1 2\n2 3\n''') == '2'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == '3'\n"
    },
    {
        "number": 2272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 5\n1 5 11\n2 1 2\n1 2 9\n2 1 2''') == 'NO'\nassert solution('''1 1 5\n1 5 11\n2 1 2\n1 2 9\n2 1 2''') == 'YES'\nassert solution('''1 1 5\n1 5 11\n2 1 2\n1 2 9\n2 1 2''') == 'NO'\nassert solution('''1 1 5\n1 5 11\n2 1 2\n1 2 9\n2 1 2''') == 'YES'\nassert solution('''1 1 5\n1 5 11\n2 1 2\n1 2 9\n2 1 2''') == 'NO'\n"
    },
    {
        "number": 2273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 2274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n4\nPPAP\n''') == '1'\n\nassert solution('''3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n''') == '4'\n\nassert solution('''3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n''') == '1'\n\nassert solution('''3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n''') == '0'\n\nassert solution('''3\n12\nAPPAPPPAPPPP\n3\nAAP\n3\nPPA\n''') == '1'"
    },
    {
        "number": 2276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n1101001\\n3 4 9 100 1 2 3\\n') == '109'\nassert solution('5\\n10101\\n3 10 15 15 15\\n') == '23'\nassert solution('7\\n1101001\\n3 4 9 100 1 2 3\\n') == '109'\nassert solution('5\\n10101\\n3 10 15 15 15\\n') == '23'\nassert solution('7\\n1101001\\n3 4 9 100 1 2 3\\n') == '109'\n"
    },
    {
        "number": 2277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n2\n1 2\n2 3\n''') == 'odd'\nassert solution('''4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'odd'\nassert solution('''4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'even'\nassert solution('''4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'odd'\nassert solution('''4\n1 2 4 3\n4\n1 1\n1 4\n1 4\n2 3\n''') == 'odd'\n"
    },
    {
        "number": 2278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 26 2\n3 9 1''') == '4 5 6 13 26'\nassert solution('''3 9 1\n5 26 2''') == '-1'\nassert solution('''3 9 1\n5 26 2''') == '-1'\nassert solution('''3 9 1\n5 26 2''') == '-1'\nassert solution('''3 9 1\n5 26 2''') == '-1'\n"
    },
    {
        "number": 2279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n6\n1 2\n3 4 5\n''') == '2 1 4 3'\nassert solution('''3\n487060\n3831 161856\n845957 794650 976977\n83847 50566 691206 498447\n698377 156232 59015 382455 626960\n''') == '6 5 4 3 2 1'\nassert solution('''4\n1000000000\n1000000000\n1000000000\n1000000000\n''') == '1 1 1 1 1'\nassert solution('''5\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n''') == '1 1 1 1 1'\nassert solution('''6\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n1000000000\n''') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 2280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2\\n1\\n2\\n0'\nassert solution('''4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2\\n1\\n2\\n0'\nassert solution('''4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2\\n1\\n2\\n0'\nassert solution('''4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2\\n1\\n2\\n0'\nassert solution('''4\n4\n1 3 1 3\n3\n3 3 2\n5\n2 3 3 4 2\n3\n1 1 2\n''') == '2\\n1\\n2\\n0'\n"
    },
    {
        "number": 2281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == '1 1 2 2'\nassert solution('''1''') == '1 1'\nassert solution('''5''') == '1 1 2 2 3 4'\nassert solution('''10''') == '1 1 2 2 3 4 5 6 7 8 9 10'\nassert solution('''100''') == '1 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\n"
    },
    {
        "number": 2282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('LRLR') == 5\nassert solution('LRLRLLR') == 3\nassert solution('LRLRLLRR') == 2\nassert solution
    },
    {
        "number": 2283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 5 2 2\n1 3 4\n1 4 4\n3 4 5\n3 2 2\n4 2 2''') == '8'\nassert solution('''3 3\n9 7 8\n1 2 1\n2 3 2\n1 3 3''') == '0'\nassert solution('''3 3\n9 7 8\n1 2 1\n2 3 2\n1 3 3''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3''') == '0'\n"
    },
    {
        "number": 2284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn, k = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\n\ncost = 0\nfor i in range(k):\n    cost += a[i] + b[i]\n\nstdout.write(str(cost))\n"
    },
    {
        "number": 2285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000:0124:0001:f19a:1000:0000\\na56f:00d3:0000:0124:0001:0000:0000:0000\\na56f:0000:0000:0124:0001:0000:1234:0ff0\\na56f:0000:0000:0000:0001:0000:1234:0ff0\\n0000:0000:0000:0000:0000:0000:0000:0000\\n00ea:0000:0000:0000:004d:00f4:0006:0000\\n'\n\nassert solution('''6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000:0124:0001:f19a:1000:0000\\na56f:00d3:0000:0124:0001:0000:0000:0000\\na56f:0000:0000:0124:0001:0000:1234:0ff0\\na56f:0000:0000:0000:0001:0000:1234:0ff0\\n0000:0000:0000:0000:0000:0000:0000:0000\\n00ea:0000:0000:0000:004d:00f4:0006:0000\\n'\n\nassert solution('''6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000:0124:0001:f19a:1000:0000\\na56f:00d3:0000:0124:0001:0000:0000:0000\\na56f:0000:0000:0124:0001:0000:1234:0ff0\\na56f:0000:0000:0000:0001:0000:1234:0ff0\\n0000:0000:0000:0000:0000:0000:0000:0000\\n00ea:0000:0000:0000:004d:00f4:0006:0000\\n'\n\nassert solution('''6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000:0124:0001:f19a:1000:0000\\na56f:00d3:0000:0124:0001:0000:0000:0000\\na56f:0000:0000:0124:0001:0000:1234:0ff0\\na56f:0000:0000:0000:0001:0000:1234:0ff0\\n0000:0000:0000:0000:0000:0000:0000:0000\\n00ea:0000:0000:0000:004d:00f4:0006:0000\\n'\n\nassert solution('''6\na56f:d3:0:0124:01:f19a:1000:00\na56f:00d3:0000:0124:0001::\na56f::0124:0001:0000:1234:0ff0\na56f:0000::0000:0001:0000:1234:0ff0\n::\n0ea::4d:f4:6:0\n''') == 'a56f:00d3:0000"
    },
    {
        "number": 2286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '0 0 0 6'\nassert solution('''4''') == '2 2 6 2 2 6 2 2'\nassert solution('''5''') == '0 0 0 6 0 0 6 0 0 6'\nassert solution('''6''') == '0 0 0 6 0 0 6 0 0 6 0 0 6'\nassert solution('''7''') == '0 0 0 6 0 0 6 0 0 6 0 0 6 0 0 6'\n"
    },
    {
        "number": 2287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('010011') == '2'\nassert solution('0') == '0'\nassert solution('1111000') == '0'\nassert solution('0101') == '0'\nassert solution('100001') == '0'\n"
    },
    {
        "number": 2288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\n\nassert solution('''5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'Yes'\n\nassert solution('''5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'No'\n\nassert solution('''5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'No'\n\nassert solution('''5\n4\n10 20 20 30\n0 1 0 1\n3\n3 1 2\n0 1 1\n4\n2 2 4 8\n1 1 1 1\n3\n5 15 4\n0 0 0\n4\n20 10 100 50\n1 0 0 1\n''') == 'No'"
    },
    {
        "number": 2289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''14 8\n1 2\n2 7\n3 4\n6 3\n5 7\n3 8\n6 8\n11 12\n''') == '1'\n\nassert solution('''200000 3\n7 9\n9 8\n4 5\n''') == '0'\n\nassert solution('''1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1\n1000000 1"
    },
    {
        "number": 2291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n') == '2'\nassert solution('4\\n1\\n') == '3'\nassert solution('5\\n1\\n') == '4'\n"
    },
    {
        "number": 2292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n3 1 2 3\n3 3 4 5''') == 'possible'\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'impossible'\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'impossible'\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'impossible'\nassert solution('''10 10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == 'impossible'\n"
    },
    {
        "number": 2294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1\n2 2 1\n3 3 1''') == '0'\nassert solution('''1 1 1\n2 2 1\n3 3 1''') == '0'\nassert solution('''1 1 1\n2 2 1\n3 3 1''') == '0'\nassert solution('''1 1 1\n2 2 1\n3 3 1''') == '0'\nassert solution('''1 1 1\n2 2 1\n3 3 1''') == '0'\n"
    },
    {
        "number": 2295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2''') == '1.500000'\nassert solution('''2\n2 2''') == '1.000000'\nassert solution('''3\n1 2 3''') == '2.000000'\nassert solution('''3\n2 2 3''') == '1.000000'\nassert solution('''4\n1 2 3 4''') == '2.000000'\n"
    },
    {
        "number": 2296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n0 0\n2 0\n2 2\n1 1 2\n2 1\n2 2\n2 3''') == '3.4142135624 -1.4142135624\\n2.0000000000 0.0000000000\\n0.5857864376 -1.4142135624'\nassert solution('''3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1''') == '1.0000000000 -1.0000000000'\nassert solution('''3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1''') == '1.0000000000 -1.0000000000'\nassert solution('''3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1''') == '1.0000000000 -1.0000000000'\nassert solution('''3 2\n-1 1\n0 0\n1 1\n1 1 2\n2 1''') == '1.0000000000 -1.0000000000'\n"
    },
    {
        "number": 2297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3\n2 5\n5 5\n4 4\n2 3\n''') == '-2\\n-2\\n-5\\n4\\n-1'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n6"
    },
    {
        "number": 2298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 0 0 2 4'\nassert solution('''4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 91'\nassert solution('''4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 91'\nassert solution('''4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 91'\nassert solution('''4 6 5\n1 1\n1 3\n1 5\n1 7\n1 9\n7 10 2\n7 8\n100 200\n''') == '0 91'\n"
    },
    {
        "number": 2299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes\\nNo\\nYes\\nYes\\nYes\\nNo'\n\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes\\nNo\\nYes\\nYes\\nYes\\nNo'\n\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes\\nNo\\nYes\\nYes\\nYes\\nNo'\n\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes\\nNo\\nYes\\nYes\\nYes\\nNo'\n\nassert solution('''5 4\n1 2 3 5\n3 1 3 2\n4 5 2 3\n5 5 3 2\n4 4 3 4\n6\n1 1\n2 5\n4 5\n3 5\n1 3\n1 5\n''') == 'Yes\\nNo\\nYes\\nYes\\nYes\\nNo'"
    },
    {
        "number": 2300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n1 3 1 2 4\n2 1 4\n2 1 5\n2 2 4\n1 3 10\n2 1 5\n''') == '12'\nassert solution('''5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '12'\nassert solution('''5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '12'\nassert solution('''5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '12'\nassert solution('''5 4\n1 3 1 2 4\n3 1 4 1\n2 2 4\n1 2 10\n2 1 5\n''') == '12'\n"
    },
    {
        "number": 2301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 3 2 2 4 5 4''') == '3'\nassert solution('''7\n1 3 2 2 4 5 4''') == '3'\nassert solution('''7\n1 3 2 2 4 5 4''') == '3'\nassert solution('''7\n1 3 2 2 4 5 4''') == '3'\nassert solution('''7\n1 3 2 2 4 5 4''') == '3'\n"
    },
    {
        "number": 2302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"the sky is blue\") == \"blue is sky the\"\nassert solution(\"  hello world  \") == \"world hello\"\nassert solution(\"a good   example\") == \"example good a\"\nassert solution(\"  Bob    Loves  Alice   \") == \"Alice Loves Bob\"\nassert solution(\"Alice does not even like bob\") == \"bob like even not does Alice\"\n"
    },
    {
        "number": 2304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 1\n2 3 1\n1 3 2''') == 'Yes'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 2''') == 'No'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 2''') == 'Yes'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 2''') == 'No'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 2''') == 'Yes'\n"
    },
    {
        "number": 2305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 1\n1 2\n2 3''') == '5\\n4\\n0'\nassert solution('''3\n1 2 1\n1 2\n2 3''') == '5\\n4\\n0'\nassert solution('''3\n1 2 1\n1 2\n2 3''') == '5\\n4\\n0'\nassert solution('''3\n1 2 1\n1 2\n2 3''') == '5\\n4\\n0'\nassert solution('''3\n1 2 1\n1 2\n2 3''') == '5\\n4\\n0'\n"
    },
    {
        "number": 2306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''1\n100\n30\n'''\n) == '2100.000000000000000'\n\nassert solution(\n'''2\n100\n30\n'''\n) == '2100.000000000000000'\n\nassert solution(\n'''3\n100\n30\n'''\n) == '2100.000000000000000'\n\nassert solution(\n'''4\n100\n30\n'''\n) == '2100.000000000000000'\n\nassert solution(\n'''5\n100\n30\n'''\n) == '2100.000000000000000'"
    },
    {
        "number": 2307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"NOT READY\"\nassert solution(\"1\\n2\") == \"READY FOR BATTLE\"\nassert solution(\"4\\n11 12 13 14\") == \"NOT READY\"\nassert solution(\"3\\n2 3 4\") == \"READY FOR BATTLE\"\nassert solution(\"5\\n1 2 3 4 5\") == \"NOT READY\"\n"
    },
    {
        "number": 2308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1\\n3\\n0\\n0'\nassert solution('''\n4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1\\n3\\n0\\n0'\nassert solution('''\n4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1\\n3\\n0\\n0'\nassert solution('''\n4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1\\n3\\n0\\n0'\nassert solution('''\n4\n1010\n11\n10001\n110\n1\n1\n1010101010101\n11110000\n''') == '1\\n3\\n0\\n0'\n"
    },
    {
        "number": 2309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''14\nwow\nthis\nis\nthe\nfirst\nmcdics\ncodeforces\nround\nhooray\ni\nam\nproud\nabout\nthat''') == '3'\nassert solution('''7\narsijo\nsuggested\nthe\nidea\nfor\nthis\nproblem''') == '0'\nassert solution('''4\nsame\nsame\nsame\ndiffer''') == '1'\nassert solution('''14\nsame\nsame\nsame\ndiffer\n''') == '1'\nassert solution('''14\nsame\nsame\nsame\ndiffer\n''') == '1'\n"
    },
    {
        "number": 2310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 4\n2 3 2 1\n1 0\n0 0\n''') == 'YNNY'\nassert solution('''5 5\n1 2 1 3 1\n3 0\n0 0\n2 1\n4 0\n''') == 'YYYNY'\nassert solution('''2\n3 4\n2 3 2 1\n1 0\n0 0\n''') == 'YNNY'\nassert solution('''5 5\n1 2 1 3 1\n3 0\n0 0\n2 1\n4 0\n''') == 'YYYNY'\nassert solution('''2\n3 4\n2 3 2 1\n1 0\n0 0\n''') == 'YNNY'\n"
    },
    {
        "number": 2311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n6\n4 3 0 1 2 0''') == 'YES'\nassert solution('''2\n2\n2 5''') == 'NO'\nassert solution('''2\n2\n2 5''') == 'NO'\nassert solution('''2\n2\n2 5''') == 'NO'\nassert solution('''2\n2\n2 5''') == 'NO'\n"
    },
    {
        "number": 2313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2''') == '499122177 0'\nassert solution('''8\n10 4 3 6 5 10 7 5''') == '499122193 249561095 249561092 873463811 499122178 124780545 623902721 0'\nassert solution('''8\n10 4 3 6 5 10 7 5''') == '499122193 249561095 249561092 873463811 499122178 124780545 623902721 0'\nassert solution('''8\n10 4 3 6 5 10 7 5''') == '499122193 249561095 249561092 873463811 499122178 124780545 623902721 0'\nassert solution('''8\n10 4 3 6 5 10 7 5''') == '499122193 249561095 249561092 873463811 499122178 124780545 623902721 0'\n"
    },
    {
        "number": 2314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 5\nRRGGB\nRRGGY\nYYBBG\nYYBBR\nRBBRG\n1 1 5 5\n2 2 5 5\n2 2 3 3\n1 1 3 5\n4 4 5 5\n''') == '16\\n4\\n4\\n4\\n0\\n'\nassert solution('''6 10 5\nRRRGGGRRGG\nRRRGGGRRGG\nRRRGGGYYBB\nYYYBBBYYBB\nYYYBBBRGRG\nYYYBBBYBYB\n1 1 6 10\n1 3 3 10\n2 2 6 6\n1 7 6 10\n2 1 5 10\n''') == '36\\n4\\n16\\n16\\n16\\n0\\n'\nassert solution('''8 8 8\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\n1 1 8 8\n5 2 5 7\n3 1 8 6\n2 3 5 8\n1 2 6 8\n2 1 5 5\n2 1 7 7\n6 5 7 5\n''') == '64\\n0\\n16\\n4\\n16\\n4\\n36\\n0\\n'\nassert solution('''8 8 8\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\n1 1 8 8\n5 2 5 7\n3 1 8 6\n2 3 5 8\n1 2 6 8\n2 1 5 5\n2 1 7 7\n6 5 7 5\n''') == '64\\n0\\n16\\n4\\n16\\n4\\n36\\n0\\n'\nassert solution('''8 8 8\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nRRRRGGGG\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\nYYYYBBBB\n1 1 8 8\n5 2 5 7\n3 1 8 6\n2 3 5 8\n1 2 6 8\n2 1 5 5\n2 1 7 7\n6 5 7 5\n''') == '64\\n0\\n16\\n4\\n16\\n4\\n36\\n0\\n'\n"
    },
    {
        "number": 2315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10'\nassert solution('''1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10'\nassert solution('''1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10'\nassert solution('''1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10'\nassert solution('''1 10\n3 14\n1 10\n''') == '1 7\\n3 9\\n5 10'\n"
    },
    {
        "number": 2316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin,stdout"
    },
    {
        "number": 2317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 3 5\n-2 -1 4\n-1 2\n7 3''') == '2 2'\n\nassert solution('''3 2 3 5\n-2 -1 4\n-1 2\n7 3\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1 -1\n-1"
    },
    {
        "number": 2318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''hello\nhello\nhello\nhelloo\nhello\nhlllloo\nhello\nhelo''') == 'YES\\nYES\\nNO\\nNO\\nNO'\nassert solution('''aa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nNO'\nassert solution('''aa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nNO'\nassert solution('''aa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nNO'\nassert solution('''aa\nbb\ncodeforces\ncodeforce\npolycarp\npoolycarpp\naaaa\naaaab\nabcdefghijklmnopqrstuvwxyz\nzabcdefghijklmnopqrstuvwxyz''') == 'NO\\nNO\\nYES\\nNO\\nNO\\nNO'\n"
    },
    {
        "number": 2319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"> > < <\") == \"0\"\nassert solution(\"< > < >\") == \"1\"\nassert solution(\"< > < >\") == \"0\"\nassert solution(\"< > < >\") == \"0\"\nassert solution(\"< > < >\") == \"0\"\n"
    },
    {
        "number": 2322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u043c"
    },
    {
        "number": 2323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n3 1 4 1 5 9\n3\n7 7\n0 2\n8 17\n''') == '5 10 18'\nassert solution('''2\n1 500000000000000000\n2\n1000000000000000000 1000000000000000000\n0 1000000000000000000\n''') == '2 1500000000000000000'\nassert solution('''1\n1000000000000000000 1000000000000000000\n0 1000000000000000000\n''') == '2 1500000000000000000'\nassert solution('''1\n1000000000000000000 1000000000000000000\n1000000000000000000 1000000000000000000\n0 1000000000000000000\n''') == '2 1500000000000000000'\nassert solution('''1\n1000000000000000000 1000000000000000000\n1000000000000000000 1000000000000000000\n1000000000000000000 1000000000000000000\n0 1000000000000000000\n''') == '2 1500000000000000000'\n"
    },
    {
        "number": 2324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abba') == '6 1 0 0'\nassert solution('abacaba') == '12 4 1 0 0 0 0'\nassert solution('abacaba') == '12 4 1 0 0 0 0'\nassert solution('abacaba') == '12 4 1 0 0 0 0'\nassert solution('abacaba') == '12 4 1 0 0 0 0'\n"
    },
    {
        "number": 2325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n6 3\n4 2''') == '36'\nassert solution('''2\n6 3\n4 2''') == '36'\nassert solution('''2\n6 3\n4 2''') == '36'\nassert solution('''2\n6 3\n4 2''') == '36'\nassert solution('''2\n6 3\n4 2''') == '36'\n"
    },
    {
        "number": 2326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n7\n11\n1\n2000000000000''') == '8'\nassert solution('''5\n5\n7\n11\n1\n2000000000000''') == '8'\nassert solution('''5\n5\n7\n11\n1\n2000000000000''') == '8'\nassert solution('''5\n5\n7\n11\n1\n2000000000000''') == '8'\nassert solution('''5\n5\n7\n11\n1\n2000000000000''') == '8'\n"
    },
    {
        "number": 2328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2\n1 2 5\n2 1\n1 1000000000\n1 0\n4\n''') == '3\\n500000000\\n4'\n'''\n\n'''\n"
    },
    {
        "number": 2329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n2 4 1 3 4 2 1 2''') == '7'\nassert solution('''5\n1 1 2 1 2''') == '6'\nassert solution('''1\n1 1 2 1 2''') == '6'\nassert solution('''2\n1 1 2 1 2''') == '6'\nassert solution('''3\n1 1 2 1 2''') == '6'\n"
    },
    {
        "number": 2334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0\\n3\\n1 2 3\\n2\\n1') == '4'\nassert solution('0\\n3\\n1 2 3\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 2335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 4\n91 94\n92 97\n97 99\n92 94\n93 97\n95 96\n90 100''') == '3\\n3\\n0\\n4\\n'\nassert solution('''2 1 1\n1 1\n200000 200000\n90 100''') == '0\\n0\\n0\\n4\\n'\nassert solution('''2 1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 2337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n-1 -1''') == '12'\nassert solution('''3\n5 0\n0 5\n1 0''') == '12'\nassert solution('''4\n5 0\n0 5\n1 0\n-1 -1''') == '12'\nassert solution('''5\n5 0\n0 5\n1 0\n-1 -1\n-1 -1''') == '12'\nassert solution('''6\n5 0\n0 5\n1 0\n-1 -1\n-1 -1\n-1 -1''') == '12'\n"
    },
    {
        "number": 2339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '5 2'\nassert solution('''2\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '8 2 1 3'\nassert solution('''2\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '9 3 8'\nassert solution('''2\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '100 50 25 75 64'\nassert solution('''2\n2\n2 5\n4\n1 8 2 3\n3\n3 8 9\n5\n64 25 75 100 50\n1\n42\n6\n96 128 88 80 52 7\n5\n2 4 8 16 17\n''') == '128 96 80 88 52 7'\n"
    },
    {
        "number": 2340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1''') == '0\\n1\\n2\\n0'\nassert solution('''3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1''') == '0\\n1\\n2\\n0'\nassert solution('''3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1''') == '0\\n1\\n2\\n0'\nassert solution('''3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1''') == '0\\n1\\n2\\n0'\nassert solution('''3 2\n3 1\n8 6\n8 7 6 5 3 2\n9 6\n9 8 5 4 3 1\n1 1\n1''') == '0\\n1\\n2\\n0'\n"
    },
    {
        "number": 2341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\naaa\naaa\naaa''') == '10'\nassert solution('''3 4\nabab\nbaba\nabab''') == '12'\nassert solution('''5 5\nzbacg\nbaaac\naaaaa\neaaad\nweadd''') == '31'\nassert solution('''3 4\nabab\nbaba\nabab''') == '12'\nassert solution('''5 4\nabab\nbaba\nabab''') == '12'\n"
    },
    {
        "number": 2342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n.\n1 2\nG.\n2 2\n"
    },
    {
        "number": 2343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2 2\n2 12''') == 'YES 0'\nassert solution('''1 1\n2 2\n2 12''') == 'YES 1'\nassert solution('''1 1\n2 2\n2 12''') == 'NO'\nassert solution('''1 1\n2 2\n2 12''') == 'NO'\nassert solution('''1 1\n2 2\n2 12''') == 'NO'\n"
    },
    {
        "number": 2344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n10 9 2\n20 33 1\n30 115 1\n5 3 2''') == '32'\nassert solution('''3\n40 1 2\n1000 1100 5\n300 2 1''') == '1337'\nassert solution('''4\n10 9 2\n20 33 1\n30 115 1\n5 3 2''') == '32'\nassert solution('''3\n40 1 2\n1000 1100 5\n300 2 1''') == '1337'\nassert solution('''4\n10 9 2\n20 33 1\n30 115 1\n5 3 2''') == '32'\n"
    },
    {
        "number": 2345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1\\n1 4 3 2'\nassert solution('''5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1\\n1 4 3 2'\nassert solution('''5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1\\n1 4 3 2'\nassert solution('''5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1\\n1 4 3 2'\nassert solution('''5\n0 1 2 3 4\n4\n-3 1 1 1\n''') == '1\\n1 4 3 2'\n"
    },
    {
        "number": 2346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 1\n1 1\n-1 0\n2 1\n3 0\n''') == '1 2 4'\nassert solution('''5\n-1 0\n1 1\n1 1\n2 0\n3 0\n''') == '-1'\nassert solution('''8\n2 1\n-1 0\n1 0\n1 1\n1 1\n4 0\n5 1\n7 0\n''') == '5'\nassert solution('''8\n-1 0\n1 0\n1 1\n1 1\n4 0\n5 1\n7 0\n''') == '-1'\nassert solution('''8\n2 1\n-1 0\n1 0\n1 1\n1 1\n4 0\n5 1\n7 0\n''') == '5'\n"
    },
    {
        "number": 2347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten''') == 'YES'\nassert solution('''abacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten''') == 'NO'\nassert solution('''abacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten''') == 'NO'\nassert solution('''abacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten''') == 'NO'\nassert solution('''abacaba\nzyxaabcaabkjh\nonetwothree\nthreetwoone\none\nzzonneyy\none\nnone\ntwenty\nten''') == 'NO'\n"
    },
    {
        "number": 2348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('A278832') == 0\nassert solution('A089956') == 0\nassert solution('A144045') == 1\nassert solution('A089957') == 1\nassert solution('A144045') == 1\n"
    },
    {
        "number": 2349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n11\n1\n3''') == '4\\n0 1 2 5\\n6\\n0 1 2 3 5 11\\n2\\n0 1\\n3\\n0 1 3'\nassert solution('''5\n5\n11\n1\n3''') == '4\\n0 1 2 5\\n6\\n0 1 2 3 5 11\\n2\\n0 1\\n3\\n0 1 3'\nassert solution('''5\n5\n11\n1\n3''') == '4\\n0 1 2 5\\n6\\n0 1 2 3 5 11\\n2\\n0 1\\n3\\n0 1 3'\nassert solution('''5\n5\n11\n1\n3''') == '4\\n0 1 2 5\\n6\\n0 1 2 3 5 11\\n2\\n0 1\\n3\\n0 1 3'\nassert solution('''5\n5\n11\n1\n3''') == '4\\n0 1 2 5\\n6\\n0 1 2 3 5 11\\n2\\n0 1\\n3\\n0 1 3'\n"
    },
    {
        "number": 2350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 2 2''') == '2'\nassert solution('''1 2 2 4''') == '3'\nassert solution('''179 1 179 100000''') == '1'\nassert solution('''5 7 5 7''') == '1'\n'''"
    },
    {
        "number": 2351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3\\n1 -1 1 -1 2\\n') == '2'\nassert solution('6 3 2\\n1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n') == '0'\nassert solution('10 42 7\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n') == '645711643'\nassert solution('10 42 7\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n') == '645711643'\nassert solution('10 42 7\\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1\\n') == '645711643'\n"
    },
    {
        "number": 2352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n5 6\n...a..\n..bbb.\n...a..\n.cccc.\n...a..\n''') == 'YES'\nassert solution('''2\n3 3\n...\n.a.\n...\n2 2\nbb\ncc\n''') == 'YES'\nassert solution('''3\n3 3\n...\n.a.\n...\n2 2\nbb\ncc\n''') == 'YES'\nassert solution('''4\n3 3\n...\n.a.\n...\n2 2\nbb\ncc\n''') == 'NO'\nassert solution('''5\n3 3\n...\n.a.\n...\n2 2\nbb\ncc\n''') == 'YES'\n"
    },
    {
        "number": 2353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000''') == '27'\nassert solution('''10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '27'\nassert solution('''10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '27'\nassert solution('''10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '27'\nassert solution('''10 3 6 4\n11 3 6 4\n5 9 4 10\n6 5 2 3\n1 1 1 1\n3947465 47342 338129 123123\n234123843 13 361451236 361451000\n''') == '27'\n"
    },
    {
        "number": 2354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n1 1\n4 4\n4 3\n3 2\n2 4\n''') == '1\\n8\\n16\\n13\\n4\\n'\nassert solution('''5 4\n2 1\n4 2\n3 3\n3 4\n''') == '16\\n9\\n7\\n20\\n'\nassert solution('''5 4\n2 1\n4 2\n3 3\n3 4\n''') == '16\\n9\\n7\\n20\\n'\nassert solution('''5 4\n2 1\n4 2\n3 3\n3 4\n''') == '16\\n9\\n7\\n20\\n'\nassert solution('''5 4\n2 1\n4 2\n3 3\n3 4\n''') == '16\\n9\\n7\\n20\\n'\n"
    },
    {
        "number": 2355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2 0''') == '1 2'\nassert solution('''1\n2 1''') == '1 2'\nassert solution('''1\n2 1''') == '1 2'\nassert solution('''1\n2 1''') == '1 2'\nassert solution('''1\n2 1''') == '1 2'\n"
    },
    {
        "number": 2356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 2357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '6'\nassert solution('''4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '-1'\nassert solution('''4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '3'\nassert solution('''4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '2'\nassert solution('''4\n1\n1\n6\n1 2 3 4 5 1\n9\n4 1 2 4 5 4 3 2 1\n4\n3 3 3 3\n''') == '-1'\n"
    },
    {
        "number": 2358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('(()((') == '1'\nassert solution(')(') == '0'\nassert solution('(()())') == '1'\nassert solution('(()())') == '4'\nassert solution('(()())') == '1 2 5 6'\n"
    },
    {
        "number": 2359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''30 10 20\n41 15 30\n18 13 18''') == '2'\nassert solution('''30 10 20\n41 15 30\n18 13 18''') == '7'\nassert solution('''30 10 20\n41 15 30\n18 13 18''') == '1'\nassert solution('''30 10 20\n41 15 30\n18 13 18''') == '1'\nassert solution('''30 10 20\n41 15 30\n18 13 18''') == '1'\n"
    },
    {
        "number": 2360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 2'\nassert solution('''2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 0 2'\nassert solution('''2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 0 2'\nassert solution('''2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 0 2'\nassert solution('''2\n2\n1 3\n1 4\n3\n1 5\n1 1\n2 3\n''') == '1 0 2'\n"
    },
    {
        "number": 2361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 4\n1 2\n2 3\n''') == '1'\nassert solution('''3\n2 3 4\n1 3\n2 3\n''') == '2'\nassert solution('''3\n1 1 1\n1 2\n2 3\n''') == '0'\nassert solution('''3\n1 1 1\n1 2\n2 3\n''') == '0'\nassert solution('''3\n1 1 1\n1 2\n2 3\n''') == '0'\n"
    },
    {
        "number": 2363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n''') == '5'\nassert solution('''4\n1 3 3 7\n''') == '60'\nassert solution('''5\n1 3 3 7 9\n''') == '60'\nassert solution('''6\n1 3 3 7 9 10\n''') == '60'\nassert solution('''7\n1 3 3 7 9 10 11\n''') == '60'\n"
    },
    {
        "number": 2365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"!(f)\") == \"true\"\nassert solution(\"|(f,t)\") == \"true\"\nassert solution(\"&(t,f)\") == \"false\"\nassert solution(\"|(&(t,f,t),!(t))\") == \"false\"\nassert solution(\"|(f,t,t)\") == \"true\"\n"
    },
    {
        "number": 2366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 1 2''') == '2'\nassert solution('''5\n1 1 2 1 2''') == '2'\nassert solution('''5\n1 1 2 1 2''') == '2'\nassert solution('''5\n1 1 2 1 2''') == '2'\nassert solution('''5\n1 1 2 1 2''') == '2'\n"
    },
    {
        "number": 2367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 3\n1 0 2\n3 2 0''') == '3'\nassert solution('''0 1 3\n1 0 2\n3 2 0''') == '3'\nassert solution('''0 1 3\n1 0 2\n3 2 0''') == '3'\nassert solution('''0 1 3\n1 0 2\n3 2 0''') == '3'\nassert solution('''0 1 3\n1 0 2\n3 2 0''') == '3'\n"
    },
    {
        "number": 2371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"900\"\n"
    },
    {
        "number": 2372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 1\n4 4\n..#.\n..#.\n.#..\n.#..''') == '1'\nassert solution('''4 4\n1 1\n4 4\n..#.\n..#.\n.#..\n.#..''') == '-1'\nassert solution('''4 4\n1 1\n4 4\n"
    },
    {
        "number": 2373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 3 5 2') == '2'\nassert solution('1 4 3 5 2') == '2'\nassert solution('1 4 3 5 2') == '2'\nassert solution('1 4 3 5 2') == '2'\nassert solution('1 4 3 5 2') == '2'\n"
    },
    {
        "number": 2374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n5 1\n10 1\n8 0\n1 10\n4 5\n6 7\n8 9''') == '2\\n1 4'\nassert solution('''3 4\n5 1\n10 1\n8 0\n1 10\n4 5\n6 7\n8 9''') == '-1'\nassert solution('''3 4\n5 1\n10 1\n8 0\n1 10\n4 5\n6 7\n8 9''') == '-1'\nassert solution('''3 4\n5 1\n10 1\n8 0\n1 10\n4 5\n6 7\n8 9''') == '-1'\nassert solution('''3 4\n5 1\n10 1\n8 0\n1 10\n4 5\n6 7\n8 9''') == '-1'\n"
    },
    {
        "number": 2375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split()[0]\n"
    },
    {
        "number": 2376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '3'\nassert solution('3 5') == '3'\nassert solution('1 10') == '3'\nassert solution('3 5') == '3'\nassert solution('1 10') == '3'\n"
    },
    {
        "number": 2378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3''') == '125000001'\nassert solution('''3\n1 2\n2 3''') == '125000001'\nassert solution('''3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151\n151 152\n152 153\n153 154\n154 155\n155 156\n156 157\n157 158\n158 159\n159 160\n160 161\n161 162\n162 163\n163 164\n164 165\n165 166\n166 167\n167 168\n168 169\n169 170\n170 171\n171 172\n172 173\n173 174\n174 175\n175 176\n176 177\n177 178\n178 179\n179 180\n180 181\n181 182\n182 183\n183 184\n184 185\n185 186\n186 187\n187 188\n188 189\n189 190\n190 191\n191 192\n192 193\n193 194\n194 195\n195 196\n196 197\n197 198\n198 199\n199 200\n200 201\n201 202\n202 203\n203 204\n204 205\n205 206\n206 207\n207 208\n208 209\n209 210\n210 211\n211 212\n212 213\n213 214\n214 215\n215 216\n216 217\n217 218\n218 219\n219 220\n220 221\n221 222\n222 223\n223 224\n224 225\n225 226\n226 227\n227 228\n228 229\n229 230\n230 231\n231 232\n232 233\n233 234\n234 235\n235 236\n236 237\n237 238\n238 239\n239 240\n240 241\n241 242\n242 243\n243 244\n244 245\n245 246\n246 247\n247 248\n248 249\n249 250\n250 251\n251 252\n252 253\n253 254\n254 255\n255 256\n256 257\n257 258\n258 259\n259 260\n260 261\n261 262\n262 263\n263 264\n264 265\n265 266\n266 267\n267 268\n268 269\n269 270\n270 271\n271 272\n272 273\n273 274\n274 275\n275 276\n276 277\n277 278\n278 279\n279 280\n280 281\n281 282\n282 283\n283 284\n284 285\n285 286\n286 287\n287 288\n288 289\n289 290\n290 291\n291 292\n292 293\n293 294\n294 295\n295 296\n296 297\n297 298\n298 299\n299 300\n300 301\n301 302\n302 303\n303 304\n304 305\n305 306\n306 307\n307 308\n308 309\n309 310\n310 311\n311 312\n312 313\n313 314\n314 315\n315 316\n316 317\n317 318\n318 319\n319 320\n320 321\n321 322\n322 323\n323 324\n324 325\n325 326\n326 327\n327 328\n328 329\n329 330\n330 331\n331 332\n332 333\n333 334\n334 335\n335 336\n336 337\n337 338\n338 339\n339 340\n340 341\n341 342\n342 343\n343 344\n344 345\n345 346\n346 347\n347 348\n348 349\n349 350\n350 351\n351 352\n352 353\n353 354\n354 355\n355 356\n356 357\n357 358\n358 359\n359 360\n360 361\n361 362\n362 363\n363 364\n364 365\n365 366\n366 367\n367 368\n368 369\n369 370\n370 371\n371 372\n372 373\n373 374\n374 375\n375 376\n376 377\n377 378\n378 379\n379 380\n380 381\n381 382\n382 383\n383 384\n384 385\n385 386\n386 387\n387 388\n388 389\n389 390\n390 391\n391 392\n392 393\n393 394\n394 395\n395 396\n396 397\n397 398\n398 399\n399 400\n400 401\n401 402\n402 403\n403 404\n404 405\n405 406\n406 407\n407 408\n408 409\n409 410\n410 411\n411 412\n412 413\n413 414\n414 415\n415 416\n416 417\n417 418\n418 419\n419 420\n420 421\n421 422\n422 423\n423 424\n424 425\n425 426\n426 427\n427 428\n428 429\n429 430\n430 431\n431 432\n432 433\n433 434\n434 435\n435 436\n436 437\n437 438\n438 439\n439 440\n440 441\n441 442\n442 443\n443 444\n444 445\n445 446\n446 447\n447 448\n448 449\n449 450\n450 451\n451 452\n452 453\n453 454\n454 455\n455 456\n456 457\n457 458\n458 459\n459 460\n460 461\n461 462\n462 463\n463 464\n464 465\n465 466\n467 468\n469 470\n471 472\n473 474\n475 476\n477 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n"
    },
    {
        "number": 2379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n5 1 4\n2 3\n1 5''') == '14'\nassert solution('''3 2\n5 1 4\n2 3\n1 5''') == '14'\nassert solution('''3 2\n5 1 4\n2 3\n1 5''') == '14'\nassert solution('''3 2\n5 1 4\n2 3\n1 5''') == '14'\nassert solution('''3 2\n5 1 4\n2 3\n1 5''') == '14'\n"
    },
    {
        "number": 2381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2 -3 -4''') == '12'\nassert solution('''4 2\n1 2 -3 -4''') == '12'\nassert solution('''4 2\n1 2 -3 -4''') == '12'\nassert solution('''4 2\n1 2 -3 -4''') == '12'\nassert solution('''4 2\n1 2 -3 -4''') == '12'\n"
    },
    {
        "number": 2382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 2') == '1'\nassert solution('3') == '-1'\nassert solution('2 1 2 3') == '2'\nassert solution('2 1 2 3 4') == '3'\nassert solution('2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 2384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 3 0') == 'Yes'\nassert solution('AB') == 'A'\nassert solution('AC') == 'C'\nassert solution('BC') == 'No'\nassert solution('1 1 1 1') == 'Yes'\n"
    },
    {
        "number": 2390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 20\n2 80\n9 120\n16 1''') == '191'\nassert solution('''3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1\n3 20\n2 80\n9 120\n16 1"
    },
    {
        "number": 2391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10''') == '0'\nassert solution('''13''') == '1'\nassert solution('''14''') == '1'\nassert solution('''15''') == '7'\nassert solution('''16''') == '7'\n"
    },
    {
        "number": 2393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''onetwone\ntestme\noneoneone\ntwotwo''') == 'onetwone'\nassert solution('''onetwonetwooneooonetwooo\ntwo\none\ntwooooo\nttttwo\nttwwoo\nooone\nonnne\noneeeee\noneeeeeeetwooooo''') == 'onetwonetwooneooonetwooo'\nassert solution('''onetwone\ntestme\noneoneone\ntwotwo''') == 'onetwone'\nassert solution('''onetwonetwooneooonetwooo\ntwo\none\ntwooooo\nttttwo\nttwwoo\nooone\nonnne\noneeeee\noneeeeeeetwooooo''') == 'onetwonetwooneooonetwooo'\nassert solution('''onetwone\ntestme\noneoneone\ntwotwo''') == 'onetwone'\n"
    },
    {
        "number": 2394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2\\n1 2\\n1 3\\n2 4\\n2 5\\n4 6') == '20'\nassert solution('13 3\\n1 2\\n3 2\\n4 2\\n5 2\\n3 6\\n10 6\\n6 7\\n6 13\\n5 8\\n5 9\\n9 11\\n11 12') == '114'\nassert solution('3 5\\n2 1\\n3 1\\n') == '3'\nassert solution('3 5\\n2 1\\n3 1\\n') == '3'\nassert solution('3 5\\n2 1\\n3 1\\n') == '3'\n"
    },
    {
        "number": 2395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 2396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7''') == '1 2 2 1'\nassert solution('''(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7''') == '1 2 2 1'\nassert solution('''(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7''') == '1 2 2 1'\nassert solution('''(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7''') == '1 2 2 1'\nassert solution('''(99+98)/97\n(26+4)/10\n(12+33)/15\n(5+1)/7''') == '1 2 2 1'\n"
    },
    {
        "number": 2397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n-1 -2 5 -4 8''') == '15'\nassert solution('''7 6\n-3 0 -1 -2 -2 -4 -1''') == '-45'\nassert solution('''4 1\n3 -1 6 0''') == '8'\nassert solution('''5 2\n-1 -2 5 -4 8''') == '15'\nassert solution('''7 6\n-3 0 -1 -2 -2 -4 -1''') == '-45'\n"
    },
    {
        "number": 2398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'YES'\nassert solution('''3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\nassert solution('''3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'NO'\nassert solution('''3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'YES'\nassert solution('''3 2 2 2\n0 0 -2 -2 2 2\n3 1 4 1\n0 0 -1 -1 1 1\n1 1 1 1\n1 1 1 1 1 1\n0 0 0 1\n0 0 0 0 0 1\n5 1 1 1\n0 0 -100 -100 0 100\n1 1 5 1\n0 0 -100 -100 100 0\n''') == 'YES'\n"
    },
    {
        "number": 2399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'\n\nassert solution('''3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'NO'\n\nassert solution('''3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'\n\nassert solution('''3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'NO'\n\nassert solution('''3\n3 2\nXX......XX...X\n4 2\nX...X.X..X\n5 3\n.......X..X\n''') == 'YES'"
    },
    {
        "number": 2400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3\\n1\\n0'\nassert solution('''3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3\\n1\\n0'\nassert solution('''3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3\\n1\\n0'\nassert solution('''3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3\\n1\\n0'\nassert solution('''3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n''') == '3\\n1\\n0'\n"
    },
    {
        "number": 2401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1\n1\n2 2\n1\n2 1\n2\n2 2\n2\n2 2\n2\n''') == '1'\nassert solution('''2\n5 2\n2 2 2 2\n6 4\n3 2 6 1 2\n''') == '5'\nassert solution('''2\n5 2\n2 2 2 2\n6 4\n3 2 6 1 2\n''') == '2'\nassert solution('''2\n5 2\n2 2 2 2\n6 4\n3 2 6 1 2\n''') == '2'\nassert solution('''2\n5 2\n2 2 2 2\n6 4\n3 2 6 1 2\n''') == '2'\n"
    },
    {
        "number": 2402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n5 1 3\n''') == '1 3'\nassert solution('''1\n6 3 4\n''') == '2 6'\nassert solution('''1\n6 3 4\n''') == '2 6'\nassert solution('''1\n6 3 4\n''') == '2 6'\nassert solution('''1\n6 3 4\n''') == '2 6'\n"
    },
    {
        "number": 2403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n2 3 -1\n''') == '10'\nassert solution('''2\n-1 100\n2 -1\n''') == '99'\nassert solution('''10\n-10 -1 2 2 5 -2 -3 -4 2 -6\n-1 -1 2 2 -1 5 5 7 7 9\n''') == '-9'\nassert solution('''10\n-10 -1 2 2 5 -2 -3 -4 2 -6\n-1 -1 2 2 -1 5 5 7 7 9\n''') == '3 5 6 1 9 4 10 7 8 2'\nassert solution('''10\n-10 -1 2 2 5 -2 -3 -4 2 -6\n-1 -1 2 2 -1 5 5 7 7 9\n''') == '-9'\n"
    },
    {
        "number": 2404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '9'\nassert solution('4') == '16'\n"
    },
    {
        "number": 2405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 2 1 8\n1 1 2\n1 5 3\n1 2 1\n2 2\n1 4 2\n1 3 2\n2 1\n2 3\n''') == '3'\nassert solution('''5 4 10 1 6\n1 1 5\n1 5 5\n1 3 2\n1 5 2\n2 1\n2 2\n''') == '7'\nassert solution('''5 4 10 1 6\n1 1 5\n1 5 5\n1 3 2\n1 5 2\n2 1\n2 2\n''') == '1'\nassert solution('''5 4 10 1 6\n1 1 5\n1 5 5\n1 3 2\n1 5 2\n2 1\n2 2\n''') == '4'\nassert solution('''5 4 10 1 6\n1 1 5\n1 5 5\n1 3 2\n1 5 2\n2 1\n2 2\n''') == '6'\n"
    },
    {
        "number": 2406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n"
    },
    {
        "number": 2407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5''') == '2'\nassert solution('''2\n3 2\n1 3 5\n4 1\n5 2 3 5''') == '2'\n"
    },
    {
        "number": 2408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n1 1\n0 3\n1 2''') == '14'\nassert solution('''4\n0 0\n0 2\n0 4\n2 0''') == '6'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\n"
    },
    {
        "number": 2409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1''') == 'Yes'\nassert solution('''1 0''') == 'No'\nassert solution('''5 2 3''') == 'Yes'\nassert solution('''1 2 3 2 2''') == 'Yes'\nassert solution('''4 3 4''') == 'Yes'\n"
    },
    {
        "number": 2410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'YES'\nassert solution('''3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\nassert solution('''3\n4\n1 2 3 4\n3\n7 4 -1\n3\n5 -5 5\n''') == 'NO'\n"
    },
    {
        "number": 2411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n1 1\n0 3\n1 2''') == '14'\nassert solution('''4\n0 0\n0 2\n0 4\n2 0''') == '6'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\nassert solution('''3\n-1 -1\n1 0\n3 1''') == '0'\n"
    },
    {
        "number": 2412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '6'\nassert solution('''5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '8'\nassert solution('''5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '10'\nassert solution('''5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '6'\nassert solution('''5\n00100\n8\n00000000\n5\n11111\n3\n110\n''') == '8'\n"
    },
    {
        "number": 2414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5\n314 15\n-99 99\n123 987''') == '6\\n329\\n0\\n1110'\nassert solution('''1 5\n314 15\n-99 99\n123 987''') == '6\\n329\\n0\\n1110'\nassert solution('''1 5\n314 15\n-99 99\n123 987''') == '6\\n329\\n0\\n1110'\nassert solution('''1 5\n314 15\n-99 99\n123 987''') == '6\\n329\\n0\\n1110'\nassert solution('''1 5\n314 15\n-99 99\n123 987''') == '6\\n329\\n0\\n1110'\n"
    },
    {
        "number": 2415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"GENIUS\") == \"YES\"\nassert solution(\"DOCTOR\") == \"NO\"\nassert solution(\"IRENE\") == \"YES\"\nassert solution(\"MARY\") == \"NO\"\nassert solution(\"SMARTPHONE\") == \"NO\"\n"
    },
    {
        "number": 2416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n3 5 2 1 4\\n4 3 2 5 1\\n') == '2'\nassert solution('7\\n5 2 3 6 7 1 4\\n2 3 6 7 1 4 5\\n') == '6'\nassert solution('2\\n1 2\\n1 2\\n') == '0'\nassert solution('7\\n5 2 3 6 7 1 4\\n2 3 6 7 1 4 5\\n') == '6'\nassert solution('2\\n1 2\\n1 2\\n') == '0'\n"
    },
    {
        "number": 2418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 -1 7 3\n2\n2 4 -3\n3 4 2\n''') == '5\\n5\\n6\\n'\nassert solution('''6\n-9 -10 -9 -6 -5 4\n3\n2 6 -9\n1 2 -10\n4 6 -3\n''') == '3\\n3\\n3\\n1\\n'\nassert solution('''1\n0\n2\n1 1 -1\n1 1 -1\n''') == '0\\n0\\n-1\\n'\nassert solution('''2\n-9 -10 -9 -6 -5 4\n3\n2 6 -9\n1 2 -10\n4 6 -3\n''') == '3\\n3\\n3\\n1\\n'\nassert solution('''3\n-9 -10 -9 -6 -5 4\n3\n2 6 -9\n1 2 -10\n4 6 -3\n''') == '3\\n3\\n3\\n1\\n'\n"
    },
    {
        "number": 2419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3\n11 11\n30 20\n''') == '3'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 2420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1\n1 -1\n-1 1\n-1 -1\n2 0''') == '3'\nassert solution('''5 2\n1 1\n1 -1\n-1 1\n-1 -1\n2 0''') == '5'\nassert solution('''5 3\n1 1\n1 -1\n-1 1\n-1 -1\n2 0''') == '6'\nassert solution('''5 4\n1 1\n1 -1\n-1 1\n-1 -1\n2 0''') == '7'\nassert solution('''5 5\n1 1\n1 -1\n-1 1\n-1 -1\n2 0''') == '8'\n"
    },
    {
        "number": 2421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 2422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n30\n67\n4\n14''') == '2 2 2'\nassert solution('''4\n30\n67\n4\n14''') == '7 5 3'\nassert solution('''4\n30\n67\n4\n14''') == '-1'\nassert solution('''4\n30\n67\n4\n14''') == '0 0 2'\nassert solution('''4\n30\n67\n4\n14''') == '2 2 2'\n"
    },
    {
        "number": 2423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n4 1\n4 2\n1 3\n1 5''') == '3'\nassert solution('''4\n1 2\n4 3\n1 4''') == '2'\nassert solution('''4\n1 2\n4 3\n1 4\n1 5''') == '2'\nassert solution('''4\n1 2\n4 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n1 384\n1 385\n1 386\n1 387\n1 388\n1 389\n1 390\n1 391\n1 392\n1 393\n1 394\n1 395\n1 396\n1 397\n1 398\n1 399\n1 400\n1 401\n1 402\n1 403\n1 404\n1 405\n1 406\n1 407\n1 408\n1 409\n1 410\n1 411\n1 412\n1 413\n1 414\n1 415\n1 416\n1 417\n1 418\n1 419\n1 420\n1 421\n1 422\n1 423\n1 424\n1 425\n1 426\n1 427\n1 428\n1 429\n1 430\n1 431\n1 432\n1 433\n1 434\n1 435\n1 436\n1 437\n1 438\n1 439\n1 440\n1 441\n1 442\n1 443\n1 444\n1 445\n1 446\n1 447\n1 448\n1 449\n1 450\n1 451\n1 452\n1 453\n1 454\n1 455\n1 456\n1 457\n1 458\n1 459\n1 460\n1 461\n1 462\n1 463\n1 464\n1 465\n1 466\n1 467\n1 468\n1 469\n1 470\n1 471\n1 472\n1 473\n1 474\n1 475\n1 476\n1 477\n1 478\n1 479\n1 480\n1 481\n1 482\n1 483\n1 484\n1 485\n1 486\n1 487\n1 488\n1 489\n1 490\n1 491\n1 492\n1 493\n1 494\n1 495\n1 496\n1 497\n1 498\n1 499\n1 500\n1 501\n1 502\n"
    },
    {
        "number": 2424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 2 1\n1 1\n''') == '124780545'\nassert solution('''5\n2 1 2\n2 3 1\n3 2 4 3\n2 1 4\n3 4 3 2\n''') == '798595483'\nassert solution('''10\n2 1 2\n2 3 1\n3 2 4 3\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n''') == '898998889'\nassert solution('''20\n2 1 2\n2 3 1\n3 2 4 3\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4 3 2\n2 1 4\n3 4"
    },
    {
        "number": 2425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\"
    },
    {
        "number": 2426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '1 2'\nassert solution('''3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '-1'\nassert solution('''3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '1 2'\nassert solution('''3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '-1'\nassert solution('''3\n3\n1 4 3\n1\n15\n2\n3 5\n''') == '1 2'\n"
    },
    {
        "number": 2427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n3 1 2 3 1 2 3 15\n''') == '6'\nassert solution('''10\n997230370 58052053 240970544 715275815 250707702 156801523 44100666 64791577 43523002 480196854\n''') == '2'\nassert solution('''100\n
    },
    {
        "number": 2428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ababcd\nabcba\na\nb\n"
    },
    {
        "number": 2429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n4\n''') == '2'\nassert solution('''2\n4\n4\n''') == '6'\nassert solution('''2\n6\n4\n''') == '0'\nassert solution('''2\n8\n4\n''') == '2'\nassert solution('''2\n10\n4\n''') == '2'\n"
    },
    {
        "number": 2430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1\n2''') == '5'\nassert solution('''5\n2\n1\n2\n1\n1''') == '14'\nassert solution('''5\n2\n1\n2\n1\n1''') == '14'\nassert solution('''5\n2\n1\n2\n1\n1''') == '14'\nassert solution('''5\n2\n1\n2\n1\n1''') == '14'\n"
    },
    {
        "number": 2431,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 3 4\n7 6\n1 1 2 3\n1\n1 1 2 2\n3\n''') == '2'\nassert solution('''2\n2 1 3 4\n7 6\n1 1 2 3\n1\n1 1 2 2\n3\n''') == '3'\nassert solution('''10\n6 5 4 5\n2 3 2 3 1 3\n1 5 2 3\n10\n4 4 2 3\n8 10 8 5\n2 2 1 4\n8 5\n3 5 3 5\n9 2 10\n4 5 5 5\n2 10 4 2\n2 3 1 4\n1 10\n3 1 5 3\n9 8 7\n2 5 4 5\n8 8\n3 5 1 4\n5 5 10\n''') == '0'\nassert solution('''6\n5 4 5 5\n2 3 2 3 1 3\n1 5 2 3\n10\n4 4 2 3\n8 10 8 5\n2 2 1 4\n8 5\n3 5 3 5\n9 2 10\n4 5 5 5\n2 10 4 2\n2 3 1 4\n1 10\n3 1 5 3\n9 8 7\n2 5 4 5\n8 8\n3 5 1 4\n5 5 10\n''') == '2'\nassert solution('''6\n5 4 5 5\n2 3 2 3 1 3\n1 5 2 3\n10\n4 4 2 3\n8 10 8 5\n2 2 1 4\n8 5\n3 5 3 5\n9 2 10\n4 5 5 5\n2 10 4 2\n2 3 1 4\n1 10\n3 1 5 3\n9 8 7\n2 5 4 5\n8 8\n3 5 1 4\n5 5 10\n''') == '3'\n"
    },
    {
        "number": 2432,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(2) == 2\nassert solution(5) == 24\nassert solution(35) == 50\nassert solution(0) == 0\nassert solution(1) == 1\n"
    },
    {
        "number": 2433,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '40'\nassert solution('''3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '34'\nassert solution('''3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '0'\nassert solution('''3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '0'\nassert solution('''3\n15 2 3\n5 10\n7 5 2\n10 12\n1 100 100\n100 100\n''') == '0'\n"
    },
    {
        "number": 2434,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n7 3''') == 'YES'\nassert solution('''6 3\n7 3''') == 'NO'\nassert solution('''6 3\n7 3''') == 'NO'\nassert solution('''6 3\n7 3''') == 'NO'\nassert solution('''6 3\n7 3''') == 'NO'\n"
    },
    {
        "number": 2435,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '6'\nassert solution('''3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '2'\nassert solution('''3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '3'\nassert solution('''3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '3'\nassert solution('''3\n6 4 3\n1 6\n2 3\n5 5\n4 1 2\n2 4\n1 2\n3 3 2\n2 3\n1 2\n''') == '3'\n"
    },
    {
        "number": 2436,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'\n\nassert solution('''4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '1'\n\nassert solution('''4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'\n\nassert solution('''4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'\n\nassert solution('''4\n5\n1 1 2 2 1\n6\n2 3 4 5 6 7\n6\n1 5 4 5 1 9\n5\n1 2 3 5 6\n''') == '6'"
    },
    {
        "number": 2437,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n6 2 4') == '0'\nassert solution('5\\n9 8 7 3 1') == '4'\nassert solution('5\\n9 8 7 3 1') == '4'\nassert solution('5\\n9 8 7 3 1') == '4'\nassert solution('5\\n9 8 7 3 1') == '4'\n"
    },
    {
        "number": 2438,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nAABBB\n''') == '6'\n\nassert solution('''3\nAAA\n''') == '3'\n\nassert solution('''7\nAAABABB\n''') == '15'\n\nassert solution('''7\nAAABABB\n''') == '15'\n\nassert solution('''7\nAAABABB\n''') == '15'"
    },
    {
        "number": 2439,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40''') == 'YES\\n1 -2 3 -4\\nNO\\nYES\\n1 1 -1 1 -1\\nYES\\n-40 13 40 0 -9 -31'\nassert solution('''4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40''') == 'NO\\n'\nassert solution('''4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40''') == 'NO\\n'\nassert solution('''4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40''') == 'NO\\n'\nassert solution('''4\n4\n1 -2 3 -4\n3\n0 0 0\n5\n1 -1 1 -1 1\n6\n40 -31 -9 0 13 -40''') == 'NO\\n'\n"
    },
    {
        "number": 2440,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5\n1 3 1 2 2\n1 4 1 3 2\n1 4 1 3 3\n4 2 3 3 9\n5 2 3 3 9\n''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n"
    },
    {
        "number": 2441,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2442,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6''') == '5'\nassert solution('''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6''') == '3'\nassert solution('''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6''') == '4'\nassert solution('''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6''') == '0'\nassert solution('''4\n6\n0 2 1 5 0 1\n3\n0 1 2\n4\n0 2 0 1\n6\n1 2 3 4 5 6''') == '0'\n"
    },
    {
        "number": 2443,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 5\n2 9 1\n''') == '6\\n3 9 2 9 8 0'\nassert solution('''3 10\n2 9 1\n''') == '6\\n3 9 2 9 8 0'\nassert solution('''3 10\n0 9 1\n''') == '6\\n3 9 2 9 8 0'\nassert solution('''3 10\n0 9 1\n''') == '6\\n3 9 2 9 8 0'\nassert solution('''3 10\n0 9 1\n''') == '6\\n3 9 2 9 8 0'\n"
    },
    {
        "number": 2444,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2445,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2446,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2447,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n7\n001\n100\n101\n010\n0\n1\n001100\n''') == '0\\n0\\n1\\n1\\n0\\n0\\n2'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 2448,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 1\nRPS\n3\n3 0 0\nRPS''') == 'YES'\nassert solution('''3\n1 1 1\nRPS\n3\n3 0 0\nRPS''') == 'PSR'\nassert solution('''3\n1 1 1\nRPS\n3\n3 0 0\nRPS''') == 'NO'\nassert solution('''3\n1 1 1\nRPS\n3\n3 0 0\nRPS''') == 'NO'\nassert solution('''3\n1 1 1\nRPS\n3\n3 0 0\nRPS''') == 'NO'\n"
    },
    {
        "number": 2449,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n11010\n00101\n11000\n''') == '4'\nassert solution('''30 2\n010101010101010010101010101010\n110110110110110011011011011011\n''') == '860616440'\nassert solution('''30 2\n010101010101010010101010101010\n110110110110110011011011011011\n''') == '860616440'\nassert solution('''30 2\n010101010101010010101010101010\n110110110110110011011011011011\n''') == '860616440'\nassert solution('''30 2\n010101010101010010101010101010\n110110110110110011011011011011\n''') == '860616440'\n"
    },
    {
        "number": 2450,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '10'\nassert solution('''1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '1'\nassert solution('''1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '20'\nassert solution('''1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '18'\nassert solution('''1 1 10 1\n.\n1 2 10 1\n..\n2 1 10 1\n.\n.\n3 3 3 7\n..*\n*..\n.*.\n''') == '1'\n"
    },
    {
        "number": 2451,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6 2 3 3\n1 2 1 3\n1 4 3 4\n1 2 2 3\n''') == '1\\n4\\n2'\nassert solution('''3 6 2 3 3\n1 2 1 3\n1 4 3 4\n1 2 2 3\n''') == '1\\n4\\n2'\nassert solution('''3 6 2 3 3\n1 2 1 3\n1 4 3 4\n1 2 2 3\n''') == '1\\n4\\n2'\nassert solution('''3 6 2 3 3\n1 2 1 3\n1 4 3 4\n1 2 2 3\n''') == '1\\n4\\n2'\nassert solution('''3 6 2 3 3\n1 2 1 3\n1 4 3 4\n1 2 2 3\n''') == '1\\n4\\n2'\n"
    },
    {
        "number": 2452,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1\n3\n7''') == '1\\n3 1 2\\n4 3 5 2 7 1 6'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 2453,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 3\n1 3\n3 8''') == '6 2 1'\nassert solution('''3\n1 3\n2 4\n5 7''') == '5 2 0'\nassert solution('''3\n1 3\n2 4\n5 7\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 2454,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n') == '4'\nassert solution('3\\n1 2\\n2 3\\n') == '10'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n') == '10'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '10'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '10'\n"
    },
    {
        "number": 2455,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''OXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0'\nassert solution('''OXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0'\nassert solution('''OXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0'\nassert solution('''OXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0'\nassert solution('''OXXXOXOOXOOX\nOXOXOXOXOXOX\nXXXXXXXXXXXX\nOOOOOOOOOOOO''') == '3 1x12 2x6 4x3\\n4 1x12 2x6 3x4 6x2\\n6 1x12 2x6 3x4 4x3 6x2 12x1\\n0'\n"
    },
    {
        "number": 2456,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n3 2\n3 1\n13 7\n1010000 9999999''') == '4'\nassert solution('''3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '4'\nassert solution('''3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '4'\nassert solution('''3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '4'\nassert solution('''3 4\n3 2\n3 1\n13 7\n1010000 9999999\n''') == '4'\n"
    },
    {
        "number": 2457,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 20 3 101 18''') == 'Yes'\nassert solution('''11 11 10 234 2''') == 'No'\nassert solution('''8 9 7 250 122''') == 'Yes'\nassert solution('''19 41 21 321 10''') == 'No'\nassert solution('''3 10 8 6 1''') == 'Yes'\n"
    },
    {
        "number": 2458,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2459,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\nassert solution('''6 3 5\n1 2 3 4 5 6\n2 1 3\n2 3 6\n1 1 6\n2 2 1 5 3\n''') == '3 3 1 5 2'\n"
    },
    {
        "number": 2460,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1''') == '3'\nassert solution('''3 2''') == '2 1'\nassert solution('''1 4''') == '0 0 0 1'\nassert solution('''2 4 6 10 15''') == '0 0 0 1'\nassert solution('''1 1 1 1 0''') == '0 0 0 1'\n"
    },
    {
        "number": 2461,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 2\n1 2\n''') == '6 6'\nassert solution('''3\n6 2 3\n1 2\n1 3\n''') == '6 6 6'\nassert solution('''1\n10\n''') == '10'\nassert solution('''2\n1 2\n1 3\n''') == '1 1'\nassert solution('''3\n1 2 3\n1 2\n1 3\n''') == '1 1 1'\n"
    },
    {
        "number": 2462,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7\\n7\\n23\\n31\\n36\\n44\\n100\\n258\\n') == 'NO\\nNO\\nYES\\n14 10 6 1\\nYES\\n5 6 10 15\\nYES\\n6 7 10 21\\nYES\\n2 10 33 55\\nYES\\n10 21 221 6'\nassert solution('7\\n7\\n23\\n31\\n36\\n44\\n100\\n258\\n') == 'NO\\nNO\\nYES\\n14 10 6 1\\nYES\\n5 6 10 15\\nYES\\n6 7 10 21\\nYES\\n2 10 33 55\\nYES\\n10 21 221 6'\nassert solution('7\\n7\\n23\\n31\\n36\\n44\\n100\\n258\\n') == 'NO\\nNO\\nYES\\n14 10 6 1\\nYES\\n5 6 10 15\\nYES\\n6 7 10 21\\nYES\\n2 10 33 55\\nYES\\n10 21 221 6'\nassert solution('7\\n7\\n23\\n31\\n36\\n44\\n100\\n258\\n') == 'NO\\nNO\\nYES\\n14 10 6 1\\nYES\\n5 6 10 15\\nYES\\n6 7 10 21\\nYES\\n2 10 33 55\\nYES\\n10 21 221 6'\nassert solution('7\\n7\\n23\\n31\\n36\\n44\\n100\\n258\\n') == 'NO\\nNO\\nYES\\n14 10 6 1\\nYES\\n5 6 10 15\\nYES\\n6 7 10 21\\nYES\\n2 10 33 55\\nYES\\n10 21 221 6'\n"
    },
    {
        "number": 2463,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\n"
    },
    {
        "number": 2464,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '34'\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2465,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n54\n50\n2\n178''') == '10'\nassert solution('''4\n50\n2\n178''') == '18'\nassert solution('''4\n50\n2\n178''') == '90'\nassert solution('''4\n50\n2\n178''') == '180'\nassert solution('''4\n50\n2\n178''') == '-1'\n"
    },
    {
        "number": 2466,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1,2,3\") == [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\nassert solution(\"1,2,3,4\") == [[1,2,3,4],[1,2,4,3],[1,3,2,4],[1,3,4,2],[1,4,2,3],[1,4,3,2],[2,1,3,4],[2,1,4,3],[2,3,1,4],[2,3,4,1],[2,4,1,3],[2,4,3,1],[3,1,2,4],[3,1,4,2],[3,2,1,4],[3,2,4,1],[3,4,1,2],[3,4,2,1],[4,1,2,3],[4,1,3,2],[4,2,1,3],[4,2,3,1],[4,3,1,2],[4,3,2,1]]\nassert solution(\"1,2,3,4,5\") == [[1,2,3,4,5],[1,2,3,5,4],[1,2,4,3,5],[1,2,4,5,3],[1,2,5,3,4],[1,2,5,4,3],[1,3,2,4,5],[1,3,2,5,4],[1,3,4,2,5],[1,3,4,5,2],[1,3,5,2,4],[1,3,5,4,2],[1,4,2,3,5],[1,4,2,5,3],[1,4,3,2,5],[1,4,3,5,2],[1,4,5,2,3],[1,4,5,3,2],[1,5,2,3,4],[1,5,2,4,3],[1,5,3,2,4],[1,5,3,4,2],[1,5,4,2,3],[1,5,4,3,2],[2,1,3,4,5],[2,1,3,5,4],[2,1,4,3,5],[2,1,4,5,3],[2,1,5,3,4],[2,1,5,4,3],[2,3,1,4,5],[2,3,1,5,4],[2,3,4,1,5],[2,3,4,5,1],[2,3,5,1,4],[2,3,5,4,1],[2,4,1,3,5],[2,4,1,5,3],[2,4,3,1,5],[2,4,3,5,1],[2,4,5,1,3],[2,4,5,3,1],[2,5,1,3,4],[2,5,1,4,3],[2,5,3,1,4],[2,5,3,4,1],[2,5,4,1,3],[2,5,4,3,1],[3,1,2,4,5],[3,1,2,5,4],[3,1,4,2,5],[3,1,4,5,2],[3,1,5,2,4],[3,1,5,4,2],[3,2,1,4,5],[3,2,1,5,4],[3,2,4,1,5],[3,2,4,5,1],[3,2,5,1,4],[3,2,5,4,1],[3,3,1,4,5],[3,3,1,5,4],[3,3,4,1,5],[3,3,4,5,1],[3,3,5,1,4],[3,3,5,4,1],[3,4,1,2,5],[3,4,1,5,2],[3,4,2,1,5],[3,4,2,5,1],[3,4,5,1,2],[3,4,5,2,1],[3,5,1,2,4],[3,5,1,4,2],[3,5,2,1,4],[3,5,2,4,1],[3,5,4,1,2],[3,5,4,2,1],[4,1,2,3,5],[4,1,2,5,3],[4,1,3,2,5],[4,1,3,5,2],[4,1,5,2,3],[4,1,5,3,2],[4,2,1,3,5],[4,2,1,5,3],[4,2,3,1,5],[4,2,3,5,1],[4,2,5,1,3],[4,2,5,3,1],[4,3,1,2,5],[4,3,1,5,2],[4,3,2,1,5],[4,3,2,5,1],[4,3,5,1,2],[4,3,5,2,1],[4,4,1,2,5],[4,4,1,5,2],[4,4,2,1,5],[4,4,2,5,1],[4,4,5,1,2],[4,4,5,2,1],[4,5,1,2,3],[4,5,1,3,2],[4,5,2,1,3],[4,5,2,3,1],[4,5,3,1,2],[4,5,3,2,1],[5,1,2,3,4],[5,1,2,4,3],[5,1,3,2,4],[5,1,3,4,2],[5,1,4,2,3],[5,1,4,3,2],[5,2,1,3,4],[5,2,1,4,3],[5,2,3,1,4],[5,2,3,4,1],[5,2,4,1,3],[5,2,4,3,1],[5,3,1,2,4],[5,3,1,4,2],[5,3,2,1,4],[5,3,2,4,1],[5,3,4,1,2],[5,3,4,2,1],[5,4,1,2,3],[5,4,1,3,2],[5,4,2,1,3],[5,4,2,3,1],[5,4,3,1,2],[5,4,3,2,1]]\nassert solution(\"1,2,3,4,5,6\") == [[1,2,3,4,5,6],[1,2,3,6,4,5],[1,2,4,3,6,5],[1,2,4,5,3,6],[1,3,2,4,5,6],[1,3,2,6,5,4],[1,3,4,2,6,5],[1,3,4,5,2,6],[1,3,6,2,4,5],[1,3,6,5,4,2],[1,4,2,3,5,6],[1,4,2,6,5,3],[1,4,3,2,6,5],[1,4,3,5,2,6],[1,4,5,2,3,6],[1,4,5,3,2,6],[1,6,2,3,4,5],[1,6,2,5,3,4],[1,6,3,2,5,4],[1,6,3,4,2,5],[1,6,4,2,3,5],[1,6,4,5,2,3],[2,1,3,4,5,6],[2,1,3,6,5,4],[2,1,4,3,6,5],[2,1,4,5,3,6],[2,1,6,3,4,"
    },
    {
        "number": 2467,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2468,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(()\") == 2\nassert solution(\")()())\") == 4\nassert solution(\"(()\") == 2\nassert solution(\"(()))\") == 4\nassert solution(\"\") == 0\n"
    },
    {
        "number": 2469,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([3,2,3]) == [3]\nassert solution([1,1,1,3,3,2,2,2]) == [1,2]\nassert solution([1,1,1,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,"
    },
    {
        "number": 2470,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5 3 6 7''') == '1'\nassert solution('''1 3 2 4''') == '2'\nassert solution('''1 5 3 6 7''') == '1'\nassert solution('''1 3 2 4''') == '2'\nassert solution('''1 5 3 6 7''') == '1'\n"
    },
    {
        "number": 2471,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4''') == '0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0'\nassert solution('''4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4''') == '0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0'\nassert solution('''4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4''') == '0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0'\nassert solution('''4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4''') == '0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0'\nassert solution('''4 5 8\n1 1\n1 4\n1 5\n2 3\n3 1\n3 2\n3 4\n4 4''') == '0\\n0\\n0\\n2\\n4\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 2472,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 2473,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == '21'\nassert solution('1 4') == '1'\nassert solution('3 3') == '6'\nassert solution('6 2') == '8'\nassert solution('8 1') == '1'\n"
    },
    {
        "number": 2474,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n\"\"\""
    },
    {
        "number": 2475,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2476,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2477,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4'\n"
    },
    {
        "number": 2478,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2479,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2480,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2481,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9 9\n9 9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 9 0 9 9 9\n9 9 9 9 2 9 9 9 0 9 9\n9 2 9 9 9 9 9 9 9 9 0\n-1 -1 -1 -1''') == '12'\nassert solution('''0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9 9\n9 9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 9 0 9 9 9\n9 9 9 9 2 9 9 9 0 9 9\n9 2 9 9 9 9 9 9 9 9 0\n-1 -1 -1 -1''') == '12'\nassert solution('''0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9 9\n9 9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 9 0 9 9 9\n9 9 9 9 2 9 9 9 0 9 9\n9 2 9 9 9 9 9 9 9 9 0\n-1 -1 -1 -1''') == '12'\nassert solution('''0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9 9\n9 9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 9 0 9 9 9\n9 9 9 9 2 9 9 9 0 9 9\n9 2 9 9 9 9 9 9 9 9 0\n-1 -1 -1 -1''') == '12'\nassert solution('''0 9 9 9 9 9 9 9 9 9\n9 0 9 9 9 9 9 9 9 9 9\n9 9 0 9 9 9 9 9 9 9 9\n9 9 9 0 9 9 9 9 9 9 9\n9 9 9 9 0 9 9 9 9 9 2\n9 9 9 9 9 0 9 9 9 9 9\n9 9 9 9 9 9 0 9 9 9 9\n9 9 9 9 9 9 9 0 9 9 9\n9 9 9 9 2 9 9 9 0 9 9\n9 2 9 9 9 9 9 9 9 9 0\n-1 -1 -1 -1''') == '12'\n"
    },
    {
        "number": 2482,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2483,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2484,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 5 4 6''') == '5'\nassert solution('''4\n2 5 4 6''') == '5'\nassert solution('''4\n2 5 4 6''') == '5'\nassert solution('''4\n2 5 4 6''') == '5'\nassert solution('''4\n2 5 4 6''') == '5'\n"
    },
    {
        "number": 2485,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2486,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '0'\n"
    },
    {
        "number": 2487,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2488,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 2\n1 2\n5 4\n9 2''') == '2'\nassert solution('''3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2\n3 3 2\n1 2\n5 4\n9 2"
    },
    {
        "number": 2489,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2490,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''36''') == '8'\nassert solution('''1''') == '1'\nassert solution('''10''') == '1'\nassert solution('''100''') == '1'\nassert solution('''1000''') == '1'\n"
    },
    {
        "number": 2491,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 4\\n2 3 3\\n1 3 5') == '7'\nassert solution('3 3\\n1 2 4\\n2 3 3\\n1 3 5') == '7'\nassert solution('3 3\\n1 2 4\\n2 3 3\\n1 3 5') == '7'\nassert solution('3 3\\n1 2 4\\n2 3 3\\n1 3 5') == '7'\nassert solution('3 3\\n1 2 4\\n2 3 3\\n1 3 5') == '7'\n"
    },
    {
        "number": 2492,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[stdin.index('-6') + 1:]\n\"\"\""
    },
    {
        "number": 2493,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2494,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('12') == '3'\nassert solution('24') == '6'\nassert solution('36') == '9'\nassert solution('48') == '12'\n"
    },
    {
        "number": 2495,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 -3 1 0') == '4'\nassert solution('1 -3 1 0') == '4'\nassert solution('1 -3 1 0') == '4'\nassert solution('1 -3 1 0') == '4'\nassert solution('1 -3 1 0') == '4'\n"
    },
    {
        "number": 2496,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 5') == 'pairwise coprime'\nassert solution('3\\n3 4 5\\n3 4 5') =='setwise coprime'\nassert solution('3\\n3 4 5\\n3 4 5\\n3 4 5') == 'not coprime'\nassert solution('3\\n3 4 5\\n3 4 5\\n3 4 5\\n3 4 5') == 'not coprime'\nassert solution('3\\n3 4 5\\n3 4 5\\n3 4 5\\n3 4 5\\n3 4 5') == 'not coprime'\n"
    },
    {
        "number": 2497,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 3 D\n3 0 L''') == '0'\nassert solution('''0 3 D\n3 0 L\n0 3 D\n3 0 L''') == '0'\nassert solution('''0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L''') == '0'\nassert solution('''0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D\n3 0 L\n0 3 D"
    },
    {
        "number": 2498,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 50') == '2'\nassert solution('2 50') == '2'\nassert solution('2 50') == '2'\nassert solution('2 50') == '2'\nassert solution('2 50') == '2'\n"
    },
    {
        "number": 2499,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 6 5''') == '12'\nassert solution('''3\n3 6 5''') == '12'\nassert solution('''3\n3 6 5''') == '12'\nassert solution('''3\n3 6 5''') == '12'\nassert solution('''3\n3 6 5''') == '12'\n"
    },
    {
        "number": 2500,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 2501,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1\\n') == '1'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '0'\nassert solution('2\\n4\\n') == '0'\nassert solution('2\\n5\\n') == '0'\n"
    },
    {
        "number": 2502,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcabab') == '3'\nassert solution('ab') == '-1'\nassert solution('abcababab') == '3'\nassert solution('abcabababab') == '4'\nassert solution('abcababababab') == '-1'\n"
    },
    {
        "number": 2503,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2504,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2505,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-1 3\\n2 1\\n3 -2') == '13'\nassert solution('-1 3\\n2 1\\n3 -2\\n-1 -1\\n2 2\\n3 3') == '13'\nassert solution('-1 3\\n2 1\\n3 -2\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3') == '13'\nassert solution('-1 3\\n2 1\\n3 -2\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-1 -1\\n2 2\\n3 3\\n-"
    },
    {
        "number": 2506,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2507,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2508,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2509,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2510,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2511,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2512,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 3\n1 1 3\n2 1 4\n1 2 5''') == '8'\nassert solution('''2 2 3\n1 1 3\n2 1 4\n1 2 5''') == '7'\nassert solution('''2 2 3\n1 1 3\n2 1 4\n1 2 5''') == '8'\nassert solution('''2 2 3\n1 1 3\n2 1 4\n1 2 5''') == '7'\nassert solution('''2 2 3\n1 1 3\n2 1 4\n1 2 5''') == '8'\n"
    },
    {
        "number": 2513,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '-1'\nassert solution('ooxoox') == 'SSSWWS'\nassert solution('ooxxoo') == '-1'\nassert solution('xoxoox') == '-1'\nassert solution('xoxxoo') == '-1'\n"
    },
    {
        "number": 2514,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n3\n1 2\n3 4\n2 4''') == '11 12 16'\nassert solution('''1 2 3 4\n3\n1 2\n3 4\n2 4''') == '11 12 16'\nassert solution('''1 2 3 4\n3\n1 2\n3 4\n2 4''') == '11 12 16'\nassert solution('''1 2 3 4\n3\n1 2\n3 4\n2 4''') == '11 12 16'\nassert solution('''1 2 3 4\n3\n1 2\n3 4\n2 4''') == '11 12 16'\n"
    },
    {
        "number": 2515,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n''') == '2'\nassert solution('''1 7\n''') == '2'\nassert solution('''1 3\n2 7\n''') == '2'\nassert solution('''1 3\n2 7\n3 5\n''') == '2'\nassert solution('''1 3\n2 7\n3 5\n4 9\n''') == '3'\n"
    },
    {
        "number": 2516,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '6'\nassert solution('3543') == '6'\nassert solution('3543') == '6'\nassert solution('3543') == '6'\nassert solution('3543') == '6'\n"
    },
    {
        "number": 2517,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4''') == '2'\nassert solution('''3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4''') == '2'\nassert solution('''3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4''') == '2'\nassert solution('''3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4''') == '2'\nassert solution('''3 3 3\n1 2 3\n1 2 1\n2 3 1\n3 1 4''') == '2'\n"
    },
    {
        "number": 2518,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5 3\n8\n7\n4\n2''') == '2'\nassert solution('''4 5 3\n8\n7\n4\n2''') == '2'\nassert solution('''4 5 3\n8\n7\n4\n2''') == '2'\nassert solution('''4 5 3\n8\n7\n4\n2''') == '2'\nassert solution('''4 5 3\n8\n7\n4\n2''') == '2'\n"
    },
    {
        "number": 2519,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2520,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2521,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n1 4 1 5 9') == '1'\nassert solution('2\\n3 1 4 1 5 9') == '1'\nassert solution('2\\n3 1 4 1 5 9') == '1'\nassert solution('2\\n3 1 4 1 5 9') == '1'\nassert solution('2\\n3 1 4 1 5 9') == '1'\n"
    },
    {
        "number": 2522,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2523,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"010\") == 2\nassert solution(\"101\") == 1\nassert solution
    },
    {
        "number": 2524,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2525,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a' * 10) == 'a' * 10\nassert solution('a' * 10 + 'b') == 'b' + 'a' * 10\nassert solution('a' * 10 + 'b' * 2) == 'b' * 2 + 'a' * 10\n"
    },
    {
        "number": 2526,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2527,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('iloveyou') == 'happy'\nassert solution('ulrvysioqjifo') =='sad'\nassert solution('abcvleouioydef') == 'happy'\nassert solution('abcdefghijklmnopqrstuvwxyz') =='sad'\nassert solution('abcdefghijklmnopqrstuvwxyz') =='sad'\n"
    },
    {
        "number": 2528,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 0 2 3 0 4''') == '2'\nassert solution('''1\n0''') == '0'\nassert solution('''3\n1 0 1''') == '1'\nassert solution('''4\n1 0 1 0''') == '0'\nassert solution('''5\n1 0 1 0 0''') == '0'\n"
    },
    {
        "number": 2529,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30 120.00') == '89.50'\nassert solution('42 120.00') == '120.00'\nassert solution('300 120.00') == '120.00'\nassert solution('0 0.00') == '0.00'\nassert solution('0 0.0') == '0.00'\n"
    },
    {
        "number": 2530,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\nLeibniz Germany\nLeibniz\nLeibniz\nLeibniz\n''') == 'Germany\\nLeibniz'\nassert solution('''4 5\nRamanujan India\nTorricelli Italy\nGauss Germany\nLagrange Italy\nRamanujan\nTorricelli\nTorricelli\nRamanujan\nLagrange\n''') == 'Italy\\nRamanujan'\nassert solution('''2 2\nNewton England\nEuclid Greece\nNewton\nEuclid\n''') == 'England\\nEuclid'\nassert solution('''2 2\nNewton England\nEuclid Greece\nNewton\nEuclid\n''') == 'England\\nEuclid'\nassert solution('''2 2\nNewton England\nEuclid Greece\nNewton\nEuclid\n''') == 'England\\nEuclid'\n"
    },
    {
        "number": 2531,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2532,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '''21 22 23 24 25 26 27 28 29 30'''\nassert solution('''1 1''') == '''89 144 233 377 610 987 1597 2584 4181 6765'''\nassert solution('''1 1''') == '''89 144 233 377 610 987 1597 2584 4181 6765'''\nassert solution('''1 1''') == '''89 144 233 377 610 987 1597 2584 4181 6765'''\nassert solution('''1 1''') == '''89 144 233 377 610 987 1597 2584 4181 6765'''\n"
    },
    {
        "number": 2533,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 1''') == 'YES'\nassert solution('''3 2\n1 2\n2 3\n''') == 'NO'\nassert solution('''5 6\n1 2\n2 3\n3 4\n2 4\n2 5\n1 5\n''') == 'YES'\nassert solution('''5 6\n1 2\n2 3\n3 4\n2 4\n2 5\n1 5\n''') == 'NO'\nassert solution('''5 6\n1 2\n2 3\n3 4\n2 4\n2 5\n1 5\n1 2\n2 3\n3 4\n2 4\n2 5\n1 5\n''') == 'NO'\n"
    },
    {
        "number": 2534,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n9 8 8\n2 6 11''') == '8'\nassert solution('''3 3\n9 8 11\n2 6 34\n5 9 11''') == 'GUESS'\nassert solution('''2 2\n10 10\n10 10''') == '10'\nassert solution('''2 2\n10 10\n10 10\n10 10''') == '10'\nassert solution('''2 2\n10 10\n10 10\n10 10\n10 10''') == '10'\n"
    },
    {
        "number": 2535,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3\n100101110000001011000001111110010011110010010111000101\n001010000000101111100000000000000111101010101111111010\n011110011110000001010100101110001011111010001001111010\n''') == '360'\nassert solution('''6 3\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n''') == '1'\nassert solution('''3 2\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n''') == '360'\nassert solution('''3 2\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n000000000000000000000000000000000000000000000000000000\n00000000000000000000000000000000"
    },
    {
        "number": 2536,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n4 5\n7 0\n2\n1 2\n2 2''') == '9'\nassert solution('''1 3\n1 2 3\n2\n1 3\n3 1\n''') == '-1'\nassert solution('''1 3\n1 2 3\n2\n1 1\n3 1\n''') == '4'\nassert solution('''1 3\n1 2 3\n2\n1 1\n3 1\n''') == '-1'\nassert solution('''1 3\n1 2 3\n2\n1 1\n3 1\n''') == '4'\n"
    },
    {
        "number": 2537,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa''') == 'YES'\nassert solution('''ab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa''') == 'YES'\nassert solution('''ab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa''') == 'NO'\nassert solution('''ab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa''') == 'NO'\nassert solution('''ab\nacxb\ncax\na\naaaa\naaabbcc\na\naaaa\naabbcc\nab\nbaaa\naaaaa''') == 'YES'\n"
    },
    {
        "number": 2538,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 4\n2 1 0\n3 5 5\n4 10 6''') == '3'\nassert solution('''5 3 4\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6''') == '1'\nassert solution('''5 3 4\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6''') == '2'\nassert solution('''5 3 4\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n2 1 0\n3 5 5\n4 10 6\n"
    },
    {
        "number": 2539,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n7 22 1\n7 22 2\n7 22 3''') == '9\\n13\\n15'\nassert solution('''5\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46''') == '187\\n87\\n139\\n128\\n141'\nassert solution('''1\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n12 12 12\n13 13 13\n14 14 14\n15 15 15\n16 16 16\n17 17 17\n18 18 18\n19 19 19\n20 20 20\n21 21 21\n22 22 22\n23 23 23\n24 24 24\n25 25 25\n26 26 26\n27 27 27\n28 28 28\n29 29 29\n30 30 30\n31 31 31\n32 32 32\n33 33 33\n34 34 34\n35 35 35\n36 36 36\n37 37 37\n38 38 38\n39 39 39\n40 40 40\n41 41 41\n42 42 42\n43 43 43\n44 44 44\n45 45 45\n46 46 46\n47 47 47\n48 48 48\n49 49 49\n50 50 50\n51 51 51\n52 52 52\n53 53 53\n54 54 54\n55 55 55\n56 56 56\n57 57 57\n58 58 58\n59 59 59\n60 60 60\n61 61 61\n62 62 62\n63 63 63\n64 64 64\n65 65 65\n66 66 66\n67 67 67\n68 68 68\n69 69 69\n70 70 70\n71 71 71\n72 72 72\n73 73 73\n74 74 74\n75 75 75\n76 76 76\n77 77 77\n78 78 78\n79 79 79\n80 80 80\n81 81 81\n82 82 82\n83 83 83\n84 84 84\n85 85 85\n86 86 86\n87 87 87\n88 88 88\n89 89 89\n90 90 90\n91 91 91\n92 92 92\n93 93 93\n94 94 94\n95 95 95\n96 96 96\n97 97 97\n98 98 98\n99 99 99\n100 100 100\n101 101 101\n102 102 102\n103 103 103\n104 104 104\n105 105 105\n106 106 106\n107 107 107\n108 108 108\n109 109 109\n110 110 110\n111 111 111\n112 112 112\n113 113 113\n114 114 114\n115 115 115\n116 116 116\n117 117 117\n118 118 118\n119 119 119\n120 120 120\n121 121 121\n122 122 122\n123 123 123\n124 124 124\n125 125 125\n126 126 126\n127 127 127\n128 128 128\n129 129 129\n130 130 130\n131 131 131\n132 132 132\n133 133 133\n134 134 134\n135 135 135\n136 136 136\n137 137 137\n138 138 138\n139 139 139\n140 140 140\n141 141 141\n142 142 142\n143 143 143\n144 144 144\n145 145 145\n146 146 146\n147 147 147\n148 148 148\n149 149 149\n150 150 150\n151 151 151\n152 152 152\n153 153 153\n154 154 154\n155 155 155\n156 156 156\n157 157 157\n158 158 158\n159 159 159\n160 160 160\n161 161 161\n162 162 162\n163 163 163\n164 164 164\n165 165 165\n166 166 166\n167 167 167\n168 168 168\n169 169 169\n170 170 170\n171 171 171\n172 172 172\n173 173 173\n174 174 174\n175 175 175\n176 176 176\n177 177 177\n178 178 178\n179 179 179\n180 180 180\n181 181 181\n182 182 182\n183 183 183\n184 184 184\n185 185 185\n186 186 186\n187 187 187\n188 188 188\n189 189 189\n190 190 190\n191 191 191\n192 192 192\n193 193 193\n194 194 194\n195 195 195\n196 196 196\n197 197 197\n198 198 198\n199 199 199\n200 200 200\n201 201 201\n202 202 202\n203 203 203\n204 204 204\n205 205 205\n206 206 206\n207 207 207\n208 208 208\n209 209 209\n210 210 210\n211 211 211\n212 212 212\n213 213 213\n214 214 214\n215 215 215\n216 216 216\n217 217 217\n218 218 218\n219 219 219\n220 220 220\n221 221 221\n222 222 222\n223 223 223\n224 224 224\n225 225 225\n226 226 226\n227 227 227\n228 228 228\n229 229 229\n230 230 230\n231 231 231\n232 232 232\n233 233 233\n234 234 234\n235 235 235\n236 236 236\n237 237 237\n238 238 238\n239 239 239\n240 240 240\n241 241 241\n242 242 242\n243 243 243\n244 244 244\n245 245 245\n246 246 246\n247 247 247\n248 248 248\n249 249 249\n250 250 250\n251 251 251\n252 252 252\n253 253 253\n254 254 254\n255 255 255\n256 256 256\n257 257 257\n258 258 258\n259 259 259\n260 260 260\n261 261 261\n262 262 262\n263 263 263\n264 264 264\n265 265 265\n266 266 266\n267 267 267\n268 268 268\n269 269 269\n270 270 270\n271 271 271\n272 272 272\n273 273 273\n274 274 274\n275 275 275\n276 276 276\n277 277 277\n278 278 278\n279 279 279\n280 280 280\n281 281 281\n282 282 282\n283 283 283\n284 284 284\n285 285 285\n286 286 286\n287 287 287\n288 288 288\n289 289 289\n290 290 290\n291 291 291\n292 292 292\n293 293 293\n294 294 294\n295 295 295\n296 296 296\n297 297 297\n298 298 298\n299 299 299\n300 300 300\n301 301 301\n302 302 302\n303 303 303\n304 304 304\n305 305 305\n306 306 306\n307 307 307\n308 308 308\n309 309 309\n310 310 310\n311 311 311\n312 312 312\n313 313 313\n314 314 314\n315 315 315\n316 316 316\n317 317 317\n318 318 318\n319 319 319\n320 320 320\n321 321 321\n322 322 322\n323 323 323\n324 324 324\n325 325 325\n326 326 326\n327 327 327\n328 328 328\n329 329 329\n330 330 330\n331 331 331\n332 332 332\n333 333 333\n334 334 334\n335 335 335\n336 336 336\n337 337 337\n338 338 338\n339 339 339\n340 340 340\n341 341 341\n342 342 342\n343 343 343\n344 344 344\n345 345 345\n346 346 346\n347 347 347\n348 348 348\n349 349 349\n350 350 350\n351 351 351\n352 352 352\n353 353 353\n354 354 354\n355 355 355\n356 356 356\n357 357 357\n358 358 358\n359 359 359\n360 360 360\n361 361 361\n362 362 362\n363 363 363\n364 364 364\n365 365 365\n366 366 366\n367 367 367\n368 368 368\n369 369 369\n370 370 370\n371 371 371\n372 372 372\n373 373 373\n374 374 374\n375 375 375\n376 376 376\n377 377 377\n378 378 378\n379 379 379\n380 380 380\n381 381 381\n382 382 382\n383 383 383\n384 384 384\n385 385 385\n386 386 386\n387 387 387\n388 388 388\n389 389 389\n390 390 390\n391 391 391\n392 392 392\n393 393 393\n394 394 394\n395 395 395\n396 396 396\n397 397 397\n398 398 398\n399 399 399\n400 400 400\n401 401 401\n402 402 402\n403 403 403\n404 404 404\n405 405 405\n406 406 406\n407 407"
    },
    {
        "number": 2540,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 3 4\n1 2\n2 3\n2 4\n''') == '10 9 3 4'\nassert solution('''15\n1 2 3 1 2 3 3 1 1 3 2 2 1 2 3\n1 2\n1 3\n1 4\n1 14\n1 15\n2 5\n2 6\n2 7\n3 8\n3 9\n3 10\n4 11\n4 12\n4 13\n''') == '6 5 4 3 2 3 3 1 1 3 2 2 1 2 3'\n"
    },
    {
        "number": 2541,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4\n9 9\n5 7\n12 29\n137 591\n1 1000000''') == '2\\n1\\n0\\n3\\n17\\n1111'\n'''"
    },
    {
        "number": 2542,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''95831\n100120013\n252525252525''') == '3'\nassert solution('''95831\n100120013\n252525252525''') == '5'\nassert solution('''95831\n100120013\n252525252525''') == '0'\nassert solution('''95831\n100120013\n252525252525''') == '0'\nassert solution('''95831\n100120013\n252525252525''') == '0'\n"
    },
    {
        "number": 2543,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1''') == '0'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1''') == '9'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1''') == '0'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1''') == '9'\nassert solution('''5 6 3\n1 2 3 4 5\n1 2 3 4 5 6\n1 1 10\n1 1 -9\n1 5 -1''') == '0'\n"
    },
    {
        "number": 2544,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 2\n1 3\n2 4\n2 5\n6\n1 2\n1 3\n1 4\n2 5\n2 6''') == '1 2\\n1 2\\n1 3\\n2 3'\nassert solution('''5\n5\n1 2\n1 3\n2 4\n2 5\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6\n1 2\n1 3\n1 4\n2 5\n2 6"
    },
    {
        "number": 2545,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n2') == 'NO'\nassert solution('1\\n2\\n1') == 'YES'\nassert solution('1\\n2\\n2') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\n"
    },
    {
        "number": 2546,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7''') == '11'\nassert solution('''3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7''') == '1337'\nassert solution('''3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7''') == '6'\nassert solution('''3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7''') == '6'\nassert solution('''3\n3 26\n10 12\n1 4\n10 11\n1 1337\n1 1000000000\n5 26\n4 4\n2 4\n6 8\n5 6\n2 7''') == '6'\n"
    },
    {
        "number": 2547,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3 1''') == '24'\nassert solution('''6 0 0''') == '-1'\nassert solution('''11 1 0''') == '6 5 1'\nassert solution('''9 0 1''') == '-1'\nassert solution('''21 1 1''') == '39'\n"
    },
    {
        "number": 2548,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n120\n5\n11011\n6\n600005''') == '3'\nassert solution('''3\n3\n120\n5\n11011\n6\n600005''') == '6'\nassert solution('''3\n3\n120\n5\n11011\n6\n600005''') == '1'\nassert solution('''3\n3\n120\n5\n11011\n6\n600005''') == '3'\nassert solution('''3\n3\n120\n5\n11011\n6\n600005''') == '6'\n"
    },
    {
        "number": 2549,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 3 1\n2 1\n1 2''') == '665496237'\nassert solution('''3 3\n4 2 6\n3 1\n1 2\n2 3''') == '0'\nassert solution('''3 3\n4 2 6\n3 1\n1 2\n2 3''') == '8'\nassert solution('''3 3\n4 2 6\n3 1\n1 2\n2 3''') == '665496236'\nassert solution('''3 3\n4 2 6\n3 1\n1 2\n2 3''') == '0'\n"
    },
    {
        "number": 2550,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2551,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''aabce\nace\nabacaba\naax\nty\nyyt''') == '1'\nassert solution('''aabce\nace\nabacaba\naax\nty\nyyt''') == '-1'\nassert solution('''aabce\nace\nabacaba\naax\nty\nyyt''') == '3'\nassert solution('''aabce\nace\nabacaba\naax\nty\nyyt''') == '1'\nassert solution('''aabce\nace\nabacaba\naax\nty\nyyt''') == '-1'\n"
    },
    {
        "number": 2552,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n7 4\n1 0 1 1 0 1 0\n4 0 0 -1 0 -1 0\n1 2\n1 3\n1 4\n3 5\n3 6\n3 7\n5 11\n1 2 5 2 1\n-11 -2 -6 -2 -1\n1 2\n1 3\n1 4\n3 5\n''') == 'YES'\nassert solution('''2\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n''') == 'NO'\nassert solution('''2\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n''') == 'NO'\nassert solution('''2\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n''') == 'NO'\nassert solution('''2\n4 4\n1 1 1 1\n4 1 -3 -1\n1 2\n1 3\n1 4\n3 13\n3 3 7\n13 1 4\n1 2\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 2553,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103''') == 'Yes'\nassert solution('''1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103''') == 'No'\nassert solution('''1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103''') == 'Yes'\nassert solution('''1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103''') == 'No'\nassert solution('''1 1\n999\n1 1\n1000\n2 1\n51 50\n2 2\n51 50\n3 3\n101 102 103''') == 'Yes'\n"
    },
    {
        "number": 2554,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1''') == '26\\n5\\n37\\n5'\n\nassert solution('''4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1''') == '26\\n5\\n37\\n5'\n\nassert solution('''4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1''') == '26\\n5\\n37\\n5'\n\nassert solution('''4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1''') == '26\\n5\\n37\\n5'\n\nassert solution('''4\n8\n1 7 3 4 7 6 2 9\n5\n1 2 1 2 1\n10\n7 8 4 5 7 6 8 9 7 3\n4\n3 1 2 1''') == '26\\n5\\n37\\n5'"
    },
    {
        "number": 2555,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\nassert solution('''3\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\nassert solution('''3\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\nassert solution('''3\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\nassert solution('''3\n3 1\n1 3 2\n1 2\n2 2\n1 2\n1 2\n1 2\n7 5\n1 2 5 4 3 6 7\n1 2\n6 7\n3 4\n1 2\n2 3''') == '3\\n4\\n2\\n2\\n2\\n9\\n10\\n10\\n10\\n9\\n11'\n"
    },
    {
        "number": 2556,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\\n1\\n18\\n10'\nassert solution('''4\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\\n1\\n18\\n10'\nassert solution('''4\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\\n1\\n18\\n10'\nassert solution('''4\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\\n1\\n18\\n10'\nassert solution('''4\n1 10000\n10000 1\n2 6\n4 6\n''') == '100000000\\n1\\n18\\n10'\n"
    },
    {
        "number": 2557,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2558,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1''') == '1'\nassert solution('''1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1''') == '2'\nassert solution('''1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1''') == '-1'\nassert solution('''1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1''') == '5'\nassert solution('''1 1 1 1\n2 2 2 2\n1 2 3 4\n4 3 2 1\n228 21 11 3\n239 21 11 3\n1000000 1 1000000 1''') == '534'\n"
    },
    {
        "number": 2559,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n1 2 3\n3 2 4\n2 4 3\n4 5 6\n5 6 5\n2\n1 2 1\n1 3 2\n1 4 3''') == '15 33'\nassert solution('''1\n2\n1 2 1\n1 3 2\n1 4 3''') == '6 6'\nassert solution('''1\n2\n1 2 1\n1 3 2\n1 4 3''') == '15 33'\nassert solution('''1\n2\n1 2 1\n1 3 2\n1 4 3''') == '6 6'\nassert solution('''1\n2\n1 2 1\n1 3 2\n1 4 3''') == '15 33'\n"
    },
    {
        "number": 2560,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n6 4 5''') == 'Yes'\nassert solution('''5 2 3\n6 4 5''') == 'No'\nassert solution('''5 2 3\n6 4 5''') == 'Yes'\nassert solution('''5 2 3\n6 4 5''') == 'No'\nassert solution('''5 2 3\n6 4 5''') == 'Yes'\n"
    },
    {
        "number": 2561,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n1\n2''') == '1'\nassert solution('''0\n2\n2''') == '2'\nassert solution('''0\n2\n3''') == '0'\nassert solution('''0\n2\n4''') == '1'\nassert solution('''0\n2\n5''') == '0'\n"
    },
    {
        "number": 2562,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 3 1''') == '12'\nassert solution('''4\n2 3 4 6''') == '39'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''3\n1''') == '1'\n"
    },
    {
        "number": 2563,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2564,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2565,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1''') == '4'\nassert solution('''2\n3 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1''') == '2'\nassert solution('''2\n3 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1''') == '0'\nassert solution('''2\n3 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1''') == '0'\nassert solution('''2\n3 3 2\n3 3 1\n4 0 1\n2 3 0\n0 0 1\n0 0 1''') == '0'\n"
    },
    {
        "number": 2566,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2567,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2568,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('+') == ''\nassert solution('++-') == '1'\nassert solution('++--') == '2'\nassert solution('++---') == '3'\n"
    },
    {
        "number": 2569,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\nassert solution('''1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\nassert solution('''1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\nassert solution('''1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\nassert solution('''1\n2\n3\n4\n5\n100\n2000000\n''') == '0'\n"
    },
    {
        "number": 2570,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes\\nYes\\nNo\\nNo'\n\nassert solution('''4\n3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes\\nYes\\nNo\\nNo'\n\nassert solution('''4\n3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes\\nYes\\nNo\\nNo'\n\nassert solution('''4\n3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes\\nYes\\nNo\\nNo'\n\nassert solution('''4\n3 4\n1 2 3\n1 1 2\n\n2 6\n1 4\n2 5\n\n4 4\n1 2 3 4\n1 2 3 4\n\n1 5\n5\n5\n\n''') == 'Yes\\nYes\\nNo\\nNo'"
    },
    {
        "number": 2571,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 2572,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18''') == '8'\nassert solution('''2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18''') == '42'\nassert solution('''2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18''') == '8'\nassert solution('''2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18''') == '42'\nassert solution('''2\n4 2\n4 2\n2 4\n4 2\n2 4\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 18''') == '8'\n"
    },
    {
        "number": 2573,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '0'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '1'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '2'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '2'\nassert solution('''5 3 5\n4 4\n3 5\n2 4\n3 4\n3 5''') == '1'\n"
    },
    {
        "number": 2574,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1''') == '-120\\n12\\n0\\n945'\nassert solution('''4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1''') == '-120\\n12\\n0\\n945'\nassert solution('''4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1''') == '-120\\n12\\n0\\n945'\nassert solution('''4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1''') == '-120\\n12\\n0\\n945'\nassert solution('''4\n5\n-1 -2 -3 -4 -5\n6\n-1 -2 -3 1 2 -1\n6\n-1 0 0 0 -1 -1\n6\n-9 -7 -5 -3 -2 1''') == '-120\\n12\\n0\\n945'\n"
    },
    {
        "number": 2575,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''30\n60\n90''') == 'NO'\nassert solution('''30\n60\n90''') == 'NO'\nassert solution('''30\n60\n90''') == 'NO'\nassert solution('''30\n60\n90''') == 'NO'\nassert solution('''30\n60\n90''') == 'NO'\n"
    },
    {
        "number": 2576,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 2 1''') == '3'\nassert solution('''4 8 9 2''') == '12'\nassert solution('''1 2 2 1''') == '3'\nassert solution('''4 8 9 2''') == '12'\nassert solution('''1 2 2 1''') == '3'\n"
    },
    {
        "number": 2577,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2''') == '''1 2\n5 6\n7 8\n2 1\n4 3\n2 4\n3 2'''\n\nassert solution('''3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2''') == '''1 2\n5 6\n7 8\n2 1\n4 3\n2 4\n3 2'''\n\nassert solution('''3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2''') == '''1 2\n5 6\n7 8\n2 1\n4 3\n2 4\n3 2'''\n\nassert solution('''3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2''') == '''1 2\n5 6\n7 8\n2 1\n4 3\n2 4\n3 2'''\n\nassert solution('''3 2\n1 2\n4 5\n7 8\n2 2\n1 1\n3 3\n2 2\n1 3\n2 2''') == '''1 2\n5 6\n7 8\n2 1\n4 3\n2 4\n3 2'''"
    },
    {
        "number": 2578,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 5\n3 2 5 4\n0\n2 1 2\n1 1\n2 6 7''') == '4 4 1 4 4 2 2'\n'''\n\n'''\n"
    },
    {
        "number": 2579,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2580,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2581,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1''') == '12'\nassert solution('''1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1''') == '12'\nassert solution('''1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1''') == '12'\nassert solution('''1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1''') == '12'\nassert solution('''1 1 1 1\n2 1 1 0\n1 1 1 0\n1 0 0 1''') == '12'\n"
    },
    {
        "number": 2582,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3 4 1 5 2') == '2'\nassert solution('3\\n1 3 2') == '1'\nassert solution('3\\n1 3 2') == '1'\nassert solution('3\\n1 3 2') == '1'\nassert solution('3\\n1 3 2') == '1'\n"
    },
    {
        "number": 2583,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1\n2\n3\n4\n5\n6\n12''') == 'FastestFinger'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n12''') == 'Ashishgup'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n12''') == 'Ashishgup'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n12''') == 'FastestFinger'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n12''') == 'Ashishgup'\n"
    },
    {
        "number": 2584,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3''') == '3'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3''') == '4'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3''') == '2'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3''') == '0'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n5 13 2\n8 2 8 2 5\n3 18 2\n1 2 3''') == '4'\n"
    },
    {
        "number": 2585,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3''') == '1'\nassert solution('''5\n5''') == '2'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n4''') == '2'\nassert solution('''3\n5''') == '1'\n"
    },
    {
        "number": 2586,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 3''') == '''BW\nWB\nBB\nBWB\nBWW\nBWB'''\n\nassert solution('''3 2\n3 3\n''') == '''BW\nWB\nBB\nBWB\nBWW\nBWB'''\n\nassert solution('''3 2\n3 3\n3 3\n''') == '''BW\nWB\nBB\nBWB\nBWW\nBWB'''\n\nassert solution('''3 2\n3 3\n3 3\n3 3\n''') == '''BW\nWB\nBB\nBWB\nBWW\nBWB'''\n\nassert solution('''3 2\n3 3\n3 3\n3 3\n''') == '''BW\nWB\nBB\nBWB\nBWW\nBWB'''"
    },
    {
        "number": 2587,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 2588,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '94'\nassert solution('''8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '25'\nassert solution('''8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '2900000000'\nassert solution('''8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '13'\nassert solution('''8 2 5\n00110010\n8 1 1\n00110010\n9 100000000 100000000\n010101010\n2 5 1\n00\n''') == '2900000000'\n"
    },
    {
        "number": 2589,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6''') == '2'\nassert solution('''3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6''') == '3'\nassert solution('''3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6''') == '-1'\nassert solution('''3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6''') == '-1'\nassert solution('''3 3\n1 2 3\n3 4\n1 2 3\n2 2\n0 6''') == '-1'\n"
    },
    {
        "number": 2590,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2\\n4\\n0\\n3'\nassert solution('''4\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2\\n4\\n0\\n3'\nassert solution('''4\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2\\n4\\n0\\n3'\nassert solution('''4\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2\\n4\\n0\\n3'\nassert solution('''4\n4 3\n5 1 2 1\n4 10\n11 9 11 9\n2 5\n4 3\n3 7\n9 4 9\n''') == '2\\n4\\n0\\n3'\n"
    },
    {
        "number": 2591,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n6\n5 -2 4 8 6 5''') == '5 5 4 6 8 -2'\nassert solution('''2\n4\n8 1 4 2''') == '1 2 4 8'\nassert solution('''2\n5\n8 1 4 2''') == '1 2 4 8'\nassert solution('''2\n6\n5 -2 4 8 6 5''') == '5 5 4 6 8 -2'\nassert solution('''2\n4\n8 1 4 2''') == '1 2 4 8'\n"
    },
    {
        "number": 2592,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2 1\n0 0 0\n9 1 7\n2 2 3\n2 3 2\n3 2 2\n4 4 4\n''') == '3'\nassert solution('''7\n1 2 1\n0 0 0\n9 1 7\n2 2 3\n2 3 2\n3 2 2\n4 4 4\n''') == '0'\nassert solution('''7\n1 2 1\n0 0 0\n9 1 7\n2 2 3\n2 3 2\n3 2 2\n4 4 4\n''') == '4'\nassert solution('''7\n1 2 1\n0 0 0\n9 1 7\n2 2 3\n2 3 2\n3 2 2\n4 4 4\n''') == '5'\nassert solution('''7\n1 2 1\n0 0 0\n9 1 7\n2 2 3\n2 3 2\n3 2 2\n4 4 4\n''') == '5'\n"
    },
    {
        "number": 2593,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1\\n3\\n2\\n0\\n0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1\\n3\\n2\\n0\\n0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1\\n3\\n2\\n0\\n0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1\\n3\\n2\\n0\\n0'\nassert solution('''5\n5\n1 4 3 7 10\n3\n1 1 1\n4\n6 2 5 3\n2\n2 4\n1\n1\n''') == '1\\n3\\n2\\n0\\n0'\n"
    },
    {
        "number": 2594,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1 3\n2 2\n3 3\n5 3''') == '1'\nassert solution('''1 1\n1 3\n2 2\n3 3\n5 3''') == '2'\nassert solution('''1 1\n1 3\n2 2\n3 3\n5 3''') == '2'\nassert solution('''1 1\n1 3\n2 2\n3 3\n5 3''') == '5'\nassert solution('''1 1\n1 3\n2 2\n3 3\n5 3''') == '8'\n"
    },
    {
        "number": 2595,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8''') == '1\\n1\\n-1\\n0\\n2\\n2\\n14\\n0\\n-1\\n-1'\nassert solution('''10\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8''') == '1\\n1\\n-1\\n0\\n2\\n2\\n14\\n0\\n-1\\n-1'\nassert solution('''10\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8''') == '1\\n1\\n-1\\n0\\n2\\n2\\n14\\n0\\n-1\\n-1'\nassert solution('''10\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8''') == '1\\n1\\n-1\\n0\\n2\\n2\\n14\\n0\\n-1\\n-1'\nassert solution('''10\n10 5\n11 44\n17 21\n1 1\n96 3\n2 128\n1001 1100611139403776\n1000000000000000000 1000000000000000000\n7 1\n10 8''') == '1\\n1\\n-1\\n0\\n2\\n2\\n14\\n0\\n-1\\n-1'\n"
    },
    {
        "number": 2596,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2''') == '4 1\\n5 2\\n4 2\\n5 3'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2''') == '4 1\\n5 2\\n4 2\\n5 3'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2''') == '4 1\\n5 2\\n4 2\\n5 3'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2''') == '4 1\\n5 2\\n4 2\\n5 3'\nassert solution('''5 2 10 4\n0 1\n1 1\n0 4\n1 2''') == '4 1\\n5 2\\n4 2\\n5 3'\n"
    },
    {
        "number": 2597,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2598,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 B\n3 1 R\n3 2 B\n''') == '1'\nassert solution('''6 5\n1 3 R\n2 3 R\n3 4 B\n4 5 R\n4 6 R\n''') == '2 3'\nassert solution('''4 5\n1 2 R\n1 3 R\n2 3 B\n3 4 B\n1 4 B\n''') == '-1'\nassert solution('''6 5\n1 3 R\n2 3 R\n3 4 B\n4 5 R\n4 6 R\n''') == '2 3 4'\nassert solution('''6 5\n1 3 R\n2 3 R\n3 4 B\n4 5 R\n4 6 R\n''') == '2 3 4'\n"
    },
    {
        "number": 2599,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2''') == '1\\n0\\n4\\n-1\\n599998\\n99999999999\\n7997'\nassert solution('''1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2''') == '1\\n0\\n4\\n-1\\n599998\\n99999999999\\n7997'\nassert solution('''1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2''') == '1\\n0\\n4\\n-1\\n599998\\n99999999999\\n7997'\nassert solution('''1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2''') == '1\\n0\\n4\\n-1\\n599998\\n99999999999\\n7997'\nassert solution('''1 0\n1 1\n42 7\n13 7\n99 1\n99 0\n99 2''') == '1\\n0\\n4\\n-1\\n599998\\n99999999999\\n7997'\n"
    },
    {
        "number": 2600,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0 1\n2 3''') == '0'\nassert solution('''1 1\n0 1\n2 3''') == '3'\nassert solution('''1 1\n0 1\n2 3''') == '4'\nassert solution('''1 1\n0 1\n2 3''') == '4'\nassert solution('''1 1\n0 1\n2 3''') == '4'\n"
    },
    {
        "number": 2601,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1''') == 'YES'\nassert solution('''3\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1''') == 'NO'\nassert solution('''3\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1''') == 'NO'\nassert solution('''3\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1''') == 'YES'\nassert solution('''3\n5\n5 3 2 1 4\n6\n2 2 2 2 2 2\n2\n2 1''') == 'NO'\n"
    },
    {
        "number": 2602,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 1 2''') == 'Yes'\nassert solution('''0 100 0 1''') == 'No'\nassert solution('''12 13 25 1''') == 'Yes'\nassert solution('''27 83 14 25''') == 'No'\nassert solution('''0 0 1 0''') == 'Yes'\n"
    },
    {
        "number": 2603,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4''') == 'YES'\nassert solution('''1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4''') == 'NO'\nassert solution('''1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4''') == 'NO'\nassert solution('''1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4''') == 'NO'\nassert solution('''1\n8\n6\n4 3 6 6 2 9\n4\n4 5 6 7\n5\n7 5 2 2 4''') == 'NO'\n"
    },
    {
        "number": 2604,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 4''') == '2'\nassert solution('''7\n7 8 1''') == '2'\nassert solution('''-7 3 2''') == '0'\nassert solution('''0 2 1''') == '0'\nassert solution('''0 -2 2''') == '0'\n"
    },
    {
        "number": 2605,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n2 3 1 2\n3\n''') == '17'\nassert solution('''5 2\n3 5 2 2 4\n1 4\n''') == '71'\nassert solution('''5 2\n3 5 2 2 4\n1 4\n''') == '71'\nassert solution('''5 2\n3 5 2 2 4\n1 4\n''') == '71'\nassert solution('''5 2\n3 5 2 2 4\n1 4\n''') == '71'\n"
    },
    {
        "number": 2606,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('3\\n1') == '1'\nassert solution('4\\n1') == '0'\nassert solution('5\\n1') == '1'\n"
    },
    {
        "number": 2607,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''a???cb\na??bbc\na?b?c''') == 'ababcb'\nassert solution('''a???cb\na??bbc\na?b?c''') == '-1'\nassert solution('''a???cb\na??bbc\na?b?c''') == 'acbac'\nassert solution('''a???cb\na??bbc\na?b?c''') == 'acbac'\nassert solution('''a???cb\na??bbc\na?b?c''') == 'acbac'\n"
    },
    {
        "number": 2608,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8\\n4 8'\n\nassert solution('''5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8\\n4 8'\n\nassert solution('''5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8\\n4 8'\n\nassert solution('''5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8\\n4 8'\n\nassert solution('''5\n2 2\n1 1 2 2\n1 1 2 2\n3 4\n2 2 3 2\n3 1 4 3\n1 5\n1 1 5 1\n3 1 5 1\n4 4\n1 1 4 2\n1 3 4 4\n3 4\n1 2 4 2\n2 1 3 3\n''') == '0 4\\n3 9\\n2 3\\n8 8\\n4 8'"
    },
    {
        "number": 2609,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2\\n1\\n5'\nassert solution('''4\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2\\n1\\n5'\nassert solution('''4\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2\\n1\\n5'\nassert solution('''4\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2\\n1\\n5'\nassert solution('''4\n4\n1 4\n2 3\n3 6\n5 7\n3\n5 5\n5 5\n5 5\n6\n3 3\n1 1\n5 5\n1 5\n2 2\n4 4\n''') == '2\\n1\\n5'\n"
    },
    {
        "number": 2610,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3 2\n5 5 3\n1 2 2 1 2''') == '3'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3 2\n5 5 3\n1 2 2 1 2''') == '4'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3 2\n5 5 3\n1 2 2 1 2''') == '1'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3 2\n5 5 3\n1 2 2 1 2''') == '0'\nassert solution('''5 6 2\n2 4 3 5 7\n5 11 2\n2 4 3 5 7\n3 2 3\n4 2 6\n5 2 3\n10 1 3 9 2\n2 10000 2\n10000 10000\n2 9999 2\n10000 10000\n4 6 4\n3 2 3 2\n5 5 3\n1 2 2 1 2''') == '4'\n"
    },
    {
        "number": 2611,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2612,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2\\n3\\n1\\n1'\nassert solution('''4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2\\n3\\n1\\n1'\nassert solution('''4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2\\n3\\n1\\n1'\nassert solution('''4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2\\n3\\n1\\n1'\nassert solution('''4\n4\n5 3 4 6\n7\n1 4 2 3 6 4 9\n5\n5 4 3 2 1\n1\n9\n''') == '2\\n3\\n1\\n1'\n"
    },
    {
        "number": 2613,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2614,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2615,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n2\n72\n10\n''') == '2\\n1\\n61\\n6'\nassert solution('''4\n4\n2\n72\n10\n''') == '2\\n1\\n61\\n6'\nassert solution('''4\n4\n2\n72\n10\n''') == '2\\n1\\n61\\n6'\nassert solution('''4\n4\n2\n72\n10\n''') == '2\\n1\\n61\\n6'\nassert solution('''4\n4\n2\n72\n10\n''') == '2\\n1\\n61\\n6'\n"
    },
    {
        "number": 2616,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 5 4\n8\n1 1 1 1 1 1 1 1\n6\n1 2 3 4 5 6\n6\n1 1 2 1 2 2\n1\n1000000000\n5\n1 2 2 1 1\n3\n1 1 1\n''') == 'First'\nassert solution('''3\n3\n1 1 1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n1\n1 1 1\n"
    },
    {
        "number": 2617,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n11\n2''') == '3'\nassert solution('''9\n11\n2''') == '3'\nassert solution('''9\n11\n2''') == '3'\nassert solution('''9\n11\n2''') == '3'\nassert solution('''9\n11\n2''') == '3'\n"
    },
    {
        "number": 2618,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2619,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 3\n1 1 1\n3 2 0\n2 1 1 2 2\n0 2 1 4 5\n5 1 1 5 5''') == '3\\n0\\n3'\nassert solution('''3 4 5\n1 1 2\n2 3 0\n3 3 1\n0 1 1 100 100\n1 2 2 4 4\n2 2 1 4 7\n1 50 50 51 51''') == '3\\n3\\n5\\n0'\nassert solution('''3 4 5\n1 1 2\n2 3 0\n3 3 1\n0 1 1 100 100\n1 2 2 4 4\n2 2 1 4 7\n1 50 50 51 51''') == '3\\n3\\n5\\n0'\nassert solution('''3 4 5\n1 1 2\n2 3 0\n3 3 1\n0 1 1 100 100\n1 2 2 4 4\n2 2 1 4 7\n1 50 50 51 51''') == '3\\n3\\n5\\n0'\nassert solution('''3 4 5\n1 1 2\n2 3 0\n3 3 1\n0 1 1 100 100\n1 2 2 4 4\n2 2 1 4 7\n1 50 50 51 51''') == '3\\n3\\n5\\n0'\n"
    },
    {
        "number": 2620,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2621,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99''') == 'YES'\nassert solution('''5\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99''') == 'NO'\nassert solution('''5\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99''') == 'YES'\nassert solution('''5\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99''') == 'NO'\nassert solution('''5\n3 0 1\n4 3 5\n3 1 2\n1 4 7\n4 10 0\n10 20 10 20\n2 5 5\n0 11\n1 9 9\n99''') == 'YES'\n"
    },
    {
        "number": 2622,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 2623,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('baba') == 'ab'\nassert solution('baacb') == 'abbc'\nassert solution('baacb') == 'ab'\nassert solution('aaaaa') == 'a'\nassert solution('aaxxzz') == 'az'\n"
    },
    {
        "number": 2624,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11 3\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n> 2\n> -4\n< 5''') == '5 4 -3 -2 -1 0 1 2 -3 4 5'\nassert solution('''5 5\n0 1 -2 -1 2\n< -2\n< -1\n< 0\n< 1\n< 2\n''') == '0 -1 2 -1 2'\nassert solution('''5 5\n0 1 -2 -1 2\n< -2\n< -1\n< 0\n< 1\n< 2\n''') == '0 -1 2 -1 2'\nassert solution('''5 5\n0 1 -2 -1 2\n< -2\n< -1\n< 0\n< 1\n< 2\n''') == '0 -1 2 -1 2'\nassert solution('''5 5\n0 1 -2 -1 2\n< -2\n< -1\n< 0\n< 1\n< 2\n''') == '0 -1 2 -1 2'\n"
    },
    {
        "number": 2625,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 5\n5 2\n3 1''') == '5\\n38\\n19'\nassert solution('''1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 2626,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2\n1''') == '2'\nassert solution('''2\n2\n3''') == '1'\nassert solution('''2\n4\n1''') == '1'\nassert solution('''2\n5\n1''') == '1'\nassert solution('''2\n6\n1''') == '1'\n"
    },
    {
        "number": 2627,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n''') == '6'\nassert solution('''\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n''') == '6'\nassert solution('''\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n''') == '6'\nassert solution('''\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n''') == '6'\nassert solution('''\n1 0 1 0 0\n1 0 1 1 1\n1 1 1 1 1\n1 0 0 1 0\n''') == '6'\n"
    },
    {
        "number": 2628,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '2'\n"
    },
    {
        "number": 2629,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1\\n2'\nassert solution('3') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9'\nassert solution('4') == '1\\n2\\n3\\n4\\n8\\n9\\n4\\n5\\n6\\n7'\n"
    },
    {
        "number": 2630,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution([[0,0,0], [0,1,0], [0,0,0]]) == 2\nassert solution([[0,0,0], [0,1,0], [1,1,0]]) == 4\nassert solution([[0,0,0], [0,1,0], [1,1,0], [0,0,0]]) == 5\nassert solution([[0,0,0], [0,1,0], [1,1,0], [0,0,0], [0,0,0]]) == 8\nassert solution([[0,0,0], [0,1,0], [1,1,0], [0,0,0], [0,0,0], [0,0,0]]) == 10\n"
    },
    {
        "number": 2631,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n1 0''') == 'true'\nassert solution('''0 1\n1 0''') == 'false'\nassert solution('''0 1\n1 2\n2 0''') == 'true'\nassert solution('''0 1\n1 2\n2 0''') == 'false'\nassert solution('''0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 0''') == 'true'\n"
    },
    {
        "number": 2632,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 1\n1 5 1\n4 2 1\n''') == '7'\nassert solution('''\n1 3 1\n1 5 1\n4 2 1\n''') == '7'\nassert solution('''\n1 3 1\n1 5 1\n4 2 1\n''') == '7'\nassert solution('''\n1 3 1\n1 5 1\n4 2 1\n''') == '7'\nassert solution('''\n1 3 1\n1 5 1\n4 2 1\n''') == '7'\n"
    },
    {
        "number": 2633,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n-2\n-3\n3\n''') == '7'\nassert solution('''\n-2\n-3\n3\n''') == '7'\nassert solution('''\n-2\n-3\n3\n''') == '7'\nassert solution('''\n-2\n-3\n3\n''') == '7'\nassert solution('''\n-2\n-3\n3\n''') == '7'\n"
    },
    {
        "number": 2634,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == [\"\"]\nassert solution(\"1,2\") == [\"\", \"1\", \"2\"]\nassert solution(\"1,2,3\") == [\"\", \"1\", \"2\", \"3\", \"1,2\", \"1,3\", \"2,3\", \"1,2,3\"]\nassert solution(\"1,2,3,4\") == [\"\", \"1\", \"2\", \"3\", \"4\", \"1,2\", \"1,3\", \"1,4\", \"2,3\", \"2,4\", \"3,4\", \"1,2,3\", \"1,2,4\", \"1,3,4\", \"2,3,4\", \"1,2,3,4\"]\n"
    },
    {
        "number": 2635,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n4 5 6\n7 8 9\n''') == '1 2 3 6 9 8 7 4 5'\nassert solution('''\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10'\nassert solution('''\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n''') == '1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10'\nassert solution('''\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17 18\n19 20 21 22 23 24\n''') == '1 2 3 4 8 12 16 17 18 19 20 21 22 23 24'\nassert solution('''\n1 2 3 4 5 6 7\n8 9 10 11 12 13 14\n15 16 17 18 19 20 21\n22 23 24 25 26 27 28\n''') == '1 2 3 4 8 12 16 17 18 19 20 21 22 23 24'\n"
    },
    {
        "number": 2636,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n2 9 10\n3 7 15\n5 12 12\n15 20 10\n19 24 8\n''') == '''\n[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]\n'''\n\nassert solution('''\n2 9 10\n3 7 15\n5 12 12\n15 20 10\n19 24 8\n''') == '''\n[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]\n'''\n\nassert solution('''\n2 9 10\n3 7 15\n5 12 12\n15 20 10\n19 24 8\n''') == '''\n[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]\n'''\n\nassert solution('''\n2 9 10\n3 7 15\n5 12 12\n15 20 10\n19 24 8\n''') == '''\n[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]\n'''\n\nassert solution('''\n2 9 10\n3 7 15\n5 12 12\n15 20 10\n19 24 8\n''') == '''\n[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]\n'''"
    },
    {
        "number": 2637,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1,1,2\") == \"[[1,1,2], [1,2,1], [2,1,1]]\"\nassert solution(\"1,2,1\") == \"[[1,1,2], [1,2,1], [2,1,1]]\"\nassert solution(\"1,2,3\") == \"[[1,1,2], [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1]]\"\nassert solution(\"1,2,3,4\") == \"[[1,1,2], [1,2,3], [1,3,4], [1,4,2], [2,1,3], [2,3,1], [2,4,3], [2,3,4], [3,1,2], [3,2,1], [3,4,2], [3,2,4], [4,1,2], [4,2,3], [4,3,2]]\"\nassert solution(\"1,2,3,4,5\") == \"[[1,1,2], [1,2,3], [1,3,4], [1,4,5], [2,1,3], [2,3,1], [2,4,3], [2,3,4], [3,1,2], [3,2,1], [3,4,2], [3,2,4], [4,1,2], [4,2,3], [4,3,2], [5,1,2], [5,2,3], [5,3,4]]\"\n"
    },
    {
        "number": 2638,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n2\") == \"3\"\nassert solution(\"1\\n2\\n3\") == \"6\"\nassert solution(\"1\\n2\\n3\\n4\") == \"10\"\n"
    },
    {
        "number": 2639,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == [\"\"]\nassert solution(\"1,2\") == [\"\", \"1\", \"2\"]\nassert solution(\"1,2,2\") == [\"\", \"1\", \"2\", \"1,2\", \"2\", \"1,2,2\"]\nassert solution(\"1,2,2,3\") == [\"\", \"1\", \"2\", \"1,2\", \"2\", \"1,2,2\", \"1,2,3\", \"1,3\", \"2,3\", \"1,2,3\", \"3\"]\n"
    },
    {
        "number": 2640,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 6\n"
    },
    {
        "number": 2641,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2 1 3\n1 3\n2 4\n3 3''') == '2\\n3\\n1'\nassert solution('''4 3\n1 2 1 3\n1 3\n2 4\n3 3''') == '2\\n3\\n1'\nassert solution('''4 3\n1 2 1 3\n1 3\n2 4\n3 3''') == '2\\n3\\n1'\nassert solution('''4 3\n1 2 1 3\n1 3\n2 4\n3 3''') == '2\\n3\\n1'\nassert solution('''4 3\n1 2 1 3\n1 3\n2 4\n3 3''') == '2\\n3\\n1'\n"
    },
    {
        "number": 2642,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2643,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n3 1 4\n5 3 2''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2''') == '1'\nassert solution('''3 1\n3 1 4\n5 3 2''') == '1'\n"
    },
    {
        "number": 2644,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 4 1 5 3''') == '4\\n2\\n3\\n1\\n'\nassert solution('''5\n2 4 1 5 3''') == '-1'\nassert solution('''5\n2 4 1 5 3''') == '-1'\nassert solution('''5\n2 4 1 5 3''') == '-1'\nassert solution('''5\n2 4 1 5 3''') == '-1'\n"
    },
    {
        "number": 2645,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2646,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2647,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n.s#\n"
    },
    {
        "number": 2648,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2649,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 4\n3 2''') == '4'\nassert solution('''3\n1 1\n2 4\n3 2''') == '4'\nassert solution('''3\n1 1\n2 4\n3 2''') == '4'\nassert solution('''3\n1 1\n2 4\n3 2''') == '4'\nassert solution('''3\n1 1\n2 4\n3 2''') == '4'\n"
    },
    {
        "number": 2650,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 3\n8 1\n6 2\n9 3\n1 1\n2 2\n1 3\n4 3\n2 1\n1 2''') == '6\\n2\\n6\\n'\nassert solution('''6 3\n8 1\n6 2\n9 3\n1 1\n2 2\n1 3\n4 3\n2 1\n1 2''') == '6\\n2\\n6\\n'\nassert solution('''6 3\n8 1\n6 2\n9 3\n1 1\n2 2\n1 3\n4 3\n2 1\n1 2''') == '6\\n2\\n6\\n'\nassert solution('''6 3\n8 1\n6 2\n9 3\n1 1\n2 2\n1 3\n4 3\n2 1\n1 2''') == '6\\n2\\n6\\n'\nassert solution('''6 3\n8 1\n6 2\n9 3\n1 1\n2 2\n1 3\n4 3\n2 1\n1 2''') == '6\\n2\\n6\\n'\n"
    },
    {
        "number": 2651,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 3 4\n1 3 6''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6''') == '60'\nassert solution('''3 3\n1 3 4\n1 3 6''') == '60'\n"
    },
    {
        "number": 2652,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2653,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1''') == '100 110 111 110'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1''') == '100 110 111 110'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1''') == '100 110 111 110'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1''') == '100 110 111 110'\nassert solution('''4 3\n1 2\n2 3\n2 4\n2 10\n1 100\n3 1''') == '100 110 111 110'\n"
    },
    {
        "number": 2654,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3') == '3'\nassert solution('2 1\\n2 3') == '3'\nassert solution('2 1\\n2 3') == '3'\nassert solution('2 1\\n2 3') == '3'\nassert solution('2 1\\n2 3') == '3'\n"
    },
    {
        "number": 2655,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 2 1 3''') == '7'\nassert solution('''4\n2 2 1 3''') == '7'\nassert solution('''4\n2 2 1 3''') == '7'\nassert solution('''4\n2 2 1 3''') == '7'\nassert solution('''4\n2 2 1 3''') == '7'\n"
    },
    {
        "number": 2656,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oof') == '575111451'\nassert solution('oofsix') == '575111451'\nassert solution('oofelevennn') == '575111451'\nassert solution('oof') == '575111451'\nassert solution('voxafolt') == '575111451'\n"
    },
    {
        "number": 2657,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n6 9 4 2 11''') == '11 6'\nassert solution('''5\n6 9 4 2 11''') == '11 6'\nassert solution('''5\n6 9 4 2 11''') == '11 6'\nassert solution('''5\n6 9 4 2 11''') == '11 6'\nassert solution('''5\n6 9 4 2 11''') == '11 6'\n"
    },
    {
        "number": 2658,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 5') == '4'\nassert solution('3 2 4 1') == '4'\nassert solution('1 2 3 4 5') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '4'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100') == '4'\n"
    },
    {
        "number": 2659,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 2660,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1 2 3\n2\n1 1 -8\n2\n''') == '1 -3'\nassert solution('''1\n1 2 3\n2\n1 1 -8\n2\n''') == '1 -3'\nassert solution('''1\n1 2 3\n2\n1 1 -8\n2\n''') == '1 -3'\nassert solution('''1\n1 2 3\n2\n1 1 -8\n2\n''') == '1 -3'\nassert solution('''1\n1 2 3\n2\n1 1 -8\n2\n''') == '1 -3'\n"
    },
    {
        "number": 2661,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n1 0\n1 1\n1 0\n''') == '1 1\\n1 0\\n'\nassert solution('''0 1\n1 0\n1 1\n1 0\n''') == '-1\\n'\nassert solution('''0 1\n1 0\n1 1\n1 0\n''') == '1 1\\n1 0\\n'\nassert solution('''0 1\n1 0\n1 1\n1 0\n''') == '1 1\\n1 0\\n'\nassert solution('''0 1\n1 0\n1 1\n1 0\n''') == '1 1\\n1 0\\n'\n"
    },
    {
        "number": 2662,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '0'\nassert solution('2\\n3') == '1'\nassert solution('2\\n4') == '2'\n"
    },
    {
        "number": 2663,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 3 4\n''') == '18 7 4 4'\nassert solution('''5 2\n1 3 4 5\n''') == '219 12 10'\nassert solution('''6 2\n1 3 4 5 6\n''') == '219 12 10'\nassert solution('''7 2\n1 3 4 5 6 7\n''') == '219 12 10'\nassert solution('''8 2\n1 3 4 5 6 7 8\n''') == '219 12 10'\n"
    },
    {
        "number": 2664,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\\n1 5\\n0\\n1\\n1 2\\n0\\n1\\n0\\n1 5\\n-1\\n2\\n5\") == \"2\"\nassert solution(\"1\\n3 1 2 5\\n0\\n4\\n1\\n0\\n1 2\\n-1\\n1\\n0\\n1 5\\n-2\\n2\\n5\") == \"2\"\nassert solution(\"1\\n3 1 2 5\\n0\\n4\\n1\\n0\\n1 2\\n-1\\n1\\n0\\n1 5\\n-2\\n2\\n5\") == \"2\"\nassert solution(\"1\\n3 1 2 5\\n0\\n4\\n1\\n0\\n1 2\\n-1\\n1\\n0\\n1 5\\n-2\\n2\\n5\") == \"2\"\n"
    },
    {
        "number": 2665,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == '2'\nassert solution('''5''') == '0'\nassert solution('''0 0''') == '0'\nassert solution('''100 100''') == '0'\nassert solution('''0 0''') == '0'\n"
    },
    {
        "number": 2666,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2667,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n7 4 1 1 2''') == 'YES'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\nassert solution('''5\n1 1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 2668,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2 3''') == 'Unlucky Chef'\nassert solution('''1 2 6''') == 'Lucky Chef'\nassert solution('''1 2 3''') == 'Unlucky Chef'\nassert solution('''1 2 3''') == 'Unlucky Chef'\nassert solution('''1 2 3''') == 'Unlucky Chef'\n"
    },
    {
        "number": 2669,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2670,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"abgcd dchbag\") == \"8\"\nassert solution(\"aaa aaa\") == \"6\"\nassert solution(\"zaaax yaaaw\") == \"6\"\nassert solution(\"zax yw\") == \"2\"\nassert solution(\"zx yw\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 2671,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1 1 1 1\n1\n''') == '5'\nassert solution('''3 3\n3 3 3\n2 8 13\n''') == '3'\nassert solution('''3 3\n3 3 3\n2 8 13\n''') == '3'\nassert solution('''3 3\n3 3 3\n2 8 13\n''') == '3'\nassert solution('''3 3\n3 3 3\n2 8 13\n''') == '3'\n"
    },
    {
        "number": 2672,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2673,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"01234567890\") == 1\nassert solution(\"012134444444443\") == 4\nassert solution
    },
    {
        "number": 2674,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2675,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2676,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\na\naa\naaa\naaaa\n5\naaaaa''') == '1'\nassert solution('''4\na\naa\naaa\naaaa\n5\naaaaa''') == '4'\nassert solution('''4\na\naa\naaa\naaaa\n5\naaaaa''') == '4'\nassert solution('''4\na\naa\naaa\naaaa\n5\naaaaa''') == '4'\nassert solution('''4\na\naa\naaa\naaaa\n5\naaaaa''') == '4'\n"
    },
    {
        "number": 2677,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ACQUAINTANCES') == 'GOOD'\nassert solution('ACQUAINT') == '-1'\nassert solution('ACQUAINTANCE') == '-1'\nassert solution('ACQUAINTANCES') == 'GOOD'\nassert solution('ACQUAINTANCE') == '-1'\n"
    },
    {
        "number": 2678,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('3\\n1\\n1\\n') == '1'\nassert solution('4\\n1\\n1\\n') == '1'\nassert solution('5\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 2679,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n-1 2 3 4 -3 -5 6 7 1\n''') == '23'\nassert solution('''6\n-10 -1 -30 -40 -3 -11\n''') == '-4'\nassert solution('''10\n-1 2 3 4 -3 -5 6 7 1\n''') == '-4'\nassert solution('''10\n-1 2 3 4 -3 -5 6 7 1\n''') == '-4'\nassert solution('''10\n-1 2 3 4 -3 -5 6 7 1\n''') == '-4'\n"
    },
    {
        "number": 2680,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n3 2 1''') == '2'\nassert solution('''2 1\n1\n1''') == '0'\nassert solution('''3 1\n1''') == '0'\nassert solution('''3 1\n1''') == '0'\nassert solution('''3 1\n1''') == '0'\n"
    },
    {
        "number": 2681,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8\\n2\\n/\") == \"4.0\"\nassert solution(\"5\\n3\\n+\") == \"8\"\nassert solution(\"5\\n3\\n-\") == \"2\"\nassert solution(\"5\\n3\\n*\") == \"15\"\nassert solution(\"5\\n3\\n/\") == \"1.333333333333333333333333\"\n"
    },
    {
        "number": 2682,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4\n3 3\n3 2''') == '1\\n6\\n2'\nassert solution('''1\n64 11047805202224836936''') == '1337369305470044825'\nassert solution('''2\n64 11047805202224836936''') == '1337369305470044825'\nassert solution('''3\n64 11047805202224836936''') == '1337369305470044825'\nassert solution('''4\n64 11047805202224836936''') == '1337369305470044825'\n"
    },
    {
        "number": 2683,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nXOX\nO.O\nXOX\n3 1\n...\n...\n...\n3 2\n...\n...\n...\n''') == 'YES'\nassert solution('''1 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'YES'\nassert solution('''2 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'NO'\nassert solution('''2 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'YES'\nassert solution('''2 4\nXOXO\nOX..\nXO..\nOXOX\n''') == 'YES'\n"
    },
    {
        "number": 2684,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nabbba''') == 'abbba'\nassert solution('''12\nabcbcabbacba''') == 'bcabbacb'\nassert solution('''1\na''') == 'a'\nassert solution('''2\nab''') == 'ab'\nassert solution('''3\nabc''') == 'abc'\n"
    },
    {
        "number": 2685,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"501?1?\") == \"6\"\nassert solution(\"1001?11?\") == \"8\"\nassert solution(\"1001?11?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?1?"
    },
    {
        "number": 2686,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2687,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == '2'\nassert solution('''2''') == '0'\nassert solution('''3''') == '8'\nassert solution('''4''') == '16'\nassert solution('''5''') == '24'\n"
    },
    {
        "number": 2688,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2689,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3+xy-bb3+yx-') == 'Return'\nassert solution('3+xy-bb3+xy-') == 'Continue'\nassert solution('3+xy-bb3+xy-') == 'Continue'\nassert solution('3+xy-bb3+xy-') == 'Continue'\nassert solution('3+xy-bb3+xy-') == 'Continue'\n"
    },
    {
        "number": 2690,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aabcaaa') == '4'\nassert solution('aba') == '1'\nassert solution('abc') == '0'\nassert solution('abcabc') == '0'\nassert solution('abcabcabc') == '0'\n"
    },
    {
        "number": 2691,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2692,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n3 2''') == '2'\nassert solution('''1\n11 2''') == '6'\nassert solution('''2\n1 2''') == '2'\nassert solution('''2\n11 2''') == '6'\nassert solution('''3\n1 2''') == '2'\n"
    },
    {
        "number": 2693,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2694,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 1\n3 2 1 3\n''') == 'YES'\nassert solution('''5 5 2\n5 1 1 2\n4 4 1 2\n''') == 'YES'\nassert solution('''5 5 2\n5 1 1 2\n4 4 1 2\n''') == 'NO'\nassert solution('''5 5 2\n5 1 1 2\n4 4 1 2\n''') == 'NO'\nassert solution('''5 5 2\n5 1 1 2\n4 4 1 2\n''') == 'NO'\n"
    },
    {
        "number": 2695,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('xxyxxy') == '_xyxxy'\nassert solution('xyy') == '_xyx_y'\nassert solution('jphokenixr') == '_jph_kix_r'\nassert solution('joker') == '_jk_o_r'\nassert solution('2 9 3 7 8 1 6 5 4 10') == '5'\n"
    },
    {
        "number": 2696,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2697,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2698,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2699,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5\n''') == '''1 4 10\n2 5 11\n4 10 22\n3 6 12\n1 4 10 22 46\n2 5 11 23 47\n4 10 22 46 94\n3 6 12 24 48\n'''\n\nassert solution('''2\n3 5\n''') == '''1 4 10\n2 5 11\n4 10 22\n3 6 12\n1 4 10 22 46\n2 5 11 23 47\n4 10 22 46 94\n3 6 12 24 48\n'''\n\nassert solution('''1\n4  \n''') == '''1 4 10\n2 5 11\n4 10 22\n3 6 12\n1 4 10 22 46\n2 5 11 23 47\n4 10 22 46 94\n3 6 12 24 48\n'''\n\nassert solution('''2\n1\n4  \n''') == '''1 4 10\n2 5 11\n4 10 22\n3 6 12\n1 4 10 22 46\n2 5 11 23 47\n4 10 22 46 94\n3 6 12 24 48\n'''\n\nassert solution('''2\n2\n1\n4  \n''') == '''1 4 10\n2 5 11\n4 10 22\n3 6 12\n1 4 10 22 46\n2 5 11 23 47\n4 10 22 46 94\n3 6 12 24 48\n'''"
    },
    {
        "number": 2700,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 3 4''') == '3'\nassert solution('''2 999999 1 1000000''') == '499998500001'\n'''\n"
    },
    {
        "number": 2701,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2702,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nT T F F F\nT T F F F\nT T T F F\nF F F T T\nF F F T T\n''') == '2'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '1'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '0'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '0'\nassert solution('''3\nT T T\nT T T\nF F T\n''') == '0'\n"
    },
    {
        "number": 2703,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2\n\n4 6 5 8 7\n\n1\n\n2\n''') == '30'\n\nassert solution('''6 3\n\n20 10 12 3 30 5\n\n2\n\n6\n\n13\n''') == '77'\n\nassert solution('''6 3\n\n20 10 12 3 30 5\n\n2\n\n6\n\n13\n''') == '62'\n\nassert solution('''6 3\n\n20 10 12 3 30 5\n\n2\n\n6\n\n13\n''') == '30'\n\nassert solution('''6 3\n\n20 10 12 3 30 5\n\n2\n\n6\n\n13\n''') == '30'"
    },
    {
        "number": 2704,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 2\n1\n1\n2\n''') == 'Yes\\nNo\\n'\nassert solution('''2 4\n1 3\n1\n2\n3\n4\n''') == 'Yes\\nYes\\nYes\\nNo\\n'\nassert solution('''2 4\n1 3\n1\n2\n3\n4\n''') == 'Yes\\nYes\\nYes\\nNo\\n'\nassert solution('''2 4\n1 3\n1\n2\n3\n4\n''') == 'Yes\\nYes\\nYes\\nNo\\n'\nassert solution('''2 4\n1 3\n1\n2\n3\n4\n''') == 'Yes\\nYes\\nYes\\nNo\\n'\n"
    },
    {
        "number": 2705,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2706,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n2\n3\n2\n-1\n-1\n1\n-1\n''') == '3'\nassert solution('''10\n5\n3\n6\n1\n4\n2\n9\n3\n1\n0\n-1\n''') == '3'\nassert solution('''6\n2\n3\n2\n-1\n-1\n1\n-1\n''') == '3'\nassert solution('''10\n5\n3\n6\n1\n4\n2\n9\n3\n1\n0\n-1\n''') == '3'\nassert solution('''6\n2\n3\n2\n-1\n-1\n1\n-1\n''') == '3'\n"
    },
    {
        "number": 2707,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2708,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 2709,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 1\n1 2 3 4 5 6 7''') == '7'\nassert solution('''7 2\n1 2 3 4 5 6 7''') == 'Smaller'\nassert solution('''7 3\n1 2 3 4 5 6 7''') == '2'\nassert solution('''7 4\n1 2 3 4 5 6 7''') == '28'\nassert solution('''7 5\n1 2 3 4 5 6 7''') == '12'\n"
    },
    {
        "number": 2710,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 6 3\n3 5 3 1\n1 2\n2 3\n3 4\n4 2''') == 'YES'\nassert solution('''2 0\n1 2\n2 1\n''') == 'NO'\nassert solution('''2 0\n1 2\n2 1\n1 2\n2 1\n''') == 'NO'\nassert solution('''2 0\n1 2\n2 1\n1 2\n2 1\n''') == 'NO'\nassert solution('''2 0\n1 2\n2 1\n1 2\n2 1\n1 2\n2 1\n''') == 'NO'\n"
    },
    {
        "number": 2711,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb''') == 'acb'\nassert solution('''3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb''') == 'def'\nassert solution('''3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb''') == 'IMPOSSIBLE'\nassert solution('''3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb''') == 'acb'\nassert solution('''3 3\n2\nb\nb\nbbac\n0\na\naca\nacba\n1\nab\nc\nccb''') == 'def'\n"
    },
    {
        "number": 2712,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n12 34 56') == '4'\nassert solution('1 2 3\\n12 34 56\\n1 2 3\\n12 34 56') == '42'\nassert solution('1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56') == '42'\nassert solution('1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56') == '42'\nassert solution('1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56\\n1 2 3\\n12 34 56') == '42'\n"
    },
    {
        "number": 2713,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"WWWWWWWWWLLWW\") == 19\nassert solution(\"WWWWWWWWWLLWW\") == 19\nassert solution(\"WWWWWWWWWLLWW\") == 19\nassert solution(\"WWWWWWWWWLLWW\") == 19\nassert solution(\"WWWWWWWWWLLWW\") == 19\n"
    },
    {
        "number": 2714,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1\n1 2\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4'\nassert solution('''2\n2 1\n1 2\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n1 2\n1 3\n1 4\n2 3\n"
    },
    {
        "number": 2715,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('2') == '1 1'\nassert solution('3') == '1 1 1'\n"
    },
    {
        "number": 2716,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n7\\n1 7770 3 4 5 6 7\\n') == 'Yes'\nassert solution('2\\n1 2 3 4 5 6 7\\n') == 'No'\nassert solution('3\\n1 1 1 1 2 2 2\\n') == 'Unique'\nassert solution('4\\n1 1 1 1 2 2 2\\n') == 'Contains duplicate'\nassert solution('5\\n1 1 1 1 2 2 2\\n') == '1'\n"
    },
    {
        "number": 2717,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nABABC\n''') == '2'\nassert solution('''12\nABCABCABCABC\n''') == '6'\nassert solution('''4\nACBA\n''') == '0'\nassert solution('''6\nBABABA\n''') == '2'\nassert solution('''7\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == '0'\n"
    },
    {
        "number": 2718,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"win\"\n"
    },
    {
        "number": 2719,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n12 12 8 10 5 11\n12 12 8 4 14 21\n12 12 8 12 20 8\n4 14 21 10 5 21''') == 'No true closed chains\\nFloor closed chains'\nassert solution('''4\n1 1 1 2 2 2\n2 2 2 1 5 5\n9 4 4 9 4 2\n9 4 4 9 9 4''') == 'No true closed chains\\nNo floor closed chains'\nassert solution('''3\n50 50 50 100 100 100\n100 100 100 50 50 90\n50 50 90 50 50 50\nSample Output 3:\nTrue closed chains\nNo floor closed chains\n''') == 'No true closed chains\\nNo floor closed chains'\nassert solution('''3\n50 50 50 100 100 100\n100 100 100 50 50 90\n50 50 90 50 50 50\nSample Output 3:\nTrue closed chains\nNo floor closed chains\n''') == 'No true closed chains\\nNo floor closed chains'\nassert solution('''3\n50 50 50 100 100 100\n100 100 100 50 50 90\n50 50 90 50 50 50\nSample Output 3:\nTrue closed chains\nNo floor closed chains\n''') == 'No true closed chains\\nNo floor closed chains'\n"
    },
    {
        "number": 2720,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2 2\n/\\\n\\/\n''') == '1'\nassert solution(\n'''\n4 4\n/\\..\n\\.\\.\n.\\/\\\n..\\/\n''') == '2'\nassert solution(\n'''\n2 2\n\\/\n/\\\n''') == '0'\nassert solution(\n'''\n4 4\n/\\..\n\\.\\.\n.\\/\\\n..\\/\n''') == '0'\nassert solution(\n'''\n2 2\n\\/\n/\\\n''') == '0'\n"
    },
    {
        "number": 2721,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-1 1\n-2 2\n6 6\n''') == 'possible'\nassert solution('''-1 1\n-2 2\n5 5\n''') == 'impossible'\nassert solution('''-1 1\n1 -1\n3 5\n''') == 'possible'\nassert solution('''-1 1\n-2 2\n5 5\n''') == 'impossible'\nassert solution('''-1 1\n-2 2\n5 5\n''') == 'possible'\n"
    },
    {
        "number": 2722,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n........\n........\n........\n...CC...\n..C.DC..\n.C..C...\nC.IC....\nT.C.....\n''') == 'FLFRXFLFRFLFRF'\nassert solution('''\n........\n........\n........\n...CC...\n..CIDC..\n.CI.C...\nC.IC....\nT.C.....\n''') == 'FLFRXFLXFRFLXFRF'\nassert solution('''\n........\n........\n........\n...CCD..\n..C..C..\n.C..I...\nC.IC....\nT.C.....\n''') == 'FLFRXFLFRFXFFFLFFLF'\nassert solution('''\n........\n........\n........\n...CCD..\n..C..C..\n.C..I...\nC.IC....\nT.C.....\n''') == 'FLFRXFLFRFXFFFLFFLF'\nassert solution('''\n........\n........\n........\n...CCD..\n..C..C..\n.C..I...\nC.IC....\nT.C.....\n''') == 'FLFRXFLFRFXFFFLFFLF'\n"
    },
    {
        "number": 2723,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 13\\n1 + 2 * 3 - 4\\n\"\n) == \"3\"\nassert solution(\n    \"2 16\\n  _________     \\n\\/3 * 4 - 3 + 10\\n\"\n) == \"13\"\nassert solution(\n    \"3 5\\n6 * 4\\n=====\\n 12  \\n\"\n) == \"2\"\nassert solution(\n    \"4 4\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\n) == \"0\"\nassert solution(\n    \"4 4\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\n) == \"0\"\n"
    },
    {
        "number": 2724,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n0 3\n0 2\n0 5\n''') == '2'\nassert solution('''0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n''') == '2'\nassert solution('''0 5\n5 2\n4 5\n3 3\n5 2\n5 2\n''') == '5'\nassert solution('''0 5\n5 2\n4 5\n3 3\n5 2\n5 2\n''') == '5'\nassert solution('''0 5\n5 2\n4 5\n3 3\n5 2\n5 2\n''') == '5'\n"
    },
    {
        "number": 2725,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n0\n5\n''') == '5'\nassert solution('''3\n7\n5\n2\n4\n1\n6\n3\n0\n''') == '1'\nassert solution('''2\n0\n1\n2\n4\n''') == 'impossible'\nassert solution('''2\n0\n1\n2\n4\n''') == 'impossible'\nassert solution('''2\n0\n1\n2\n4\n''') == 'impossible'\n"
    },
    {
        "number": 2726,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1\n0 1''') == '0.500000'\nassert solution('''2 1\n0 1''') == '0.500000'\nassert solution('''4 2\n0 4 8 6\n''') == '5.500000'\nassert solution('''15 7\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '11.266667'\nassert solution('''15 7\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '11.266667'\n"
    },
    {
        "number": 2727,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1\n''') == '0'\nassert solution('''5 1\n5\n''') == '24'\nassert solution('''5 3\n2 4 5\n''') == '8'\nassert solution('''5 3\n1 2 3 4 5\n''') == '8'\nassert solution('''5 3\n1 2 3 4 5\n''') == '8'\n"
    },
    {
        "number": 2728,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2729,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''92746237\n100000''') == '927.46237'\nassert solution('''100000\n100''') == '1000'\nassert solution('''1234500\n10000''') == '123.45'\nassert solution('''92746237\n100000\n''') == '927.46237'\nassert solution('''100000\n100\n''') == '1000'\n"
    },
    {
        "number": 2730,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2731,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('{abc,ono,sto}') == '{abc,ono,sto}'\nassert solution('{}') == '{}'\nassert solution('{znakovi}') == '{znakovi}'\nassert solution('{abc,ono,sto}') == '{abc,ono,sto}'\nassert solution('{abc,ono,sto}') == '{abc,ono,sto}'\n"
    },
    {
        "number": 2732,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(0) == \"1\"\nassert solution(6.283185) == \"1\"\nassert solution(42) == \"1.5228490019\"\n"
    },
    {
        "number": 2733,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n-2 0 2 0 1\n2 0 0 0 1\n''') == '1 1.0'\nassert solution('''2\n-2 0 -2 0 1\n2 0 -2 1 1\n''') == '2 0.0'\nassert solution('''4\n-8 0 2 -2 2\n0 -8 -2 2 2\n2 8 0 -4 3\n8 2 -4 0 3\n''') == '1 2.0'\nassert solution('''4\n-8 0 2 -2 2\n0 -8 -2 2 2\n2 8 0 -4 3\n8 2 -4 0 3\n''') == '2 0.0'\nassert solution('''4\n-8 0 2 -2 2\n0 -8 -2 2 2\n2 8 0 -4 3\n8 2 -4 0 3\n''') == '1 2.0'\n"
    },
    {
        "number": 2734,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2735,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\nABCDEFCD\nBCEDEFCD\n''') == '0'\nassert solution('''\nDCDAFCBA\nECEABCCC\n''') == '4'\nassert solution('''\nABCDEFCD\nABCDEFCD\n''') == '0'\nassert solution('''\nABCDEFCD\nBCEDEFCD\n''') == '2'\nassert solution('''\nABCDEFCD\nBCEDEFCD\n''') == '4'\n"
    },
    {
        "number": 2736,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 4 3\n0 2 2 3\n2 1 4 3''') == '4'\nassert solution('''0 0 4 3\n0 2 2 3\n2 1 4 3''') == '4'\nassert solution('''1 1 1 1 1\n3 3 3 3 3\n5 5 5 5 5''') == '5'\nassert solution('''1 1 1 1 1\n3 3 3 3 3\n5 5 5 5 5''') == '5'\nassert solution('''1 1 1 1 1\n3 3 3 3 3\n5 5 5 5 5''') == '5'\n"
    },
    {
        "number": 2737,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n3 2\n1 2 4\n1 6\n''') == '4'\nassert solution('''4 5 2\n2 0 0 2\n1 2 6\n1 3 2\n2 3 3\n3 4 4\n4 2 6\n3 2\n2 2\n''') == '5'\nassert solution('''7 8 3\n0 1 1 1 1 0 2\n1 2 1\n2 3 1\n3 1 1\n4 6 5\n4 3 1\n6 7 10\n7 5 3\n5 6 3\n6 5\n1 1\n2 1\n''') == '6'\nassert solution('''7 8 3\n0 1 1 1 1 0 2\n1 2 1\n2 3 1\n3 1 1\n4 6 5\n4 3 1\n6 7 10\n7 5 3\n5 6 3\n6 5\n1 1\n2 1\n''') == '6'\nassert solution('''7 8 3\n0 1 1 1 1 0 2\n1 2 1\n2 3 1\n3 1 1\n4 6 5\n4 3 1\n6 7 10\n7 5 3\n5 6 3\n6 5\n1 1\n2 1\n''') == '6'\n"
    },
    {
        "number": 2738,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 100\n0 300 200''') == '2 -1'\nassert solution('''0 0 100\n0 300 100''') == '0'\nassert solution('''16\n10 10 5\n20 10 5\n30 10 5\n40 10 5\n10 20 5\n20 20 5\n30 20 5\n40 20 5\n10 30 5\n20 30 5\n30 30 5\n40 30 5\n10 40 5\n20 40 5\n30 40 5\n40 40 5''') == '1 1'\nassert solution('''0 0 100\n0 300 100''') == '0'\nassert solution('''16\n10 10 5\n20 10 5\n30 10 5\n40 10 5\n10 20 5\n20 20 5\n30 20 5\n40 20 5\n10 30 5\n20 30 5\n30 30 5\n40 30 5\n10 40 5\n20 40 5\n30 40 5\n40 40 5''') == '1 1'\n"
    },
    {
        "number": 2739,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0\n0 0 0\n''') == '8'\nassert solution('''1\n1 1 1 1 1\n''') == '1'\nassert solution('''2\n1 1 1 1 1\n''') == '0'\nassert solution('''3\n1 1 1 1 1\n''') == '0'\nassert solution('''4\n1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 2740,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2741,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4444') == '924'\nassert solution('20') == '10'\nassert solution('3211') == '689'\nassert solution('4444_8') == '924'\nassert solution('20_8') == '10'\n"
    },
    {
        "number": 2742,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n"
    },
    {
        "number": 2743,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n/-\\\n|.|\n"
    },
    {
        "number": 2744,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 2 4\n2 3 7\n6 20 1 25\n''') == '6 14 1 25'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\n''') == '12 10 12'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\n''') == '12 10 12'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\n''') == '12 10 12'\nassert solution('''3 3\n1 2 1\n2 3 1\n1 3 1\n30 10 20\n''') == '12 10 12'\n"
    },
    {
        "number": 2745,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"barfoothefoobarman\", [\"foo\", \"bar\"]) == [0,9]\nassert solution(\"wordgoodstudentgoodword\", [\"word\",\"student\"]) == []\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 2746,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0.1\", \"1.1\") == -1\nassert solution(\"1.0.1\", \"1\") == 1\nassert solution(\"7.5.2.4\", \"7.5.3\") == -1\nassert solution(\"1.0.1\", \"1\") == 1\nassert solution(\"7.5.2.4\", \"7.5.3\") == -1\n"
    },
    {
        "number": 2747,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5,7,7,8,8,10''') == '''3,4'''\nassert solution('''5,7,7,8,8,10''') == '''-1,-1'''\nassert solution('''5,7,7,8,8,10''') == '''-1,-1'''\nassert solution('''5,7,7,8,8,10''') == '''-1,-1'''\nassert solution('''5,7,7,8,8,10''') == '''-1,-1'''\n"
    },
    {
        "number": 2748,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"23\") == [\"ad\", \"ae\", \"af\", \"bd\", \"be\", \"bf\", \"cd\", \"ce\", \"cf\"]\nassert solution(\"2\") == [\"a\", \"b\", \"c\"]\nassert solution(\"\") == []\nassert solution(\"9\") == [\"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"]\nassert solution(\"2\") == [\"a\", \"b\", \"c\"]\n"
    },
    {
        "number": 2749,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n3\n2 1 1''') == '1 1'\nassert solution('''2 2\n3\n2 1 1''') == '2 3'\nassert solution('''2 2\n3\n2 1 1''') == '1 1'\nassert solution('''2 2\n3\n2 1 1''') == '2 3'\nassert solution('''2 2\n3\n2 1 1''') == '1 1'\n"
    },
    {
        "number": 2750,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2751,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 4 1''') == '2 1'\nassert solution('''3\n8 24 9''') == '12 3'\nassert solution('''3\n1000000 1 1000000 1''') == '1 1'\nassert solution('''3\n1000000 1 1000000 1''') == '1 1'\nassert solution('''3\n1000000 1 1000000 1''') == '1 1'\n"
    },
    {
        "number": 2752,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2753,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"02:20\\n\"\n    \"13:00\\n\"\n    \"05:50\\n\"\n    \"01:00\\n\"\n) == \"Saturday\\n14:00\\n\"\n\nassert solution(\n    \"02:20\\n\"\n    \"23:28\\n\"\n    \"00:40\\n\"\n    \"23:50\\n\"\n) == \"Never\\n14:00\\n\"\n\nassert solution(\n    \"02:20\\n\"\n    \"23:28\\n\"\n    \"00:40\\n\"\n    \"23:50\\n\"\n) == \"Never\\n14:00\\n\"\n\nassert solution(\n    \"02:20\\n\"\n    \"23:28\\n\"\n    \"00:40\\n\"\n    \"23:50\\n\"\n) == \"Never\\n14:00\\n\"\n\nassert solution(\n    \"02:20\\n\"\n    \"23:28\\n\"\n    \"00:40\\n\"\n    \"23:50\\n\"\n) == \"Never\\n14:00\\n\""
    },
    {
        "number": 2754,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('80 85 98') == '1 3'\nassert solution('98 98 100') == '0 inf'\nassert solution('80 85 98') == '1 3'\nassert solution('98 98 100') == '0 inf'\nassert solution('80 85 98') == '1 3'\n"
    },
    {
        "number": 2755,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 1\n1 2\n2 0''') == '3'\nassert solution('''2 1\n0 1\n1 2''') == 'impossible'\nassert solution('''3 3\n0 1\n1 2\n2 0''') == '3'\nassert solution('''3 3\n0 1\n1 2\n2 0\n0 2\n1 3\n2 0''') == 'impossible'\nassert solution('''3 3\n0 1\n1 2\n2 0\n0 2\n1 3\n2 0\n0 1\n1 3\n2 0''') == 'impossible'\n"
    },
    {
        "number": 2756,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 20 3\n....................\n...X................\n.X.X....X.....X.....\n.X.X....X....XX.....\n.X.X..........X.....\n.X.X....XXXXXXXXXXX.\n.XXXXXXX............\n.X..................\n.X...XXXXX.XXXX.XX..\n.X..P............C..\n.X.XX.X.XX.XXX..XX..\n.X.X................\n.X.XXXX....X........\n.X.X.......X........\n.X.X.......X........\n.X.X........X.......\n.X.X...X....XX......\n.X.X...X.....XX.....\n.X.X...X......XX....\n.......X...........E\n''') == '119'\nassert solution('''5 5 1\nE...C\n.....\nXXXX.\n.....\nP....\n''') == 'you're toast'\nassert solution('''20 20 3\n....................\n...X................\n.X.X....X.....X.....\n.X.X....X....XX.....\n.X.X..........X.....\n.X.X....XXXXXXXXXXX.\n.XXXXXXX............\n.X..................\n.X...XXXXX.XXXX.XX..\n.X..P............C..\n.X.XX.X.XX.XXX..XX..\n.X.X................\n.X.XXXX....X........\n.X.X.......X........\n.X.X.......X........\n.X.X........X.......\n.X.X...X....XX......\n.X.X...X.....XX.....\n.X.X...X......XX....\n.......X...........E\n''') == '119'\nassert solution('''5 5 1\nE...C\n.....\nXXXX.\n.....\nP....\n''') == 'you're toast'\nassert solution('''20 20 3\n....................\n...X................\n.X.X....X.....X.....\n.X.X....X....XX.....\n.X.X..........X.....\n.X.X....XXXXXXXXXXX.\n.XXXXXXX............\n.X..................\n.X...XXXXX.XXXX.XX..\n.X..P............C..\n.X.XX.X.XX.XXX..XX..\n.X.X................\n.X.XXXX....X........\n.X.X.......X........\n.X.X.......X........\n.X.X........X.......\n.X.X...X....XX......\n.X.X...X.....XX.....\n.X.X...X......XX....\n.......X...........E\n''') == '119'\n"
    },
    {
        "number": 2757,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1 0 1\n''') == '5'\nassert solution('''2\n0 0 0 0\n''') == '1'\nassert solution('''3\n1 1 0 1\n''') == '5'\nassert solution('''3\n0 0 0 0\n''') == '1'\nassert solution('''4\n1 1 0 1 0\n''') == '5'\n"
    },
    {
        "number": 2758,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''Red\nRed''') == '''Red 0.937500000\nCream 0.062500000'''\n\nassert solution('''Lilac-Cream Tortie\nBlue\nSample Output 2:\nBlue 0.375000000\nCream 0.250000000\nBlue-Cream Tortie 0.187500000\nLilac 0.125000000\nLilac-Cream Tortie 0.062500000''') == '''Blue 0.375000000\nCream 0.250000000\nBlue-Cream Tortie 0.187500000\nLilac 0.125000000\nLilac-Cream Tortie 0.062500000'''\n\nassert solution('''Red\nRed''') == '''Red 0.937500000\nCream 0.062500000'''\n\nassert solution('''Lilac-Cream Tortie\nBlue\nSample Output 2:\nBlue 0.375000000\nCream 0.250000000\nBlue-Cream Tortie 0.187500000\nLilac 0.125000000\nLilac-Cream Tortie 0.062500000''') == '''Blue 0.375000000\nCream 0.250000000\nBlue-Cream Tortie 0.187500000\nLilac 0.125000000\nLilac-Cream Tortie 0.062500000'''\n\nassert solution('''Red\nRed''') == '''Red 0.937500000\nCream 0.062500000'''"
    },
    {
        "number": 2759,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5''') == '10\\n1 D\\n2 D\\n3 D\\n4 D\\n1 D\\n2 D\\n3 D\\n1 D\\n2 D\\n1 D'\nassert solution('''5\n2 3\n3 2\n3 3\n3 4\n4 3''') == '8\\n1 R\\n1 R\\n2 U\\n2 U\\n4 D\\n4 D\\n5 L\\n5 L'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5''') == '10\\n1 D\\n2 D\\n3 D\\n4 D\\n1 D\\n2 D\\n3 D\\n1 D\\n2 D\\n1 D'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5''') == '10\\n1 D\\n2 D\\n3 D\\n4 D\\n1 D\\n2 D\\n3 D\\n1 D\\n2 D\\n1 D'\nassert solution('''5\n1 1\n1 2\n1 3\n1 4\n1 5''') == '10\\n1 D\\n2 D\\n3 D\\n4 D\\n1 D\\n2 D\\n3 D\\n1 D\\n2 D\\n1 D'\n"
    },
    {
        "number": 2760,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n1\n3\n''') == '''1\n0\n0\n'''\n\nassert solution('''5\n5\n4\n3\n2\n1\n''') == '''4\n3\n2\n1\n0\n'''\n\nassert solution('''10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n''') == '''9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n'''\n\nassert solution('''100\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89\n88\n87\n86\n85\n84\n83\n82\n81\n80\n79\n78\n77\n76\n75\n74\n73\n72\n71\n70\n69\n68\n67\n66\n65\n64\n63\n62\n61\n60\n59\n58\n57\n56\n55\n54\n53\n52\n51\n50\n49\n48\n47\n46\n45\n44\n43\n42\n41\n40\n39\n38\n37\n36\n35\n34\n33\n32\n31\n30\n29\n28\n27\n26\n25\n24\n23\n22\n21\n20\n19\n18\n17\n16\n15\n14\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n''') == '''9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n'''\n\nassert solution('''1000\n999\n998\n997\n996\n995\n994\n993\n992\n991\n990\n989\n988\n987\n986\n985\n984\n983\n982\n981\n980\n979\n978\n977\n976\n975\n974\n973\n972\n971\n970\n969\n968\n967\n966\n965\n964\n963\n962\n961\n960\n959\n958\n957\n956\n955\n954\n953\n952\n951\n950\n949\n948\n947\n946\n945\n944\n943\n942\n941\n940\n939\n938\n937\n936\n935\n934\n933\n932\n931\n930\n929\n928\n927\n926\n925\n924\n923\n922\n921\n920\n919\n918\n917\n916\n915\n914\n913\n912\n911\n910\n909\n908\n907\n906\n905\n904\n903\n902\n901\n900\n899\n898\n897\n896\n895\n894\n893\n892\n891\n890\n889\n888\n887\n886\n885\n884\n883\n882\n881\n880\n879\n878\n877\n876\n875\n874\n873\n872\n871\n870\n869\n868\n867\n866\n865\n864\n863\n862\n861\n860\n859\n858\n857\n856\n855\n854\n853\n852\n851\n850\n849\n848\n847\n846\n845\n844\n843\n842\n841\n840\n839\n838\n837\n836\n835\n834\n833\n832\n831\n830\n829\n828\n827\n826\n825\n824\n823\n822\n821\n820\n819\n818\n817\n816\n815\n814\n813\n812\n811\n810\n809\n808\n807\n806\n805\n804\n803\n802\n801\n800\n799\n798\n797\n796\n795\n794\n793\n792\n791\n790\n789\n788\n787\n786\n785\n784\n783\n782\n781\n780\n779\n778\n777\n776\n775\n774\n773\n772\n771\n770\n769\n768\n767\n766\n765\n764\n763\n762\n761\n760\n759\n758\n757\n756\n755\n754\n753\n752\n751\n750\n749\n748\n747\n746\n745\n744\n743\n742\n741\n740\n739\n738\n737\n736\n735\n734\n733\n732\n731\n730\n729\n728\n727\n726\n725\n724\n723\n722\n721\n720\n719\n718\n717\n716\n715\n714\n713\n712\n711\n710\n709\n708\n707\n706\n705\n704\n703\n702\n701\n700\n699\n698\n697\n696\n695\n694\n693\n692\n691\n690\n689\n688\n687\n686\n685\n684\n683\n682\n681\n680\n679\n678\n677\n676\n675\n674\n673\n672\n671\n670\n669\n668\n667\n666\n665\n664\n663\n662\n661\n660\n659\n658\n657\n656\n655\n654\n653\n652\n651\n650\n649\n648\n647\n646\n645\n644\n643\n642\n641\n640\n639\n638\n637\n636\n635\n634\n633\n632\n631\n630\n629\n628\n627\n626\n625\n624\n623\n622\n621\n620\n619\n618\n617\n616\n615\n614\n613\n612\n611\n610\n609\n608\n607\n606\n605\n604\n603\n602\n601\n600\n599\n598\n597\n596\n595\n594\n593\n592\n591\n590\n589\n588\n587\n586\n585\n584\n583\n582\n581\n580\n579\n578\n577\n576\n575\n574\n573\n572\n571\n570\n569\n568\n567\n566\n565\n564\n563\n562\n561\n560\n559\n558\n557\n556\n555\n554\n553\n552\n551\n550\n549\n548\n547\n546\n545\n544\n543\n542\n541\n540\n539\n538\n537\n536\n535\n534\n533\n532\n531\n530\n529\n528\n527\n526\n525\n524\n523\n522\n521\n520\n519\n518\n517\n516\n515\n514\n513\n512\n511\n510\n509\n508\n507\n506\n505\n504\n503\n502\n501\n500\n499\n498\n497\n496\n495\n494\n493\n492\n491\n490\n489\n488\n487\n486\n485\n484\n483\n482\n481\n480\n479\n478\n477\n476\n475\n474\n473\n472\n471\n470\n469\n468\n467\n466\n465\n464\n463\n462\n461\n460\n459"
    },
    {
        "number": 2761,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 0 0 1\n0 0 1 0\n0 1 1 0''') == '3.4142135624'\nassert solution('''3\n0 0 0 1\n0 0 1 0\n0 0 1 1''') == 'no triangle'\nassert solution('''3\n0 0 0 1\n0 0 1 0\n0 0 1 1''') == 'no triangle'\nassert solution('''3\n0 0 0 1\n0 0 1 0\n0 0 1 1''') == 'no triangle'\nassert solution('''3\n0 0 0 1\n0 0 1 0\n0 0 1 1''') == 'no triangle'\n"
    },
    {
        "number": 2762,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2763,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nXX.X\nX.X.\nXXXX\n.XXX\nnoeesrksdmnyemoj''') =='sendmoremonkeysj'\nassert solution('''4\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop''') == 'invalid grille'\nassert solution('''4\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop''') == 'invalid grille'\nassert solution('''4\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop''') == 'invalid grille'\nassert solution('''4\n.XX.\nXXXX\nXXXX\n.XX.\nabcdefghijklmnop''') == 'invalid grille'\n"
    },
    {
        "number": 2764,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '........\\n'\n    '........\\n'\n    '........\\n'\n    '...CC...\\n'\n    '..C.DC..\\n'\n    '.C..C...\\n'\n    'C.IC....\\n'\n    'T.C.....\\n'\n    'FLFRFLFRFLFRF'\n) == 'Bug!'\nassert solution(\n    '........\\n'\n    '........\\n'\n    '........\\n'\n    '...CC...\\n'\n    '..C.DC..\\n'\n    '.C..C...\\n'\n    'C.IC....\\n'\n    'T.C.....\\n'\n    'FLFRFLFRFLFRF'\n) == 'Diamond!'\nassert solution(\n    '........\\n'\n    '........\\n'\n    '........\\n'\n    '...CC...\\n'\n    '..C.DC..\\n'\n    '.C..C...\\n'\n    'C.IC....\\n'\n    'T.C.....\\n'\n    'FLFRFLFRFLFRF'\n) == 'Bug!'\nassert solution(\n    '........\\n'\n    '........\\n'\n    '........\\n'\n    '...CC...\\n'\n    '..C.DC..\\n'\n    '.C..C...\\n'\n    'C.IC....\\n'\n    'T.C.....\\n'\n    'FLFRFLFRFLFRF'\n) == 'Bug!'\nassert solution(\n    '........\\n'\n    '........\\n'\n    '........\\n'\n    '...CC...\\n'\n    '..C.DC..\\n'\n    '.C..C...\\n'\n    'C.IC....\\n'\n    'T.C.....\\n'\n    'FLFRFLFRFLFRF'\n) == 'Bug!'\n"
    },
    {
        "number": 2765,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2766,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2767,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\nthe\nquick\nbrown\nfox\njumps\nover\na\nsleazy\ndog''') == '2'\nassert solution('''3\na\nb\nc''') == '0'\nassert solution('''1\na\nb\nc''') == '1'\nassert solution('''2\na\nb\nc''') == '0'\nassert solution('''3\na\nb\nc''') == '0'\n"
    },
    {
        "number": 2768,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 1\n1 1''') == '1'\nassert solution('''4 3\n2 2\n4 4\n1 1''') == '2'\nassert solution('''5 4\n1 1\n1 1\n1 1\n1 1\n1 1''') == '1'\nassert solution('''6 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '2'\nassert solution('''7 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '3'\n"
    },
    {
        "number": 2769,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13\"\n"
    },
    {
        "number": 2770,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 1\n0 1\n6\n1 100000\n2 100000\n3 100000\n4 100000\n5 100000\n6 100000''') == '1\\n1\\n2\\n3\\n5\\n8'\nassert solution('''0 1 1\n0 1\n6\n1 100000\n2 100000\n3 100000\n4 100000\n5 100000\n6 100000''') == '1\\n1\\n2\\n3\\n5\\n8'\nassert solution('''0 1 1\n0 1\n6\n1 100000\n2 100000\n3 100000\n4 100000\n5 100000\n6 100000''') == '1\\n1\\n2\\n3\\n5\\n8'\nassert solution('''0 1 1\n0 1\n6\n1 100000\n2 100000\n3 100000\n4 100000\n5 100000\n6 100000''') == '1\\n1\\n2\\n3\\n5\\n8'\nassert solution('''0 1 1\n0 1\n6\n1 100000\n2 100000\n3 100000\n4 100000\n5 100000\n6 100000''') == '1\\n1\\n2\\n3\\n5\\n8'\n"
    },
    {
        "number": 2771,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('RLLRL') == '1'\nassert solution('RLLRL') == '1'\nassert solution('RLLRL') == '1'\nassert solution('RLLRL') == '1'\n"
    },
    {
        "number": 2772,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1\n10 11\n10 10\n''') == '5.238095'\nassert solution('''3 1\n4 2\n0 3\n6 3\n10 7\n''') == '4.200000'\nassert solution('''1 1\n10 11\n10 10\n''') == '5.238095'\nassert solution('''3 1\n4 2\n0 3\n6 3\n10 7\n''') == '4.200000'\nassert solution('''1 1\n10 11\n10 10\n''') == '5.238095'\n"
    },
    {
        "number": 2773,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 5\n0 2 5\n2 1 5\n0 3 10\n3 1 20\n3 2 5''') == '3 0 3 1'\nassert solution('''4 3\n0 1 10\n1 2 20\n2 3 30\n3 1 20\n3 2 5''') == 'impossible'\nassert solution('''4 3\n0 1 10\n1 2 20\n2 3 30\n3 1 20\n3 2 5''') == '3 0 3 1'\nassert solution('''4 3\n0 1 10\n1 2 20\n2 3 30\n3 1 20\n3 2 5''') == 'impossible'\nassert solution('''4 3\n0 1 10\n1 2 20\n2 3 30\n3 1 20\n3 2 5''') == '3 0 3 1'\n"
    },
    {
        "number": 2774,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n1\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\nassert solution('''5 6\n1 2 1\n1 3 1\n4 3 3\n3 5 2\n1\n3\n''') == '1'\n"
    },
    {
        "number": 2775,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 0 6 6\n5 4\n2 6\n3 1''') == '2'\nassert solution('''5\n2 1 0 0\n0 0\n0 1\n2 0\n2 1\n3 1''') == '3'\nassert solution('''10\n0 0\n0 1\n2 0\n2 1\n3 1\n4 0\n4 1\n6 0\n6 1\n8 0\n8 1''') == '5'\nassert solution('''10\n0 0\n0 1\n2 0\n2 1\n3 1\n4 0\n4 1\n6 0\n6 1\n8 0\n8 1''') == '5'\nassert solution('''10\n0 0\n0 1\n2 0\n2 1\n3 1\n4 0\n4 1\n6 0\n6 1\n8 0\n8 1''') == '5'\n"
    },
    {
        "number": 2776,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == '5'\nassert solution('''3 0\n1 2\n2 3''') == '8'\nassert solution('''3 2\n1 2\n2 3\n1 3\n2 3''') == '5'\nassert solution('''3 2\n1 2\n2 3\n1 3\n2 3''') == '5'\nassert solution('''3 2\n1 2\n2 3\n1 3\n2 3\n1 3\n2 3''') == '5'\n"
    },
    {
        "number": 2777,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 6\n1\n1\n2\n2\n3\n4\n5\n6''') == '4'\nassert solution('''2 3\n1\n2\n1\n3\n''') == '0'\nassert solution('''2 3\n1\n2\n1\n3\n''') == '0'\nassert solution('''2 3\n1\n2\n1\n3\n''') == '0'\nassert solution('''2 3\n1\n2\n1\n3\n''') == '0'\n"
    },
    {
        "number": 2778,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"5\"\n"
    },
    {
        "number": 2779,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5 1\naaaaa\na...a\na.B.a\na...a\naaaaa''') == '12'\nassert solution('''2 2 1\naB\naa\n1''') == '-1'\nassert solution('''2 2 1\naB\naa\n1\n''') == '-1'\nassert solution('''2 2 1\naB\naa\n1\n''') == '-1'\nassert solution('''2 2 1\naB\naa\n1\n''') == '-1'\n"
    },
    {
        "number": 2780,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2781,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 1 0 8\n3 7 3 5\n3 1 2 4\n9 0 4 6\n5 3 2 3''') == '3'\nassert solution('''2 2\n3 0\n1 2''') == '2'\nassert solution('''2 2\n3 0\n1 2''') == '2'\nassert solution('''2 2\n3 0\n1 2''') == '2'\nassert solution('''2 2\n3 0\n1 2''') == '2'\n"
    },
    {
        "number": 2782,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 1 0\n1 1 1\n2 1 0''') == '2'\nassert solution('''3 3 1\n1 1 0\n1 1 1\n1 1 2''') == '3'\nassert solution('''3 3 1\n1 1 0\n1 1 1\n1 1 2''') == '3'\nassert solution('''3 3 1\n1 1 0\n1 1 1\n1 1 2''') == '3'\nassert solution('''3 3 1\n1 1 0\n1 1 1\n1 1 2''') == '3'\n"
    },
    {
        "number": 2783,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 -2\n5 -1\n0 0\n9 0''') == '1'\nassert solution('''6\n8 2\n4 0\n8 0\n4 -1\n7 -1\n6 -2\n2 1\n9 2''') == '1'\nassert solution('''6\n8 2\n4 0\n8 0\n4 -1\n7 -1\n6 -2\n2 1\n9 2\n3 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n9 1\n5 1\n7 1\n"
    },
    {
        "number": 2784,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\nUptown Midtown\nMidtown Uptown Downtown\nDowntown Midtown\nUptown Downtown\n''') == 'Uptown Midtown Downtown'\nassert solution('''6\nA B\nB A D\nC D\nE D F G\nF E\nG E\nF A\n''') == 'F E D B A'\nassert solution('''6\nA B\nB A D\nC D\nE D F G\nF E\nG E\nF A\n''') == 'F E D B A'\nassert solution('''6\nA B\nB A D\nC D\nE D F G\nF E\nG E\nF A\n''') == 'F E D B A'\nassert solution('''6\nA B\nB A D\nC D\nE D F G\nF E\nG E\nF A\n''') == 'F E D B A'\n"
    },
    {
        "number": 2785,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 5\n4 10\n10 15\n''') == '2'\nassert solution('''4 10\n1 8\n3 12\n4 17\n10 100\n''') == '6'\nassert solution('''2 5\n4 10\n10 15\n''') == '2'\nassert solution('''2 5\n4 10\n10 15\n''') == '2'\nassert solution('''2 5\n4 10\n10 15\n''') == '2'\n"
    },
    {
        "number": 2786,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('()()()') == '1'\nassert solution('(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([?)]?}?)(?([])]))\n\n'''"
    },
    {
        "number": 2787,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\nARN SCR\nARN 59.6467921 17.9370443\nSCR 61.156603 12.837360\nCPH 55.618023 12.650763\nOSL 60.197646 11.100008\nARN OSL\nARN CPH\nSCR OSL\nOSL CPH''') == '729.09706162045'\nassert solution('''2 1\nLAX AKL\nAKL -37.006131 174.783781\nLAX 33.941589 -118.408531\nLAX AKL\nSample Output 2:\n10603.3297338597\n''') == '10603.3297338597'\nassert solution('''2 1\nLAX AKL\nAKL -37.006131 174.783781\nLAX 33.941589 -118.408531\nLAX AKL\nSample Output 2:\n10603.3297338597\n''') == '10603.3297338597'\nassert solution('''2 1\nLAX AKL\nAKL -37.006131 174.783781\nLAX 33.941589 -118.408531\nLAX AKL\nSample Output 2:\n10603.3297338597\n''') == '10603.3297338597'\nassert solution('''2 1\nLAX AKL\nAKL -37.006131 174.783781\nLAX 33.941589 -118.408531\nLAX AKL\nSample Output 2:\n10603.3297338597\n''') == '10603.3297338597'\n"
    },
    {
        "number": 2788,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 2789,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2790,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 10 10000000\n0 0 0 0 0 0 1''') == '70000001'\nassert solution('''10 10 3\n0 0 2 2 4 4 6 6 8 8''') == '39'\nassert solution('''10 10 3\n0 0 2 2 4 4 6 6 8 8''') == '40'\nassert solution('''10 10 3\n0 0 2 2 4 4 6 6 8 8''') == '79/2'\nassert solution('''10 10 3\n0 0 2 2 4 4 6 6 8 8''') == '39'\n"
    },
    {
        "number": 2791,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\n"
    },
    {
        "number": 2792,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '''0\n1\n2\n1\n'''\n\nassert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '''0\n1\n2\n1\n'''\n\nassert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '''0\n1\n2\n1\n'''\n\nassert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '''0\n1\n2\n1\n'''\n\nassert solution('''UPIT 1 b\nUPIT 3 b\nSMJER 4\nUPIT 7 a\nUPIT 10 z''') == '''0\n1\n2\n1\n'''"
    },
    {
        "number": 2793,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2794,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 5''') == '7'\nassert solution('''3 2\n1 1000\n1000 1\nSample Output 2:\n1002''') == '1002'\nassert solution('''3 2\n1 1000\n1000 1\nSample Output 2:\n1002''') == '1002'\nassert solution('''3 2\n1 1000\n1000 1\nSample Output 2:\n1002''') == '1002'\nassert solution('''3 2\n1 1000\n1000 1\nSample Output 2:\n1002''') == '1002'\n"
    },
    {
        "number": 2795,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1 0\n0.0 0.0\n2.0 0.0\n1.0 2.0''') == '4.236067'\nassert solution('''3 1 1\n0.0 0.0\n0.5 2.0\n2.5 2.0\n1 2''') == '2.000000'\nassert solution('''3 1 1\n0.0 0.0\n0.5 2.0\n2.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2''') == '2.000000'\nassert solution('''3 1 1\n0.0 0.0\n0.5 2.0\n2.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2''') == '2.000000'\nassert solution('''3 1 1\n0.0 0.0\n0.5 2.0\n2.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0\n1 2\n0.5 1.0\n0.5 2.0"
    },
    {
        "number": 2796,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 0\n1\n''') == '1\\n0\\n0'\nassert solution('''3\n1 2 4\n2 3 4\n1 2\n''') == '1\\n0\\n0'\nassert solution('''4\n1 2 4\n2 3 4\n1 2\n2 3\n1\n''') == '1\\n0\\n0\\n0'\nassert solution('''5\n1 2 4\n2 3 4\n1 2\n2 3\n1\n''') == '1\\n0\\n0\\n0\\n0'\nassert solution('''6\n1 2 4\n2 3 4\n1 2\n2 3\n1\n''') == '1\\n0\\n0\\n0\\n0\\n0'\n"
    },
    {
        "number": 2797,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '1'\nassert solution(stdin) == '2'\nassert solution(stdin) == '3'\nassert solution(stdin) == '4'\n"
    },
    {
        "number": 2798,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RUBEN') == 'RUBEN'\nassert solution('ALBERT') == 'ALBERT'\nassert solution('RUBEN') == 'RUBEN'\nassert solution('ALBERT') == 'ALBERT'\nassert solution('RUBEN') == 'RUBEN'\n"
    },
    {
        "number": 2799,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2800,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n4 1 1 1 1\n6 2 1 2 1 2 1\n4 1 1 1 1\n6 2 1 2 1 2 1\n''') == 'Bob will win.'\nassert solution('''2 1\n1 1\n3 1 2 1\n''') == 'Alice can win.'\nassert solution('''2 1\n1 1\n3 1 2 1\n''') == 'Bob will win.'\nassert solution('''2 1\n1 1\n3 1 2 1\n''') == 'Alice can win.'\nassert solution('''2 1\n1 1\n3 1 2 1\n''') == 'Bob will win.'\n"
    },
    {
        "number": 2801,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 4 6 2 100\n0 1\n1 2\n0 3\n2 4\n3 4\n''') == '100'\nassert solution('''3 2\n1 0 1\n0 1\n1 2\n''') == '1.5'\nassert solution('''3 2\n1 0 1\n0 1\n1 2\n''') == '1.5'\nassert solution('''3 2\n1 0 1\n0 1\n1 2\n''') == '1.5'\nassert solution('''3 2\n1 0 1\n0 1\n1 2\n''') == '1.5'\n"
    },
    {
        "number": 2802,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6.38 7.20 6.95 8.11\n7.53''') == 'infinite'\nassert solution('''6.38 7.20 6.95 8.11\n7.53''') == '6.82'\nassert solution('''6.38 7.20 6.95 8.11\n6.99''') == '6.99'\nassert solution('''6.38 7.20 6.95 8.11\n7.53''') == 'impossible'\nassert solution('''6.38 7.20 6.95 8.11\n7.53''') == 'impossible'\n"
    },
    {
        "number": 2803,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''pig\n2\ngoat\ntoad''') == 'goat'\nassert solution('''dog\n2\nsnake\nemu''') == '?'\nassert solution('''pig\n2\ngoat\ntoad\ndog\n2\nsnake\nemu''') =='snake'\nassert solution('''pig\n2\ngoat\ntoad\ndog\n2\nsnake\nemu''') == '?'\nassert solution('''pig\n2\ngoat\ntoad\ndog\n2\nsnake\nemu\ncat\n1\n''') == 'pig'\n"
    },
    {
        "number": 2804,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7''') == 'dobar je ovaj marko marulic'\nassert solution('''26 30''') == 'nama je profesor reko da to ne treba za lektiru al onda je bila buka i nisam ga cuo pa jel bi mi mogli dat bodove'\n'''\n\n'''"
    },
    {
        "number": 2805,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(10) == 5\nassert solution(100) == 25\nassert solution(1000) == 125\nassert solution(10000) == 625\n"
    },
    {
        "number": 2806,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 1\n2 1''') == '3 0\\n3 1 2\\n2 1'\nassert solution('''4 3\n1 3\n2 3\n3 4\nSample Output 2:\n2 1\n3 4\n2\n1''') == '2 1\\n3 4\\n2\\n1'\nassert solution('''4 3\n1 3\n2 3\n3 4\n1 2\nSample Output 2:\n2 1\n3 4\n2\n1''') == '2 1\\n3 4\\n2\\n1'\nassert solution('''4 3\n1 3\n2 3\n3 4\n1 2\n1 3\nSample Output 2:\n2 1\n3 4\n2\n1''') == '2 1\\n3 4\\n2\\n1'\nassert solution('''4 3\n1 3\n2 3\n3 4\n1 2\n1 3\n1 4\nSample Output 2:\n2 1\n3 4\n2\n1''') == '2 1\\n3 4\\n2\\n1'\n"
    },
    {
        "number": 2807,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2808,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 3\n1 2 3 4\n1 2\n2 3\n3 4\n''') == '4'\nassert solution('''5 4 6\n1 2 3 4 5\n1 4\n2 3\n3 5\n4 5\n''') == '5'\nassert solution('''5 4 6\n1 2 3 4 5\n1 4\n2 3\n3 5\n4 5\n''') == '5'\nassert solution('''5 4 6\n1 2 3 4 5\n1 4\n2 3\n3 5\n4 5\n''') == '5'\nassert solution('''5 4 6\n1 2 3 4 5\n1 4\n2 3\n3 5\n4 5\n''') == '5'\n"
    },
    {
        "number": 2809,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2810,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5\n0 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\nassert solution('''8\n10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n2 6\n6 0\n3 7\n7 0\n''') == '3'\nassert solution('''8\n10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n2 6\n6 0\n3 7\n7 0\n''') == '3'\nassert solution('''8\n10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n2 6\n6 0\n3 7\n7 0\n''') == '3'\nassert solution('''8\n10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n2 6\n6 0\n3 7\n7 0\n''') == '3'\n"
    },
    {
        "number": 2811,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 1\n1\n1\n1\n3\n''') == '5'\nassert solution('''4 4\n1\n1\n1\n1\n2\n3\n4\n''') == '1'\nassert solution('''4 4\n1\n1\n1\n1\n2\n3\n4\n''') == '4'\nassert solution('''4 4\n1\n1\n1\n1\n2\n3\n4\n''') == '3'\nassert solution('''4 4\n1\n1\n1\n1\n2\n3\n4\n''') == '1'\n"
    },
    {
        "number": 2812,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"at\"\n\n\"\"\""
    },
    {
        "number": 2813,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20\nva\nfi\nve\nmor\nlling\nspe\nin\ni\nsh\nti\nhard\ncov\near\nfe\nred\nja\nry\nneed\nly\nning\nspelling very hard\nearly in morning tired\ni need covfefe''') == 'haiku'\nassert solution('''22\nq\nc\nda\nplus\nto\nthe\ne\nthee\nun\nlate\nci\na\nshall\nby\ncom\ni\nru\npare\ntemp\nble\nhi\nde\nshall i compare thee\nto a c plus plus template\nundecidable''') == 'haiku'\nassert solution('''22\nq\nc\nda\nplus\nto\nthe\ne\nthee\nun\nlate\nci\na\nshall\nby\ncom\ni\nru\npare\ntemp\nble\nhi\nde\nshall i compare thee\nto a c plus plus template\nundecidable''') == 'come back next year'\nassert solution('''22\nq\nc\nda\nplus\nto\nthe\ne\nthee\nun\nlate\nci\na\nshall\nby\ncom\ni\nru\npare\ntemp\nble\nhi\nde\nshall i compare thee\nto a c plus plus template\nundecidable''') == 'haiku'\nassert solution('''22\nq\nc\nda\nplus\nto\nthe\ne\nthee\nun\nlate\nci\na\nshall\nby\ncom\ni\nru\npare\ntemp\nble\nhi\nde\nshall i compare thee\nto a c plus plus template\nundecidable''') == 'haiku'\n"
    },
    {
        "number": 2814,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 1 2 3 \n0 1 2 3 \n''') == '0'\nassert solution('''2\n0 2 1 3 \n0 2 1 3 \n''') == '1'\nassert solution('''2\n0 1 2 3 \n0 1 2 3 \n''') == '-1'\nassert solution('''2\n0 1 2 3 \n0 1 2 3 \n''') == '-1'\nassert solution('''2\n0 1 2 3 \n0 1 2 3 \n''') == '-1'\n"
    },
    {
        "number": 2815,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2816,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2817,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"13.333333333333334\"\n"
    },
    {
        "number": 2818,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2819,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 1\n1 2\n1 0\n0 -1''') == 'Alice wins'\nassert solution('''3\n2 3\n1 3\n-2 1\n1 1\n1 0''') == 'tie 3 1'\nassert solution('''4\n4 4\n1 4\n-2 1\n1 1\n1 0\n0 -1''') == 'Bob wins'\nassert solution('''5\n5 5\n1 5\n-2 1\n1 1\n1 0\n0 -1\n0 -2''') == 'tie 3 1'\nassert solution('''6\n6 6\n1 6\n-2 1\n1 1\n1 0\n0 -1\n0 -2''') == 'Alice wins'\n"
    },
    {
        "number": 2820,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n5\n1\n1 1\n''') == '0'\nassert solution('''3\n5 5 5\n2\n2 1 2\n2 2 3\n''') == '10'\nassert solution('''2\n5\n1\n1 1\n''') == '0'\nassert solution('''2\n5\n1\n1 1\n''') == '0'\nassert solution('''2\n5\n1\n1 1\n''') == '0'\n"
    },
    {
        "number": 2821,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2822,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 6\n1 1 5 4'''\n) == 'Yes'\n\nassert solution(\n'''2 6\n3 5 5 7'''\n) == 'No'\n\nassert solution(\n'''2 6\n1 1 5 4\n3 5 5 7'''\n) == '1 3'\n\nassert solution(\n'''2 6\n1 1 5 4\n1 1 5 4'''\n) == 'No'\n\nassert solution(\n'''2 6\n1 1 5 4\n1 1 5 4\n1 1 5 4'''\n) == 'No'"
    },
    {
        "number": 2823,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''GTA\nCAT\n5 7 1 3''') == '10'\nassert solution('''TATA\nCACA\n3 0 3 0''') == '3'\nassert solution('''GAT\nCAT\n5 7 1 3''') == '10'\nassert solution('''GAT\nCAT\n5 7 1 3''') == '10'\nassert solution('''GAT\nCAT\n5 7 1 3''') == '10'\n"
    },
    {
        "number": 2824,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n6\n1\n2\n''') == '4'\nassert solution('''4\n11\n8\n3\n10\n''') == '10'\nassert solution('''4\n11\n8\n3\n10\n''') == '10'\nassert solution('''4\n11\n8\n3\n10\n''') == '10'\nassert solution('''4\n11\n8\n3\n10\n''') == '10'\n"
    },
    {
        "number": 2825,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2826,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2827,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2\n2 3''') == '1'\nassert solution('''5 10\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2''') == '0'\nassert solution('''3 2\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2''') == '1'\nassert solution('''3 2\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2''') == '1'\nassert solution('''3 2\n1 2\n2 3\n3 4\n4 5\n5 1\n1 3\n2 4\n3 5\n4 1\n5 2''') == '1'\n"
    },
    {
        "number": 2828,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\nab\nbc\n2 1\n''') == 'DA'\nassert solution('''3\nabc\nbcd\nadd\n1 2 3\n''') == 'NE'\nassert solution('''4\nab\nbc\ncd\nde\n4 1\n''') == 'DA'\nassert solution('''5\nabc\nbcd\nadd\nde\nef\n5 1\n''') == 'NE'\nassert solution('''6\nabc\nbcd\nadd\nde\nef\n6 1\n''') == 'DA'\n"
    },
    {
        "number": 2829,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('ICPC') == 17\nassert solution('A') == 1\nassert solution('The quick brown dog jumps over the lazy fox') == 17\nassert solution('The quick brown dog jumps over the lazy fox') == 17\nassert solution('The quick brown dog jumps over the lazy fox') == 17\n"
    },
    {
        "number": 2830,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2831,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2832,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 2833,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\ndamir\nmarko\ndarko\n45''') == '''d\n m a\nd a m\n a r i\n  r k r\n   k o\n    o\n'''\nassert solution('''3 5\ndamir\nmarko\ndarko\n90''') == '''dmd\naaa\nrrm\nkki\noor\n"
    },
    {
        "number": 2834,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '4'\nassert solution('2') == '7'\nassert solution('3') == '10'\nassert solution('4') == '13'\n"
    },
    {
        "number": 2835,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''abcdefghijklmnopqrstuvwxyz''') == 26\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 26\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 26\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 26\nassert solution('''abcdefghijklmnopqrstuvwxyz''') == 26\n"
    },
    {
        "number": 2836,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 6 16\n20 50\n''') == '49'\nassert solution('''3\n2 6 16\n3 15\n''') == '11'\nassert solution('''3\n2 6 16\n3 15\n''') == '11'\nassert solution('''3\n2 6 16\n3 15\n''') == '11'\nassert solution('''3\n2 6 16\n3 15\n''') == '11'\n"
    },
    {
        "number": 2837,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''(R1-R2-R3)''') == '11.00000'\nassert solution('''(R1|R2|R3)''') == '1.00000'\nassert solution('''(R1-R2-R3)''') == '11.00000'\nassert solution('''(R1|R2|R3)''') == '1.00000'\nassert solution('''(R1-R2-R3)''') == '11.00000'\n"
    },
    {
        "number": 2838,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('(0/(0))') == '(0/0)'\nassert solution('(2+(2*2)+2)') == '(2+2*2+2)'\nassert solution('(2+(2*2)+2)') == '(2+2*2+2)'\nassert solution('(2+(2*2)+2)') == '(2+2*2+2)'\nassert solution('(2+(2*2)+2)') == '(2+2*2+2)'\n"
    },
    {
        "number": 2839,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 10\n0 1 26\n1 3 29\n1 5 9\n2 3 25\n2 4 43\n4 2 3\n5 0 13\n5 2 33\n5 3 18\n5 4 58\n5 1\n''') == '1'\nassert solution('''7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\n''') == '4'\nassert solution('''7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\n''') == '4'\nassert solution('''7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\n''') == '4'\nassert solution('''7 9\n0 1 1\n0 2 2\n1 2 1\n2 3 1\n2 4 3\n3 4 1\n4 5 1\n4 6 2\n5 6 1\n0 6\n''') == '4'\n"
    },
    {
        "number": 2840,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2841,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nBlue\nOrange\nPink\nGreen\nRed\nYellow''') == '1'\nassert solution('''12\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '2'\nassert solution('''12\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '2'\nassert solution('''12\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '2'\nassert solution('''12\nBlue\nOrange\nPink\nGreen\nRed\nYellow\nYellow\nRed\nGreen\nPink\nOrange\nBlue\n''') == '2'\n"
    },
    {
        "number": 2842,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3\n....\n.OX.\n....\nO..X\n3\n2\n1''') == '132'\nassert solution('''4 4\n.X.X\n.XX.\n...X\n....\n1\n2\n3\n4''') == '6'\nassert solution('''4 4\n.X.X\n.XX.\n...X\n....\n1\n2\n3\n4''') == '6'\nassert solution('''4 4\n.X.X\n.XX.\n...X\n....\n1\n2\n3\n4''') == '6'\nassert solution('''4 4\n.X.X\n.XX.\n...X\n....\n1\n2\n3\n4''') == '6'\n"
    },
    {
        "number": 2843,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\nabc\nacb\ncab\ncba\nbac\nbca\n''') == '3'\nassert solution('''11\nalerts\nalters\nartels\nestral\nlaster\nratels\nsalter\nslater\nstaler\nstelar\ntalers\n''') == '8'\nassert solution('''1\na\n''') == '1'\nassert solution('''2\na\nb\n''') == '2'\nassert solution('''3\na\nb\nc\n''') == '3'\n"
    },
    {
        "number": 2844,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\nD.*\n...\n.S.\n''') == '3'\nassert solution('''3 3\nD.*\n...\n..S\n''') == 'KAKTUS'\nassert solution('''3 3\nD.*\n...\n..S\n''') == 'KAKTUS'\nassert solution('''3 3\nD.*\n...\n.S.\n''') == 'KAKTUS'\nassert solution('''3 3\nD.*\n...\n.S.\n''') == 'KAKTUS'\n"
    },
    {
        "number": 2845,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n7\n''') == '6'\nassert solution('''3 6\n5 6 7 11 15 18\n''') == '24'\nassert solution('''3 6\n5 6 7 11 15 18\n''') == '24'\nassert solution('''3 6\n5 6 7 11 15 18\n''') == '24'\nassert solution('''3 6\n5 6 7 11 15 18\n''') == '24'\n"
    },
    {
        "number": 2846,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '3'\n"
    },
    {
        "number": 2847,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 8\n4 5 2 1 6 8 3 7\n5 2 4 8 6 1 3 7\n2 5 4 8 1 6 3 7''') == '3\\n2 4 5\\n'\nassert solution('''2 8\n6 2 8 7 1 3 4 5\n2 8 7 1 3 4 5 6\n''') == '8\\n1 2 3 4 5 6 7 8\\n'\nassert solution('''3 8\n1 2 3 4 5 6 7 8 9\n2 3 4 5 6 7 8 9 1\n3 4 5 6 7 8 9 1 2\n''') == '3\\n1 2 3 4 5 6 7 8 9\\n'\nassert solution('''3 8\n1 2 3 4 5 6 7 8 9\n2 3 4 5 6 7 8 9 1\n3 4 5 6 7 8 9 1 2\n''') == '3\\n1 2 3 4 5 6 7 8 9\\n'\nassert solution('''3 8\n1 2 3 4 5 6 7 8 9\n2 3 4 5 6 7 8 9 1\n3 4 5 6 7 8 9 1 2\n''') == '3\\n1 2 3 4 5 6 7 8 9\\n'\n"
    },
    {
        "number": 2848,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2849,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '7'\n"
    },
    {
        "number": 2850,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2851,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 5\n2\n4 5\n''') == '10'\nassert solution('''4\n6 2 3 4\n1\n1\n''') == '1'\nassert solution('''5\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''6\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''7\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 2852,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2853,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 4\n1 2\n2 3\n3 4\n5 6''') == 'Connected'\nassert solution('''2 1\n2 1\nSample Output 2:\nConnected\n''') == 'Connected'\nassert solution('''1 1\n1 1\nSample Output 2:\nConnected\n''') == 'Connected'\nassert solution('''1 1\n1 1\n1 1\nSample Output 2:\nConnected\n''') == 'Connected'\nassert solution('''1 1\n1 1\n1 1\n1 1\nSample Output 2:\nConnected\n''') == 'Connected'\n"
    },
    {
        "number": 2854,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2\n0 0\n-1 -1\n2 0\n1 2''') == '0 0\\n1 0\\n2 0'\nassert solution('''5 4\n0 0\n-1 -1\n-1 -1\n-1 -1\n4 0\n1 2\n2 3\n3 4\n4 5''') == '0 0\\n1 0\\n2 0\\n3 0\\n4 0'\nassert solution('''5 4\n0 0\n-1 -1\n-1 -1\n-1 -1\n4 0\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5"
    },
    {
        "number": 2855,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n0 1\n1 2\n0 2''') == '2.000000'\nassert solution('''5 6\n0 1\n0 2\n1 2\n2 4\n0 3\n3 4''') == '6.727273'\nassert solution('''3 3\n0 1\n1 2\n0 2''') == '2.000000'\nassert solution('''5 6\n0 1\n0 2\n1 2\n2 4\n0 3\n3 4''') == '6.727273'\nassert solution('''3 3\n0 1\n1 2\n0 2''') == '2.000000'\n"
    },
    {
        "number": 2856,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2857,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '0'\nassert solution('''5\n1 2\n2 1\n2 2\n2 3\n3 2''') == '4'\nassert solution('''10\n1 2\n2 1\n2 2\n2 3\n3 2\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2''') == '8'\nassert solution('''100\n1 2\n2 1\n2 2\n2 3\n3 2\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2\n10 2''') == '16'\nassert solution('''1000\n1 2\n2 1\n2 2\n2 3\n3 2\n4 2\n5 2\n6 2\n7 2\n8 2\n9 2\n10 2\n11 2\n12 2\n13 2\n14 2\n15 2\n16 2\n17 2\n18 2\n19 2\n20 2\n21 2\n22 2\n23 2\n24 2\n25 2\n26 2\n27 2\n28 2\n29 2\n30 2\n31 2\n32 2\n33 2\n34 2\n35 2\n36 2\n37 2\n38 2\n39 2\n40 2\n41 2\n42 2\n43 2\n44 2\n45 2\n46 2\n47 2\n48 2\n49 2\n50 2\n51 2\n52 2\n53 2\n54 2\n55 2\n56 2\n57 2\n58 2\n59 2\n60 2\n61 2\n62 2\n63 2\n64 2\n65 2\n66 2\n67 2\n68 2\n69 2\n70 2\n71 2\n72 2\n73 2\n74 2\n75 2\n76 2\n77 2\n78 2\n79 2\n80 2\n81 2\n82 2\n83 2\n84 2\n85 2\n86 2\n87 2\n88 2\n89 2\n90 2\n91 2\n92 2\n93 2\n94 2\n95 2\n96 2\n97 2\n98 2\n99 2\n100 2\n101 2\n102 2\n103 2\n104 2\n105 2\n106 2\n107 2\n108 2\n109 2\n110 2\n111 2\n112 2\n113 2\n114 2\n115 2\n116 2\n117 2\n118 2\n119 2\n120 2\n121 2\n122 2\n123 2\n124 2\n125 2\n126 2\n127 2\n128 2\n129 2\n130 2\n131 2\n132 2\n133 2\n134 2\n135 2\n136 2\n137 2\n138 2\n139 2\n140 2\n141 2\n142 2\n143 2\n144 2\n145 2\n146 2\n147 2\n148 2\n149 2\n150 2\n151 2\n152 2\n153 2\n154 2\n155 2\n156 2\n157 2\n158 2\n159 2\n160 2\n161 2\n162 2\n163 2\n164 2\n165 2\n166 2\n167 2\n168 2\n169 2\n170 2\n171 2\n172 2\n173 2\n174 2\n175 2\n176 2\n177 2\n178 2\n179 2\n180 2\n181 2\n182 2\n183 2\n184 2\n185 2\n186 2\n187 2\n188 2\n189 2\n190 2\n191 2\n192 2\n193 2\n194 2\n195 2\n196 2\n197 2\n198 2\n199 2\n200 2\n201 2\n202 2\n203 2\n204 2\n205 2\n206 2\n207 2\n208 2\n209 2\n210 2\n211 2\n212 2\n213 2\n214 2\n215 2\n216 2\n217 2\n218 2\n219 2\n220 2\n221 2\n222 2\n223 2\n224 2\n225 2\n226 2\n227 2\n228 2\n229 2\n230 2\n231 2\n232 2\n233 2\n234 2\n235 2\n236 2\n237 2\n238 2\n239 2\n240 2\n241 2\n242 2\n243 2\n244 2\n245 2\n246 2\n247 2\n248 2\n249 2\n250 2\n251 2\n252 2\n253 2\n254 2\n255 2\n256 2\n257 2\n258 2\n259 2\n260 2\n261 2\n262 2\n263 2\n264 2\n265 2\n266 2\n267 2\n268 2\n269 2\n270 2\n271 2\n272 2\n273 2\n274 2\n275 2\n276 2\n277 2\n278 2\n279 2\n280 2\n281 2\n282 2\n283 2\n284 2\n285 2\n286 2\n287 2\n288 2\n289 2\n290 2\n291 2\n292 2\n293 2\n294 2\n295 2\n296 2\n297 2\n298 2\n299 2\n300 2\n301 2\n302 2\n303 2\n304 2\n305 2\n306 2\n307 2\n308 2\n309 2\n310 2\n311 2\n312 2\n313 2\n314 2\n315 2\n316 2\n317 2\n318 2\n319 2\n320 2\n321 2\n322 2\n323 2\n324 2\n325 2\n326 2\n327 2\n328 2\n329 2\n330 2\n331 2\n332 2\n333 2\n334 2\n335 2\n336 2\n337 2\n338 2\n339 2\n340 2\n341 2\n342 2\n343 2\n344 2\n345 2\n346 2\n347 2\n348 2\n349 2\n350 2\n351 2\n352 2\n353 2\n354 2\n355 2\n356 2\n357 2\n358 2\n359 2\n360 2\n361 2\n362 2\n363 2\n364 2\n365 2\n366 2\n367 2\n368 2\n369 2\n370 2\n371 2\n372 2\n373 2\n374 2\n375 2\n376 2\n377 2\n378 2\n379 2\n380 2\n381 2\n382 2\n383 2\n384 2\n385 2\n386 2\n387 2\n388 2\n389 2\n390 2\n391 2\n392 2\n393 2\n394 2\n395 2\n396 2\n397 2\n398 2\n399 2\n400 2\n401 2\n402 2\n403 2\n404 2\n405 2\n406 2\n407 2\n408 2\n409 2\n410 2\n411 2\n412 2\n413 2\n414 2\n415 2\n416 2\n417 2\n418 2\n419 2\n420 2\n421 2\n422 2\n423 2\n424 2\n425 2\n426 2\n427 2\n428 2\n429 2\n430 2\n431 2\n432 2\n433 2\n434 2\n435 2\n436 2\n437 2\n438 2\n439 2\n440 2\n441 2\n442 2\n443 2\n444 2\n445 2\n446 2\n447 2\n448 2\n449 2\n450 2\n451 2\n452 2\n453 2\n454 2\n455 2\n456 2\n457 2\n458 2\n459 2\n460 2\n461 2\n462 2\n463 2\n464 2\n465 2\n466 2\n467 2\n468 2\n469 2\n470 2\n471 2\n472 2\n473 2\n474 2\n475 2\n476 2\n477 2\n478 2\n479 2\n480 2\n481 2\n482 2\n483 2\n484 2\n485 2\n486 2\n487 2\n488 2\n489 2\n490 2\n491 2\n492 2\n493 2\n494 2\n495 2\n496 2\n497 2\n498 2\n499 2\n500 2\n501 2\n502 2\n503 2\n504 2\n505 2\n506 2\n507 2\n508 2\n509 2\n510 2\n511 2\n512 2\n513 2\n514 2\n515 2\n516 2\n517 2\n518 2\n519 2\n520 2\n521 2\n522 2\n523 2\n524 2\n525 2\n526 2\n527 2\n528 2\n529 2\n530 2\n531 2\n532 2\n533 2\n534 2\n535 2\n536 2\n537 2\n538 2\n539 2\n540 2\n541 2\n542 2\n543 2\n"
    },
    {
        "number": 2858,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n1\n1''') == '2'\nassert solution('''3\n2\n3\n1\n''') == '1'\nassert solution('''3\n2\n2\n1\n''') == '1'\nassert solution('''3\n2\n2\n2\n''') == '2'\nassert solution('''3\n2\n2\n2\n2\n''') == '2'\n"
    },
    {
        "number": 2859,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n50 45\n91 50\n42 50 10''') == '1'\nassert solution('''0 0\n50 50\n141 50\n41 50 10''') == '3'\nassert solution('''0 0\n50 50\n141 50\n41 50 10''') == '3'\nassert solution('''0 0\n50 45\n91 50\n42 50 10''') == '1'\nassert solution('''0 0\n50 45\n91 50\n42 50 10''') == '1'\n"
    },
    {
        "number": 2860,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2861,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nABC\nABEF\nDEF\nABCDE\nFGH''') == '2'\nassert solution('''6\nBDE\nFGH\nDEF\nABC\nBDE\nABEF''') == '3'\nassert solution('''7\nCDE\nFGH\nDEF\nABC\nBDE\nABEF\nGHA''') == '4'\nassert solution('''8\nCDE\nFGH\nDEF\nABC\nBDE\nABEF\nGHA\nIJK''') == '5'\nassert solution('''9\nCDE\nFGH\nDEF\nABC\nBDE\nABEF\nGHA\nIJK\nLMN''') == '6'\n"
    },
    {
        "number": 2862,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 4\n0 0 0 0 3\n0 1 3\n1 4 1\n2 4 1\n3 4 2\n''') == '9 3 3 6 3'\nassert solution('''6 5\n0 0 0 0 0 3\n0 3 3\n1 4 3\n2 5 1\n3 5 1\n4 5 1\n''') == '9 9 3 3 3 3'\nassert solution('''7 5\n0 0 0 0 0 3\n0 3 3\n1 4 3\n2 5 1\n3 5 1\n4 5 1\n5 5 1\n''') == '9 9 3 3 3 3 3'\nassert solution('''8 5\n0 0 0 0 0 3\n0 3 3\n1 4 3\n2 5 1\n3 5 1\n4 5 1\n5 5 1\n6 5 1\n''') == '9 9 3 3 3 3 3'\nassert solution('''9 5\n0 0 0 0 0 3\n0 3 3\n1 4 3\n2 5 1\n3 5 1\n4 5 1\n5 5 1\n6 5 1\n7 5 1\n''') == '9 9 3 3 3 3 3 3'\n"
    },
    {
        "number": 2863,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 40\n2 37 42''') == '3'\nassert solution('''1 1\n3 1 3 2''') == '2'\nassert solution('''1 1\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2\n3 1 3 2"
    },
    {
        "number": 2864,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\nB I P C F\nA G M - - -\n''') == 'AGM'\nassert solution('''2\nA B C D H\nF G M M\nF H M - *\n''') == 'E??'\nassert solution('''3\nA B C D H\nF G M M\nF H M - *\n''') == 'E??'\nassert solution('''4\nA B C D H\nF G M M\nF H M - *\n''') == 'E??'\nassert solution('''5\nA B C D H\nF G M M\nF H M - *\n''') == 'E??'\n"
    },
    {
        "number": 2865,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2866,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7129045863') == '11'\nassert solution('55') == '1'\nassert solution('123456789') == '1'\nassert solution
    },
    {
        "number": 2867,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\n1 2 3 40 5 6 7 8 9 10\n0 2 3 0 5 0 7 0 0 0\n''') == '51'\nassert solution('''1\n2207\n0\n''') == '2207'\nassert solution('''10\n1 2 3 40 5 6 7 8 9 10\n0 2 3 0 5 0 7 0 0 0\n''') == '51'\nassert solution('''10\n1 2 3 40 5 6 7 8 9 10\n0 2 3 0 5 0 7 0 0 0\n''') == '51'\nassert solution('''10\n1 2 3 40 5 6 7 8 9 10\n0 2 3 0 5 0 7 0 0 0\n''') == '51'\n"
    },
    {
        "number": 2868,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 2869,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('VII') == 'VII'\nassert solution('VI') == 'IV'\nassert solution('XC') == 'XC'\nassert solution('XC') == 'XC'\nassert solution('XC') == 'XC'\n"
    },
    {
        "number": 2870,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '0'\nassert solution('2 1') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 2871,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2872,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 OCT') == '(:)'\nassert solution('2 JAN') == 'TGIF'\nassert solution('10 FEB') == ':(('\nassert solution('2 FEB') == 'TGIF'\nassert solution('10 MAR') == ':(('\n"
    },
    {
        "number": 2873,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('L_V') == '5'\nassert solution('V__K') == '10'\nassert solution('L_V_K') == '5'\nassert solution('V__K_L') == '10'\nassert solution('L_V_K_L') == '5'\n"
    },
    {
        "number": 2874,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 4\n2 4 5''') == '0'\nassert solution('''3 2\n1 5 10\n4 6\nSample Output 2:\n1''') == '1'\nassert solution('''3 2\n1 5 10\n4 6\n1 1 1''') == '0'\nassert solution('''3 2\n1 5 10\n4 6\n1 1 1''') == '0'\nassert solution('''3 2\n1 5 10\n4 6\n1 1 1''') == '0'\n"
    },
    {
        "number": 2875,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2876,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 4''') == '2'\nassert solution('''2\n1 4\n2 2''') == '2'\nassert solution('''1\n1 1''') == '1'\nassert solution('''2\n1 4\n2 2''') == '2'\nassert solution('''3\n1 1\n2 2\n3 4''') == '2'\n"
    },
    {
        "number": 2877,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 2878,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n...D\n..C.\n.B..\nA...''') == '4'\nassert solution('''5\n..T..\nA....\n.FE.R\n....X\nS....\nSample Output 2:\n3''') == '3'\nassert solution('''6\n..T..\nA....\n.FE.R\n....X\nS....\n..D.T\nSample Output 2:\n5''') == '5'\nassert solution('''7\n..T..\nA....\n.FE.R\n....X\nS....\n..D.T\n..C.A\nSample Output 2:\n7''') == '7'\nassert solution('''8\n..T..\nA....\n.FE.R\n....X\nS....\n..D.T\n..C.A\n..B..\nSample Output 2:\n8''') == '8'\n"
    },
    {
        "number": 2879,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\".XXXXX.\\n.XX..X.\\nXXXX...\\n\") == \"123\"\nassert solution(\"XXXX\\n.XX..X.\\nXXXX\\n\") == \"123\"\nassert solution(\"XXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n\") == \"123\"\nassert solution(\"XXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n\") == \"123\"\nassert solution(\"XXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n.XX..X.\\nXXXX\\n\") == \"123\"\n"
    },
    {
        "number": 2880,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2881,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2882,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"(()())\") == \"(()())\", \"test 1\"\nassert solution(\"()(())\") == \"(()())\", \"test 2\"\nassert solution(\"()()()\") == \"(()())\", \"test 3\"\nassert solution(\"(()())(())\") == \"(()()())(())\", \"test 4\"\nassert solution(\"(()())(())\") == \"(()()())(())\", \"test 5\"\n"
    },
    {
        "number": 2883,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''[[1,3],[2,6],[8,10],[15,18]]''') == [[1,6],[8,10],[15,18]]\nassert solution('''[[1,4],[4,5]]''') == [[1,5]]\nassert solution('''[[1,4],[0,4]]''') == [[0,4]]\nassert solution('''[[1,4],[0,2],[3,5]]''') == [[0,5]]\nassert solution('''[[1,4],[0,2],[3,5],[7,9]]''') == [[0,2],[3,5],[7,9]]\n"
    },
    {
        "number": 2884,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1,2\") == \"\"\nassert solution(\"1,2,3\") == \"\"\nassert solution(\"1,2,3,4\") == \"\"\n"
    },
    {
        "number": 2885,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1,3\n6,9\n''') == '''\n1,5\n6,9\n'''\n\nassert solution('''\n1,2\n3,5\n6,7\n8,10\n12,16\n''') == '''\n1,2\n3,10\n12,16\n'''\n\nassert solution('''\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n''') == '''\n1,2\n3,10\n12,16\n4,8\n'''\n\nassert solution('''\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n''') == '''\n1,2\n3,10\n12,16\n4,8\n2,5\n'''\n\nassert solution('''\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12,16\n4,8\n2,5\n1,2\n3,5\n6,7\n8,10\n12"
    },
    {
        "number": 2886,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('needed') == '2 5'\nassert solution('melee') == '-1 -1'\nassert solution('noon') == '-1 -1'\nassert solution('a') == '-1 -1'\nassert solution('voodoo') == '2 6'\n"
    },
    {
        "number": 2887,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n10 10 5\n5 7 2''') == '5 12 4'\nassert solution('''5\n30 25 20 15 10\n9 10 12 4 13''') == '9 20 35 11 25'\nassert solution('''1\n30 25 20 15 10\n9 10 12 4 13''') == '9 20 35 11 25'\nassert solution('''2\n30 25 20 15 10\n9 10 12 4 13''') == '9 20 35 11 25'\nassert solution('''3\n30 25 20 15 10\n9 10 12 4 13''') == '9 20 35 11 25'\n"
    },
    {
        "number": 2888,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n-----Subtask 1-----\n\n-----Subtask 2-----\n\n-----Subtask 3-----\n\n-----Grading-----\nSubtask 1: 40%\nSubtask 2: 40%\nSubtask 3: 50%\n\n-----Grading-----\n\n\"\"\""
    },
    {
        "number": 2889,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35''') == 'Eco-cut X2'\nassert solution('''7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35''') == 'Eco-cut X2,Mowepower'\nassert solution('''7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35''') == 'Eco-cut X2,Mowepower,Eco-cut X2'\nassert solution('''7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35''') == 'Eco-cut X2,Mowepower,Eco-cut X2,Mowepower'\nassert solution('''7000 4\nGrass Slayer 2000,9999,10,120,120\nSlow-Mowe,999,1,120,240\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35\nEco-cut X2,5499,2,25,35\nMowepower,5499,3,25,35''') == 'Eco-cut X2,Mowepower,Eco-cut X2,Mowepower,Eco-cut X2'\n"
    },
    {
        "number": 2890,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 1 1\n1 2 1 2\n1 3 1 0\n2 4 1 1\n3 4 1 0\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4"
    },
    {
        "number": 2891,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1\n''') == '-0.001191480807419'\nassert solution('''2\n1 1\n1 1\n''') == '-0.001191480807419'\nassert solution('''2\n1 1\n1 1\n1 1\n''') == '-0.001191480807419'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1\n''') == '-0.001191480807419'\nassert solution('''2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 2892,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2 3 2 4 1 3''') == '7'\nassert solution('''7\n1 2 3 2 4 1 3''') == 'impossible'\nassert solution('''7\n1 2 3 2 4 1 3''') == 'impossible'\nassert solution('''7\n1 2 3 2 4 1 3''') == 'impossible'\nassert solution('''7\n1 2 3 2 4 1 3''') == 'impossible'\n"
    },
    {
        "number": 2893,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n1\n0\n5\n4''') == '6'\nassert solution('''9\n1\n0\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n6\n5\n4\n3\n2\n1\n7\n"
    },
    {
        "number": 2894,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 2895,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 0 100\n2\n50\n5 1\n''') == '60'\nassert solution('''0 0 0 100\n2\n50\n5 1\n''') == '60'\nassert solution('''0 0 0 100\n2\n50\n5 1\n''') == '60'\nassert solution('''0 0 0 100\n2\n50\n5 1\n''') == '60'\nassert solution('''0 0 0 100\n2\n50\n5 1\n''') == '60'\n"
    },
    {
        "number": 2896,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''AAAAA\nAGCGAA''') == '3'\nassert solution('''AAAAA\nAGCGAA''') == '3'\nassert solution('''AAAAA\nAGCGAA''') == '3'\nassert solution('''AAAAA\nAGCGAA''') == '3'\nassert solution('''AAAAA\nAGCGAA''') == '3'\n"
    },
    {
        "number": 2897,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\nassert solution('''1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'decimal'\nassert solution('''1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\nassert solution('''1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'decimal'\nassert solution('''1 4\n1100\n2\n1 1 1 4\n1 1 1 1\n''') == 'neither'\n"
    },
    {
        "number": 2898,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6 6\n1 7\n3 5\n3 5''') == '1'\nassert solution('''4\n6 6\n1 7\n3 5\n3 5''') == '1'\nassert solution('''4\n6 6\n1 7\n3 5\n3 5''') == '1'\nassert solution('''4\n6 6\n1 7\n3 5\n3 5''') == '1'\nassert solution('''4\n6 6\n1 7\n3 5\n3 5''') == '1'\n"
    },
    {
        "number": 2899,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n''') == '23 42\\n42 23'\nassert solution('''3\n1 2\n1 3\n2 3\n''') == '23 42\\n42 23\\n23 42'\nassert solution('''4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '23 42\\n42 23\\n23 42\\n23 42'\nassert solution('''5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\n''') == '23 42\\n42 23\\n23 42\\n23 42\\n23 42'\nassert solution('''6\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n''') == '23 42\\n42 23\\n23 42\\n23 42\\n23 42\\n23 42'\n"
    },
    {
        "number": 2900,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('BABA') == '2\\n0\\n1'\nassert solution('BABABA') == '0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 2901,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''15\n0 1\n1 2\n2 3\n0 4\n1 5\n2 6\n3 7\n4 5\n5 6\n6 7\n4 8\n5 8\n6 9\n7 9\n8 9\nGriezmann France LaLiga AtleticoMadrid\nBenzema France LaLiga RealMadrid\nNtep France Ligue1 StadeRennais\nSissoko France PremierLeague Spurs\nTolisso France Ligue1 Lyon\nDiarra France Ligue1 OM\nEvra France CalcioA Juventus\nKoscielny France PremierLeague Arsenal\nVarane France LaLiga RealMadrid\nSagna France PremierLeague ManCity''') == 'yes'\nassert solution('''15\n0 1\n1 2\n2 3\n0 4\n1 5\n2 6\n3 7\n4 5\n5 6\n6 7\n4 8\n5 8\n6 9\n7 9\n8 9\nGriezmann France LaLiga AtleticoMadrid\nBenzema France LaLiga RealMadrid\nNtep France Ligue1 StadeRennais\nSissoko France PremierLeague Spurs\nTolisso France Ligue1 Lyon\nDiarra France Ligue1 OM\nEvra France CalcioA Juventus\nKoscielny France PremierLeague Arsenal\nVarane France LaLiga RealMadrid\nSagna France PremierLeague ManCity\n''') == 'no'\nassert solution('''15\n0 1\n1 2\n2 3\n0 4\n1 5\n2 6\n3 7\n4 5\n5 6\n6 7\n4 8\n5 8\n6 9\n7 9\n8 9\nGriezmann France LaLiga AtleticoMadrid\nBenzema France LaLiga RealMadrid\nNtep France Ligue1 StadeRennais\nSissoko France PremierLeague Spurs\nTolisso France Ligue1 Lyon\nDiarra France Ligue1 OM\nEvra France CalcioA Juventus\nKoscielny France PremierLeague Arsenal\nVarane France LaLiga RealMadrid\nSagna France PremierLeague ManCity\n''') == 'no'\nassert solution('''15\n0 1\n1 2\n2 3\n0 4\n1 5\n2 6\n3 7\n4 5\n5 6\n6 7\n4 8\n5 8\n6 9\n7 9\n8 9\nGriezmann France LaLiga AtleticoMadrid\nBenzema France LaLiga RealMadrid\nNtep France Ligue1 StadeRennais\nSissoko France PremierLeague Spurs\nTolisso France Ligue1 Lyon\nDiarra France Ligue1 OM\nEvra France CalcioA Juventus\nKoscielny France PremierLeague Arsenal\nVarane France LaLiga RealMadrid\nSagna France PremierLeague ManCity\n''') == 'no'\nassert solution('''15\n0 1\n1 2\n2 3\n0 4\n1 5\n2 6\n3 7\n4 5\n5 6\n6 7\n4 8\n5 8\n6 9\n7 9\n8 9\nGriezmann France LaLiga AtleticoMadrid\nBenzema France LaLiga RealMadrid\nNtep France Ligue1 StadeRennais\nSissoko France PremierLeague Spurs\nTolisso France Ligue1 Lyon\nDiarra France Ligue1 OM\nEvra France CalcioA Juventus\nKoscielny France PremierLeague Arsenal\nVarane France LaLiga RealMadrid\nSagna France PremierLeague ManCity\n''') == 'no'\n"
    },
    {
        "number": 2902,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 5 5\n1\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5\\n10\\n20\\n40\\n80'\nassert solution('''1 5 5\n1\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5\\n10\\n20\\n40\\n80'\nassert solution('''1 5 5\n1\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5\\n10\\n20\\n40\\n80'\nassert solution('''1 5 5\n1\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5\\n10\\n20\\n40\\n80'\nassert solution('''1 5 5\n1\n1\n1\n1\n1\n0\n1\n2\n3\n4\n''') == '5\\n10\\n20\\n40\\n80'\n"
    },
    {
        "number": 2903,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 2904,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n- - - - -\n- - - - -\n4 - - - 1\n5\n1 (1,1)\n2 (1,2) (1,3)\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\n4 (2,3) (2,4) (1,4) (1,5)\n3 (3,4) (3,5) (2,5)\n''') == '''1 2 1 2 1\n3 5 3 4 3\n4 2 1 2 1\n'''\n\nassert solution('''3 5\n- - - - -\n- - - - -\n4 - - - 1\n5\n1 (1,1)\n2 (1,2) (1,3)\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\n4 (2,3) (2,4) (1,4) (1,5)\n3 (3,4) (3,5) (2,5)\n''') == '''1 2 1 2 1\n3 5 3 4 3\n4 2 1 2 1\n'''\n\nassert solution('''3 5\n- - - - -\n- - - - -\n4 - - - 1\n5\n1 (1,1)\n2 (1,2) (1,3)\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\n4 (2,3) (2,4) (1,4) (1,5)\n3 (3,4) (3,5) (2,5)\n''') == '''1 2 1 2 1\n3 5 3 4 3\n4 2 1 2 1\n'''\n\nassert solution('''3 5\n- - - - -\n- - - - -\n4 - - - 1\n5\n1 (1,1)\n2 (1,2) (1,3)\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\n4 (2,3) (2,4) (1,4) (1,5)\n3 (3,4) (3,5) (2,5)\n''') == '''1 2 1 2 1\n3 5 3 4 3\n4 2 1 2 1\n'''\n\nassert solution('''3 5\n- - - - -\n- - - - -\n4 - - - 1\n5\n1 (1,1)\n2 (1,2) (1,3)\n5 (2,1) (2,2) (3,1) (3,2) (3,3)\n4 (2,3) (2,4) (1,4) (1,5)\n3 (3,4) (3,5) (2,5)\n''') == '''1 2 1 2 1\n3 5 3 4 3\n4 2 1 2 1\n'''"
    },
    {
        "number": 2905,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 10 10 10 10\n10 8 8 8 8 12 12 12 8 8 12 12\n''') == 'impossible'\nassert solution('''4 10 10 10 10\n10 8 8 8 8 12 12 12 8 8 12 12\n''') == '4'\nassert solution('''4 10 10 10 10\n10 8 8 8 8 12 12 12 8 8 12 12\n''') == 'impossible'\nassert solution('''4 10 10 10 10\n10 8 8 8 8 12 12 12 8 8 12 12\n''') == 'impossible'\nassert solution('''4 10 10 10 10\n10 8 8 8 8 12 12 12 8 8 12 12\n''') == 'impossible'\n"
    },
    {
        "number": 2906,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3''') == 'Impossible'\nassert solution('''3 3\n1 2\n2 3\n1 3''') == '2 3 1'\nassert solution('''3 3\n1 2\n2 3\n1 3''') == '1 3 2'\nassert solution('''3 3\n1 2\n2 3\n1 3''') == '1 3 2'\nassert solution('''3 3\n1 2\n2 3\n1 3''') == '1 3 2'\n"
    },
    {
        "number": 2907,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''thequickbrownfoxjumpedoverthelazydog''') == 'Boris'\nassert solution('''thequickbrownfoxjumpedoverthelazydog''') == 'Colleague'\nassert solution('''thequickbrownfoxjumpedoverthelazydog''') == 'Colleague'\nassert solution('''thequickbrownfoxjumpedoverthelazydog''') == 'Boris'\nassert solution('''thequickbrownfoxjumpedoverthelazydog''') == 'Colleague'\n"
    },
    {
        "number": 2908,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 66\n15 21 22''') == 'NO'\nassert solution('''3 66\n15 21 22''') == 'NO'\nassert solution('''3 66\n15 21 22''') == 'NO'\nassert solution('''3 66\n15 21 22''') == 'NO'\nassert solution('''3 66\n15 21 22''') == 'NO'\n"
    },
    {
        "number": 2909,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 4 2\n4 3 2 1''') == 'Possible'\nassert solution('''4\n1 3 4 2\n4 3 2 1''') == 'Possible'\nassert solution('''4\n1 3 4 2\n2 1 4 3\nSample Output:\nPossible\nassert solution('''4\n1 3 4 2\n2 1 4 3\nSample Output:\nPossible\nassert solution('''4\n1 3 4 2\n2 1 4 3\nSample Output:\nPossible\n"
    },
    {
        "number": 2910,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 1\n1 1 1\n''') == '3 3 3'\nassert solution('''3\n1 1 1\n1 1 1\n''') == '3 3 3'\nassert solution('''3\n1 1 1\n1 1 1\n''') == '3 3 3'\nassert solution('''3\n1 1 1\n1 1 1\n''') == '3 3 3'\nassert solution('''3\n1 1 1\n1 1 1\n''') == '3 3 3'\n"
    },
    {
        "number": 2911,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 60\n\n\"\"\"\n\nimport sys\nfrom math import factorial"
    },
    {
        "number": 2912,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''cute\ncat\nkattis\nis\n3 2\n4 1\n3 4''') == 'kattiscatiscute'\nassert solution('''cute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4''') == 'kattiscatiscute'\nassert solution('''cute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\nis\n3 2\n4 1\n3 4\ncute\ncat\nkattis\n"
    },
    {
        "number": 2913,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3''') == 'NO'\nassert solution('''5 2 3''') == 'NO'\nassert solution('''5 2 3''') == 'NO'\nassert solution('''5 2 3''') == 'NO'\nassert solution('''5 2 3''') == 'NO'\n"
    },
    {
        "number": 2914,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.888888889\"\n\"\"\""
    },
    {
        "number": 2915,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 100\n-10 50\n10 175\n25 20''') == '90'\nassert solution('''3 100\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20''') == '90'\nassert solution('''3 100\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20''') == '90'\nassert solution('''3 100\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10 175\n25 20\n-10 50\n10"
    },
    {
        "number": 2916,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n''') == '0'\nassert solution('''4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n''') == '0'\nassert solution('''4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n''') == '0'\nassert solution('''4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n''') == '0'\nassert solution('''4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n''') == '0'\n"
    },
    {
        "number": 2917,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 1\nassert solution('0') == 1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 5\n"
    },
    {
        "number": 2918,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n3\nX10\n0X1\n10X\n''') == '1 2 0'\nassert solution('''\n3\nX10\n0X1\n10X\n''') == 'impossible'\nassert solution('''\n3\nX10\n0X1\n10X\n''') == '1 2 0'\nassert solution('''\n3\nX10\n0X1\n10X\n''') == '1 2 0'\nassert solution('''\n3\nX10\n0X1\n10X\n''') == '1 2 0'\n"
    },
    {
        "number": 2919,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"SSSTTSNTNST\"\n) == \"6\"\nassert solution(\n    \"SSSTTSNTNST\"\n) == \"6\"\nassert solution(\n    \"SSSTTSNTNST\"\n) == \"6\"\nassert solution(\n    \"SSSTTSNTNST\"\n) == \"6\"\nassert solution(\n    \"SSSTTSNTNST\"\n) == \"6\"\n"
    },
    {
        "number": 2920,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n.....\n"
    },
    {
        "number": 2921,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00''') == 'fire 2\\nwater 1'\nassert solution('''10.00 9.0 2\nfire 2 1/1 4.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2 2.00\nwater 10 1/2"
    },
    {
        "number": 2922,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n1 4 3 12 13 1''') == 'YES'\nassert solution('''1\n1''') == 'NO'\nassert solution('''1\n1''') == 'NO'\nassert solution('''1\n1''') == 'NO'\nassert solution('''1\n1''') == 'NO'\n"
    },
    {
        "number": 2923,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\nassert solution('''8 5\nA11111AA\nAA7B111A\n111BB111\n11BBB111\n11BBB11B\n''') == '13'\n"
    },
    {
        "number": 2924,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32''') == 'Ride on!'\nassert solution('''2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32''') == 'Time to change gears!'\nassert solution('''2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32''') == 'Ride on!'\nassert solution('''2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32''') == 'Time to change gears!'\nassert solution('''2 11 15\n50 34\n11 12 13 14 16 18 20 22 25 28 32''') == 'Ride on!'\n"
    },
    {
        "number": 2925,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n30 one\n30 two\n15 three\n25 four''') == 'four'\nassert solution('''4 2\n30 one\n30 two\n15 three\n25 four''') == 'two'\nassert solution('''4 2\n30 one\n30 two\n15 three\n25 four''') == 'one'\nassert solution('''4 2\n30 one\n30 two\n15 three\n25 four''') == 'three'\nassert solution('''4 2\n30 one\n30 two\n15 three\n25 four''') == 'two'\n"
    },
    {
        "number": 2926,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\ndatastructure 3 query range sum\ngeometry 3 euclid range vertex\ngraph 3 query vertex hamiltonian\nmath 3 hamiltonian sum euclid\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\n''') == 'datastructure\\ngraph\\nmath\\n'\n\nassert solution('''4\ndatastructure 3 query range sum\ngeometry 3 euclid range vertex\ngraph 3 query vertex hamiltonian\nmath 3 hamiltonian sum euclid\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of the\nminimum solution of those vertices\nconsider the hamiltonian graph where each vertex corresponds\nto an linear equation we can solve these using the euclid\nalgorithm now you will receive a query corresponding to a\nrange of vertices your task is to compute the sum of"
    },
    {
        "number": 2927,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n10 3 8 22 -4 16 8 3 14''') == 'Touchdown'\nassert solution('''9\n10 3 8 22 -4 16 8 3 14''') == 'Safety'\nassert solution('''9\n10 3 8 22 -4 16 8 3 14''') == 'Nothing'\nassert solution('''9\n10 3 8 22 -4 16 8 3 14''') == 'Nothing'\nassert solution('''9\n10 3 8 22 -4 16 8 3 14''') == 'Nothing'\n"
    },
    {
        "number": 2928,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n1000 0\n20\n3\n0.0 500\n999.5 500\n1000.0 500''') == '500.000000\\n624.875000\\n625.000000\\n'\nassert solution('''1\n1000 0\n20\n3\n0.0 500\n999.5 500\n1000.0 500\n1\n0.0 500\n999.5 500\n1000.0 500\n2\n0.0 500\n999.5 500\n1000.0 500\n3\n0.0 500\n999.5 500\n1000.0 500\n4\n0.0 500\n999.5 500\n1000.0 500\n5\n0.0 500\n999.5 500\n1000.0 500\n6\n0.0 500\n999.5 500\n1000.0 500\n7\n0.0 500\n999.5 500\n1000.0 500\n8\n0.0 500\n999.5 500\n1000.0 500\n9\n0.0 500\n999.5 500\n1000.0 500\n10\n0.0 500\n999.5 500\n1000.0 500\n11\n0.0 500\n999.5 500\n1000.0 500\n12\n0.0 500\n999.5 500\n1000.0 500\n13\n0.0 500\n999.5 500\n1000.0 500\n14\n0.0 500\n999.5 500\n1000.0 500\n15\n0.0 500\n999.5 500\n1000.0 500\n16\n0.0 500\n999.5 500\n1000.0 500\n17\n0.0 500\n999.5 500\n1000.0 500\n18\n0.0 500\n999.5 500\n1000.0 500\n19\n0.0 500\n999.5 500\n1000.0 500\n20\n0.0 500\n999.5 500\n1000.0 500\n''') == '500.000000\\n624.875000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n625.000000\\n"
    },
    {
        "number": 2929,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 3\n2 4''') == '4'\nassert solution('''0 3\n2 4\n0 3''') == '4'\nassert solution('''0 3\n2 4\n2 3''') == '2'\nassert solution('''0 3\n2 4\n2 3\n0 3''') == '2'\nassert solution('''0 3\n2 4\n2 3\n2 3\n0 3''') == '2'\n"
    },
    {
        "number": 2930,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n2''') == '3'\nassert solution('''1\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n4\n2\n3\n"
    },
    {
        "number": 2931,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n250 180\n250 132\n220 123\n132 194\n220 105''') == '1 3\\n1 3\\n3 5\\n1 5\\n3 5'\nassert solution('''1\n1\n1\n1\n1''') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''2\n100 200\n100 200\n100 200\n100 200''') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''3\n100 200\n100 200\n100 200\n100 200''') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1'\nassert solution('''4\n100 200\n100 200\n100 200\n100 200''') == '1 1\\n1 1\\n1 1\\n1 1\\n1 1'\n"
    },
    {
        "number": 2932,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(\"progno\") == \"No\"\nassert solution(\"prognoa\") == \"No\"\nassert solution(\"prognoaa\") == \"No\"\nassert solution(\"prognoaaab\") == \"No\"\n"
    },
    {
        "number": 2933,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n900\n500\n498\n4''') == '1002'\nassert solution('''1\n1\n1\n1\n1''') == '1'\nassert solution('''2\n1\n2\n2\n2''') == '2'\nassert solution('''3\n1\n2\n3\n3''') == '3'\nassert solution('''4\n1\n2\n3\n4''') == '4'\n"
    },
    {
        "number": 2934,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2''') == '7'\nassert solution('''3\n3''') == '10'\nassert solution('''4\n4''') == '42'\nassert solution('''5\n5''') == '190'\nassert solution('''6\n6''') == '260'\n"
    },
    {
        "number": 2935,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7''') == '45'\nassert solution('''8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7''') == '45'\nassert solution('''8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7''') == '45'\nassert solution('''8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7''') == '45'\nassert solution('''8 11 1 0 5\n0 1 10\n0 2 10\n1 2 10\n2 6 40\n6 7 10\n5 6 10\n3 5 15\n3 6 40\n3 4 20\n1 4 20\n1 3 20\n4 7''') == '45'\n"
    },
    {
        "number": 2936,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 1\n-2 3 5 -7 8 13 -20 14 1''') == 22\nassert solution('''9 1\n-2 3 5 -7 8 13 -20 14 1''') == 22\nassert solution('''9 1\n-2 3 5 -7 8 13 -20 14 1''') == 22\nassert solution('''9 1\n-2 3 5 -7 8 13 -20 14 1''') == 22\nassert solution('''9 1\n-2 3 5 -7 8 13 -20 14 1''') == 22\n"
    },
    {
        "number": 2937,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 0 1\nAlice\nBob''') == '2\\nAlice\\nBob'\nassert solution('''2 0 1\nAlice\nBob\nAlice\nBob''') == '2\\nAlice\\nBob'\nassert solution('''2 0 1\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\nAlice\nBob\n"
    },
    {
        "number": 2938,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'Yes'\nassert solution('''........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\nassert solution('''........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'Yes'\nassert solution('''........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'No'\nassert solution('''........\n........\n........\n........\n.....K.k\n........\n........\nR.......\n''') == 'Yes'\n"
    },
    {
        "number": 2939,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1223\n2123\n2213\n3212\n''') == '3'\nassert solution('''\n1\n1223\n2123\n2213\n3212\n''') == '3'\nassert solution('''\n1\n1223\n2123\n2213\n3212\n''') == '3'\nassert solution('''\n1\n1223\n2123\n2213\n3212\n''') == '3'\nassert solution('''\n1\n1223\n2123\n2213\n3212\n''') == '3'\n"
    },
    {
        "number": 2940,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 2\n2 3 4\n2 1 5\n5 1 2 3 4 5\n2 1 2\n''') == '3'\nassert solution('''5\n2 1 2\n2 3 4\n2 1 5\n5 1 2 3 4 5\n2 1 2\n''') == '3'\nassert solution('''5\n2 1 2\n2 3 4\n2 1 5\n5 1 2 3 4 5\n2 1 2\n''') == '3'\nassert solution('''5\n2 1 2\n2 3 4\n2 1 5\n5 1 2 3 4 5\n2 1 2\n''') == '3'\nassert solution('''5\n2 1 2\n2 3 4\n2 1 5\n5 1 2 3 4 5\n2 1 2\n''') == '3'\n"
    },
    {
        "number": 2941,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'Bob'\nassert solution('''5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'Alice'\nassert solution('''5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\nassert solution('''5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'Alice'\nassert solution('''5 1\n1 10 Alice 5\n1 15 Bob 15\n2 20\n2 25\n2 30\n''') == 'doctor takes a break'\n"
    },
    {
        "number": 2942,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''88''') == '9 13'\nassert solution('''89''') == 'impossible'\nassert solution('''90''') == 'impossible'\nassert solution('''91''') == 'impossible'\nassert solution('''92''') == 'impossible'\n"
    },
    {
        "number": 2943,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"BBRRBRRBRB\"\n) == \"3 7\"\nassert solution(\n
    },
    {
        "number": 2944,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\n''') == '1'\nassert solution('''3 2 1\nAlice 0\nBob 1\nCarol 1\nAlice Bob\nBob Carol\nAlice\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol\nBob Carol"
    },
    {
        "number": 2945,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''12''') == '5'\nassert solution('''1''') == '0'\nassert solution('''3 1''') == '5'\nassert solution('''1\n3 1''') == '5'\nassert solution('''5 1''') == '0'\n"
    },
    {
        "number": 2946,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 10\n1000 980 960 940 10''') == '98950'\nassert solution('''5 10\n1000 980 960 940 10''') == '98950'\nassert solution('''5 10\n1000 980 960 940 10''') == '98950'\nassert solution('''5 10\n1000 980 960 940 10''') == '98950'\nassert solution('''5 10\n1000 980 960 940 10''') == '98950'\n"
    },
    {
        "number": 2947,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6\n2 17 10\n1 5\n2 10 22\n3 17 22 9\n2 17 8\n3 9 22 16''') == 'impossible'\nassert solution('''3\n2 17 10\n1 5\n2 10 22\n3 17 22 9''') == 'impossible'\nassert solution('''3\n2 17 10\n1 5\n2 10 22\n3 17 22 9\n2 17 8\n3 9 22 16''') == 'impossible'\nassert solution('''3\n2 17 10\n1 5\n2 10 22\n3 17 22 9\n2 17 8\n3 9 22 16\n2 17 7\n3 9 22 16\n2 17 6\n3 9 22 16\n2 17 5\n3 9 22 16\n2 17 4\n3 9 22 16\n2 17 3\n3 9 22 16\n2 17 2\n3 9 22 16\n2 17 1\n3 9 22 16\n2 17 0\n3 9 22 16\n2 16 17\n3 9 22 16\n2 16 16\n3 9 22 16\n2 16 15\n3 9 22 16\n2 16 14\n3 9 22 16\n2 16 13\n3 9 22 16\n2 16 12\n3 9 22 16\n2 16 11\n3 9 22 16\n2 16 10\n3 9 22 16\n2 16 9\n3 9 22 16\n2 16 8\n3 9 22 16\n2 16 7\n3 9 22 16\n2 16 6\n3 9 22 16\n2 16 5\n3 9 22 16\n2 16 4\n3 9 22 16\n2 16 3\n3 9 22 16\n2 16 2\n3 9 22 16\n2 16 1\n3 9 22 16\n2 16 0\n3 9 22 16\n2 15 17\n3 9 22 16\n2 15 16\n3 9 22 16\n2 15 15\n3 9 22 16\n2 15 14\n3 9 22 16\n2 15 13\n3 9 22 16\n2 15 12\n3 9 22 16\n2 15 11\n3 9 22 16\n2 15 10\n3 9 22 16\n2 15 9\n3 9 22 16\n2 15 8\n3 9 22 16\n2 15 7\n3 9 22 16\n2 15 6\n3 9 22 16\n2 15 5\n3 9 22 16\n2 15 4\n3 9 22 16\n2 15 3\n3 9 22 16\n2 15 2\n3 9 22 16\n2 15 1\n3 9 22 16\n2 15 0\n3 9 22 16\n2 14 17\n3 9 22 16\n2 14 16\n3 9 22 16\n2 14 15\n3 9 22 16\n2 14 14\n3 9 22 16\n2 14 13\n3 9 22 16\n2 14 12\n3 9 22 16\n2 14 11\n3 9 22 16\n2 14 10\n3 9 22 16\n2 14 9\n3 9 22 16\n2 14 8\n3 9 22 16\n2 14 7\n3 9 22 16\n2 14 6\n3 9 22 16\n2 14 5\n3 9 22 16\n2 14 4\n3 9 22 16\n2 14 3\n3 9 22 16\n2 14 2\n3 9 22 16\n2 14 1\n3 9 22 16\n2 14 0\n3 9 22 16\n2 13 17\n3 9 22 16\n2 13 16\n3 9 22 16\n2 13 15\n3 9 22 16\n2 13 14\n3 9 22 16\n2 13 13\n3 9 22 16\n2 13 12\n3 9 22 16\n2 13 11\n3 9 22 16\n2 13 10\n3 9 22 16\n2 13 9\n3 9 22 16\n2 13 8\n3 9 22 16\n2 13 7\n3 9 22 16\n2 13 6\n3 9 22 16\n2 13 5\n3 9 22 16\n2 13 4\n3 9 22 16\n2 13 3\n3 9 22 16\n2 13 2\n3 9 22 16\n2 13 1\n3 9 22 16\n2 13 0\n3 9 22 16\n2 12 17\n3 9 22 16\n2 12 16\n3 9 22 16\n2 12 15\n3 9 22 16\n2 12 14\n3 9 22 16\n2 12 13\n3 9 22 16\n2 12 12\n3 9 22 16\n2 12 11\n3 9 22 16\n2 12 10\n3 9 22 16\n2 12 9\n3 9 22 16\n2 12 8\n3 9 22 16\n2 12 7\n3 9 22 16\n2 12 6\n3 9 22 16\n2 12 5\n3 9 22 16\n2 12 4\n3 9 22 16\n2 12 3\n3 9 22 16\n2 12 2\n3 9 22 16\n2 12 1\n3 9 22 16\n2 12 0\n3 9 22 16\n2 11 17\n3 9 22 16\n2 11 16\n3 9 22 16\n2 11 15\n3 9 22 16\n2 11 14\n3 9 22 16\n2 11 13\n3 9 22 16\n2 11 12\n3 9 22 16\n2 11 11\n3 9 22 16\n2 11 10\n3 9 22 16\n2 11 9\n3 9 22 16\n2 11 8\n3 9 22 16\n2 11 7\n3 9 22 16\n2 11 6\n3 9 22 16\n2 11 5\n3 9 22 16\n2 11 4\n3 9 22 16\n2 11 3\n3 9 22 16\n2 11 2\n3 9 22 16\n2 11 1\n3 9 22 16\n2 11 0\n3 9 22 16\n2 10 17\n3 9 22 16\n2 10 16\n3 9 22 16\n2 10 15\n3 9 22 16\n2 10 14\n3 9 22 16\n2 10 13\n3 9 22 16\n2 10 12\n3 9 22 16\n2 10 11\n3 9 22 16\n2 10 10\n3 9 22 16\n2 10 9\n3 9 22 16\n2 10 8\n3 9 22 16\n2 10 7\n3 9 22 16\n2 10 6\n3 9 22 16\n2 10 5\n3 9 22 16\n2 10 4\n3 9 22 16\n2 10 3\n3 9 22 16\n2 10 2\n3 9 22 16\n2 10 1\n3 9 22 16\n2 10 0\n3 9 22 16\n2 9 17\n3 9 22 16\n2 9 16\n3 9 22 16\n2 9 15\n3 9 22 16\n2 9 14\n3 9 22 16\n2 9 13\n3 9 22 16\n2 9 12\n3 9 22 16\n2 9 11\n3 9 22 16\n2 9 10\n3 9 22 16\n2 9 9\n3 9 22 16\n2 9 8\n3 9 22 16\n2 9 7\n3 9 22 16"
    },
    {
        "number": 2948,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2''') == 'ABBBBBA'\nassert solution('''7\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n2  1 7  7 2''') == 'ABBBBBBB'\nassert solution('''7\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n2  1 7  7 2''') == 'ABBBBBBB'\nassert solution('''7\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n2  1 7  7 2\n2  1 8  7 2''') == 'ABBBBBBB'\nassert solution('''7\n2  1 2  7 3\n2  1 3  7 4\n2  1 4  7 5\n2  1 5  7 6\n2  1 6  7 2\n2  1 7  7 2\n2  1 8  7 2\n2  1 9  7 2''') == 'ABBBBBBB'\n"
    },
    {
        "number": 2949,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8\n1 0 1\n3 0 2\n0 1 1\n2 1 2\n4 1 2\n1 2 2\n2 3 1\n4 3 1\n''') == '4'\nassert solution('''8\n1 0 1\n3 0 2\n0 1 1\n2 1 2\n4 1 2\n1 2 2\n2 3 1\n4 3 1\n''') == '4'\nassert solution('''8\n1 0 1\n3 0 2\n0 1 1\n2 1 2\n4 1 2\n1 2 2\n2 3 1\n4 3 1\n''') == '4'\nassert solution('''8\n1 0 1\n3 0 2\n0 1 1\n2 1 2\n4 1 2\n1 2 2\n2 3 1\n4 3 1\n''') == '4'\nassert solution('''8\n1 0 1\n3 0 2\n0 1 1\n2 1 2\n4 1 2\n1 2 2\n2 3 1\n4 3 1\n''') == '4'\n"
    },
    {
        "number": 2950,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\"\n\n\"\"\""
    },
    {
        "number": 2951,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n2 1\n2 1\n2 1''') == '12'\nassert solution('''3\n2 1\n2 1\n2 1''') == '12'\nassert solution('''3\n2 1\n2 1\n2 1''') == '12'\nassert solution('''3\n2 1\n2 1\n2 1''') == '12'\nassert solution('''3\n2 1\n2 1\n2 1''') == '12'\n"
    },
    {
        "number": 2952,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\nassert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 2953,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n20180000 20180000\n20180000 20182018\n20182018 20180000\n20182018 20182018''') == '4'\nassert solution('''1\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 434\n435 435\n436 436\n437 437\n438 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448 448\n449 449\n450 450\n451 451\n452 452\n453 453\n454 454\n455 455\n456 456\n457 457\n458 459\n460 460\n461 461\n462 462\n463 463\n464 464\n465 465\n466 466\n467 467\n468 469\n470 470\n471 471\n472 472\n473 473\n474 474\n475 475\n476 476\n477 477\n478 478\n479 479\n480 480\n481 481\n482 482\n483 483\n484 484\n485 485\n486 486\n487 487\n488 488\n489 489\n490 490\n491 491\n492 492\n493 493\n494 494\n495 495\n496 496\n497 497\n498 498\n499 499\n500 500\n501 501\n502 502\n503 503\n504 504\n505 505\n506 506\n507 507\n508 509\n510 511\n512 513\n514 515\n516 517\n518 519\n520 520\n521 521\n522 523\n524 525\n526 527\n528 529\n530 531\n532 532\n533 534\n535 535\n536 537\n538 539\n540 541"
    },
    {
        "number": 2954,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4 3000\n0 1 1\n1 3 1\n2 0 2018\n2 3 42\n0 3\n1 1\n''') == '1'\nassert solution('''4 4 3000\n0 1 1\n1 3 1\n2 0 2018\n2 3 42\n0 3\n1 1\n''') == '1'\nassert solution('''4 4 3000\n0 1 1\n1 3 1\n2 0 2018\n2 3 42\n0 3\n1 1\n''') == '1'\nassert solution('''4 4 3000\n0 1 1\n1 3 1\n2 0 2018\n2 3 42\n0 3\n1 1\n''') == '1'\nassert solution('''4 4 3000\n0 1 1\n1 3 1\n2 0 2018\n2 3 42\n0 3\n1 1\n''') == '1'\n"
    },
    {
        "number": 2955,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n2 3 5''') == '00010'\nassert solution('''5 2 3\n2 3 5''') == '00010'\nassert solution('''5 2 3\n2 3 5''') == '00010'\nassert solution('''5 2 3\n2 3 5''') == '00010'\nassert solution('''5 2 3\n2 3 5''') == '00010'\n"
    },
    {
        "number": 2956,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"LRRRSRL\") == \"44\"\nassert solution(\"RLLLRRLLL\") == \"8\"\nassert solution(\"RLLLRRLLL\") == \"8\"\nassert solution(\"RLLLRRLLL\") == \"8\"\nassert solution(\"RLLLRRLLL\") == \"8\"\n"
    },
    {
        "number": 2957,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 2958,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30''') == '10'\nassert solution('''4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n1 1\n1 1\n1 1\n1 1''') == '0'\nassert solution('''4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n1 1\n1 1\n1 1\n1 1''') == '-1'\nassert solution('''4 3 2\n1 3 2 1 \n1 50\n50 20\n40 30\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 2959,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 6\n.TT...\nTTTT..\nTTTTT.\nTTTTT.\nTTTTTT\n..T...\n''') == '''...1.1......\n.1.2.2.1....\n.1.2.3.2.1..\n.1.2.3.2.1..\n.1.1.2.1.1.1\n.....1......\n'''\n\nassert solution('''3 3\n.T.\nT.T\n.T.\n''') == '''...1.1.\n.1.2.\n.1.2.\n.1.2.\n'''\n\nassert solution('''3 3\n.T.\nT.T\n.T.\n''') == '''...1.1.\n.1.2.\n.1.2.\n.1.2.\n'''\n\nassert solution('''3 3\n.T.\nT.T\n.T.\n''') == '''...1.1.\n.1.2.\n.1.2.\n.1.2.\n'''\n\nassert solution('''3 3\n.T.\nT.T\n.T.\n''') == '''...1.1.\n.1.2.\n.1.2.\n.1.2.\n'''"
    },
    {
        "number": 2960,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4''') == '9'\nassert solution('''5''') == '15'\nassert solution('''6''') == '21'\nassert solution('''7''') == '35'\nassert solution('''8''') == '55'\n"
    },
    {
        "number": 2961,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 1 2\n2 2 2 3\n3 3 3 4\n0 0 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n4 4 4 4\n''') == 'Yes'\nassert solution('''4\n1 1 1 2\n2 2 2 3\n3 3 3 4\n0 0 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n4 4 4 4\n''') == 'No'\nassert solution('''4\n1 1 1 2\n2 2 2 3\n3 3 3 4\n0 0 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n4 4 4 4\n''') == 'Impossible'\nassert solution('''4\n1 1 1 2\n2 2 2 3\n3 3 3 4\n0 0 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n4 4 4 4\n''') == 'No'\nassert solution('''4\n1 1 1 2\n2 2 2 3\n3 3 3 4\n0 0 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n4 4 4 4\n''') == 'Yes'\n"
    },
    {
        "number": 2962,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1000 1\n2000 2\n500 2\n1200 0''') == '4200'\nassert solution('''1000 1\n2000 2\n500 2\n1200 0\n2000 1\n500 1\n1200 0''') == '4200'\nassert solution('''1000 1\n2000 2\n500 2\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0\n2000 1\n500 1\n1200 0"
    },
    {
        "number": 2963,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(4) == 2.0\nassert solution(1) == 1.0\nassert solution(2) == 1.0\nassert solution(3) == 1.0\nassert solution(4) == 2.0\n"
    },
    {
        "number": 2964,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 2\n-1 -2''') == '5.0'\nassert solution('''2\n2 2\n-1 -2\n-1 -2''') == '0.0'\nassert solution('''2\n2 2\n-1 -2\n-1 -2\n-1 -2''') == '0.0'\nassert solution('''2\n2 2\n-1 -2\n-1 -2\n-1 -2\n-1 -2''') == '0.0'\nassert solution('''2\n2 2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -2\n-1 -"
    },
    {
        "number": 2965,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2 8\n3 2\n5 5\n4 3\n1 1''') == '''ALIVE\n1\n2\n1\n2'''\nassert solution('''4 2 8\n3 2\n5 5\n4 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 2966,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 10''') == '2'\nassert solution('''1 1''') == '0'\nassert solution('''1 2''') == '1'\nassert solution('''2 2''') == '1'\nassert solution('''3 3''') == '2'\n"
    },
    {
        "number": 2967,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n\n\"\"\""
    },
    {
        "number": 2968,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1600\"\n"
    },
    {
        "number": 2969,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''28''') == 'possible'\nassert solution('''28''') == 'possible'\nassert solution('''28''') == 'possible'\nassert solution('''28''') == 'possible'\nassert solution('''28''') == 'possible'\n"
    },
    {
        "number": 2970,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 1 2\n1\n1\n1\n1\n1''') == '7'\nassert solution('''5 1 2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 2971,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\nspaghetti\nalready\nconfetti\nserengeti''') == '4'\nassert solution('''4\nspaghetti\nalready\nconfetti\nserengeti''') == '4'\nassert solution('''4\nspaghetti\nalready\nconfetti\nserengeti''') == '4'\nassert solution('''4\nspaghetti\nalready\nconfetti\nserengeti''') == '4'\nassert solution('''4\nspaghetti\nalready\nconfetti\nserengeti''') == '4'\n"
    },
    {
        "number": 2972,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"36\"\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 2973,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 5\n4 -1\n4 0\n10 3''') == '3.000000000'\nassert solution('''3 5\n4 -1\n4 0\n10 3''') == '3.000000000'\nassert solution('''3 5\n4 -1\n4 0\n10 3''') == '3.000000000'\nassert solution('''3 5\n4 -1\n4 0\n10 3''') == '3.000000000'\nassert solution('''3 5\n4 -1\n4 0\n10 3''') == '3.000000000'\n"
    },
    {
        "number": 2974,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n-----\n\n\"\"\""
    },
    {
        "number": 2975,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 100\n10 8 10 10 13 11\n12 20 6 10 17 24''') == '5'\nassert solution('''2 100\n10 8 10 10 13 11\n12 20 6 10 17 24''') == '5'\nassert solution('''2 100\n10 8 10 10 13 11\n12 20 6 10 17 24''') == '5'\nassert solution('''2 100\n10 8 10 10 13 11\n12 20 6 10 17 24''') == '5'\nassert solution('''2 100\n10 8 10 10 13 11\n12 20 6 10 17 24''') == '5'\n"
    },
    {
        "number": 2976,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('sampras agassi') == 'da'\nassert solution('sampras agassi') == 'ne'\nassert solution('sampras agassi') == 'ne'\nassert solution('sampras agassi') == 'ne'\nassert solution('sampras agassi') == 'ne'\n"
    },
    {
        "number": 2977,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''The flag of the empire Angola?''') == 'Red stripe, black stripe, yellow'\nassert solution('''The flag of the empire Angola?''') == 'Red stripe, black stripe, yellow'\nassert solution('''The flag of the empire Angola?''') == 'Red stripe, black stripe, yellow'\nassert solution('''The flag of the empire Angola?''') == 'Red stripe, black stripe, yellow'\nassert solution('''The flag of the empire Angola?''') == 'Red stripe, black stripe, yellow'\n"
    },
    {
        "number": 2978,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1 2 1\n1 1 1 2\n3\n2 0 2 2\n2 0 0 3\n0 0 2 2\n''') == 'different'\nassert solution('''2\n1 1 2 1\n1 1 1 2\n3\n2 0 2 2\n2 0 0 3\n0 0 2 2\n''') =='same'\nassert solution('''2\n1 1 2 1\n1 1 1 2\n3\n2 0 2 2\n2 0 0 3\n0 0 2 2\n''') =='same'\nassert solution('''2\n1 1 2 1\n1 1 1 2\n3\n2 0 2 2\n2 0 0 3\n0 0 2 2\n''') == 'different'\nassert solution('''2\n1 1 2 1\n1 1 1 2\n3\n2 0 2 2\n2 0 0 3\n0 0 2 2\n''') =='same'\n"
    },
    {
        "number": 2979,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 1 4\n0 1\n1 2\n2 3''') == '8'\nassert solution('''4 3 1 4\n0 1\n1 2\n2 3\n0 1\n1 3\n2 4\n3 4''') == '12'\nassert solution('''4 3 1 4\n0 1\n1 2\n2 3\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n2 4\n3 4\n0 1\n1 3\n"
    },
    {
        "number": 2980,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 5\n3\n2 5 12\n3 2 4 7\n4 2 3 7 12\n''') == 'LWW'\nassert solution('''2 2 5\n3\n2 5 12\n3 2 4 7\n4 2 3 7 12\n''') == 'WW'\nassert solution('''2 2 5\n3\n2 5 12\n3 2 4 7\n4 2 3 7 12\n''') == 'WW'\nassert solution('''2 2 5\n3\n2 5 12\n3 2 4 7\n4 2 3 7 12\n''') == 'WW'\nassert solution('''2 2 5\n3\n2 5 12\n3 2 4 7\n4 2 3 7 12\n''') == 'WW'\n"
    },
    {
        "number": 2981,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n0 0\n0.71 3.54\n4.21 4.21''') == '2.00111219'\nassert solution('''3\n0 0\n0.71 3.54\n4.21 4.21\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3.54\n0.71 3."
    },
    {
        "number": 2982,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n1 1 1 2 2 2 3 3 3''') == '63'\nassert solution('''9\n1 1 1 2 2 2 3 3 3''') == '63'\nassert solution('''9\n1 1 1 2 2 2 3 3 3''') == '63'\nassert solution('''9\n1 1 1 2 2 2 3 3 3''') == '63'\nassert solution('''9\n1 1 1 2 2 2 3 3 3''') == '63'\n"
    },
    {
        "number": 2983,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 0 5\n''') == '1.60965532263'\nassert solution('''4\n1 0 5\n''') == 'impossible'\nassert solution('''4\n1 0 5\n''') == 'impossible'\nassert solution('''4\n1 0 5\n''') == 'impossible'\nassert solution('''4\n1 0 5\n''') == 'impossible'\n"
    },
    {
        "number": 2984,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''68 90 6\n3809\n288\n2306\n2215\n4211\n379''') == '27\\n1'\nassert solution('''68 90 6\n3809\n288\n2306\n2215\n4211\n379\n''') == '27\\n1'\nassert solution('''68 90 6\n3809\n288\n2306\n2215\n4211\n379\n''') == '27\\n1'\nassert solution('''68 90 6\n3809\n288\n2306\n2215\n4211\n379\n''') == '27\\n1'\nassert solution('''68 90 6\n3809\n288\n2306\n2215\n4211\n379\n''') == '27\\n1'\n"
    },
    {
        "number": 2985,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''22 2 2''') == '3'\nassert solution('''22 2 2\n11\n9''') == '3'\nassert solution('''22 2 2\n11\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770"
    },
    {
        "number": 2986,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''my ]]name]] is]] steva<en]<n halim]]]]]''') =='my name is steven halim'\nassert solution('''my ]]name]] is]] steva<en]<n halim]]]]]''') =='my name is steven halim'\nassert solution('''my ]]name]] is]] steva<en]<n halim]]]]]''') =='my name is steven halim'\nassert solution('''my ]]name]] is]] steva<en]<n halim]]]]]''') =='my name is steven halim'\nassert solution('''my ]]name]] is]] steva<en]<n halim]]]]]''') =='my name is steven halim'\n"
    },
    {
        "number": 2987,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14''') == '23029\\n437'\nassert solution('''50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14''') == '23029\\n437'\nassert solution('''50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14''') == '23029\\n437'\nassert solution('''50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14''') == '23029\\n437'\nassert solution('''50 2\n1 437 47\n3 357 803 830 13 45 46\n1 611 14''') == '23029\\n437'\n"
    },
    {
        "number": 2988,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 9\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n1 2 3 4 5 6 7''') == '6'\nassert solution('''10 9\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n1 2 3 4 5 6 7''') == '-1'\nassert solution('''10 9\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n1 2 3 4 5 6 7''') == '-1'\nassert solution('''10 9\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n1 2 3 4 5 6 7''') == '-1'\nassert solution('''10 9\n1 2 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n1 2 3 4 5 6 7''') == '-1'\n"
    },
    {
        "number": 2989,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n1 3 10\n2 3 1\n2 3 15''') == '1\\n10\\n15'\nassert solution('''3 2 1\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3 15\n1 3 10\n2 3 1\n2 3"
    },
    {
        "number": 2990,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2\n0\n0\n6\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie''') == 'Shoresy Reilly\\nJonesy Sholtzy\\n'\nassert solution('''2 2\n0\n0\n6\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYorkie\nShoresy\nJonesy\nReilly\nSholtzy\nFisky\nYork"
    },
    {
        "number": 2991,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1\n4\n2\n''') == '1'\nassert solution('''5 3\n1\n4\n2\n''') == '1'\nassert solution('''5 3\n1\n4\n2\n''') == '1'\nassert solution('''5 3\n1\n4\n2\n''') == '1'\nassert solution('''5 3\n1\n4\n2\n''') == '1'\n"
    },
    {
        "number": 2992,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 1 3\n1 2 4\n2 1 5''') == '4'\nassert solution('''0 1 3\n1 2 4\n2 1 5''') == 'IMPOSSIBLE'\nassert solution('''0 1 3\n1 2 4\n2 1 5''') == 'IMPOSSIBLE'\nassert solution('''0 1 3\n1 2 4\n2 1 5''') == 'IMPOSSIBLE'\nassert solution('''0 1 3\n1 2 4\n2 1 5''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 2993,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 2994,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\naaa\n"
    },
    {
        "number": 2995,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nbattery_acid\ndrain_cleaner\nantifreeze\ncold_medicine\nlantern_fuel\n2\ncold_medicine battery_acid\nantifreeze lantern_fuel''') == 'lantern_fuel drain_cleaner battery_acid'\nassert solution('''5\nbattery_acid\ndrain_cleaner\nantifreeze\ncold_medicine\nlantern_fuel\n2\ncold_medicine battery_acid\nantifreeze lantern_fuel\n''') == 'antifreeze cold_medicine'\nassert solution('''5\nbattery_acid\ndrain_cleaner\nantifreeze\ncold_medicine\nlantern_fuel\n2\ncold_medicine battery_acid\nantifreeze lantern_fuel\n''') == 'antifreeze cold_medicine'\nassert solution('''5\nbattery_acid\ndrain_cleaner\nantifreeze\ncold_medicine\nlantern_fuel\n2\ncold_medicine battery_acid\nantifreeze lantern_fuel\n''') == 'antifreeze cold_medicine'\nassert solution('''5\nbattery_acid\ndrain_cleaner\nantifreeze\ncold_medicine\nlantern_fuel\n2\ncold_medicine battery_acid\nantifreeze lantern_fuel\n''') == 'antifreeze cold_medicine'\n"
    },
    {
        "number": 2996,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"80\"\n\"\"\""
    },
    {
        "number": 2997,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 3\n1 2\n2 3''') == '0'\nassert solution('''3 3\n1 3\n1 2\n2 3''') == '0'\nassert solution('''3 3\n1 3\n1 2\n2 3''') == '0'\nassert solution('''3 3\n1 3\n1 2\n2 3''') == '0'\nassert solution('''3 3\n1 3\n1 2\n2 3''') == '0'\n"
    },
    {
        "number": 2998,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('uu Friends m Romans ummuuummmuuuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuuuumm countrymen mmuummmuu') == 'icpc'\nassert solution('uu Friends m Romans ummuuummmuuuuumm countrymen mmuummmuu') == 'icpc'\n"
    },
    {
        "number": 2999,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101''') == '3'\nassert solution('''5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101\n''') == '3'\nassert solution('''5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101\n''') == '3'\nassert solution('''5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101\n''') == '3'\nassert solution('''5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101\n''') == '3'\n"
    }
]