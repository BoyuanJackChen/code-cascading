[
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(':]') == -1\nassert solution('|:[]') == 4\nassert solution('|[:|]') == -1\nassert solution('|[:|:|]') == -1\nassert solution('|[:|:|:|]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('[::]') == 4\nassert solution('[::||:]') == 6\nassert solution('[::|||:]') == 7\nassert solution('[::|||]') == -1\nassert solution('[::|]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('||') == ''\nassert solution('|||') == ''\nassert solution('|||:]') == '-1'\nassert solution('::') == '-1'\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"a:b:|]\") == \"4\"\nassert solution(\"a:b:|:\") == \"-1\"\nassert solution(\"|]|:\") == \"4\"\nassert solution(\"|]|:|\") == \"-1\"\nassert solution(\"|]|:||\") == \"-1\"\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('[]') == ''\nassert solution('[::]') == '4'\nassert solution('[:||:]') == '6'\nassert solution('[:|||:]') == '7'\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == -1\nassert solution('[:') == -1\nassert solution('[]') == -1\nassert solution('[]::[]') == -1\nassert solution('[]::|[]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"[a:b:|]\") == \"4\"\nassert solution(\"[]:[|]\") == \"1\"\nassert solution(\"[]:[|:|]\") == \"1\"\nassert solution(\"[:|:|]\") == \"-1\"\nassert solution(\"[|:|:|]\") == \"-1\"\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('[::]') == 4\nassert solution('[:||:]') == -1\nassert solution('[:|||:]') == 7\nassert solution('[::||:][:|||:]') == 5\nassert solution('[::||:][:|||:][:|||:]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('|[a:b:|]') == 4\nassert solution('|]:[|:]') == -1\nassert solution('][][][][]') == -1\nassert solution('][][][][[][]') == -1\nassert solution('][][][][][][][][][][]') == -1\n"
    },
    {
        "number": 0,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(':') == -1\nassert solution(':|') == -1\nassert solution(':||:') == -1\nassert solution(':|||:') == -1\nassert solution('|]:[|:') == -1\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\n\nfrom math import log10\nfrom decimal import Decimal"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[-5:]\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\nassert solution(\"10^12\") == \"10^12\"\nassert solution(\"10^10000000000\") == \"10^10000000099\"\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n100\n'''\n) == '99'\nassert solution(\n'''\n48\n'''\n) == '48'\nassert solution(\n'''\n521\n'''\n) == '499'"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"99\"\nassert solution(\"48\") == \"48\"\nassert solution(\"521\") == \"499\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"10987654321\") == \"1099\"\nprint('Passed')\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('100') == '99'\nassert solution('200') == '199'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n100\n'''\n) == '99'\n\nassert solution(\n'''\n48\n'''\n) == '48'\n\nassert solution(\n'''\n521\n'''\n) == '499'\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 1,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('5') == '0'\nassert solution('1000000') == '0'"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == '1000'\n\"\"\"\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(4) == 1\nassert solution(201) == 99\nassert solution(4000) == 1000\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '1'\nassert solution('''201''') == '99'\nassert solution('''4000''') == '1000'\nassert solution('''4444''') == '11'\nassert solution('''50''') == '0'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('12345') == '99'\nassert solution('4544') == '1000'\n\n\"\"\""
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('13') == '9'\nassert solution('48') == '9'\nassert solution('1000') == '99'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('4000000') == '1000'\nassert solution('12345') == '0'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('10') == '10'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 2,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('201') == '99'\nassert solution('4000') == '1000'\nassert solution('12345') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n3 4') == '3'\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4') == '2'\nassert solution('7 5\\n1 4\\n4 5\\n5 6\\n6 7\\n3 5') == '7'\nassert solution('4 3\\n1 1\\n2 2\\n3 4\\n5 6') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"7 5\n1 4\n4 5\n5 6\n6 7\n3 5\n\"\"\".strip()) == \"7\"\n\nassert solution(\n\"\"\"4 3\n1 1\n2 2\n2 3\n3 4\n\"\"\".strip()) == \"2\"\n\nassert solution(\n\"\"\"4 4\n1 1\n2 2\n2 3\n3 4\n\"\"\".strip()) == \"3\"\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''4 3\n1 1\n2 2\n2 3\n3 4\n''') == '2'\nassert solution('''7 4\n1 1\n2 2\n2 3\n3 4\n5 6\n6 7\n3 5\n''') == '3'\nassert solution('''10 100\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\nassert solution('''7 1000\n1 999\n2 999\n3 999\n4 999\n5 999\n6 999\n7 999\n''') == '1000'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''4 3\n1 1\n2 2\n3 4\n\n''') == '2'\nassert solution('''4 4\n1 1\n2 2\n2 3\n3 4\n\n''') == '3'\nassert solution('''4 4\n1 1\n2 2\n1 3\n4 4\n\n''') == '4'\nassert solution('''10 10\n1 9\n2 10\n3 10\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == '5'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''4 3\n1 1\n2 2\n2 3\n3 4''') == '2'\nassert solution('''4 4\n1 1\n2 2\n2 3\n3 4''') == '3'\nassert solution('''4 4\n1 1\n1 2\n2 2\n2 3\n3 4''') == '2'\nassert solution('''4 4\n1 1\n2 2\n3 3\n4 4''') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 4\n4 5\n5 6\n6 7\n3 5''') == '7'\nassert solution('''1 1\n2 2\n3 4\n''') == '2'\nassert solution('''1 1\n2 2\n2 3\n3 4\n''') == '3'\nassert solution('''1 1\n1 1\n1 1\n2 2\n2 3\n3 4\n''') == '3'\nassert solution('''1 1\n1 1\n1 1\n2 2\n2 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n2 3\\n3 4\\n') == '7'\nassert solution('3 1\\n1 1\\n2 2\\n2 3\\n3 4\\n') == '2'\nassert solution('4 5\\n1 1\\n2 2\\n2 3\\n3 4\\n1 2\\n3 4\\n') == '7'\nassert solution('4 3\\n1 1\\n2 2\\n2 3\\n3 4\\n1 2\\n3 4\\n') == '3'\nassert solution('4 4\\n1 1\\n2 2\\n2 3\\n3 4\\n1 2\\n3 4\\n') == '3'\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"6\"\nassert solution(\"2\\n1\\n3\\n4\\n5\\n6\") == \"5\"\nassert solution(\"2\\n2\\n1\\n3\\n4\\n5\\n6\") == \"3\"\nassert solution(\"2\\n2\\n3\\n4\\n1\\n5\\n6\") == \"4\"\nassert solution(\"2\\n2\\n3\\n4\\n5\\n6\") == \"5\"\n"
    },
    {
        "number": 3,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n11 23\n''') == '2'\nassert solution(\n'''\n5\n01 07\n''') == '0'\nassert solution(\n'''\n10\n23 30\n''') == '1'\nassert solution(\n'''\n100\n23 30\n''') == '0'\nassert solution(\n'''\n1000\n23 30\n''') == '2'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n11 23') == '0'\nassert solution('5\\n01 07') == '0'\nassert solution('3\\n21 07') == '1'\nassert solution('3\\n11 22') == '1'\nassert solution('3\\n21 22') == '1'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n11 23\\n') == '2'\nassert solution('5\\n01 07\\n') == '0'\nassert solution('3\\n11 07\\n') == '0'\nassert solution('5\\n01 07\\n') == '0'\nassert solution('5\\n11 07\\n') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\nassert solution('1') == '0'\nassert solution('1 11') == '0'\nassert solution('1 11 23') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('11 23') == '2'\nassert solution('15 7') == '0'\nassert solution('17 27') == '0'\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n11 23') == 2\nassert solution('5\\n01 07') == 0\nassert solution('1\\n23 07') == 0\nassert solution('2\\n01 07') == 0\nassert solution('1\\n10 07') == 0\n"
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 4,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n11 23') == '2'\nassert solution('5\\n01 07') == '0'\nassert solution('7\\n08 17') == '1'\nassert solution('9\\n01 08') == '0'\nassert solution('10\\n00 19') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == expect\n\"\"\"\n\nfrom sys import stdin\ninput = stdin.readline\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3 2 4') == '5'\nassert solution('6 3 1 3') == '1'\nassert solution('5 2 1 5') == '0'\nassert solution('2 1 2 3') == '1'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"6 2 1 6\") == \"0\"\nassert solution(\"6 3 2 4\") == \"5\"\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n'''\n\n'''\nThis is Luba's problem. It's a segmented search problem and the optimal solution requires that Luba has to pass through all the tabs outside the segment [l, r] to close all the tabs.\n\nIn this problem, I firstly define the operations needed to get the minimum number of seconds Luba has to spend on\nclosing all the tabs outside the segment [l, r] in a single pass. To get the minimum number of seconds, I loop\nthrough the array of opened tabs until I find a tab that's outside the segment [l, r]. Then I move the cursor\nto the nearest tab in the segment [l, r], and try to close all the tabs to the right of the cursor.\n\nI compute the current time required to do the operations and the time required to move the cursor to the\nnearest tab in the segment [l, r]. If I move the cursor to the nearest tab in the segment [l, r] in a single\npass, I compute the time required to close all the tabs to the right of the cursor, and I add the current\ntime to the minimum time required to close all the tabs outside the segment [l, r].\n\nThus, the time required to do the operations is the minimum time required to close all the tabs outside\nthe segment [l, r].\n\nExample\nFor the input array [1, 2, 4, 5, 6, 7], the following operations are required:\n\nMove the cursor to the tab 4, close all the tabs to the right of it, move the cursor to the tab 2, close all the\ntabs to the right of it, move the cursor to the tab 1, close all the tabs to the right of it, and finally,\nmove the cursor to the tab 6, close all the tabs to the right of it. The total time required to close all the\ntabs outside the segment [1, 6] is 10 + 5 + 1 = 16, and the time required to move the cursor to the tab 2 is 0.\n\nInput\nThe first line of input contains an integer n (1 \u2264 n \u2264 100) \u2014 the number of the tabs.\n\nThe second line of input contains an integer pos (1 \u2264 pos \u2264 n) \u2014 the index of the tab on which Luba is\ncurrently located.\n\nThe third line of input contains two integers l and r (1 \u2264 l \u2264 r \u2264 n) \u2014 the segment in which Luba needs to\nleave opened.\n\nOutput\nPrint one integer equal to the minimum number of seconds required to close all the tabs outside the\nsegment [l, r].\n\nExamples\nInput\n6\n3\n2 4\n\nOutput\n5\n\nInput\n6\n1 3\n\nOutput\n0\n\nInput\n5\n2 1 5\n\nOutput\n1\n\nInput\n6\n1 4\n\nOutput\n0\n\nExplanation\nIn the first test, we need to do five operations:\nMove the cursor to the tab 3, close all the tabs to the right of it, move the cursor to the tab 2, close all\nthe tabs to the right of it, move the cursor to the tab 1, close all the tabs to the right of it, and finally,\nmove the cursor to the tab 4, close all the tabs to the right of it.\n\nIn the second test, we can do the same operation in just one pass. We can do this by first closing all the\ntabs to the left of the cursor to the segment [1, 4], and then move the cursor to the tab 1, close all the\ntabs to the right of it.\n\nIn the third test, we don't need to do any operation.\n\nIn the fourth test, we can do the same operation in just one pass. We close all the tabs to the right of the\ncursor to the segment [4, 6].\n\nIn the fifth test, we need to do five operations:\nMove the cursor to the tab 3, close all the tabs to the right of it, move the cursor to the tab 2, close\nall the tabs to the right of it, move the cursor to the tab 1, close all the tabs to the right of it, and\nfinally, move the cursor to the tab 4, close all the tabs to the right of it.\n\nThus, the time required to do the operations is the minimum time required to close all the tabs outside the\nsegment [1, 6].\n\nNote that the current time required to move the cursor to the tab 1 is 0.\n'''\n\n\n'''\n\nfunction solution(stdin: str) -> str\n    n, pos, l, r = map(int, stdin.split)\n    opened_tabs = [stdin.split[1]...stdin.split[n]]\n    opened_tabs.sort()\n    min_time = 0\n    curr_time = 0\n    \n    while opened_tabs[0] < l or opened_tabs[-1] > r:\n        min_time += (opened_tabs[-1] - opened_tabs[0])\n        curr_time += 1\n        \n        while opened_tabs[0] < l:\n            opened_tabs.pop(0)\n            min_time += 1\n            curr_time += 1\n        \n        while opened_tabs[-1] > r:\n            opened_tabs.pop()\n            min_time += 1\n            curr_time += 1\n    \n    return str(min_time) + '\\n'\n\n'''\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"6 3 2 4\") == \"5\"\nassert solution(\"6 3 1 3\") == \"1\"\nassert solution(\"5 2 1 5\") == \"0\"\nassert solution(\"5 2 1 3\") == \"1\"\nassert solution(\"5 2 1 2\") == \"1\"\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6 3 2 4''') == '5'\nassert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\nassert solution('''1 10 2 12''') == '0'\nassert solution('''1 10 2 1''') == '1'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3 2 4''') == '5'\nassert solution('''6 3 1 3''') == '1'\nassert solution('''5 2 1 5''') == '0'\nassert solution('''4 2 2 4''') == '1'\nassert solution('''5 3 2 3''') == '0'\n"
    },
    {
        "number": 5,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n6 3 2 4\n''') == '5'\n\nassert solution('''\n6 3 1 3\n''') == '1'\n\nassert solution('''\n5 2 1 5\n''') == '0'"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == \"2\\n3\\n-1\"\n\nassert solution(\"\"\"2\n1 10\n1 10\n\"\"\") == \"1\\n1\"\n\nassert solution(\"\"\"3\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n3 10\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '0'\nassert solution('2\\n1\\n2') == '1'\nassert solution('2\\n1\\n3') == '2'\nassert solution('2\\n1\\n4') == '2'\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == '2\\n3\\n-1'\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == '3\\n3\\n-1'\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == '3\\n3\\n-1'\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == '3\\n3\\n-1'\nassert solution(\"\"\"3\n3 10\n6 3\n8 2\n1 4\n4 10\n4 1\n3 2\n2 6\n1 100\n2 15\n10 11\n14 100\n\"\"\") == '3\\n3\\n-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys\nfrom typing import Tuple\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '2'\nassert solution('''3 10''') == '2'\nassert solution('''6 3''') == '3'\nassert solution('''8 2''') == '3'\nassert solution('''1 4''') == '2'\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '2'\nassert solution('''3 10''') == '2'\nassert solution('''6 3''') == '3'\nassert solution('''8 2''') == '3'\nassert solution('''1 4''') == '-1'\n"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n10\\n3\\n8 2\\n1 4\\n4 10\\n4 1\\n3 2\\n2 6\\n1 100\\n2 15\\n10 11\\n14 100') == '2'\nassert solution('4\\n4\\n4\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 6,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == '4'\nassert solution('10 1') == '5'\nassert solution('8 1') == '5'\nassert solution('20 1') == '11'\nassert solution('7 10') == '8'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"5 2\"\n) == \"4\"\n\nassert solution(\n\"8 1\"\n) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('5 5') == '0'\nassert solution('8 5') == '4'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 1\") == \"5\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"10 1000000\") == \"4\"\nassert solution(\"20 3000000\") == \"10\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\nassert solution('8 1') == '5'\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"4\"\nassert solution(\"8 1\") == \"5\"\nassert solution(\"10000000000000000000000000000 1\") == \"1\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"0 1\") == \"1\"\n"
    },
    {
        "number": 7,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2''') == '4'\nassert solution('''8 1''') == '5'\nassert solution('''4 1''') == '5'\nassert solution('''14 16''') == '6'\nassert solution('''20 2''') == '10'\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9p 9p 9p\") == \"0\"\nassert solution(\"1m 1m 1m\") == \"0\"\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('4s 9m 1s') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3m 3m 3m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\n\n\n\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1s 2s 3s\") == \"0\"\nassert solution(\"9m 9m 9m\") == \"0\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"3p 9m 2p\") == \"1\"\nassert solution(\"9m 9m 9m\") == \"0\"\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2m 3p 2s 4m 1s 2s 4s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('9m 1m 2m') == 1\nassert solution('3p 9m 2p') == 1\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('2m 2m 2m') == 0\nassert solution('4s 4s 4s') == 0\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('5p 9m 2p') == 2\nassert solution('3p 9m 2p') == 1\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('1s 2s 3s') == 0\nassert solution('9m 9m 9m') == 0\nassert solution('3p 9m 2p') == 1\nassert solution('5p 9m 2p') == 2\n"
    },
    {
        "number": 8,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1s 2s 3s') == '0'\nassert solution('9m 9m 9m') == '0'\nassert solution('3p 9m 2p') == '1'\nassert solution('6s 9s 6s') == '0'\nassert solution('2s 5s 2s') == '1'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1''') == '1'\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0''') == '2'\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0''') == '-1'\nassert solution('''3\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0''') == '-1'\nassert solution('''5\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0''') == '2'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\\n') == '1\\n'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n') == '2\\n'\nassert solution('2\\n2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\\n') == '-1\\n'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n') == '2\\n'\nassert solution('1\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n') == '-1\\n'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n1 1 1 1\\n1 2 2 2\\n1 0 0 0\\n\") == \"-1\"\nassert solution(\"1\\n1\\n2 1 2 2\\n1 0 0 0\\n\") == \"1\"\nassert solution(\"1\\n1\\n1 1 1 1\\n1 2 2 2\\n1 0 0 0\\n\") == \"2\"\nassert solution(\"1\\n1\\n1 1 1 1\\n1 2 2 2\\n1 0 0 0\\n\") == \"2\"\nassert solution(\"1\\n1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1') == '1'\nassert solution('2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 0') == '2'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n1 0 0 1\\n1 2 2 2') == '2'"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\\n') == '1'\nassert solution('2\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n') == '2'\nassert solution('3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n') == '-1'\n\n\"\"\""
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"\"\nassert solution(\"2\\n3 2\\n3 1 3 2\\n1 2 2 2\\n1 0 0 1\\n1 2 2 2\") == \"1\"\nassert solution(\"2\\n1 2\\n1 1 1\\n1 0 0 0\\n1 2 2 0\\n1 0 0 1\") == \"2\"\nassert solution(\"3\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\") == \"2\"\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 2\\n2 1 1 1\\n1 2 2 2\\n1 0 0 0\\n\") == \"1\"\nassert solution(\"2\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n\") == \"2\"\nassert solution(\"2\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n\") == \"-1\"\nassert solution(\"2\\n10 10\\n1 2 1 1\\n5 5 6 5\\n6 4 5 4\\n2 1 2 0\\n\") == \"-1\"\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n3 2''') == '1'\nassert solution('''3\n2 2\n1 1 3 2\n1 0 0 1\n1 2 2 2''') == '1'\nassert solution('''2\n2 2\n1 1 1 1\n1 0 0 0\n1 2 2 2''') == '-1'\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0''') == '-1'\n"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\n\nassert solution('''2\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\n\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n\nassert solution('''3\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '2'"
    },
    {
        "number": 9,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n3 2\n3 1 3 2\n1 2 2 2\n1 0 0 1\n''') == '1'\n\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'\n\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n\nassert solution('''2\n2 2\n2 1 1 1\n1 2 2 2\n1 0 0 0\n''') == '-1'\n\nassert solution('''3\n10 10\n1 2 1 1\n5 5 6 5\n6 4 5 4\n2 1 2 0\n''') == '2'"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('10') == '0 0'\nassert solution('10') == '0 0'\nassert solution('10') == '0 0'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''14''') == '4 4'\nassert solution('''2''') == '0 2'\nassert solution('''4''') == '0 2'\nassert solution('''7''') == '0 2'\nassert solution('''17''') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''14''') == \"4 4\"\nassert solution('''2''') == \"0 2\"\nassert solution('''8''') == \"0 2\"\nassert solution('''9''') == \"2 0\"\nassert solution('''12''') == \"2 0\"\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\n\n\"\"\"\n\nfrom math import ceil\n\nN = int(input())\n\nprint(ceil(N / 5) - 5, N % 5)\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''14''') == '4 4'\nassert solution('''2''') == '0 2'\nassert solution('''26''') == '5 4'\nassert solution('''30''') == '6 4'\nassert solution('''34''') == '7 4'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('24') == '12 0'\nassert solution('1') == '0 1'\nassert solution('4') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('14\\n') == '4 4'\nassert solution('2\\n') == '0 2'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4 4\"\n\n\"\"\""
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('14') == '4 4'\nassert solution('2') == '0 2'\nassert solution('3') == '0 2'\nassert solution('14') == '4 4'\nassert solution('2') == '0 2'\n"
    },
    {
        "number": 10,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''14''') == '4 4'\nassert solution('''2''') == '0 2'\nassert solution('''14''') == '0 2'\nassert solution('''14''') == '4 4'\nassert solution('''14''') == '0 2'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 3 12 15') == '39'\nassert solution('20 2 3 3 5') == '51'\nassert solution('5 4 1 3 9') == '39'\nassert solution('5 2 3 12 15') == '39'\nassert solution('5 2 3 12 15') == '39'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == input_data\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3 12 15''') == '39'\nassert solution('''20 2 3 3 5''') == '51'\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"39\"\nassert solution(\"1 2 3 4 5\") == \"51\"\nassert solution(\"10 2 3 3 5\") == \"51\"\nassert solution(\"1 10 2 3 3 5\") == \"51\"\nassert solution(\"1 2 3 3 4 5\") == \"39\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3 12 15\") == \"39\"\nassert solution(\"20 2 3 3 5\") == \"51\"\n"
    },
    {
        "number": 11,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10\nGGGSGGGSGG''') == '7'\nassert solution('''4\nGGGG''') == '0'\nassert solution('''3\nSSS''') == '0'\nprint(solution(stdin))"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10\\nGGGSGGGSGG') == '7'\nassert solution('4\\nGGGG') == '4'\nassert solution('3\\nSSS') == '0'\nassert solution('1000\\nGGG') == '0'\nassert solution('4\\nGGG') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '0'\nassert solution('3G') == '1'\nassert solution('GGG') == '1'\nassert solution('GGG') == '0'\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"G\") == \"0\"\nassert solution(\"GGGG\") == \"4\"\nassert solution(\"GGG\") == \"3\"\nassert solution(\"GGG\") == \"2\"\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n10\nGGGSGGGSGG\n''') == '7'\n\nassert solution(\n'''\n4\nGGGG\n''') == '4'\n\nassert solution(\n'''\n3\nSSS\n''') == '0'\n\nassert solution(\n'''\n16\n
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == ''\n'''\n"
    },
    {
        "number": 12,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\nGGGGGGGSGG\\n') == '7'\nassert solution('4\\nSSS\\n') == '0'\nassert solution('3\\nSSS\\n') == '0'\nassert solution('10\\nGGG\\n') == '4'"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"5\"\nassert solution(\"9 3\") == \"-1\"\nassert solution(\"3 9 5\") == \"6\"\nassert solution(\"0 0 0\") == \"1\"\nassert solution(\"3 9 4 5\") == \"1 2 3 9 4 5\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7') == '1 2 3 4 5 6 7'\nassert solution('1 2 3 4 5 6 7 8 9') == '1 2 3 4 5 6 7 8 9'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 2\") == \"-1\"\nassert solution(\"6 2\\n5 3\\n0\\n0\\n0\\n2 2 1\\n1 4\\n1 5\") == \"5\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\") == \"6\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n3 1\") == \"7\"\nassert solution(\"9 3\\n3 9 5\\n0\\n0\\n3 9 4 5\\n0\\n0\\n1 8\\n1 6\\n1 2\\n2 1 2\\n3 1\") == \"6\"\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '-1'\nassert solution('1 2 3') == '-1'\nassert solution('0') == '-1'\nassert solution('0 0') == '-1'\nassert solution('0 0 0') == '-1'\n"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2\n5 3\n0\n0\n0\n2 2 1\n1 4\n1 5\n''') == '5'\nassert solution('''9 3\n3 9 5\n0\n0\n3 9 4 5\n0\n0\n1 8\n1 6\n1 2\n2 1 2\n''') == '6'\nassert solution('''3 3\n1 2 3\n1 2\n1 3\n1 1\n''') == '-1'\n\n\n-----\n\n'''\nDescription:\n\nIn a social network consisting of n people and m people of all, each person is connected to some people (non-directly) that are friends. Every friend is connected to each other.\n\nYour task is to find out the maximum number of friends that can be connected to each person.\n\nIf there is no friend, then the person will have no friends.\n\nFor example, the following social network:\n\n4 5\n0 1 2\n1 2 3\n1 3 4\n2 3 4\n\nwill have the following max-friends array:\n\n0 2\n1 3\n2 1\n3 0\n\nand the following max-friends array:\n\n0 3\n1 1\n2 3\n3 2\n\nwill have the following max-friends array:\n\n0 4\n1 1\n2 3\n3 2\n\n2) The problem is a graph problem, there are m people, each person has n friends. The problem is to find out the maximum number of friends that can be connected to each person.\n\n1) First, let's understand the problem with each node.\n\nFor a given node n, there are m friend nodes in total. Each friend node is connected to each other. For example, node 1 is connected to node 0, node 2 is connected to node 1, and so on.\n\n2) Then, how do we find the max-friends of each node? Well, for a given node n, we can find all the friend nodes of n in an array, then use the max-friends method to find out the max-friends of each friend node.\n\nFor example, if we have a social network like the following:\n\n5 3\n0 1 2\n1 2 3\n1 3 4\n2 3 4\n\nThen we have the following max-friends array:\n\n0 2\n1 3\n2 1\n3 0\n\nSince each person can have only 3 friends, the max-friends of each person is 3.\n\n3) What if the graph is disconnected? Well, we can't find the max-friends of each person in an array.\n\n4) In the case that the graph is disconnected, we can't find the max-friends of each person in an array.\n\n5) To find the max-friends of each person in an array, we can find the max-friends of each friend node in the array, then find the max-friends of all friend nodes in the array, and finally find the max-friends of all friend nodes in the array.\n\n6) In this case, we will have an array of size n, each node has n max-friends.\n\n7) Now we can find the max-friends of each friend node in the array, then find the max-friends of all friend nodes in the array, and finally find the max-friends of all friend nodes in the array.\n\n8) It is also possible to use Kruskal's algorithm to find the max-friends of each friend node in the array, then find the max-friends of all friend nodes in the array, and finally find the max-friends of all friend nodes in the array.\n\n9) This is an optimal solution that can be used to find the max-friends of each friend node in the array.\n\n10) In this case, we will have an array of size n, each node has n max-friends.\n\n11) Now we can find the max-friends of each friend node in the array, then find the max-friends of all friend nodes in the array, and finally find the max-friends of all friend nodes in the array.\n\n12) In this case, we will have an array of size n, each node has n max-friends.\n\n13) In this case, we will have an array of size n, each node has n max-friends.\n\n14) In this case, we will have an array of size n, each node has n max-friends.\n\n15) In this case, we will have an array of size n, each node has n max-friends.\n\n16) In this case, we will have an array of size n, each node has n max-friends.\n\n17) In this case, we will have an array of size n, each node has n max-friends.\n\n18) In this case, we will have an array of size n, each node has n max-friends.\n\n19) In this case, we will have an array of size n, each node has n max-friends.\n\n20) In this case, we will have an array of size n, each node has n max-friends.\n\n21) In this case, we will have an array of size n, each node has n max-friends.\n\n22) In this case, we will have an array of size n, each node has n max-friends.\n\n23) In this case, we will have an array of size n, each node has n max-friends.\n\n24) In this case, we will have an array of size n, each node has n max-friends.\n\n25) In this case, we will have an array of size n, each node has n max-friends.\n\n26) In this case, we will have an array of size n, each node has n max-friends.\n\n27) In this case, we will have an array of size n, each node has n max-friends.\n\n28) In this case, we will have an array of size n, each node has n max-friends.\n\n29) In this case, we will have an array of size n, each node has n max-friends.\n\n30) In this case, we will have an array of size n, each node has n max-friends.\n\n31) In this case, we will"
    },
    {
        "number": 13,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 1\\n3 2 1\\n') == '3 2 1 5 4\\n'\nassert solution('5 3\\n3 2 1\\n') == '3 2 1 5 4\\n'\nassert solution('5 1\\n3\\n') == '3 2 1 5 4\\n'\nassert solution('5 2\\n3 4\\n') == '3 2 1 5 4\\n'\nassert solution('5 3\\n2 3 1\\n') == '3 2 1 5 4\\n'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 3\n3 2 1\n''') == '3 2 1 5 4'\nassert solution(\n'''5 1\n3\n''') == '3 2 1 5 4'\nassert solution(\n'''5 2\n3 4\n''') == '-1'\nassert solution(\n'''5 3\n2 3 1\n''') == '-1'\nassert solution(\n'''4 4\n4 5 6 7\n''') == '4 5 6 7 1 2 3'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '1 2'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n3 2 1\\n\") == \"3 2 1 5 4\\n\"\nassert solution(\"5 1\\n3\\n\") == \"3 2 1 5 4\\n\"\nassert solution(\"5 2\\n3 4\\n\") == \"-1\\n\""
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\n3') == '3 2 1 5 4'\nassert solution('1\\n5\\n3\\n') == '3 2 1 5 4'\nassert solution('1\\n5\\n3\\n\\n') == '3 2 1 5 4'\nassert solution('1\\n5\\n3\\n2\\n4') == '3 2 4 1 5'\nassert solution('1\\n5\\n3\\n2\\n4\\n') == '3 2 4 1 5'\n"
    },
    {
        "number": 14,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3\\n3 2 1') == '3 2 1 5 4'\nassert solution('5 1\\n3') == '3 2 1 5 4'\nassert solution('5 2\\n3 4') == '-1'\nassert solution('5 5\\n3 4') == '-1'\nassert solution('5 7\\n3 4') == '3 4 1 2 5'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('5 6 0') == 'YES'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('1 10 0') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('0 60 50') == 'NO'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == input(\"\")"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('0 60 50') == 'NO'\nassert solution('1 -4 5') == 'NO'\nassert solution('-2 4 0') == 'YES'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 7 3') == 'YES'\nassert solution('10 10 0') == 'YES'\nassert solution('1 -4 5') == 'NO'\nassert solution('0 60 50') == 'NO'\nassert solution('0 -60 -50') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\"\"\"\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 7 3''') == 'YES'\nassert solution('''10 10 0''') == 'YES'\nassert solution('''0 60 50''') == 'NO'\nassert solution('''1 -4 5''') == 'NO'\nassert solution('''5 -4 3''') == 'NO'\n"
    },
    {
        "number": 15,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 7 3\") == \"YES\"\nassert solution(\"10 10 0\") == \"YES\"\nassert solution(\"0 60 50\") == \"NO\"\nassert solution(\"1 -4 5\") == \"NO\"\nassert solution(\"-1 -1 -1\") == \"NO\"\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == 1\nassert solution('1') == 0\nassert solution('0') == 1\nassert solution('4') == 0\nassert solution('3') == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('(1)') == '1'\nassert solution(')(1)') == '0'\nassert solution(')(') == '0'\nassert solution(')(1)1') == '0'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"(()()()())\") == 1\nassert solution(\"\") == 1\nassert solution(\"((()()()()(()())())\") == 0\nassert solution(\"))(()((((()))))\") == 1\nassert solution(\"()(())((())())()(()())((()))\") == 1\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('((((()))))') == '1'\nassert solution('()()') == '1'\nassert solution('()()(())') == '1'\nassert solution('(()(()()))') == '1'\nassert solution('(()((())))') == '0'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"1\"\nassert solution(\"0 0 0\") == \"1\"\nassert solution(\"0 0 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 1 0\") == \"0\"\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('4') == '0'\nassert solution('3') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 16,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n'''\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"10 5 3\") == \"3\"\nassert solution(\"10 5 7\") == \"5\"\nassert solution(\"10 5 12\") == \"3\"\nassert solution(\"10 5 22\") == \"2\"\nassert solution(\"10 5 23\") == \"1\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\nassert solution('10 5 12') == '3'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 5 3\\n') == '3'\nassert solution('10 5 7\\n') == '5'\nassert solution('10 5 12\\n') == '3'\nassert solution('10 5 19\\n') == '5'\nassert solution('10 5 24\\n') == '3'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 5 3''') == '3'\nassert solution('''10 5 7''') == '5'\nassert solution('''10 5 12''') == '3'\nassert solution('''1 10 1''') == '10'\nassert solution('''2 100 1''') == '100'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 5 3') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 12') == '3'\nassert solution('10 5 7') == '5'\nassert solution('10 5 7') == '5'\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 17,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 5 3''') == '3'\nassert solution('''10 5 7''') == '5'\nassert solution('''10 5 12''') == '3'\nassert solution('''1 2 3''') == '0'\nassert solution('''2 2 2''') == '3'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\"\nassert solution(\"acdb\") == \"abdc\"\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"cab\") == \"abc\"\nassert solution(\"acdb\") == \"abdc\""
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\nassert solution('bac') == 'abd'\nassert solution('bacb') == 'abcd'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\n\n\n'''\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abc') == 'abdc'\nassert solution('acdb') == 'abdc'\nassert solution('bcd') == 'abdc'\nassert solution('acdc') == 'abcdef'\nassert solution('abcdefg') == 'abcdefg'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nassert solution('b') == 'b'\nassert solution('c') == 'c'\nassert solution('ab') == 'abc'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nassert solution('cbc') == 'cdb'\nassert solution('ccb') == 'ccb'\nassert solution('cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('acdb') == 'abdc'\nassert solution('cab') == 'abc'\nprint(solution(input()))"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'\nassert solution('abcd') == 'adcb'\nassert solution('abc') == 'abc'\n"
    },
    {
        "number": 18,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('cab') == 'abc'\nassert solution('acdb') == 'abdc'"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0\n''') == 'YES'\nassert solution('''0\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n0') == 'NO'\nassert solution('1\\n0') == 'NO'\nassert solution('1\\n2\\n1\\n2') == 'NO'\nassert solution('10\\n10\\n100\\n0\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\nassert solution('10\\n10\\n100\\n0\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n1') == 'NO'\nassert solution('1\\n1') == 'YES'\nassert solution('3\\n1') == 'NO'\nassert solution('4\\n1') == 'YES'\nassert solution('1\\n1') == 'NO'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n\nassert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'\n\nassert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'YES'\n\nassert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == 'NO'"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n5''') == 'YES'\nassert solution('''1\n5''') == 'NO'\nassert solution('''2\n5''') == 'YES'\nassert solution('''10\n5''') == 'NO'\nassert solution('''3\n5''') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 0\n1 1\n1 2\n2\n1 0\n1000 3\n4\n10 1\n15 2\n10 2\n15 2\n1\n765 432\n2\n4 4\n4 3\n5\n0 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n2\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'NO'\nassert solution('7\\n2\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'YES'\nassert solution('4\\n2\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'NO'\nassert solution('1\\n1\\n0 0\\n1 1\\n1 2\\n2\\n1 0\\n1000 3\\n4\\n10 1\\n15 2\\n10 2\\n15 2\\n1\\n765 432\\n2\\n4 4\\n4 3\\n5\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 'YES'\n"
    },
    {
        "number": 19,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n') == 'NO'\nassert solution('2\\n3\\n1 1\\n2 1\\n1\\n1\\n2\\n') == 'YES'\nassert solution('2\\n2\\n1 1\\n2\\n1\\n1\\n2\\n') == 'NO'\nassert solution('2\\n2\\n1 1\\n2\\n1\\n1\\n2\\n') == 'NO'\nassert solution('2\\n2\\n1 1\\n2\\n1\\n1\\n2\\n') == 'NO'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('05:39') == 11\nassert solution('13:31') == 0\nassert solution('23:59') == 1\nassert solution('13:30') == 0\nassert solution('11:09') == 9\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('05:39') == 11\nassert solution('13:31') == 0\nassert solution('23:59') == 1\n\n\n-----\n\nPlease use `n` instead of `N`, the number of queries.\nPlease use `m` instead of `M`, the number of minutes.\nPlease use `h` instead of `H`, the number of hours.\nPlease use `s` instead of `S`, the number of seconds.\n\"\"\"\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"05:39\") == \"11\"\nassert solution(\"13:31\") == \"0\"\nassert solution(\"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"05:39\") == \"11\"\nassert solution(\n    \"13:31\") == \"0\"\nassert solution(\n    \"23:59\") == \"1\"\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\n\"\"\"\n"
    },
    {
        "number": 20,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('05:39') == '11'\nassert solution('13:31') == '0'\nassert solution('23:59') == '1'\nassert solution('05:50') == '0'\nassert solution('13:00') == '1'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n4 5 1 3 2') == '3'\nassert solution('7\\n1 6 5 3 4 7 2') == '6'\nassert solution('6\\n6 5 4 3 2 1') == '5'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 2') == '0'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '3'\nassert solution('''4 5 1 3 2''') == '3'\nassert solution('''7''') == '6'\nassert solution('''6 5 4 3 2 1''') == '5'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"5\n4 5 1 3 2\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"7\n1 6 5 3 4 7 2\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"6\n6 5 4 3 2 1\"\"\"\n) == \"5\"\n\"\"\"\n4\n4 5 1 3 2\n\"\"\"\n\nassert solution(\n    \"\"\"2\n1 2\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"8\n1 8 9 2 7 3 4 5 6 6 7\"\"\"\n) == \"8\""
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 5 1 3 2\") == \"3\"\nassert solution(\"7\\n1 6 5 3 4 7 2\") == \"6\"\nassert solution(\"6\\n6 5 4 3 2 1\") == \"5\"\n\n\n\"\"\"\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 4 5 6 7\") == \"3\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"7\\n1 2 3 4 5 6\") == \"5\"\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == '3'\nassert solution('''7''') == '6'\nassert solution('''6''') == '5'\nassert solution('''6''') == '5'\nassert solution('''6''') == '5'\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5\n4 5 1 3 2\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"7\n1 6 5 3 4 7 2\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"6\n6 5 4 3 2 1\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n\"\"\"\n) == \"\"\n\nassert solution(\n\"\"\"\n1\n1\n\"\"\") == \"0\""
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n1\"\nassert solution(stdin) == \"2\\n2\"\nassert solution(stdin) == \"1\\n1\"\n\n\n'''\n"
    },
    {
        "number": 21,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5''') == '3'\nassert solution('''6''') == '6'\nassert solution('''7''') == '5'\nassert solution('''4''') == '3'\nassert solution('''5 6 4 3 2''') == '6'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\nassert solution('cX') == 'NIE'\nassert solution('zzzz') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('oXoxoXo') == \"TAK\"\nassert solution('bod') == \"NIE\"\nassert solution('ER') == \"NIE\"\n\nprint('Test success!')"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"NIE\"\nassert solution(\"ER\") == \"TAK\"\n\nassert solution(\"oXoXoXo\") == \"NIE\"\nassert solution(\"oXoXoX\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"NIE\"\nassert solution(\"ER\") == \"NIE\"\n\n\"\"\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"NIE\"\nassert solution(\"ER\") == \"NIE\"\n\n[Image] Black letter\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"NIE\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"\") == \"NIE\"\nassert solution(\"oXoxoX\") == \"NIE\"\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\nassert solution('oHo') == 'NIE'\nassert solution('Aa') == 'NIE'\n"
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('oXoxoXo') == 'TAK'\nassert solution('bod') == 'NIE'\nassert solution('ER') == 'NIE'\n\n\n\n\n\"\"\""
    },
    {
        "number": 22,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"oXoxoXo\") == \"TAK\"\nassert solution(\"bod\") == \"TAK\"\nassert solution(\"ER\") == \"NIE\"\nassert solution(\"XOXO XO\") == \"NIE\"\n\nprint(\"All set? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"123\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"0987654321\") == \"123456789\"\nassert solution(\"4940\") == \"4940\"\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''123''') == '123'\nassert solution('''123456789''') == '987654321'\nassert solution('''987654321''') == '987654321'\nassert solution('''123456789''') == '123456789'\nassert solution('''987654321''') == '987654321'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('  ') ==' '\nassert solution('12') == '21'\nassert solution('123') == '321'\nassert solution('12345') == '54321'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"1234\"\nassert solution(\"98765\") == \"987655\"\nassert solution(\"abc\") == \"abcf\"\nassert solution(\"012\") == \"021\"\nassert solution(\"1234567\") == \"2345678\"\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n\nimport sys"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('123') == '123'\nassert solution('123') == '123'\nassert solution('123') == '123'\nassert solution('123') == '123'\nassert solution('123') == '123'\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 23,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........') == 'YES'\nassert solution('XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n') == 'NO'\nassert solution('..OO.OO....\\nOO.O...O..\\n..O.O..O..\\n.OO..O.OO.\\nOO.OO..OO.\\n.O.O.OO..\\n..O.O..O..\\n..O..O.O..\\n..O..O..O..\\n') == 'YES'\nassert solution('.OO..O..O..\\n.OO..O.O..\\n.OO..O.O..\\n.OO..O.O..\\n.O.OO..OO.\\n.O.O.OO..\\n.O..O.O..\\n.O..O.O..\\n.O..O.O..O..\\n') == 'YES'\nassert solution('.OO..O..O..\\n.OO..O.O..\\n.OO..O.O..\\n.OO..O.O..\\n.O.OO..OO.\\n.O.O.OO..\\n.O..O.O..\\n.O..O.O..\\n.O..O.O..O..\\n') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"XX.XX.....\\n\"\n    \".....OOOO.\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\") == 'YES'\n\nassert solution(\n    \"XXOXX.....\\n\"\n    \"OO.O......\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\"\n    \"..........\\n\") == 'NO'\n\nassert solution(\n    \"XXX...XX..\\n\"\n    \".X...OX..O\\n\"\n    \".X..OXXOX..\\n\"\n    \"...X..OXX.\\n\"\n    \"...OX..OXX.\\n\"\n    \"X...OXXOX..\\n\"\n    \"...OX..OXX.\\n\"\n    \"...OX..OXX.\\n\"\n    \".X...OX..O\\n\") == 'YES'\n\nassert solution(\n    \"XXX...XX..\\n\"\n    \".X...OX..O\\n\"\n    \".X..OXXOX..\\n\"\n    \"...X..OXX.\\n\"\n    \"...OX..OXX.\\n\"\n    \"X...OXXOX..\\n\"\n    \"...OX..OXX.\\n\"\n    \"...OX..OXX.\\n\"\n    \".X...OX..O\\n\") == 'NO'\n\nprint(solution(\n    \"XXXXXXXXX..\\n\"\n    \".XOOXXXXX.O\\n\"\n    \".XOOXXXXX.O\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.OO\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n    \"XOOXXXXX.O.\\n\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\nXX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\nassert solution('''\nXXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\nassert solution('''\nXXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\nassert solution('''\n...X.OX.X\nX.O.X.OX\n.X.OX.X.\nX.O.X.OX\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\n''') == 'YES'\nassert solution('''\n...X.OX.X\nX.O.X.OX\n.X.OX.X.\nX.O.X.OX\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\nX.OX.X.X\n''') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''X.O..\n.X....\nOO.X.\nX.X...\nX....X\n..O.XO\nX...XX\n.X.OO\n..XOO.\n...XXO''') == \"YES\"\nassert solution('''X.O.\n.X...\n.O.O.\n...X.\n.X.O.\n.X...\n.X.O.\n.X...\n.X.O.\n...X.\n''') == \"NO\"\nassert solution('''X.O.\n.X...\n.O.O.\n...X.\n.X.O.\n.X...\n.X.O.\n.X...\n.X.O.\n...X.\n''') == \"NO\"\nassert solution('''X.O.\n.X...\n.O.O.\n...X.\n.X.O.\n.X...\n.X.O.\n.X...\n.X.O.\n...X.\n''') == \"NO\"\nassert solution('''X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n.X.O.\n''') == \"NO\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''X..O.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\n\nassert solution(\n'''O.X.X.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\n\nassert solution(\n'''X...X.O.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\n\nassert solution(\n'''O.X.X.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\n\nassert solution(\n'''X.O.X.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\nXX.XX.....\n.....OOOO.\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'YES'\nassert solution('''\nXXOXX.....\nOO.O......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\nassert solution('''\nXXOXX.....\n..OO......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n''') == 'NO'\nassert solution('''\n.X.X...\n......X.\n........\n........\n........\n........\n........\n........\n........\n.X.X.X.\n''') == 'YES'\nassert solution('''\n.X.X...\n......X.\n........\n........\n........\n........\n........\n........\n........\n.X.X.X.\n''') == 'NO'\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"XX.XX.....\") == \"YES\"\nassert solution(\"XXOXX.....\") == \"NO\"\nassert solution(\"OO.O......\") == \"NO\"\nassert solution(\"....OOOOO....\") == \"YES\"\nassert solution(\"..........\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"XX.XX.....\\n.....OOOO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n\") == \"NO\"\nassert solution(\"XXXXXXXXX\\nX.....X...\\nX.OX..X...\\nX.OXX.X...\\nX..OXXX.X...\\nX.XOOXX.X...\\nX.X.XOOX.X...\\nX.X.XOOX.X...\\nXXXXXXXXX\") == \"YES\"\nassert solution(\"XXXXXXXXX\\nX.....X...\\nX.OX..X...\\nX.OXX.X...\\nX..OXXX.X...\\nX.XOOXX.X...\\nX.X.XOOX.X...\\nX.X.XOOX.X...\") == \"NO\""
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"XXOXX.....\\nOO.O......\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"YES\"\nassert solution(\"XXOXX.....\\nOO....OO.\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\\n..........\") == \"NO\"\nassert solution(\"XOXOXOOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOX"
    },
    {
        "number": 24,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"X..X\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX..X\nX..X\"\"\") == 'NO'\nassert solution(\"\"\"X..X\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX..X\nX..X\"\"\") == 'YES'\nassert solution(\"\"\"X..X\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX..X\nX..X\"\"\") == 'NO'\nassert solution(\"\"\"X..X\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX..X\nX..X\"\"\") == 'YES'\nassert solution(\"\"\"X..X\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX.X.\nX..X\nX..X\nX..X\"\"\") == 'NO'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1 0\\n0 0'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('2 5') == '-1'\nassert solution('3 2') == '1 0 0\\n0 1 0\\n0 0 0'\nassert solution('2 6') == '-1'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"2 5\") == \"-1\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"2 4\") == \"-1\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1 0\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"5 2\") == \"1 0 0 0\"\nassert solution(\"2 5\") == \"-1\"\nassert solution(\"3 5\") == \"-1\"\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == '1 0 0 0 0'\nassert solution(input()) == '0 1 0 0 0'\nassert solution(input()) == '0 0 0 0 1'\nassert solution(input()) == '0 0 1 0 1'\nassert solution(input()) == '0 0 0 1 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('1 2') == '1 0'\nassert solution('1 1') == '1 1'\nassert solution('2 1') == '1 0'\nassert solution('1 2 3') == '1 0 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 1''') == '1 0'\nassert solution('''3 2''') == '1 0 0'\nassert solution('''1 10''') == '0 0 0'\nassert solution('''100 200''') == '1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0 0'\nassert solution('2\\n1') == '1 0'\nassert solution('2\\n5') == '-1'\nassert solution('3\\n2') == '1 0 0'\nassert solution('3\\n3') == '0 1 0'\n"
    },
    {
        "number": 25,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1 0'\nassert solution('3 2') == '1 0 0'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1.1 3.4 2.5') == '(x^y)^z'\nassert solution('2.0 2.0 2.0') == '(x^y)^z'\nassert solution('1.9 1.8 1.7') == 'x^y^z'"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n\n'''\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == '(x^y)^z'\nassert solution('1.9 1.8 1.7') == 'x^y^z'\n\n\n\n-----Alternative Solutions-----\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"z^y^x\"\nassert solution(\"2.0 2.0 2.0\") == \"(x^y)^z\"\nassert solution(\"1.9 1.8 1.7\") == \"x^y^z\""
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tkinter import Tk\n    from tkinter.simpledialog import askstring\n    root = Tk()\n    root.withdraw()\n    pyperclip.copy(solution(root.clipboard_get()))\n\n---\n\ntry:\n    __import__('pyperclip')\nexcept ImportError:\n    from tk"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"z^y^x\"\nassert solution(input()) == \"(x^y)^z\"\nassert solution(input()) == \"x^y^z\"\nassert solution(input()) == \"z^y^x\"\nassert solution(input()) == \"x^y^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1.1 3.4 2.5\") == \"x^y^z\"\nassert solution(\"2.0 2.0 2.0\") == \"(x^y)^z\"\nassert solution(\"1.9 1.8 1.7\") == \"x^y^z\"\nassert solution(\"1.1 3.4 2.5\") == \"x^y^z\"\nassert solution(\"2.0 2.0 2.0\") == \"(x^y)^z\"\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1.1 3.4 2.5') == 'z^y^x'\nassert solution('2.0 2.0 2.0') == 'x^y^z'\nassert solution('1.9 1.8 1.7') == '(x^y)^z'\n"
    },
    {
        "number": 26,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1.1 3.4 2.5') == '(1.1)^(3.4)^(2.5)'\nassert solution('2.0 2.0 2.0') == '((2.0)^2)^2'\nassert solution('1.9 1.8 1.7') == '(1.9)^(1.8)^(1.7)'\n\n\"\"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abcdefgh') == 8\nassert solution('abcabca') == 5\nassert solution('abc') == 5\nassert solution('ab') == 3\nassert solution('a') == 1\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('abcdefgh') == 8\nassert solution('abcdefghii') == 10\nassert solution('abcdefghi') == 7\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\nassert solution('abcd') == 4\nassert solution('abc') == 3\nassert solution('a') == 1\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\nassert solution('abcdefgh') == 8\nassert solution('abcdefgh') == 8\nassert solution('abcdefgh') == 8\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abcabca') == 5\nassert solution('abcdefgh') == 8\nassert solution('aaaaaaaa') == 4\nassert solution('aaaaaa') == 4\nassert solution('abcab') == 3\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abcabca\") == 5\nassert solution(\"abcdefgh\") == 8\nassert solution(\"ab\") == 2\nassert solution(\"abcd\") == 3\nassert solution(\"abcdabcd\") == 4\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abcdefgh') == 8\nassert solution('abcabca') == 5\nassert solution('aaaaaaaa') == 4\nassert solution('aaaaaaab') == 4\nassert solution('aaaaaaa') == 4\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('x') == 1\nassert solution('abc') == 3\nassert solution('xaxbx') == 5\nassert solution('abcabca') == 7\n"
    },
    {
        "number": 27,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4'\n\nassert solution('''2\n1 0\n2 1\n''') == '3'\n\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5'\n\nassert solution('''5\n1 0\n21 1\n211 1\n211111 1\n2112111 1\n''') == '6'\n\nassert solution('''5\n1 0\n21 1\n211 1\n211111 1\n2112111 1\n211111 1\n2111111 1\n211111111 1\n''') == '6'"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0''') == '4'\nassert solution('''2\n1 0\n2 1\n''') == '3'\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0''') == '5'\nassert solution('''3\n1 0\n111 1\n111 0\n''') == '4'\nassert solution('''10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n1 353\n1 354\n1 355\n1 356\n1 357\n1 358\n1 359\n1 360\n1 361\n1 362\n1 363\n1 364\n1 365\n1 366\n1 367\n1 368\n1 369\n1 370\n1 371\n1 372\n1 373\n1 374\n1 375\n1 376\n1 377\n1 378\n1 379\n1 380\n1 381\n1 382\n1 383\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n'\nassert solution('''2\n1 0\n2 1\n''') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2\\n'\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\nassert solution('''3\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '6\\nmove 1 6\\nmove 11 1\\nmove 1111 3\\nmove 111 4\\nmove 11111 2\\n'\nassert solution('''4\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n'\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 0\\n2 1\\n2extra 0\\n3 1\\n99 0\") == \"4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3\\n\"\nassert solution(\"1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n\"\nassert solution(\"5\") == \"5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3\\n\"\nassert solution(\"0\") == \"\"\nassert solution(\"2\") == \"1\\n2\\n\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n01 0\\n2 1\\n2extra 0\\n3 1\\n99 0\\n') == '4\\nmove 3 1\\nmove 01 5\\nmove 2extra 4\\nmove 99 3'\nassert solution('5\\n1 0\\n11 1\\n111 0\\n1111 1\\n11111 0\\n') == '5\\nmove 1 5\\nmove 11 1\\nmove 1111 2\\nmove 111 4\\nmove 11111 3'\nassert solution('2\\n1 0\\n2 1\\n') == '3\\nmove 1 3\\nmove 2 1\\nmove 3 2'\n\n\"\"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '4\\n'\nassert solution('4\\n') == '3\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2\\n'\nassert solution('3\\n') == '3\\n'\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 0\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 0 0\") == \"\"\nassert solution(\"0 0 1\") == \"\"\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n01 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '''4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n'''\n\nassert solution('''2\n1 0\n2 1\n\n''') == '''3\nmove 1 3\nmove 2 1\nmove 3 2\n'''\n\nassert solution('''5\n1 0\n11 1\n111 0\n1111 1\n11111 0\n''') == '''5\nmove 1 5\nmove 11 1\nmove 1111 2\nmove 111 4\nmove 11111 3\n'''\n\nassert solution('''5\n1 0\n3 1\n5 1\n1 0\n1 1\n5 1\n1 1\n''') == '''5\nmove 1 3\nmove 3 5\nmove 5 3\nmove 1 1\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\nmove 3 2\nmove 3 4\nmove 3 5\nmove 1 4\nmove 5 1\nmove 1 3\nmove 3 1\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '''4\nmove 3 1\nmove 01 5\nmove 2extra 4\nmove 99 3\n'''\n\nassert solution('''1 0\n2 1\n2extra 0\n3 1\n99 0\n''') == '''3\nmove 1 3\nmove 2 1\nmove 3 2\n'''\n"
    },
    {
        "number": 28,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1\\n1\\n1'\nassert solution('2') == '1\\n1'\nassert solution('1') == '1'\nassert solution('5') == '4\\nmove 1 5\\nmove 11 1\\nmove 111 1\\nmove 111 1\\nmove 111 1\\nmove 111 1'\nassert solution('3') == '1\\n1\\n1'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\nassert solution(\"00000000000\") == \"1\"\nassert solution(\"1234567\") == \"4\"\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"000000\") == '0'\nassert solution(\"123456\") == '2'\nassert solution(\"111000\") == '1'\n\"\"\"\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"000000\") == 0\nassert solution(\"123456\") == 2\nassert solution(\"111000\") == 1\nassert solution(\"110101\") == 2\nassert solution(\"111111\") == 0\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n\n\"\"\""
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\nassert solution('22222') == '2'\nassert solution('33334') == '3'\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('123456') == 0\nassert solution('111000') == 1\nassert solution('000000') == 0\nassert solution('111100') == 2\nassert solution('111322') == 2\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('000000') == 0\nassert solution('123456') == 2\nassert solution('111000') == 1\nassert solution('111111') == 3\nassert solution('000000') == 0\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"000000\") == \"0\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"111000\") == \"1\"\nassert solution(\"110010\") == \"1\"\nassert solution(\"1110010\") == \"2\"\n"
    },
    {
        "number": 29,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('000000') == '0'\nassert solution('123456') == '2'\nassert solution('111000') == '1'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 2') == '2'\nassert solution('5 2') == '2'"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2''') == '1'\nassert solution('''2 1''') == '1'\nassert solution('''4 2''') == '3'\nassert solution('''4 3''') == '3'\nassert solution('''2 4''') == '2'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('2 2') == '2'\nassert solution('1 1') == '2'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 2') == '2'\nassert solution('4 3') == '3'\nassert solution('5 2') == '2'\nassert solution('5 3') == '4'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"1000000 1000000000\") == \"1000000\"\nassert solution(\"1000000 1000000000\") == \"1000000\"\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\nassert solution('''4 7''') == '2'\nassert solution('''6 4''') == '2'\nassert solution('''5 1''') == '5'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3''') == '3'\nassert solution('''5 2''') == '2'\nassert solution('''3 3''') == '3'\nassert solution('''7 19''') == '19'\nassert solution('''1 100000000000''') == '1'\n"
    },
    {
        "number": 30,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('10000000 1000000000') == '0'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1 8\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"4 3\") == \"23 128\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\nassert solution('2 2') == '1 1'\nassert solution('6 5') == '23 128'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\nassert solution('1 4') == '1 1'\nassert solution('4 2') == '23 128'\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2\\n') == '1 8'\nassert solution('1 3\\n') == '1 1'\nassert solution('4 3\\n') == '23 128'\n\n\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1 8'\nassert solution('1 3') == '1 1'\nassert solution('4 3') == '23 128'\n\"\"\"\n"
    },
    {
        "number": 31,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == '1 8'\nassert solution('''1 3''') == '1 1'\nassert solution('''4 3''') == '23 128'\nassert solution('''3 4''') == '8 1'\nassert solution('''3 8''') == '1 8'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"1 5\") == \"YES\"\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n    7500 South\n    10000 East\n    3500 North\n    4444 West\n    4000 North\n''') == 'YES'\nassert solution('''2\n    15000 South\n    4000 East\n''') == 'NO'\nassert solution('''5\n    20000 South\n    1000 North\n    1000000 West\n    9000 North\n    10000 North\n''') == 'NO'\nassert solution('''4\n    50 South\n    50 North\n    15000 South\n    15000 North\n''') == 'YES'\n'''\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"2\n15000 South\n4000 East\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"3\n20000 South\n10 East\n20000 North\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"4\n50 South\n50 North\n15000 South\n15000 North\n\"\"\"\n) == \"YES\"\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000 South\\n1000 North') == 'NO'\nassert solution('1000 North\\n1000 South\\n1000 North\\n1000 South') == 'YES'\nassert solution('1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South') == 'YES'\nassert solution('1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\n1000 South\\n1000 North\\"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'NO'\nassert solution('N') == 'NO'\nassert solution('N North') == 'NO'\nassert solution('N North N') == 'NO'\nassert solution('N North N North') == 'NO'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"100 North\\n\") == \"YES\"\nassert solution(\"1000 South\\n\") == \"NO\"\nassert solution(\"1500 South\\n\") == \"NO\"\nassert solution(\"1500 East\\n\") == \"NO\"\nassert solution(\"1500 North\\n\") == \"NO\"\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n''') == 'YES'\nassert solution('''2\n15000 South\n4000 East\n''') == 'NO'\nassert solution('''3\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n''') == 'NO'\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North\n''') == 'YES'"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North\n\n''') == 'YES'\nassert solution('''2\n15000 South\n4000 East\n\n''') == 'NO'\nassert solution('''3\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North\n\n''') == 'NO'\nassert solution('''4\n50 South\n50 North\n15000 South\n15000 North\n\n''') == 'YES'\nassert solution('''2\n1000 North\n1000 South\n\n''') == 'NO'\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 32,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n7500 South\n10000 East\n3500 North\n4444 West\n4000 North''') == 'YES'\nassert solution('''2\n15000 South\n4000 East''') == 'NO'\nassert solution('''5\n20000 South\n1000 North\n1000000 West\n9000 North\n10000 North''') == 'YES'\nassert solution('''3\n20000 South\n10 East\n20000 North''') == 'NO'\n\n\n\"\"\"\n\n\"\"\"\n\n\"\"\"\n\n-----Solutions-----\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 0 3 3 5 21\n''') == '3'\n\nassert solution('''2 4 3 0 6 17\n''') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'\n\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 0 3 3 5 21\") == \"3\"\nassert solution(\"2 4 3 0 6 17\") == \"2\"\nassert solution(\"2 4 0 0 6 17\") == \"1\"\nassert solution(\"2 0 0 0 6 17\") == \"0\"\nassert solution(\"2 0 3 0 6 17\") == \"0\"\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\nassert solution('1 1 1 1 1 1') == '0'\nassert solution('2 4 3 0 6 17') == '2'\nprint(\"https://www.codewars.com/kata/5cfeba86e65a4ce9e000b14a\")"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 0 3 3 5 21''') == '3'\nassert solution('''2 4 3 0 6 17''') == '2'\nassert solution('''4 0 2 0 5 1''') == '1'\nassert solution('''1 1 1 1 1 1''') == '0'\nassert solution('''1 1 1 1 1 1''') == '0'\n"
    },
    {
        "number": 33,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3'\nassert solution('2 0 3 3 5 21') == '3'\nassert solution('2 4 3 0 6 17') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('1 1 1') == '1'\nassert solution('1 2 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n') == '1'\nassert solution('4 7 10\\n') == '3'\nassert solution('1 100 100\\n') == '1'\nassert solution('3 1 4\\n') == '2'\nassert solution('2 1 1\\n') == '2'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('5 4 3') == '2'\nassert solution('7 8 10') == '2'\nassert solution('8 9 10') == '3'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == expected\n\"\"\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('1 2 3') == '1'\nassert solution('1 7 5') == '1'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 3 2\") == \"2\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2 3\") == \"1\"\nassert solution(\"4 7 10\") == \"3\"\n\n\"\"\"\n\"\"\"\nThe best solution I can think of is to use the binary search to find the answer.\n\nThe binary search is what I call the divide-and-conquer algorithm. It's an iterative algorithm.\nThe goal of the algorithm is to find a solution to a problem which is a subproblem of the larger problem.\nIt's a divide and conquer algorithm. It's a process of breaking a problem into smaller and smaller pieces, solving those smaller pieces and then combining them together to solve the original problem.\n\nThe algorithm for this problem is:\n\n1. Divide the problem into two parts (sub-problems) \u2014 the part with n / 2 pieces, and the part with n / 2 + 1 pieces.\n2. Solve the sub-problems and get two solutions \u2014 the solutions for the two sub-problems.\n3. Combine the solutions for the sub-problems to get the solution for the original problem.\n\nThe key to solve the divide-and-conquer algorithm is to figure out how to divide the problem into sub-problems and solve them.\n\nLet's look at the code for the divide-and-conquer algorithm.\n\n\"\"\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n"
    },
    {
        "number": 34,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '1'\nassert solution('4 7 10') == '3'\nassert solution('1 2 3') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''4 3\nBRG\nBRG\nBRG\nBRG\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'NO'\nassert solution('''4 4\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'NO'\n'''\n\n'''\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 5\\nRRRRR\\nRRRRR\\nBBBBB\\nBBBBB\\nGGGGG\\nGGGGG') == 'YES'\nassert solution('4 3\\nBRG\\nBRG\\nBRG\\nBRG') == 'YES'\nassert solution('6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB') == 'NO'\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nRRR\\nRRR\\nBBBB\\nBBBB\\nGGGG\\nGGGG\\n\") == \"YES\"\nassert solution(\"4 5\\nRRR\\nRRR\\nBBBB\\nBBBB\\nGGGG\\nGGGG\\nBBBB\\nBBBB\\nBBBB\\nBBBB\") == \"YES\"\nassert solution(\"6 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\nassert solution(\"4 7\\nRRRGGGG\\nRRRGGGG\\nRRRGGGG\\nRRRBBBB\\nRRRBBBB\\nRRRBBBB\") == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"NO\"\nassert solution(\"6 7\") == \"NO\"\nassert solution(\"6 5\") == \"YES\"\nassert solution(\"7 5\") == \"YES\"\nassert solution(\"6 7\") == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\n\nassert solution(input2) == 'NO'\n\nassert solution(input3) == 'YES'\n\nassert solution(input4) == 'YES'\n\nassert solution(input5) == 'YES'"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 5\nRRRRR\nRRRRR\nBBBBB\nBBBBB\nGGGGG\nGGGGG\n''') == 'YES'\nassert solution('''4 3\nRRRR\nRRRR\nBBBB\nGGGG\n''') == 'YES'\nassert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB\n''') == 'NO'\n'''\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(open(\"test_data/test_08_large_3x3\").read()) == \"YES\"\nassert solution(open(\"test_data/test_08_large_2x2\").read()) == \"NO\"\n\n\"\"\""
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"NO\"\nassert solution(\"4 4\\nRRRR\\nRRRR\\nBBBB\\nGGGG\\n\") == \"YES\"\nassert solution(\"2 2\\nRR\\nRR\\n\") == \"YES\"\nassert solution(\"2 2\\nRR\\nRR\\n\") == \"YES\"\nassert solution(\"1 1\\nR\\n\") == \"YES\"\n"
    },
    {
        "number": 35,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''6 7\nRRRGGGG\nRRRGGGG\nRRRGGGG\nRRRBBBB\nRRRBBBB\nRRRBBBB''') == 'NO'\nassert solution('''3 3\nBBB\nBBB\nBBB\n''') == 'YES'\nassert solution('''3 3\nRRR\nRRR\nRRR\n''') == 'YES'\nassert solution('''3 3\nRRR\nRRR\nRRR\n''') == 'YES'\nassert solution('''4 7\nRRRRRGGGG\nRRRRRGGGG\nRRRRRGGGG\nRRRRRBBBB\nRRRRRBBBB\nRRRRRBBBB\nRRRRRBBBB\nRRRRRBBBB\n''') == 'YES'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\nassert solution('17') == '-7 0'\nassert solution('27') == '-2 -2'\nassert solution('131') == '5 -7'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '-2 0'\nassert solution('''7''') == '3 2'\nassert solution('''17''') == '-2 0'\nassert solution('''35''') == '-2 3'\nassert solution('''67''') == '3 -2'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') is None\nassert solution('\\n') is None\nassert solution('1\\n') == ('0', '0')\nassert solution('2\\n') == ('1', '-1')\nassert solution('3\\n') == ('2', '-1')\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\nassert solution('10') == '5 -2'\nassert solution('100') == '25 -10'\nassert solution('1000') == '52 -50'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"-2 0\"\nassert solution(\"7\") == \"3 2\"\nassert solution(\"10000\") == \"25 80\"\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '-2 0'\nassert solution('7') == '3 2'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '-2 0'\nassert solution('''7''') == '3 2'\nassert solution('''17''') == '-13 -6'\nassert solution('''26''') == '2 3'\nassert solution('''27''') == '3 4'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '-2 0'\nassert solution('7') == '3 2'\nassert solution('1000000007') == '7 1'\nassert solution('1000000008') == '8 0'\n"
    },
    {
        "number": 36,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '-2 0'\nassert solution('7') == '3 2'"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\nassert solution('4 6 15') == 'No'\n\n\n\"\"\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\nassert solution('6 10 9') == 'No'\nassert solution('8 1 1') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6 15\\n') == 'No'\nassert solution('3 2 7\\n') == 'Yes'\nassert solution('6 11 6\\n') == 'Yes'\nassert solution('2 2 2\\n') == 'Yes'\nassert solution('1 1 1\\n') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 6 15''') == 'No'\nassert solution('''3 2 7''') == 'Yes'\nassert solution('''6 11 6''') == 'Yes'\nassert solution('''5 9 7''') == 'No'\nassert solution('''7 3 7''') == 'Yes'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 6 7') == \"No\"\nassert solution('1 2 3') == \"No\"\nassert solution('2 2 3') == \"Yes\"\nassert solution('1 4 3') == \"No\"\nassert solution('3 5 6') == \"Yes\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 6 15') == 'No'\nassert solution('3 2 7') == 'Yes'\nassert solution('6 11 6') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('0 0 0') == 'No'\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 4') == \"No\"\nassert solution('4 2 6') == \"Yes\"\nassert solution('1 2 1') == \"Yes\"\nassert solution('6 1 2') == \"Yes\"\nassert solution('3 2 7') == \"No\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 6 15\") == \"No\"\nassert solution(\"3 2 7\") == \"Yes\"\nassert solution(\"6 11 6\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n"
    },
    {
        "number": 37,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 6 15\\n\") == \"No\"\nassert solution(\"3 2 7\\n\") == \"Yes\"\nassert solution(\"6 11 6\\n\") == \"Yes\"\nassert solution(\"6 11 3\\n\") == \"No\"\nassert solution(\"1 2 1\\n\") == \"Yes\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 8\\n2 4 6\\n1 5 7\\n\") == \"YES\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\\n\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\\n\") == \"NO\"\nassert solution(\"4 9\\n2 3 5 8\\n0 1 3 6\\n\") == \"YES\"\nassert solution(\"2 4\\n1 3\\n1 2\\n\") == \"NO\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'YES'\nassert solution('2 4\\n1 3\\n1 2\\n') == 'NO'\nassert solution('4 4\\n2 3 5 6\\n0 1 3 7\\n') == 'NO'\nassert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n'''\n\nn, L = [int(x) for x in stdin.split()]\nkefa_dist = [int(x) for x in stdin.split()]\nsasha_dist = [int(x) for x in stdin.split()]\n\nprint(\"YES\" if sorted(kefa_dist) == sorted(sasha_dist) else \"NO\")\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 8\\n2 4 6\\n1 5 7\\n') == 'YES'\nassert solution('4 9\\n2 3 5 8\\n0 1 3 6\\n') == 'NO'"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\n\n\n\"\"\""
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"YES\"\nassert solution(\"2 4 6\") == \"YES\"\nassert solution(\"1 5 7\") == \"NO\"\nassert solution(\"4 9\") == \"YES\"\nassert solution(\"2 3 5 8\") == \"YES\"\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7''') == 'YES'\nassert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\nassert solution('''2 4\n1 3\n1 2''') == 'NO'\nassert solution('''3 2\n1 1\n1 1\n''') == 'NO'\nassert solution('''4 8\n2 4 6\n1 5 7\n''') == 'YES'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 8\n2 4 6\n1 5 7\n''') == 'YES'\n\nassert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\n\nassert solution('''2 4\n1 3\n1 2\n''') == 'NO'\n\nassert solution('''5 10\n1 2 1 2 1 1\n0 1 3 2 3 1\n''') == 'YES'\n\nassert solution('''5 10\n1 2 1 2 1 1\n0 1 3 2 3 1\n''') == 'NO'"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 9\n2 3 5 8\n0 1 3 6\n''') == 'YES'\nassert solution('''2 4\n2 3 5 8\n0 1 3 6\n''') == 'YES'\nassert solution('''2 4\n2 3 5 8\n1 1 3 6\n''') == 'NO'\nassert solution('''2 4\n1 2 3 4\n0 1 3 6\n''') == 'NO'\nassert solution('''2 4\n1 2 3 4\n0 1 3 6\n''') == 'NO'\n"
    },
    {
        "number": 38,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"8 9\n2 3 5 8\n0 1 3 6\n\"\"\") == \"YES\"\nassert solution(\"\"\"4 9\n2 3 5 8\n0 1 3 6\n\"\"\") == \"NO\"\nassert solution(\"\"\"4 9\n2 3 5 8\n0 1 3 6\n\"\"\") == \"YES\"\nassert solution(\"\"\"3 4\n1 3 2\n1 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"3 4\n2 3 1\n1 2 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"wuffuw\"\nassert solution(\"qqqqqqqq\") == \"0\"\nassert solution(\"qqq\") == \"0\"\nassert solution(\"q\") == \"0\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"wuffuw\"\nassert solution(\"qqqqqqqq\") == \"qqqqqqqq\"\nassert solution(\"mewmewmewmew\") == \"mewmewmewmew\"\nassert solution(\"wuuuuuwu\") == \"wuuuuuwu\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == '0'\nassert solution('wwwwwww') == '0'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaa') == '0'\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('mew') =='mew'\nassert solution('wuffuw') == 'wuffuw'\nassert solution('qqqqqqqq') == '0'\nassert solution('qqqqqqq') == '0'\nassert solution('qqqqqqqqqqqqq') == '0'"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('mew') == 3\nassert solution('wuffuw') == 5\nassert solution('qqqqqqqq') == 0\nassert solution('qqq') == 0\nassert solution('qwertyu') == 5\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"mew\") == \"mew\"\nassert solution(\"wuffuw\") == \"wuffuw\"\nassert solution(\"qqqqqqqq\") == \"qqqqqqqq\"\nassert solution(\"qqqqqqq\") == \"qqqqqqq\"\nassert solution(\"mew\") == \"mew\"\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('mew') == 3\nassert solution('wuffuw') == 5\nassert solution('qqqqqqqq') == 0\nassert solution('bbaa') == 2\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"mew\") == 3\nassert solution(\"wuffuw\") == 5\nassert solution(\"qqqqqqqq\") == 0\nassert solution(\"qqqqqqqqqqqqqq\") == 0\nassert solution(\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"mew\") == 3\nassert solution(\"wuffuw\") == 5\nassert solution(\"qqqqqqqq\") == 0\nassert solution(\"nfkqnvfnpfjdwtjvnbdygxnrjqjreaxbnvfnqkqj\") == 0\nassert solution(\"qzqzqzqzqzq\") == 0\n"
    },
    {
        "number": 39,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('kek') == 3\nassert solution('abb') == 0\nassert solution('iq') == 0\nassert solution('ab') == 1\nassert solution('abab') == 2\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\\n') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\\n') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\\n') =='maybe'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1748 1748\\n') =='maybe'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\\n') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\\n') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\\n') =='maybe'\n\n\n-----\n\n## submit ##\n\n\"\"\"\nimport sys"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699\") == \"maybe\"\nassert solution(\"5\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400\") == \"unrated\"\nassert solution(\"6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884\") == \"rated\"\nassert solution(\"1\\n500500\") == \"maybe\"\nassert solution(\"10\\n222222\") == \"maybe\"\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n3060 3060\\n2194 2194\\n2876 2903\\n2624 2624\\n3007 2991\\n2884 2884') == 'rated'\nassert solution('4\\n1500 1500\\n1300 1300\\n1200 1200\\n1400 1400') == 'unrated'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1699 1699') =='maybe'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1599 1599') =='maybe'\nassert solution('5\\n3123 3123\\n2777 2777\\n2246 2246\\n2246 2246\\n1799 1799') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884\n''') == 'rated'\nassert solution('''\n4\n1500 1500\n1300 1300\n1200 1200\n1400 1400\n''') == 'unrated'\nassert solution('''\n5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') =='maybe'\nassert solution('''\n10\n10 10\n1 1\n10 10\n9 9\n10 10\n2 2\n2 2\n3 3\n3 3\n4 4\n4 4\n''') =='maybe'\nassert solution('''\n10\n10 10\n1 1\n10 10\n9 9\n10 10\n2 2\n2 2\n3 3\n3 3\n4 4\n4 4\n''') == 'unrated'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n3060 3060\n2194 2194\n2876 2903\n2624 2624\n3007 2991\n2884 2884''') == \"rated\"\nassert solution('''4\n1500 1500\n1300 1300\n1200 1200\n1400 1400''') == \"unrated\"\nassert solution('''5\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699''') == \"maybe\"\nassert solution('''2\n1 1\n3 2\n1 2\n2 2''') == \"unrated\"\nassert solution('''7\n6500 6500\n2177 2177\n2720 2720\n2611 2611\n2622 2622\n2781 2781\n2964 2964''') == \"maybe\"\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n200 1000\n100 700\n500 500''') =='maybe'\nassert solution('''3\n200 1000\n100 700\n100 200''') == 'rated'\nassert solution('''3\n200 1000\n100 700\n500 500\n100 200''') == 'unrated'\nassert solution('''3\n200 1000\n100 700\n50 500\n100 200''') == 'rated'\nassert solution('''3\n3123 3123\n2777 2777\n2246 2246\n2246 2246\n1699 1699\n''') == 'unrated'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') =='maybe'\nassert solution('2') == 'unrated'\nassert solution('3') == 'rated'\nassert solution('4') =='maybe'\nassert solution('5') =='maybe'\n"
    },
    {
        "number": 40,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0\\n') == 'unrated'\nassert solution('1\\n') =='maybe'\nassert solution('2\\n') == 'rated'\nassert solution('3\\n') == 'rated'\nassert solution('4\\n') == 'unrated'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 0 3\\n') == '2 1 0 1'\nassert solution('4\\n1 2 0 3\\n') == '2 1 0 1'\nassert solution('4\\n1 2 0 3\\n') == '2 1 0 1'\nassert solution('4\\n1 2 0 3\\n') == '2 1 0 1'\nassert solution('4\\n1 2 0 3\\n') == '2 1 0 1'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n2 1 0 3 0 0 3 2 4\n''') == '2 1 0 1 0 0 1 2 3'\nassert solution('''5\n0 1 2 3 4\n''') == '0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4\n''') == '2 1 0 1 2 3 4'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0\\n-10\\n10\\n-100\\n-101\\n') == '-10 1 0 -100 -101'\nassert solution('0\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\n-100\\"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9\n2 1 0 3 0 0 3 2 4\n''') == '2 1 0 1 0 0 1 2 3 '\nassert solution('''5\n0 1 2 3 4\n''') == '0 1 2 3 4 '\nassert solution('''7\n5 6 0 1 -2 3 4\n''') == '2 1 0 1 2 3 4 '\nassert solution('''9\n2 1 0 3 0 0 3 2 4\n''') == '2 1 0 1 0 0 1 2 3 '\nassert solution('''9\n5 7 0 1 -2 3 4\n''') == '2 1 0 1 2 3 4 '\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''9\n2 1 0 3 0 0 3 2 4''') == '2 1 0 1 0 0 1 2 3'\nassert solution('''5\n0 1 2 3 4''') == '0 1 2 3 4'\nassert solution('''7\n5 6 0 1 -2 3 4''') == '2 1 0 1 2 3 4'\nassert solution('''9\n2 1 0 3 0 0 3 2 4''') == '2 1 0 1 0 0 1 2 3'\nassert solution('''8\n1 1 1 1 1 1 1 1 1''') == '0 0 0 0 0 0 0 0 0'\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1 2 3') == '1 0 2 1 3'\nassert solution('10\\n0 1 2 3 4 5 6 7 8 9') == '0 1 2 3 4 5 6 7 8 9'\nassert solution('7\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n\n'''\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 41,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9\\n2 1 0 3 0 0 3 2 4') == '2 1 0 1 0 0 1 2 3'\nassert solution('5\\n0 1 2 3 4') == '0 1 2 3 4'\nassert solution('7\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\nassert solution('9\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\nassert solution('7\\n5 6 0 1 -2 3 4') == '2 1 0 1 2 3 4'\n\n\n-----What is the running time of your solution?-----\n\nAnalysis\n\n\"\"\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0010') == '0'\nassert solution('1010') == '0'\nassert solution('0100') == '1'\nassert solution('0101') == '1'\nassert solution('0110') == '2'\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10101010101010') == '962'\nassert solution('0') == '3'\nassert solution('1010') == '2'\nassert solution('01010101010101') == '962'\nassert solution('10101010101010') == '962'\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"00\") == \"\"\nassert solution(\"1010\") == \"\"\nassert solution(\"10101010101010\") == \"\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"00\") == \"1\"\nassert solution(\"1010\") == \"962\"\nassert solution(\"10101010101010\") == \"962\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"00\") == \"00\"\nassert solution(\"1\") == \"01\"\nassert solution(\"0101\") == \"1010\"\nassert solution(\"01010101010101\") == \"01010101010101\"\nassert solution(\"10101010101010\") == \"10101010101010\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == ''\n\n\n-----Answer-----"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"01010\") == \"962\"\nassert solution(\"0\") == \"3\"\nassert solution(\"1010\") == \"2\"\nassert solution(\"10101010101010\") == \"962\"\nassert solution(\"10101010101010\") == \"962\"\n"
    },
    {
        "number": 42,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1010') == 2\nassert solution('10101010101010') == 962\nassert solution('100000') == 3\nassert solution('1111111') == 1\nassert solution('1') == 0\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''-1 0\n1 0\n-1 1\n1 1''') == '3 2'\nassert solution('''-1 -1\n1 0\n0 1\n1 1''') == '2 1'\nassert solution('''-1 -1\n1 1\n1 1''') == '2 1'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n-1 1\n0 1\n0 1\n1 0\n1 1\n1 -1\n1 -1''') == '1 3'\nassert solution('''-1 0\n-1 1\n0 1\n0 1\n1 0\n1 1\n1 -1\n1 -1''') == '1 3'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6\n-1 -1\n''') == '1 1'\nassert solution('''1\n1 1\n1 1''') == '1 1'\nassert solution('''2\n1 1\n-1 1''') == '1 1'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '6 5'\nassert solution('''-1 0\n-1 -1\n-1 -1\n-1 -1\n0 -1\n0 -1\n0 -1''') == '1 5'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '2 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1''') == '2 4'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\n\nprint(solution('''4\n-1 0\n0 -1\n1 0\n1 1'''))\nprint(solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6'''))\n\nprint(solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6'''))\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nprint(solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6'''))\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\n\nprint(solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6'''))\nassert solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\n\nprint(solution('''6\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6'''))\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n-1 0\n0 -1\n1 0\n1 1\n''') == '3 4'\n\nassert solution('''\n-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6\n''') == '6 5'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0\") == \"0 0\"\nassert solution(\"1 0\") == \"2 1\"\nassert solution(\"1 1\") == \"1 2\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"1 1\") == \"2 2\"\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''-1 0\\n0 -1\\n1 0\\n1 1\\n-4 -5\\n-4 -6''') == '6 5'\nassert solution('''-1 0\\n0 -1\\n1 0\\n1 1''') == '3 4'\nassert solution('''-1 0\\n-1 0\\n0 -1\\n1 0''') == '3 4'\nassert solution('''-1 0\\n0 1\\n1 0\\n1 1''') == '3 4'\nassert solution('''-1 0\\n1 -1\\n0 1\\n1 0''') == '1 2'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\nassert solution('''-1 0\n0 -1\n1 0\n1 1\n-4 -5\n-4 -6''') == '6 5'\nassert solution('''1 0\n0 -1\n-1 0\n-1 1''') == '3 4'\nassert solution('''1 0\n0 1\n-1 0\n-1 1''') == '3 4'\nassert solution('''1 0\n0 1\n1 0\n1 1\n0 0\n0 1\n1 0\n1 1''') == '3 4'\n"
    },
    {
        "number": 43,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''-1 0\n0 -1\n1 0\n1 1''') == '3 4'\n'''\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5 2 1 4 10\"\"\") == \"14\"\nassert solution(\n\"\"\"5 2 1 4 5\"\"\") == \"13\"\nprint(solution(input()))\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\nassert solution('5 2 1 4 5') == '13'\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''5 2 1 4 10'''\n) == '14'\nassert solution(\n'''5 2 1 4 5'''\n) == '13'\nassert solution(\n'''25 3 1 2 3'''\n) == '1'\nassert solution(\n'''25 3 1 2 7'''\n) == '4'\nassert solution(\n'''10 11 3 6 7 9 8'''\n) == '6'\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\n\"\"\"\n\nlines = list(map(int, stdin.split()))\n\nd, k, a, b, t = lines[0], lines[1], lines[2], lines[3], lines[4]"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 2 1 4 10''') == '14'\nassert solution('''5 2 1 4 5''') == '13'\nassert solution('''1 1 1 1 1''') == '-1'\nassert solution('''10000 1 1000000 1 1''') == '-1'\nassert solution('''100 1000 1000000 1 1''') == '-1'\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2 1 4 10') == '14'\nassert solution('5 2 1 4 5') == '13'\nassert solution('9 3 4 9 10') == '22'\n\n\n\n-----\n\nTesting\n\n\nTime limit: 1 second\nMemory limit: 64 megabytes\nVasiliy's car is not new \u2014 it breaks after driven every k kilometers and Vasiliy needs t seconds to repair it. After repairing his car Vasiliy can drive again (but after k kilometers it will break again, and so on). In the beginning of the trip the car is just from repair station.\n\nThe distance which Vasiliy needs to pass equals to d kilometers.\n\nVasiliy's car is not new \u2014 it breaks after driven every k kilometers and Vasiliy needs t seconds to repair it. After repairing his car Vasiliy can drive again (but after k kilometers it will break again, and so on). In the beginning of the trip the car is just from repair station.\n\nTo drive one kilometer on car Vasiliy spends a seconds, to walk one kilometer on foot Vasiliy needs b seconds (a < b).\n\nThe task is to find minimal time after which Vasiliy will be able to reach the post office. Consider that in every moment of time Vasiliy can left his car and start to go on foot.\n\nInput\nThe first line contains 5 positive integers d, k, a, b, t (1 \u2264 d \u2264 10^12; 1 \u2264 k, a, b, t \u2264 10^6; a < b), where:  d \u2014 the distance from home to the post office;  k \u2014 the distance, which car is able to drive before breaking;  a \u2014 the time, which Vasiliy spends to drive 1 kilometer on his car;  b \u2014 the time, which Vasiliy spends to walk 1 kilometer on foot;  t \u2014 the time, which Vasiliy spends to repair his car. \n\nOutput\nPrint the minimal time after which Vasiliy will be able to reach the post office.\n\n\"\"\"\n\nd, k, a, b, t = map(int, input().split())\n\ntime = 0\n\nwhile d >= 0:\n    time += a\n    d -= k\n    time += b\n\nprint(time)\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n\"\"\"\nfrom math import ceil\n\nd, k, a, b, t = [int(x) for x in stdin.split()]\nprint(ceil((d-k) / (a+b)) * t)\n"
    },
    {
        "number": 44,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1 4 10\") == \"14\"\nassert solution(\"5 2 1 4 5\") == \"13\""
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\nassert solution('10 10') == '10'\nassert solution('10 100') == '2'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3', '2') == '1 2'\nassert solution('6 3', '2') == '1 2 3'\nassert solution('8 2', '2') == '2 6'\nassert solution('5 3', '2') == '-1'\nassert solution('7 9', '2') == '-1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == output\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('5 4') == '2 6'\nassert solution('10 6') == '4'\nassert solution('100 1') == '1'\nassert solution('100 4') == '4'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('6 3') == '1 2 3'\nassert solution('8 2') == '2 6'\nassert solution('5 3') == '-1'\nassert solution('10 10') == '2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 6') == '2 3'\nassert solution('6 4') == '2 3'\nassert solution('8 2') == '2 3'\nassert solution('5 4') == '-1'\nassert solution('1 4') == '-1'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n''') == '2 3 4'\nassert solution('''6 3\n''') == '1 2 3'\nassert solution('''8 2\n''') == '2 6'\nassert solution('''5 3\n''') == '-1'\nassert solution('''7 3\n''') == '1 2 3'\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"4 1\") == \"-1\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 45,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"1 2 3\"\nassert solution(\"8 2\") == \"2 6\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\nassert solution(\"0 0\") == \"-1\"\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('10 4') == '5'\nassert solution('15 8') == '15'\nassert solution('5 7') == '7'\nassert solution('3 8') == '5'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('1 5') == '1'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 4') == '1\\n1'\nassert solution('5 7\\n11 14') == '7'\nassert solution('1 7\\n1 2\\n5 6') == '7'\nassert solution('3 8\\n1 2\\n3 4') == '5'\nassert solution('21 21\\n1 2\\n1 2') == '88'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 12\") == \"14\"\nassert solution(\"11 14\") == \"31\"\nassert solution(\"21 21\") == \"88\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"3 8\") == \"5\"\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '6 12') == '14'\nassert solution(\n    '11 14') == '31'\nassert solution(\n    '21 21') == '88'\nassert solution(\n    '5 7') == '7'\nassert solution(\n    '1 5') == '1'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2') == '0'\nassert solution('5 7') == '7'\nassert solution('7 8') == '88'\nassert solution('5 6') == '5'\nassert solution('3 8') == '5'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 12') == '14'\nassert solution('11 14') == '31'\nassert solution('21 21') == '88'\nassert solution('3 8') == '5'\nassert solution('5 7') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 12''') == '14'\nassert solution('''11 14''') == '31'\nassert solution('''21 21''') == '88'\nassert solution('''3 8''') == '5'\nassert solution('''5 7''') == '7'\n"
    },
    {
        "number": 46,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('3 4') == '3'\nassert solution('2 6') == '2'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"5 -2\n-3 8 -2 1 -6\"\"\") == '22'\n\nassert solution(\n\"\"\"12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\"\"\") == '42'\n\nassert solution(\n\"\"\"5 10\n-1 -2 -3 -4 -5\"\"\") == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == \"\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1\\n-3') == '0'\nassert solution('2 2\\n-1 -1') == '2'\nassert solution('1 1\\n-2 -2') == '4'\nassert solution('2 2\\n-2 -2') == '0'\nassert solution('3 2\\n-1 -1') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 -2''') == '22'\nassert solution('''12 -3''') == '0'\nassert solution('''5 10''') == '0'\nassert solution('''-1 -2 -3 -4 -5''') == '0'\nassert solution('''10 -1''') == '0'\n'''\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5 -2''') == '22'\nassert solution('''-3 8 -2 1 -6''') == '42'\nassert solution('''12 -3''') == '0'\nassert solution('''-1 -2 -3 -4 -5''') == '0'\nassert solution('''5 10''') == '0'\n"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5 10\n-1 -2 -3 -4 -5\"\"\"\n    ) == '42'\n\nassert solution(\n\"\"\"5 10\n1 3 3 7 1 3 3 7 1 3 3 7\"\"\"\n    ) == '42'\n\nassert solution(\n\"\"\"5 10\n-1 -2 -3 -4 -5\"\"\"\n    ) == '0'\n\nassert solution(\n\"\"\"12 -3\n1 3 3 7 1 3 3 7 1 3 3 7\"\"\"\n    ) == '42'\n\nassert solution(\n\"\"\"12 10\n-1 -2 -3 -4 -5\"\"\"\n    ) == '0'"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 -2') == '22'\nassert solution('12 -3') == '0'\nassert solution('5 10') == '0'\nassert solution('-1 -2 -3 -4 -5') == '0'\nassert solution('1 3 3 7 1 3 3 7 1 3 3 7') == '42'"
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 1\\n\"\n    \"-3 8 -2 1 -6\\n\"\n) == \"22\"\n\nassert solution(\n    \"7 2\\n\"\n    \"-1 -2 -3 -4 -5\\n\"\n) == \"0\"\n\nassert solution(\n    \"10 1\\n\"\n    \"-100 -10 -1 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\\n\"\n) == \"0\"\n\nassert solution(\n    \"6 3\\n\"\n    \"-1 -3 -3 -3 -5 -2\\n\"\n) == \"15\"\n\nassert solution(\n    \"6 3\\n\"\n    \"-1 -3 -3 -3 -5 -2\\n\"\n) == \"15\""
    },
    {
        "number": 47,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 -2''') == '22'\nassert solution('''12 -3''') == '0'\nassert solution('''5 10''') == '0'\nassert solution('''-1 -2 -3 -4 -5''') == '0'\nprint(solution('''11 4 8 4 10 -1 -4 -5'''))\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('1 9 100') == '99'\nassert solution('1 101 102') == '102'\n\n\n\"\"\"\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"1 10 5\") == \"5\"\n\"\"\""
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('1 100 10') == '101'\nassert solution('1 10000 100') == '1000001'\n\n\n\"\"\""
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2 2''') == '2'\nassert solution('''2 3 4''') == '3'\nassert solution('''1 10 5''') == '5'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('2 4 6') == '3'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('1 1000000000 1000') == '1000000001'"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == '2'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\nassert solution('2 3 4') == '3'\nassert solution('1 10 5') == '5'\n"
    },
    {
        "number": 48,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\n\n-----Alternate solutions-----"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '5'\nassert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('101100011101110111011101011010111010110110110111101011010110011011101110101011101011010111010110011011101110101110101101110111010111010110011011101110101110101101110111010111010110111011101110101011101011011101110101110101101110111011101011101011011101110101110101101110111010111010110111011101110101110101101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101101110111011101011101011011101110111010111010110111011101110101110101"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"123\") == \"1\"\nassert solution(\"12345\") == \"5\"\nassert solution(\"123456\") == \"6\"\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"7\"\nassert solution(\"21\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100000000000000\") == \"9\"\nassert solution(\"1000000000000000\") == \"0\"\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('42') == '2'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '5'\n"
    },
    {
        "number": 49,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('4') == '4'\n\n'''\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 4 11\\n4 2 5\\n4 4 5 4') == '26'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\n\n\n\n'''\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 11') == '26'\nassert solution('2 2 50') == '50'\nassert solution('5 7') == '50'\nassert solution('5 7 4 2') == '50'\nassert solution('1 1 10') == '10'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4 11\n4 2 5\n4 4 5 4''') == '26'\nassert solution('''2 2 50\n5 7\n4 2''') == '50'\nassert solution('''2 2 4\n5 7\n4 2''') == '10'\nassert solution('''3 3 9\n3 1 6\n3 9 8 3\n''') == '10'\nassert solution('''2 2 7\n5 6\n4 2''') == '12'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n4 2 5\\n4 4 5 4') == '26'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\nassert solution('2 2 50\\n5 7\\n4 4\\n') == '50'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\nassert solution('2 2 50\\n5 7\\n4 2\\n') == '50'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 11''') == '26'\nassert solution('''2 2 50''') == '50'\nassert solution('''4 2 5''') == '26'\nassert solution('''3 2 50''') == '50'\nassert solution('''4 2 50''') == '50'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 4 11\n4 2 5\n4 4 5 4''') == '26'\nassert solution('''2 2 50\n5 7\n4 2''') == '50'\nassert solution('''2 2 2\n2 2 1''') == '2'\nassert solution('''2 2 50\n2 2 1''') == '2'\nassert solution('''2 2 2\n2 2 1''') == '2'\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 50,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\u0435"
    },
    {
        "number": 51,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\u0435"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('25') == '20'\nassert solution('3') == '4'\nassert solution('10') == '-1'\nassert solution('0') == '1'\nassert solution('23') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == '3'\nassert solution('''25''') == '20'\nassert solution('''2''') == '-1'\nassert solution('''10''') == '5'\nassert solution('''3''') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"25\") == \"20\"\nassert solution(\"2\") == \"-1\"\n\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '3'\nassert solution('''25''') == '20'\nassert solution('''2''') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"25\") == \"20\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('-1') == '-1'\nassert solution('2') == '-1'\nassert solution('-3') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n2') == '2'\nassert solution('2\\n2\\n1') == '-1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('25') == '20'\nassert solution('1') == '1'\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"25\") == \"20\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"11\") == \"4\"\nassert solution(\"12\") == \"4\"\n"
    },
    {
        "number": 52,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"25\") == \"20\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"2,1,0\") == \"0,1\"\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abacabca') == '17'\n\nprint(solution(input()))\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abaccaba') == '26'\nassert solution('abaccabca') == '17'\nassert solution('abaccabca') == '17'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\\\n8\nabacabac\n1 1 1 1 1 1 1 1\n\n''') == '8'\nassert solution('''\\\n8\nabaccaba\n1 2 3 4 4 3 2 1\n\n''') == '26'\nassert solution('''\\\n8\nabacabca\n1 2 3 4 4 3 2 1\n\n''') == '17'\nassert solution('''\\\n8\nabacabca\n1 2 3 4 4 3 2 1\n\n''') == '26'\nassert solution('''\\\n8\nabacabca\n1 3 2 1 1 1 1\n\n''') == '16'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\n\nassert solution('''8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\n\nassert solution('''6\nabacaba\n1 2 3 4 4 3 2\n''') == '17'\n\nassert solution('''8\nabacabca\n1 2 3 4 4 3 2 1\n''') == '17'\n\nassert solution('''6\nabcdefgh\n1 2 2 1 1 2 2\n''') == '18'"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abacabac\\n1 1 1 1 1 1 1 1\\n') == '8'\nassert solution('abaccaba\\n1 2 3 4 4 3 2 1\\n') == '26'\nassert solution('abacabca\\n1 2 3 4 4 3 2 1\\n') == '17'\nassert solution('abacaba\\n1 2 3 4 4 3 2 1\\n') == '13'\nassert solution('abcabca\\n1 2 3 4 4 3 2 1\\n') == '13'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abaccaba') == '26'\n\nprint('solution()s passed')\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\\\n8\nabacabac\n1 1 1 1 1 1 1 1\n\n''') == '8'\n\nassert solution('''\\\n8\nabaccaba\n1 2 3 4 4 3 2 1\n\n''') == '26'\n\nassert solution('''\\\n8\nabacabca\n1 2 3 4 4 3 2 1\n\n''') == '17'\n\nassert solution('''\\\n8\nabaccabac\n1 1 1 1 1 1 1 1\n\n''') == '8'\n\nassert solution('''\\\n7\ncde\n3 4 1 2 3\n\n''') == '3'"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abaccabca') == '17'\nassert solution('abacabca') == '17'\nassert solution('abacabca') == '17'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n8\nabacabac\n1 1 1 1 1 1 1 1\n''') == '8'\nassert solution('''\\\n8\nabaccaba\n1 2 3 4 4 3 2 1\n''') == '26'\n"
    },
    {
        "number": 53,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abacabac') == '8'\nassert solution('abaccaba') == '26'\nassert solution('abaccaba') == '26'\nassert solution('abacabca') == '17'\nassert solution('abacabca') == '17'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('100 30') == 'NO'\nassert solution('100 110') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 3') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('100 100') == 'YES'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('100 99\\n') == 'YES'\nassert solution('3 7\\n') == 'YES'\nassert solution('100 50\\n') == 'NO'\n\n\n\n-----"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 7') == 'YES'\nassert solution('100 99') == 'YES'\nassert solution('100 50') == 'NO'\nassert solution('100 2') == 'YES'\nassert solution('100 1') == 'YES'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 7''') == 'YES'\nassert solution('''100 99''') == 'YES'\nassert solution('''100 50''') == 'NO'\nassert solution('''50 10''') == 'YES'\nassert solution('''100 30''') == 'NO'\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"YES\"\nassert solution(\"100 99\") == \"YES\"\nassert solution(\"100 50\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 7''') == 'YES'\nassert solution('''100 99''') == 'YES'\nassert solution('''100 50''') == 'NO'\n\n\n\n---------------------------------------------------------------------------------"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 7\\n\") == \"YES\\n\"\nassert solution(\"100 99\\n\") == \"YES\\n\"\nassert solution(\"100 50\\n\") == \"NO\\n\"\nassert solution(\"30 26\\n\") == \"YES\\n\"\nassert solution(\"100 9\\n\") == \"YES\\n\"\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 54,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 99\\n') == 'YES'\nassert solution('3 7\\n') == 'YES'\nassert solution('100 50\\n') == 'NO'\nassert solution('1 2\\n') == 'YES'\nassert solution('1 1\\n') == 'NO'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == 'Yes'\nassert solution('5 2') == 'No'\nassert solution('13 2') == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('2 3') == 'No'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10 3 5 8 12 21 43 46 30 35 31') == 'Yes 2 3 5 8 12 21 43 46 30 35 31'\nassert solution('2 3 3 5 8 12 21 43 46 30 35 31') == 'No'\nassert solution('1 2 3 5 8 12 21 43 46 30 35 31') == 'Yes -1 -1 2 3 3 -1 -1 -1 -1 -1 -1 -1'\nassert solution('2 3 3 5 8 12 21 43 46 30 35 31') == 'No'\nassert solution('2 3 3 5 8 12 21 43 46 30 35 31') == 'Yes -1 -1 2 3 3 -1 -1 -1 -1 -1 -1 -1'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"No\"\nassert solution(\"13 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"12 4\") == \"Yes\"\nassert solution(\"13 3\") == \"No\"\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''23 5\n''') == 'Yes'\nassert solution('''13 2\n''') == 'No'\nassert solution('''1 2\n''') == 'Yes'\nassert solution('''0 0\n''') == 'Yes'\nassert solution('''3 3 2 1 0 \n''') == 'Yes'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''23 5''') == 'Yes\\n3 3 2 1 0'\nassert solution('''13 2''') == 'No'\nassert solution('''1 2''') == 'Yes\\n-1 -1'\nassert solution('''8 3''') == 'No'\nassert solution('''7 3''') == 'Yes\\n2 1 0'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''23 5''') == 'Yes\\n3 3 2 1 0'\nassert solution('''13 2''') == 'No'\nassert solution('''1 2''') == 'Yes\\n-1 -1'\n'''\nassert solution('''2 2''') == 'Yes\\n0 1'\nassert solution('''2 3''') == 'Yes\\n1 2'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\n23') == 'Yes\\n3 3 2 1 0'\nassert solution('1 2\\n23') == 'No'\nassert solution('3 2\\n13') == 'No'\nassert solution('4 2\\n13') == 'Yes\\n4 1 1 0'\nassert solution('4 2\\n13') == 'Yes\\n4 1 1 0'\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n\") == \"Yes\\n3 3 2 1 0\"\nassert solution(\"13 2\\n\") == \"No\"\nassert solution(\"1 2\\n\") == \"Yes\\n-1 -1\"\nassert solution(\"1 2\\n\") == \"Yes\\n-1 -1\"\nassert solution(\"1 2\\n\") == \"Yes\\n-1 -1\"\n"
    },
    {
        "number": 55,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'No'\nassert solution('3 2') == 'No'\nassert solution('23 5') == 'Yes\\n3 3 2 1 0'\nassert solution('13 2') == 'Yes\\n3 3 2 1 0'\nassert solution('1 2') == 'Yes\\n-1 -1'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10\\n3') == '5'\nassert solution('1 10\\n4') == '5'\nassert solution('1 10\\n5') == '6'\nassert solution('1 10\\n6') == '6'\nassert solution('1 10\\n7') == '6'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == 4\nassert solution(\"4 8\") == 6\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '6'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 5\\n') == '4\\n'\nassert solution('4 8\\n') == '6\\n'\nassert solution('3 1\\n') == '3\\n'\nassert solution('1 2\\n') == '0\\n'\nassert solution('5 1\\n') == '5\\n'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5') == '4'\nassert solution('4 8') == '6'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3 4 5') == '10'\nassert solution('1 2 3 4 5 6 7') == '12'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4') == '4'\nassert solution('1 4') == '5'\nassert solution('10 15') == '10'\nassert solution('5 4') == '6'\nassert solution('9 10') == '4'\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 56,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"4 8\") == \"6\"\nassert solution(\"5 1\") == \"6\"\nassert solution(\"10 5\") == \"11\"\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\nassert solution('''2\n2 3\n-1 -2''') == '3'\nassert solution('''2\n-1 -1\n-2 -3''') == '-1'\nassert solution('''2\n0 0\n0 1''') == '1'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\nassert solution('''3\n0 0\n0 1\n0 2''') == '-1'\nassert solution('''5\n3 4\n4 2\n5 4\n6 2\n7 1''') == '0'\nassert solution('''5\n7 1\n4 2\n6 3\n5 4\n2 1''') == '-1'"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1'\n\n\n-----\n\nimport sys\nfrom collections import namedtuple\n\nCoord = namedtuple('Coord', ['x', 'y'])"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n1 1''') == '1'\nassert solution('''1\n1 1''') == '-1'\nassert solution('''0\n0 0\n-1 1''') == '-1'\nassert solution('''3\n-10 -10\n0 0\n0 0\n10 10\n-10 10''') == '0'\n'''\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '-1'\n\n\"\"\"\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 0\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '-1'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1 1') == '1'\nassert solution('1 1\\n1 1') == '-1'\nassert solution('0 0\\n1 1\\n0 1') == '1'\nassert solution('0 0\\n1 1\\n2 1') == '0'\nassert solution('1 1\\n1 1\\n0 1') == '-1'\n"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '1'\nassert solution(input()) == '-1'\n\"\"\"\n\nn = int(input())\nl = []\nfor _ in range(n):\n    l.append(tuple(map(int, input().split())))\n\nl.sort()"
    },
    {
        "number": 57,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0\n1 1\n''') == '1'\nassert solution('''\n1\n1 1\n''') == '-1'\nassert solution('''\n5\n0 0\n1 1\n1 0\n1 -1\n''') == '1'\nassert solution('''\n5\n0 0\n1 1\n-1 0\n-1 -1\n''') == '-1'\nassert solution('''\n5\n1 1\n-1 -1\n1 -1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"8\"\"\") == \"1\"\nassert solution(\"\"\"5\"\"\") == \"6\"\nassert solution(\"\"\"6\"\"\") == \"4\"\nassert solution(\"\"\"20\"\"\") == \"2\"\nassert solution(\"\"\"10\"\"\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n8\n1\n2\n\"\"\") == '1'\n\nassert solution(\"\"\"\\\n5\n3\n4\n\"\"\") == '6'\n\nassert solution(\"\"\"\\\n20\n5\n6\n\"\"\") == '4'\n\nassert solution(\"\"\"\\\n3\n1\n2\n\"\"\") == '1'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\"\nimport sys"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n3\\n1') == '1'\nassert solution('4\\n1\\n1') == '0'\nassert solution('20\\n5\\n6') == '2'\nassert solution('2\\n2\\n1') == '2'\nassert solution('2\\n3\\n2') == '1'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n2\\n4') == '4'\nassert solution('8\\n1\\n2') == '1'\nassert solution('20\\n5\\n6') == '2'\nassert solution('6\\n4\\n2') == '4'\nassert solution('6\\n4\\n6') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''8''') == '1'\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\nassert solution('''5''') == '6'\nassert solution('''6''') == '4'\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8\\n1\\n2\\n\") == \"1\\n\"\nassert solution(\"5\\n3\\n4\\n\") == \"6\\n\"\nassert solution(\"6\\n4\\n2\\n\") == \"4\\n\"\nassert solution(\"20\\n5\\n6\\n\") == \"2\\n\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8''') == '''1'''\nassert solution('''5''') == '''6'''\nassert solution('''6''') == '''4'''\nassert solution('''20''') == '''2'''\nassert solution('''10''') == '''4'''\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n1\\n\") == \"2\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\"\nassert solution(\"2\\n3\\n2\\n\") == \"3\"\nassert solution(\"2\\n3\\n3\\n\") == \"3\"\n"
    },
    {
        "number": 58,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('4\\n2\\n1') == '3'\nassert solution('8\\n2\\n1') == '6'\nassert solution('8\\n2\\n1') == '6'\nassert solution('1\\n1\\n1') == '1'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 5 3 4 6\\n01110\\n') == 'YES'\nassert solution('1 2 5 3 4 6\\n01010\\n') == 'NO'\nassert solution('1 2 5 3 4 6\\n01110\\n') == 'NO'\nassert solution('1 2 5 3 4 6\\n01010\\n') == 'NO'\nassert solution('1 2 5 3 4 6\\n01110\\n') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6\n1 2 5 3 4 6\n01110\n''') == 'YES'\nassert solution('''6\n1 2 5 3 4 6\n01010\n''') == 'NO'\nassert solution('''10\n11\n11\n0\n1\n0\n0\n1\n1\n1\n1\n1\n0\n1\n''') == 'YES'\nassert solution('''6\n1 2 5 3 4 6\n01010\n''') == 'NO'\nassert solution('''4\n2 3 4 1\n0000\n''') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 5 3 4 6\\n01110') == 'YES'\nassert solution('1 2 5 3 4 6\\n01010') == 'NO'\nassert solution('1 2 5 3 4 6\\n00010') == 'YES'\nassert solution('1 2 5 3 4 6\\n00111') == 'YES'\nassert solution('1 2 5 3 4 6\\n01011') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 5 3 4 6') == 'YES'\nassert solution('01110') == 'YES'\nassert solution('01010') == 'NO'\nassert solution('00010') == 'NO'\nassert solution('00111') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 5 3 4 6\\n01110') == 'YES'\nassert solution('6\\n1 2 5 3 4 6\\n01010') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1110000') == 'YES'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1110001') == 'NO'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n1000000') == 'YES'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5 3 4 6\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\") == \"NO\"\nassert solution(\"01110\") == \"YES\"\nassert solution(\"01010\") == \"NO\"\n\n\n-----"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == 'NO'\nassert solution('1\\n3\\n2') == 'YES'\nassert solution('1\\n2\\n3\\n4') == 'NO'\nassert solution('1\\n4\\n2\\n3') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n5') == 'YES'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5 3 4 6\\n01110\") == \"YES\"\nassert solution(\"1 2 5 3 4 6\\n01010\") == \"NO\"\nassert solution(\"2 4 6 3 5 1\\n0110101010\") == \"YES\"\nassert solution(\"2 4 6 3 5 1\\n01010101010\") == \"NO\"\nassert solution(\"2 4 6 3 5 1\\n0101010\") == \"YES\"\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6\n1 2 5 3 4 6\n01110''') == 'YES'\nassert solution('''6\n1 2 5 3 4 6\n01010''') == 'NO'\nassert solution('''6\n1 2 5 3 4 6\n01001''') == 'YES'\nassert solution('''6\n1 2 5 3 4 6\n00010''') == 'NO'\nassert solution('''6\n1 2 5 3 4 6\n01010''') == 'NO'\n"
    },
    {
        "number": 59,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nassert solution('6d') == '21'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1f') == 1\nassert solution('2d') == 10\nassert solution('4a') == 11\nassert solution('5e') == 18\nassert solution('6r') == 20\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1a') == 1\nassert solution('1b') == 1\nassert solution('1c') == 1\nassert solution('1d') == 1\nassert solution('1e') == 1\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1f\") == \"1\"\nassert solution(\"2d\") == \"10\"\nassert solution(\"4a\") == \"11\"\nassert solution(\"5e\") == \"18\"\nprint(solution(input()))\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1d') == '1'\nassert solution('2d') == '10'\nassert solution('3d') == '11'\nassert solution('4d') == '18'\nassert solution('5d') == '19'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\n\n\n\"\"\"\nfrom datetime import timedelta"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nassert solution('6e') == '25'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1a') == '0'\nassert solution('1b') == '1'\nassert solution('1c') == '2'\nassert solution('1d') == '3'\nassert solution('1e') == '4'\n"
    },
    {
        "number": 60,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1f') == '1'\nassert solution('2d') == '10'\nassert solution('4a') == '11'\nassert solution('5e') == '18'\nassert solution('6e') == '26'\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7') == '<'\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4') == '>'\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0') == '<'\n\n\n\"\"\"\n\n\"\"\"\n\nSolution:\n\n-----Template---"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 8\\n89 123') == '>'\nassert solution('11 3\\n89 123') == '<'\nassert solution('11 9\\n89 123') == '='\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\\n') == '<'\nassert solution('3 3\\n1 0 2\\n2 5\\n2 4\\n') == '='\nassert solution('7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n') == '<'\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n1 0 1 1 1 1\\n2 10\\n4 7\") == \"=\"\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\\n\") == \"<\"\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n\") == \">\"\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\\n\") == \"<\"\n\n\"\"\""
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '<'\n\nassert solution('''\n3 3\n1 0 2\n2 5\n2 4\n''') == '<'\n\nassert solution('''\n7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '<'\n\nassert solution('''\n7 3\n5 0 0\n5 2 3 4\n0 0 0 0 0 0\n0 0 0 0 0 0\n''') == '='\n\nassert solution('''\n7 2\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n''') == '='"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '<'\n\nassert solution('''3 3\n1 0 2\n2 5\n2 4\n''') == '='\n\nassert solution('''7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '>'\n\nassert solution('''3 3\n1 0 2\n2 5\n2 4\n''') == '<'\n\nassert solution('''4 4\n1 0 1 0\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '='"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 10\\n2 4\\n\") == '<'\nassert solution(\"3 3\\n1 0 2\\n2 5\\n2 4\\n\") == '='\nassert solution(\"7 16\\n15 15 4 0 0 7 10\\n7 9\\n4 8 0 3 1 5 0\\n\") == '>'\nassert solution(\"10 10\\n1 0 2\\n2 5\\n2 4\\n\") == '<'\nassert solution(\"4 16\\n1 2 3 4\\n2 4 4 4 4\\n3 4 4 4 4\\n4 4 4 4 4\\n\") == '='\n\"\"\""
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '<'\n'''\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 2\n1 0 1 1 1 1\n2 10\n4 7\n''') == '<'\n\nassert solution('''3 3\n1 0 2\n2 5\n2 4\n''') == '<'\n\nassert solution('''7 16\n15 15 4 0 0 7 10\n7 9\n4 8 0 3 1 5 0\n''') == '>'\n"
    },
    {
        "number": 61,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 2') == '<'\nassert solution('3 3') == '>'\nassert solution('7 16') == '>'\nassert solution('15 15 4 0 0 7 10') == '<'"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == 'BitLGM'\nassert solution('2\\n1 2\\n') == 'BitAryo'\nassert solution('3\\n1 2 1\\n') == 'BitLGM'\nassert solution('4\\n1 2 3 4\\n') == 'BitLGM'\nassert solution('5\\n1 2 3 4 5\\n') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1\n''') == 'BitLGM'\nassert solution('''1 2\n''') == 'BitAryo'\nassert solution('''1 1\n2 1\n''') == 'BitLGM'\nassert solution('''1 2\n2 1\n''') == 'BitAryo'\nassert solution('''1 1\n1 1\n''') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2\\n\") == \"BitLGM\"\nassert solution(\"2 1\\n1 2\\n\") == \"BitAryo\"\nassert solution(\"3 1\\n1 2 1\\n\") == \"BitLGM\"\nassert solution(\"3 1\\n2 1\\n\") == \"BitAryo\"\nassert solution(\"1 2\\n1 2\\n\") == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"BitLGM\"\nassert solution(stdin) == \"BitAryo\"\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 1\n''') == 'BitLGM'\nassert solution('''1 2 1\n''') == 'BitAryo'\nassert solution('''1 1 1\n''') == 'BitLGM'\nassert solution('''1 2 2\n''') == 'BitAryo'\nassert solution('''1 1 2\n''') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == 'BitLGM'\nassert solution('''1 2 1''') == 'BitAryo'\nassert solution('''2\n1 2 1''') == 'BitLGM'\nassert solution('''3\n1 2 1''') == 'BitAryo'\nassert solution('''1\n1\n2\n1\n2\n1\n2''') == 'BitAryo'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n') == \"BitLGM\"\nassert solution('2\\n1 2\\n') == \"BitAryo\"\nassert solution('3\\n1 2 1\\n') == \"BitLGM\"\nassert solution('4\\n1 2 1 1\\n') == \"BitAryo\"\nassert solution('5\\n1 2 1 1 1\\n') == \"BitLGM\"\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1') == 'BitLGM'\nassert solution('2\\n1 2\\n') == 'BitAryo'\nassert solution('3\\n1 2 1\\n') == 'BitLGM'\n\n'''\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'BitLGM'\nassert solution('2\\n1 2\\n') == 'BitAryo'\nassert solution('3\\n1 2 1\\n') == 'BitLGM'\nassert solution('3\\n2 1 1\\n') == 'BitAryo'\nassert solution('3\\n2 2 1\\n') == 'BitLGM'\n"
    },
    {
        "number": 62,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == 'BitAryo'\nassert solution('2\\n1 2\\n') == 'BitLGM'\nassert solution('3\\n1 2 1\\n') == 'BitLGM'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 1 14') == '1'\nassert solution('6 2 8') == '4'\nassert solution('3 6') == '1'\n\n\n'''\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3') == '4'\nassert solution('2 2') == '4'\nassert solution('3 2') == '2'\nassert solution('4 4') == '6'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\") == \"1\"\nassert solution(\"2 2 4 4 6 4 8 8 8 12 12 16 16 16 32 32 32\") == \"2\"\nassert solution
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4\\n6 2 8') == '4'\nassert solution('3 6\\n9 1 14') == '1'\nassert solution('3 6\\n10 1 14') == '0'\nassert solution('5 8\\n1 2 3 4 5 6') == '2'\nassert solution('5 8\\n1 2 3 4 5 7') == '0'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n6 2 8') == '4'\nassert solution('3 6\\n9 1 14') == '1'"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 4\\n6 2 8\\n') == '4'\nassert solution('3 6\\n9 1 14\\n') == '1'\nassert solution('3 1\\n1 1 1\\n') == '1'\nassert solution('3 7\\n1 1 1 1 1 1 1\\n') == '0'\nassert solution('3 8\\n1 1 1 1 1 1 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n6 2 8\") == \"4\\n\"\nassert solution(\"3 6\\n9 1 14\") == \"1\\n\"\n\n\n\"\"\"\nfrom collections import Counter, defaultdict\nfrom fractions import Fraction\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 2 8') == '4'\nassert solution('3 6') == '1'\nassert solution('9 1 14') == '1'\nassert solution('5 2 4 3 5 6') == '3'\nassert solution('5 7 9 1 2 3 4 5 6') == '5'\n"
    },
    {
        "number": 63,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9 1 14') == '1'\nassert solution('6 2 8') == '4'\nassert solution('3 6') == '1'\nassert solution('9 1 14') == '1'\nassert solution('3 6') == '1'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('6 3') == 'NO'\nassert solution('4 4') == 'NO'\nassert solution('2 4') == 'YES'\nassert solution('4 4') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('abcd') is None\nassert solution('aabb') == 'YES'\nassert solution('aacaab') == 'NO'"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2\\naabb\\n') == 'YES'\nassert solution('5 3\\nacacac\\n') == 'NO'\nassert solution('3 2\\nbb\\n') == 'NO'\nassert solution('6 3\\naacaab\\n') == 'YES'\nassert solution('10 3\\nacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacacac\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input(\"\")) == input(\"\")\nassert solution(input(\"4\\naabb\")) == input(\"YES\\naabb\")\nassert solution(input(\"6\\naacaab\")) == input(\"NO\")\n\n\"\"\"\n\nn, k = map(int, stdin.readline().strip().split())\ns = stdin.readline().strip()\n\nb = {}\nfor i in range(n):\n    if s[i] in b:\n        b[s[i]] += 1\n    else:\n        b[s[i]] = 1\n\nk_val = len(set(s))"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('6 3') == 'NO'\nassert solution('2 1') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('2 3') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2\\naaab\\naaabb\\naaabbb\\naaa') == 'YES'\nassert solution('2 2\\naaab\\naaa') == 'NO'\nassert solution('3 2\\naaab\\naaabb\\naaabbb\\naaa') == 'NO'\nassert solution('3 2\\naaab\\naaa') == 'NO'\nassert solution('1 1\\naaab\\naaabb\\naaabbb\\naaa') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 2\\naabb') == 'YES'\nassert solution('6 3\\naacaab') == 'NO'\nassert solution('4 3\\naaaab') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 2\naabb\n''') == 'YES'\nassert solution('''6 3\naacaab\n''') == 'NO'\nassert solution('''6 4\naacaab\n''') == 'YES'\nassert solution('''6 5\naacaab\n''') == 'YES'\nassert solution('''7 3\naacaab\n''') == 'YES'\n"
    },
    {
        "number": 64,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\naabb') == 'YES'\nassert solution('6 3\\naacaab') == 'NO'\nassert solution('2 1\\na') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3') == '0'\nassert solution('9\\n2 1 3 5 4 1 2 3 1') == '3'"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 3\\n\") == \"1\"\nassert solution(\"9\\n2 1 3 5 4 1 2 3 1\\n\") == \"3\"\nassert solution(\"2\\n5 6 5\\n\") == \"2\"\n\n\n-----A brief glimpse of the problem-----\n\nA point A(x, y) is the minimum distance between two points if you are at A and two points are A and B, let's denote them by A' and B' respectively.\n\nA'(x, y) is the closest point to A(x, y) which is at least twice as far from A as A itself.\n\nB'(x, y) is the closest point to A'(x, y) which is at least twice as far from A' as A' itself.\n\nThe distance between two points A' and B' is the distance between A' and B'.\n\nFor example, the distance between A'(2, 3) and B'(1, 1) is 2.\n\nGiven a point A(x, y) and a point B(x', y'), we want to know the minimum distance between two points A and B.\n\nIt can be computed as follows:\n\nThe distance between A' and B' is the distance between A and B'.\nThe distance between A and B' is the distance between A' and B'.\nThe distance between A' and B' is the distance between A and B'.\nHence the distance between A' and B' is the minimum of these three.\n\nImplement a function solution(stdin: str) -> str which reads from stdin a pair of integers x and y and calculates the minimum distance between two points A and B.\n\nIn the first sample, A and B are both at the origin, therefore the distance between them is 0.\n\nIn the second sample, A is at (2, 3) and B is at (1, 1), therefore the distance between them is 2.\n\nIn the third sample, A is at (1, 1) and B is at (2, 3), therefore the distance between them is 1.\n\nIn the fourth sample, A is at (1, 1) and B is at (1, 2), therefore the distance between them is 1.\n\nIn the fifth sample, A is at (1, 1) and B is at (2, 3), therefore the distance between them is 1.\n\nIn the sixth sample, A is at (1, 1) and B is at (1, 2), therefore the distance between them is 1.\n\nIn the seventh sample, A is at (1, 1) and B is at (2, 3), therefore the distance between them is 1.\n\nIn the eighth sample, A is at (1, 1) and B is at (2, 4), therefore the distance between them is 3.\n\nIn the ninth sample, A is at (1, 1) and B is at (2, 4), therefore the distance between them is 3.\n\nIn the tenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the eleventh sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the twelfth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the thirteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the fourteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the fifteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the sixteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the seventeenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the eighteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the nineteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the twentieth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the eleventh sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the twelfth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the thirteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the fourteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the fifteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the sixteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the seventeenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the eighteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the nineteenth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\nIn the twentieth sample, A is at (1, 1) and B is at (3, 4), therefore the distance between them is 4.\n\n\n\"\"\""
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n3 3\n''') == '1'\nassert solution('''3\n5 6 5\n''') == '2'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n5 6 5''') == '1'\nassert solution('''9\n2 1 3 5 4 1 2 3 1''') == '3'\nprint('Test case passed')\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3\") == \"1\"\nassert solution(\"3\\n5 6 5\") == \"2\"\nassert solution(\"9\\n2 1 3 5 4 1 2 3 1\") == \"3\"\n\n\n\"\"\"\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 3\\n\") == \"1\"\nassert solution(\"3\\n5 6 5\\n\") == \"2\"\nassert solution(\"9\\n2 1 3 5 4 1 2 3 1\\n\") == \"3\"\n\n\n\"\"\"\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n3 3\n''') == '1'\nassert solution('''3\n5 6 5\n''') == '2'\nassert solution('''9\n2 1 3 5 4 1 2 3 1\n''') == '3'\nassert solution('''9\n1 3 1 3 1 1 1 1 1\n''') == '1'\nassert solution('''9\n1 1 1 1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n3 3') == '1'\nassert solution('2\\n3 3') == '1'\nassert solution('3\\n3 3') == '0'\nassert solution('3\\n3 3') == '0'\nassert solution('3\\n3 3') == '0'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3\\n') == '1'\nassert solution('3\\n3 3\\n') == '0'\nassert solution('3\\n5 6 5\\n') == '2'\nassert solution('9\\n2 1 3 5 4 1 2 3 1\\n') == '3'\n"
    },
    {
        "number": 65,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n3') == '1'\nassert solution('3\\n5 6 5') == '2'\nassert solution('3\\n5 6 5') == '2'\nassert solution('3\\n1 2 3 4 5 6') == '1'\nassert solution('3\\n1 2 3 4 5 6') == '1'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\n'''\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\nassert solution('1 1 1') == '1/1'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 3 2''') == '3/10'\nassert solution('''7 1 2''') == '3/7'\n'''\n\n\nfrom fractions import Fraction\nimport itertools"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '1/2'\nassert solution('2 3 4') == '2/3'\nassert solution('3 4 5') == '1/2'\nassert solution('4 5 6') == '1/3'\nassert solution('5 6 7') == '1/4'\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\nassert solution(\"7 1 2\") == \"3/7\"\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nfrom fractions import gcd"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\nassert solution(\"7 1 4\") == \"1/4\"\nassert solution(\"7 1 4\") == \"1/4\"\n"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10 3 2\") == \"3/10\"\nassert solution(\"7 1 2\") == \"3/7\"\n\n\"\"\"\n\n\nimport sys\nfrom fractions import Fraction"
    },
    {
        "number": 66,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 3 2') == '3/10'\nassert solution('7 1 2') == '3/7'\n\n\n\"\"\""
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 3 1') == '?'\nassert solution('1 3 0') == '+'\nassert solution('2 0 1') == '?'\nassert solution('3 0 1') == '?'\nassert solution('3 0 2') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 7 0\") == '-', 'Failed Test 1'\nassert solution(\"2 0 1\") == '+', 'Failed Test 2'\nassert solution(\"1 1 0\") == '0', 'Failed Test 3'\nassert solution(\"0 0 1\") == '?', 'Failed Test 4'\n\"\"\""
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\n\n\n\n\"\"\"\n\nx, y, z = map(int, input().split())\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 0 0') == '?'\n\n\n\"\"\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 7 0') == '-', 'Test 1'\nassert solution('2 0 1') == '+', 'Test 2'\nassert solution('1 1 0') == '0', 'Test 3'\nassert solution('0 0 1') == '?', 'Test 4'\nassert solution('7 0 1') == '?', 'Test 5'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\nfrom collections import Counter\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 7 0\") == \"-\nassert solution(\"2 0 1\") == \"+\nassert solution(\"1 1 0\") == \"0\"\nassert solution(\"0 0 1\") == \"?\"\nassert solution(\"0 0 1\") == \"?\"\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 7 0') == '-'\nassert solution('2 0 1') == '+'\nassert solution('1 1 0') == '0'\nassert solution('0 0 1') == '?'\nassert solution('0 0 1') == '?'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == '-', '0 1 0'\nassert solution('3 7 0') == '-', '3 7 0'\nassert solution('2 0 1') == '+', '2 0 1'\nassert solution('1 1 0') == '0', '1 1 0'\nassert solution('0 0 1') == '?', '0 0 1'\n"
    },
    {
        "number": 67,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 7 0\") == '-'\nassert solution(\"2 0 1\") == '+'\nassert solution(\"1 1 0\") == '0'\nassert solution(\"0 0 1\") == '?'\nassert solution(\"0 1 1\") == '?'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\nRURUU\n-2 3\n''') == '3'\n\nassert solution('''4\nRULR\n1 1\n''') == '0'\n\nassert solution('''3\nUUU\n100 100\n''') == '-1'\nassert solution('''3\nRULR\n2 2\n''') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\nassert solution(stdin) == stdin\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\nRURUU\\n-2 3\\n') == '3'\nassert solution('4\\nRULR\\n1 1\\n') == '0'\nassert solution('3\\nUUU\\n100 100\\n') == '-1'\nassert solution('5\\nRURURURUUUUUUUUUUUU\\n0 0\\n') == '6'\nassert solution('6\\nRURURURURUUUUUUUUUUUURRRRURRRRRRRRRR\\n1 0\\n') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\nRURUU\n-2 3\n''') == '3'\n\nassert solution('''4\nRULR\n1 1\n''') == '0'\n\nassert solution('''3\nUUU\n100 100\n''') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('RRRRRRRRRRRRRRRRRRRUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU') == '-1'\nassert solution('RULR') == '0'\nassert solution('UUUU') == '-1'\nassert solution('LLL') == '1'\nassert solution('RUDD') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\nRURUU\\n-2 3\\n') == '3'\nassert solution('4\\nRULR\\n1 1\\n') == '0'\nassert solution('3\\nUUU\\n100 100\\n') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''5\nRURUU\n-2 3'''\n    ) == '3'\n\nassert solution(\n'''4\nRULR\n1 1'''\n    ) == '0'\n\nassert solution(\n'''3\nUUU\n100 100'''\n    ) == '-1'\n\nassert solution(\n'''9\nRRRDDDDDDDD\n-1 -1'''\n    ) == '4'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nRURUU\\n-2 3') == '3'\nassert solution('4\\nRULR\\n1 1') == '0'\nassert solution('3\\nUUU\\n100 100') == '-1'\nassert solution('3\\nRURRRR\\n-2 2') == '-1'\nassert solution('2\\nRRLLL\\n0 0') == '-1'\n"
    },
    {
        "number": 68,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('010110') == 0\nassert solution('10001001010010') == 3\nassert solution('1010') == 1\nassert solution('11101001010010') == -1\nassert solution('10101') == 1\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n''') == '3'\nassert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n11\n''') == '2'\nassert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n11\n''') == '1'\nassert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n11\n''') == '0'\nassert solution('''6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n11\n''') == '-1'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys\n\nT = int(sys.stdin.readline())\n\nfor t in range(T):\n    n, x = map(int, sys.stdin.readline().split())\n    s = sys.stdin.readline()\n    if n == 0:\n        print(0)\n        continue\n    if s[0] == '0':\n        print(n - 1)\n    else:\n        print(n)\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string\n\"\"\""
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('010010\\n') == '3'\nassert solution('0\\n') == '0'\nassert solution('0\\n0\\n') == '0'\nassert solution('0\\n0\\n1') == '0'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('010010') == 3\nassert solution('010100') == -1\nassert solution('10101') == 2\nassert solution('0') == 0\nassert solution('0010101010101010101010') == 10\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 0\") == \"\"\nassert solution(\"01\") == \"\"\nassert solution(\"01000\") == \"\"\nassert solution(\"1010\") == \"\"\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0111\") == \"0111\"\nassert solution(\"1010\") == \"0111\"\nassert solution(\"0000\") == \"0111\"\nassert solution(\"1101\") == \"0111\"\n"
    },
    {
        "number": 69,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n    30020 3\n\"\"\"\n) == \"1\"\n\n\nassert solution(\n\"\"\"\n    100 9\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n    10203049 2\n\"\"\"\n) == \"3\"\n\n\nassert solution(\n\"\"\"\n    100 9\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n    1\n\"\"\"\n) == \"0\""
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('100 103049 2') == '3'\nassert solution('100091928 2') == '1'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"30020 3\") == \"1\"\nassert solution(\"100 9\") == \"2\"\nassert solution(\"10203049 2\") == \"3\"\nassert solution(\"123876 8\") == \"3\"\nassert solution(\"10000002\") == \"2\"\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('10233028 2') == '2'\nassert solution('204293921 1') == '3'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n100 9\n'''\n) == '1'\nassert solution(\n'''\n10203049 2\n'''\n) == '3'\nassert solution(\n'''\n10203049 4\n'''\n) == '2'\nassert solution(\n'''\n10203049 1\n'''\n) == '0'\nassert solution(\n'''\n100 9\n'''\n) == '1'\n"
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('30020 3\\n') == '1'\nassert solution('100 9\\n') == '2'\nassert solution('10203049 2\\n') == '3'\nassert solution
    },
    {
        "number": 70,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('30020 3') == '1'\nassert solution('100 9') == '2'\nassert solution('10203049 2') == '3'\nassert solution('10203039 2') == '1'\nassert solution('1009091 2') == '2'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\n\n\n\"\"\"\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''\n1 3 8 1 1\n''') == '3 2 3'\nassert solution(\n'''\n4 2 9 4 2\n''') == '2 1 1'\nassert solution(\n'''\n5 5 25 4 3\n''') == '1 1 1'\nassert solution(\n'''\n100 100 1000000000000000000 100 100\n''') == '101010101010101 50505050505051 50505050505051'"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''1 3 8 1 1''') == '3 2 3'\nassert solution(\n'''4 2 9 4 2''') == '2 1 1'\nassert solution(\n'''5 5 25 4 3''') == '1 1 1'\nassert solution(\n'''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution(\n'''1 1 1''') == '1 1 1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''1 2 3 4 5 6 7 8 9''') == '1 2 1'\n'''\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\n\n\n-----Best Practice-----\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 3 8 1 1''') == '3 2 3'\nassert solution('''4 2 9 4 2''') == '2 1 1'\nassert solution('''5 5 25 4 3''') == '1 1 1'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\nassert solution('''100 100 1000000000000000000 100 100''') == '101010101010101 50505050505051 50505050505051'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 8 1 1') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 71,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 2 3'\nassert solution('4 2 9 4 2') == '2 1 1'\nassert solution('5 5 25 4 3') == '1 1 1'\nassert solution('100 100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\nassert solution('100 1000000000000000000 100 100') == '101010101010101 50505050505051 50505050505051'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3'''\n) == 'Kuro'\n\nassert solution(\n'''7'''\n) == 'Shiro'\n\nassert solution(\n'''15'''\n) == 'Draw'\nassert solution(\n'''foPaErcvJ'''\n) == 'Kuro'\n\nassert solution(\n'''mZaxowpbt'''\n) == 'Kuro'"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"Kuro\"\nassert solution(\"4\") == \"Shiro\"\nassert solution(\"5\") == \"Kuro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\"\n) == \"Kuro\"\n\nassert solution(\n    \"7\"\n) == \"Shiro\"\n\nassert solution(\n    \"15\"\n) == \"Draw\"\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == \"Kuro\"\nassert solution('''treasurehunt''') == \"Shiro\"\nassert solution('''abcabc''') == \"Kuro\"\nassert solution('''foPaErcvJ''') == \"Shiro\"\nassert solution('''mZaxowpbt''') == \"Shiro\"\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"Kuro\"\nassert solution(\"7\") == \"Shiro\"\nassert solution(\"15\") == \"Draw\"\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\\nKuro\\nShiro\\nKatie\") == \"Kuro\"\nassert solution(\"7\\ntreasurehunt\\nthreefriends\\nhiCodeforces\") == \"Shiro\"\nassert solution(\"1\\nabcabc\\ncbabac\\nababca\") == \"Katie\"\nassert solution(\"15\\nfoPaErcvJ\\nmZaxowpbt\\nmkuOlaHRE\") == \"Draw\"\nprint(solution(stdin))\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0\n    ''') == 'Kuro'\nassert solution('''1\n    ''') == 'Kuro'\nassert solution('''2\n    ''') == 'Kuro'\nassert solution('''3\n    ''') == 'Kuro'\nassert solution('''4\n    ''') == 'Kuro'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n' + '1\\n' + '1\\n' + '3\\n' + 'Kuroo\\n' + 'Shiro\\n' + 'Katie\\n') == 'Shiro'\nassert solution('7\\n' + 'treasurehunt\\n' + 'threefriends\\n' + 'hiCodeforces\\n') == 'Kuro'\nassert solution('15\\n' + 'foPaErcvJ\\n' +'mZaxowpbt\\n' +'mkuOlaHRE\\n') == 'Draw'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == 'Kuro'\nassert solution('Kuroo') == 'Kuro'\nassert solution('treasurehunt') == 'Kuro'\nassert solution('threefriends') == 'Shiro'\nassert solution('hiCodeforces') == 'Shiro'\n"
    },
    {
        "number": 72,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Kuro\"\nassert solution(\"7\") == \"Shiro\"\nassert solution(\"15\") == \"Draw\"\nassert solution(\"treasurehunt\") == \"Shiro\"\nassert solution(\"threefriends\") == \"Kuro\"\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('15 2 300 0 0') == '15'\nassert solution('15 2 300 0 0') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 5 10 5 4''') == '1'\nassert solution('''12 4 12 4 1''') == '3'\nassert solution('''15 1 100 0 0''') == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 4 12 4 1') == '1'\nassert solution('15 1 100 0 0') == '15'\nassert solution('10 2 10 3 5') == '9'\nassert solution('10 1 10 1 1') == '10'\nassert solution('10 1 10 1 0') == '1'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n\nassert solution(input()) == '15'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 4 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('10 22 55 17 9') == '2'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 73,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 5 10 5 4') == '1'\nassert solution('12 4 12 4 1') == '3'\nassert solution('15 1 100 0 0') == '15'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('27') == '3', 'expecting 3'\nassert solution('2') == '0', 'expecting 0'\nassert solution('9') == '1', 'expecting 1'\nassert solution('10') == '2', 'expecting 2'\nassert solution('12') == '2', 'expecting 2'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"27\") == \"3\\n5 11 11\"\nassert solution(\"28\") == \"3\\n5 11 11\"\nassert solution(\"29\") == \"3\\n5 11 11\"\nassert solution(\"30\") == \"3\\n5 11 11\"\nassert solution(\"31\") == \"3\\n5 11 11\"\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1'\n) == '1'\n\nassert solution('2'\n) == '2'\n\nassert solution('3'\n) == '2'\n\nassert solution('4'\n) == '2'\n\nassert solution('5'\n) == '2'"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"27\") == \"3\\n5 11 11\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1000000000000\") == \"2\\n5 11 11\"\nassert solution(\"2\") == \"2\"\nassert solution(\"14\") == \"1\\n3\"\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('27') == '3\\n5 11 11'\n'''\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('27') == '3\\n5 11 11'\n\n\"\"\"\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('27') == '3 1 3'"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('1') == '0'\nassert solution('123456789') == '0'\nassert solution('1000000007') == '0'\nassert solution('2145125') == '0'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('27') == '3\\n5 11 11'\nassert solution('123') == '1\\n2\\n3'\nassert solution('1234') == '2\\n3\\n4\\n5'\nassert solution('999999') == '999\\n999\\n999\\n999'\nassert solution('1567') == '1\\n2\\n3\\n5'\n"
    },
    {
        "number": 74,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('27') == '3 5 11'\nassert solution('27') == '3 5 11'\nassert solution('23') == '3'\nassert solution('27') == '3 5 11'\nassert solution('27') == '3 5 11'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'NO'\nassert solution('3 4') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('3 4\\n*..\\n....\\n.*..\\n*..*\\n..*..\\n..*..\\n') == 'YES\\n1 2'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'YES'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'NO'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES'\nassert solution('''8 8\n**..*\n..*..*\n**..*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n*.*.*\n''') == 'YES'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 4\n..*\n....\n.*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'NO'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES'\n'''"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n.*..\n....\n.*..\n''') == 'YES'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES'\nassert solution('''3 3\n..*\n.*.\n*..\n''') == 'NO'\nassert solution('''4 3\n*****\n.*..\n.*..\n.*..\n''') == 'NO'\nassert solution('''2 3\n*..\n*..\n''') == 'NO'\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 4\\n.*..\\n....\\n.*..\\n\\n\"\n) == \"YES\\n1 2\\n\"\nassert solution(\n    \"3 3\\n..*\\n.*.\\n*..\\n\\n\"\n) == \"NO\\n\"\nassert solution(\n    \"6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n..*..\\n\"\n) == \"YES\\n3 3\\n\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n.*..\n....\n.*..\n''') == 'YES 3 3'\nassert solution('''3 3\n*.*\n.*.\n.*.\n''') == 'NO'\nassert solution('''6 5\n..*..\n..*..\n*****\n..*..\n..*..\n..*..\n''') == 'YES 3 3'\nassert solution('''7 7\n*...*\n*...*\n.*..*\n.*.*.*\n*.*.*.*\n.*.*.*.*\n.*.*.*.*\n''') == 'YES 4 5'"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 75,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4\\n.*..\\n....\\n.*..\\n') == 'YES\\n1 2'\nassert solution('3 3\\n.*..\\n.*.\\n*..\\n') == 'NO'\nassert solution('6 5\\n..*..\\n..*..\\n*****\\n..*..\\n..*..\\n') == 'YES\\n3 3'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('20 13 2 9') == '43'\nassert solution('2 2 2 2') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\n\"\"\"\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nassert solution('15 19 19 17') == '0'\nassert solution('30 19 17 17') == '0'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''9 7 3 8''') == '15'\nassert solution('''2 7 3 7''') == '14'\nassert solution('''30 6 17 19''') == '0'\nassert solution('''10 6 17 19''') == '14'\nassert solution('''20 6 17 19''') == '14'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '0'\nassert solution('2\\n2\\n2\\n2') == '4'\nassert solution('3\\n3\\n3\\n3') == '6'\nassert solution('4\\n4\\n4\\n4') == '8'\nassert solution('5\\n5\\n5\\n5') == '10'\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\nfrom sys import stdin, stdout\nfrom functools import lru_cache\n\nn, m, a, b = map(int, stdin.readline().split())\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 7 3 8\\n') == '15'\nassert solution('2 7 3 7\\n') == '14'\nassert solution('30 6 17 19\\n') == '0'\nprint(solution(input()))"
    },
    {
        "number": 76,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('9 7 3 8') == '15'\nassert solution('2 7 3 7') == '14'\nassert solution('30 6 17 19') == '0'\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('-2 2 -3 1\\n') == '3'\nassert solution('2 -5 -3\\n') == '-1'\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('-2 2 -3 1') == 3\nassert solution('2 -5 -3') == -1\nassert solution('-2 -5 -3') == -1\nassert solution('-2 -5 -3 3') == 3\n\n\n'''\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n-2 2 -3 1''') == '3'\nassert solution('''3\n2 -5 -3''') == '-1'\nassert solution('''5\n2 -5 -3 1 4 -9''') == '5'\n'''"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-2 -3 -4\\n') == -1\nassert solution('2\\n-5 -3\\n') == -1\nassert solution('2\\n-3 -1\\n') == -1\nassert solution('2\\n-1 -1\\n') == -1\nassert solution('1\\n0\\n') == 0\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 1\nassert solution('2') == 3\nassert solution('3') == -1\nassert solution('4') == 2\nassert solution('5') == 5\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output\n\n\"\"\""
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 77,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''-2 2 -3 1''') == 3\nassert solution('''-2 2 -5 -3''') == -1'''"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1') == '6'\nassert solution('2\\n1\\n1') == '2'\nassert solution('3\\n1\\n1') == '10'\nassert solution('3\\n1\\n3\\n2\\n1') == '10'\nassert solution('3\\n1\\n3\\n2\\n3') == '20'\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 3\n1 1\n1 2\n1 3\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n3 3\n1 1\n1 1\n1 3\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n4 10\n5 3\n2 1\n3 2\n5 1\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n2 10\n2 9\n1 2\n2 8\n2 7\n2 6\n2 5\n2 4\n2 3\n2 2\n2 1\n2 0\n1 2\n1 1\n1 0\n\"\"\") == \"20\"\nassert solution(\n\"\"\"\n10 10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"8\"\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 1\n1 2\n1 3''') == '6'\nassert solution('''3 3\n1 1\n1 1\n1 3''') == '2'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == '2'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == '2'\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n1 1\n1 2\n1 3\n\"\"\") == \"6\"\nassert solution(\"\"\"3 3\n1 1\n1 1\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"4 10\n5 3\n2 1\n3 2\n5 1\n\"\"\") == \"10\""
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n5 3\\n2 1\\n3 2\\n5 1\") == \"10\"\nassert solution(\"3 3\\n1 1\\n1 3\\n1 3\\n1 3\\n1 3\") == \"6\"\nassert solution(\"1 10\\n1 10\\n1 10\\n1 10\") == \"1\"\nassert solution(\"3 3\\n1 1\\n1 1\\n1 3\\n1 3\\n1 3\") == \"2\"\nassert solution(\"5 3\\n2 1\\n3 2\\n5 1\\n1 3\\n1 3\") == \"4\"\n"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3') == '6'\nassert solution('3 3') == '2'\nassert solution('3 3') == '10'\nassert solution('3 3') == '4'\n\n\n\"\"\""
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 1\n1 2\n1 3\n''') == '6'\nassert solution('''3 3\n1 1\n1 1\n1 3\n''') == '2'\nassert solution('''4 10\n5 3\n2 1\n3 2\n5 1\n''') == '10'\n\nprint(solution(input()))"
    },
    {
        "number": 78,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 1\\n1 2\\n1 3\\n') == '6'\nassert solution('4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n') == '10'\nassert solution('3 3\\n1 1\\n1 1\\n1 3\\n') == '2'\nassert solution('3 3\\n1 1\\n1 1\\n1 3\\n') == '2'\nassert solution('4 10\\n5 3\\n2 1\\n3 2\\n5 1\\n') == '10'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '333333338'\nassert solution('4') == '333333338'\nassert solution('4') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\nassert solution
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('4') == '333333338'\nassert solution('10') == '3333333349'\nassert solution('20') == '33333333489'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '333333338'\n\"\"\""
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('4') == 33333338\nassert solution('100000') == 233750000"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '333333338'\nassert solution('5') == '333333338'\nassert solution('6') == '333333338'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '333333338'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '33333333'\n"
    },
    {
        "number": 79,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''4''') == '333333338'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"1 12 1 12\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\nassert solution(\"1 10 100 1 10\") == \"4\"\nassert solution(\"50 100 3 30\") == \"0\"\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('1 12 1 12') == '4'\nassert solution('1 2 3 4') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\n\"\"\""
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\nassert solution('''50 100 3 30''') == '0'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 12 1 12''') == '4'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('1 2 3 4') == '0'\nassert solution('100 2 4 7') == '0'\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2\\n') == '2'\nassert solution('1 12 1 12\\n') == '4'\nassert solution('50 100 3 30\\n') == '0'\n\n\n\n-----Solutions-----\n\nfrom math import gcd\n"
    },
    {
        "number": 80,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2') == '2'\nassert solution('1 12 1 12') == '4'\nassert solution('50 100 3 30') == '0'\nassert solution('5 5 2 2') == '0'\nassert solution('5 2 2 1') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 10\") == \"2\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"5 10\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n\n\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\nassert solution('-5 -10') == '-1'\nassert solution('-5 -10') == '-1'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\n\"\"\""
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 10\") == \"0\"\nassert solution(\"21 31\") == \"9\"\nassert solution(\"6 10\") == \"2\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"1 0\") == \"0\"\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 10\\n') == '2'\nassert solution('21 31\\n') == '9'\nassert solution('5 10\\n') == '0'\nassert solution('5 10\\n') == '0'\nassert solution('5 5\\n') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"-2\n3\n4\n-5\n-1\n1\n2\n3\n\"\"\""
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'\nassert solution('0 0') == '0'\nassert solution('0 10') == '0'\n"
    },
    {
        "number": 81,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 10') == '2'\nassert solution('21 31') == '9'\nassert solution('5 10') == '0'"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('4 5') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('2 10\\n1 1') == '1'\nassert solution('1 5\\n1 1') == '1'\nassert solution('1 2\\n1 1') == '2'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nN,K = map(int, stdin.readline().split())\nM = map(int, stdin.readline().split())\n\nM.sort()"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 10\") == \"4\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"5 5 5\") == \"1\"\nassert solution(\"8 8 8\") == \"0\"\nassert solution(\"7 7 7\") == \"1\"\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('3 10\\n7 8 9') == '5'\nassert solution('3 5\\n7 8 9') == '4'\nassert solution('3 10\\n7 8 8') == '5'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('2 10\\n8 9') == '4'\nassert solution('2 10\\n8 9') == '4'\nassert solution('2 10\\n8 9') == '4'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data\n\"\"\"\n\nimport sys\nsys.path.append(\"../../../std_modules/\")\nfrom std_modules import *"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 10\") == \"4\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"2 10\") == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 10\\n8 9') == '4'\nassert solution('3 5\\n4 4 4') == '3'\nassert solution('5 4\\n5 5 5') == '1'\nassert solution('2 2\\n1 1') == '0'\nassert solution('2 2\\n1 1 2') == '1'\n"
    },
    {
        "number": 82,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 0') == '1'\nassert solution('2 3') == '2'\nassert solution('4 4') == '3'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n10 0 -7 2 6\\n') == '4\\n'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0\\n'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n10 0 -7 2 6\n''') == '4'\n\nassert solution('''\n7\n0 0 1 -1 0 0 2\n''') == '0'\n\nassert solution('''\n7\n0 0 1 -1 0 0 2\n''') == '0'\n\nassert solution('''\n7\n-7 -3 -2 -7 -4 -8 -10 -15 -18 -13 -11 -6\n''') == '10'\n'''"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\n1 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n-1 1 0 0 0 0') == '0'\nassert solution('7\\n0 0 0 0 0 0') == '0'\nassert solution('7\\n0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n        \"5\"\n    ) == \"4\"\nassert solution(\n        \"7\"\n    ) == \"0\"\nassert solution(\n        \"7\"\n    ) == \"0\"\nassert solution(\n        \"7\"\n    ) == \"0\"\nassert solution(\n        \"7\"\n    ) == \"0\"\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('3\\n0 -1 0 1') == '0'\nassert solution('3\\n0 -1 0 1') == '0'\nassert solution('2\\n2 2 2 2') == '2'\nassert solution('4\\n0 0 0 1') == '2'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('0\\n0 0 1 -1 0 0 2') == '0'\nassert solution('1\\n10') == '0'\nassert solution('2\\n0 0 1 -1 0 0 2') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n10 0 -7 2 6') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('7\\n0 0 1 -1 0 0 2') == '0'\nassert solution('6\\n0 0 1 -1 0 0 2') == '0'\nassert solution('6\\n0 0 1 -1 0 0 2') == '0'\n"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n10 0 -7 2 6\\n') == '4'\nassert solution('7\\n0 0 1 -1 0 0 2\\n') == '0'\nassert solution('5\\n10 2 -4 3 9 -9\\n') == '4'\nassert solution('4\\n2 2 2 2\\n') == '2'\n\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 83,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 0 -7 2 6\") == \"4\"\nassert solution(\"7\\n0 0 1 -1 0 0 2\") == \"0\"\nassert solution(\"10\\n0 0 1 -1 0 0 2\") == \"4\""
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('4') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\n\n'''\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('2 4') == '2'\nassert solution('2 4 4') == '2'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('1') == '0'\n\n\n>>> from io import StringIO\n\n>>> import sys\n>>> test_input1 = '7'\n>>> test_input2 = '14'\n>>> test_input3 = '50'\n>>> test_input4 = '1'\n>>> sys.stdin = StringIO(test_input1)\n>>> solution()\n3\n>>> sys.stdin = StringIO(test_input2)\n>>> solution()\n9\n>>> sys.stdin = StringIO(test_input3)\n>>> solution()\n1\n>>> sys.stdin = StringIO(test_input4)\n>>> solution()\n0\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''7''') == '3'\nassert solution('''14''') == '9'\nassert solution('''50''') == '1'\nassert solution('''13''') == '1'\nassert solution('''10''') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('99') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('14') == '9'\nassert solution('50') == '1'\nassert solution('123456789') == '0'\nassert solution('0123456789') == '0'\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n') == '3'\nassert solution('14\\n') == '9'\nassert solution('50\\n') == '1'\n\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 84,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('10') == '5'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 6\\n2 3\\n') == '1\\n1 6\\n2 3'\nassert solution('36 5\\n10 16\\n') == '3\\n16 5\\n5 16'\nassert solution('3 5\\n2 1\\n') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 1') == '1\\n1 2'\nassert solution('1 2\\n1 1') == '1\\n1 2'\nassert solution('1 2\\n1 1') == '1\\n1 2'\nassert solution('1 1\\n1 1') == '1\\n1 1'\nassert solution('1 1\\n1 1') == '1\\n1 1'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 4') == '3'\nassert solution('1 6') == '4'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 6\n2 3''') == '1\\n1 6\\n2 3'\nassert solution('''36 5\n10 16''') == '3\\n16 5\\n5 16'\nassert solution('''3 5\n2 1''') == '-1'\n\nprint(solution(input()))"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 6\n2 3\n''') == '1\\n1 6\\n2 3\\n'\nassert solution('''36 5\n10 16\n''') == '3\\n16 5\\n5 16\\n'\nassert solution('''3 5\n2 1\n''') == '-1\\n'\nassert solution('''2 3\n2 1\n''') == '-1\\n'\nassert solution('''4 5\n1 2\n3 4\n''') == '3\\n4 4\\n2 2\\n1 1\\n'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 6\n2 3\n''') == '1\\n1 6\\n2 3'\nassert solution('''36 5\n10 16\n''') == '3\\n16 5\\n5 16'\nassert solution('''3 5\n2 1\n''') == '-1'\n"
    },
    {
        "number": 85,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 6''') == '''1\n1 6\n2 3'''\nassert solution('''2 6\n2 3''') == '''1\n1 6\n2 3'''\nassert solution('''36 5\n10 16''') == '''3\n16 5\n5 16'''\nassert solution('''3 5\n2 1\n''') == '''-1\n16 5\n5 16'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\nassert solution(\"2 1 1 2\") == \"Polycarp\"\nassert solution(\"4 7 7 3\") == \"Vasiliy\"\nassert solution(\"2 1 1 1\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 2 2') == \"Polycarp\"\nassert solution('4 7 7 4') == \"Vasiliy\"\nassert solution('1 2 2 2') == \"Vasiliy\"\nassert solution('0 0 0 0') == \"Polycarp\"\nassert solution('0 0 1 0') == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n\"\"\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 2 2''') == 'Polycarp'\nassert solution('''4 7 7 4''') == 'Vasiliy'\nassert solution('''1 1 1 1''') == 'Polycarp'\nassert solution('''1 1 1 1''') == 'Vasiliy'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\nassert solution(\"1 1 2 2\") == \"Polycarp\"\nassert solution(\"1 1 1 1\") == \"Vasiliy\"\nassert solution(\"1 1 1 1\") == \"Vasiliy\"\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\nassert solution('4 5 6 7') == 'Vasiliy'\nassert solution('5 5 5 5') == 'Polycarp'\nassert solution('1 1 1 1') == 'Polycarp'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\nassert solution('1 2 2 1') == 'Polycarp'\nassert solution('4 2 3 4') == 'Vasiliy'\nassert solution('4 6 3 4') == 'Polycarp'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1 2 2') == 'Polycarp'\nassert solution('4 7 7 4') == 'Vasiliy'\nassert solution('1 1 1 1') == 'Polycarp'\nassert solution('1 1 1 1') == 'Polycarp'\nassert solution('1 1 1 1') == 'Polycarp'\n"
    },
    {
        "number": 86,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 1 2 2\") == \"Polycarp\"\nassert solution(\"4 7 7 4\") == \"Vasiliy\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 7''') == '6'\nassert solution('''1 1''') == '5'\nassert solution('''11 6''') == '5'\nassert solution('''3 6''') == '5'\nassert solution('''8 9''') == '5'\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 7') == '6'\nassert solution('11 6') == '5'"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 7') == '6'\nassert solution('1 1') == '5'\nassert solution('11 6') == '5'\n\n\n\"\"\""
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 7''') == '6'\nassert solution('''1 1''') == '5'\nassert solution('''11 6''') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 5\") == \"5\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == 5\nassert solution('''2 2''') == 5\nassert solution('''3 2''') == 3\nassert solution('''2 1''') == 4\nassert solution('''4 1''') == 2\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 7\") == \"6\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"11 6\") == \"5\"\nassert solution(\"11 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\n"
    },
    {
        "number": 87,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 7''') == '6'\nassert solution('''1 1''') == '5'\nassert solution('''11 6''') == '5'\nassert solution('''1 1''') == '5'\nassert solution('''11 3''') == '5'\n'''\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('5 10') == '2'\nassert solution('100 105') == '1'\nassert solution('72057594000000000 72057595000000000') == '26'\nassert solution('100 100') == '1'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('1 100') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nimport sys"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 10''') == '2'\nassert solution('''2015 2015''') == '1'\nassert solution('''72057594000000000 72057595000000000''') == '0'\nassert solution('''100 105''') == '0'\nassert solution('''72057594000000000 72057595000000000''') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 10\\n\") == \"2\"\nassert solution(\"2015 2015\\n\") == \"1\"\nassert solution(\"100 105\\n\") == \"0\"\nassert solution(\"72057594000000000 72057595000000000\\n\") == \"26\""
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '''5 10'''\n    ) == '2'\n\nassert solution(\n    '''2015 2015'''\n    ) == '1'\n\nassert solution(\n    '''72057594000000000 72057595000000000'''\n    ) == '0'\n\nprint(solution(\n    '''input()'''\n    ))\n'''\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '0'\nassert solution('100 101') == '1'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '26'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 10') == '2'\nassert solution('2015 2015') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '0'\nassert solution('100 101') == '1'\n"
    },
    {
        "number": 88,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 10') == '2'\nassert solution('72057594000000000 72057595000000000') == '0'\nassert solution('100 105') == '1'\nassert solution('72057594000000000 72057595000000000') == '0'"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 3\nassert solution('5') == 4\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == 2\nassert solution('''3''') == 4\nassert solution('''4''') == 6\nassert solution('''5''') == 7\nassert solution('''6''') == 9\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4') == '6'\nassert solution('5') == '8'\nassert solution('6') == '10'\nassert solution('7') == '12'\nassert solution('8') == '14'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"8\"\nassert solution(\"6\") == \"10\"\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 0\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4') == '6'\nassert solution('3') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '8'\nassert solution('6') == '10'\n"
    },
    {
        "number": 89,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\n\"\"\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 2 30''') == '1'\nassert solution('''2 2 7''') == '1'\nassert solution('''3 1 1''') == '6'\nassert solution('''6 5 24''') == '1'\nassert solution('''10 3 50''') == '0'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\n\"\"\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\nassert solution('3 2 1') == '3'\nassert solution('3 2 2') == '9'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1 1') == '6'\nassert solution('2 2 30') == '1'\nassert solution('4 3') == '1'\nassert solution('2 3 3') == '1'\nassert solution('2 3 2') == '2'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 3 30\") == \"1\"\nassert solution(\"2 2 7\") == \"1\"\nassert solution(\"3 1 1\") == \"6\"\nassert solution(\"5 6 9\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\n\"\"\"\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 30') == '1'\nassert solution('2 2 7') == '1'\nassert solution('3 1 1') == '6'\nassert solution('1 1 1') == '1'\nassert solution('2 2 7') == '1'\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 90,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 30''') == '1'\nassert solution('''4 3''') == '1'\nassert solution('''3 1 1''') == '6'\nassert solution('''1 1 1''') == '6'\nassert solution('''3 2 1''') == '0'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n0') == 'YES'\nassert solution('1 1\\n1') == 'YES'\nassert solution('1 1\\n0') == 'NO'\nassert solution('1 1\\n1') == 'YES'\nassert solution('1 1\\n1') == 'NO'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution('''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution('''5\n4 100\n1 3\n1 3 1\n1 2\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2 1\n1 2"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\nprint(solution(stdin))\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\nT = int(sys.stdin.readline().strip())\n\nfor _ in range(T):\n    n, k = map(int, sys.stdin.readline().strip().split())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    d = defaultdict(int)\n    cur = 0\n    for i in range(n):\n        if i > 0:\n            cur -= a[i - 1]\n        if cur + a[i] <= 0:\n            cur = 0\n            break\n        cur += a[i]\n        d[i] = cur\n    # print(d)\n    for i in range(n):\n        if i in d:\n            print('YES')\n        else:\n            print('NO')"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n'''\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'YES'\n\nassert solution(stdin) == 'YES'"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == 'YES'\nassert solution('0 0 0 0') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1') == 'NO'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution(\n'''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'YES'\nassert solution(\n'''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution(\n'''5\n4 100\n0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\nassert solution(\n'''5\n5 0\n0 0 0 0 0\n1 2\n1\n3 4\n1 4 1\n3 2\n0 1 3\n3 9\n0 59049 810\n''') == 'NO'\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n6\\n\") == \"NO\"\nassert solution(\"3 2\\n1 2\\n\") == \"YES\"\nassert solution(\"4 1\\n5\\n\") == \"NO\"\nassert solution(\"5 9\\n5 3 4 5 9\\n\") == \"YES\"\n\"\"\""
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 91,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n3\\n3\\n5') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n3\\n3\\n3\\n3\\n5\\n5') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n3\\n3\\n3\\n3\\n5\\n5') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n3\\n3\\n3\\n3\\n5\\n5') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1\\n3\\n3\\n3\\n3\\n5\\n5') == 'YES'\n\n\n\n\n-----Best Practice-----"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('1 2 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('5 6 7') == '1520'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n\n\"\"\"\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '20'"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 2''') == '20'\nassert solution('''5 6 7''') == '1520'\n\n\n-----Solution Overview-----\n\nFirst we calculate the divisors of each number. For example, for a = 2, b = 2, and c = 3, we have:\n\nd(a) = 2\nd(b) = 2\nd(c) = 1\nd(a\u00b7b) = 2\u00b72 = 2\nd(a\u00b7c) = 2\u00b71 = 2\nd(b\u00b7c) = 2\u00b73 = 6\nd(a\u00b7b\u00b7c) = 2\u00b72\u00b73 = 6\u00b73 = 18\n\nFrom this, we can see that for a = 2, b = 2, c = 3, d(a\u00b7b\u00b7c) = 6\u00b73 = 18 modulo 2^30.\n\nThe sum of all divisors modulo 2^30 is:\n\n    $\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\nWe iterate over the possible values of a, b, and c, and count the number of divisors for each one. We sum the count modulo 2^30.\n\nWe can write out the formulas and solve the problem:\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot k) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j)$\n\n$\\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j) = \\sum_{i = 1}^{a} \\sum_{j = 1}^{b} \\sum_{k = 1}^{c} d(i \\cdot j \\cdot"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('2 1 2') == '1'\nassert solution('3 4 5') == '33333'\nassert solution('1 1 1') == '6'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\n\"\"\""
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('5 6 7') == '1520'\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == 20\nassert solution(\"2 2 2\") == 20\nassert solution(\"5 6 7\") == 1520\n\"\"\"\n"
    },
    {
        "number": 92,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '20'\nassert solution('5 6 7') == '1520'\nassert solution('1 2 3') == '6'\nassert solution('1 1 1') == '1'\nassert solution('5 10 10') == '6'\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('AB') == 'YES'\nassert solution('XC') == 'NO'\nassert solution('XB') == 'NO'\nassert solution('AC') == 'NO'\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"AB\nXC\nXB\nAC\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"AB\nXC\nAC\nBX\n\"\"\"\n) == \"NO\"\n\n\n-----"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('AB') == 'YES'\nassert solution('XC') == 'NO'\nassert solution('XB') == 'NO'\nassert solution('AC') == 'NO'\nassert solution('AB') == 'YES'\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"AB\") == \"YES\"\nassert solution(\"XC\") == \"NO\"\nassert solution(\"XB\") == \"NO\"\nassert solution(\"AC\") == \"NO\"\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\nAB\nXC\nXB\nAC\n''') == \"YES\"\nassert solution('''\nAB\nXC\nAC\nBX\n''') == \"NO\"\nassert solution('''\nAB\nXC\nAC\n''') == \"YES\"\nassert solution('''\nAB\nXC\n''') == \"NO\"\nassert solution('''\nAB\nXC\n''') == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"AB\\nXC\\nXB\\nAC\") == \"YES\"\nassert solution(\"AB\\nXC\\nAC\\nBX\") == \"NO\"\nassert solution(\"AB\\nXC\\nAC\") == \"NO\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == 'YES'\nassert solution(input2) == 'NO'\nprint(solution(input))\n\"\"\""
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''AB\nXC\nXB\nAC''') == 'YES'\nassert solution('''AB\nXC\nAC\nBX\n''') == 'NO'\nprint(solution(stdin))\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n\nassert solution(stdin) == \"\"\n\n\"\"\"\n"
    },
    {
        "number": 93,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\nAB\nXC\nXB\nAC\n'''\n) == \"YES\"\nassert solution(\n'''\nAB\nXC\nAC\nBX\n'''\n) == \"NO\"\n\nassert solution(\n'''\nABC\nXB\n'''\n) == \"YES\"\nassert solution(\n'''\nABC\nXB\n'''\n) == \"NO\"\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''13\n12\n''') == '12'\nassert solution('''16\n11311\n''') == '475'\nassert solution('''20\n999\n''') == '3789'\nassert solution('''17\n2016\n''') == '594'\nassert solution('''3583''') == '9999999999999999999999999999999999'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8\\n128\") == \"256\"\nassert solution(\"2\\n11\") == \"11\"\nassert solution(\"4\\n29\") == \"28\"\nassert solution(\"3\\n2\") == \"0\"\nassert solution(\"7\\n10\") == \"1\"\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('15') == '1'\nassert solution('16') == '2'\nassert solution('17') == '3'\nassert solution('18') == '4'\nassert solution('19') == '5'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"13\n12\"\"\") == '12'\nassert solution(\"\"\"16\n11311\"\"\") == '475'\nassert solution(\"\"\"20\n999\"\"\") == '3789'\nassert solution(\"\"\"17\n2016\"\"\") == '594'\n\"\"\"\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('12') == '12'\nassert solution('13') == '15'\nassert solution('15') == '15'\nassert solution('16') == '16'\nassert solution('17') == '18'\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"13\\n12\") == \"12\"\nassert solution(\"16\\n11311\") == \"475\"\nassert solution(\"20\\n999\") == \"3789\"\nassert solution(\"17\\n2016\") == \"594\"\n\n\n\"\"\""
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '13\\n12'\n) == '12'\nassert solution(\n    '16\\n11311'\n) == '475'\nassert solution(\n    '20\\n999'\n) == '3789'\nassert solution(\n    '17\\n2016'\n) == '594'\n\n'''"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('13\\n12') == '12'\nassert solution('16\\n11311') == '475'\nassert solution('20\\n999') == '3789'\nassert solution('17\\n2016') == '594'\nassert solution('10\\n3') == '3'\n\n\n-----"
    },
    {
        "number": 94,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1 2\") == \"YES\"\nassert solution(\"3 3 3 3 3 3 3\") == \"YES\"\nassert solution(\"3 3 3 3 3 3\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 2\") == \"YES\"\nassert solution(\"3 3 3 3 3 3 3\") == \"YES\"\nassert solution(\"3 3 3 3 3 3\") == \"NO\"\nassert solution(\"1 2 1 2\") == \"NO\"\nassert solution(\"3 3 3 3 3 3 3\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 5 5 5 4 2') == 'YES'\nassert solution('5') == 'YES'\nassert solution('3 3 3 3 3 3 3') == 'YES'\nassert solution('1 2 1 2') == 'NO'\nassert solution('3 3 3 3 3 3 3') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 5 5 5 4 2') == 'YES'\nassert solution('1 2 1 2') == 'YES'\nassert solution('4 2 1 2') == 'NO'\nassert solution('1 2 1 2 4') == 'NO'\nassert solution('7') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 5 5 5 4 2') == 'YES'\nassert solution('1 2 1 2') == 'YES'\nassert solution('1 2 1 2 1') == 'YES'\nassert solution('1 2 1 2 1 2') == 'YES'\nassert solution('1 2 1 2 1 2 3') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'YES'\nassert solution('1\\n3') == 'NO'\nassert solution('1\\n4') == 'NO'\nassert solution('1\\n5') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 5 5 5 4 2') == 'YES'\nassert solution('6\\n1 5 5 5 4 2') == 'YES'\nassert solution('6\\n1 2 1 2 1 2') == 'YES'\nassert solution('7\\n3 3 3 3 3 3 3') == 'YES'\nassert solution('7\\n3 3 3 3 3 3 3') == 'YES'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 5 5 5 4 2') == 'YES'\nassert solution('4\\n1 2 1 2\\n') == 'NO'\nassert solution('7\\n3 3 3 3 3 3 3\\n') == 'YES'\nassert solution('3\\n3 3 3 3\\n') == 'NO'\nassert solution('4\\n1 2 1 2\\n') == 'NO'\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"YES\"\nassert solution(\"2\\n1\") == \"NO\"\nassert solution(\"2\\n3\") == \"NO\"\nassert solution(\"2\\n3\") == \"NO\"\nassert solution(\"2\\n4\") == \"NO\"\n"
    },
    {
        "number": 95,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n1') == 'NO'\nassert solution('1\\n4\\n5') == 'NO'\nassert solution('1\\n4\\n1\\n2') == 'NO'\nassert solution('1\\n4\\n5\\n2') == 'NO'\nassert solution('1\\n4\\n1\\n2\\n3') == 'NO'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''11 3''') == '5'\nassert solution('''11 6''') == '4'\nassert solution('''20 20''') == '1'\nassert solution('''14 5''') == '6'\nassert solution('''1000000 100''') == '31248'"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'\n\n\"\"\"\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('15 2') == '4'\nassert solution('1000000 100') == '31248'\nassert solution('14 5') == '6'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"11 3\"\n) == \"5\"\n\nassert solution(\n\"11 6\"\n) == \"4\"\n\nassert solution(\n\"20 20\"\n) == \"1\"\n\nassert solution(\n\"14 5\"\n) == \"6\"\n\nassert solution(\n\"1000000 100\"\n) == \"31248\""
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''11 3''') == '5'\nassert solution('''11 6''') == '4'\nassert solution('''20 20''') == '1'\nassert solution('''14 5''') == '6'\nassert solution('''1000000 100''') == '31248'"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"11 3\") == \"5\"\nassert solution(\"11 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"14 5\") == \"6\"\nassert solution(\"1000000 100\") == \"31248\""
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'\n"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''11 3''') == '5'\nassert solution('''11 6''') == '4'\nassert solution('''20 20''') == '1'\nassert solution('''14 5''') == '6'\nassert solution('''1000000 100''') == '31248'\n\n\n\n'''\n\nn, k = map(int, stdin.readline().split())"
    },
    {
        "number": 96,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('11 3') == '5'\nassert solution('11 6') == '4'\nassert solution('20 20') == '1'\nassert solution('14 5') == '6'\nassert solution('1000000 100') == '31248'\nprint(solution(stdin))\n\n\n\n## Solution\n\n\"\"\""
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 3 2 2 -1 1''') == '0 0'\nassert solution('''4 4 2 0 1 1''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1'\nassert solution('''10 10 10 0 1 1''') == '-1'\n\nassert solution('''0 0''') == '0 0'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('4 4 2 0 1 1') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('2 4 4 -1 1') == '0 0'\n\n\n-----\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == ''\n\"\"\"\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('4 2 2 0 1 1') == '0 0'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('10 10 10 1 0 1 1') == '-1'\nassert solution('10 10 10 1 1 1 1') == '-1'\n\n\n\"\"\""
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3 2 2 -1 1''') == '0 0'\nassert solution('''4 4 2 0 1 1''') == '-1'\nassert solution('''10 10 10 1 -1 0''') == '-1'\nassert solution('''10 10 10 10 10 0 0''') == '-1'\nassert solution('''0 0''') == '-1'\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2 2 -1 1\") == \"0 0\"\nassert solution(\"4 4 2 0 1 1\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\nassert solution(\"10 10 10 1 -1 0\") == \"-1\"\nassert solution(\"4 4 1 0 1 1\") == \"-1\"\n"
    },
    {
        "number": 97,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 2 2 -1 1') == '0 0'\nassert solution('4 4 2 0 1 1') == '-1'\nassert solution('10 10 10 1 -1 0') == '-1'\nassert solution('5 5 5 0 0 0') == '-1'\nassert solution('10 10 10 10 0 0 0 0 0 0 0 0 0') == '-1'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''5 5''') == 'YES'\nassert solution('''4 2''') == 'NO'\nassert solution('''2 3''') == 'YES'\nassert solution('''3 3''') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''5 5''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''3 5''') == 'NO'\nassert solution('''6 5''') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 3\n2 1''') == 'YES'\nassert solution('''5 5\n3 3\n3 3''') == 'YES'\nassert solution('''4 2\n2 3\n1 2\n''') == 'NO'\nassert solution('''3 4\n1 2\n2 3\n3 1''') == 'YES'\nassert solution('''5 5\n3 3\n3 3''') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 2') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('5 5') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 3\\n2 1') == 'YES'\nassert solution('5 5\\n3 3\\n3 3') == 'NO'\nassert solution('4 2\\n2 3\\n1 2') == 'YES'\n\n\"\"\"\nfrom math import gcd\nfrom typing import List\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 3\n2 1''') == \"YES\"\nassert solution('''5 5\n3 3\n3 3''') == \"YES\"\nassert solution('''4 2\n2 3\n1 2\n''') == \"NO\"\nassert solution('''5 4\n2 4\n1 2\n3 4\n''') == \"YES\"\nassert solution('''6 4\n2 4\n1 2\n3 4\n1 2\n4 3\n''') == \"YES\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == \"YES\"\nassert solution('5 5') == \"NO\"\nassert solution('3 2') == \"YES\"\nassert solution('5 5') == \"NO\"\nassert solution('3 3') == \"YES\"\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('5 5') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('5 3') == 'NO'\nassert solution('5 3') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 2\n1 3\n2 1''') == 'YES'\nassert solution('''5 5\n3 3\n3 3''') == 'NO'\nassert solution('''4 2\n2 3\n1 2\n''') == 'YES'\nassert solution('''10 10\n8 8\n8 8\n''') == 'YES'\nassert solution('''2 2\n2 2\n2 2\n''') == 'NO'\n"
    },
    {
        "number": 98,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == 'YES'\nassert solution('''5 5''') == 'NO'\nassert solution('''4 2''') == 'YES'\nassert solution('''3 3''') == 'NO'\nassert solution('''1 1''') == 'YES'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == '3'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4\n54343 -13 6 124''') == 'inf'\nassert solution('''123 1 2143435 4\n123 11 -5453 141245''') == '0'\n'''\n\nfrom itertools import takewhile"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 2 30 4\n6 14 25 48\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n123 1 2143435 4\n123 11 -5453 141245\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n123 1 2143435 4\n54343 -13 6 124\n\"\"\") == \"inf\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 2 30 4''') == '3'\nassert solution('''6 14 25 48''') == '0'\nassert solution('''123 1 2143435 4''') == 'inf'\nassert solution('''123 1 2143435 4''') == 'inf'\n\n\n\n\"\"\""
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 2 30 4') == 3\nassert solution('6 14 25 48') == 3\nassert solution('123 1 2143435 4') == 0\nassert solution('123 1 2143435 4') == 'inf'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 30 4') == 3\nassert solution('123 1 2143435 4') == 3\nassert solution('123 1 2143435 4') == 0\nassert solution('123 1 2143435 4') == 'inf'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 30 4\\n6 14 25 48\\n\") == \"3\"\nassert solution(\"123 1 2143435 4\\n123 11 -5453 141245\\n\") == \"0\"\nassert solution(\"123 1 2143435 4\\n54343 -13 6 124\\n\") == \"inf\"\nassert solution(\"123 1 2143435 4\\n123 11 -5453 141245\\n\") == \"inf\"\nassert solution(\"12 3 1 2 4\\n5 3 6 3 4\\n\") == \"2\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 30 4') == '3'\nassert solution('6 14 25 48') == '3'\nassert solution('123 1 2143435 4') == '3'\nassert solution('123 11 -5453 141245') == '0'\nassert solution('123 1 2143435 4') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 30 4\") == \"3\"\nassert solution(\"6 14 25 48\") == \"3\"\nassert solution(\"123 1 2143435 4\") == \"0\"\nassert solution(\"123 11 -5453 141245\") == \"inf\"\nassert solution(\"123 1 2143435 4\") == \"inf\"\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 30 4\\n6 14 25 48\\n') == '3'\nassert solution('123 1 2143435 4\\n123 11 -5453 141245\\n') == '0'\nassert solution('123 1 2143435 4\\n54343 -13 6 124\\n') == 'inf'\nassert solution('123 1 2143435 4\\n54343 -13 6 1212\\n') == 'inf'\nassert solution('123 1 2143435 4\\n54343 -13 6 1234\\n') == 'inf'\n"
    },
    {
        "number": 99,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6') == '....'\nassert solution('2 4') == '....'\nassert solution('2 6') == '-1'\nassert solution('3 4') == '..w..'\nassert solution('2 4') == '..w..'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('2 2') == '..+..'\nassert solution('4 8') == '..w..w..'\nassert solution('5 6') == '......'\nassert solution('2 4') == '....'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"...\\nw...\\n+w+...\"\nassert solution(\"2 6\") == \"....\\n.w..\\n....\\n....\\n....\"\nassert solution(\"2 4\") == \"....\\nw..\\n....\\n....\\n....\"\nassert solution(\"4 7\") == \"....\\n.w..\\n..+.\\n+++.\\n++..\\n....\"\nassert solution(\"10 14\") == \"....\\n.w..\\n......\\n......\\n......\\n......\\n......\\n......\\n.....\"\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == None\nassert solution('1 1') == None\nassert solution('1 2 3') == None\nassert solution('1 2 1') == None\nassert solution('3 4') == None\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 8\n..w..w..\n........\n........\n..w..w..\n\"\"\") == \"\"\"\n..w++w..\n..+..+..\n..+..+..\n..w++w..\n\"\"\"\n\nassert solution(\n\"\"\"\n5 6\nw..w.w\n...w..\n......\n..w...\n......\n\"\"\") == \"\"\"\n+w+...\n.+...\n...w...\n......\n\"\"\"\n\nassert solution(\n\"\"\"\n2 6\nw..w.w\n...w..\n\"\"\") == \"\"\"\n-1\n\"\"\"\nassert solution(\n\"\"\"\n2 4\n....\n.w..\n\"\"\") == \"\"\"\n....\n.w..\n\"\"\"\nassert solution(\n\"\"\"\n5 4\n....\n.w..\n....\n....\n....\n\"\"\") == \"\"\"\n.w++w.\n.+..+\n.+..+\n.w++w.\n\"\"\"\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('4 8') == '..w++w..'\nassert solution('5 6') == '......'\nassert solution('2 4') == '....'\nassert solution('2 6') == 'w..w.w'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 8\\n..w..w..\\n........\\n........\\n..w..w..\\n') == '..w++w..\\n..+..+..\\n..+..+..\\n..w++w..\\n'\nassert solution('5 6\\n......\\nw....\\nw....\\nw....\\n......\\n') == '......\\n+w+...\\n+.+...\\n++w...\\n......\\n'\nassert solution('2 4\\nw..\\n.w..\\nw..\\n.w..\\n') == '......\\n.w..\\n......\\n......\\n'\nassert solution('2 6\\nw..w.w\\nw..w.w\\nw..w.w\\nw..w.w\\n.w..w.w\\nw..w.w\\n') == '-1\\n'\nassert solution('6 6\\n.w..w.w\\n.w..w.w\\nw..w.w\\n.w..w.w\\n.w..w.w\\nw..w.w\\n.w..w.w\\n.w..w.w\\n') == '-1\\n'\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n8 8\n..w..w..\n........\n........\n..w..w..\n\"\"\") == \"\"\"\n..w++w..\n..+..+..\n..+..+..\n..w++w..\n\"\"\"\nassert solution(\n\"\"\"\n5 6\nw..w.w\n...w..\n......\n.w...\n......\n\"\"\") == \"\"\"\n......\n+w+...\n+.+...\n++w...\n......\n\"\"\"\nassert solution(\n\"\"\"\n2 4\n....\n.w..\n\"\"\") == \"\"\"\n....\n.w..\n\"\"\"\nassert solution(\n\"\"\"\n2 6\nw..w.w\n...w..\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n8 4\n.w....\n.w....\n....w.\n....w.\n....w.\n....w.\n....w.\n....w.\n\"\"\") == \"\"\"\n.w....\n.w....\n....w.\n....w.\n....w.\n....w.\n....w.\n....w.\n....w.\n\"\"\"\n"
    },
    {
        "number": 100,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2''') == '+w+'\nassert solution('''2 3''') == '+w+'\nassert solution('''3 4''') == '+w+'\nassert solution('''1 3''') == '+w+'\nassert solution('''4 3''') == '+w+'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nn = int(input())\na = int(input())\nb = int(input())"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == 'YES'\nassert solution('100') == 'YES'\nassert solution('15') == 'NO'\nassert solution('9960594') == 'YES'\nassert solution('2551') == 'YES'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''7''') == '''YES'''\nassert solution('''100''') == '''YES'''\nassert solution('''9960594''') == '''YES'''\nassert solution('''2551''') == '''YES'''\nassert solution('''2557''') == '''NO'''\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('7\\n2\\n3\\n') == 'YES\\n2 1\\n'\nassert solution('100\\n25\\n10\\n') == 'YES\\n1951 1949\\n'\nassert solution('9960594\\n2551\\n2557\\n') == 'NO\\n'\nassert solution('7\\n2\\n3\\n') == 'YES\\n2 1\\n'\nassert solution('100\\n25\\n10\\n') == 'YES\\n1951 1949\\n'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == 'YES'\nassert solution('100') == 'YES'\nassert solution('15') == 'NO'\nassert solution('9960594') == 'YES'\nassert solution('2551') == 'YES'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7\\n2\\n3\\n') == 'YES\\n2 1\\n'\nassert solution('100\\n25\\n10\\n') == 'YES\\n1951 1949\\n'\nassert solution('9960594\\n2551\\n2557\\n') == 'NO\\n'\nassert solution('100\\n25\\n10\\n') == 'YES\\n0 10\\n'\nassert solution('9960594\\n2551\\n2557\\n') == 'NO\\n'\n\"\"\"\n\nimport sys"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n25\\n10') == 'YES\\n0 10'\nassert solution('9960594\\n2551\\n2557') == 'NO'\nassert solution('15\\n4\\n8') == 'YES\\n1951 1949'\nassert solution('100\\n25\\n10') == 'YES\\n0 10'\n\"\"\"\nn = int(input())\na = int(input())\nb = int(input())\nprint(n - a*n%a - b*n%b)\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7\\n2\\n3') == 'YES\\n2 1'\nassert solution('100\\n25\\n10') == 'YES\\n0 10'\nassert solution('9960594\\n2551\\n2557') == 'YES\\n1951 1949'\nassert solution('\\n') == 'NO'\nassert solution('9960594\\n2551\\n2557') == 'NO'\n"
    },
    {
        "number": 101,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == 'YES\\n2 1'\nassert solution('100') == 'YES\\n0 10'\nassert solution('15') == 'NO'\nassert solution('9960594') == 'YES\\n1951 1949'\nassert solution('1550') == 'NO'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('60') =='sixty'\nassert solution('100') == 'one-hundred'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"one hundred and one\"\nassert solution(\"200\") == \"two hundred\"\nassert solution(\"300\") == \"three hundred\"\nassert solution(\"400\") == \"four hundred\"\nassert solution(\"500\") == \"five hundred\"\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"six\"\nassert solution(\"99\") == \"ninety-nine\"\nassert solution(\"20\") == \"twenty\"\nassert solution(\"1\") == \"one\"\nassert solution(\"100\") == \"one-hundred\"\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('7') =='seven'\nassert solution('50') == 'fifty'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('56') == 'fifty-six'\nassert solution('6') =='six'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('50') == 'fifty'\nassert solution('90') == 'ninety'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('60') =='sixty'\nassert solution('99999') == 'ninety-nine-ninety-nine'"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\nassert solution('50') == 'fifty'\nassert solution('123') == 'one-thousand-two-thousand-three'\n"
    },
    {
        "number": 102,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6') =='six'\nassert solution('99') == 'ninety-nine'\nassert solution('20') == 'twenty'\n\nprint('Tests passed successfully')\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 4 5 6 9\") == \"2\"\nassert solution(\"998 999 1000\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"4\""
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6''') == '''2'''\nassert solution('''3''') == '''0'''\nassert solution('''998999 1000''') == '''2'''\nassert solution('''9''') == '''0'''\nassert solution('''1 3 4 5 6 9''') == '''2'''\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''6''') == '''2'''\nassert solution('''3''') == '''0'''\nassert solution('''998 999 1000''') == '''2'''\nassert solution('''5''') == '''4'''\nassert solution('''1 2 3 4 5''') == '''2'''\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n0') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n1 2') == '0'\nassert solution('1\\n1 2 3') == '0'\nassert solution('1\\n1 2 3 4') == '0'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n1\\n') == '1'\nassert solution('3\\n1\\n2\\n') == '2'\nassert solution('3\\n4\\n5\\n') == '3'\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6\\n1 3 4 5 6 9') == '2'\nassert solution('3\\n998 999 1000') == '2'\nassert solution('5\\n1 2 3 4 5') == '4'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom sys import stdin, stdout\n\nn = int(input())\na = list(map(int, stdin.readline().strip().split()))\nm = 0\n\nfor i in range(n):\n    if a[i] == a[i + 1] + 1:\n        m = max(m, i + 1)\n    elif a[i] == a[i + 1] - 1:\n        m = max(m, i + 1)\n    else:\n        pass"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"6\n1 3 4 5 6 9\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n998 999 1000\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"6\n1 3 4 5 6 9\n\"\"\") == \"0\"\nassert solution(\"\"\"7\n12 11 4 1 0 5 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 3 4 5 6 9\\n\") == \"2\"\nassert solution(\"3\\n998 999 1000\\n\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"4\"\nassert solution(\"1\\n1 2 3 4 5\\n\") == \"0\"\nassert solution(\"10\\n987654321 9876543210\\n\") == \"10\"\n"
    },
    {
        "number": 103,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"1 2\") == 0\nassert solution(\"1 2 3\") == 0\nassert solution(\"1 2 3 4\") == 0\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 2 1''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''10\n2 2 2 2 2 2 2 2 2 2 2''') == '7'\n'''\nimport sys\nassert sys.stdin.read() == '4\\n1 3 2 1\\n'\nassert sys.stdin.read() == '6\\n2 2 2 2 2 2 2 2 2 2 2\\n'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == 1\nassert solution('2\\n1') == 1\nassert solution('2\\n2') == 2\nassert solution('2\\n2') == 2\nassert solution('3\\n2') == 3\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4''') == '2'\nassert solution('''6''') == '3'\nassert solution('''2''') == '3'\nassert solution('''10''') == '5'\nassert solution('''2 2 2 2 2 2''') == '3'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('3\\n3') == '3'\nassert solution('4\\n4') == '2'\nassert solution('6\\n6') == '3'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 3 2 1''') == '2'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''6\n2 2 2 2 2 2''') == '3'\nassert solution('''1\n1''') == '0'\nassert solution('''11\n7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99''') == '38'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '2'\nassert solution('6\\n2 2 2 2 2 2\\n') == '3'\nassert solution('100\\n
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 1\\n') == '2'\nassert solution('6\\n2 2 2 2 2 2\\n') == '3'\nassert solution('6\\n2 2 2 2 2 2\\n') == '3'\nassert solution('3\\n1\\n2\\n3\\n') == '0'\nassert solution('2\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 1') == 2\nassert solution('6\\n2 2 2 2 2 2') == 3\nassert solution('4\\n1 3 2 1') == 2\nassert solution('4\\n2 2 2 2 2') == 2\nassert solution('6\\n2 2 2 2 2 2') == 3\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2 1') == '2'\nassert solution('6\\n2 2 2 2 2 2') == '3'\nassert solution('8\\n2 2 2 2 2 2 2') == '5'\nassert solution('7\\n2 2 2 2 2 2 2') == '4'\n"
    },
    {
        "number": 104,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 1\") == \"2\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"3\"\nassert solution(\"10\\n
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 9 3\n8 6 7\n4 2 5\n\"\"\"\n) == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\n\"\"\"\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '0 0'\nassert solution('2\\n1') == '2 1'\nassert solution('3\\n2') == '3 2'\nassert solution('4\\n4') == '3 2'\nassert solution('5\\n5') == '3 2'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('2\\n1 2\\n') == '0 0'\nassert solution('4\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n17 18 19 20\\n') == '10 8'\nassert solution('5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20 21\\n22 23 24 25 26\\n') == '11 9'\nassert solution('6\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n19 20 21 22 23 24\\n25 26 27 28 29 30\\n') == '17 19'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('3\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('5\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('8\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\nassert solution('6\\n1 9 3\\n8 6 7\\n4 2 5\\n') == '12 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4''') == '1 1'\nassert solution('''8''') == '5 0'\nassert solution('''16''') == '8 1'\nassert solution('''32''') == '10 2'\nassert solution('''64''') == '13 3'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 9 3\n8 6 7\n4 2 5''') == '12 1'\nassert solution('''2\n1 1\n1 2''') == '2 0'\nassert solution('''3\n1 9 3\n8 6 7\n4 2 5''') == '13 1'\nassert solution('''4\n1 1 1 1\n1 2 1 1\n1 1 1 1\n1 2 1 1\n1 1 1 1''') == '17 1'\nassert solution('''4\n2 1 1 1\n2 2 1 1\n2 1 1 1\n2 2 1 1''') == '17 1'\n"
    },
    {
        "number": 105,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n\n\"\"\"\n"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\u0434"
    },
    {
        "number": 106,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\u0434"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"100010001\") == \"yes\"\nassert solution(\"100\") == \"no\"\nassert solution(\"1000\") == \"yes\"\nassert solution(\"111\") == \"yes\"\nassert solution(\"111000010111\") == \"yes\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('101') == 'no'\nassert solution('1000') == 'no'\nassert solution('1111') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 'no'\nassert solution('100') == 'no'\nassert solution('100010001') == 'yes'\nassert solution
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('101010101') == 'yes'\nassert solution('101') == 'no'\nassert solution('001') == 'yes'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('011') == 'yes'\nassert solution('0') == 'no'\nassert solution('1') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('111100100011011') == 'no'\nassert solution('0111111101000111') == 'no'\nassert solution('0111111101110111') == 'no'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('10101011') == 'yes'\nassert solution('110110101') == 'no'\nassert solution('1010101010111100') == 'yes'\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('100010001') == \"yes\"\nassert solution('100') == \"no\"\nassert solution('1111') == \"yes\"\nassert solution('101') == \"no\"\nassert solution('00') == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == \"no\"\nassert solution(\"101\") == \"no\"\nassert solution(\"100010001\") == \"yes\"\nassert solution(\"10000101\") == \"no\"\nassert solution(\"1111\") == \"no\"\n"
    },
    {
        "number": 107,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100010001') == 'yes'\nassert solution('100') == 'no'\nassert solution('10') == 'no'\nassert solution('1111') == 'yes'\nassert solution('1001') == 'yes'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aaacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aaaaaaaaaaaaa') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"aacceeggiikkmmooqqssuuwwyy\") == \"abcdefghijklmnopqrstuvwxyz\"\nassert solution(\"thereisnoanswer\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('c') == '-1'\nassert solution('aaa') == '-1'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('12345') == '-1'\nassert solution('test') == '-1'\nassert solution('thereisnoanswer') == '-1'\n\n\nprint(solution('aacceeggiikkmmooqqssuuwwyy'))\nprint(solution('thereisnoanswer'))\nprint(solution('12345'))\nprint(solution('test'))\nprint(solution('thereisnoanswer'))\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\n\nprint(\"The first solution is correct!\")"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 108,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('aacceeggiikkmmooqqssuuwwyy') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('thereisnoanswer') == '-1'\nassert solution('aacceggiikkmmooqqssuuwwyyabcd') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('abcc') == '-1'\nassert solution('a') == '-1'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\nassert solution('3 4 3 3') == '1.0'\nassert solution('1 2 1 2') == '0.75'\nassert solution('12 21 10 19') == '1.5'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom functools import reduce\nimport math\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3 2 3''') == '2.0000000000'\nassert solution('''12 17 9 40''') == '32.8333333333'\n\n\n\n---<markdown>---\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\nassert solution('25 49 70 68') == '75.16666666667'\nassert solution('5 5 5 5') == '5.00000000000'\nassert solution('12 17 9 40') == '32.8333333333'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == str(expected_output)\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 3\") == '2.0000000000'\nassert solution(\"12 17 9 40\") == '32.8333333333'\nassert solution(\"123456 81232 456788 910982\") == '7.0833313543'\nassert solution(\"123456 81232 456788 910982\") == '7.0833313543'\nassert solution(\"123456 81232 456788 910982\") == '7.0833313543'\n"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 3 2 3') == '2.0000000000'\nassert solution('12 17 9 40') == '32.8333333333'\n\n\n\"\"\""
    },
    {
        "number": 109,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2.0000000000'\nassert solution(stdin) == '32.8333333333'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('4\\n2 2 2 2\\n') == '-3 -3 2 -3'\nassert solution('5\\n0 0 0 0 0\\n') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n2 2 2 2\n\"\"\") == '-3 -3 -3 -3', '4'\nassert solution(\n\"\"\"\n1\n0\n\"\"\") == '0', '1'\nassert solution(\n\"\"\"\n3\n-3 -3 2\n\"\"\") == '-3 -3 2', '3'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''0\n''') == '0'\nassert solution('''0\n''') == '0'\nassert solution('''2\n0 0\n''') == '-3'\nassert solution('''0\n0 0\n''') == '0'\nassert solution('''2\n0 0\n''') == '-3'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('-1\\n0\\n') == '0'\nassert solution('-1\\n0\\n') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n2 2 2 2\\n') == '-3 -3 -3 -3'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n') == '-3 -3 2'\nassert solution('3\\n-3 -2\\n') == '-3 -2'\nassert solution('2\\n3\\n') == '-3'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 2 2 2\n''') == '-3 -3 -3 -3'\nassert solution('''1\n0\n''') == '0'\nassert solution('''3\n-3 -3 2\n''') == '-3 -3 2'\nassert solution('''3\n-3 -3 2\n''') == '-3 -3 2'\nassert solution('''6\n4 4 1 4 3 4\n''') == '4 4 4 1 3 3'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n0') == '0'\nassert solution('2\\n2 2 2 2') == '-3 -3 -3 -3'\nassert solution('3\\n-3 -3 2') == '-3 -3 2'\nassert solution('4\\n2 2 2 2') == '-3 -3 2'\nassert solution('5\\n0') == '0'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''1\n0''') == '0'\nassert solution('''3\n-3 -3 2''') == '-3 -3 2'\nassert solution('''4\n2 2 2 2''') == '-3 -3 -3 -3'\nassert solution('''8\n3 -3 -2 -5 -7 -5 -2 3''') == '-3 -2 -5 -7 -5 -2 3'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n2 2 2 2\\n0\\n') == '-3 -3 -3 -3'\nassert solution('4\\n2 2 2 2\\n2\\n') == '2 2 2 2'\nassert solution('1\\n0\\n') == '0'\nassert solution('3\\n-3 -3 2\\n-3 -3 2\\n-3 -3 2') == '-3 -3 2'\nassert solution('3\\n-3 -3 2\\n-3 -3 2\\n-3 -3 2') == '-3 -3 2'\n"
    },
    {
        "number": 110,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\nassert solution('16 3') == '4'\nassert solution('16 2') == '2'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"12 5\") == \"-1\"\nassert solution(\"5 3\") == \"-1\"\nassert solution(\"12 4\") == \"6\"\nassert solution(\"12 4\") == \"6\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n\") == \"2\"\nassert solution(\"5 3\\n\") == \"-1\"\nassert solution(\"12 5\\n\") == \"6\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n4\\n\") == \"2\"\nassert solution(\"2 4\\n5\\n\") == \"-1\"\nassert solution(\"2 4\\n5\\n\") == \"5\"\nassert solution(\"2 1\\n2\\n\") == \"2\"\nassert solution(\"3 3\\n3\\n\") == \"3\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"7 10\") == \"1\"\nassert solution(\"3 7\") == \"2\"\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n''') == '2'\n\nassert solution('''5 3\n''') == '-1'\n\nassert solution('''12 5\n''') == '6'\n\nassert solution('''10000 10100\n''') == '10000'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('4\\n2') == '2'\nassert solution('5\\n3') == '-1'\nassert solution('12\\n5') == '6'\n"
    },
    {
        "number": 111,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '-1'\nassert solution('12 5') == '6'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == '0'\nassert solution('0') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('0 1 2 3 4 5') == '87'\nassert solution('6 7 8 9 0 1') == '98'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"87\"\nassert solution(\"0 1 2 3 4 5\") == \"87\"\nassert solution(\"0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\nassert solution(\"6 7 8 9 0 1\\n1 2 3 4 5 6\\n2 3 4 5 6 7\") == \"87\"\nassert solution(\"6 7 8 9 0 1\\n2 3 4 5 6 7\\n2 3 4 5 6 7\") == \"87\"\n\n\n-----"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\") == \"87\"\nassert solution(\"3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\") == \"98\"\nassert solution(\"3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\") == \"98\"\nassert solution(\"3\\n0 1 1 2 2 3 3\\n4 5 6 7 8 9 0\\n0 1 2 3 4 5 6\\n7 8 9 0 1 2 3\") == \"98\"\nassert solution(\"3\\n0 1 1 2 2 3 3\\n4 5 6 7 8 9 0\\n0 1 2 3 4 5 6\\n7 8 9 0 1 2 3\") == \"98\"\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\nassert solution('0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('5\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9\\n') == '98'\nassert solution('0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7\\n') == '87'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 2 3 4 5\\n6 7 8 9 0 1\\n2 3 4 5 6 7') == '87'\nassert solution('3\\n0 1 3 5 6 8\\n1 2 4 5 7 8\\n2 3 4 6 7 9') == '98'\nassert solution('3\\n1 2 3 4 5 6\\n7 8 9 0 1 2\\n3 4 5 6 7 8\\n4 5 6 7 8 9') == '0'\nassert solution('10\\n3 0 1 2 3 4 5 6 7 8 9 10\\n9 0 1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8 9 10') == '58'\nassert solution('4\\n0 1 2 3 4\\n4 0 1 2 3\\n3 0 1 2 4\\n2 0 1 2 3\\n1 0 1 2 4') == '4'\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''0 1 2 3 4 5\n6 7 8 9 0 1\n2 3 4 5 6 7\n''') == '87'\nassert solution('''0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '98'\nassert solution('''0 1 3 5 6 8\n1 2 4 5 7 8\n2 3 4 6 7 9\n''') == '0'\n'''\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 112,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output\n\"\"\"\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('125 5') == '1250000'\nassert solution('15 0') == '15000000'\nassert solution('100000000 1') == '10000000000000001'\nassert solution('25 0') == '25000000'\nassert solution('3750 0') == '3750'\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''375 4''') == '30000'\nassert solution('''10000 1''') == '10000'\nassert solution('''38101 0''') == '38101'\nassert solution('''123456789 8''') == '12345678900000000'\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin[:-1]\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('123456789 8') == '12345678900000000'\nassert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\nassert solution('15 0') == '15'\nassert solution('0 0') == '0'\nassert solution('12 4') == '123000'\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('375 4') == '30000'\nassert solution('10000 1') == '10000'\nassert solution('38101 0') == '38101'\nassert solution('123456789 8') == '12345678900000000'"
    },
    {
        "number": 113,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"0 0\"\nassert solution(\"3 3\") == \"0 1\"\nassert solution(\"3 1\") == \"0 0\"\nassert solution(\"3 1\") == \"-1\"\nassert solution(\"2 2\") == \"0 0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n') == '3\\n1 1\\n1 2\\n2 2\\n'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\nassert solution('3 2\\n0 0\\n0 0\\n0 0\\n') == '0\\n'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 1 1\n    1 1 1\n    0 1 1\n    \"\"\"\n    ) == '3'\nassert solution(\n    \"\"\"\n    3 2\n    0 0\n    0 0\n    0 0\n    \"\"\"\n    ) == '0'\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    1 0\n    0 0\n    \"\"\"\n    ) == '-1'\nassert solution(\n    \"\"\"\n    3 2\n    1 1\n    1 1\n    0 0\n    \"\"\"\n    ) == '0'\nassert solution(\n    \"\"\"\n    5 5\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    1 1 1 1 1\n    \"\"\"\n    ) == '3'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '-1'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\nassert solution('''3 2\n1 1 1\n1 1 1\n0 1 1''') == '3'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 1 1\\n1 1 1\\n0 1 1\\n\") == \"3\\n1 1\\n1 2\\n2 2\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n\") == \"0\"\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1\n''') == '3'\n\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\n\nassert solution('''3 3\n1 0 1\n1 0 1\n0 0 0\n''') == '-1'\n\nassert solution('''3 2\n0 0\n0 0\n0 0\n''') == '0'\n\nassert solution('''3 4\n1 0 0 0\n0 0 1 0\n0 0 0 0\n''') == '2'"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n2') == '2'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2\\n2') == '2'\nassert solution('1\\n1\\n1') == '-1'\nassert solution('2\\n2\\n1') == '-1'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n0 1 1''') == '3'\nassert solution('''3 2\n0 0\n0 0\n0 0''') == '0'\nassert solution('''3 2\n0 0\n0 0\n0 0''') == '-1'\nassert solution('''3 3\n1 1 1\n1 1 1\n0 1 1''') == '3'\nassert solution('''3 3\n1 0 1\n1 0 1\n0 0 0''') == '-1'\n"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"0 1\\n1 2\\n2 2\"\nassert solution(\"3 2\") == \"0 0\\n0 0\\n0 0\"\nassert solution(\"3 2\") == \"0 0\\n0 0\\n0 0\"\nassert solution(\"3 2\") == \"-1\"\n\n\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 114,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nn, m = [int(x) for x in stdin.split()]\nmatrix = [[int(x) for x in stdin.split()] for _ in range(n)]"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\") == '0.333333333333 0.333333333333 0.333333333333'\nassert solution(\"2 1 2\") == '0.150000000000 0.300000000000 0.550000000000'\nassert solution(\"2 3 3\") == '0.0952380952380 95.238095238095 23.809523809524'\nassert solution(\"3 2 1\") == '0.333333333333 0.266666666667 0.066666666667'\nassert solution(\"2 3 2\") == '0.0952380952380 95.238095238095 23.809523809524'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\n\n'''\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('2 1 2') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('1 1 3') == '0.057142857143 0.657142857143 0.285714285714'\n\"\"\"\nfrom math import log, exp\nr, s, p = map(int, stdin.split())\n\nnumerator = max(r, s, p)\ndenominator = min(r, s, p)\n\nprint(exp((numerator-1)*log(2) + (denominator-1)*log(3) - (numerator-1+denominator-1)*log(3)) / (numerator-1+denominator-1))"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 2''') == '0.333333333333 0.333333333333 0.333333333333'\nassert solution('''2 1 2''') == '0.150000000000 0.300000000000 0.550000000000'\nassert solution('''1 1 3''') == '0.057142857143 0.657142857143 0.285714285714'\n"
    },
    {
        "number": 115,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 10 9 20 1''') == '2'\nassert solution('''1 100 50 200 75''') == '50'\nassert solution('''1 10 30 20 80 1''') == '10'\nassert solution('''1 100 50 200 80 1''') == '10'\nassert solution('''1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 10 10 10 1') == '10'\nassert solution('1 1000 1001 1002') == '1'\nassert solution('1 10000 1010 1001') == '0'\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10 9 20 1') == '2'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 100 50 200 75') == '50'\nassert solution('1 10 9 20 1') == '2'\nassert solution('1 10 9 19 8') == '4'\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 10 9 20 1''') == \"2\"\nassert solution('''1 100 50 200 75''') == \"50\"\nassert solution('''1 1000 1000 1000 1000''') == \"1000\"\nassert solution('''1 10 10 1 2''') == \"0\"\nassert solution('''1 10 1000 1000 1000''') == \"99999\"\n'''\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''1 10 9 20 1'''\n) == '2'\n\nassert solution(\n'''1 100 50 200 75'''\n) == '50'"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\nassert solution(\"1 100 50 200 80\") == \"50\"\nassert solution(\"1 100 50 200 1\") == \"0\"\nassert solution(\"1 100 50 200 20\") == \"20\"\n"
    },
    {
        "number": 116,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 10 9 20 1\") == \"2\"\nassert solution(\"1 100 50 200 75\") == \"50\"\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"13\"\nassert solution(\n    \"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"INF\"\nassert solution(\"1 2\\n0 1 1\") == \"INF\"\nassert solution(\"1 2\\n0 1 1\\n0 2 2\") == \"13\"\nprint(solution(input()))\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 0') == '13'\nassert solution('0 1 1') == '13'\nassert solution('0 2 2') == '13'\nassert solution('-3 4 -1') == '13'\nassert solution('-2 6 3') == '13'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\") == \"13\"\nassert solution(\"2 2\\n1 1 2\\n1 0 2\") == \"13\"\nassert solution(\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\") == \"13\"\n\n\"\"\""
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"13\"\nassert solution(\n\"6 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"13\"\nassert solution(\n\"6 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"13\"\nassert solution(\n\"10 10\\n-1 -1\\n-2 -2\\n-3 -3\\n-4 -4\\n-5 -5\\n-6 -6\\n-7 -7\\n-8 -8\\n-9 -9\\n-10 -10\\n1 0 1\\n0 1 2\\n0 2 3\\n1 0 4\\n1 1 4\\n2 1 4\"\n) == \"INF\"\nassert solution(\n\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\"\n) == \"13\"\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4'''\n) == '13'\nassert solution(\n'''5 5\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4'''\n) == 'INF'\nassert solution(\n'''5 10\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n3 5 4\n-3 -1\n0 2 4'''\n) == 'INF'\nassert solution(\n'''5 10\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n3 5 4\n-3 -1\n0 2 4'''\n) == 'INF'\nassert solution(\n'''5 10\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4\n3 5 4\n-3 -1\n0 2 4'''\n) == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n        '5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n') == '13'\n'''\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4') == 'INF'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n-1 -4"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n2 0 2\n-1 -4 5\n3 -2 4\n1 2 4''') == '13'\nassert solution('''2 3\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2''') == '-2'\nassert solution('''2 3\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2''') == '-1'\nassert solution('''2 3\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2''') == 'INF'\nassert solution('''4 3\n1 2 0\n0 1 1\n0 2 2\n-3 4 -1\n-2 6 3\n1 0 1\n0 1 2\n1 2 0''') == 'INF'\n"
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\") == \"13\"\nassert solution(\"5 6\\n1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n0 2 1\\n0 0 3\\n-2 0 2\") == \"INF\"\n\"\"\""
    },
    {
        "number": 117,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 0 1\\n0 1 2\\n2 0 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\nassert solution('1 2 0\\n0 1 1\\n0 2 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 0 1\\n0 1 2\\n2 0 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 0 1\\n0 1 2\\n2 0 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4\\n1 0 1\\n0 1 2\\n2 0 2\\n-3 4 -1\\n-2 6 3\\n1 0 1\\n0 1 2\\n2 0 2\\n-1 -4 5\\n3 -2 4\\n1 2 4') == '13'\n\"\"\"\nimport sys"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 10 2\") == \"NO\"\nassert solution(\"3 10 4\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 10 4''') == 'NO'\nassert solution('''3 10 3''') == 'YES'\nassert solution('''3 8 51''') == 'YES'\nassert solution('''3 8 52''') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 10 4\") == \"NO\"\nassert solution(\"3 10 3\") == \"YES\"\nassert solution(\"3 8 51\") == \"YES\"\nassert solution(\"3 8 52\") == \"YES\"\nassert solution(\"3 8 -1\") == \"NO\"\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 8 8') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 8 50') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 10 4') == 'NO'\nassert solution('3 10 3') == 'YES'\nassert solution('3 8 51') == 'YES'\nassert solution('3 8 52') == 'YES'\nassert solution('3 8 52') == 'YES'\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n'''\n"
    },
    {
        "number": 118,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '1 1'\nassert solution('1\\n2\\n3\\n') == '1 -1'\nassert solution('1\\n2\\n3\\n') == '1 -1'\nassert solution('1\\n1\\n2\\n') == '1 1'\nassert solution('1\\n2\\n1\\n') == '1 1'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''4\n1 5\n2 6\n6 20\n''') == '-1 -1'\nassert solution('''9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\nassert solution('''10\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9\n2 3\n2 9\n1 10\n2 9\n3 9"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n'''\n\nsolution\n\nIn this problem, we want to find two distinct indices i and j that segment a_{i} lies within segment a_{j}.\n\nSegment [l_1, r_1] lies within segment [l_2, r_2] iff l_1 \u2265 l_2 and r_1 \u2264 r_2.\n\nThe problem is easy if we know that all the segments lie within the same interval, so we can use binary search.\n\nThe idea is as follows:\n\nIf we know all the segments are within the same interval, we can quickly find the interval size, and use binary search on that interval.\n\nIf we know all the segments are within the same interval, but we don't know the interval size, we can try to guess it from the first two segments. If we can guess the interval size, then we can use binary search on the interval.\n\nIf we know all the segments are not within the same interval, we can quickly find the intersection point by using the idea of finding the point where the segments first overlap.\n\nThe idea is as follows:\n\nIf we know all the segments lie within the same interval, we can quickly find the interval size, and use binary search on that interval.\n\nIf we know all the segments are not within the same interval, we can quickly find the intersection point by using the idea of finding the point where the segments first overlap.\n\nFor the first two segments, we can find the interval size by computing the difference of their endpoints. If the interval size is negative, then the first segment is within the second segment, and vice-versa.\n\nFrom the endpoint of the first segment, we compute the point where the segments first overlap.\n\nIf the interval size is positive, then we know that the first segment is within the second segment. We can use binary search to quickly find the first point of overlap.\n\nIf the interval size is negative, we know that the first segment is outside the second segment. We can use the same idea as above to quickly find the point of overlap.\n\n\"\"\"\n\n\"\"\"\n\nfor each line of input\n    find interval size\n    find endpoint of first segment\n    find endpoint of second segment\n    compute intersection point\n    compute endpoint of first segment\n    compute endpoint of second segment\n    compute endpoint of first segment\n    compute endpoint of second segment\n    compute interval size\n    if interval size is positive, then first segment is within second segment\n    if interval size is negative, then first segment is outside second segment\n    if interval size is 0, then first segment is equal to second segment\n    return first point of overlap\n\"\"\"\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('1 5\\n2 6\\n6 20\\n') == '-1 -1'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1'\nassert solution('1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\nassert solution('1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '2 1'\nassert solution('2 9') == '2 -1'\nassert solution('2 3') == '-1 -1'\nassert solution('1 5') == '-1 -1'\nassert solution('3 9') == '2 1'\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''1\n1\n''') == '1 -1'\n\nassert solution('''4\n1 2\n2 1\n1 2\n2 1\n''') == '1 2'\n\nassert solution('''2\n1 1\n2 1\n''') == '1 -1'"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 10\\n2 9\\n3 9\\n2 3\\n2 9\\n') == '2 1\\n'\nassert solution('3\\n1 5\\n2 6\\n6 20\\n') == '-1 -1\\n'\nassert solution('4\\n1 1\\n2 3\\n3 2\\n2 2\\n') == '-1 -1\\n'\nassert solution('2\\n1 1\\n2 1\\n') == '-1 -1\\n'\n\n'''\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 1\\n4 1\\n5 1\") == \"2 1\\n\"\nassert solution(\"2 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\") == \"1 1\\n\"\nassert solution(\"2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 19\\n\") == \"1 1\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 119,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 10\n2 9\n3 9\n2 3\n2 9\n''') == '2 1'\n\nassert solution('''3\n1 5\n2 6\n6 20\n''') == '-1 -1'\n\nassert solution('''1\n1 10\n''') == '-1 -1'\n\nassert solution('''1\n1 2\n2 2\n''') == '-1 -1'\n\nassert solution('''1\n1 1\n1 1\n''') == '-1 -1'"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AA??') == '==='\nassert solution('????G?') == '==='\nassert solution('ATATATATAT') == '==='\nassert solution('AAA???') == '===='\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nAGCT\\n') == 'AGACGTCT'\nassert solution('4\\n????G?\\n') == '==='\nassert solution('4\\nAA??\\n') == '==='\nassert solution('8\\nAG?C??CT\\n') == 'AGACGTCT'\nassert solution('8\\nAGCT\\n') == 'AGACGTCT'\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8\\nAG?C??CT') == 'AGACGTCT'\nassert solution('4\\nAGCT') == 'AGCT'\nassert solution('6\\n????G?') == '==='\nassert solution('6\\nAGCT') == '==='\nassert solution('6\\nGGCT') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AGCT') == 'AGCT'\nassert solution('????G?') == '==='\nassert solution('AA??') == '==='\nassert solution('AA?') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\nAA??\\n\") == \"AA?\"\nassert solution(\"5\\nC?A\\n\") == \"C?\"\nassert solution(\"5\\nCC?A\\n\") == \"CC?\"\nassert solution(\"5\\nCCAA\\n\") == \"CCAA\"\nassert solution(\"5\\nCCAAAC\\n\") == \"CAAA\"\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('AG?C??CT') == 'AGACGTCT'\nassert solution('AGCT') == 'AGCT'\nassert solution('????G?') == '==='\nassert solution('AA??') == '==='\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8\\nAG?C??CT\\n\") == \"AGACGTCT\"\nassert solution(\"4\\nAGCT\\n\") == \"AGCT\"\nassert solution(\"6\\n????G?\\n\") == \"===\nassert solution(\"4\\nAA??\\n\") == \"===\nassert solution(\"6\\n????G?\\n\") == \"===\n\"\"\"\n\nfrom sys import stdin,stdout\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('AB??CD??EF?G??H??I?') == 'ABACDEDFGGHI'\nassert solution('A??B??C??D') == 'ABD'\nassert solution('??C??D??F??G??H??I?') == '==='\nassert solution('??C??D??F??G??H??I???') == '==='\nassert solution('AB??CD??EF?G??H??I???') == 'ABACDEDFGGHI'\n"
    },
    {
        "number": 120,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''8\nAG?C??CT\n''') == 'AGACGTCT'\nassert solution('''4\nAGCT\n''') == 'AGCT'\nassert solution('''6\n????G?\n''') == '==='\nassert solution('''4\nAA??\n''') == '==='\nassert solution('''4\nAG?C??\n''') == '==='\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('x.ox') == 'NO'\nassert solution('x.o.ooxx') == 'YES'\nassert solution('x.oxoxoxx') == 'NO'\nassert solution('oxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxxoxxoxoxoxoxoxoxoxoxoxoxoxoxoxxoxoxoxxoxxoxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxxoxx"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"xx..\\n.oo.\\nx...\\noox\\n\") == \"YES\"\nassert solution(\"x.ox\\no...\\n.x..\\nooxx\\n\") == \"NO\"\nassert solution(\"o.x.\\no...\\n.x..\\nooxx\\n\") == \"NO\"\nassert solution(\"x..x\\n..oo\\no...\\nx.xo\\n\") == \"YES\"\nassert solution(\"o.x.\\no...\\n.x..\\nooxx\\n\") == \"YES\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"xx..\\n.oo.\\nx...\\noox.\") == \"YES\"\nassert solution(\"x.ox\\no...\\n.x..\\noo.x\") == \"NO\"\nassert solution(\"o.x.\\no...\\n.x..\\noo.x\") == \"NO\"\nassert solution(\"x..x\\n..oo\\no...\\nx.xo\") == \"NO\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('x.ox') == 'NO'\nassert solution('o.x.\\n o...\\n.x..\\n ooxx\\n') == 'YES'\nassert solution('x..x\\n..oo\\n o...\\n x.xo\\n') == 'NO'\nassert solution('x..x\\n..oo\\n o...\\n x.xo\\n') == 'YES'\nassert solution('x.ox\\n o...\\n.x..\\n ooxx\\n') == 'NO'"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('x.ox') == 'NO'\nassert solution('o.x.\\no...\\n.x..\\nooxx') == 'NO'\nassert solution('x..x\\n..oo\\no...\\nx.xo') == 'YES'"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ox..\\n...\\n....\\nx.xo') == 'YES'\nassert solution('x..x\\n..oo\\nx.o.\\noo.x') == 'NO'\nassert solution('x.x\\n..oo\\no...\\nx.xo') == 'YES'\nassert solution('o.x.\\noo...\\noo..\\nx.xo') == 'NO'\nassert solution('ox..\\n...\\n....\\no.xo') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\nxx..\n.oo.\nx...\noox.''') == 'YES'\nassert solution('''\nx..x\n..oo\no...\nx.xo''') == 'NO'\nassert solution('''\no.x.\no...\n.x..\nooxx''') == 'NO'\nassert solution('''\no.x.\no...\n.x..\nooxx''') == 'NO'\nassert solution('''\no.x.\no...\n.x..\nooxx''') == 'NO'\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"x.ox\\nx..\\no...\\nx.xo\\n\") == \"YES\"\nassert solution(\"x.ox\\no..\\nx.o.\\noo.x\\n\") == \"NO\"\nassert solution(\"x.ox\\nx..\\nx.o.\\nxoxx\\n\") == \"NO\"\nassert solution(\"o.x.\\no...\\n.x..\\nooxx\\n\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('xx..\\n.oo.\\nx...\\noox.\\n') == \"YES\"\nassert solution('x.ox\\no...\\n.x..\\nooxx\\n') == \"NO\"\nassert solution('o.x.\\no...\\n.x..\\nooxx\\n') == \"YES\"\nassert solution('x..x\\n..oo\\no...\\nx.xo\\n') == \"NO\""
    },
    {
        "number": 121,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('x..x') == \"YES\"\nassert solution('x...') == \"YES\"\nassert solution('oox') == \"NO\"\nassert solution('x.x') == \"NO\""
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n''') == 'YES'\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'\nassert solution('''4\n1 2 3 4\n''') == 'YES'\nassert solution('''4\n2 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n''') == 'YES'\n\nassert solution('''5\n1 2 3 4 5\n''') == 'NO'\n\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'\n\nassert solution('''5\n2 2 3 4 1\n''') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\"\"\") == \"\"\"YES\"\"\"\nassert solution(\"\"\"5\"\"\") == \"\"\"NO\"\"\"\nassert solution(\"\"\"1 3 2\"\"\") == \"\"\"YES\"\"\"\nassert solution(\"\"\"1 2 3 4 5\"\"\") == \"\"\"NO\"\"\"\nassert solution(\"\"\"2 2 3 4 5\"\"\") == \"\"\"YES\"\"\"\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 3 2') == 'YES'\nassert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n2 2 3 4 5') == 'YES'\nassert solution('6\\n1 2 3 4 5 6') == 'NO'\nassert solution('7\\n1 2 3 4 5 6 7') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1\n3 2\n''') == 'YES'\nassert solution('''1\n2 2\n''') == 'NO'\nassert solution('''1\n2 3 4 5\n''') == 'NO'\nassert solution('''1\n2 3 5\n''') == 'YES'\nassert solution('''5\n2 2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == 'YES'\nassert solution('1 2 3 4 5 6') == 'NO'\nassert solution('2 2 3 4 5 6') == 'YES'\nassert solution('1 2 3 4 5 6 7') == 'NO'\nassert solution('1 2 3 4 5 6 7 8') == 'YES'\n"
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 2') == 'YES'\nassert solution('4\\n2 2 3') == 'NO'\nassert solution('5\\n1 2 3 4 5') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 122,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 3 2\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\nassert solution('''\n5\n2 2 3 4 5\n''') == 'YES'\nassert solution('''\n6\n6 5 4 3 2 1\n''') == 'NO'\nassert solution('''\n6\n1 1 2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Yes'\n\n---\n\nA few years ago, Hitagi encountered a giant crab, who stole the whole of her body weight. Ever since, she tried to avoid contact with others, for fear that this secret might be noticed.\n\nTo get rid of the oddity and recover her weight, a special integer sequence is needed. Hitagi's sequence a has a length of n. Lost elements in it are denoted by zeros. Kaiki provides another sequence b, whose length k equals the number of lost elements in a (i.e. the number of zeros). Hitagi is to replace each zero in a with an element from b so that each element in b should be used exactly once. Hitagi knows, however, that, apart from 0, no integer occurs in a and b more than once in total.\n\nIf the resulting sequence is not an increasing sequence, then it has the power to recover Hitagi from the oddity. You are to determine whether this is possible, or Kaiki's sequence is just another fake. In other words, you should detect whether it is possible to replace each zero in a with an integer from b so that each integer from b is used exactly once, and the resulting sequence is not increasing.\n\n\n-----Input-----\n\nThe first line of input contains two space-separated positive integers n (2 \u2264 n \u2264 100) and k (1 \u2264 k \u2264 n) \u2014 the lengths of sequence a and b respectively.\n\nThe second line contains n space-separated integers a_1, a_2,..., a_{n} (0 \u2264 a_{i} \u2264 200) \u2014 Hitagi's broken sequence with exactly k zero elements.\n\nThe third line contains k space-separated integers b_1, b_2,..., b_{k} (1 \u2264 b_{i} \u2264 200) \u2014 the elements to fill into Hitagi's sequence.\n\nInput guarantees that apart from 0, no integer occurs in a and b more than once in total.\n\n\n-----Output-----\n\nOutput \"Yes\" if it's possible to replace zeros in a with elements in b and make the resulting sequence not increasing, and \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4 2\n11 0 0 14\n5 4\n\nOutput\nYes\n\nInput\n6 1\n2 3 0 8 9 10\n5\n\nOutput\nNo\n\nInput\n4 1\n8 94 0 4\n89\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the first sample:   Sequence a is 11, 0, 0, 14.  Two of the elements are lost, and the candidates in b are 5 and 4.  There are two possible resulting sequences: 11, 5, 4, 14 and 11, 4, 5, 14, both of which fulfill the requirements. Thus the answer is \"Yes\". \n\nIn the second sample, the only possible resulting sequence is 2, 3, 5, 8, 9, 10, which is an increasing sequence and therefore invalid.\n\nIn the third sample, the only possible resulting sequence is 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100.\n\nIn the fourth sample, the only possible resulting sequence is 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100.\n\n\n-----Note-----\n\nIn the first sample:   Sequence a is 11, 0, 0, 14.  Two of the elements are lost, and the candidates in b are 5 and 4.  There are two possible resulting sequences: 11, 5, 4, 14 and 11, 4, 5, 14, both of which fulfill the requirements. Thus the answer is \"Yes\". \n\nIn the second sample, the only possible resulting sequence is 2, 3, 5, 8, 9, 10, which is an increasing sequence and therefore invalid.\n\nIn the third sample, the only possible resulting sequence is 4, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'Yes'\nassert solution('6 1') == 'No'\nassert solution('7 7') == 'Yes'\nassert solution('5 4') == 'No'\nassert solution('0 0 0 0 0 0 0') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n11 0 0 14\n5 4''') == 'Yes'\nassert solution('''6 1\n2 3 0 8 9 10\n5\n''') == 'No'\nassert solution('''7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'Yes'\nassert solution('''7 2\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n''') == 'No'\nassert solution('''4 1\n8 94 0 4\n89\n''') == 'Yes'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"Yes\"\nassert solution(\"6 1\") == \"No\"\nassert solution(\"7 7\") == \"Yes\"\nassert solution(\"0 0 0 0 0 0 0\") == \"Yes\"\nassert solution(\"8 94 0 4\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('6 1\\n2 3 0 8 9 10\\n5') == 'No'\nassert solution('7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7') == 'Yes'\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 2\") == \"Yes\"\nassert solution(\"6 1\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\nassert solution(\"7 7\") == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n11 0 0 14\\n5 4\\n\") == \"Yes\"\nassert solution(\"6 1\\n2 3 0 8 9 10\\n5\\n\") == \"Yes\"\nassert solution(\"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\\n\") == \"Yes\"\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n11 0 0 14\\n5 4') == 'Yes'\nassert solution('4 1\\n8 94 0 4\\n89') == 'No'\nassert solution('4 0\\n0 0 0 0\\n1 2 3 4 5 6 7\\n5 4') == 'Yes'\nassert solution('7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\\n5') == 'Yes'\nassert solution('3 1\\n1 2 3\\n1') == 'No'\n"
    },
    {
        "number": 123,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('5 1 1\\n4 3 2') == 'NO'\nassert solution('5 1 1\\n5 4 3') == 'YES'\n\n\n-----Add test cases-----\n\n\"\"\""
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 1 2\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 1 2\") == \"NO\"\nassert solution(\"2 3 3\") == \"NO\"\nassert solution(\"2 2 2\") == \"NO\"\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('1 10 1') == 'YES'\nassert solution('5 10 2') == 'YES'\nassert solution('10 10 1') == 'YES'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'NO'\n\n\n'''\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1 6 2''') == 'YES'\nassert solution('''5 1 1''') == 'NO'\nassert solution('''4 3 3''') == 'YES'\nassert solution('''1 1 1''') == 'NO'\nassert solution('''10 10 10''') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1 6 2\") == \"YES\"\nassert solution(\"5 1 1\") == \"NO\"\nassert solution(\"10 5 2\") == \"YES\"\nassert solution(\"10 6 3\") == \"YES\"\nassert solution(\"4 2 1\") == \"YES\"\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 6 2') == 'YES'\nassert solution('5 1 1') == 'YES'\nassert solution('5 1 1') == 'NO'\nassert solution('1 2 1') == 'YES'\nassert solution('1 2 1') == 'NO'\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 6 2') == \"YES\"\nassert solution('5 1 1') == \"NO\"\nassert solution('5 10 2') == \"YES\"\nassert solution('5 11 2') == \"NO\"\nassert solution('1 2 1') == \"NO\"\n"
    },
    {
        "number": 124,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 0 0\") == \"YES\"\nassert solution(\"0 0 0 0 1\") == \"NO\"\nassert solution(\"0 1 0 0 0\") == \"YES\"\nassert solution(\"0 1 0 0 1\") == \"YES\"\nassert solution(\"0 0 1 0 0\") == \"YES\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"NO\"\nassert solution(\"1 0 0 0\") == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1''') == \"YES\"\nassert solution('''0 1 1 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n''') == \"NO\"\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n''') == \"NO\"\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n''') == \"NO\"\nassert solution('''1 0 0 0\n0 0 0 1\n1 0 1 0\n0 0 0 0\n''') == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n') == 'YES'\nassert solution('0 1 0 0\\n1 0 1 0\\n0 0 1 0\\n0 0 0 1\\n') == 'NO'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n') == 'NO'\n\"\"\"\n\nfrom typing import Tuple\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0''') == \"NO\"\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0''') == \"YES\"\nassert solution('''0 1 0 0\n1 0 1 0\n0 0 1 0\n0 0 0 1''') == \"NO\"\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0''') == \"NO\"\nassert solution('''1 0 0 0\n1 0 1 0\n0 0 1 0\n0 0 0 1''') == \"YES\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 0 0 1\\n') == 'YES'\nassert solution('0 1 0 0\\n1 0 1 0\\n1 1 0 0\\n0 0 0 1\\n') == 'NO'\nassert solution('1 0 0 0\\n0 0 0 1\\n0 0 0 0\\n1 0 1 0\\n') == 'NO'\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0\n\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"0 1 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 0 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n\"\"\"\n) == \"NO\"\n\nassert solution(\n    \"\"\"0 0 1 1\n0 0 1 1\n0 1 1 1\n1 0 0 0\n\"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"1 0 0 0\n0 0 0 1\n0 0 0 0\n0 0 1 0\n\"\"\"\n) == \"NO\""
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 1\") == \"YES\"\nassert solution(\"0 1 0 0\") == \"YES\"\nassert solution(\"0 0 1 0\") == \"YES\"\nassert solution(\"0 0 0 1\") == \"NO\"\n"
    },
    {
        "number": 125,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 0 0 1\n0 1 0 0\n0 0 1 0\n0 0 0 1\n''') == 'YES'\nassert solution('''0 1 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n''') == 'NO'\nassert solution('''1 0 0 0\n0 0 0 1\n0 0 0 0\n1 0 1 0\n''') == 'NO'\nassert solution('''0 1 0 0\n1 0 1 0\n1 1 0 0\n0 0 0 1\n''') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('1') == 'NO'\nassert solution('123') == 'NO'\nassert solution('123456789') == 'YES'\nassert solution('12345678') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'NO'\nassert solution('9') == 'YES'\nassert solution('123456789') == 'NO'\nassert solution('911') == 'YES'\nassert solution('09') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3\n586\n'''\n) == 'NO'\nassert solution(\n'''\n2\n09\n'''\n) == 'NO'\nassert solution(\n'''\n9\n123456789\n'''\n) == 'YES'\nassert solution(\n'''\n3\n911\n'''\n) == 'YES'\nassert solution(\n'''\n5\n0123456789\n'''\n) == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('2\\n2') == 'YES'\nassert solution('3\\n1') == 'NO'\nassert solution('4\\n1') == 'YES'\nassert solution('5\\n1') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"586\") == \"NO\"\nassert solution(\"09\") == \"NO\"\nassert solution(\"123456789\") == \"YES\"\nassert solution(\"911\") == \"YES\"\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''9''') == 'NO'\nassert solution('''123456789''') == 'YES'\n'''\n\n'''\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6\\n123456789') == 'YES'\nassert solution('3\\n09') == 'NO'\nassert solution('3\\n091') == 'NO'\nassert solution('9\\n123456789') == 'YES'\nassert solution('9\\n12345678') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\\\n3\n586\n''') == 'NO'\n\nassert solution('''\\\n2\n09\n''') == 'NO'\n\nassert solution('''\\\n9\n123456789\n''') == 'YES'\n\nassert solution('''\\\n3\n911\n''') == 'YES'\n"
    },
    {
        "number": 126,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == \"NO\"\nassert solution('''5''') == \"NO\"\nassert solution('''9''') == \"YES\"\nassert solution('''123456789''') == \"YES\"\nassert solution('''09''') == \"YES\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"4 2\n2 1\n3 5\n2 3\n1 5\n\"\"\") == \"10\"\nassert solution(\n\"\"\"4 1\n0 2\n0 3\n3 5\n0 6\n\"\"\") == \"5\"\nassert solution(\n\"\"\"8 1\n4 1\n3 5\n2 3\n1 5\n3 2\n6 3\n5 4\n7 4\n\"\"\") == \"16\"\nassert solution(\n\"\"\"5 3\n3 1\n2 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"9 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n\"\"\") == \"9\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2 1\\n3 5\\n2 3') == '10'\n\"\"\""
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output\n\n\n\"\"\""
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 1\\n3 5\\n2 3\\n1 5') == 10\nassert solution('4 1\\n0 2\\n0 3\\n3 5\\n0 6') == 5\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 1\\n3 5\\n2 3\\n1 5') == '10'\nassert solution('4 1\\n0 2\\n0 3\\n3 5\\n0 6\\n') == '5'\n\n\n-----\n\nInp:\n4 2\n2 1\n3 5\n2 3\n1 5\n\nOut:\n10\n\nInp:\n4 1\n0 2\n0 3\n3 5\n0 6\n\nOut:\n5\n'''\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 1\n    2 1''') == '10'\nassert solution('''4 1\n    0 2\n    0 3\n    3 5\n    0 6''') == '5'\nassert solution('''4 1\n    0 1\n    0 2\n    3 5\n    0 6''') == '5'\nassert solution('''1 1\n    0 1\n    0 1\n    3 5\n    0 6''') == '5'\nassert solution('''10 1\n    10 1\n    10 1\n    10 1\n    10 1\n    10 1\n    10 1\n    10 1\n    10 1\n    10 1''') == '45'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin[0]\n\"\"\"\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 1\\n3 5\\n2 3\") == 10\nassert solution(\"4 1\\n0 2\\n0 3\\n3 5\\n0 6\\n\") == 5\n\n\n\n\"\"\""
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2') == '10'\nassert solution('1 1') == '1'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\nassert solution('3 2') == '4'\n"
    },
    {
        "number": 127,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2 1\\n3 5\\n2 3') == '10'\nassert solution('4 1\\n0 2\\n0 3\\n3 5\\n0 6') == '5'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == 0\nassert solution('2 10') == 10\nassert solution('5 2') == 10\nassert solution('10 10') == 0\nassert solution('1 10') == 0\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\"\"\""
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"10\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\nassert solution('10 7') == '3'\n\"\"\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"0\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"5 4\") == \"10\"\nassert solution(\"5 4\") == \"10\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2') == '10'\nassert solution('1 10') == '0'\nassert solution('10 10') == '0'\nassert solution('5 2') == '10'\nassert solution('1 10') == '0'\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n"
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == '10'\nassert solution('1 10') == '0'\n\"\"\""
    },
    {
        "number": 128,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2''') == '10'\nassert solution('''1 10''') == '0'\nassert solution('''2 2''') == '0'\nassert solution('''3 3''') == '0'\nassert solution('''4 4''') == '0'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\nassert solution('''1000000 1000000 1000 1000''') == '1'\n'''\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\nassert solution('1 2 3 4') == '-1'\nassert solution('1 2 1 3') == '-1'\nassert solution('1 2 3 4') == '-1'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\nassert solution('10 22 22 22') == '3'\nassert solution('10 22 22 22') == '-1'\nassert solution('20 22 22 22') == '3'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\nassert solution('10 11 2 1') == '1'\nassert solution('20 15 3 4') == '1'\nassert solution('20 15 2 3') == '1'\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\n\"\"\"\n\nThe best thing about this problem is that you are dealing with a very small problem that can be solved with simple loops.\n\nOne problem with this approach is that the solution would have a long runtime because you would be making a loop for each possible coin.\n\nI looked at the solution using a hashtable to keep track of the coins that have been used. The key was a tuple of the form (number, coin),\nand the value was a set of the coins that were already used.\n\nIn this solution, I will try to figure out a faster solution that uses a hash table instead of a loop for every coin.\n\nFirst, the solution is to go over the collection of coins (each item is a tuple) and for each coin, check whether the current coin is in the collection,\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 15 2 3') == '1'\nassert solution('10 11 2 4') == '-1'\nassert solution('10 17 2 2') == '3'\nassert solution('2 2 2 2') == '-1'\nassert solution('10 100000000 11 1') == '2'\n\"\"\"\n"
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''20 15 2 3''') == '1'\nassert solution('''10 11 2 4''') == '-1'\nassert solution
    },
    {
        "number": 129,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"20 15 2 3\") == 1\nassert solution(\"10 11 2 4\") == -1\nassert solution(\"1 2 3 4 5\") == -1\nassert solution(\"1 2 3 4 6\") == -1\nassert solution(\"2 3 4 5 6\") == -1\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == -1\nassert solution('1 2') == -1\nassert solution('2 3') == 1\nassert solution('WWWW') == -1\nassert solution('WWWB') == 1\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW') == '1'\n\n\n-----"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW\n''') == '5'\n\nassert solution('''\n1 2\nBB\n''') == '-1'\n\nassert solution('''\n3 3\nWWW\nWWW\nWWW\n''') == '1'\n\nassert solution('''\n5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW\n''') == '5'\n'''\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"3 3\") == \"-1\"\nassert solution(\"1 2\") == \"-1\"\nassert solution(\"5 4\") == \"-1\"\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW\\n') == '5'\nassert solution('5 2\\nWWWWWW\\nWWWWWW\\n') == '-1'\nassert solution('1 2\\nBB') == '-1'\nassert solution('3 3\\nWWW\\nWWW\\nWWW\\n') == '1'\nassert solution('2 2\\nBB') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''1 2\nBB''') == '-1'\nassert solution('''3 3\nWWW\nWWW\nWWW''') == '1'\nassert solution('''3 4\nWWWW\nWWWB\nWWWW''') == '2'\nassert solution('''2 4\nWWW\nWWWW''') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\nBB') == '-1'\nassert solution('5 4\\nWWWW\\nWWWB\\nWWWB\\nWWBB\\nWWWW') == '5'\nassert solution('2 2\\nW') == '-1'\nassert solution('2 2\\nWB') == '-1'\nassert solution('1 2\\nBB') == '-1'\n"
    },
    {
        "number": 130,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''1 2\nBB''') == '-1'\nassert solution('''3 3\nWWW\nWWW\nWWW\n''') == '1'\nassert solution('''5 4\nWWWW\nWWWB\nWWWB\nWWBB\nWWWW''') == '5'\nassert solution('''2 2\nBB\nBB\n''') == '-1'"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\\n\") == \"Yes\"\nassert solution(\"3\\n2 3 9\\n1 7 9\\n\") == \"No\"\n\n\n'''\nimport sys\nfrom collections import defaultdict\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n2 1 4\\n\") == \"No\"\nassert solution(\"2\\n1 1 1\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"4\\n1 7 9\\n1 0 9\\n\") == \"No\"\nassert solution(\"3\\n2 3 9\\n1 7 9\\n\") == \"No\"\n\n\n\n\n\n\n\n\n\nFor each test case, output \"Yes\" if the jury members are sure to have made a mistake during the night or \"No\" if they are sure to have made a mistake.\n\nIn the first test case, the number of stones in the first pile was $1$, the number of stones in the second pile was $2$, and the number of stones in the third pile was $3$.\n\nIn the second test case, the number of stones in the first pile was $1$, the number of stones in the second pile was $0$, and the number of stones in the third pile was $9$.\n\"\"\"\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'\nassert solution('4\\n3 9 9 3 9\\n3 9 9 9 3\\n') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('    \\n') == ''\nassert solution('1') == 'No'\nassert solution('1 1') == 'Yes'\nassert solution('2 1 4 3 5') == 'Yes'\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\n\"\"\"\n@staticmethod\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 1 4 3 5\\n\") == \"Yes\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\\n\") == \"Yes\"\nassert solution(\"3\\n2 3 9\\n1 7 9\\n\") == \"No\"\nassert solution(\"5\\n1 1 1 1 1\\n1 0 1 0 1\\n\") == \"No\"\nassert solution(\"3\\n2 3 9\\n1 7 9\\n\") == \"No\"\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5') == \"Yes\"\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == \"Yes\"\nassert solution('3\\n2 3 9\\n1 7 9\\n') == \"No\"\n"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5\\n2 1 4 3 5\\n') == 'Yes'\nassert solution('5\\n1 1 1 1 1\\n1 0 1 0 1\\n') == 'Yes'\nassert solution('3\\n2 3 9\\n1 7 9\\n') == 'No'"
    },
    {
        "number": 131,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 1 4 3 5\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n5\n2 3 9\n1 7 9\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n3\n2 3 9\n1 7 9\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n1\n0\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"No\"\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\\n360\\n\") == \"360\"\nassert solution(\"4\\n170 30 150 10\\n\") == \"0\"\nassert solution(\"3\\n100 100 160\\n\") == \"40\"\nassert solution(\"1\\n360\\n\") == \"360\"\nassert solution(\"2\\n90 90 90 90\\n\") == \"0\"\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"4\\n90 90 90 90\") == \"\"\nassert solution(\"4\\n90 90 90 90\\n90 90 90 90\") == \"\"\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n90 90 90 90\\n') == '0'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('1\\n360\\n') == '360'\nassert solution('4\\n170 30 150 10\\n') == '0'\n\n\"\"\"\n\n\nfrom math import acos, pi\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n90 90 90 90\n''') == '0'\nassert solution('''3\n100 100 160\n''') == '40'\nassert solution('''1\n360\n''') == '360'\nassert solution('''4\n170 30 150 10\n''') == '0'\nassert solution('''4\n1 90 90 90\n''') == '0'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n90 90 90 90\\n') == '0'\nassert solution('1\\n360\\n') == '360'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('4\\n170 30 150 10\\n') == '0'\nassert solution('4\\n360 360 360 360\\n') == '360'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n90 90 90 90\\n') == '0'\nassert solution('3\\n100 100 160\\n') == '40'\nassert solution('1\\n360\\n') == '360'\nassert solution('4\\n170 30 150 10\\n') == '0'\nassert solution('4\\n30 60 120 90\\n') == '60'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n360') == '0'\nassert solution('4\\n170 30 150 10') == '0'\nassert solution('1\\n360') == '360'\nassert solution('4\\n170 30 150 10') == '40'\n"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n90 90 90 90\n''') == '0'\n\nassert solution('''3\n100 100 160\n''') == '40'\n\nassert solution('''1\n360\n''') == '360'\n\nassert solution('''4\n170 30 150 10\n''') == '0'\n\"\"\""
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n4\n90 90 90 90\n\n''') == '0'\n\nassert solution('''\n3\n100 100 160\n\n''') == '40'\n\nassert solution('''\n1\n360\n\n''') == '360'\n\nassert solution('''\n4\n170 30 150 10\n\n''') == '0'\n\nassert solution('''\n1\n450\n\n''') == '0'"
    },
    {
        "number": 132,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n90 90 90 90') == '0'\nassert solution('4\\n90 90 90 90') == '0'\nassert solution('1\\n360') == '360'\nassert solution('4\\n170 30 150 10') == '0'\nassert solution('4\\n170 30 150 10') == '0'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\n-----Solution-----\n'''\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 3''') == '7'\nassert solution('''2 2''') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('3 4') == '5'\nassert solution('8 4') == '20'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"7\"\nassert solution(\"2 2\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == '7'\nassert solution(\"2 2\") == '9'\nassert solution(\"2 3\") == '10'\nassert solution(\"1 1\") == '1'\nassert solution(\"2 2\") == '9'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('2 1') == '2'\nassert solution('2 2') == '4'\nassert solution('2 2') == '8'\n"
    },
    {
        "number": 133,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3') == '7'\nassert solution('2 2') == '9'\nassert solution('3 2') == '0'\nassert solution('4 5') == '0'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\n\n\n\n[Image](https://user-images.githubusercontent.com/3109379/144413504-53f8f20a-b842-11eb-8501-bcf42a80abd6.png)\n\"\"\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\n\n-----"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n\n\"\"\""
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('67') == '2244 2245'\nassert solution('33') == '12 5'\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\nassert solution('67') == '2244 2245'\n'''\n"
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4 5\"\nassert solution(\"6\") == \"8 10\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"17\") == \"144 145\"\nassert solution(\"67\") == \"2244 2245\"\n\"\"\""
    },
    {
        "number": 134,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '4 5'\nassert solution('6') == '8 10'\nassert solution('1') == '-1'\nassert solution('17') == '144 145'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4') == 'No'\nassert solution('2 5') == 'Yes'\nassert solution('10 9') == 'Yes'\nassert solution('100 9') == 'Yes'\nassert solution('100 100') == 'No'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\n\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4') == 'No'\nassert solution('4 1') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('5 19') == 'No'\nassert solution('5 23') == 'No'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 4') == 'No'\nassert solution('5 3') == 'Yes'\n'''\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"5 3\") == \"No\"\nassert solution(\"4 2\") == \"Yes\"\nassert solution(\"5 4\") == \"No\"\nassert solution(\"1000000000000000 1000000000\") == \"Yes\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"3 9\") == \"No\"\nassert solution(\"8 5\") == \"Yes\"\nassert solution(\"6 12\") == \"No\"\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"7 19\") == \"No\"\nassert solution(\"7 13\") == \"Yes\"\nassert solution(\"1 10\") == \"Yes\"\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'No'\nassert solution('2 1') == 'Yes'\nassert solution('3 1') == 'Yes'\nassert solution('5 2') == 'No'\nassert solution('5 3') == 'Yes'\n"
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 135,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 4') == \"No\"\nassert solution('5 3') == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9\n10''') == '<'\nassert solution('''11\n10''') == '>'\nassert solution('''0123\n12345''') == '='\nassert solution('''0123\n111''') == '>'\nassert solution('''9\n10''') == '<'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n10''') == '<'\nassert solution('''11\n10''') == '>'\nassert solution('''0123\n12345''') == '='\nassert solution('''0123\n111''') == '>'\nassert solution('''0\n0''') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \">\"\nassert solution(\"10\") == \"<\"\nassert solution(\"00012345\") == \"=\"\nassert solution(\"12345\") == \">\"\nassert solution(\"0123\") == \">\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000000\\n1000000') == '>'\nassert solution('1000000\\n1000000') == '<'\nassert solution('1000000\\n1000000') == '='\nassert solution('0\\n1000000') == '>'\nassert solution('1\\n1000000') == '='\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \">\"\nassert solution(\"1\") == \"<\"\nassert solution(\"0\") == \"=\"\nassert solution(\"9\") == \">\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9') == '<'\nassert solution('10') == '>'\nassert solution('11') == '='\nassert solution('00012345') == '<'\nassert solution('12345') == '>'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9\\n10') == '<'\nassert solution('11\\n10') == '>'\nassert solution('00012345\\n12345') == '='\nassert solution('0123\\n9') == '>'\nassert solution('0123\\n111') == '>'\nprint(solution(''))\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12345') == '<'\nassert solution('1234567') == '>'\nassert solution('99') == '='\nassert solution('9999999999999999999999') == '>'\nassert solution('9') == '<'\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"9\\n10\") == \">\"\nassert solution(\"11\\n10\") == \"<\"\nassert solution(\"00012345\\n12345\") == \"=\"\nassert solution(\"0123\\n9\") == \">\"\nassert solution(\"0123\\n111\") == \"<\"\n"
    },
    {
        "number": 136,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''9\n10\n''') == '<'\nassert solution('''11\n10\n''') == '>'\nassert solution('''00012345\n12345\n''') == '='\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 1\n-1 0 1''') == '6'\nassert solution('''2 1\n1 0''') == '1'\nassert solution('''1 1\n-1''') == '2'\nassert solution('''1 2\n1 0''') == '0'\nassert solution('''2 2\n1 0''') == '0'\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1'\n\"\"\"\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 1\n-1 0 1''') == '6'\nassert solution('''2 1\n1 0''') == '1'\nassert solution('''1 1\n-1''') == '2'\nassert solution('''1 1\n1 0''') == '1'\nassert solution('''1 1\n1 0''') == '1'\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input) == output\n\n\n'''\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n\"\"\"\n\nfrom collections import defaultdict\n\nn, p = map(int, stdin.split())\ncolors = list(map(int, stdin.split()))\n\nd = defaultdict(int)\nfor i in range(n):\n    if colors[i] == -1:\n        d[i+1] = d[i]+1\n    else:\n        d[i+1] = d[i]\n\nprint((d[n] - d[p]) * (d[n] - d[p] + 1) // 2 % (10 ** 9 + 7))\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 1\n-1 0 1''') == '6'\nassert solution('''2 1\n1 0''') == '1'\nassert solution('''1 1\n-1''') == '2'\n'''\n"
    },
    {
        "number": 137,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1 3 4''') == '3'\nassert solution('''6 2 1 1''') == '1'\nassert solution('''4 4 4 4''') == '0'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 1 3 4''') == '3'\nassert solution('''6 2 1 1''') == '1'\nassert solution('''4 4 4 4''') == '0'\nassert solution('''999999999 1000000000 1000000000 1000000000''') == '1000000000'\n\n-----\n\nThere is only one integer n and it is divisible by 4.\n\nThere are two types of copybook's packs in the shop: it is possible to buy one copybook for a rubles, a pack of two copybooks for b rubles, and a pack of three copybooks for c rubles. Alyona already has n copybooks. What is the minimum amount of rubles she should pay to buy such number of copybooks k that n + k is divisible by 4? There are infinitely many packs of any type in the shop. Alyona can buy packs of different type in the same purchase.\n\nInput\n\nThe only line contains 4 integers n, a, b, c (1 \u2264 n, a, b, c \u2264 10^9).\n\nOutput\n\nPrint the minimum amount of rubles she should pay to buy such number of copybooks k that n + k is divisible by 4.\n\nExamples\nInput\n\n1 1 3 4\n\nOutput\n\n3\n\nInput\n\n6 2 1 1\n\nOutput\n\n1\n\nInput\n\n4 4 4 4\n\nOutput\n\n0\n\nInput\n\n999999999 1000000000 1000000000 1000000000\n\nOutput\n\n1000000000\n\nNote\n\nIn the first example Alyona can buy 3 packs of 1 copybook for 3a = 3 rubles in total. After that she will have 4 copybooks which she can split between the subjects equally.\n\nIn the second example Alyuna can buy a pack of 2 copybooks for b = 1 ruble. She will have 8 copybooks in total.\n\nIn the third example Alyona can split the copybooks she already has between the 4 subject equally, so she doesn't need to buy anything.\n\nIn the fourth example Alyona should buy one pack of one copybook.\n'''\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n\n\"\"\""
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1 3 4\") == \"3\"\nassert solution(\"6 2 1 1\") == \"1\"\nassert solution(\"4 4 4 4\") == \"0\"\nassert solution(\"999999999 1000000000 1000000000 1000000000\") == \"1000000000\"\n\"\"\"\n\nn, a, b, c = map(int, stdin.split())\n\nprint(n // 4)\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1 3 4') == '3'\nassert solution('6 2 1 1') == '1'\nassert solution('4 4 4 4') == '0'\nassert solution('999999999 1000000000 1000000000 1000000000') == '1000000000'\n\"\"\"\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1 1 3 4\n'''\n) == '3'\n\nassert solution(\n'''\n6 2 1 1\n'''\n) == '1'\n\nassert solution(\n'''\n999999999 1000000000 1000000000 1000000000\n'''\n) == '1000000000'\n"
    },
    {
        "number": 138,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\\\n3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'YES'\nassert solution('''\\\n2 4\n1 2\n2 3\n1 3\n''') == 'NO'\nassert solution('''\\\n3 5\n1 2\n2 3\n3 4\n3 5\n1 2\n''') == 'YES'\nassert solution('''\\\n1 2\n2 3\n3 4\n4 5\n1 2\n1 3\n1 4\n2 1\n3 1\n4 1\n''') == 'NO'\nassert solution('''\\\n1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n1 5\n2 3\n2 4\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"\n3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 4\n\"\"\"\n) == 'NO'\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n\") == \"NO\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n\") == \"YES\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n1 4\\n\") == \"YES\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n1 4\\n\") == \"YES\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5\\n') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\nYou can see the answer online here: http://www.codeskulptor.org/#user39_wm7q8gBHmKr3H3.py\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"1 2\\n2 3\") == \"YES\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"NO\"\nassert solution(\"1 2\\n2 3\\n3 2\") == \"NO\"\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'YES'\nassert solution('''5 6\n1 2\n2 3\n3 2\n3 1\n2 1\n4 5\n''') == 'NO'\nassert solution('''4 5\n1 2\n2 3\n3 2\n3 1\n3 4\n2 4\n''') == 'NO'\nassert solution('''5 7\n1 2\n2 3\n3 4\n4 5\n5 6\n5 7\n5 4\n''') == 'YES'\nassert solution('''4 5\n1 2\n2 3\n3 4\n4 5\n5 6\n3 1\n5 4\n''') == 'YES'\n"
    },
    {
        "number": 139,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'YES'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'NO'\nassert solution('3 2\\n1 2\\n2 3') == 'NO'\nassert solution('5 6\\n1 2\\n2 3\\n3 2\\n3 1\\n2 1\\n4 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4') == '1'\nassert solution('10 10') == '0'\nassert solution('4 0') == '0'\nassert solution('4 4') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 595') == '281'\nassert solution('1 1') == '0'\nassert solution('2 50') == '30'\nassert solution('5 240') == '26'\n\n\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('3 2') == '1'\nassert solution('1 1') == '0'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2\\n') == '0'\nassert solution('3 4\\n43 2\\n300 4\\n554 10\\n') == '281'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n') == '26'"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '281'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10') == '281'\nassert solution('1 1\\n1 1') == '0'\nassert solution('2 50\\n20 0\\n3 1\\n') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70') == '26'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0\\n10 0') == '26'\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 595\n43 2\n300 4\n554 10''') == '281'\nassert solution('''1 1\n1 1''') == '0'\nassert solution('''2 50\n20 0\n3 1\n''') == '30'\nassert solution('''5 240\n13 0\n50 25\n60 5\n155 70\n165 70''') == '26'\n\n\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 595\n43 2\n300 4\n554 10''') == '281'\n\nassert solution('''1 1\n1 1''') == '0'\n\nassert solution('''2 50\n20 0\n3 1''') == '30'\n\nassert solution('''5 240\n13 0\n50 25\n60 5\n155 70\n165 70''') == '26'\n\nassert solution('''5 50\n13 0\n50 25\n60 5\n155 70\n165 70''') == '26'"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 595\\n43 2\\n300 4\\n554 10') == '281'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('2 50\\n20 0\\n3 1\\n') == '30'\nassert solution('5 240\\n13 0\\n50 25\\n60 5\\n155 70\\n165 70') == '26'\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 140,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 2\n43 2\n300 4\n554 10\n\"\"\"\n) == \"281\"\nassert solution(\n\"\"\"\n1 1\n1 1\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n2 50\n20 0\n3 1\n\"\"\"\n) == \"30\"\nassert solution(\n\"\"\"\n5 240\n13 0\n50 25\n60 5\n155 70\n165 70\n\"\"\"\n) == \"26\"\nassert solution(\n\"\"\"\n5 240\n20 0\n50 25\n60 5\n155 70\n165 70\n\"\"\"\n) == \"26\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''10'''\n) == '10'\n\nassert solution(\n'''0'''\n) == '0'\n\nassert solution(\n'''3'''\n) == '3'\n\nassert solution(\n'''8'''\n) == '8'\n\nassert solution(\n'''9'''\n) == '9'"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8''') == \"10\"\nassert solution('''0\n0 0 0 0 0 0 0 0''') == \"0\"\nassert solution('''3\n0 4 1 0 0 9 8 3''') == \"3\"\n\n\"\"\""
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8''') == 10\nassert solution('''0\n0 0 0 0 0 0 0 0''') == 0\nassert solution('''3\n0 4 1 0 0 9 8 3''') == 3\nprint(\"All tests passed successfully!\")\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3') == '3'\nassert solution('9\\n0 0 0 0 0 0 0 0') == '0'\nassert solution('8\\n0 0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"0\n0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"10\n1 2 3 4 5 6 7 8\n\"\"\") == \"10\"\nassert solution(\"\"\"3\n0 4 1 0 0 9 8 3\n\"\"\") == \"3\"\nassert solution(\"\"\"2\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"2\n1 1\n3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 2 3 4 5 6 7 8\") == \"10\"\nassert solution(\"0\\n0 0 0 0 0 0 0 0\") == \"0\"\nassert solution(\"3\\n0 4 1 0 0 9 8 3\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8\") == \"10\"\nassert solution(\"1\\n0\") == \"0\"\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''10\n1 2 3 4 5 6 7 8\n''') == '10'\nassert solution('''0\n0 0 0 0 0 0 0 0\n''') == '0'\nassert solution('''3\n0 4 1 0 0 9 8 3\n''') == '3'\nprint(solution('''10\n1 2 3 4 5 6 7 8\n'''))\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3\\n0 0 0 0 0 0 0') == '3'\nassert solution('3\\n9 5 6 8 1 4 7\\n5 6 7 8 1 4 7') == '10'\nassert solution('3\\n9 5 6 8 1 4 7\\n9 5 6 7 8 1 4 7') == '10'\n"
    },
    {
        "number": 141,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8') == '10'\nassert solution('0\\n0 0 0 0 0 0 0 0') == '0'\nassert solution('3\\n0 4 1 0 0 9 8 3') == '3'\nassert solution('0\\n0 0 0 0 0 0 0 0') == '0'\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 2 1\") == \"3\"\nassert solution(\"4 2\\n1 2 3 4\") == \"5\"\nassert solution(\"5 7\\n123456789 234567890 345678901 456789012 987654321\") == \"44981600785557577\""
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '10'\nassert solution('4 3\\n10 100 1000 10000\\n') == '30'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '10'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\nassert solution('1000000000000\\n
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\nassert solution('''4 3\n10000 1000 100 10\n''') == '10'\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1\\n1 1\") == \"\"\nassert solution(\"1 1\\n1 1\\n1 1\") == \"\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\") == \"\"\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '10'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'\n\n\n\"\"\"\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 12') == '150'\nassert solution('4 3') == '10'\nassert solution('5 787787787') == '44981600785557577'\nassert solution('9 9999999999 99999999999 99999999999 99999999999 99999999999') == '0'\nassert solution
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 12\n20 30 70 90\n''') == '150'\nassert solution('''4 3\n10000 1000 100 10\n''') == '10'\nassert solution('''5 787787787\n123456789 234567890 345678901 456789012 987654321\n''') == '44981600785557577'\n\n\n'''\n"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 12') == '150'\nassert solution('4 3') == '10'\nassert solution('5 787787787') == '44981600785557577'"
    },
    {
        "number": 142,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 12\\n20 30 70 90\\n') == '150'\nassert solution('4 3\\n10000 1000 100 10\\n') == '10'\nassert solution('5 787787787\\n123456789 234567890 345678901 456789012 987654321\\n') == '44981600785557577'"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('1\\n3\\n') == '2'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n3\\n') == '2'\nassert solution('2\\n3\\n') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n') == '3'\nassert solution('2\\n2\\n') == '1'\nassert solution('2\\n2\\n3\\n') == '3'\nassert solution('2\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5\n1 3 3 3 6''') == '5'\nassert solution('''2\n2 1''') == '3'\nassert solution('''15\n
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n3') == '3'\nassert solution('3\\n2') == '3'\nassert solution('3\\n4') == '3'\nassert solution('1\\n3') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n1\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n3') == '3'\nassert solution('1\\n4') == '4'\nassert solution('1\\n5') == '5'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 3 3 6') == '5'\nassert solution('2 1') == '3'\nassert solution('2') == '1'\nassert solution('2 3 2 4') == '1'\nassert solution('2 3 2 2') == '1'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n1 3 3 3 6''') == '5'\nassert solution('''2\n2 1''') == '3'\n\n'''\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('1\\n5') == '5'\nassert solution('2\\n4') == '3'\nassert solution('1\\n3') == '3'\n"
    },
    {
        "number": 143,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '2'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '2'\nassert solution('5\\n1 3 3 3 6') == '5'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n73452\") == \"YES\"\nassert solution(\"4\\n1248\") == \"NO\"\n\n'''\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n73452\") == \"YES\"\nassert solution(\"4\\n1248\") == \"NO\"\nassert solution(\"2\\n123\") == \"YES\"\nassert solution(\"2\\n119\") == \"NO\"\nassert solution(\"3\\n123\") == \"NO\"\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1248\") == \"NO\"\nassert solution(\"4321\") == \"YES\"\nassert solution(\"54321\") == \"NO\"\nassert solution(\"54325\") == \"YES\"\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5\n73452\n''') == 'YES'\nassert solution('''4\n1248\n''') == 'NO'\nassert solution('''3\n967\n''') == 'YES'\nassert solution('''3\n8453\n''') == 'NO'\nassert solution('''5\n4104\n''') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n4567') == 'YES'\nassert solution('4\\n12345') == 'NO'\nassert solution('3\\n323') == 'YES'\nassert solution('2\\n12') == 'YES'\nassert solution('2\\n44') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('inputs/test_solution_1') == 'YES'\nassert solution('inputs/test_solution_2') == 'NO'\nassert solution('inputs/test_solution_3') == 'NO'\nassert solution('inputs/test_solution_4') == 'YES'\nassert solution('inputs/test_solution_5') == 'YES'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n5\n73452\n\"\"\"\n) == 'YES'\n\nassert solution(\n    \"\"\"\n4\n1248\n\"\"\"\n) == 'NO'\n\nassert solution(\n    \"\"\"\n10\n82868\n\"\"\"\n) == 'YES'\n\nassert solution(\n    \"\"\"\n3\n4\n5\n6\n\"\"\"\n) == 'NO'\n\nassert solution(\n    \"\"\"\n4\n1\n2\n3\n4\n\"\"\"\n) == 'NO'"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0\\n0') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('2\\n1') == 'NO'\nassert solution('3\\n1') == 'NO'\nassert solution('4\\n1') == 'NO'\n"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'NO'\nassert solution('10\\n123456789\\n') == 'YES'\nassert solution('10\\n1234567\\n') == 'YES'\nassert solution('1\\n123456789\\n') == 'NO'\n\"\"\"\nimport sys"
    },
    {
        "number": 144,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n73452''') == 'YES'\nassert solution('''4\n1248''') == 'NO'\nassert solution('''10\n123456789''') == 'YES'\nassert solution('''1000\n0''') == 'YES'\nassert solution('''1000\n987654321''') == 'NO'\n'''\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\n\"\"\""
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('wjmzbmr') == \"CHAT WITH HER!\"\nassert solution('xiaodao') == \"IGNORE HIM!\"\nassert solution('sevenkplus') == \"CHAT WITH HER!\"\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\nassert solution(\"qjmnlz\") == \"IGNORE HIM!\"\nassert solution(\"zhnvwaw\") == \"IGNORE HIM!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\""
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\""
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\n\n\"\"\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\""
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"wjmzbmr\") == \"CHAT WITH HER!\"\nassert solution(\"xiaodao\") == \"IGNORE HIM!\"\nassert solution(\"sevenkplus\") == \"CHAT WITH HER!\"\nassert solution(\"sevlew\") == \"IGNORE HIM!\"\nassert solution(\"wagrwr\") == \"IGNORE HIM!\"\n"
    },
    {
        "number": 145,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('wjmzbmr') == 'CHAT WITH HER!'\nassert solution('xiaodao') == 'IGNORE HIM!'\nassert solution('sevenkplus') == 'CHAT WITH HER!'\nassert solution('lhkt') == 'IGNORE HIM!'\nassert solution('kvhjbegqmbhv') == 'IGNORE HIM!'"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom math import ceil"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == stdout\n\"\"\"\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 1 -1 1\n''') == '2'\nassert solution('''14 3\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\n''') == '9'\n'''\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('14 3') == '9'\nassert solution('14 3\\n-1 1 -1 -1 -1 1 -1 -1 -1 1 -1 -1 1\\n') == '9'\n\"\"\"\nfrom math import floor"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2') == \"2\"\nassert solution('14 3') == \"9\"\nassert solution('2 2 -1 -1 1 1 1 -1 -1 -1 1 -1 -1 -1') == \"0\"\nassert solution('14 14 -1 -1 -1 -1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 -1 1 1 1 1 -1 1 1 -1 -1 1 -1 -1 1 1 1 1 1 1 1 -1 -1 1 -1 -1 1 1 1 1 1 -1 -1 -1 -1 1 1 1 1 1 1 1 1 -1 -1 -1 -1 -1 1 1 1 1 1 1 -1 -1 -1 1 -1 -1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 -1 -1 1 -1 -1 -1 -1 -1 -1 1 -1 -1 1 -1 1 -1 -1 1 1 1 -1 -1 1 -1 1 -1 -1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 1 -1 -1 1 -1 1 1 1 1 1 -1 -1 -1 -1 -1 -1 1 1 1 1 1 -1 -1 1 -1 -1 1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 -1 -1 1 -1 -1 -1 -1 1 1 1 1 -1 -1 1 -1 1 -1 -1 1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -1 -1 -1 -1 1 1 1 1 -1 -1 -1 -"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\nassert solution('14 3') == '9'\nassert solution('1 1 -1 1') == '2'\nassert solution('-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == '9'\nassert solution
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 1 -1 1\n''') == '2'\n\nassert solution('''14 3\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1\n''') == '9'\n\nassert solution('''7 3\n-1 1 -1 -1 -1 1 1 -1 -1\n''') == '2'\n\nassert solution('''8 2\n-1 1 -1 -1 -1 -1 -1 1 -1 -1\n''') == '4'\n\nassert solution('''16 10\n-1 1 -1 -1 -1 -1 -1 1 1 1 1 1 -1 -1 1 1 1 -1 -1 1 -1 -1 -1 1 -1 1 1 -1 1 -1 1 1 1 1 1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 -1 -1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 1 -1 -1 -1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 -1 1 -1 -1 -1 1 1 1 -1 1 1 1 1 1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 1 1 1 1 -1 1 -1 1 1 1 1 1 -1 -1 -1 -1 1 -1 1 1 1 1 1 1 1 1 1 1 -1 1 -1 1 -1 -1 1 -1 1 1 1 1 -1 1 -1 -1 -1 -1 1 1 1 1 -1 1 -1 -1 -1 -1 -1 -1 1 1 -1 1 -1 1 1 1 1 -1 1 -1 1 -1 -1 -1 -1 -1 1 1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 1 -1 1 -1 1 1 1 1 1 -1 1 -1 1 -1 1 1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 1 -1 1 1 1 1 1 1 -1 1 -1 -1 1 1 1 -1 1 -1 -1 -1 -1 1 1 1 -1 1 1 1 1 1 -1 1 -1 -1 1 1 1 1 -1 1 -1 1 1 1 1 -1 1 -1 -1 -1 -1 1 1 1 -1 1 -1 1 1 1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 -1 1 -1 -1 -1 1 1 1 -1 1 -1 -1 1 1 1 -1 1 -1 1 1 1 1 1 1 -1 1 -1 -1 -1 1 1 1 -1 1 1 1 1 1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 1 1 1 -1 1 -1 -1 1 1 1 1 -1 1 -1 1 1 1 1 1 1 1 -1 1 -1 -1 1 1 1 1 1 1 1 1 -1 1 -1 -1 -1 1 1 1 1 1 1 -1 1 -1 1 -1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 1 -1 1\\n') == '2'\nassert solution('14 3\\n-1 1 -1 -1 1 -1 -1 1 -1 -1 1 -1 -1 1') == '9'\n\n\n'''\n"
    },
    {
        "number": 146,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == '9'\nassert solution(\"7 3\") == '5'\nassert solution(\"15 2\") == '9'\nassert solution(\"12 1\") == '6'\nassert solution(\"1 0\") == '-1'\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '00'\n'''\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1 2''') == '12'\nassert solution('''1 10 2''') == '12'\nassert solution('''2 1 10''') == '21'\nassert solution('''3 2 1''') == '21'\nassert solution('''2 1 1''') == '3'\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\") == \"12\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"0 1 0\") == \"4\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1 2\") == \"12\"\nassert solution(\"1 1 1\") == \"11\"\nassert solution(\"1 1 0\") == \"10\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 0\") == \"10\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 1 2\"\n) == \"12\"\n\nassert solution(\n    \"4 1 2\"\n) == \"12\"\n\nassert solution(\n    \"2 1 5\"\n) == \"17\"\n\nassert solution(\n    \"3 1 1\"\n) == \"10\"\n\nassert solution(\n    \"3 1 1\"\n) == \"10\""
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == 12\n\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\") == \"12\"\n\nassert solution(\"1 1 1\") == \"4\"\n\nassert solution(\"5 0 2\") == \"6\"\n\nassert solution(\"5 0 2 0 1\") == \"5\""
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\nassert solution(stdin) == \"\"\n\nassert solution(stdin) == \"\"\n"
    },
    {
        "number": 147,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 12\nassert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"2 1\") == 1\nassert solution(\"3 1 2\") == 2\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == 'YES' or solution(input) == 'NO'\n\n'''\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\n\n\"\"\""
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5 1 4 3 2\") == \"YES\"\nassert solution(\"10 2 1 9 10\") == \"NO\"\nassert solution(\"1 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1\") == \"YES\"\nassert solution(\"1 2 1 2 1\") == \"YES\"\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('1 2 3 3 2') == 'NO'\nassert solution('4 3 3 3 3') == 'NO'\nassert solution('1 2 3 4 4') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 1 4 3 2\n''') == 'YES'\nassert solution(\n'''\n10 2 1 9 10\n''') == 'NO'\nassert solution(\n'''\n10 2 1 9 10\n''') == 'NO'\nassert solution(\n'''\n3 1 4\n''') == 'YES'\nassert solution(\n'''\n3 2 1\n''') == 'NO'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input_data) == 'YES'"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 1 4 3 2''') == 'YES'\nassert solution('''10 2 1 9 10''') == 'NO'\nassert solution('''1 1 1 1 1 1''') == 'YES'\nassert solution('''2 2 2 2 2 2''') == 'NO'\nassert solution('''3 3 3 3 3 3''') == 'YES'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('10 1 1 1') == 'YES'\nassert solution('10 2 1 9 10') == 'YES'\nassert solution('5 1 4 3 2') == 'YES'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 4 3 2\\n') == 'YES'\nassert solution('10 2 1 9 10\\n') == 'NO'\nassert solution('2 2 1 1 2\\n') == 'NO'\nassert solution('4 3 2 1 4\\n') == 'YES'\nassert solution('4 3 2 1 4\\n') == 'YES'\n"
    },
    {
        "number": 148,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 4 3 2') == 'YES'\nassert solution('10 2 1 9 10') == 'NO'\nassert solution('10 2 1 9 10') == 'NO'\n\n\n-----"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\n\nprint('Test cases passed')\n\"\"\""
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 1 10''') == '1'\nassert solution('''3 5 10 22''') == '8'\nassert solution('''2 3 3 5''') == '0'\n'''\n\nfrom sys import stdin\n\nx, y, l, r = map(int, stdin.readline().split())"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3 1 10''') == '1'\nassert solution('''3 5 10 22''') == '8'\nassert solution('''2 3 3 5''') == '0'\nassert solution('''3 5 3 6''') == '0'\nassert solution('''2 5 3 1''') == '0'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\nassert solution(\"2 3 7 8\") == \"2\"\nassert solution(\"2 3 2 4\") == \"0\"\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('1 2 3 4') == '0'\nassert solution('3 4 4 1') == '0'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('3 5 10 22') == '8'\nassert solution('3 2 3 4') == '4'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 1 10') == '1'\nassert solution('3 5 10 22') == '8'\nassert solution('2 3 3 5') == '0'\nassert solution('3 2 4 1') == '0'\nassert solution('2 1 2 22') == '8'\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 149,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 10\") == \"1\"\nassert solution(\"3 5 10 22\") == \"8\"\nassert solution(\"2 3 3 5\") == \"0\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == ''\nassert solution('-1') == ''\nassert solution('-2') == ''\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"27\") == 3\nassert solution(\"15\") == 1\nassert solution(\"1001\") == 2\nassert solution(\"2001\") == 1\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('16') == '1'\nassert solution('16') == '1'\nassert solution('100') == '2'\nassert solution('101') == '2'\nassert solution('300') == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4\n'''\n) == '2'\n\nassert solution(\n'''\n27\n'''\n) == '3'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4''') == '2'\nassert solution('''27''') == '3'\nassert solution('''999999999''') == '1'\nassert solution('''1234567890''') == '1'\nassert solution('''3667788999''') == '2'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\"\"\") == \"2\"\nassert solution(\"\"\"27\"\"\") == \"3\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\"\n) == \"2\"\nassert solution(\n    \"27\"\n) == \"3\"\nassert solution(\n    \"50\"\n) == \"1\"\nassert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"27\"\n) == \"3\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n4\n''') == '2'\nassert solution('''\n29\n''') == '4'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n7\n''') == '2'\nassert solution('''\n2\n''') == '1'\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    \"8\"\n) == \"3\"\nassert solution(\n    \"9\"\n) == \"3\"\nassert solution(\n    \"25\"\n) == \"5\"\nassert solution(\n    \"6\"\n) == \"3\"\nassert solution(\n    \"4\"\n) == \"1\"\n"
    },
    {
        "number": 150,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == \"\"\"[HackerRank]: End of test\"\n\"\"\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\""
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''hellno''') == 'hell no'\nassert solution('''abacaba''') == 'abacaba'\nassert solution('''asdfasdf''') == 'asd fasd f'\nassert solution('''Gfdsfgfhjhkhfghjkfghjklhgfjhkgfjkghjkfhkghjkfhjkgfjhkgfjhkfhjkgfjkghjkfhkghjkfhkghjkfhkghjkfhkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjkghjkfhkghjkfhjkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjkghjkfhjkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgfjhkgfjkghjkfhjkgf"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('hello') == 'hello'\nassert solution('hello world') == 'hello world'\nassert solution('qwerty') == 'qwerty'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"tobeornottobe\") == \"tobe or not tobe\"\nassert solution(\"eeeeee\") == \"eeeeee\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"asdfghjkl\") == \"asdfghjkl\"\nassert solution(\"x)f@&#^$%g)h(jk\") == \"x)f@&#^$%g)h(jk\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hellno') == 'hell no'\nassert solution('abacaba') == 'abacaba'\nassert solution('asdfasdf') == 'asd fasd f'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"hello\") == \"hello\"\nassert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution(' ') ==''\nassert solution('a') == 'a'\nassert solution('ab') == 'a b'\nassert solution('abc') == 'a b c'\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"hackcerrs\") == \"hackerers\"\nassert solution(\"backtothefutttture\") == \"back to the futtture\"\nassert solution(\"helllllooooo\") == \"hell ll lo\"\nassert solution(\"tobeornottobe\") == \"tobe or not tobe\"\n"
    },
    {
        "number": 151,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"hellno\") == \"hell no\"\nassert solution(\"abacaba\") == \"abacaba\"\nassert solution(\"asdfasdf\") == \"asd fasd f\"\nassert solution(\"aaba\") == \"aaba\"\nassert solution(\"aabacabac\") == \"aabacabac\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''30 3 2\n10 999999\n2 4 3\n10000000\n4 15\n10000000''') == '1000000'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n10000000''') == '200'\nassert solution('''30 3 2\n10 999999\n2 4 3\n10000000\n4 15\n10000000''') == '1000000'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '200'\n\"\"\""
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80\n0 10 0\n3 1 2\n0 0 0\n0 0 0''') == '200'"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800') == '200'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '20'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n200 100 400\n4 15\n100 800''') == '200'\nassert solution('''20 3 2\n10 99\n2 4 3\n20 10 40\n4 15\n10 80''') == '200'\nassert solution('''5 2\n1 1\n5 1\n1 5\n1 1''') == '10'\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 3 2\") == \"0\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\nassert solution(\"20 3 2\") == \"20\"\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 152,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20 3 2\\n10 99\\n2 4 3\\n20 10 40\\n4 15\\n10 80') == '20'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800') == '200'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n100 800') == '200'\nassert solution('20 3 2\\n10 99\\n2 4 3\\n200 100 400\\n4 15\\n10 80') == '200'\n\n\n\"\"\"\nn, m, k = map(int, stdin.readline().split())\nx, s = map(int, stdin.readline().split())\na, b, c = map(int, stdin.readline().split())\nd = map(int, stdin.readline().split())\n\nmin_time = n*a + m*b + k*c + (n-m)*s\n\nfor i in range(m):\n    min_time = min(min_time, x*a[i] + n*b[i] + k*c[i] + (n-m)*s)\n    \n    \nprint(min_time)\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\nassert solution(\"5 1 5\") == \"7\"\nassert solution(\"3 1 3\") == \"2\"\nassert solution(\"10 3 0\") == \"3\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 11\n1 2 3 4\n''') == \"6\"\nassert solution('''\n5 5 10\n1 2 4 8 16\n''') == \"7\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 4 11\n1 2 3 4''') == '6'\nassert solution('''5 5 10\n1 2 4 8 16''') == '7'\nassert solution('''6 8 7\n3 4 6 5 2 1''') == '10'"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 11') == '6'\nassert solution('5 5 10') == '7'\nassert solution('1 2 4 8 16') == '7'\nassert solution('1 1 1 1 1') == '5'\nassert solution
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4 11''') == '6'\nassert solution('''5 5 10''') == '7'\nassert solution('''1 2 4 8 16''') == '7'\nassert solution('''1 2 3 4 5''') == '10'\nassert solution('''7 3 4 2 1''') == '7'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '3'\nassert solution('2\\n4\\n') == '6'\nassert solution('3\\n5\\n') == '9'\nassert solution('4\\n6\\n') == '12'\nassert solution('5\\n7\\n') == '17'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4 11\\n1 2 3 4\\n\") == \"6\"\nassert solution(\"5 5 10\\n1 2 4 8 16\\n\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4 11\\n1 2 3 4\\n') == '6'\nassert solution('5 5 10\\n1 2 4 8 16\\n') == '7'\nassert solution('2 4 2\\n1 2\\n') == '3'\nassert solution('5 1 10\\n1 2\\n') == '4'\nassert solution('2 4 1\\n1 2\\n') == '1'\n"
    },
    {
        "number": 153,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 4 11\") == \"6\"\nassert solution(\"5 5 10\") == \"7\"\nassert solution(\"1 2 4 8 16\") == \"7\"\nassert solution(\"1 2 4 8\") == \"7\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n') == 0\nassert solution('4\\n') == 0\nassert solution('1\\n') == 1\nassert solution('5\\n') == 0\nassert solution('3\\n') == 0\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4''') == '1'\nassert solution('''3''') == '0'\nassert solution('''1''') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == None\nassert solution('1') == 0\nassert solution('2') == 0\nassert solution('3') == 0\nassert solution('4') == 1\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '1'\nassert solution('''3''') == '0'\nassert solution('''2''') == '0'\nassert solution('''1''') == '0'\nassert solution('''16''') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    ''') == '0'\n\nassert solution('''\n    5\n    ''') == '1'\n\nassert solution('''\n    8\n    ''') == '1'\n\nassert solution('''\n    9\n    ''') == '0'\n\nassert solution('''\n    10\n    ''') == '0'"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4''') == ''\nassert solution('''3''') == ''\n\n\n'''\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '0'\n\n\n-----Answer-----"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 154,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['3', '1'])) == '0'\nassert solution('\\n'.join(['4', '2'])) == '0'\nassert solution('\\n'.join(['5', '3'])) == '0'\nassert solution('\\n'.join(['6', '4'])) == '0'\nassert solution('\\n'.join(['7', '5'])) == '0'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\nfrom sys import stdin, stdout"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\nassert solution(\"5 4 8 7\") == \"2 3\"\nassert solution(\"5 4 6 7\") == \"2 4\"\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('3 10 1') == '1 1'\n\"\"\"\nimport sys"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0 4 0\n0 2 0\n3 2 0\n2 1 0\n''') == '1 1'\nassert solution('''4 3 0\n0 2 0\n3 2 0\n2 1 0\n''') == '1 2'\nassert solution('''4 3 11\n0 2 0\n3 2 0\n2 1 0\n''') == '3 2'\nassert solution('''4 3 7\n0 2 0\n3 2 0\n2 1 0\n''') == '3 2'\nassert solution('''8 7 10\n0 5 1\n6 7 2\n3 4 8\n5 1 2\n2 1 3\n2 3 4\n2 4 6\n2 5 8\n''') == '1 2'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1 1\\n'\n\n'''\n'''\nRuntime: 758 ms, faster than 5.54% of Python3 online submissions for Find the Path in the Matrix.\nMemory Usage: 22.9 MB, less than 41.36% of Python3 online submissions for Find the Path in the Matrix.\n'''\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 0\") == \"1 1\"\nassert solution(\"4 3 11\") == \"1 2\"\nassert solution(\"4 3 7\") == \"3 2\"\nassert solution(\"5 5 8\") == \"5 4\"\nassert solution(\"5 5 9\") == \"5 5\"\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 3 0''') == '1 1'\nassert solution('''4 3 11''') == '1 2'\nassert solution('''4 3 7''') == '3 2'\nassert solution('''10 5 6''') == '9 8'\nassert solution('''13 10 17''') == '11 7'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3 0') == '1 1'\nassert solution('4 3 11') == '1 2'\nassert solution('4 3 7') == '3 2'\nassert solution('0 0 0') == '1 1'\nassert solution('4 100 2') == '0 0'\n"
    },
    {
        "number": 155,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 0\\n') == '1 1'\nassert solution('4 3 11\\n') == '1 2'\nassert solution('4 3 7\\n') == '3 2'\nassert solution('4 3 0\\n') == '1 1'\nassert solution('4 3 11\\n') == '1 2'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n') == '1 2\\n'\nassert solution('6\\n') == '2 3\\n'\nassert solution('4\\n') == '1 4\\n'\nassert solution('1\\n') == '1 1\\n'\nassert solution('10\\n') == '2 3\\n'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '1 2\\n'\nassert solution('6\\n') == '2 3\\n'\nassert solution('4\\n') == '1 4\\n'\nassert solution('1\\n') == '1 1\\n'\nassert solution('10\\n') == '2 3\\n'\nprint('All set!')\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nprint('All set! Click \"Check\" to earn cool rewards!')"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"1 4\"\nassert solution(\"5\") == \"1 5\"\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''1''') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2''') == '1 2'\nassert solution('''6''') == '2 3'\nassert solution('''4''') == '1 4'\nassert solution('''1''') == '1 1'\nassert solution('''16''') == '1 16'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1 2'\nassert solution('6') == '2 3'\nassert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('1\\n1') == '1 1'\n"
    },
    {
        "number": 156,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6\\n') == '1 4'\nassert solution('2\\n') == '1 2'\nassert solution('5\\n') == '2 3'\nassert solution('7\\n') == '4 5'\nassert solution('7\\n') == '1 7'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1') == '1'\nassert solution('2\\n2\\n1') == '3'\nassert solution('1\\n2\\n2') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n2') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n5\\n7\\n') == '7'\nassert solution('4\\n7\\n13\\n') == '21'\nassert solution('2\\n3\\n2\\n') == '0'\nassert solution('2\\n3\\n1\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n2') == '3'\nassert solution('2\\n3\\n1') == '0'\nassert solution('1\\n3\\n1') == '1'\nassert solution('1\\n3\\n1\\n3') == '2'\nassert solution('2\\n3\\n1\\n3') == '1'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\n7\\n13') == '7'\nassert solution('2\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('3\\n2\\n2') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n5\\n7') == '7'\nassert solution('4\\n7\\n13') == '21'\nassert solution('2\\n3\\n2') == '0'\nassert solution('\\n') == '0'\nassert solution('2\\n3\\n2\\n') == '0'\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == '7'\nassert solution('1\\n2\\n5\\n') == '21'\nassert solution('1\\n7\\n5\\n') == '0'\nassert solution('3\\n7\\n1\\n') == '0'"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n7\\n13\\n') == '21'\nassert solution('2\\n3\\n2\\n') == '0'\nassert solution('4\\n7\\n13\\n') == '21'\n\n\"\"\""
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('5') == '7'\nassert solution('7') == '21'\nassert solution('4') == '0'"
    },
    {
        "number": 157,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n7\\n') == '7'\nassert solution('4\\n7\\n13\\n') == '21'\nassert solution('2\\n3\\n2\\n') == '0'\nassert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n1\\n2\\n') == '0'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n1 3 2 4\\n') == 'YES'\nassert solution('2\\n1 3\\n') == 'NO'\n\n\n\"\"\"\nimport sys"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n3 3') == 'YES'\nassert solution('2\\n1 3 2 4') == 'NO'\nassert solution('2\\n1 3 1 2') == 'YES'\nassert solution('1\\n1') == 'YES'\nassert solution('2\\n1 1') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1\n3 3''') == 'NO'\nassert solution('''2\n3 3 4 2\n1 2 1 1''') == 'NO'\nassert solution('''2\n1 1 1 1\n2 2 2 2''') == 'YES'\nassert solution('''4\n5 1 1 1 4\n1 1 1 1 1''') == 'YES'\nassert solution('''6\n1 1 2 2 1 1\n2 1 1 1 1 1''') == 'YES'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1 3 2 4\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1 3 2 4\\n') == 'YES'\nassert solution('2\\n1 3 4\\n') == 'NO'\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\\n3\") == \"\"\nassert solution(\"1\\n3\\n2\") == \"\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3 4 4 3 3\\n1 3 2 4 4 3 3\") == \"YES\"\nassert solution(\"1 3 2 4 4 3 3\\n1 3 2 4 4 3 3\") == \"NO\"\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n\n'''\n"
    },
    {
        "number": 158,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n3 3') == 'YES'\nassert solution('2\\n1 3 2 4') == 'NO'\nassert solution('2\\n3 3') == 'YES'\nassert solution('2\\n3 3') == 'YES'\nassert solution('2\\n3 3') == 'YES'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 7 28''') == '1'\nassert solution('''2 7 28''') == '1'\nassert solution('''3 5 7''') == '2'\nassert solution('''1000000 1000000''') == '0'\nassert solution('''1000000 1000000''') == '0'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 7 28') == '1'\nassert solution('2 7 28') == '2 7 9 28'\nassert solution('2 7 28') == '2 7 9 28'\nassert solution('2 7 28') == '2 7 9 28'\nassert solution('2 7 28') == '2 7 9 28'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 7 28\\n') == '1'\nassert solution('2 7 28\\n2 7 28\\n') == '0'\nassert solution('2 7 28\\n1 1 1 1\\n') == '1'\nassert solution('2 7 28\\n1 1 1 1\\n2 1 2 7\\n') == '1'\nassert solution('1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 7 28') == '1'\nassert solution('2 7 28') == '2 7 9 28'\nassert solution('2 7 28') == '1'\nassert solution('2 7 28') == '1'\nassert solution('2 7 28') == '1'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n2 7 28') == '1\\n2 7 9 28'\nassert solution('3\\n1 2 3') == '0\\n1 2 3'\nassert solution('1\\n2 2') == '0\\n2 2'\nassert solution('1\\n1') == '0\\n1'\nassert solution('2\\n1 1') == '0\\n1 1'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('1\\n1\\n1') == '0'\nassert solution('1\\n1\\n2') == '1'\nassert solution('1\\n2\\n1') == '1'\nassert solution('2\\n1\\n2') == '0'\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 7 28\") == \"1\"\nassert solution(\"2 7 28\") == \"2 7 9 28\"\nassert solution(\"2 7 28\") == \"1\"\nassert solution(\"2 7 28\") == \"2 7 9 28\"\nassert solution(\"2 7 28\") == \"1\"\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 7 28''') == '1'\nassert solution('''3\n2 7 28''') == '1'\nassert solution('''1\n1 1 1''') == '2'\nassert solution('''5\n2 7 28''') == '1'\nassert solution('''20\n
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1 1\") == \"2 1 1 1\"\nassert solution(\"1 1 1 1\") == \"3 1 1 1 1\"\n"
    },
    {
        "number": 159,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 7 28\n''') == '1'\nassert solution('''2 7 28\n''') == '1'\nassert solution('''2 7 28\n''') == '1'\nassert solution('''2 7 28\n''') == '1'\nassert solution('''3\n2 7 28\n''') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2') == '7'\nassert solution('5 2') == '3'\nassert solution('10 3') == '4'\nassert solution('2 3') == '7'\nassert solution('7 3') == '7'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2') == '7'\nassert solution('8 3') == '7'\nassert solution('2 3') == '1'\nassert solution('9 4') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n8 20') == '7'\nassert solution('1 0\\n2 -2') == '2'\nassert solution('2 0\\n3 0') == '3'\nassert solution('1 0\\n1 -2') == '-1'\nassert solution('1 0\\n3 0') == '-1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 3\n8 20''') == '7'\nassert solution('''2 3\n8 2''') == '7'\nassert solution('''5 2''') == '7'\nassert solution('''5 2\n5 3\n5 1''') == '7'\nassert solution('''10 3\n6 10\n0 8''') == '6'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"7\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"2 3\") == \"7\"\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n8 20''') == '7'\nassert solution('''2 1\n0 0''') == '1'\nassert solution('''2 2\n0 0''') == '1'\nassert solution('''5 5\n0 0 0 0 0''') == '1'\nassert solution('''7 3\n0 0 0 0 0 0''') == '1'\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n8 20''') == \"7\"\nassert solution('''1 1\n1 1''') == \"1\"\nassert solution('''1 1\n1 1''') == \"1\"\nassert solution('''1 1\n1 1''') == \"1\"\nassert solution('''1 1\n1 1''') == \"1\"\n"
    },
    {
        "number": 160,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n        \"2 3\"\n        \"8 20\"\n    ) == \"7\"\n\"\"\"\n\nn, k = map(int, stdin.split())\na = [int(x) for x in stdin.split()]"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''39''') == '''4\n5 3 \n'''\nassert solution('''1''') == '''0\n'''\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('9') == '0 2'\nassert solution('9') == '0 2'\nassert solution('9') == '0 2'\nassert solution('9') == '0 2'\nassert solution('9') == '0 2'\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('39') == '4\\n5 3'\nassert solution('1') == '0'\nassert solution('7') == '0'\nassert solution('73') == '0\\n1'\nassert solution('50') == '0\\n1'\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"39\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"38\") == \"5\"\nassert solution(\"18\") == \"7\"\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''39''') == '''4\n5 3'''\nassert solution('''1''') == '''0'''\n\n\n\n'''\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('39') == '4 5 3'\nassert solution('1') == '0'\nassert solution('7') == '0'\nassert solution('29') == '26 30 25'"
    },
    {
        "number": 161,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''39''') == '''4\n5 3'''\nassert solution('''1''') == '''0\n'''\nassert solution('''7''') == '''0\n'''\nassert solution('''15''') == '''0\n'''\nassert solution('''4''') == '''0\n5 3\n1\n2\n3\n4\n'''\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\nassert solution(input()) == ''\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('')) == output('')\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 6\\n2 3 5\\n') == '2'\nassert solution('6 7\\n1 2 3 4 5 6\\n') == '7'\nassert solution('3 7\\n1 2 3\\n') == '7'\nassert solution('3 7\\n1 2 3\\n') == '7'\nassert solution('1 2 3\\n1 2 3\\n') == '5'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 6\n2 3 5''') == '2'\nassert solution('''6 7\n1 2 3 4 5 6''') == '7'\n'''\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 6\n2 3 5''') == '2'\nassert solution('''6 7\n1 2 3 4 5 6''') == '7'\nassert solution('''6 7\n1 2 3 4 5 6''') == '7'\nassert solution('''10 10\n
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n2 3 5\\n\") == \"2\"\nassert solution(\"6 7\\n1 2 3 4 5 6\\n\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 6\n2 3 5''') == '2'\nassert solution('''6 7\n1 2 3 4 5 6''') == '7'\n\n\n'''\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 162,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 6\\n2 3 5\\n') == '2'\nassert solution('6 7\\n1 2 3 4 5 6\\n') == '7'\nassert solution('6 10\\n1 2 3 4 5 6\\n') == '8'\nassert solution('6 100\\n1 2 3 4 5 6\\n') == '50'\n\n\n\"\"\""
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('2 1') == 'YES'\nassert solution('7 2') == 'NO'\nassert solution('7 3') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"#\") == \"#\"\nassert solution(\"#G#T#\") == \"YES\"\nassert solution(\"G#GT#\") == \"NO\"\nassert solution(\"G#G#T#\") == \"YES\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 2\\n#G#T#\\n') == 'YES'\nassert solution('6 1\\n..GT..\\n') == 'YES'\nassert solution('7 3\\nT..#..G\\n') == 'NO'\nassert solution('6 2\\n..GT..\\n') == 'NO'\nassert solution('7 2\\n..T..G\\n') == 'NO'\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n#G#T#\\n\") == \"YES\"\nassert solution(\"6 1\\nT....G\\n\") == \"YES\"\nassert solution(\"7 3\\nT..#..G\\n\") == \"NO\"\nassert solution(\"6 2\\n..GT..\\n\") == \"NO\"\nassert solution(\"7 2\\nTG..G\\n\") == \"YES\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'YES'\nassert solution('7 3') == 'NO'\nassert solution('6 2') == 'NO'\n\n\n\n'''\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2\n"
    },
    {
        "number": 163,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"2 5\") == \"NO\"\nassert solution(\"5 3\") == \"NO\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n'''\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 10 13 10 3 1''') == \"4.375\"\nassert solution('''1 4 6 2 2 1''') == \"-1\"\nassert solution('''3 10 15 17 9 2''') == \"11.3333333333\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\nassert solution('3 10 16 19 12 2') == '15.3679432485'\nassert solution('3 11 17 17 9 2') == '15.14285714286'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '11.3333333333'\n'''"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"11.3333333333\"\n\"\"\""
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 10 13 10 3 1') == '4.375'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\nassert solution('3 10 15 17 9 1') == '11.3333333333'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 10 13 10 3 1') == '4.3750000000'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333333333'\nassert solution('0 0 0 0 0 0') == '0.0'\nassert solution('0 0 0 0 0 0') == '0.0'\n"
    },
    {
        "number": 164,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 10 13 10 3 1') == '4.375'\nassert solution('1 4 6 2 2 1') == '-1'\nassert solution('3 10 15 17 9 2') == '11.3333'\n\n\"\"\""
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\") == \"1\"\nassert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1000000000000000000 0 1000000000000000000\") == \"999999999999999999\"\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 2 1''') == '1'\nassert solution('''1 0 0''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''1000000000000000000 0 1000000000000000000''') == '999999999999999999'\nprint(solution(stdin))\n\n'''\n\nimport sys"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 2 1''') == '1'\nassert solution('''1 0 0''') == '0'\nassert solution('''1 1 1''') == '0'\nassert solution('''1000000000000000000 0 1000000000000000000''') == '999999999999999999'\nassert solution('''2 2 1''') == '1'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1 1 1') == '0'"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1000000000000000000 0 0') == '0'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 165,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('1 0 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1000000000000000000 0 1000000000000000000') == '999999999999999999'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n3') == 'YES\\n3 3'\nassert solution('3\\n3\\n3\\n3') == 'YES\\n1 1\\n1 1'\nassert solution('3\\n3\\n3\\n3\\n3') == 'NO'\nassert solution('1\\n1\\n1\\n1\\n1') == 'YES\\n1 1'\nassert solution('3\\n3\\n3\\n3\\n3\\n3') == 'NO'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n1\\n1\\n1') == 'NO'\nassert solution('2\\n1\\n1\\n1') == 'YES'\nassert solution('3\\n1 2 1 2 5 3') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5 6 7 8 9\") == \"YES\"\nassert solution(\"6 3\") == \"YES\"\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8\n1 2 3 6 9 8 5 2\n''') == 'YES'\nassert solution('''6\n1 2 1 2 5 3\n''') == 'NO'\nassert solution('''2\n1 10\n''') == 'YES'\nassert solution('''1\n1 1\n''') == 'NO'\nassert solution('''6\n1 2 1 2 5 3\n''') == 'NO'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 6 9 8 5 2') == 'YES\\n3 3'\nassert solution('1 2 1 2 5 3') == 'NO'\nassert solution('1 10') == 'YES\\n4 9'\n\n'''\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n8\n1 2 3 6 9 8 5 2\n''') == 'YES\\n3 3\\n'\nassert solution('''\n6\n1 2 1 2 5 3\n''') == 'NO\\n'\nassert solution('''\n2\n1 10\n''') == 'YES\\n4 9\\n'\nassert solution('''\n7\n1 2 1 2 5 3 6\n''') == 'NO\\n'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2 3 4\n2 1 1 2\n2 2 1 1\n2 2 3 4\n''') == 'NO'\nassert solution('''5\n4 5 5 5 5\n5 4 4 4 4\n4 5 5 5 5\n5 4 4 4 4\n4 5 5 5 5\n''') == 'YES'\nassert solution('''2\n1 2\n2 1\n''') == 'YES'\nassert solution('''3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == 'NO'\nassert solution('''1\n1\n''') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1 2\\n') == 'YES'\nassert solution('2\\n1 2\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\n"
    },
    {
        "number": 166,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == 'NO'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('2\\n1\\n2\\n1\\n') == 'YES'\nassert solution('2\\n1\\n2\\n1\\n3\\n1\\n') == 'YES'\nassert solution('3\\n1\\n2\\n1\\n3\\n1\\n') == 'YES'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"hi\") == \"-\"\nassert solution(\"bob\") == \"-\"\nassert solution(\"abca\") == \"ac\"\nassert solution(\"abacaba\") == \"abcba\"\nassert solution(\"abcdcba\") == \"abcba\"\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('hi', 'bob') == '-', \"First\"\nassert solution('abacaba', 'abcdcba') == 'abcba', \"Second\"\n\"\"\"\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hi\\nbob') == '-', 'No output'\nassert solution('abca\\nbob') == 'ac', 'Expected \"ac\"'\nassert solution('abacaba\\nbcdcba') == 'abcba', 'Expected \"abcba\"'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''hi\nbob\n\n''') == '-'\nassert solution('''abca\naccepted\n\n''') == 'ac'\nassert solution('''abacaba\nabcdcba\n\n''') == 'abcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('hi', 'bob') == '-'\nassert solution('abca', 'accepted') == 'ac'\nassert solution('abacaba', 'abcdcba') == 'abcba'\nassert solution('abcdcba', 'abcdcba') == 'abcba'\nassert solution('abacaba', 'abcdcba') == 'abcba'\n\n\n\"\"\""
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hi') == '-'\nassert solution('bob') == 'bob'\nassert solution('abca') == 'ac'\nassert solution('abacaba') == 'abcba'\nassert solution('abcdcba') == 'abcdcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('ab') == '-'\nassert solution('hi') == '-'\nassert solution('bob') == '-'\nassert solution('abacaba') == 'abcba'\nassert solution('abcdcba') == 'abcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"hi\", \"bob\") == \"-\", \"Expected '-'\"\nassert solution(\"abca\", \"accepted\") == \"ac\", \"Expected 'ac'\"\nassert solution(\"abacaba\", \"abcdcba\") == \"abcba\"\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('hi') == '-'\nassert solution('bob') == '-'\nassert solution('abca') == 'ac'\nassert solution('abacaba') == 'ac'\nassert solution('abcdcba') == 'abcba'\n"
    },
    {
        "number": 167,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''hi\nbob'''\n) == '-', \"First example\"\nassert solution(\n'''abca\naccepted'''\n) == 'ac', \"Second example\"\nassert solution(\n'''abacaba\nabcdcba'''\n) == 'abcba', \"Third example\"\nassert solution(\n'''abacaba\nabcdcba'''\n) == '-', \"Fourth example\"\nassert solution(\n'''abacaba\nabcdcba'''\n) == '-', \"Fifth example\"\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('-') == 0\nassert solution('+') == 1\nassert solution('++-++') == 3\nassert solution('-++--') == 1\nassert solution('++-++-++') == 4\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5++-++') == '3'\n\n\n'''\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('-') == 0\nassert solution('+') == 1\nassert solution('++-') == 2\nassert solution('-++-') == 1\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\n\nassert solution(\"++-++\") == \"3\"\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('2') == '1'\nassert solution('5++-++') == '3'\nassert solution('3++-++') == '1'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == input()\n\n\n-----\n\nafter_ops = [0] * n\nbefore_ops = [0] * n\nfor i in range(n):\n    after_ops[i] = int(stdin[i])\n    before_ops[i] = int(stdin[i])\n    if stdin[i] == '-':\n        after_ops[i] -= 1\n    else:\n        before_ops[i] += 1\n    #print(after_ops[i])\n    #print(before_ops[i])\nprint(before_ops[n - 1])\n'''\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n+-') == '1'\nassert solution('3\\n++++') == '0'\nassert solution('4\\n++++') == '4'\nassert solution('5\\n++-++') == '3'\nassert solution('7\\n++++') == '5'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n---\\n') == '0'\nassert solution('4\\n++++\\n') == '4'\nassert solution('2\\n-+\\n') == '1'\nassert solution('5\\n++-++\\n') == '3'\nassert solution('4\\n+++++\\n') == '4'\n"
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5++5\") == \"3\"\nassert solution
    },
    {
        "number": 168,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"++-++\") == \"3\"\nassert solution(\"++-++\") == \"3\"\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n10\n11\n9\n8\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n\"\"\"\n10\n5\n6\n1\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n\"\"\"\n10\n0\n10\n10\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n\"\"\"\n10\n0\n0\n10\n10\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n\"\"\"\n10\n1\n1\n1\n\"\"\"\n    ) == \"2\"\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\n\n\n-----Answer-----\n\n'''\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\n11\\n9\\n8\\n') == '2'\nassert solution('10\\n5\\n6\\n1\\n') == '2'\nassert solution('100\\n1\\n1\\n1\\n') == '100'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10\n11\n9\n8''') == '2'\nassert solution('''10\n5\n6\n1''') == '2'\nassert solution('''10\n1\n1\n1''') == '0'\nassert solution('''1\n2\n3\n4\n5\n6''') == '1'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n'''"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\nassert solution('10\\n10\\n1\\n1') == '2'\nassert solution('10\\n10\\n1\\n1') == '2'\nassert solution('10\\n1\\n1\\n1') == '2'\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"10\\n11\\n9\\n8\") == \"2\"\nassert solution(\"10\\n5\\n6\\n1\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 169,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '2'\nassert solution('10\\n11\\n9\\n8') == '2'\nassert solution('10\\n5\\n6\\n1') == '2'\nassert solution('10\\n10\\n10\\n10') == '0'\nassert solution('10\\n10\\n10\\n10\\n10') == '1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3\n''') == '-1'\nassert solution('''3\n1 2\n2 1 3\n2 1 3\n''') == '0 0'\nassert solution('''3\n1 2\n2 1 3\n1 2\n''') == '1 0'\n'''\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3''') == '-1'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''3\n1 2\n3 1 4\n3 2 5''') == '1'\nassert solution('''3\n3 1 4\n3 2 5''') == '1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 3\") == \"6 2\"\nassert solution(\"3\\n2 1 3\") == \"-1\"\nassert solution(\"3\\n2 4 2\") == \"6 2\"\nassert solution(\"2\\n1 2\") == \"1 1\"\nassert solution(\"2\\n1 1\") == \"0 0\"\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n2 1 3\n2 4 2\n''') == '6 2'\nassert solution('''3\n1 2\n2 1 3\n''') == '-1'\n'''\nimport sys\nsys.setrecursionlimit(1000000)\nsys.stdin = open('/home/maksim/Documents/Labs/Python/hackerrank/input/input00.txt')"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3''') == '-1'\nassert solution('''1\n1\n''') == '-1'\n'''\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3''') == '-1'\nassert solution('''5\n1 1\n1 1 1 1\n1 1 1 1\n''') == '1 2'\nassert solution('''10\n2 2\n2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2\n''') == '2 1'\n'''\n'''\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3\n''') == '-1'\nassert solution('''5\n2 1 3\n2 4 2\n''') == '-1'\nassert solution('''5\n3 3\n1 1 1\n''') == '6 1'\nassert solution('''6\n1 2\n2 1 2\n''') == '2 1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n1 2 3\\n2 4 2') == '6 2'\nassert solution('3\\n3\\n1 2\\n2 1 3\\n3 4 4\\n3 3 2\\n2 4 2') == '-1'\nassert solution('5\\n2\\n3 4 3 2 1') == '-1'\nassert solution('7\\n3\\n5 6 7 8 9 10\\n10 9 8 7 6 5 4 3') == '1'\nassert solution('3\\n1\\n2\\n2') == '-1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n2 1 3\n2 4 2''') == '6 2'\nassert solution('''3\n1 2\n2 1 3''') == '-1'\nassert solution('''3\n2 2\n1 2 3''') == '-1'\nassert solution('''4\n2 1 3\n1 3 2''') == '-1'\nassert solution('''6\n1 2\n3 4 5 6 7 8''') == '1 1'\n"
    },
    {
        "number": 170,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n2 1 3''') == \"6 2\"\nassert solution('''4\n2 1 3\n2 4 2''') == \"6 2\"\nassert solution('''4\n2 1 1\n2 4 4''') == \"2 1\"\nassert solution('''3\n2 1 3\n2 4 2''') == \"3 1\"\nassert solution('''2\n3\n1 2 3''') == \"-1\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Correct\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('!') == ''\nassert solution('1') == 'Too weak'\nassert solution('1a') == 'Too weak'\nassert solution('a') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abacaba') == \"Too weak\"\nassert solution('X12345') == \"Too weak\"\nassert solution('CONTEST_is_STARTED!!11') == \"Correct\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('hello, world') == 'Too weak'\nassert solution('!@#$%^&*()_+') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Correct\"\nassert solution(input()) == \"Too weak\"\nassert solution(input()) == \"Correct\"\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('aab') == 'Too weak'\nassert solution('a') == 'Too weak'\nassert solution('a123456789') == 'Too weak'\nassert solution('abacaba') == 'Correct'\nassert solution('X12345') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'Too weak'\nassert solution('abacaba') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'Too weak'\nassert solution('X12345') == 'Too weak'\nassert solution('a!b_c') == 'Correct'\nassert solution('CONTEST_is_STARTED!!11') == 'Correct'\nassert solution('xabacaba') == 'Too weak'\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Correct' or solution(input()) == 'Too weak'\n\"\"\"\n"
    },
    {
        "number": 171,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Too weak\"\nassert solution(\"A\") == \"Too weak\"\nassert solution(\"Abc\") == \"Too weak\"\nassert solution(\"abc\") == \"Too weak\"\nassert solution(\"abc1\") == \"Correct\"\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 4 4\n5 5 4 5\n''') == '1'\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\nassert solution('''5\n5 4 4 4\n5 5 4 5\n''') == '-1'\nassert solution('''1\n5\n5\n''') == '-1'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\n\nassert solution('''0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 4 4 4\\n5 5 4 5\\n\") == \"1\\n\"\nassert solution(\"6\\n1 1 1 1 1 1\\n5 5 5 5 5 5\\n\") == \"3\\n\"\nassert solution(\"1\\n5\\n3\\n\") == \"-1\\n\"\nassert solution(\"9\\n3 2 5 5 2 3 3 3 2\\n4 1 4 1 1 2 4 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '-1'\nassert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '-1'\nassert solution('''8\n6 6 6 6 6 6 6\n5 5 5 5 5 5 5\n''') == '4'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 1 1') == '4'\nassert solution('5 5 4 4') == '1'\nassert solution('5 5 4 5') == '-1'\nassert solution('1 1 1 1 1 1') == '4'\nassert solution('5 5 4 5') == '-1'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\n\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\n\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '-1'\n\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n'''))\n\nprint(solution('''9\n3 2 5 5 2 3"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 4 4 4\\n5 5 4 5 5') == '1'\nassert solution('5\\n5 5 4 5 5\\n5 5 4 5 5') == '3'\nassert solution('6\\n1 1 1 1 1 1\\n5 5 5 5 5 5') == '3'\nassert solution('1\\n5\\n3') == '-1'\nassert solution('1\\n5\\n3') == '-1'\n"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 172,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n5 4 4 4\n5 5 4 5\n''') == '1'\nassert solution('''6\n1 1 1 1 1 1\n5 5 5 5 5 5\n''') == '3'\nassert solution('''1\n5\n3\n''') == '-1'\nassert solution('''9\n3 2 5 5 2 3 3 3 2\n4 1 4 1 1 2 4 4 1\n''') == '4'\nassert solution('''10\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n''') == '-1'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 3''') == 'NO'\nassert solution('''<><>\nv^v\n''') == 'YES'\nassert solution('''<><>\nv^v\n''') == 'NO'\nassert solution('''^>^\n^^<\n''') == 'YES'\nassert solution('''v^v\n<><>\n^^<\n''') == 'YES'\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 6\n>><\n>^v^\n''') == \"YES\"\nassert solution('''4 4\n><><\n^v^v\n''') == \"NO\"\nassert solution('''4 4\n><><\n^vv\n''') == \"YES\"\nassert solution('''4 6\n><><\nv^v^\n''') == \"YES\"\nassert solution('''3 3\n><>\nvv\n''') == \"NO\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 6\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\nassert solution(\"5 6\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\">v<v<^><v^><>\") == \"YES\"\nassert solution(\"<><><>\") == \"NO\"\nassert solution(\"^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v^v"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3 3\n><>\nv^v\n''') == \"NO\"\n\nassert solution(\n'''\n3 3\n><>\nv^v\n''') == \"YES\"\n\nassert solution(\n'''\n4 6\n<><>\nv^v^v^\n''') == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\") == \"NO\"\nassert solution(\"<>\") == \"YES\"\nassert solution(\"<>\") == \"YES\"\nassert solution(\"v^v\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nN, M = [int(x) for x in input().split()]\n\nd1 = list(input())\nd2 = list(input())\n\nfor i in range(N - 1):\n    if d1[i]!= d2[i]:\n        if d1[i + 1] == d2[i] and d2[i + 1] == d1[i]:\n            print(\"YES\")\n            exit(0)\n        else:\n            print(\"NO\")\n            exit(0)\nprint(\"NO\")\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"<>\") == \"\"\nassert solution(\"<>^v\") == \"YES\"\nassert solution(\"<><>\") == \"NO\"\nassert solution(\"^v^v^v^v^v^v^v^v^v\") == \"YES\"\n"
    },
    {
        "number": 173,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 'NO'\nassert solution(\"2 3\") == 'NO'\nassert solution(\"3 3\") == 'YES'\nassert solution(\"3 4\") == 'YES'\nassert solution(\"4 3\") == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0|0') == '0'\nassert solution('0|1') == '1'\nassert solution('1|0') == 'NO'\nassert solution('0|0|1') == 'YES'\nassert solution('0|1|0') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 1 1 0''') == 'YES'\nassert solution('''0 1 1 0''') == 'YES'\nassert solution('''1 0 0 1''') == 'YES'\nassert solution('''1 0 0 1''') == 'NO'\nassert solution('''1 0 1 1''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 1 1 0\") == \"YES\\n(0->1->(1->0))\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"1\\n0\") == \"YES\\n0\"\nassert solution(\"2\\n1 1\") == \"NO\"\nassert solution(\"1\\n0\") == \"YES\\n0\"\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1 1 0') == 'YES\\n(((0)->1)->(1->0))'\nassert solution('0 0') == 'YES\\n0'\nassert solution('0 1 0 0') == 'NO'\nassert solution('0 1 1 0') == 'NO'\nassert solution('1 0 1 0') == 'NO'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n0 1 1 0\n''') == 'NO'\n\nassert solution('''2\n1 1\n''') == 'NO'\n\nassert solution('''1\n0\n''') == 'YES'\n\nassert solution('''0\n0\n''') == 'NO'\n\nassert solution('''2\n1 1\n''') == 'NO'"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0\\n0') == '1\\n1'\nassert solution('1\\n1') == 'NO'\nassert solution('0\\n1') == 'NO'\nassert solution('1\\n0') == 'NO'\nassert solution('1\\n1') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 -> 0''') == 'NO'\nassert solution('''0 -> 0 -> 0''') == 'NO'\nassert solution('''0 -> 0 -> 1''') == 'YES'\nassert solution('''0 -> 0 -> 0 -> 0''') == 'NO'\nassert solution('''1 -> 0 -> 0 -> 0''') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1 0\") == \"YES\\n(0)->1\\n1->0\"\nassert solution(\"0 1 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\\n0\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\\n1\"\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0->1') == 'YES'\nassert solution('1->0') == 'NO'\nassert solution('1->1') == 'YES'\nassert solution('0->0->0') == 'YES'\nassert solution('1->1->1') == 'YES'\n"
    },
    {
        "number": 174,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''(0 -> 1) -> (1 -> 0)''') == 'YES (((0)->1)->(1->0))'\nassert solution('''(0 -> 1) -> (1 -> 0)''') == 'NO'\nassert solution('''(0 -> 1) -> 0 -> 1 -> 0 -> 1''') == 'YES ((((0)->1)->(1->(0->1)))->(1->(0->1)))'\nassert solution('''(0 -> 1) -> 0 -> 1 -> 0 -> 1''') == 'NO'\nassert solution('''(0 -> 1) -> 0 -> 1 -> 0 -> 1 -> 1 -> 0 -> 1 -> 0 -> 1''') == 'YES ((((0)->1)->(1->(0->1)))->(1->(0->1)))'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\n\n\"\"\"\n\na, b = map(int, input().split())\nwhile a >= 0 and b >= 0:\n    if a < b:\n        a = a - 2 * b\n    elif b < a:\n        b = b - 2 * a\n    else:\n        a = 0\n        b = 0\n\nprint(a, b)\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('12 5') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('1011101011010') == '37 90'\nassert solution('0110010101010101') == '1 18'\nassert solution
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"0 1\"\nassert solution(\"1 12\") == \"7 12\"\nassert solution(\"12 5\") == \"0 1\"\nassert solution(\"31 12\") == \"7 12\"\nassert solution(\"0 2\") == \"0 2\"\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 1') == '0 1'\nassert solution('1 2') == '0 1'\nassert solution('2 1') == '0 1'\nassert solution('2 3') == '0 1'\nassert solution('3 1') == '1 1'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0 1'\nassert solution('31 12') == '7 12'\nassert solution('12 5') == '0 1'\nassert solution('0 1') == '0 1'\nassert solution('100 200') == '0 0'\n\"\"\""
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 2') == '0 1'\nassert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('5 10') == '0 1'\nassert solution('11 10') == '7 12'\n"
    },
    {
        "number": 175,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(12, 5) == \"0 1\"\nassert solution(31, 12) == \"7 12\"\n\n\"\"\""
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"2 -4 4\") == \"5\"\nassert solution(\"2 -4 -2\") == \"0\"\nassert solution(\"-2 -4 -2\") == \"0\"\nassert solution(\"-2 4 -2\") == \"0\"\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''1 1 10'''\n) == '10'\n'''\nassert solution(\n'''2 -4 4'''\n) == '5'\n'''\nassert solution(\n'''3 -6 0'''\n) == '2'\n'''\nassert solution(\n'''5 7 11'''\n) == '3'\n'''\nassert solution(\n'''7 9 12'''\n) == '3'\n'''\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1 10\\n\") == \"10\"\nassert solution(\"2 -4 4\\n\") == \"5\"\nassert solution(\"-1 1 10\\n\") == \"10\"\nassert solution(\"2 -4 -4\\n\") == \"0\"\nassert solution(\"-1 1 10\\n\") == \"10\"\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 10') == '10'\nassert solution('2 -4 4') == '5'\nprint(\"Tests passed\")\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1 10''') == 10\nassert solution('''2 -4 4''') == 5\nassert solution('''3 -7 2''') == 2\nassert solution('''3 -3 3''') == 3\nassert solution('''3 -1 7''') == 3\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 1 10''') == '10'\nassert solution('''2 -4 4''') == '5'\nassert solution('''1 -1 1''') == '0'\nassert solution('''2 -1 -1''') == '0'\nassert solution('''1 1 10''') == '10'\n"
    },
    {
        "number": 176,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 1 10\") == \"10\"\nassert solution(\"2 -4 4\") == \"5\"\nassert solution(\"3 -1 -1\") == \"0\"\nassert solution(\"-1 -1 2\") == \"3\"\nassert solution(\"3 0 0\") == \"1\"\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == None\nassert solution('7') == 7\nassert solution('21') == 5\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('5') == '1'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7\\n') == '7'\nassert solution('21\\n') == '5'\nassert solution('7\\n') == '7'\nassert solution('21\\n') == '5'\nassert solution('7\\n') == '7'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123456789101112131415161718192021222324252627282930313233343536\") == \"5\"\n\n\n\"\"\"\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('123456789101112131415161718192021222324252627282930313233343536373839') == '5'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7\\n') == '7'\nassert solution('21\\n') == '5'\nassert solution('43\\n') == '3'\nassert solution('65\\n') == '6'\nassert solution('67\\n') == '7'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\nassert solution('123') == None\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '7'\nassert solution
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('7') == '7'\nassert solution('21') == '5'\nassert solution('70000001') == '0'\n"
    },
    {
        "number": 177,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('21') == '5'\nassert solution('7') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536') == '7'\nassert solution('123456789101112131415161718192021222324252627282930313233343536001') == '0'\nassert solution('1234567891011121314151617181920212223242526272829303132333435360123') == '5'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 'YES'\nassert solution('8380011223344') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2754') == 'YES'\nassert solution('7001') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('807345619350642') == 'NO'\nassert solution('807345619350643') == 'NO'\nassert solution('807345619350644') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n14\n74798076748\n\"\"\"\n) == 'YES'\n\n\n\nassert solution(\n\"\"\"\n7\n8380011223344\n\"\"\"\n) == 'NO'\nassert solution(\n\"\"\"\n7\n874798101234\n\"\"\"\n) == 'NO'\nassert solution(\n\"\"\"\n8\n83832012345641\n\"\"\"\n) == 'YES'\nassert solution(\n\"\"\"\n8\n874798101234\n\"\"\"\n) == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'YES'\nassert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('72782528'+'4'*10000000) == 'NO'\nassert solution('72782528'+'7'*10000000) == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'\n\"\"\"\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('123456789') == 'NO'\nassert solution('12345678') == 'NO'\nassert solution('12345') == 'NO'\nassert solution('123') == 'NO'\n"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('8380011223344') == 'YES'"
    },
    {
        "number": 178,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8380011223344') == 'YES'\nassert solution('807345619350641') == 'NO'\nassert solution('5') == 'YES'\nassert solution('9') == 'NO'\nassert solution('0') == 'NO'\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('123 4 2') == '824071958'\nassert solution('123 42 24') == '824071958'\nassert solution('123 4 2') == '824071958'\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\nassert solution(\"123 42 25\") == \"\"\nassert solution(\"123 45 34\") == \"\"\nassert solution(\"12 34 12\") == \"\"\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('123 321 22') == '5121422'\nassert solution('1 5 3') == '1'"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\nassert solution('2 10 9') == '1'\nassert solution('1000000000 1000000000 100000000 1000000000') == '4'"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\nassert solution(\"123 15 1\") == \"0\"\nassert solution(\"123 15 2\") == \"1\"\nassert solution(\"123 15 3\") == \"0\"\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 1 2''') == '6'\nassert solution('''123 42 24''') == '824071958'\n\n'''\n"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 1 2\\n') == '6'\nassert solution('123 42 24\\n') == '824071958'"
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\") == \"6\"\nassert solution(\"123 42 24\") == \"824071958\"\n\n\n\"\"\""
    },
    {
        "number": 179,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 1 2') == '6'\nassert solution('123 42 24') == '824071958'\n\"\"\""
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == \"happynewyear\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"aa\"\nassert solution('ab?a') == \"Impossible\"\nassert solution('ab?a') == \"aa\"\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'Impossible'\nassert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'Impossible'\n\n\n\nfrom math import ceil"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abc?abc???abc?abc?abc?abc?abc?') == 'abcabcabcabc'\nassert solution('abc?abc??abc?abc??abc?abc??abc??abc?') == 'abcabcabcabc'\nassert solution('abc*abc???abc*abc??abc???abc?abc??abc??abc?abc?') == 'abcabcabcabc'\nassert solution('abc?abc??abc?abc??abc?abc??abc??abc?abc?abc?') == 'abcabcabcabc'\nassert solution('abc?abc??abc?abc??abc?abc??abc??abc?abc?abc?') == 'abcabcabcabc'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"hw?ap*yn?eww*ye*ar\") == \"happynewyear\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\nassert solution(\"ab?a\") == \"aa\"\n"
    },
    {
        "number": 180,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hw?ap*yn?eww*ye*ar') == 'happynewyear'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'aa'\nassert solution('ab?a') == 'Impossible'\nassert solution('ab?a') == 'Impossible'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''60''') == '1'\nassert solution('''-60''') == '3'\nassert solution('''60''') == '1'\nassert solution('''-30''') == '3'\nassert solution('''90''') == '1'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('120') == '2'\nassert solution('330') == '3'\nassert solution('-150') == '2'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\n\"\"\"\n\nfrom math import floor, ceil, modf, pi"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('60') == '1'\nassert solution('-60') == '3'\nassert solution('-150') == '2'\nassert solution('0') == '0'\nassert solution('150') == '1'\n"
    },
    {
        "number": 181,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4 0') == 'Yes'\nassert solution('5 6 1') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('2 2 2') == 'Yes'"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 0\\n2 1 2\\n') == 'Yes'\nassert solution('5 6 1\\n2 7 2\\n') == 'No'\nassert solution('3 3 3\\n2 2 2\\n') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 4 0') == 'Yes'\nassert solution('5 6 1') == 'No'\nassert solution('3 3 3') == 'Yes'\nassert solution('3 2 2') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 4 0\") == \"Yes\"\nassert solution(\"5 6 1\") == \"No\"\nassert solution(\"5 6 2\") == \"No\"\nassert solution(\"3 3 3\") == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0\\n2 1 2\\n\") == \"Yes\"\nassert solution(\"5 6 1\\n2 7 2\\n\") == \"No\"\nassert solution(\"3 3 3\\n2 2 2\\n\") == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\nassert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 182,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4 0''') == 'Yes'\nassert solution('''5 6 1''') == 'No'\nassert solution('''3 3 3''') == 'Yes'\nassert solution('''2 2 2''') == 'Yes'\nassert solution('''4 4 0''') == 'Yes'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\nassert solution(\"3 5 109\") == \"3\"\nassert solution(\"100 100 100\") == \"100\"\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\n\n'''"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 1 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('1 5 10000') == '5'\nassert solution('100001 9 8888') == '9'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('4 5 10') == '2'\nassert solution('5 4 50') == '14'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1000\") == \"4\"\nassert solution(\"2 2 1000\") == \"45\"\nassert solution(\"5 3 1103\") == \"590\"\nassert solution(\"5 3 1105\") == \"541\"\nassert solution(\"2 2 1\") == \"0\"\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('5 4 1103') == '1'\nassert solution('5 5 1103') == '1'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('2 2 1000') == '45'\nassert solution('3 3 1000') == '27'\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 183,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 1000') == '4'\nassert solution('2 2 1000') == '45'\nassert solution('5 3 1103') == '590'\nassert solution('1 2 1') == '0'\nassert solution('1 2 1') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('5 5 3') == '8'\nassert solution('1 2 3') == '0'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\n\"\"\"\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\nassert solution(\"0 2 0\") == \"0\"\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nprint(solution(stdin))\n\n'''\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 4 3') == '6'\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 4 2''') == '6'\nassert solution('''5 5 5''') == '14'\nassert solution('''0 2 0''') == '0'\n\n\n\n'''\n"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 4 2') == '6'\nassert solution('5 5 5') == '14'\nassert solution('0 2 0') == '0'"
    },
    {
        "number": 184,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 4 2\") == \"6\"\nassert solution(\"5 5 5\") == \"14\"\nassert solution(\"0 2 0\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\nassert solution('3 1') == '3'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('2 1') == None\nassert solution('2 4') == None\nassert solution('5 1') == None\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 2') == '6'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\nassert solution('2 2') == '6'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\n\n\"\"\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 3\") == \"12\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\nassert solution(\"5 2\") == \"14\"\nassert solution(\"5 3\") == \"15\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 6\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 1') == '6'\nassert solution('3 1') == '7'\nassert solution('1 1') == '2'\nassert solution('4 2') == '13'\nassert solution('5 1') == '15'\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"13\"\nassert solution(\"5 1\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 185,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2 2\n'''\n) == '6'\n\nassert solution(\n'''\n4 2\n'''\n) == '13'\n\nassert solution(\n'''\n5 1\n'''\n) == '15'\n\nassert solution(\n'''\n4 5\n'''\n) == '15'\n\nassert solution(\n'''\n20 10\n'''\n) == '34'"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3''') == '9'\nassert solution('''3 2''') == '8'\nassert solution('''5 0''') == '10'\nassert solution('''1 3\n5 0''') == '8'\n\n\n-----\n\n#####"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\nassert solution('3 2') == '8'\nassert solution('2 2') == '4'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == str(1)\nassert solution(input) == str(1)\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\nassert solution('3 2') == '8'\n\n\n-----\n\nRecommended: Please try using dynamic programming for this question.\n\"\"\"\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 0') == '10'\nassert solution('5 0') == '10'\nassert solution('1 3') == '9'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '9'\nassert solution('1 0') == '10'\nassert solution('0 5') == '10'\nassert solution('3 2') == '8'\nassert solution('5 0') == '10'\n"
    },
    {
        "number": 186,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"9\"\nassert solution(\"3 2\") == \"8\"\nassert solution(\"5 0\") == \"10\"\nassert solution(\"5 4\") == \"12\"\nassert solution(\"5 2\") == \"11\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n11\n27\n27\n11\n\"\"\") == \"\"\"YES\n11 27\"\"\"\nassert solution(\n\"\"\"\n6\n1\n1\n2\n2\n3\n3\n\"\"\") == \"\"\"NO\"\"\"\nassert solution(\n\"\"\"\n6\n10\n20\n30\n20\n10\n20\n\"\"\") == \"\"\"NO\"\"\"\nassert solution(\n\"\"\"\n6\n10\n10\n10\n10\n10\n10\n\"\"\") == \"\"\"NO\"\"\"\nassert solution(\n\"\"\"\n6\n1\n1\n2\n2\n3\n3\n\"\"\") == \"\"\"NO\"\"\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5') == 'NO'\nassert solution('5\\n1 1 1 1 1') == 'NO'\nassert solution('5\\n1 1 1 1 1\\n1 1 1 1 1') == 'YES'\nassert solution('6\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == 'YES'\nassert solution('6\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"YES\\n11 27\"\nassert solution(\"2\\n6\\n6\\n\") == \"NO\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\nassert solution(\"6\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11') == 'YES\\n11 27'\nassert solution('2\\n6\\n6') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n3') == 'NO'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"YES\\n11 27\\n\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\\n\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\\n\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\\n\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\\n\""
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n11\\n27\\n27\\n11\\n\") == \"NO\"\nassert solution(\"2\\n6\\n6\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\nassert solution(\"6\\n10\\n20\\n30\\n20\\n10\\n20\\n\") == \"NO\"\nassert solution(\"6\\n1\\n1\\n2\\n2\\n3\\n3\\n\") == \"NO\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'YES\\n11 27'\nassert solution('2\\n6\\n6\\n') == 'NO'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO'\nassert solution('6\\n2\\n2\\n') == 'NO'\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n2\\n3\\n3\\n3\") == \"NO\\n\"\nassert solution(\"2\\n3\\n3\\n3\") == \"NO\\n\"\nassert solution(\"2\\n2\\n2\\n2\") == \"NO\\n\"\nassert solution(\"4\\n11\\n27\\n27\\n11\") == \"YES\\n\"\nassert solution(\"2\\n6\\n6\\n6\") == \"NO\\n\"\n"
    },
    {
        "number": 187,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n11\\n27\\n27\\n11\\n') == 'YES\\n11 27\\n'\nassert solution('2\\n6\\n6\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\nassert solution('6\\n10\\n20\\n30\\n20\\n10\\n20\\n') == 'NO\\n'\nassert solution('6\\n1\\n1\\n2\\n2\\n3\\n3\\n') == 'NO\\n'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"1 4\") == \"YES\"\nassert solution(\"1 4\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"1 7\") == \"NO\"\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n5 8') == 'YES'\nassert solution('1 2\\n7 1') == 'NO'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 4\\n2 2 1 1') == 'NO'\nassert solution('1 4\\n2 2 1 1') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n7 1\\n\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 2\\n\") == \"YES\"\nassert solution(\"1 4\\n2 2 1 1\\n\") == \"NO\"\nassert solution(\"1 4\\n4 4 1 1\\n\") == \"NO\"\nassert solution(\"1 4\\n4 4 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 8') == 'YES'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 2\\n4 4') == 'NO'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 4\\n3 1 2 1') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == 'YES'\nassert solution('''1 2''') == 'NO'\nassert solution('''1 4''') == 'YES'\nassert solution('''1 4\n1 2 1 2''') == 'YES'\nassert solution('''1 4\n2 2 1 2''') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2\\n7 1') == 'YES'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 2\\n4 4') == 'YES'\nassert solution('1 4\\n2 2 1 2') == 'NO'\nassert solution('1 2\\n4 4') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 2\\n5 8\\n') == 'YES'\nassert solution('1 2\\n7 1\\n') == 'NO'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('1 4') == 'YES'\nassert solution('1 4') == 'NO'\nassert solution('1 4') == 'YES'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n5 8') == 'YES'\nassert solution('1 2\\n7 1') == 'NO'\nassert solution('1 4\\n2 2 1 2') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3') == 'NO'\n"
    },
    {
        "number": 188,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n5 8\\n') == 'YES'\nassert solution('1 2\\n7 1\\n') == 'NO'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\nassert solution('1 4\\n2 2 1 2\\n') == 'YES'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7\\n'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0\\n'\nassert solution('10\\n1 1 2 2 3 4 5 6 7 8 9 10\\n') == '3 2\\n'\n\"\"\""
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '2 0'\nassert solution('2\\n2\\n') == '0 0'\nassert solution('2\\n2\\n1\\n') == '1 0'\nassert solution('2\\n2\\n1\\n2\\n1\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\n\n\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n10 1 4\n''') == '3 7'\n\nassert solution('''5\n1 1 2 2 3\n''') == '2 0'\n\nassert solution('''3\n1 1 1 1 1\n''') == '2 4'\n\nassert solution('''3\n1 1 1 1\n''') == '1 1 1'\n\nassert solution('''4\n1 1 1 1 1\n''') == '1 1 1'"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n10 1 4\\n') == '3 7\\n'\nassert solution('5\\n1 1 2 2 3\\n') == '2 0\\n'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n10 1 4') == '3 7'\nassert solution('5\\n1 1 2 2 3') == '2 0'\nassert solution('4\\n1 1 2 2') == '2 0'\nassert solution('6\\n1 1 2 2 3 3') == '2 2'\nassert solution('7\\n1 1 2 2 3 3 4') == '2 2'\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n10 1 4''') == '3 7'\nassert solution('''5\n1 1 2 2 3''') == '2 0'\nassert solution('''6\n1 1 2 2 3 4''') == '3 4'\n'''"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == result_stdout\n\"\"\"\n"
    },
    {
        "number": 189,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 4\\n....\\n..*.\\n...*\\n..**\\n') == '3'\nassert solution('1 3\\n*.*\\n') == '3'\nassert solution('2 1\\n.\\n*\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n.\n*.*\n''') == '0', '1'\nassert solution('''\n..\n..\n..\n*.*\n''') == '2', '2'\nassert solution('''\n....\n....\n....\n....\n....\n''') == '2', '3'\nassert solution('''\n....\n....\n....\n....\n.**.\n''') == '0', '4'\nassert solution('''\n*.*\n*.*\n*.*\n''') == '1', '4'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 4\n....\n..*.\n...*\n..**''') == 3\nassert solution('''1 3\n*.*\n''') == 3\nassert solution('''2 1\n.\n*''') == 1"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"....\\n..*.\\n...*\") == 3\nassert solution(\"....\\n*.\\n..*\") == 3\nassert solution(\"....\\n*.\\n.*.\") == 3\nassert solution(\"....\\n*.\\n.**\") == 1\nassert solution(\"....\\n*.\\n.**\") == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n\nimport sys\nfrom typing import Iterator\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n....\n..*.\n...*\n..**\n\"\"\") == 3\n\n\n\u041f\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u0443\u0441\u043b\u043e\u0432\u0438\u044e \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0443\u0433\u043e\u043b, \u043d\u043e \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0443\u0433\u043e\u043b. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0438 \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u044e\u0442 \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430, \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u044e\u0449\u0435\u0433\u043e \u0432 \u043d\u0435\u0433\u043e \u0432\u0441\u044e \u0437\u0432\u0435\u0437\u0434\u044b. \u0412\u0441\u0435\u0433\u043e \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u044e\u0442 \u043e\u0434\u0438\u043d \u0438\u0437 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430, \u043d\u0435 \u043f\u043e\u043c\u0435\u0449\u0430\u044e\u0449\u0435\u0433\u043e \u0432 \u043d\u0435\u0433\u043e \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b.\n\n\u0415\u0441\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u0440\u0435\u0442\u044c\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043a\u0430\u0440\u0442\u044b \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n\u0415\u0441\u043b\u0438 \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u043b\u0435 \u043a\u0430\u0440\u0442\u044b \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0433"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('....') == 3\nassert solution('..*.') == 3\nassert solution('...*') == 3\nassert solution('..**') == 1\nassert solution('.*.*') == 1\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('..*..') == '1'\nassert solution('.**.') == '2'\nassert solution('*.*') == '1'\nassert solution('***') == '2'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''....\n..*.\n...*\n..**''') == '3'\nassert solution('''1 3\n*.*\n''') == '3'\nassert solution('''2 1\n.\n*''') == '1'\nassert solution('''10 10\n.\n*.\n.\n*.\n.\n*.\n.\n*.\n.\n.\n''') == '10'\nassert solution('''14 14\n....\n...*\n..*.\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n....\n''') == '1'\n"
    },
    {
        "number": 190,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('....' * 4 + '...*' + '...*' + '....*') == 3, \"First Test\"\nassert solution('.' * 3 + '*.*' + '.*.*') == 3, \"Second Test\"\nassert solution('.' + '*.*' * 3) == 3, \"Third Test\"\nassert solution('.*.*' + '*.*.*' + '.*.*') == 3, \"Fourth Test\"\nassert solution('*.*.*' + '*.*.*' * 3) == 3, \"Fifth Test\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 2''') == '333333336'\nassert solution('''5 1''') == '0'\nassert solution('''6 4''') == '968493834'\nassert solution('''6 5''') == '0'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'\n\nassert solution(stdin) == '28987654321'\nassert solution(stdin) == '1'\nassert solution(stdin) == '0'\nassert solution(stdin) == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"333333336\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"6 4\") == \"968493834\"\n\"\"\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"333333336\"\nassert solution(\"6 4\") == \"0\"\nassert solution(\"5 1\") == \"968493834\"\nassert solution(\"6 5\") == \"100000000000000\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 2\n0 1 0\n\"\"\") == \"333333336\"\n\nassert solution(\n\"\"\"\n5 1\n1 1 1 0 0\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n6 4\n1 0 0 1 1 0\n\"\"\") == \"968493834\"\n\nassert solution(\n\"\"\"\n6 4\n1 0 0 1 1 0\n\"\"\") == \"968493834\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n0 1 0\\n\") == \"333333336\"\nassert solution(\"5 1\\n1 1 1 0 0\\n\") == \"0\"\nassert solution(\"6 4\\n1 0 0 1 1 0\\n\") == \"968493834\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2\\n0 1 0') == '333333336'\nassert solution('5 1\\n1 1 1 0 0') == '0'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\nassert solution('6 4\\n1 0 0 1 1 0') == '968493834'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('input/1.txt') == '968493834'\nassert solution('input/2.txt') == '0'\nassert solution('input/3.txt') == '333333336'\nassert solution('input/4.txt') == '0'\nassert solution('input/5.txt') == '0'\n"
    },
    {
        "number": 191,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 2') == '333333336'\nassert solution('5 1') == '0'\nassert solution('6 4') == '968493834'\nassert solution('7 4') == '6690708677'\nassert solution('8 2') == '3677781936'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 4') == '3'\nassert solution('8 5') == '6'\nassert solution('22 4') == '3'"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"4\"\nassert solution(\"8 5\") == \"3\"\nassert solution(\"22 4\") == \"6\"\nassert solution(\"15 5\") == \"5\"\nassert solution(\"5 10\") == \"4\"\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 1') == '1'\nassert solution('2 2\\n1 1') == '1'\nassert solution('3 2\\n2 1') == '2'\nassert solution('6 3\\n2 1') == '3'\nassert solution('6 5\\n2 1') == '4'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\nassert solution('44 4') == '8'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('7 4') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('100001 100000') == '3'\nassert solution('1000010000100001') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('3 5') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 192,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '4'\nassert solution('8 5') == '3'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\nassert solution('22 4') == '6'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('2 0\\n0 1\\n') == '1.0'\nassert solution('1 1\\n1 1\\n') == '0.0'\nassert solution('0 0\\n0 1\\n') == '0.1'\n\n\n\n'''\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n1 0\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3 4\\n\") == \"0.2000000000\"\nassert solution(\"1 0\\n0 1\\n\") == \"0.5000000000\"\n\"\"\"\nimport sys"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4\\n') == '0.2000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n0 1\\n') == '0.5000000000'\nassert solution('1 0\\n1 1\\n') == '0.2'\nassert solution('1 0\\n-1 -1\\n') == '0.4'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 4\") == '0.2000000000'\nassert solution(\"1 0\\n0 1\") == '0.5000000000'\n\n\n-----\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = a d - b c$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right)$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right)$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right| = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\operatorname{det} \\left(\\begin{array}{ll}{a} & {b} \\\\{c} & {d} \\end{array} \\right) = \\left|a\\right| \\cdot \\left|d\\right| \\cdot \\left|c\\right|$\n\n$\\left|a\\"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == '0.2000000000'\nassert solution('''0 1''') == '0.5000000000'\nassert solution('''1 0''') == '0.5000000000'\nassert solution('''0 0''') == '0.0000000000'\nassert solution('''2 3''') == '1.7320508075688772'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 2\n3 4''') == '0.2000000000'\nassert solution('''1 0\n0 1''') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 2\n3 4\n''') == '0.2000000000'\nassert solution('''1 0\n0 1\n''') == '0.5000000000'\nassert solution('''1 2\n0 3\n''') == '1.0'\nassert solution('''1 2\n3 -4\n''') == '1.0'\nassert solution('''1 0\n0 1\n''') == '0.5000000000'\n"
    },
    {
        "number": 193,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 2\n3 4\n''') == '0.2000000000'\nassert solution('''1 0\n0 1\n''') == '0.5000000000'\nassert solution('''1 0\n0 1\n''') == '0.2000000000'\nassert solution('''1 2\n1 2\n''') == '0.0000000000'\nassert solution('''1 2\n1 2\n''') == '0.0000000000'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == 0\nassert solution('4 1 1') == 2\n\n\n\"\"\""
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4 1 2\") == \"0\"\nassert solution(\"1\\n4 1 1\") == \"2\"\nassert solution(\"3\\n3 1 2\") == \"1\"\nassert solution(\"3\\n3 1 1\") == \"2\"\nassert solution(\"2\\n2 1 1\") == \"0\"\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\nassert solution('4 1 3') == '1'\nassert solution('4 1 5') == '2'\nassert solution('4 1 6') == '3'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 1 2''') == \"0\"\nassert solution('''4 1 1''') == \"2\"\nassert solution('''4 1 1\n1 1 2 1''') == \"2\"\nassert solution('''4 1 1\n2 1 2 1''') == \"0\"\nassert solution('''4 1 1\n1 1 2 1\n2 1 2 1''') == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 1 2\n1 2 1 1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n4 1 1\n1 1 2 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\\\n4 1 2\n1 2 1 1\n''') == '0'\nassert solution('''\\\n4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''\\\n4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''\\\n4 1 1\n1 1 2 1\n''') == '2'\nassert solution('''\\\n4 1 1\n1 1 2 1\n''') == '2'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 1 2') == '0'\nassert solution('4 1 1') == '2'\nassert solution('4 1 1\\n1 1 2 1') == '2'\nassert solution('4 1 1\\n1 1 2 2\\n1 1 1 1\\n1 1 2 1') == '2'\nassert solution('4 1 1\\n1 1 2 2\\n1 1 1 1\\n1 1 2 1') == '2'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 1 2\n1 2 1 1''') == '0'\nassert solution('''4 1 1\n1 1 2 1''') == '2'\nassert solution('''4 1 1\n1 1 2 2''') == '2'\nassert solution('''4 1 1\n1 1 2 1''') == '2'\nassert solution('''4 1 1\n1 1 2 2''') == '0'\n"
    },
    {
        "number": 194,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 2 2\\n1 1 2 2\\n1 1 2 2\\n1 1 2 2') == '0'\nassert solution('1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2') == '2'\nassert solution('1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2') == '0'\nassert solution('1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2') == '2'\nassert solution('1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2\\n1 1 1 2 2') == '2'\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 10 5 20''') == '5'\nassert solution('''2 2 0 4''') == '-1'\nassert solution('''2 2 2 1''') == '-1'\nassert solution('''5 4 10 5''') == '-1'\nassert solution('''3 3 0 0''') == '-1'\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"10 10 5 20\") == \"5\"\nassert solution(\"2 2 0 4\") == \"-1\"\nassert solution(\"2 2 2 1\") == \"-1\"\nassert solution(\"10 10 1 10\") == \"-1\"\nassert solution(\"10 10 2 10\") == \"-1\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nA, B, C, N = map(int, stdin.split(' '))"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 10 5 20') == '5'\nassert solution('2 2 0 4') == '-1'\nassert solution('2 2 2 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 195,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 10 5 20''') == '5'\nassert solution('''2 2 0 4''') == '-1'\nassert solution('''2 2 2 1''') == '-1'\nassert solution('''2 2 1''') == '-1'"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\""
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '4'\nassert solution('2 0') == '4'\nassert solution('2 1') == '7'\nassert solution('3 2') == '21'\n\n\"\"\""
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 0\") == \"4\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"1 0\") == \"4\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"4 1\") == \"6\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 0''') == '4'\nassert solution('''2 1''') == '7'\nassert solution('''3 2''') == '21'\nassert solution('''4 3''') == '5'\nassert solution('''4 4''') == '11'\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 0''') == '4'\nassert solution('''2 1''') == '7'\nassert solution('''3 2''') == '21'\nassert solution('''10 10''') == '8'"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 196,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 0\") == \"4\"\nassert solution(\"2 1\") == \"7\"\nassert solution(\"3 2\") == \"21\"\nassert solution(\"5 2\") == \"47\"\nassert solution(\"100 2\") == \"99\"\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n1 2\n1 2''') == '499122177'\nassert solution('''2\n42 1337\n13 420''') == '578894053'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''2\n1 1\n1 1''') == '1'\n\n\n\"\"\""
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1/2'\n\"\"\""
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2\\n1 2') == '499122177'\nassert solution('2\\n42 1337\\n13 420') == '578894053'\nassert solution('2\\n1 1\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\n\"\"\""
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n1 2\\n1 2') == '499122177'\nassert solution('3\\n1 2\\n1 2\\n1 2') == '499122177'\nassert solution('3\\n42 1337\\n13 420\\n') == '578894053'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''3\n1 2\n1 2\n1 2'''\n) == '499122177'\n\nassert solution(\n'''2\n42 1337\n13 420'''\n) == '578894053'\n\nassert solution(\n'''2\n1 1\n1 1'''\n) == '1'\n\nassert solution(\n'''2\n1 1\n0 0'''\n) == '1'\n\nassert solution(\n'''5\n3 10\n1 3\n5 2\n1 2\n5 1'''\n) == '859832903'"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n1 2\n1 2\n''') == '499122177'\nassert solution('''2\n42 1337\n13 420\n''') == '578894053'\nassert solution('''2\n1 1\n1 1\n''') == '1'\nassert solution('''4\n1 1\n1 1\n1 1\n1 1\n''') == '24'\nassert solution('''4\n1 1\n1 1\n1 1\n1 1\n''') == '1'\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n42 1337\\n13 420\") == \"578894053\"\nassert solution(\"3\\n1 2\\n1 2\\n1 2\") == \"499122177\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1\\n0 0\") == \"1\"\n"
    },
    {
        "number": 197,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('1 2') == '499122177'\nassert solution('42 1337') == '578894053'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"6\") == 1\nassert solution(\"20\") == 4\n\n\n\"\"\"\nfrom math import ceil, sqrt"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6''') == '1'\nassert solution('''20''') == '4'\nprint(solution('''25'''))\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''1\n''') == '1'\n\nassert solution('''2\n''') == '1'\n\nassert solution('''3\n''') == '2'\n\nassert solution('''4\n''') == '4'\n\nassert solution('''5\n''') == '1'"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''6\n''') == '1'\n\nassert solution('''20\n''') == '4'\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\nassert solution('1'*10**6) == '1'\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\nprint(\"Tests passed successfully!\")\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"20\") == \"4\"\nassert solution(\"2,2,2,2,2,2\") == \"1\"\nassert solution(\"2,2,2,2,2,3\") == \"2\"\n"
    },
    {
        "number": 198,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6') == '1'\nassert solution('20') == '4'\n\n'''\n\nimport sys\n\nn = int(sys.stdin.readline())"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '3 3\\n4 3 5\\n') == '3'\nassert solution(\n    '3 4\\n5 3 4\\n') == '2'\nassert solution(\n    '3 7\\n1 2 3\\n') == '-1'\n\n\n\n## Submitting\n\n1. Add your code in the blank line below.\n2. Add your **Email** (if your email is different from your GitHub handle) in the second line.\n3. Follow the guidelines given on the website below.\n4. Run the solution cell using the command `Run All` (if it is the first cell) or `Run All` (if it is the last cell) and then copy-paste your output in the following cell.\n\"\"\""
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 3 5') == '3'\nassert solution('3 4\\n5 3 4') == '2'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('3 4\\n5 3 4') == '-1'\nassert solution('3 7\\n1 2 3') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 2 3') == '3'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('3 7\\n1 2 3 4') == '2'\nassert solution('3 7\\n1 2 3 4 5') == '-1'\nassert solution('3 7\\n1 2 3 4 5 6') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 4 5') == '3'\nassert solution('3 7\\n1 2 3') == '-1'\nassert solution('3 7\\n5 3 4') == '2'\nassert solution('1 2 3\\n4 3 2') == '-1'\nassert solution('3 7\\n4 3 2') == '2'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n3\\n4\\n3\\n5\\n4\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '2'\nassert solution('1\\n3\\n3\\n4\\n3\\n5\\n4\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '1'\nassert solution('1\\n3\\n3\\n4\\n3\\n5\\n4\\n7\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 4\\n5 3 4\\n') == '3'\nassert solution('3 7\\n1 2 3\\n') == '-1'\nassert solution('3 4\\n5 3 4\\n') == '2'\n\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3'\nassert solution('3 7\\n1 2 3\\n') == '-1'\nassert solution('3 4\\n5 3 4\\n') == '2'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n4 3 5\\n\") == \"3\"\nassert solution(\"3 4\\n5 3 4\\n\") == \"2\"\nassert solution(\"3 7\\n1 2 3\\n\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 2 3') == '3'\nassert solution('3 7\\n1 2 3') == '-1'\n"
    },
    {
        "number": 199,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 3\\n4 3 5\\n') == '3'\nassert solution('3 7\\n1 2 3\\n') == '-1'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10\\n') == '10'\nassert solution('100000 100000\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == '4'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n') == '4'\n\n\n-----Further Reading-----\n\nFor more information on the Knapsack problem, see https://en.wikipedia.org/wiki/Knapsack_problem\n\n\n\"\"\"\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\"\"\"\nfrom collections import namedtuple\nfrom datetime import datetime\nfrom math import ceil\n\nResult = namedtuple(\"Result\", (\"delay\", \"distance\"))\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('10 30\\n2 1') == '1'\nassert solution('10 13\\n1 1') == '0'\nassert solution('10 19\\n1 2') == '-1'\nassert solution('1 50\\n5 4') == '1'\nassert solution('10 19\\n1 2') == '-1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10 30') == '1'\nassert solution('10 13') == '0'\nassert solution('10 19') == '-1'\nassert solution('1 50') == '1'"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '0'\nassert solution('10 30') == '1'\nassert solution('10 19') == '-1'\nassert solution('10 13') == '1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"10 30\\n2 1\") == \"1\"\nassert solution(\n\"10 13\\n1 1\") == \"0\"\nassert solution(\n\"10 19\\n1 2\") == \"-1\"\nassert solution(\n\"1 50\\n5 4\") == \"1\"\nassert solution(\n\"10 50\\n1 2\") == \"-1\"\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 30\n2 1''') == '1'\nassert solution('''10 13\n1 1''') == '0'\nassert solution('''10 19\n1 2''') == '-1'\nassert solution('''1 50\n5 4''') == '1'\nassert solution('''10 18\n1 1''') == '-1'\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 30\") == \"1\"\nassert solution(\"10 13\") == \"0\"\nassert solution(\"10 19\") == \"-1\"\nassert solution(\"1 50\") == \"1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 30') == '1'\nassert solution('10 13') == '0'\nassert solution('10 19') == '-1'\nassert solution('1 50') == '1'\nassert solution('1 10') == '0'\n\n\n\"\"\"\n\nfrom math import ceil"
    },
    {
        "number": 200,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10 30\\n2 1') == '1'\nassert solution('10 13\\n1 1') == '0'\nassert solution('10 19\\n1 2') == '-1'\nassert solution('1 50\\n5 4') == '1'\nassert solution('1 50\\n5 4') == '0'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 16\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == 16\n'''"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 16\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''10 3 5 2 3''') == \"16\"\nassert solution('''5 2 3 3 1''') == \"8\"\nassert solution('''100 4 4 2 0 0''') == \"0\"\nassert solution('''60 25 22 19 19 22 22 19 22 22 22 22 19 19 19 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 3 5 2 3''') == '16'\nassert solution('''100 1 10 1 10''') == '50'\nassert solution('''30 0 0 0 0''') == '60'\nassert solution('''30 0 0 0 0''') == '60'\nassert solution('''100 0 0 0 0''') == '100'\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''10 3 5 2 3''') == '16'\n\nassert solution('''2 10 2 5 3''') == '9'\n\nassert solution('''20 19 19 2 1''') == '16'\n\nassert solution('''4 5 1 3 2''') == '4'\n\nassert solution('''2 1 1 1 1''') == '0'"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\nassert solution(\"10 3 10 5 2 3\") == \"36\"\nassert solution(\"10 3 10 5 2 3\") == \"36\"\nassert solution(\"10 3 10 5 2 3\") == \"36\"\nassert solution(\"10 3 10 5 2 3\") == \"36\"\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10 3 5 2 3') == '16'\n\"\"\"\nfrom sys import stdin\n\nread = stdin.readline\n\nn = int(read())\nr, b, a, w_r, w_b = map(int, read().split())\n\na = max(0, a-n)\nb = max(0, b-n)\n\nprint(a * w_r + b * w_b)\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16\"\n\"\"\"\n"
    },
    {
        "number": 201,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"10 3 5 2 3\") == \"16\"\nassert solution(\"4 1 2 3\") == \"0\"\nassert solution(\"1 10 10 10 10\") == \"0\"\nassert solution(\"10 1 10 10 10\") == \"0\"\nassert solution(\"4 10 10 10 10\") == \"0\"\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 0\\n4 5\\n') == '5'\nassert solution('3 4\\n6 1\\n') == '3'\nassert solution('-1 -1\\n1 1\\n') == '0'\nassert solution('-1 -1\\n1 1\\n') == '0'\nassert solution('0 0\\n1 1\\n') == '1'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\nassert solution('3 4\\n4 3') == '4'\nassert solution('3 4\\n2 2') == '5'\nassert solution('10 15\\n15 10') == '0'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0''') == '5'\nassert solution('''4 5''') == '5'\nassert solution('''3 4''') == '3'\nassert solution('''6 1''') == '3'\nassert solution('''3 4\n6 1''') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0\\n4 5\\n') == '5'\nassert solution('3 4\\n6 1\\n') == '3'\nassert solution('-1 -1\\n2 2\\n') == '4'\nassert solution('0 0\\n0 0\\n') == '0'\nassert solution('2 3\\n7 2\\n') == '2'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == '5'\nassert solution('4 5') == '5'\nassert solution('3 4') == '3'\nassert solution('6 1') == '3'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"0 0\n4 5\"\"\") == \"5\"\n\nassert solution(\n\"\"\"3 4\"\"\") == \"3\"\n\nassert solution(\n\"\"\"6 1\"\"\") == \"3\"\n\nassert solution(\n\"\"\"3 4\"\"\") == \"3\"\n\nassert solution(\n\"\"\"5 0\"\"\") == \"5\""
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0') == '5'\nassert solution('3 4') == '3'\nassert solution('0 0') == '5'\nassert solution('3 4') == '3'\nassert solution('0 0') == '5'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n4 5') == '5'\nassert solution('3 4\\n6 1') == '3'\nassert solution('0 0\\n0 0') == '0'\nassert solution('0 0\\n0 0') == '0'\nassert solution('3 4\\n6 1') == '3'\n"
    },
    {
        "number": 202,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0\\n4 5\\n') == '5'\nassert solution('3 4\\n6 1\\n') == '3'\nassert solution('3 4\\n6 1\\n') == '3'\nassert solution('1 1\\n1 1\\n') == '0'\nassert solution('1 1\\n1 1\\n') == '0'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5') == 'D'\nassert solution('DDRRR') == 'D'\nassert solution('DDRRRR') == 'R'\nassert solution('DDRRRRRR') == 'R'\nassert solution('DDDRRRRRR') == 'R'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('5\\nDDRR') == 'D'\nassert solution('6\\nDDRR') == 'D'\nassert solution('1\\nD') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\nDRDRR\") == \"D\"\nassert solution(\"5\\nDDRRRR\") == \"D\"\nassert solution(\"6\\nDDRRRR\") == \"R\"\nassert solution(\"7\\nDDDRRRR\") == \"R\"\nassert solution(\"8\\nDDDRRRR\") == \"D\"\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\nDDRRR\") == \"D\"\nassert solution(\"6\\nDDRRRR\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"D\"\nassert solution(\"DDRRR\") == \"D\"\nassert solution(\"DDRRRR\") == \"R\"\nassert solution(\"DD\") == \"D\"\nassert solution(\"DDRRRR\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nN = int(input())\nfractions = input()"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('2\\nRRR') == 'D'\nassert solution('2\\nRR') == 'D'\nassert solution('1\\nD') == 'D'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\nDDRRR\\n\") == \"D\"\nassert solution(\"6\\nDDRRRR\\n\") == \"R\"\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\nDDRRR') == 'D'\nassert solution('6\\nDDRRRR') == 'R'\nassert solution('3\\nRRRR') == 'R'\nassert solution('3\\nRRR') == 'D'\nassert solution('3\\nRR') == 'R'\n"
    },
    {
        "number": 203,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\nDRDRDR''') == 'D'\nassert solution('''6\nDRDRDRR''') == 'R'\nassert solution('''0\nDRDRDRR''') == 'D'\nassert solution('''3\nDRR''') == 'D'\nassert solution('''6\nDRRDRR''') == 'R'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin.split('\\n')[0]\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('17 15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\n\n\"\"\"\n\nimport sys\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 2 2') == '0'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\n\"\"\"\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('17 15 5 3') == '3'\nassert solution('14 16 7 22') == '0'\nassert solution('4 2 6 4') == '1'\nassert solution('1000000000000000000 1000000000000000000 999999866000004473 999999822000007597') == '1000000063'\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"17 15 5 3\") == \"3\"\nassert solution(\"14 16 7 22\") == \"0\"\nassert solution(\"4 2 6 4\") == \"1\"\nassert solution(\"1000000000000000000 1000000000000000000 999999866000004473 999999822000007597\") == \"1000000063\"\n\n\"\"\"\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 204,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == str(1000000063)\nassert solution(input()) == str(0)\nassert solution(input()) == str(1000000063)"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 2') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '\"6 9\"') == \"1\"\nassert solution(\n    '\"38 11\"') == \"3\"\nassert solution(\n    '\"5 2\"') == \"3\"\nassert solution(\n    '\"5 10\"') == \"1\"\nassert solution(\n    '\"6 15\"') == \"1\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n\"\"\""
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n'''\n\nn, b = map(int, stdin.split())\nf = 1\nfor i in range(1, n + 1):\n    f *= i\n    f //= 10 ** (b - 1)\n    if f == 0:\n        break\nprint(len(str(f)) - 1)\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('5 3') == '0'\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\n\n\n\n'''\n"
    },
    {
        "number": 205,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 9') == '1'\nassert solution('38 11') == '3'\nassert solution('5 2') == '3'\nassert solution('5 10') == '1'\nassert solution('8 178') == '5'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\nassert solution('5 3 5') == 22\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\nassert solution('5 8 4') == '13'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\nassert solution('1000000000 1000000 1') == '500000001500000001'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 1') == '15'\nassert solution('7 5 3') == '19'\nassert solution('1000000000 1 2019') == '500000001500000001'\nassert solution('100 100000 1') == '101'\nassert solution('6 4 5') == '10'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 5 3') == 19\nassert solution('1000000000 1 2019') == 500000001500000001\nassert solution('100 100000 1') == 101\nassert solution('6 4 5') == 10\nassert solution('1000000000') == 1000000000\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('7 5 3\\n') == '19'\nassert solution('1000000000 1 2019\\n') == '500000001500000001'\nassert solution('100 100000 1\\n') == '101'\nassert solution('6 4 5\\n') == '10'\nassert solution('7 7 7\\n') == '14'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 5 3\\n') == '19\\n'\nassert solution('1000000000 1 2019\\n') == '500000001500000001\\n'\nassert solution('100 100000 1\\n') == '101\\n'\nassert solution('6 4 5\\n') == '10\\n'\n\n\"\"\""
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''7 5 3'''\n) == '19'\n\nassert solution(\n'''1000000000 1 2019'''\n) == '500000001500000001'\n\nassert solution(\n'''100 100000 1'''\n) == '101'\n\nassert solution(\n'''6 4 5'''\n) == '10'\n"
    },
    {
        "number": 206,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('2 2 1') == '3'\nassert solution('2 2 2') == '4'\nassert solution('1 1 2') == '3'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5') == 'Yes'\nassert solution('2\\n3\\n5') == 'No'\nassert solution('4\\n3\\n9\\n9\\n3') == 'Yes'\nassert solution('2\\n3\\n5') == 'No'\n\n\n\n\n\"\"\"\nfrom sys import stdin,stdout"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n5\\n') == 'Yes'\nassert solution('2\\n1 3\\n') == 'No'\nassert solution('1\\n0 1\\n') == 'No'\nassert solution('1\\n1 1 1\\n') == 'No'\nassert solution('2\\n1 1 2\\n') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == 'Yes'\nassert solution('''3''') == 'Yes'\nassert solution('''4''') == 'No'\nassert solution('''3''') == 'No'\nassert solution('''4''') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == 'Yes'\nassert solution('1 0 1 5 1') == 'Yes'\nassert solution('3 9 9 3') == 'No'\nassert solution('4 3 1') == 'No'\n\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 5\\n') == 'Yes'\nassert solution('5\\n1 0 1 5 1\\n') == 'Yes'\nassert solution('3\\n4 3 1\\n') == 'No'\nassert solution('4\\n3 9 9 3\\n') == 'No'\nassert solution('10\\n5 1 2 4 3 9 7 0 6\\n') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == \"Yes\"\nassert solution('1\\n3') == \"No\"\nassert solution('1\\n3 9') == \"No\"\nassert solution('1\\n3 9 9') == \"Yes\"\nassert solution('1\\n3 9 9 3') == \"Yes\"\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 5') == 'Yes'\nassert solution('1 0 1 5 1') == 'Yes'\nassert solution('3 9 9 3') == 'No'\nassert solution('4 3 1') == 'No'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 5') == 'Yes'\nassert solution('5 1 3 9 9') == 'No'\nassert solution('4 3 1') == 'No'\nassert solution('3 9 9 3') == 'Yes'\nassert solution('3 9 9 3') == 'Yes'\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"5\"\n) == \"Yes\"\nassert solution(\n\"1 3 5\"\n) == \"Yes\"\nassert solution(\n\"4 3 1\"\n) == \"No\"\nassert solution(\n\"3 9 9 3\"\n) == \"No\"\n"
    },
    {
        "number": 207,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('2\\n0\\n0\\n0\\n0') == 'No'\nassert solution('2\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('2\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('2\\n1\\n1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 0 1''') == '1 0 1 1'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 2''') == '-1'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 1''') == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 1 3\") == \"-1\"\nassert solution(\"0 0 2 2\") == \"-1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"0 0 0 1\"\"\"\n) == \"\"\"1 0 1 1\"\"\"\n\nassert solution(\n    \"\"\"0 0 1 1\"\"\"\n) == \"\"\"0 1 1 0\"\"\"\n\nassert solution(\n    \"\"\"0 0 1 2\"\"\"\n) == \"\"\"-1\"\"\"\n\nassert solution(\n    \"\"\"0 0 1 1\"\"\"\n) == \"\"\"-1\"\"\"\n\nassert solution(\n    \"\"\"0 0 1 2\"\"\"\n) == \"\"\"-1\"\"\""
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '0 1 1 0'\nassert solution('0 0 2 2') == '0 2 2 0'\nassert solution('0 0 2 3') == '-1'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 0 1''') == '1 0 1 1'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 2''') == '-1'"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"-1\"\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '1 0 1 1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 2') == '-1'\nassert solution('0 0 1 1') == '0 1 1 0'\nassert solution('0 0 1 1') == '0 1 1 0'\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0 1''') == '1 0 1 1'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 2''') == '0 1 1 0'\nassert solution('''0 0 1 1''') == '0 1 1 0'\nassert solution('''0 0 1 2''') == '-1'\nprint('Test success!')\n"
    },
    {
        "number": 208,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"1 0 1 1\"\nassert solution(\"0 0 1 1\") == \"0 1 1 0\"\nassert solution(\"0 0 1 2\") == \"0 1 1 0\"\nassert solution(\"0 0 1 1\") == \"-1\"\nassert solution(\"0 0 1 1\") == \"-1\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"1 2\\n3\") == \"1\"\nassert solution(\"1 -1\\n3\") == \"1000000006\"\nassert solution(\"0 -1\\n3\") == \"1000000006\"\nassert solution(\"1 2\\n0\") == \"1\"\nassert solution(\"1 1\\n0\") == \"1\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''0 -1''') == '1000000006'\nassert solution('''0 -2''') == '1000000006'\nassert solution('''-2 -3''') == '1000000006'\nassert solution('''1 1''') == '1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''0 -1''') == '1000000006'\nassert solution('''3 -4''') == '-1'\nassert solution('''0 1''') == '2'\nassert solution('''2 1''') == '2'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0 1\\n2') == '1000000006'\nassert solution('1 1\\n2') == '1'\nassert solution('1 1\\n1') == '1'\nassert solution('1 2\\n1') == '1'\nassert solution('1 1\\n3') == '1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('0 -1') == '1000000006'\n'''"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3\\n') == '1'\nassert solution('0 -1\\n2\\n') == '1000000006'\n\n\n\"\"\"\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 -1\\n2') == '1000000006'\nassert solution('2 3\\n3') == '1'\nassert solution('0 -1\\n1') == '1'\nassert solution('1 2\\n2') == '1'\nassert solution('0 1\\n2') == '1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3') == '1'\nassert solution('0 -1\\n2') == '1000000006'"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''0 -1''') == '1000000006'\nassert solution('''1 2''') == '1'\nassert solution('''0 1''') == '1000000006'\nassert solution('''1 0''') == '1'\n"
    },
    {
        "number": 209,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3''') == '1'\nassert solution('''0 -1''') == '1000000006'\nassert solution('''1 -1''') == '1000000006'\nassert solution('''-1 -1''') == '1000000006'\nassert solution('''-1 -1''') == '1000000006'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3''') == 'YES'\nassert solution('''-12 3 4 -10 7 3''') == 'YES'\nassert solution('''8''') == 'NO'\nassert solution('''9 -12 3 4 -4 -10 7 3''') == 'YES'\nassert solution('''2''') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"NO\"\nassert solution(\"2\\n2\") == \"NO\"\nassert solution(\"1\\n2\\n1 2\") == \"YES\"\nassert solution(\"2\\n1\\n1\") == \"YES\"\nassert solution(\"1\\n2\\n1 2\") == \"YES\"\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 -3\n''') == 'YES'\nassert solution('''4\n1 2 3 -5\n''') == 'NO'\nassert solution('''8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''6\n1 2 3 4 -5\n''') == 'YES'\nassert solution('''1\n0\n''') == 'NO'"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''0\n''') == 'NO'\n\nassert solution('''1\n2\n3\n4\n5''') == 'NO'\n\nassert solution('''2\n1 2\n3 4\n5 6''') == 'YES'\n\nassert solution('''3\n1 2 3\n4 5 6\n7 8 9\n10 11 12''') == 'NO'\n\nassert solution('''4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16''') == 'YES'"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n-1\\n3\\n4\\n-2') == \"NO\"\nassert solution('1\\n0\\n3\\n4\\n-2') == \"NO\"\nassert solution('1\\n0\\n3\\n4\\n1') == \"YES\"\nassert solution('1\\n-1\\n3\\n4\\n-2') == \"YES\"\nassert solution('1\\n-1\\n3\\n4\\n-2') == \"YES\"\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n1 2\\n2 1') == 'YES'\nassert solution('1\\n1 2\\n1 1') == 'NO'\nassert solution('1\\n1\\n1') == 'NO'\nassert solution('1\\n1 2\\n1 1 3\\n1') == 'YES'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 -3\n''') == 'YES'\nassert solution('''\n8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''\n1\n0\n''') == 'NO'\nassert solution('''\n4\n1 2 3 -5\n''') == 'YES'\nassert solution('''\n4\n1 2 3 -5\n''') == 'YES'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 -3\n''') == 'YES'\nassert solution('''\n4\n1 2 3 -5\n''') == 'YES'\nassert solution('''\n8\n9 -12 3 4 -4 -10 7 3\n''') == 'YES'\nassert solution('''\n8\n2\n1 2\n1 3\n1 4\n1 5\n2 6\n2 7\n2 8\n2 9\n3 10\n''') == 'NO'\nassert solution('''\n4\n0\n2\n1 2\n3 3\n''') == 'NO'\n"
    },
    {
        "number": 210,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8\\n9 -12 3 4 -4 -10 7 3\\n') == 'YES\\n2\\n1 2\\n3 8'\nassert solution('1\\n0\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES\\n2\\n1 1\\n2 2\\n3 3'\nassert solution('8\\n9 -12 3 4 -4 -10 7 3\\n') == 'YES\\n2\\n1 2\\n3 8'\nassert solution('4\\n1 2 3 -5\\n') == 'YES\\n2\\n1 1\\n2 2\\n3 3\\n4 4'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\"\nprint(solution(stdin))\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '0'\nassert solution('2 1 1') == '1'\nassert solution('3 2 2') == '6'\nassert solution('5 4 2') == '9'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\n\n\n\n'''\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"3\"\nassert solution(\"5 4 2\") == \"6\"\n\n'''"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('5 4 2') == '6'\nassert solution('5 5 5') == '0'\nassert solution('6 6 6') == '0'\nassert solution('100 6 6') == '0'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('5 4 2') == '6'\nassert solution('5 4 1') == '0'\nassert solution('5 1 1') == '0'\nassert solution('5 2 1') == '1'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 3 2''') == '3'\nassert solution('''5 4 2''') == '6'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3 2''') == '3'\nassert solution('''5 4 2''') == '6'\nassert solution('''5 4 2''') == '6'\nassert solution('''5 3 2''') == '3'\nassert solution('''5 4 1''') == '5'\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == '23'\n\n'''\n"
    },
    {
        "number": 211,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == 'NO'\nassert solution('0') == 'NO'\nassert solution('123456789') == 'NO'\nassert solution('9') == 'YES'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3454\") == \"NO\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"111111\") == \"NO\"\nprint(\"Passed\")\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3454') == 'YES'\nassert solution('10') == 'YES'\nassert solution('111111') == 'NO'\nassert solution('343559') == 'YES'\nassert solution('123456789') == 'NO'"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3456''') == 'YES'\nassert solution('''3456''') == 'NO'\nassert solution('''1234''') == 'YES'\nassert solution('''2345''') == 'YES'\nassert solution('''1234''') == 'NO'\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3454\") == \"YES\\n34\\n\"\nassert solution(\"10\") == \"YES\\n0\\n\"\nassert solution(\"111111\") == \"NO\\n\"\nassert solution(\"1111111\") == \"NO\\n\"\nassert solution(\"343434\") == \"YES\\n3434\\n\"\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"YES\"\nassert solution(\"12345\") == \"NO\"\nassert solution(\"100\") == \"NO\"\nassert solution(\"101\") == \"YES\"\nassert solution(\"9999999999999999999999999999999999\") == \"YES\"\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3454\") == \"YES\"\nassert solution(\"3454\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 212,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3454') == \"YES\\n344\"\nassert solution('10') == \"YES\\n0\"\nassert solution('111111') == \"NO\"\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''10 3\n6 2\n2 1\n7 3''') == '4'\nassert solution('''8 4\n3 1\n6 2\n5 2\n2 1''') == '-1'\n'''\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, m = [int(i) for i in stdin.split(' ')]\nmemory = [int(i) for i in stdin.split(' ')]\n\nfirst_floor = None\nfor floor,flat in enumerate(memory,1):\n    if first_floor is None and flat == 1:\n        first_floor = floor\n    elif flat!= 1:\n        break"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 1\\n2 2\\n2 2') == '4'\nassert solution('3 1\\n6 2\\n5 2\\n2 1') == '4'\nassert solution('3 1\\n1 2\\n6 2\\n5 2') == '-1'\nassert solution('3 1\\n1 2\\n2 1') == '-1'\nassert solution('4 2\\n1 1\\n2 2\\n2 2') == '4'\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n6 2\\n2 1\") == \"4\"\nassert solution(\"8 4\\n3 1\\n6 2\\n5 2\\n2 1\") == \"-1\"\nassert solution(\"7 3\\n3 2\\n5 1\\n2 3\\n4 5\") == \"2\"\nassert solution(\"3 4\\n1 1\\n4 3\\n1 2\\n3 4\") == \"1\"\nassert solution(\"3 4\\n1 1\\n4 3\\n1 2\\n3 4\") == \"1\"\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\n'''\n\nimport sys"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10 3\n6 2\n2 1\n7 3\n''') == '4'\n\nassert solution('''8 4\n3 1\n6 2\n5 2\n2 1\n''') == '-1'\n'''\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom collections import Counter\n\nn, m = [int(x) for x in stdin.split()]\nd = Counter()\nfor _ in range(m):\n    k, f = [int(x) for x in stdin.split()]\n    d[f] += k\n\nflats = [k for k, v in d.items() if v % 2 == 1]\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''10 3\n6 2\n2 1\n7 3''') == '4'\nassert solution('''8 4\n3 1\n6 2\n5 2\n2 1''') == '-1'\nassert solution('''1 1\n1 1''') == '-1'\nassert solution('''1 1\n1 1''') == '-1'\nassert solution('''1 1\n1 1\n1 1''') == '-1'\n"
    },
    {
        "number": 213,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''10 3\n6 2\n2 1\n7 3''') == \"4\"\nassert solution('''8 4\n3 1\n6 2\n5 2\n2 1''') == \"-1\"\nassert solution('''9 1\n1 1\n2 1\n2 2\n2 3\n3 3\n3 4\n4 4\n4 5\n5 5\n6 6''') == \"4\"\nassert solution('''2 1\n1 1\n2 1''') == \"2\"\nassert solution('''4 2\n1 1\n2 1\n3 1\n3 2''') == \"-1\"\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('00') == 1\nassert solution('00') == 1\nassert solution('00X00X0XXX0') == 1\nassert solution('0XXX0X00X00') == 1\nassert solution('0X0X0') == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''00''') == 1\nassert solution('''00''') == 1\nassert solution('''00''') == 1\nassert solution('''00X00X0XXX0''') == 1\nassert solution('''0XXX0X00X00''') == 1\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('000') == 0\nassert solution('XX00XX') == 0\nassert solution('00X00X0XXX0') == 1\nassert solution('0XXX0X00X00') == 4\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n'''00\n00\n\n'''\n    ) == '1'\nassert solution(\n'''00X00X0XXX0\n0XXX0X00X00\n\n'''\n    ) == '4'\nassert solution(\n'''0X0X0\n0X0X0\n\n'''\n    ) == '0'\nassert solution(\n'''0XXX0\n00000\n\n'''\n    ) == '2'\nassert solution(\n'''1X0X1\n010000\n\n'''\n    ) == '1'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('00') == 1\nassert solution('00X00X0XXX0') == 1\nassert solution('00X00X0XXX0') == 1\nassert solution('0X0X0') == 0\nassert solution('0X0X0') == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"00\") == 1\nassert solution(\"00X00X0XXX0\") == 1\nassert solution(\"00X00X0XXX0\") == 1\nassert solution(\"0X0X0\") == 0\nassert solution(\"0X0X0\") == 0\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('X') == '1'\nassert solution('X0') == '1'\nassert solution('X00') == '1'\nassert solution('0X00X0') == '1'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('00') == 1\nassert solution('00X0X0') == 1\nassert solution('0X0X0') == 1\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('00') == '1'\nassert solution('00X00X0XXX0') == '1'\nassert solution('0X0X0') == '0'\nassert solution('0XXX0X00X00') == '4'\nassert solution('0X0X0X0') == '0'\n"
    },
    {
        "number": 214,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('00') == 1\nassert solution('00X00X0XXX0') == 1\nassert solution('0XXX0X00X00') == 1\nassert solution('0X0X0') == 0\nassert solution('0XXX0') == 0\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abca') == 2\nassert solution('aaaa') == 5\nassert solution('aaaaa') == 6\nassert solution('aaaaaa') == 7\nassert solution('aaaaaaB') == 7\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('3') == '0'\nassert solution('zACaAbbaazzC') == '3'\nassert solution('aaBBbb') == '0'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10\\nacbaabAbaab') == '2'\nassert solution('12\\nzACaAbbaazzC') == '3'\nassert solution('3\\nABC') == '0'\nassert solution('7\\nZACaAbbaazzC') == '0'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('3') == '0'\nassert solution('zACaAbbaazzC') == '3'\nassert solution('aaaaBaabAbA') == '2'\n\n\n-----\n\"\"\""
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('11') == '2'\nassert solution('12') == '3'\nassert solution('123') == '0'\nassert solution('ABBABABABABABABAA') == '8'\nassert solution('ABaAABABABABABABABAA') == '8'\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('11\\n' + 'aaaaBaabAbA') == '2'\nassert solution('12\\n' + 'zACaAbbaazzC') == '3'\nassert solution('3\\n' + 'ABC') == '0'\n\n\n\n\n\n### Testcases:"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"aaaaBaabAbA\") == \"2\"\nassert solution(\"zACaAbbaazzC\") == \"3\"\nassert solution(\"ABC\") == \"0\"\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 215,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''11\naaaaBaabAbA''') == '2'\nassert solution('''12\nzACaAbbaazzC''') == '3'\nassert solution('''3\nABC''') == '0'\nassert solution('''4\nABCD''') == '0'\nassert solution('''5\nABCDEF''') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n-2\\n0') == '3'\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8') == '120'\nassert solution('1\\n0') == '0'\nassert solution('1\\n0\\n1\\n0') == '2'\nassert solution('2\\n1\\n1\\n1') == '3'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n-2 0\\n') == '3'\nassert solution('6\\n16 23 16 15 42 8\\n') == '120'\nassert solution('3\\n1 -2 0\\n') == '3'\nassert solution('6\\n16 23 16 15 42 8\\n') == '120'\nassert solution('6\\n0 0 0 0 0 0\\n') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n1 -2 0\n''') == '3'\nassert solution('''6\n16 23 16 15 42 8\n''') == '120'\nassert solution('''9\n3 -2 0 1 -2 0 1 2 3 1 2\n''') == '102'\n'''"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 -2 0''') == '3'\nassert solution('''6\n16 23 16 15 42 8''') == '120'\nassert solution('''2\n-2 2''') == '0'\nassert solution('''4\n1 2 3 4''') == '6'\nassert solution('''5\n8 9 10 11 12''') == '33'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n1 -2 0''') == '3'\nassert solution('''6\n16 23 16 15 42 8''') == '120'\n'''\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 -2 0') == '3'\nassert solution('6 16 23 16 15 42 8') == '120'\nassert solution('2 3') == '0'\nassert solution('1 -2') == '3'\nassert solution('0') == '0'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 -2 0') == '3'\nassert solution('6\\n16 23 16 15 42 8') == '120'\nassert solution('7\\n7 8 7 7 7 7 7') == '0'\n\n\n-----"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n-2 0') == '3'\nassert solution('2\\n0 1') == '1'\nassert solution('3\\n1 -2 0') == '3'\nassert solution('4\\n1 -2 0 1') == '120'\nassert solution('6\\n16 23 16 15 42 8') == '120'\n"
    },
    {
        "number": 216,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n-2\\n0') == '3'\nassert solution('1\\n0') == '0'\nassert solution('6\\n16 23 16 15 42 8') == '120'\nassert solution('6\\n16 23 16 15 42 8\\n0') == '120'\nassert solution('6\\n16 23 16 15 42 8\\n0\\n0') == '120'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom math import log10, floor\n\na, b, f, k = (int(i) for i in input().split())"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 11 2 4') == '-1'\nassert solution('6 100 2 4') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('6 9 2 3') == '-1'\nassert solution('6 9 2 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 9 2 4') == '4'\nassert solution('6 10 2 4') == '2'\nassert solution('6 5 4 3') == '-1'\nassert solution('2 3 5 4') == '3'\nassert solution('6 5 4 3') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6 9 2 4''') == '4'\nassert solution('''6 10 2 4''') == '2'\nassert solution('''6 5 4 3''') == '-1'\nassert solution('''6 5 4 3''') == '-1'\nassert solution('''6 4 3 2''') == '-1'\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 9 2 4\") == \"4\"\nassert solution(\"6 10 2 4\") == \"2\"\nassert solution(\"6 5 4 3\") == \"-1\"\n\n\n\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 217,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('10 9 5') == '2'\nassert solution('6 4 5') == '2'\nassert solution('8 1 1') == '2'\nassert solution('10 9 5') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"5 2 3\"\"\") == \"\"\"2\nHe\nlo\"\"\".strip()\n\nassert solution(\n\"\"\"6 4 5\"\"\") == \"\"\"2\nCodef\norces\"\"\".strip()\n\nassert solution(\n\"\"\"8 1 1\"\"\") == \"\"\"2\na\nb\na\nc\na\nb\na\nc\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 5') == '2'\nassert solution('10 9 5') == '2'\nassert solution('6 4 5') == '2'\nassert solution('Privet') == '2'\nassert solution('abacabac') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('Hello') == 'He\\nll\\n'\nassert solution('Codeforces') == 'Codef\\nfor\\nces'\nassert solution('Privet') == 'Privet'\nassert solution('abc') == 'a\\nb\\nc'\n\nprint(solution(input()))"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2 3\\nHello') == '2\\nHe\\nllo'\nassert solution('10 9 5\\nCodeforces') == '2\\nCodef\\norces'\nassert solution('6 4 5\\nPrivet') == '2\\nPri'\nassert solution('8 1 1\\nabacabac') == '8\\na\\nb\\na\\nc\\na\\nb\\na'\nassert solution('6 0 5\\nCodeforces') == '-1'"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '2'\nassert solution('10 9 5') == '2'\nassert solution('6 4 5') == '2'\nassert solution('Privet') == '2'\nassert solution('Codeforces') == '2'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 2 3''') == '2'\nassert solution('''10 9 5''') == '2'\nassert solution('''6 4 5''') == '2'\nassert solution('''Privet''') == '-1'\nassert solution('''8 1 1''') == '8'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Hello\") == \"hello\"\nassert solution(\"Hello\") == \"hello\"\nassert solution(\"Hello\") == \"hello\"\nassert solution(\"Hello\") == \"hello\"\nassert solution(\"Hello\") == \"hello\"\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 2 3''') == '2'\nassert solution('''10 9 5''') == '2'\nassert solution('''6 4 5''') == '2'\nassert solution('''Privet''') == '-1'\nassert solution('''8 1 1''') == '8'\n"
    },
    {
        "number": 218,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2 3''') == '2'\nassert solution('''10 9 5''') == '2'\nassert solution('''6 4 5''') == '2'\nassert solution('''Privet''') == '-1'\nassert solution('''8 1 1''') == '8'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 9 2 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('6 4') == 'IMPOSSIBLE'\nassert solution('1 1 3') == 'IMPOSSIBLE'\nassert solution('1 2 3') == 'RUN 1'\nassert solution('2 2 3') == 'RUN 2'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 10 1 3') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3') == 'IMPOSSIBLE'"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 2') == 'RUN 1\\nJUMP 2\\nRUN 1'\nassert solution('2 2 2 3') == 'RUN 1\\nJUMP 2\\nRUN 1'\nassert solution('1 1 2 2') == 'RUN 1\\nJUMP 3\\nRUN 1'\nassert solution('3 10 1 3') == 'IMPOSSIBLE'\nassert solution('3 10 3 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"1 10 1 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"3 10 1 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\") == \"RUN 1\\nJUMP 2\\nRUN 2\""
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 10 1 3\\n3 4 7\\n') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('2 9 2 3\\n6 4\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 10 1 3\n3 4 7''') == 'RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2'\nassert solution('''2 9 2 3\n6 4''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 10 1 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"2 9 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"6 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 9 3 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 10 1 3\") == \"RUN 2\"\nassert solution(\"3 10 1 3\") == \"RUN 2\"\nassert solution(\"2 9 2 3\") == \"RUN 1\"\nassert solution(\"6 4\") == \"RUN 2\"\nassert solution(\"2 9 2 3\") == \"RUN 2\"\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 10 1 3') == 'RUN 2'\nassert solution('3 4 7') == 'JUMP 3'\nassert solution('3 4 7') == 'JUMP 3'\nassert solution('2 9 2 3') == 'RUN 2'\nassert solution('6 4') == 'JUMP 2'\n"
    },
    {
        "number": 219,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 9 2 3\") == \"RUN 2\\nJUMP 3\\nRUN 1\\nJUMP 2\\nRUN 2\"\nassert solution(\"3 10 1 3\") == \"RUN 2\\nJUMP 3\"\nassert solution(\"3 4 7\") == \"RUN 2\\nJUMP 3\"\nassert solution(\"2 9 2 3\") == \"RUN 2\\nJUMP 3\"\nassert solution(\"6 4\") == \"RUN 2\\nJUMP 3\"\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('> ')) == ''\nprint('Nice')\nassert solution(input('> ')) == ''\nprint('Awesome!')\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 0') == '0'\nassert solution('0 1') == '0'\nassert solution('0 1') == '0'\nassert solution('0 1') == '0'\nassert solution('0 1') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"9 5\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"9 5\\n\") == \"4\\n\"\nassert solution(\"3 3\\n\") == \"2\\n\"\nassert solution(\"5 2\\n\") == \"0\\n\"\n\n\n\"\"\""
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('9 5') == '4'\nassert solution('3 3') == '2'\nassert solution('5 2') == '0'\nassert solution('3 2') == '2'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"0\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"9 5\") == \"4\"\nassert solution(\"0 3\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\na,b = [int(i) for i in stdin.split()]\n\nfor i in range(2,10**12):\n    for j in range(2,10**12):\n        if (i ^ j) == (a ^ b):\n            print(1)\n            break\n    else:\n        print(0)\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('9 5\\n') == '4'\nassert solution('3 3\\n') == '2'\nassert solution('5 2\\n') == '0'\n"
    },
    {
        "number": 220,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''7 2''') == '''2\n1 6 \n'''\n\nassert solution('''5 1''') == '''2\n1 4 \n'''\n\nassert solution('''7 1''') == '''2\n1 4 \n'''\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\n\"\"\""
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7 2') == '2\\n1 6\\n'\nassert solution('5 1') == '2\\n1 4\\n'\nassert solution('6 4') == '2\\n1 4\\n'\nassert solution('5 5') == '2\\n1 4\\n'\nassert solution('7 9') == '2\\n1 4\\n'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 2''') == '''2\n1 6 \n'''\nassert solution('''5 1''') == '''2\n1 4 \n'''\nassert solution('''5 2''') == '''1\n4 3 \n'''\nassert solution('''7 3''') == '''1\n4 5 \n'''\nassert solution('''7 4''') == '''1\n2 3 \n'''\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nfrom math import ceil, floor\nn, k = map(int, stdin.split())\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 2''') == '''2\n1 6 \n'''\nassert solution('''5 1''') == '''2\n1 4 \n'''\nassert solution('''3 2''') == '''1\n2 3 \n'''\nassert solution('''7 1''') == '''2\n1 4 \n'''\nassert solution('''5 0''') == '''2\n1 4 \n'''\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1 6'\nassert solution('5 1') == '2 4'\nassert solution('6 1') == '2 4'\nassert solution('6 1') == '2 4'\nassert solution('6 1') == '2 4'\n"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''7 2''') == '2\\n1 6'\nassert solution('''5 1''') == '2\\n1 4'"
    },
    {
        "number": 221,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7 2') == '2\\n1 6'\nassert solution('5 1') == '2\\n1 4'\nassert solution('100 10') == '100\\n100'\nassert solution('500 500') == '100\\n100'\nassert solution('1000 1') == '1000\\n1000'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('123456789') == '9'\nassert solution('125') == '1'\nassert solution('1234567') == '0'\nassert solution('89876') == '8'\nassert solution('33') == '-1'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n-----Similar Problems-----\n\nThe only difference between this problem and #597 is that we are not allowed to delete digits from the given number. \n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n\"\"\"\n\nn = int(input())\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\"\nassert solution(\"33\") == \"-1\"\nassert solution(\"34\") == \"-1\"\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('13') == -1\nassert solution('11') == 1\nassert solution('225') == 2\nassert solution('15') == 1\nassert solution('6333') == -1\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\""
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8314') == '2'\nassert solution('625') == '0'\nassert solution('333') == '-1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8314\") == \"2\"\nassert solution(\"625\") == \"0\"\nassert solution(\"333\") == \"-1\"\n"
    },
    {
        "number": 222,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('8314') == '2'\nassert solution('325') == '0'\nassert solution('333') == '-1'\nassert solution('9') == '0'\nassert solution('23') == '0'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('100') == '159792'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '4'\nassert solution('''6''') == '120'\nassert solution('''8''') == '789'\nassert solution('''20''') == '1036'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '4'\nassert solution('''2''') == '1'\nassert solution('''6''') == '120'\nassert solution('''12''') == '6064'\nassert solution('''10''') == '753216'\n'''\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2') == 1\nassert solution('3') == 4\nassert solution('6') == 120\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '4'\nassert solution('2\\n') == '1'\nassert solution('6\\n') == '120'\n\n'''\n\nimport math"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"6\") == \"120\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('6') == '120'\nassert solution('4') == '4'\nassert solution('100') == '7'\n"
    },
    {
        "number": 223,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '8'\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AB') == 2\nassert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == ''\n\n\n\n'''"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(ABABBBACFEYUKOTT) == 4\nassert solution(AAA) == 1\n\nprint(solution(input()))\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABABBBACFEYUKOTT') == '4'\nassert solution('AAA') == '1'\nassert solution('ABBA') == '2'\nassert solution('AAABBB') == '3'\nassert solution('ABCDEFG') == '1'\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('A') == '1'\nassert solution('AA') == '2'\nassert solution('AB') == '2'\nassert solution('ABABBBACFEYUKOTT') == '4'\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 0\nassert solution('A') == 0\nassert solution('AB') == 1\nassert solution('ABC') == 2\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == 26\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABABBBACFEYUKOTT\") == \"4\"\nassert solution(\"AAA\") == \"1\""
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AB') == 1\nassert solution('ABC') == 1\nassert solution('ABB') == 2\n"
    },
    {
        "number": 224,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABABBBACFEYUKOTT') == 4\nassert solution('AAA') == 1\nassert solution('ABC') == 2\nassert solution('AA') == 0\nassert solution('A') == 1\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2 10') == 'YES'\nassert solution('10 11 12 13') == 'YES'\nassert solution('11 12 13 14') == 'YES'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 5 9') == 'YES'\nassert solution('1 5 2 3') == 'NO'\nassert solution('1 7 11 5') == 'YES'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 3 2 3') == 'NO'\nassert solution('7 3 2 3 9') == 'NO'\nassert solution('7 3 2 3 9 2') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 7 11 5') == \"YES\"\nassert solution('7 3 2 5') == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 3 2 5') == 'YES'\nassert solution('7 3 2 11') == 'YES'\nassert solution('7 3 2 8') == 'NO'\nassert solution('7 3 2 1') == 'YES'\nassert solution('7 3 2 10') == 'NO'\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 225,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 7 11 5') == 'YES'\nassert solution('7 3 2 5') == 'NO'\nassert solution('7 2 2 5') == 'YES'\nassert solution('1 2 3 4') == 'YES'\nassert solution('5 1 5 5') == 'NO'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('141\\n592\\n653') == '653 733'\nassert solution('5\\n10 21 10 21 10') == '31 41'\nassert solution('3\\n141 592 653') == '653 733'\nassert solution('2\\n10\\n5') == '15'\n\n\n-----"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1') == '2'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n2') == '2'\nassert solution('1\\n1\\n2\\n1') == '1'\nassert solution('1\\n1\\n2\\n1\\n1') == '2'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'\nassert solution('1\\n3 2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('1\\n2\\n') == '0'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n141 592 653') == '653 733'\nassert solution('5\\n10 21 10 21 10') == '31 41'\nassert solution('1\\n1') == '0 0'\n\n\n\n\n-----Alternate Solutions-----\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n141 592 653\\n') == '653 733'\nassert solution('5\\n10 21 10 21 10\\n') == '31 41'\nassert solution('4\\n1 2 3 4\\n') == '10'\nassert solution('5\\n1 2 3 4 5\\n') == '10'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '45'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\") == \"3 3\"\nassert solution(\"1 2 2 3\") == \"3 3\"\nassert solution(\"1 2 2 3 4\") == \"6 6\"\nassert solution(\"1 2 2 3 4 5\") == \"6 6\"\nassert solution(\"1 2 3 4 5\") == \"5 5\"\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n141 592 653') == '653 733'\nassert solution('5\\n10 21 10 21 10') == '31 41'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1 22'"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '653 733'\nassert solution('5') == '31 41'\nassert solution('10 21 10 21 10') == '31 41'\nassert solution('1') == '1'\nassert solution('100000') == '1'\n"
    },
    {
        "number": 226,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n141 592 653\\n\") == \"653 733\"\nassert solution(\"5\\n10 21 10 21 10\\n\") == \"31 41\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"10\"\n\n\n-----Alternate Solutions-----"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == 2\nassert solution(\"5 2 1\") == 1\nassert solution(\"1 2 3 4 5\") == -1"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '3'\nassert solution('4\\n1 2 3 4') == '3'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('6\\n1 2 3 4 5 6') == '3'\nassert solution('7\\n1 2 3 4 5 6 7') == '3'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1 2 3 6 8''') == '2'\nassert solution('''3 6 5''') == '-1'\nassert solution('''6 2 4 8 6 10 18''') == '3'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 6 8\") == \"2\"\nassert solution(\"3\\n3 6 5\") == \"-1\"\nassert solution(\"6\\n2 4 8 6 10 18\") == \"3\"\n\n\n\n\"\"\"\n\nimport sys\nfrom functools import reduce\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().split()))\n\nmax_sum = max(a)\nmin_m = reduce(lambda m, x: m + 1 if x > 0 else m, a, 0)"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\n\nsum = 0\nm = 0\nfor i in range(n):\n    sum += a[i]\n    if sum == 0:\n        m += 1\n    for j in range(i + 1, n):\n        sum -= a[j]\n        if sum == 0:\n            m += 1\n    if m > 0:\n        break\n\nprint(-1 if m == 0 else m)\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 6 8''') == '2'\nassert solution('''3\n3 6 5''') == '-1'\nassert solution('''6\n2 4 8 6 10 18''') == '3'\nassert solution('''10\n2 4 8 6 10 18''') == '-1'\nassert solution('''3\n1 2 3''') == '-1'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'\nassert solution('1\\n3') == '-1'\nassert solution('3\\n3 6 5') == '-1'\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 6 8') == '2'\nassert solution('3\\n3 6 5') == '-1'\nassert solution('6\\n2 4 8 6 10 18') == '3'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 6 8') == '2'\nassert solution('3 6 5') == '-1'\nassert solution('2 4 8 6 10 18') == '3'\n\n\n-----"
    },
    {
        "number": 227,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4') == 2\nassert solution('5\\n1 2 3 4 6 8') == 2\nassert solution('6\\n2 4 8 6 10 18') == 3\nassert solution('7\\n3 6 5 7 9 11') == -1\nassert solution('8\\n3 6 5 7 9 11') == -1\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n8 8''') == 'Alice'\nassert solution('''4\n3 1 4 1''') == 'Bob'\nassert solution('''2\n1 1''') == 'Alice'\n'''"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4\\n3 1 4 1') == 'Bob'\nassert solution('4\\n3 2 4 1') == 'Alice'\nassert solution('4\\n4 2 4 1') == 'Alice'\nassert solution('4\\n4 4 4 4') == 'Alice'\nassert solution('4\\n4 4 4 2') == 'Bob'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input) == \"Alice\"\nassert solution(\"9 9\") == \"Alice\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"Bob\"\nassert solution(\"9 7 5 3 1 8 1 1 1\") == \"Alice\"\nassert solution(\"1 4 1 4 1 1 1 1 4\") == \"Bob\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 8') == 'Bob'\nassert solution('4 4 4 4 4') == 'Bob'\nassert solution('3 1 4 1') == 'Alice'\nassert solution('3 3 3 3') == 'Alice'\nassert solution('5 5 5 5 5') == 'Alice'\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Alice\"\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n8 8') == 'Alice'\nassert solution('4\\n3 1 4 1') == 'Alice'\n\n\n\n-------\n\nn = int(input())\nl = list(map(int, input().split()))\nprint('Alice' if sum(l[:n//2]) > sum(l[n//2:]) else 'Bob')\n\n-----\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n8 8\") == \"Bob\"\nassert solution(\"2\\n3 1 4 1\") == \"Alice\"\nassert solution(\"2\\n1 1\") == \"Bob\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Alice\"\n\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 8\") == \"Bob\"\nassert solution(\"4 1 4 1\") == \"Alice\"\nassert solution(\"3 1 4 1\") == \"Alice\"\nassert solution(\"2 2\") == \"Bob\"\n\n\n-----Hide SMELLS-----\nRESTART\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 228,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2\n8 8''') == \"Bob\"\nassert solution('''4\n3 1 4 1''') == \"Alice\"\nassert solution('''6\n1 1 1 1 1 1''') == \"Bob\"\nassert solution('''12\n8 8 8 8 8 8 8''') == \"Alice\"\n'''"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 1\") == \"YES\"\nassert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"1 3 3 2 1\") == \"YES\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''5\n-1 -3 -3 -2 -1''') == 'NO'\nassert solution('''5\n2 4 6 -1''') == 'NO'\nassert solution('''5\n1 4 1 1 -1''') == 'NO'\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 3 3 2 1') == 'YES'\nassert solution('1 2 3 4 5') == 'NO'\nassert solution('1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1') == 'NO'\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 3 2 1') == 'YES'\nassert solution('4\\n1 2 3 4') == 'NO'\nassert solution('5\\n1 2 3 4 5') == 'YES'\nassert solution('2\\n1 1') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1') == 'NO'\n\n\n-----\n\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5 6\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7\") == \"YES\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('1\\n2\\n1') == 'NO'\nassert solution('3\\n1 2 3') == 'NO'\nassert solution('2\\n1 3') == 'NO'\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3 2 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 229,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n1 3 3 2 1''') == 'YES'\nassert solution('''5\n1 2 3 4 5''') == 'NO'\nassert solution('''1''') == 'NO'\nassert solution('''8''') == 'NO'\nassert solution('''1 2 3 4 5 6 7 8''') == 'NO'\n'''\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''ababa''') == '2'\nassert solution('''ababaababa''') == '2'\nassert solution('''abababababababababababababababab''') == '8'\nassert solution('''aaaaababbbabababababab''') == '8'\nassert solution('''aaaaaaaaaaaaabababababab''') == '0'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\nababa\n''') == '2'\nassert solution('''3\nabc\n''') == '0'\nassert solution('''3\na\n''') == '0'\nassert solution('''2\nab\n''') == '0'\nassert solution('''4\nabcd\n''') == '1'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"ababa\") == 2\nassert solution(\"abcba\") == 1\nassert solution(\"abca\") == 0\nassert solution(\"abcabc\") == 3\nassert solution(\"abababab\") == 3\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") is None\nassert solution(\"ababa\") == \"2\"\nassert solution(\"abab\") == \"2\"\nassert solution(\"aaaa\") == \"0\"\nassert solution(\"aabaa\") == \"1\"\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ababa') == 2\nassert solution('aabb') == 0\nassert solution('aaaa') == 0\nassert solution('bbbbbbbb') == 0\nassert solution('bbbabbbbb') == 0\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ababa') == 2\nassert solution('ababbc') == 1\nassert solution('ababca') == 2\nassert solution('ababab') == 0\nassert solution('aaaaaa') == 0\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5\nababa''') == '2'\nassert solution('''2\nab''') == '0'\nassert solution('''4\nabab''') == '2'\nassert solution('''4\nab''') == '0'\nassert solution('''4\nab''') == '0'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n5\nababa\n''') == '2'\nassert solution('''\n5\nbbbb\n''') == '0'\nassert solution('''\n6\naaabaaa\n''') == '4'\nassert solution('''\n1\nb\n''') == '0'\nassert solution('''\n5\nabab\n''') == '2'\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\nababa''') == '2'\nassert solution('''2\naa''') == '0'\nassert solution('''5\nababa''') == '2'\nassert solution('''8\nabcabcabc''') == '3'\nassert solution('''2\nab''') == '0'\n'''\n"
    },
    {
        "number": 230,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ab\") == 0\nassert solution(\"abc\") == 1\nassert solution(\"abcabc\") == 2\nassert solution(\"ababab\") == 2\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2''') == '2'\nassert solution('''8 5''') == '3'\nassert solution('''20 22''') == '7'\nassert solution('''10 15''') == '4'\nassert solution('''10 20''') == '5'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\nassert solution('8 5') == '3'\nassert solution('8 1') == '1'\nassert solution('8 1') == '1'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n') == '1'\nassert solution('2 1\\n') == '2'\nassert solution('2 2\\n') == '0'\nassert solution('2 3\\n') == '1'\nassert solution('2 4\\n') == '1'\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n2\\n') == '2\\n'\nassert solution('8\\n5\\n') == '3\\n'\nassert solution('8\\n5\\n') == '3\\n'\n\"\"\"\n\nfrom math import ceil, floor"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 5') == '3'\n\nassert solution('4 4') == '0'\nassert solution('8 5') == '3'\n\"\"\"\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 2\"\n) == \"2\"\n\nassert solution(\n    \"8 5\"\n) == \"3\"\n\n\n-----"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input_data) == '3'\n\"\"\"\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == result\n\"\"\"\n\nN, A = [int(x) for x in input().split()]"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"5\"\nassert solution(input(\"\")) == \"3\"\nassert solution(input(\"\")) == \"5\"\nassert solution(input(\"\")) == \"4\"\nassert solution(input(\"\")) == \"7\"\n"
    },
    {
        "number": 231,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n8 2\\n5 1\") == \"2\"\nassert solution(\"3 2\\n1 2\\n2 1\") == \"3\"\nassert solution(\"4 3\\n2 1\\n2 3\\n1 2\") == \"3\"\nassert solution(\"5 4\\n1 1\\n1 4\\n1 3\\n2 4\\n3 4\\n4 1\\n4 5\\n5 4\\n3 1\") == \"3\"\nassert solution(\"6 5\\n1 1\\n1 5\\n1 4\\n2 5\\n3 5\\n4 5\\n5 1\\n6 4\\n5 2\\n6 1\") == \"3\"\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES'\n\"\"\""
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2\n''') == 'YES'\nassert solution('''5 3\n1 2 1 1 2\n2 3\n''') == 'NO'\nassert solution('''5 2\n1 1 1 1 1\n2 3\n''') == 'YES'\nassert solution('''5 2\n1 1 1 1 1\n2 2\n''') == 'YES'\nassert solution('''5 2\n1 1 1 1 1\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == 'NO'\nassert solution('1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n2') == 'NO'\nassert solution('1\\n1\\n3') == 'YES'\nassert solution('1\\n1\\n4') == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2''') == 'YES'\nassert solution('''5 2\n2 2 2 2 2\n1 2''') == 'NO'\nassert solution('''5 2\n2 2 2 2 2\n2 2''') == 'YES'\nassert solution('''5 2\n2 2 2 2 2\n2 2''') == 'NO'\nassert solution('''5 2\n1 1 2 2 1\n1 2''') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2') == 'YES'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n1 2') == 'NO'\nassert solution('5 2\\n1 1 1 2 2 1\\n1 2\\n1 2') == 'YES'\nassert solution('5 2\\n1 1 1 2 2 1\\n1 2\\n1 1') == 'YES'\nassert solution('5 2\\n1 1 1 2 2 1\\n1 2\\n1 1\\n1 2') == 'NO'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 2\\n1 1 2 2 1\\n1 2\\n') == 'YES'\nassert solution('5 2\\n1 1 2 2 1\\n1 2\\n') == 'NO'\nassert solution('5 3\\n1 1 2 2 1\\n1 2\\n') == 'NO'\nassert solution('5 1\\n1 1\\n') == 'YES'\nassert solution('1 1\\n1 1\\n') == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n5 2\n1 1 2 2 1\n1 2\n''') == \"YES\"\n\nassert solution(\n'''\n5 2\n1 2 2 2 1\n1 2\n''') == \"NO\"\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2\\n2 3') == 'YES'\nassert solution('1 2\\n2 1') == 'NO'\nassert solution('1 1\\n2 2') == 'NO'\nassert solution('1 1\\n2 2') == 'YES'\nassert solution('1 2\\n1 2') == 'YES'\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 232,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 1 2 2 1\n1 2''') == 'YES'\nassert solution('''5 2\n1 1 2 2 1\n1 2''') == 'NO'\nassert solution('''5 1\n1\n''') == 'NO'\nassert solution('''5 4\n1 2 3 4 5\n4\n''') == 'YES'\nassert solution('''5 2\n1 2 2 1\n1 2\n''') == 'NO'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Chris'\nassert solution('''2\n6 1\n1 6''') == 'Mishka'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!^^'\nassert solution('''4\n1 5\n2 1\n3 1\n1 2''') == 'Chris'\nassert solution('''4\n1 5\n1 1\n1 1\n1 1''') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n2 1\\n4 2\\n\") == \"Mishka\"\nassert solution(\"2\\n6 1\\n1 6\\n\") == \"Friendship is magic!^^\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\\n\") == \"Chris\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\\n\") == \"Chris\"\nassert solution(\"3\\n1 5\\n3 3\\n2 2\\n\") == \"Chris\"\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Mishka'\nassert solution('''2\n6 1\n1 6''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!^^'\n\nIn the first sample case, it is impossible to determine the result of the game. But in the second and third case it is easy to see that the result is the same: Mishka wins.\n\nIn the fourth sample case it is also possible to determine the result of the game: it's easy to see that the result is the same: the game ends with draw:1:1.\n'''\n    ) == 'Mishka'\n\nimport sys\nsys.setrecursionlimit(10000)\n\nn = int(input())\nA = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]\ndp = [[[0] * 6 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    for j in range(n):\n        for k in range(6):\n            if A[i][j] == k:\n                if j - 1 >= 0 and A[i][j - 1]!= k:\n                    dp[i][j][k] = max(dp[i][j][k], dp[i][j - 1][(k + 1) % 6] + 1)\n                if j + 1 < n and A[i][j + 1]!= k:\n                    dp[i][j][k] = max(dp[i][j][k], dp[i][j + 1][(k + 1) % 6] + 1)\n                if i - 1 >= 0 and A[i - 1][j]!= k:\n                    dp[i][j][k] = max(dp[i][j][k], dp[i - 1][j][(k + 1) % 6] + 1)\n                if i + 1 < n and A[i + 1][j]!= k:\n                    dp[i][j][k] = max(dp[i][j][k], dp[i + 1][j][(k + 1) % 6] + 1)\n\nm = max(dp[i][n - 1][0] for i in range(n))\nm = max(m, max(dp[n - 1][i][0] for i in range(n)))\nm = max(m, max(dp[0][i][0] for i in range(n)))\nm = max(m, max(dp[0][0][j] for j in range(6)))"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == 'Chris'\nassert solution('2') == 'Friendship is magic!^^'\nassert solution('3') == 'Mishka'\nassert solution('4') == 'Chris'\nassert solution('5') == 'Friendship is magic!^^'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Mishka'\nassert solution('''2\n6 1\n1 6''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!^^'\n\nprint(\"All set? Click 'Check' to review your code and earn cool rewards!\")\n\nfrom sys import stdin\nn = int(stdin.readline().strip())\ndice = []\nfor _ in range(n):\n    m, c = map(int, stdin.readline().strip().split())\n    dice.append((m, c))\nmishka, chris = 0, 0\nfor i in range(1, 7):\n    if i not in [d[0] for d in dice]:\n        if i > max([d[1] for d in dice]):\n            mishka += 1\n        else:\n            chris += 1\n    else:\n        mishka += 1\n        chris += 1\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2''') == 'Mishka'\nassert solution('''2\n6 1\n1 6''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2''') == 'Friendship is magic!'\nassert solution('''4\n1 3\n1 2\n1 1\n1 3''') == 'Mishka'\nassert solution('''5\n1 2\n2 1\n2 2\n2 3\n3 1''') == 'Chris'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5\\n2 1\\n4 2') == 'Chris'\nassert solution('2\\n6 1\\n1 6\\n') == 'Friendship is magic!^^'\nassert solution('3\\n1 5\\n3 3\\n2 2\\n') == 'Mishka'\nassert solution('3\\n1 6\\n3 1\\n2 4\\n') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n3 5\n2 1\n4 2\n''') == 'Mishka'\nassert solution('''2\n6 1\n1 6\n''') == 'Chris'\nassert solution('''3\n1 5\n3 3\n2 2\n''') == 'Friendship is magic!'\nassert solution('''4\n6 1\n6 5\n5 1\n5 5\n''') == 'Chris'\nassert solution('''5\n5 5\n5 5\n5 5\n5 5\n''') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == 'Mishka'\nassert solution('3\\n5\\n2 1\\n4 2\\n') == 'Chris'\nassert solution('2\\n6 1\\n1 6\\n') == 'Friendship is magic!^^'\nassert solution('3\\n1 5\\n3 3\\n2 2\\n') == 'Mishka'\n"
    },
    {
        "number": 233,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 5\n2 1\n4 2\n\"\"\") == \"Chris\"\nassert solution(\"\"\"\n2\n6 1\n1 6\n\"\"\") == \"Mishka\"\nassert solution(\"\"\"\n3\n1 5\n3 3\n2 2\n\"\"\") == \"Friendship is magic!^^\"\nassert solution(\"\"\"\n4\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"Mishka\"\nassert solution(\"\"\"\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"Chris\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('2 4') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('2 3') == 'NO'\nassert solution('1 1') == 'YES'\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n111\\n1*1\\n111\") == \"YES\"\nassert solution(\"2 4\\n*.*.\\n1211\\n\") == \"NO\""
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n111\\n1*1\\n111\\n') == 'YES'\nassert solution('2 4\\n*.*.\\n1211\\n') == 'NO'\nassert solution('1 2\\n*.*\\n111\\n') == 'YES'\nassert solution('3 3\\n111\\n1*1\\n111\\n') == 'YES'\nassert solution('1 3\\n111\\n1*1\\n111\\n') == 'NO'\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"3 3\\n111\\n1*1\\n111\\n\") == \"YES\"\nassert solution(\n\"2 4\\n*.*.\\n1211\\n\") == \"NO\"\nassert solution(\n\"4 4\\n1*1\\n2*2\\n3*3\\n4*4\\n\") == \"YES\"\nassert solution(\n\"4 4\\n1*1\\n2*2\\n3*3\\n4*4\\n\") == \"NO\"\nassert solution(\n\"3 3\\n111\\n1*1\\n111\\n\") == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\\n111\\n1*1\\n111\") == \"YES\"\nassert solution(\"3 3\\n111\\n1*1\\n111\\n1*1\\n111\") == \"NO\"\nassert solution(\"3 4\\n*.*.\\n1211\\n*2*1\") == \"YES\"\nassert solution(\"3 4\\n*.*.\\n1211\\n*2*1\\n1211\") == \"NO\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''3 3\n111\n1*1\n111''') == \"NO\"\nassert solution(\n'''2 4\n*.*.\n1211''') == \"YES\"\nassert solution(\n'''3 4\n*.*.\n.**.\n.**.\n.**.\n''') == \"YES\"\nassert solution(\n'''5 4\n****\n.**.\n***.\n.**.\n.**.\n''') == \"YES\"\nassert solution(\n'''7 7\n******\n******\n******\n******\n***.**\n**.**.\n**.**.\n**.**.\n''') == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3\\n1111\\n1211\\n1112\\n1111') == \"NO\"\nassert solution('4 3\\n111*1\\n111*1\\n111*1\\n111*1\\n111*1\\n111*1\\n111*1\\n111*1') == \"YES\"\nassert solution('1 1\\n*') == \"NO\"\nassert solution('1 1\\n*') == \"NO\"\nassert solution('3 3\\n1*1\\n1*1\\n1*1') == \"YES\"\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 3\n111\n1*1\n111\n''') == \"YES\"\nassert solution('''2 4\n*.*.\n1211\n''') == \"NO\"\nassert solution('''5 6\n**..*\n.*..*\n.*..*\n*.*.*\n.*.*.*\n''') == \"NO\"\nassert solution('''1 1\n1*\n''') == \"YES\"\n'''\nassert solution('''1 1\n*\n''') == \"YES\"\n'''\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2\\n111\\n1*1\\n111') == 'YES'\nassert solution('2 4\\n*.*.\\n1211') == 'NO'\nassert solution('2 4\\n.*1.\\n1*1') == 'NO'\nassert solution('1 1\\n*') == 'YES'\nassert solution('1 1\\n.1') == 'NO'\n"
    },
    {
        "number": 234,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == ''\n\"\"\"\n\nn, m = [int(x) for x in stdin.split()]\n\nfield = []\n\nfor _ in range(n):\n    field.append(list(stdin.strip()))"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''68''') == '3'\nassert solution('''4''') == '1'\nassert solution('''16''') == '4'\nassert solution('''32''') == '8'\nassert solution('''67''') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    '68'\n) == '3'\nassert solution(\n    '39'\n) == '29'\nassert solution(\n    '55'\n) == '13'\nassert solution(\n    '43'\n) == '10'\nassert solution(\n    '10'\n) == '5'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin[29:-1]\n\"\"\"\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''68''') == '3'\nassert solution('''13''') == '7'\nassert solution('''24''') == '12'\nassert solution('''38''') == '12'\nassert solution('''47''') == '10'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"68\") == \"3\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1000\") == \"99\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1047\") == \"9\"\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''68''') == '3'\nassert solution('''65''') == '3'\nassert solution('''59''') == '3'\nassert solution('''56''') == '3'\nassert solution('''51''') == '3'\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\n\n\"\"\""
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin.splitlines()[0]\n"
    },
    {
        "number": 235,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('68') == '3'\nassert solution('1317') == '1'\nassert solution('10') == '2'\nassert solution('1000') == '10'\nassert solution('1111') == '10'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('--o--') == 'YES'\nassert solution('--o---') == 'YES'\nassert solution('---oo---') == 'YES'\nassert solution('oo---oo---') == 'YES'\nassert solution('---oo---oo---') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == \"YES\"\nassert solution('-o---') == \"YES\"\nassert solution('ooo') == \"YES\"\nassert solution('o-o--') == \"YES\"\nassert solution('-o-o-') == \"YES\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"ooo\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"-o-o--\") == \"YES\""
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ooo') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('-o---o-') == 'NO'\nassert solution('-o-o--') == 'YES'\nassert solution('-o--o-') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"-o---o-\") == \"NO\"\nassert solution(\"-o-o-o-\") == \"NO\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-o---o-') == 'NO'\nassert solution('-o-o-o-') == 'NO'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"-o-o--\") == \"YES\"\nassert solution(\"-o---\") == \"YES\"\nassert solution(\"ooo\") == \"YES\"\nassert solution(\"o-o---o\") == \"NO\"\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('-o-o--') == 'YES'\nassert solution('-o---') == 'YES'\nassert solution('ooo') == 'YES'\nassert solution('-oo') == 'NO'\nassert solution('-o--o--') == 'YES'\n"
    },
    {
        "number": 236,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == 'YES'\nassert solution('o--') == 'YES'\nassert solution('oo-o-o-o') == 'YES'\nassert solution('o---') == 'YES'\nassert solution('--oo') == 'YES'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('2 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 1 1') == '2'\nassert solution('1 1 0') == '3'\nassert solution('10 100 10') == '10'\nassert solution('1000 100 10') == '100'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('10 100 1') == '101'\nassert solution('10 100 11') == '1011'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 6 2''') == \"2\"\nassert solution('''3 10 3''') == \"4\"\nassert solution('''3 6 1''') == \"3\"\nassert solution('''1 10 2''') == \"0\"\nassert solution('''10 3 4''') == \"4\"\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 6 2''') == '2'\nassert solution('''3 10 3''') == '4'\nassert solution('''3 6 1''') == '3'\n"
    },
    {
        "number": 237,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 6 2') == '2'\nassert solution('3 10 3') == '4'\nassert solution('3 6 1') == '3'\nassert solution('2 4 2') == '2'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''\n\n'''\n\n'''\n    # TEST\n    assert (solution(stdin)) == ''\n    # Assert\n'''\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n-1') == '-1'\nassert solution('3\\n2 3 1') == '2'\nassert solution('4\\n2 3 -1 -2') == '2'\nassert solution('10\\n4 8 7 6 -5 9 -4 -3 -2 -1') == '8'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''4 2 10\n1 -2 1 4 7''') == '4'\nassert solution('''5 2 1000\n1 -2 1 4 7''') == '0'\nassert solution('''3 2 2\n1 1 1''') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 2 10') == '4'\nassert solution('-13 -4 -9 -20 -11') == '0'\nassert solution('1 2 3') == '0'\nassert solution('1 2 1') == '0'\nassert solution('3 2 3') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 3 10\\n2 -4 15 -3 4 8 3') == '7'\nassert solution('5 2 1000\\n-13 -4 -9 -20 -11') == '0'\nassert solution('7 2 10\\n2 -4 15 -3 4 8 3') == '7'\nassert solution('5 2 1000\\n-13 -4 -9 -20 -11') == '0'\nassert solution('7 2 10\\n2 -4 15 -3 4 8 3') == '7'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''7 3 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''5 2 10\n-13 -4 -9 -20 -11''') == '0'\nassert solution('''7 2 10\n2 -4 15 -3 4 8 3''') == '7'\nassert solution('''5 2 1000\n-13 -4 -9 -20 -11''') == '0'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n') == '0'\nassert solution('2\\n1 2\\n') == '2'\nassert solution('2\\n0 1 2\\n') == '1'\nassert solution('2\\n-1 1 2\\n') == '1'\nassert solution('2\\n1 0 1 2\\n') == '2'\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"7 3 10\n2 -4 15 -3 4 8 3\n\"\"\") == \"7\"\nassert solution(\n\"\"\"5 2 1000\n-13 -4 -9 -20 -11\n\"\"\") == \"0\"\nassert solution(\n\"\"\"7 5 10\n-1 -2 -3 -4 -5 -6 -7\n\"\"\") == \"0\"\n"
    },
    {
        "number": 238,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"7 3 10\\n2 -4 15 -3 4 8 3\\n\") == \"7\\n\"\nassert solution(\"5 2 1000\\n-13 -4 -9 -20 -11\\n\") == \"0\\n\"\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('''0 10''') == '0 1\\n0 10\\n0 0\\n0 9\\n'\nassert solution('''1 1\n1 1''') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('''10 10\n1 1''') == '0 1\\n0 10\\n0 0\\n0 9\\n'\nassert solution('''100 10\n1 1''') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\n'''\n    for i in range(len(grid)):\n        for j in range(len(grid[i])):\n            if i == j == 0:\n                pass\n            else:\n                grid[i][j] = grid[i - 1][j] + grid[i][j - 1]\n    return grid[n - 1][m - 1]\n\n\nprint(solution(stdin))\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9'\nassert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1'\nassert solution('2 2') == '1 1\\n0 0\\n1 0\\n1 1'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1'\nassert solution('1 10') == '1 10\\n0 0\\n1 0\\n0 9\\n'\nassert solution('1 0') == '0 1\\n0 10\\n0 0\\n9'\nassert solution('10 0') == '0 1\\n0 10\\n0 0\\n9\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n9\\n'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n0 0\n1 1\n1 0\n0 0\n\"\"\") == \"0 1\\n0 10\\n0 0\\n0 9\\n\"\nassert solution(\n\"\"\"\n0 0\n1 1\n1 0\n0 0\n\"\"\") == \"0 1\\n0 10\\n0 0\\n0 9\\n\"\nassert solution(\n\"\"\"\n0 0\n1 1\n1 0\n0 0\n\"\"\") == \"0 1\\n0 10\\n0 0\\n0 9\\n\"\nassert solution(\n\"\"\"\n0 0\n1 1\n1 1\n0 0\n\"\"\") == \"0 1\\n0 1\\n0 1\\n0 0\\n\"\nassert solution(\n\"\"\"\n0 0\n1 1\n1 1\n1 0\n\"\"\") == \"0 1\\n0 1\\n0 1\\n0 0\\n\"\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1 1\\n0 0\\n1 0\\n0 1\\n\"\nassert solution(\"0 10\") == \"0 1\\n0 10\\n0 0\\n0 9\\n\"\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('0 10') == '0 1'\nassert solution('0 10\\n1 1') == '0 1'\nassert solution('0 10\\n1 1') == '0 1'\nassert solution('0 10\\n1 1') == '0 1'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == \"1 1\"\nassert solution('''0 10''') == \"0 1\"\nassert solution('''1 1''') == \"0 0\"\nassert solution('''2 2''') == \"1 0\"\nassert solution('''0 10''') == \"1 0\"\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''1 1'''\n) == '1 1'\nassert solution(\n'''10 10'''\n) == '1 0'\nassert solution(\n'''0 10'''\n) == '0 1'\nassert solution(\n'''0 10'''\n) == '0 1'\nassert solution(\n'''1 1'''\n) == '0 0'\n"
    },
    {
        "number": 239,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 1\\n0 0\\n1 0\\n0 1\\n'\nassert solution('0 10') == '0 1\\n0 10\\n0 0\\n0 9\\n'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"99999\") == \"99999\"\nassert solution(\"123456789\") == \"123456789\"\nassert solution(\"0000000\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0123456789\") == \"0123456789\"\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"003512\") == \"30021\"\nassert solution(\"99\") == \"999999999\"\nassert solution(\"999999\") == \"9999999999999\"\nassert solution(\"999999999\") == \"99999999999999999\"\nassert solution(\"99999\") == \"999999999\"\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\nassert solution('63') == '3036366999'\n\nprint('Test passed')\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''003512\n021\n''') == '30021'\nassert solution('''199966633300\n63\n''') == '3036366999'\nassert solution('''99966633300\n63\n''') == '3036366999'\nassert solution('''999660633300\n63\n''') == '3036366999'\nassert solution('''999660633300\n63\n''') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3036366999'"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('021') == '30021'\nassert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\n"
    },
    {
        "number": 240,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('003512') == '30021'\nassert solution('199966633300') == '3036366999'\nassert solution('09999901') == '9999901'\nassert solution('987654321') == '987654321'\n\nassert solution('23') == '2'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == 'Correct'\nassert solution('1\\n2\\n1\\n3\\n') == 'Correct'\nassert solution('1\\n2\\n1\\n3\\n') == 'Incorrect'\nassert solution('2\\n2\\n2\\n2\\n') == 'Correct'\nassert solution('1\\n1\\n1\\n1\\n') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n\"\"\"\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('3 1 1 2') == 'Correct'\nassert solution('3 1 2 1') == 'Correct'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 2\") == \"Correct\"\nassert solution(\"3 1 1 3\") == \"Correct\"\nassert solution(\"2 1 1 3\") == \"Incorrect\"\nassert solution(\"3 1 1 4\") == \"Incorrect\"\nassert solution(\"4 1 1 4\") == \"Correct\"\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5\") == \"Correct\"\nassert solution(\"2 3 4 5\") == \"Correct\"\nassert solution(\"1 3 3 5\") == \"Incorrect\"\nassert solution(\"1 1 3 4\") == \"Correct\"\nassert solution(\"5 1 3 4\") == \"Correct\"\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 2\\n1\") == \"Correct\"\nassert solution(\"3 1 1 3\\n2\") == \"Correct\"\nassert solution(\"2 1 1 3\\n2\") == \"Incorrect\"\nassert solution(\"2 1 1 3\\n3\") == \"Correct\"\nassert solution(\"3 1 1 3\\n4\") == \"Correct\"\n"
    },
    {
        "number": 241,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1 1 2') == 'Correct'\nassert solution('3 1 1 3') == 'Correct'\nassert solution('2 1 1 3') == 'Incorrect'\nassert solution('2 1 1 2') == 'Incorrect'\nassert solution('1 1 1 1') == 'Correct'\n\n\n\"\"\"\n\nn, m, min, max = [int(x) for x in stdin.split()]\ntemps = [int(x) for x in stdin.split()]"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '0'\nassert solution('5 6 7 8 9') == '5'\n\n\n\n[NOTE] This problem is similar to the problem find sum of divisors of a number. The solution for this problem is quite straight-forward. Just use the factorial of a number to get the desired number of trailing zeros. Here is the code that helps you:"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('0') == '0'\nassert solution('13') == ''\nassert solution('17') == '0'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '5'\nassert solution('5') == '5 6 7 8 9'\nassert solution('5') == '0'\nassert solution('5') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"9\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '1'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1''') == '5'\nassert solution('''2''') == '5'\nassert solution('''3''') == '5'\nassert solution('''4''') == '5'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == '5'\nassert solution('''5''') == '5'\nassert solution('''5''') == '5'\nassert solution('''5''') == '5'\nassert solution('''5''') == '5'\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"5\\n5 6 7 8 9\"\n\"\"\"\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == solution(sample1) == '12'\nassert solution(sample2) == '0'\n\n[input]\n8\n\n[output]\n4\n5 6 7 8 9\n[input]\n3\n\n[output]\n0\n'''\n"
    },
    {
        "number": 242,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n''') == '2 2'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3'\n'''\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3 2''') == '2 2'\nassert solution('''2 1''') == '2 2'\nassert solution('''1 2 3''') == '2 2'\nassert solution('''1 2 5''') == '2 2'\nassert solution('''4 2 1''') == '3 3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n1 4 4\\n1 3 3\\n') == '3 3 3'\nassert solution('1 2 3\\n1 2 5\\n4 2 1\\n2 3 2\\n2 3 1\\n1 4 4\\n1 3 3\\n') == '3 3 3'\n\"\"\""
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n''') == '2 2\\n'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3\n''') == '3 3 3\\n'\nassert solution('''4 5 5\n1 2 3\n1 2 4\n2 3 1\n2 3 3\n1 4 4\n1 3 3\n''') == '3 3 3\\n'\nassert solution('''5 6 5\n1 2 3\n1 2 4\n1 3 5\n1 4 2\n2 4 3\n1 4 1\n2 3 1\n3 4 1\n''') == '3 3 3\\n'\nassert solution('''5 6 5\n1 2 3\n1 2 4\n1 3 5\n1 4 2\n2 4 3\n1 4 1\n2 3 1\n3 4 1\n''') == '3 3 3\\n'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(10 ** 9)\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 3 2''') == '2 2'\nassert solution('''2 1\n1 2 3''') == '2 2'\nassert solution('''1 2 5''') == '3 3'\nassert solution('''1 2 2''') == '3 3'\nassert solution('''2 2 1''') == '3 3'\n"
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1\n1 4 4\n1 3 3''') == '3 3 3'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n\nassert solution('''5 5 4\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n\nassert solution('''8 8 7\n1 2 1\n1 3 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 5 1\n7 6 1\n8 7 1\n1 7 3\n1 2 3\n1 4 3\n1 5 3\n1 6 3\n1 8 3\n1 8 3\n1 8 3''') == '3 3 3'\n\nassert solution('''13 13 2\n1 2 1\n1 3 1\n2 3 1\n3 4 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n1 11 3\n1 10 3\n1 9 3\n1 8 3\n1 7 3\n1 6 3\n1 5 3\n1 4 3\n1 3 3\n1 2 3\n1 1 3\n1 1 3\n1 1 3\n1 1 3\n1 1 3\n1 1 3''') == '3 3 3'\n\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 243,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3 2\n2 1\n1 2 3\n1 2 2\n2 2 1''') == '2 2'\nassert solution('''4 5 3\n1 2 3\n1 2 5\n4 2 1\n2 3 2\n1 4 4\n1 3 3''') == '3 3 3'\n\n'''\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''4\n2''') == '1'\nassert solution(\n'''1\n1''') == '0'\nassert solution(\n'''5\n3''') == '2'\nassert solution(\n'''2\n1''') == '1'\nassert solution(\n'''7\n6''') == '4'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4\n2\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n1\n1\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n4\n0\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n4\n1\n    \"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n4\n2\n    \"\"\"\n) == \"1\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n0\") == \"0\"\nassert solution(\"1\\n2\") == \"0\"\nassert solution(\"3\\n1\") == \"0\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\"\nassert solution(\"2\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n\") == \"0\"\nassert solution(\"0\\n0\\n\") == \"0\"\nassert solution(\"1\\n0\\n\") == \"0\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n2\n''') == '1'\nassert solution('''1\n1\n''') == '0'\nassert solution('''2\n1\n''') == '1'\nassert solution('''10\n10\n''') == '0'\nassert solution('''100\n10\n''') == '0'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n2\n''') == '1'\nassert solution('''1\n1\n''') == '0'\nassert solution('''3\n1\n''') == '0'\n\n\n\n\n\n##\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n2\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nassert solution('4\\n1\\n') == '2'\nassert solution('1\\n2\\n') == '1'\nassert solution('2\\n2\\n') == '1'\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"5\\n1\\n\") == \"0\"\nassert solution(\"3\\n0\\n\") == \"2\"\nassert solution(\"3\\n1\\n\") == \"2\"\nassert solution(\"4\\n0\\n\") == \"2\"\n"
    },
    {
        "number": 244,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2''') == '1'\nassert solution('''1\n1''') == '0'\nassert solution('''1\n0''') == '0'\nassert solution('''2\n1''') == '0'\nassert solution('''3\n0''') == '0'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 0 5 2\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 0 5 2\") == \"NO\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\n''') == 'YES'\nassert solution('''\n4\n0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n''') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n2 0 0 2\") == \"YES\""
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"YES\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\nassert solution(\"0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'YES'\nassert solution('1 1 1 1\\n0 1 1 1\\n1 1 1 1\\n1 1 1 1\\n0 0 0 0\\n') == 'NO'\nassert solution('2\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'YES'\nassert solution('2\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'NO'\nassert solution('3\\n0 0 2 3\\n0 3 3 5\\n2 0 5 2\\n3 2 5 5\\n2 2 3 3\\n') == 'YES'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\nassert solution('''1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n5 6 7 8''') == 'NO'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'YES'\nassert solution('0 0 2 3') == 'YES'\nassert solution('0 3 3 5') == 'NO'\nassert solution('2 0 5 2') == 'YES'\nassert solution('3 2 5 5') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\"\"\") == \"YES\"\nassert solution(\"\"\"0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\"\"\") == \"NO\"\nassert solution(\"\"\"0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\"\"\") == \"NO\"\nassert solution(\"\"\"0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\"\"\") == \"YES\"\nassert solution(\"\"\"0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3\"\"\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'YES'\nassert solution('''0 0 2 3\n0 3 3 5\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\nassert solution('''3 2 4\n3 1 4\n2 3 4\n1 2 3\n1 1 1''') == 'YES'\nassert solution('''2 0 4\n1 2 4\n2 2 4\n3 3 4\n3 1 4\n2 3 4\n1 2 3''') == 'NO'\nassert solution('''0 0 2 3\n1 1 4 4\n2 0 5 2\n3 2 5 5\n2 2 3 3''') == 'NO'\n"
    },
    {
        "number": 245,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''0 0 2 3''') == 'YES'\nassert solution('''0 3 3 5''') == 'NO'\nassert solution('''2 0 5 2''') == 'YES'\nassert solution('''3 2 5 5''') == 'NO'\nassert solution('''2 2 3 3''') == 'NO'\n\n'''"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''10 1\n''') == '3'\nassert solution('''25 20\n''') == '0'\nassert solution('''10 9\n''') == '1'\nassert solution('''100 10\n''') == '0'\nassert solution('''100 9\n''') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n\"12 1\"\n) == \"3\"\nassert solution(\n\"25 20\"\n) == \"0\"\nassert solution(\n\"10 9\"\n) == \"1\"\nassert solution(\n\"1000000000000 1000000000\"\n) == \"0\"\nassert solution(\n\"1000000000000000 9999999999\"\n) == \"0\"\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\nassert solution('34 6') == '2'"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\nassert solution('10 10') == '0'\nassert solution('100000 100000') == '0'\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\n\n'''\n\nfrom math import log10, floor\n"
    },
    {
        "number": 246,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('12 1') == '3'\nassert solution('25 20') == '0'\nassert solution('10 9') == '1'\nassert solution('10 9') == '1'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n0\\n0\\n0\\n') == 'YES'\nassert solution('1\\n0\\n0\\n0\\n0\\n') == 'NO'\nassert solution('1\\n0\\n0\\n0\\n0\\n') == 'NO'\nassert solution('1\\n0\\n0\\n0\\n0\\n') == 'NO'\nassert solution('1\\n0\\n0\\n0\\n0\\n') == 'YES'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\"\n\n'''\nfrom collections import deque\nn = int(input())\nfor _ in range(n):\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    \n    if x1 == 0 and y1 == 0 and x2 == 0 and y2 == 0:\n        print(\"YES\")\n        continue\n    \n    elif x1 == x2 and y1 == y2:\n        print(\"NO\")\n        continue\n    \n    elif x1 == 0:\n        if x2 % y2 == 0:\n            print(\"NO\")\n            continue\n        \n        if abs(x2 // y2) % 2 == 0:\n            print(\"NO\")\n            continue\n        \n    elif y1 == 0:\n        if y2 % x2 == 0:\n            print(\"NO\")\n            continue\n        \n        if abs(y2 // x2) % 2 == 0:\n            print(\"NO\")\n            continue\n    \n    elif x1 == 0:\n        if x2 % y2 == 0:\n            print(\"NO\")\n            continue\n        \n        if abs(x2 // y2) % 2 == 0:\n            print(\"NO\")\n            continue\n    \n    elif y1 == 0:\n        if y2 % x2 == 0:\n            print(\"NO\")\n            continue\n        \n        if abs(y2 // x2) % 2 == 0:\n            print(\"NO\")\n            continue\n    \n    else:\n        if x2 % y2 == 0 or y2 % x2 == 0:\n            print(\"NO\")\n            continue\n        \n        if abs(x2 // y2) % 2 == 0 or abs(y2 // x2) % 2 == 0:\n            print(\"NO\")\n            continue\n    \n    print(\"YES\")\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 'YES'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5') == 'NO'\nassert solution('3') == 'NO'\nassert solution('0') == 'YES'\nassert solution('1') == 'YES'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\nassert solution('5\\n0 0\\n1 0\\n2 1\\n1 1\\n2 3\\n') == 'NO'\nassert solution('2\\n1 1\\n2 1\\n') == 'YES'\nassert solution('1\\n1\\n') == 'YES'\nassert solution('1\\n1\\n2\\n') == 'NO'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('0') == 'NO'\nassert solution('0 1') == 'NO'\nassert solution('1 0') == 'NO'\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\nassert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'NO'\nassert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'YES'\nassert solution('0 0\\n0 1\\n1 1\\n1 -1\\n2 2\\n') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 247,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2\n''') == 'YES'\n\nassert solution('''5\n0 0\n0 1\n1 1\n1 -1\n2 2\n''') == 'NO'\n\nassert solution('''1\n1 1\n1 -1\n2 2\n''') == 'NO'\n\nassert solution('''5\n-10 10\n0 0\n1 1\n10 10\n-10 -10\n-10 -1\n-1 1\n0 0\n''') == 'NO'\n\nassert solution('''3\n0 0\n0 1\n1 1\n1 -1\n2 2\n''') == 'YES'"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\n'''\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 12 3 1\") == \"6\"\nassert solution(\"1 1 1 2\") == \"31\"\nassert solution(\"1 1 1 0\") == \"0\"\nassert solution(\"1 0 1 2\") == \"0\"\nassert solution(\"1 2 1 2\") == \"0\"\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('2 12 3 1') == '0'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 1 1') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('1 1 1 2') == '31'\nassert solution('2 12 3 1') == '0'\nassert solution('10 12 3 5') == '125'\nassert solution('10 11 6 2') == '7'\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 248,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 2 1') == '6'\nassert solution('2 12 3 1') == '0'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3 250 185 230\") == \"1\\n230\"\nassert solution(\"4 250 185 230\") == \"0\\n185 230\"\nassert solution(\"2 300 185 230\") == \"2\\n185 230\"\nassert solution(\"3 100 100 50\") == \"0\"\nassert solution(\"4 100 100 50\") == \"1\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 250 185 230\") == \"1\\n230\"\nassert solution(\"0 185 250\") == \"0\\n185 250\"\nassert solution(\"0 20 185 250\") == \"2\\n185 250\"\nassert solution(\"0 0\") == \"0\\n0\"\nassert solution(\"1 3 5\") == \"1\\n3 5\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 250 185 230\") == \"1\"\nassert solution(\"0 185 250\") == \"230\"\nassert solution(\"2 300 185 230\") == \"0\"\nassert solution(\"0 300\") == \"185 230\"\nassert solution(\"1 10 5\") == \"1\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3 250 185 230''') == '1\\n230'\nassert solution('''0 185 250''') == '0\\n185 250'\nassert solution('''2 300 185 230''') == '0\\n185 230'\nassert solution('''0 300''') == '2\\n185 230'\nassert solution('''0 4 10 10''') == '0\\n4 10 10'\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 250 185 230\n0 185 250\n''') == '1'\nassert solution('''4 250 185 230\n0 20 185 250\n''') == '0'\nassert solution('''2 300 185 230\n0 300\n''') == '2'\nassert solutionn''') == '0'\nassert solution('''4 200 145 100 20 200\n0 100\n''') == '1'\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 250 185 230') == '0'\nassert solution('0 250 185 230') == '1'\nassert solution('2 300 185 230') == '2'\nassert solution('0 300 185 230') == '2'\nassert solution('1 300 185 230') == '2'\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 250 185 230\") == \"1\"\nassert solution(\"0 185 250\") == \"230\"\nassert solution(\"0 250 185\") == \"185\"\nassert solution(\"0 250 185 230\") == \"0\"\nassert solution(\"0 250 185 230\") == \"0\"\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 249,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nn, l, x, y = map(int, stdin.split())\na = list(map(int, stdin.split()))"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2\n100 30\n40 10\n'''\n) == '942477.796077000'\n\nassert solution(\n'''4\n1 1\n9 7\n1 4\n10 7\n'''\n) == '3983.539484752'\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n100 30\n40 10''') == '942477.796077000'\nassert solution('''4\n1 1\n9 7\n1 4\n10 7''') == '3983.539484752'\nassert solution('''2\n10 1\n1 1\n100 1\n1 1''') == '10'\nassert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''3\n10 10\n10 10\n10 10\n10 10''') == '100'\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n100 30\n40 10\n''') == '942477.796077000'\nassert solution('''4\n1 1\n9 7\n1 4\n10 7\n''') == '3983.539484752'\n\n\n\n'''\nfrom math import floor\nimport sys"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"10\\n100\") == \"10\"\nassert solution(\"2\\n3\\n5\") == \"11\"\nassert solution(\"2\\n3\\n5\\n1\\n4\\n6\\n8\\n9\\n10\\n15\\n20\") == \"16\"\nassert solution(\"2\\n3\\n5\\n1\\n4\\n6\\n8\\n9\\n10\\n15\\n20\\n25\\n30\") == \"52\"\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2\n100 30\n40 10\n''') == '942477.796077000'\n\nassert solution('''4\n1 1\n9 7\n1 4\n10 7\n''') == '3983.539484752'\n\nassert solution('''10\n1 100\n99 99\n98 98\n99 99\n98 98\n99 98\n98 98\n99 99\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98\n99 98\n98 98"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4\n1 1\n9 7\n1 4\n10 7\n\"\"\".strip()) == \"3983.539484752\"\n\nassert solution(\n\"\"\"\n2\n100 30\n40 10\n\"\"\".strip()) == \"942477.796077000\"\n\nassert solution(\n\"\"\"\n2\n1 1\n9 7\n1 4\n10 7\n\"\"\".strip()) == \"3983.539484752\"\n\nassert solution(\n\"\"\"\n2\n1 1\n9 7\n1 4\n10 7\n\"\"\".strip()) == \"942477.796077000\"\n\nassert solution(\n\"\"\"\n3\n1 1\n9 7\n1 4\n10 7\n\"\"\".strip()) == \"1356.18347294566\""
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1.00000'\nassert solution('2\\n10\\n9\\n8\\n7') == '2.00000'\nassert solution('1\\n10\\n9\\n8\\n7') == '1.00000'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7') == '3983.539484752'\nassert solution('4\\n1 2\\n9 7\\n1 4\\n10 7') == '3983.539484752'\n"
    },
    {
        "number": 250,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n2\\n100 30\\n40 10\\n100 30\\n10 20\\n20 15\\n35 30\\n40 10\\n100 30') == '3983.539484752'\nassert solution('4\\n1 1\\n9 7\\n1 4\\n10 7\\n') == '3983.539484752'\nassert solution('7\\n1 1\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5') == '4999.99999999996'\nassert solution('4\\n1 1\\n1 1\\n1 1\\n1 1') == '16'\nassert solution('2\\n1 1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n3 1 2 2 4''') == '2'\nassert solution('''4 5\n2 3 4 5''') == '2'\nassert solution('''3 5\n2 3 4 5''') == '2'\nassert solution('''1 10\n2 1 2 3 2 4 2 5 2 6''') == '4'\nassert solution('''6 5\n6 6 6 6 6 6 6 6 6''') == '1'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 5\n3 1 2 2 4''') == '2'\nassert solution('''4 5\n2 3 4 5''') == '2'\nassert solution('''4 4\n2 3 4 3''') == '2'\nassert solution('''2 3\n2''') == '2'\nassert solution('''5 5\n2 1 2 2 4''') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5 5\n3 1 2 2 4\n''') == '2'\n\nassert solution('''4 5\n2 3 4 5\n''') == '2'\n\nassert solution('''8 6\n2 1 4 5 8 4 6 2\n''') == '3'\n\nassert solution('''2 0\n5\n''') == '1'\n\nassert solution('''1 0\n1\n''') == '0'"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 5\\n2 3 4 5') == '2'\nassert solution('4 5\\n2 3 4 5') == '2'\nassert solution
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 5\n3 1 2 2 4\n''') == '2'\n\nassert solution('''4 5\n2 3 4 5\n''') == '2'\n\nassert solution('''1 1\n1\n''') == '0'\n\nassert solution('''10 10\n3 1 2 2 4\n''') == '2'\n\nassert solution('''10 10\n1 1\n''') == '0'\n'''\n    pass\n    \n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n3 1 2 2 4\\n\") == \"2\"\nassert solution(\"4 5\\n2 3 4 5\\n\") == \"2\"\nassert solution(\"4 5\\n1 3 4 5\\n\") == \"0\"\n\n\n\"\"\"\n\n\"\"\"\nBreadth first search\nTime: O(n + k)\nSpace: O(n + k)\n\"\"\"\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"2\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"0 2\") == \"1\"\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 5\\n3 1 2 2 4\\n') == '2'\nassert solution('4 5\\n2 3 4 5\\n') == '2'\nassert solution('4 5\\n2 3 4 1\\n') == '2'\nassert solution('4 5\\n2 3 4 5\\n') == '2'\nassert solution('5 5\\n3 1 2 2 4\\n') == '2'\n"
    },
    {
        "number": 251,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5 5\n3 1 2 2 4''') == '2'\nassert solution('''4 5\n2 3 4 5''') == '2'\nassert solution('''5 3\n2 3 4 5''') == '0'\nassert solution('''6 2\n6 5 1 3 4 3''') == '2'\nassert solution('''1 10\n1 1''') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7\\n2 -1 2 -2 1 -1') == '5'\nassert solution('8\\n2 5 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\nassert solution('5\\n-2 10 -1 4') == '6'\nassert solution('7\\n-2 0 1 2 -1') == '3'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\nassert solution('1\\n-10 -15') == '0'\nassert solution('10\\n-10 -15') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n5 -2 10 -1 4') == '6'\nassert solution('8\\n5 2 5 3 -30 -30 6 9') == '10'\nassert solution('3\\n-10 6 -15') == '0'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('2\\n1') == '0'\nassert solution('2\\n3') == '2'\nassert solution('3\\n3') == '6'\n"
    },
    {
        "number": 252,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n5 -2 10 -1 4\\n') == '6\\n'\nassert solution('8\\n5 2 5 3 -30 -30 6 9\\n') == '10\\n'\nassert solution('3\\n-10 6 -15\\n') == '0\\n'\n\"\"\"\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 1') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''2 1 2''') == 'YES'\nassert solution('''1 1 1''') == 'YES'\nassert solution('''5 1 2''') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''1 1 2''') == 'YES'\nassert solution('''1 1 2''') == 'NO'\nassert solution('''100 1 2''') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('1 5 3') == 'YES'\nassert solution('5 5 5') == 'YES'\nassert solution('1 2 1') == 'NO'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 1 2''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''4 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\nassert solution(\"2 3 3\") == \"NO\"\nassert solution(\"2 2 2\") == \"NO\"\nassert solution(\"1 4 3\") == \"YES\"\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\nassert solution('1 1 1') == 'YES'\n"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2 3') == 'YES'\nassert solution('4 2 3') == 'NO'\n\n\"\"\"\n\n\"\"\"\nDEFINITION OF THE PROBLEM\n\"\"\""
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 2 3\") == \"NO\"\n\"\"\"\n\nimport sys\nfrom math import gcd"
    },
    {
        "number": 253,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 2 3''') == 'YES'\nassert solution('''4 2 3''') == 'NO'\nassert solution('''1 2 1''') == 'YES'\nassert solution('''2 2 1''') == 'NO'\nassert solution('''5 2 1''') == 'YES'\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('asdfgggffg') == 0\nassert solution('qwertyuiop') == 4\nassert solution('qwertyuiopasdfghjklzxcvbnm') == 4\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\n\n\n\"\"\"\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('aba') == 1\nassert solution('abcdd') == 0\nassert solution('aaa') == 0\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('abbaba') == 2\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\nassert solution('abcdefghijklmnopqrstuvwxyz') == 26\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\n\"\"\"\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('asdfasdfasdfasdfasdfasdfasdfasdfasdf') == 26\nassert solution('zxcvbnm') == 0\nassert solution('abcabcabcabc') == 0\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''12345''') == 5\nassert solution('''abcddcba''') == 4\nassert solution('''abcddcba''') == 4\nassert solution('''abcdefg''') == 3\nassert solution('''aaabbb''') == 4\n"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4"
    },
    {
        "number": 254,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('abaca') == 3\nassert solution('abcddcba') == 4\nassert solution('ab') == 2\nassert solution('a') == 0\nassert solution('bbb') == 2\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1 4 6 2\n5\n5 1 5 7 9''') == '3'\nassert solution('''1 2 3 4\n4\n10 11 12 13''') == '0'\nassert solution('''1 1 1 1 1\n3\n1 2 3''') == '2'\nassert solution('''1 1 1 1\n4\n1 2 3 4''') == '0'\nassert solution('''2 1 1 1\n3\n1 2 3''') == '2'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 4 6 2\\n5\\n5 1 5 7 9\\n') == '3'\nassert solution('4\\n1 2 3 4\\n4\\n10 11 12 13\\n') == '0'\nassert solution('4\\n1 2 3 4\\n4\\n1 1 1 1 1\\n') == '2'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n1 4 6 2\n5\n5 1 5 7 9''') == '3'\nassert solution('''4\n1 2 3 4\n4\n10 11 12 13\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\nassert solution('''4\n1 1 1 1\n4\n1 2 3\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\") == \"0\"\nassert solution(\"1\\n2\\n1\\n2\\n2\") == \"2\"\nassert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\") == \"3\"\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n1 4 6 2\n5\n5 1 5 7 9\n''') == '3'\nassert solution('''4\n1 2 3 4\n4\n10 11 12 13\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '2'\nassert solution('''1\n1\n''') == '0'\nassert solution('''5\n1 1 1 1 1\n3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n6\\n2\\n\") == \"3\"\nassert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\\n\") == \"0\"\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\\n\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n1 1 1 1\\n3\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"3\\n3\\n3\\n3\\n\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\\n\") == \"3\"\nassert solution(\"5\\n1 5 5 5 5\\n5\\n5 1 1 5 1 1\\n\") == \"4\""
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 6 2\\n5\\n5 1 5 7 9\\n\") == \"3\"\nassert solution(\"4\\n1 2 3 4\\n4\\n10 11 12 13\\n\") == \"0\"\nassert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\\n\") == \"2\"\nassert solution(\"3\\n1 1 1\\n3\\n1 2 3\\n\") == \"0\"\nassert solution(\"3\\n1 1 1\\n3\\n1 2 3\\n\") == \"0\"\n"
    },
    {
        "number": 255,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 4 6 2\\n5\\n5 1 5 7 9') == '3'\nassert solution('1 2 3 4\\n4\\n10 11 12 13') == '0'\nassert solution('4\\n1 2 3 4\\n4\\n10 11 12 13') == '2'"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 100\\n100 1\\n99 99\\n99 99\") == \"Team 1\"\nassert solution(\"1 1\\n2 2\\n3 3\\n2 2\") == \"Team 2\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\nassert solution(\"3 3\\n2 2\\n1 1\\n2 2\") == \"Draw\"\nassert solution(\"3 3\\n2 2\\n2 1\\n1 1\") == \"Draw\"\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n1 100\n100 1\n99 99\n99 99\n\"\"\") == \"Team 1\"\n\nassert solution(\n    \"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\") == \"Team 2\"\n\nassert solution(\n    \"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\") == \"Draw\"\n\n\"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n100 2\n99 99\n99 99\n\"\"\"\n\n\"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\"\n\n\"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n1 1\n2 2\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\"\n\n\"\"\"\n1 1\n2 2\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n3 3\n2 2\n1 1\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2 2\n\"\"\"\n\n\"\"\"\n1 2\n2 1\n3 3\n2"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\nassert solution('1 1\\n2 2\\n3 3') == 'Draw'\nassert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Team 1'\n\"\"\"\nfrom __future__ import annotations\n\nimport sys\nfrom typing import List\n\nfrom shared.board import (\n    Board,\n    BoardDrawException,\n    BoardException,\n    BoardParseException,\n    BoardPositionException,\n    BoardSelectedException,\n    check_winner,\n)\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2') == 'Draw'\n\n\n\n\n\n'''\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 100\\n100 1\\n99 99\\n99 99\\n') == 'Team 1'\nassert solution('1 1\\n2 2\\n3 3\\n2 2\\n') == 'Team 2'\nassert solution('3 3\\n2 2\\n1 1\\n2 2\\n') == 'Draw'\nassert solution('1 1\\n2 2\\n3 3\\n2 2\\n4 4\\n4 4\\n4 4\\n4 4\\n') == 'Draw'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n') == 'Draw'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 100\n100 1\n99 99\n99 99''') == 'Team 1'\nassert solution('''3 3\n2 2\n1 1\n2 2''') == 'Team 2'\nassert solution('''1 1\n2 2\n3 3\n2 2''') == 'Draw'\nassert solution('''1 1\n2 2\n2 2\n1 1''') == 'Team 1'\nassert solution('''2 2\n2 2\n1 1\n2 2''') == 'Team 2'\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Team 2\"\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 256,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 0 3\\n0 0 3\\n1 0 2\\n1 1 40') == '2.4'\nassert solution('4 3\\n-1 0 3\\n0 0 3\\n1 0 2\\n1 1 40') == '2.4'\nassert solution('4 0\\n-1 0\\n0 0\\n1 0\\n1 1') == '0'\nassert solution('3 2\\n2.2 2.2\\n2.1 1.8\\n1.9 1.6\\n1.6 1.5\\n1.8 1.5\\n1.6 1.3\\n1.9 1.2\\n2.1 1.1') == '0.35'\nassert solution('4 2\\n2.2 2.2\\n2.1 1.8\\n1.9 1.6\\n1.6 1.5\\n1.8 1.5\\n1.6 1.3\\n1.9 1.2\\n2.1 1.1') == '0.14'\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == '2.4'\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2.4'\nassert solution('4 3') == '2.4'\nassert solution('-1 0 3') == '2.4'\nassert solution('0 0 3') == '2.4'\nassert solution('1 0 2') == '2.4'\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3') == '2.4'\nassert solution('-1 0 3') == '2.4'\nassert solution('0 0 3') == '2.4'\nassert solution('1 0 2') == '2.2'\nassert solution('1 1 40') == '2.4'\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == \"2.4\"\nassert solution('1 2 3 4 -1 0 3') == \"2.4\"\nassert solution('1 2 3 4 -1 0 2') == \"2.4\"\nassert solution('1 2 3 4 -1 0 1') == \"2.4\"\nassert solution('1 2 3 4 -1 0 0') == \"2.4\"\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == expect\n\"\"\""
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '2.4'\nassert solution('-1 0 3') == '2.4'\nassert solution('0 0 3') == '2.4'\nassert solution('1 0 2') == '1.4'\nassert solution('1 1 40') == '2.4'\n'''"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == answer\n\n\"\"\"\n"
    },
    {
        "number": 257,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''4 3\n-1 0 3\n0 0 3\n1 0 2\n1 1 40'''\n) == '2.4'\n\nassert solution(\n'''4 3\n0 0 3\n1 0 2\n1 1 40'''\n) == '2.4'\n\nassert solution(\n'''4 3\n-1 -1 3\n1 1 3\n0 0 3\n1 1 2\n1 1 40'''\n) == '2.4'\n\nassert solution(\n'''4 3\n-1 -1 3\n1 1 3\n0 0 3\n1 1 2\n1 1 40'''\n) == '2.4'\n\nassert solution(\n'''4 3\n-1 -1 3\n1 1 3\n0 0 3\n-1 -1 2\n1 1 3\n0 0 3\n1 1 2\n1 1 40'''\n) == '2.4'"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n0523\n\"\"\"\n) == \"Bicarp\"\n\nassert solution(\n    \"\"\"\n2\n??\n\"\"\"\n) == \"Bicarp\"\n\nassert solution(\n    \"\"\"\n6\n???00?\n\"\"\"\n) == \"Monocarp\"\n\nassert solution(\n    \"\"\"\n8\n??054??0?\n\"\"\"\n) == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"?\") == \"Bicarp\"\nassert solution(\"??\") == \"Bicarp\"\nassert solution(\"????\") == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6\n?054??0?\n''') == 'Bicarp'\n\nassert solution('''\n3\n???00?\n''') == 'Monocarp'\n\nassert solution('''\n5\n0523\n''') == 'Bicarp'\n\nassert solution('''\n6\n0523\n''') == 'Monocarp'\n\nassert solution('''\n8\n?054??0?\n''') == 'Bicarp'"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Bicarp\"\n\nassert solution(\"???\") == \"Bicarp\"\n\nassert solution(\"???00??\") == \"Bicarp\"\n\n\n\"\"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Bicarp\"\nassert solution(input()) == \"Bicarp\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Bicarp\"\n\n\n\"\"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Bicarp'\n\n\"\"\"\n\n\"\"\"\nAC\n\"\"\"\n\nfrom math import log10\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Bicarp'\n\"\"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 258,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n4\n0523\n\"\"\"\n) == \"Bicarp\"\n\nassert solution(\n    \"\"\"\n2\n??\n\"\"\"\n) == \"Bicarp\"\n\nassert solution(\n    \"\"\"\n8\n?054??0?\n\"\"\"\n) == \"Bicarp\"\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"3 7\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2\\n6 4\\n9 5\\n') == '1'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\\n') == '3'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 7\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n6 4\\n9 5') == '1'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1') == '3'\nassert solution('5 5\\n3 3\\n2 5\\n5 6\\n4 9\\n6 1\\n1 2') == '1'\nassert solution('3 7\\n2 2\\n2 3\\n2 4\\n') == '1'\nassert solution('1 10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('5 7') == '2'\nassert solution('5 7') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('5 7') == '1'\nassert solution('5 1') == '3'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('2 3') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n6') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 3') == '1'\nassert solution('5 5') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\n"
    },
    {
        "number": 259,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '1'\nassert solution('3 7') == '1'\nassert solution('3 3') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('3 3') == '1'\nassert solution('3 3') == '1'\nassert solution('2 2') == '3'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '5'\nassert solution('1 2') == '5'\nassert solution('3 2') == '5'\nassert solution('5 2') == '5'\nassert solution('10 2') == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"10 10\") == \"99\"\nassert solution(\"1000 100\") == \"9999\"\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\n\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 4') == '2'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 1\"\n) == \"1\"\n\nassert solution(\n    \"3 2\"\n) == \"5\"\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '5'\nassert solution('1 10') == '5'\nassert solution('1 100') == '5'\nassert solution('1 1000') == '5'\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == None\nassert solution('1 1') == 1\nassert solution('1 2') == 2\nassert solution('3 2') == 5\nassert solution('10 10') == 34\n"
    },
    {
        "number": 260,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '5'\n\n'''"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'yes'\nassert solution
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4') == 'yes'\nassert solution('...........') == 'yes'\nassert solution('...........*') == 'yes'\nassert solution('...**.*...*.*') == 'yes'\nassert solution('...........**') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('0\\n') == 'no'\nassert solution('1\\n') == 'no'\nassert solution('2\\n') == 'yes'\nassert solution('3\\n') == 'no'\nassert solution('5\\n') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('16\\n.*.*..*.***.**.\\n') == 'yes'\nassert solution('11\\n.*.*...*.*.\\n') == 'no'\nassert solution('10\\n.**.\\n') == 'yes'\nassert solution('100\\n.***.\\n') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(test_input) == test_output\n\"\"\"\n\nn = int(input())\nstr = input()\ncount = 0\nfor i in range(len(str)):\n    if str[i] == '*':\n        if i == 0:\n            if str[i + 1]!= '*':\n                count += 1\n        elif i == len(str) - 1:\n            if str[i - 1]!= '*':\n                count += 1\n        else:\n            if str[i - 1]!= '*' and str[i + 1]!= '*':\n                count += 1\nprint('yes' if count == 5 else 'no')\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8\\n
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n**.*.*.*.*.*.*.*.*.*.*.*') == 'no'\nassert solution('7\\n**.*.*.*.*.*.*.*.*.*.*.*') == 'yes'\nassert solution('4\\n***') == 'no'\nassert solution('5\\n.*.*.*.*.*.*.*') == 'no'\nassert solution('5\\n*.*.*.*.*.*') == 'yes'\n"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == 'yes'\n\n'''"
    },
    {
        "number": 261,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"no\"\nassert solution(\"*.*.*.*.*.*\") == \"no\"\nassert solution(\"*.*.*.*.*.*.*.*.*.*\") == \"yes\"\nassert solution(\"***.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\") == \"no\"\nassert solution(\".**.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*\") == \"no\"\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n4 0 2\n3 5 7\n8 1 6''') == '9'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '1'\nassert solution('''6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '-1'\n'''\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n4 0 2\n3 5 7\n8 1 6\n''') == '9'\n\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '1'\n\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\n\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\n\nassert solution('''\n4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '3'\nassert solution('2\\n0 0\\n0 0\\n0 0') == '0'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin[0]\n\n\"\"\"\n\n\"\"\"\n-----Idea------\n\nA magic square is a square grid in which the sum of numbers in each row, column and two diagonals are the same.\n\nIf we try to find a positive integer x such that a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n are all equal, we find that x is the minimum.\n\nIf we follow the same process as the first sample case, we can find that it is impossible to find a positive integer x such that a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n are all equal.\n\nIf a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n, a_1, a_2,..., a_n are all equal, we can find that x = (n * (n ** 2 + 1) / 4) ** 0.5.\n\nNote that we need to take the square root before we can get the integer part of the result.\n\n---\n\nRef: https://leetcode.com/problems/magic-square-lcci/discuss/37049/C++-java-5-lines-O(n)-time-O(1)-space-greedy-solution\n\nThe key is to use dynamic programming.\n\nFrom the point of view of each cell, we can construct a one-dimensional array of size n,\n\nwhere the ith element equals to the number of cells that can be put into the ith cell.\n\nThen we can use the two pointers to start the traversal.\n\n\"\"\""
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n4 0 2\n3 5 7\n8 1 6\"\"\") == \"9\"\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\"\"\") == \"1\"\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\"\"\") == \"-\"\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n4 1 1 1\"\"\") == \"1\"\nassert solution(\"\"\"4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n2 1 1 1\"\"\") == \"-\"\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\nMore test cases\n\nassert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n4 0 2\n3 5 7\n8 1 6''') == '9'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1\n''') == '-1'\nassert solution('''5\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''7\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == '-1'\nassert solution('''8\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4 0 2\n3 5 7\n8 1 6''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 1 1\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == '-1'\n"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 0 2\\n3 5 7\\n8 1 6') == '9'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\\n') == '-1'\nassert solution('3\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n') == '-1'\nassert solution('4\\n1 1 1 1\\n1 1 0 1\\n1 1 2 1\\n1 1 1 1\\n') == '-1'"
    },
    {
        "number": 262,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3\n4 0 2\n3 5 7\n8 1 6''') == \"9\"\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 1 1\n1 1 1 1''') == \"1\"\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == \"-\"\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 1 1\n1 1 2 1''') == \"1\"\nassert solution('''4\n1 1 1 1\n1 1 0 1\n1 1 2 1\n1 1 1 1''') == \"-\"\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1''') == '3 7'\nassert solution('''1\n10\n5''') == '15 15'\nassert solution('''3\n7\n1\n6\n5''') == '7 13'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == result\n\n'''\n\n'''\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\n'''\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1''') == '3 7'\nassert solution('''1\n10\n5\n''') == '15 15'\nassert solution('''3\n7\n1\n6\n5\n''') == '7 13'\nassert solution('''3\n7\n1\n6\n5\n''') == '7 13'\nassert solution('''3\n7\n1\n6\n5\n''') == '7 13'\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom sys import stdin, stdout\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n6\n1\n1\n1\n1\n''') == '3 7'\n\nassert solution('''1\n10\n5\n''') == '15 15'\n\nassert solution('''3\n6\n1\n6\n5\n''') == '7 13'\n\nassert solution('''4\n4\n1\n1\n1\n1\n''') == '5 6'\n\nassert solution('''3\n4\n1\n1\n1\n''') == '2 3'"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == result, solution(stdin)\n"
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 263,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n1\") == \"1 2\"\nassert solution(\"3\\n2\\n1\") == \"1 2\"\nassert solution(\"4\\n6\\n1\\n1\\n1\\n1\") == \"3 7\"\nassert solution(\"1\\n10\\n5\") == \"15 15\"\nassert solution(\"3\\n7\\n1\\n6\\n5\") == \"7 13\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"128\"\n\"\"\"\nfrom functools import lru_cache\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n\nn, m = map(int, stdin.strip().split())"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 1\") == \"0\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3 3\n''') == '128'\nassert solution('''3 2\n''') == '1'\nassert solution('''2 2\n''') == '1'\nassert solution('''6 2\n''') == '4'\nassert solution('''9 2\n''') == '7'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3') == '128'\nassert solution('3 1') == '1'\nassert solution('2 1') == '0'\nassert solution('1 2') == '0'\nassert solution('5 3') == '12'\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"4 2\") == \"24\"\nassert solution(\"5 2\") == \"80\"\nassert solution(\"7 2\") == \"832\"\nassert solution(\"8 1\") == \"256\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n\n\"\"\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"128\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 9\") == \"0\"\n"
    },
    {
        "number": 264,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\nfrom math import factorial\n\nn, m = map(int, stdin.strip().split(' '))\n\nprint(factorial(m) // (factorial(m - n) * factorial(n)))\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9''') == '2 3'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''1 5\n9 9 8 7 6 5 4 3 2 1\n3 4 1 2 3 4\n1 4 5 6 7 8\n4 4 1 3 5 7\n1 4 2 4 6 8\n5 4 1 9 2 8\n''') == '2 4'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '2 4'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 3\") == \"2 1\"\nassert solution(\"1 4\") == \"2 3\"\nassert solution(\"1 5\") == \"3 4\"\nassert solution(\"1 6\") == \"4 5\"\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 4\n2 6 7\n4 2 3 9 5\n3 2 3 9\n100 1 7\n400 3 3 2 5\n100 2 9 2\n500 3 2 9 5''') == '2 3'\nassert solution('''2 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''4 3\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''4 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\nassert solution('''3 4\n1 1\n1 2\n1 3\n1 4\n10 4 1 2 3 4\n20 4 1 2 3 4\n30 4 1 2 3 4\n''') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 4'\n\n'''\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 4''') == '2 3'\nassert solution('''1 1''') == '1 2'\nassert solution('''10 4 1 2 3 4''') == '2 3'\nassert solution('''4 4 1 2 3 4''') == '2 3'\nassert solution('''1 4 5 6 7 8''') == '1 2'\n"
    },
    {
        "number": 265,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n'''\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '-1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 15\") == \"69 96\"\nassert solution(\"3 0\") == \"-1 -1\""
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 15\n''') == '69 96\\n'\nassert solution('''3 0\n''') == '-1 -1\\n'"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('2 100000') == '999999 999999'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 15''') == '69 96'\nassert solution('''3 0''') == '-1 -1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'\nassert solution('-1 -1') == '-1 -1'\nassert solution('1 1') == '0 1'\nassert solution('1 1') == '0 1'\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 15') == '69 96'\nassert solution('3 0') == '-1 -1'"
    },
    {
        "number": 266,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 15''') == '69 96'\nassert solution('''3 0''') == '-1 -1'\nassert solution('''2 4''') == '1 -1'\nassert solution('''3 7''') == '4 5'\nassert solution('''2 3''') == '1 -1'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('101 154 2') == '2189'\n\n'''\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('101 121 123') == '111 112 113'\nassert solution('101 121 123 123') == '111 112 113 111'\nassert solution
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''10 50 2''') == '1230'\nassert solution('''1 2345 10''') == '2750685'\nassert solution('''101 154 2''') == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\nassert solution('101 100 1') == '2189'\nassert solution('1 1 1') == '2189'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '2189'\n\"\"\"\n\"\"\"\nSAMPLE RUN\npython3 solution.py\n10 50 2\n\n1230\n\n\"\"\"\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2189\"\n\"\"\"\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'\nassert solution('101 124 52') == '2750684'\nassert solution('101 124 52') == '2750684'\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 50 2\") == \"1230\"\nassert solution(\"1 2345 10\") == \"2750685\"\nassert solution(\"101 154 2\") == \"2189\"\n\n\"\"\"\n"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10 50 2') == '1230'\nassert solution('1 2345 10') == '2750685'\nassert solution('101 154 2') == '2189'"
    },
    {
        "number": 267,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"6 3 10\") == \"YES\"\nassert solution(\"7 2 7 7 4 2\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"3 2 5\") == \"NO\"\nassert solution(\"10 16 22\") == \"YES\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 2 5') == 'NO'\nassert solution('6 2 3') == 'YES'\nassert solution('6 3 2') == 'NO'\nassert solution('10 16 22') == 'YES'\nassert solution('10 16 22') == 'YES'\n\n\n\n'''\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n6 3 10\n7 2 7 7 4 2\n''') == 'YES'\nassert solution('''\n6 2 3\n4 5 3 13 4 10\n''') == 'YES'\nassert solution('''\n3 2 5\n10 16 22\n''') == 'NO'\n\n\n\"\"\"\n\nfrom math import gcd\n\nn, k, d = map(int, stdin.readline().strip().split(' '))\narr = list(map(int, stdin.readline().strip().split(' ')))\n\narr.sort()\n\nfor i in range(n - 1):\n    if arr[i] - arr[i + 1] <= d:\n        g = gcd(arr[i], arr[i + 1])\n        if g <= k:\n            break"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3 10\\n7 2 7 7 4 2') == 'YES'\nassert solution('6 2 3\\n4 5 3 13 4 10') == 'YES'\nassert solution('3 2 5\\n10 16 22') == 'NO'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 2 3''') == 'YES'\nassert solution('''6 2 3''') == 'YES'\nassert solution('''2 2 1''') == 'YES'\nassert solution('''6 2 10''') == 'YES'\nassert solution('''5 1 5''') == 'NO'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2 5\") == \"YES\"\nassert solution(\"10 16 22\") == \"YES\"\nassert solution(\"4 5 3 13 4 10\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"7 2 7 7 4 2\") == \"YES\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3 10\\n7 2 7 7 4 2') == 'YES'\nassert solution('6 2 3\\n4 5 3 13 4 10') == 'YES'\nassert solution('3 2 5\\n10 16 22') == 'YES'\nassert solution('3 2 5\\n10 16 22') == 'NO'\nassert solution('3 2 5\\n10 16 22') == 'YES'\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\") == \"NO\"\nassert solution(\"1 5 1\") == \"NO\"\nassert solution(\"6 3 10\") == \"YES\"\nassert solution(\"7 2 7 7 4 2\") == \"YES\"\nassert solution(\"7 2 7 7 4 2 4\") == \"NO\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == output\n\"\"\"\n"
    },
    {
        "number": 268,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('6 3 10\\n7 2 7 7 4 2') == 'YES'\nassert solution('6 2 3\\n4 5 3 13 4 10') == 'YES'\nassert solution('3 2 5\\n10 16 22\\n') == 'NO'\nassert solution('3 2 5\\n4 5 3 13 4 10\\n') == 'NO'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('RYBGRYBGRY') == '0 0 0 0'\nassert solution('BGRYBGRYBG') == '0 0 0 0'\nassert solution('BGRYG') == '0 1 0 0'\nassert solution('RBYGYB') == '0 1 0 0'\nassert solution('YBGYBYGB') == '1 1 1 1'\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"BGYBGY\") == \"0 1 0 0\"\nassert solution(\"GRYYBGB\") == \"1 1 1 1\"\nassert solution(\"GB!RG!Y!\") == \"1 1 1 1\"\nassert solution(\"BGB!\") == \"2 1 1 0\"\n\"\"\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('RYBGRYBGR') == '0 0 0 0'\nassert solution('!RGYB') == '0 1 0 0'\nassert solution('!GB!RG!Y!') == '2 1 1 1'\nassert solution('GGBY') == '1 1 1 1'\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('RYBGRYBGR') == '0 0 0 0'\nassert solution('!RG!Y!') == '1 1 1 1'\nassert solution('!GB!RG!Y!') == '2 1 1 0'\n\n\n\"\"\""
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!\") == \"0 1 0 0\"\nassert solution(\"!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!\") == \"0 1 0 0\"\nassert solution(\"RBGBY\") == \"1 1 0 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'') == None\nassert solution('R!') == None\nassert solution('RYBGRYBGRY') == None\nassert solution('BGRYBGRYBG') == None\nassert solution('BGRYG') == None\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"GRYB\") == \"0 1 0 0\"\nassert solution(\"GB\") == \"1 1 1 1\"\nassert solution(\"GRBY\") == \"1 0 1 0\"\nassert solution(\"YYG\") == \"0 0 1 1\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"RYBGRYBGRY\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!GB!\") == \"1 1 1 1\"\nassert solution(\"!!!!YGRB\") == \"2 1 1 0\""
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RG!Y!B\") == \"0 1 0 0\"\nassert solution(\"!GB!\") == \"1 1 1 1\"\nassert solution(\"!RG!Y!B!\") == \"2 1 1 0\"\nassert solution(\"RGYBGR\") == \"0 0 0 0\"\n"
    },
    {
        "number": 269,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"RYBGRYBGR\") == \"0 0 0 0\"\nassert solution(\"!RGYB\") == \"0 1 0 0\"\nassert solution(\"!!!!YGRB\") == \"1 1 1 1\"\nassert solution(\"!GB!RG!Y!\") == \"2 1 1 0\"\nassert solution(\"RBRBRBBBRBRRBBBRBRBRBRRRBRRRBBBRRRBBBRBBRBRBBBRBRRRBRBBBRBRBBBRBRBRBBBRBBBBBRBRBRBRRRBRRRBBBRRRBBBRBRRRBBBRBRBRBBBRBRBRBRRRBRRRBRBRRRBBBRBRRRBBBRBRBRBRBRBBBRBRBRBRBRBRBRBBBRBRBRBRBRBRBRBRBRBBBRBRBRBRRRBRRRRRBBBRRRRRBBBRRRRRBBBRBRBBBRBRBRBBBRBRBRBRBBBRRRBRRRBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBRBRBRRRBBBRRRRRBBBRRRRRBRBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRRRRBBBRRR"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('2 3') == '0.66666667'\nassert solution('1 4') == '0.5'\nassert solution('2 4') == '0.5'\nassert solution('1 3') == '0.5'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1 2') == '1.5'\nassert solution('3 4') == '1.5'\nassert solution('1 1') == '0.5'\nassert solution('2 3') == '1.5'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\\n') == '1.5000000000'\nassert solution('2 3\\n1 2\\n1 3\\n1 2\\n2 4\\n1 2\\n1 3\\n1 2\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 4\\n1 2\\n') == '1.0'\nassert solution('2 3\\n1 2\\n2 4\\n1 2\\n1 3\\n1 2\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 4\\n1 2\\n') == '0.5'\nassert solution('4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 3\\n1 4\\n1 2\\n1 4\\n1 2\\n') == '0.375'\nassert solution('1 1\\n1 2\\n') == '0'\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 4\\n2 3\\n1 3\\n1 2\\n3 4\\n2 4\") == '1.5000000000'\n\"\"\"\n\nfrom itertools import combinations\nN, M = [int(x) for x in stdin.split(' ')]\nrooms = set(range(1, N + 1))\nfor _ in range(M):\n    s, t = [int(x) for x in stdin.split(' ')]\n    if s in rooms:\n        rooms.remove(s)\n    if t in rooms:\n        rooms.remove(t)"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1.5000000000'\n\"\"\"\n\nfrom fractions import Fraction\nimport random\n\nN, M = map(int, input().strip().split())\n\nadj = {\n    1: {},\n    2: {3: Fraction(1, 2), 4: Fraction(1, 2)},\n    3: {1: Fraction(1, 2), 2: Fraction(1, 2), 4: Fraction(1, 2)},\n    4: {1: Fraction(1, 2), 2: Fraction(1, 2), 3: Fraction(1, 2)}\n}\n\nfor _ in range(M):\n    s, t = map(int, input().strip().split())\n    adj[s][t] = Fraction(1, 2)\n    adj[t][s] = Fraction(1, 2)\n\npath = {}\n\nfor i in range(1, N):\n    if i == 1:\n        path[i] = random.choice([1, 3])\n    else:\n        path[i] = random.choice([j for j in range(1, i) if j not in path[i - 1]])\n\npath[N] = 1\n\nprint(adj)\nprint(path)\n\nE = Fraction(0)\n\nfor i in range(1, N + 1):\n    E += adj[i][path[i]]\n\nprint(E)\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1.5000000000'"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4\\n4\\n') == '1.5000000000'\nassert solution('4\\n4\\n1 3\\n2 4\\n2 3\\n3 4\\n4\\n4\\n1\\n4\\n') == '1.5000000000'\nassert solution('6\\n4\\n1 2\\n2 3\\n1 3\\n1 4\\n2 4\\n3 4\\n4\\n4\\n1\\n4\\n') == '1.5000000000'\nassert solution('4\\n4\\n1 2\\n2 3\\n1 3\\n1 4\\n2 4\\n1 2\\n4\\n') == '1.5000000000'\nassert solution('2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4 6\") == \"1.5000000000\"\n\n\"\"\"\n\nfrom fractions import Fraction\nfrom random import randint\nfrom functools import partial\nfrom math import sqrt"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"0.5\"\nassert solution(\"3 2\") == \"0.5\"\nassert solution(\"3 1\") == \"0.5\"\nassert solution(\"5 5\") == \"0.0\"\nassert solution(\"3 6\") == \"0.6666666667\"\n"
    },
    {
        "number": 270,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nfrom fractions import Fraction\nfrom itertools import product"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''\n5\n''') == '0'\n\nassert solution('''\n5\n5\n5\n5\n5\n5\n''') == '0'\n\nassert solution('''\n5\n3\n5\n5\n5\n5\n''') == '5'\n\nassert solution('''\n5\n11\n5\n5\n5\n5\n''') == '10'\n\nassert solution('''\n5\n113\n5\n5\n5\n5\n5\n''') == '110'"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5''') == '0'\nassert solution('''113''') == '110'\nassert solution('''1000000000''') == '1000000000'\nassert solution('''5432359''') == '5432360'\n\n\n\n'''\n\nn = int(input())\n\nl = list(str(n))\nl = list(map(int, l))\n\ni = 0\nwhile l[i] == 0:\n    i += 1"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\nassert solution('111') == '110'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\nassert solution(\"-3.1415\") == \"-3.1415\"\n\n\"\"\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('12345678910') == '12345678910'\nassert solution('223401') == '223401'\nassert solution('1234') == '1234'\nassert solution('1234') == '1234'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('-1') == '-1'\nassert solution('0') == '0'\nassert solution('-1.0') == '-1'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"113\") == \"110\"\nassert solution(\"1000000000\") == \"1000000000\"\nassert solution(\"5432359\") == \"5432360\"\nassert solution(\"8\") == \"8\"\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\n\n\n\n-----\n\n\n-----\n\n
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5') == '0'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\nassert solution('5432359') == '5432360'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 271,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '10'\nassert solution('113') == '110'\nassert solution('1000000000') == '1000000000'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('helloworld') == '-1'\nassert solution('hastalavistababy') == '0'\nassert solution('hastalavistababy') == '0'\nassert solution('merrychristmas') == '-1'"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''helloworld\nehoolwlroz\n''') == 'h e\\nl o\\nd z'\nassert solution('''hastalavistababy\nhastalavistababy\n''') == 'h e\\nl o\\nd z'\nassert solution('''merrychristmas\nchristmasmerry\n''') == '0'\nassert solution('''greatcoder\ngreatcoder\n''') == '-1'\nassert solution('''childs\nchilds\n''') == '0'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('hello') == 'h e'\nassert solution('abcd') == '-1'\nassert solution('merrychristmas') == '0'\nassert solution('hastalavistababy') == 'h e l o d z'\nassert solution('hastalavistababy') == 'h e l o d z'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('helloworld') == 'h e l l o w o r d'\nassert solution('helloworld') == 'h e l l o w o r d'\nassert solution('merrychristmas') =='m r e c r i s t a m'\nassert solution('merrychristmas') =='m r e c r i s t a m'\nassert solution('hastalavistababy') == 'h a s t a l a v i s t b a y'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e a t a b a y b a y'\nassert solution('merrychristmas') =='m e r r i c h r s t a v i s t a b a y'\nassert solution('hastalavistababy') == 'h e a t a b a y b a y'\nassert solution('mewwst') =='m e w s t'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('helloworld') == 'h e l l o world'\nassert solution('hastalavistababy') == 'h e a t a b a y a t a v s t a b a y'\nassert solution('merrychristmas') =='m e r r y c h r s t a c r s t e m e r r y'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''helloworld\nehoolwlroz''') == 'h e\\nl o\\nd z'\nassert solution('''hastalavistababy\nhastalavistababy''') == 'h e\\nl o\\nd z'\nassert solution('''merrychristmas\nchristmasmerry''') == '0'\nassert solution('''abcdefghijklmnopqrstuvwxyz\nyzabcdefghijklmnopqrstuvwxyz\nopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nhjklmnopqrstuvwx\nyzabcdefghijklmnopqrstuvwxyz''') == '3'\nassert solution('''abcdefghijklmnopqrstuvwxyz\nyzabcdefghijklmnopqrstuvwxyz\nopqrstuvwxyz\nabcdefghijklmnopqrstuvwxyz\nhjklmnopqrstuvwx\nyzabcdefghijklmnopqrstuvwxyz''') == '-1'\n"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e l l o w o b a i y a b i y'\nassert solution('merrychristmas') =='m e r r y  c r h i s t a b y'\nassert solution('hastalavistababy') == 'h e l l o w o b a i y a b i y'\nassert solution('merrychristmas') =='m e r r y  c r h i s t a b y'"
    },
    {
        "number": 272,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('helloworld') == 'h e l l o w o r l d'\nassert solution('hastalavistababy') == 'h e l o w o r l a b a y'\nassert solution('hastalavistababy') == 'h e l o w o r l a b a y'\nassert solution('hastalavistababy') == 'h e l o w o r l a b a y'\nassert solution('hastalavistababy') == 'h e l o w o r l a b a y'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('bob and tom riddle') == 'bobtomr'\nassert solution('alice and bob') == 'bobalice'\nassert solution('alice and alice') == 'alicealice'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('i am the best') == 'amthebest'\nassert solution('the best the') == 'thebest'\nassert solution('the best are') == 'thebest'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\n\n\n\"\"\""
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('jerry jerry') == 'jerryj'\nassert solution('tom and jerry') == 'tomj'\nassert solution('jerry riddle') == 'jerryj'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('Riddle') == 'Riddle'\nassert solution('Harry Potter') == 'HarryPotter'\nassert solution('Marry') == 'Marry'\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('harry potter') == 'hap'\nassert solution('tom riddle') == 'tomr'\nassert solution('lucy lucy') == 'luc'\nassert solution('lucy lucy lucy lucy lucy lucy lucy lucy lucy lucy') == 'luc'\nassert solution('bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob bob"
    },
    {
        "number": 273,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"harry potter\") == \"hap\"\nassert solution(\"tom riddle\") == \"tomr\"\nassert solution(\"jerry lee\") == \"jerryle\"\nassert solution(\"mike\") == \"mike\"\nassert solution(\"bob\") == \"bob\"\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''[[]]''') == '+-    -++- -+'\nassert solution('''[[][]][]''') == '+-        -++- -+'\nassert solution('''[[][]][]''') == '+-        -++- -+'\nassert solution('''[[][]][]''') == '+-        -++- -+'\nassert solution('''[[[]]]''') == '+-        -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == '+'\nassert solution('11') == '+-++'\nassert solution('111') == '+-++-++'\nassert solution('1111') == '+-++-++-++'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('[[[[[]]]]]') == '+-        -++- -+\\n|   ||   |\\n+- -++- -+\\n'\nassert solution('[]]') == '+-        -++- -+\\n|   ||   |\\n+- -++- -+\\n'\nassert solution('[]') == '+-        -++- -+\\n|   ||   |\\n+- -++- -+\\n'\nassert solution('[[]][]') == '+-        -++- -+\\n||   ||   |\\n+- -++- -+\\n'\nassert solution('[[[]][]][]') == '+-        -++- -+\\n||   ||   |\\n+- -++- -+\\n'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''8\n[[][]][]''') == '''+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n'''\nassert solution('''6\n[[[]]]''') == '''+-     -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-        -++-\n'''\nassert solution('''6\n[[][]]''') == '''+-        -++- -+\n|+- -++- -+|\n||   ||   ||\n|+- -++- -+|\n+-        -++-\n'''\nassert solution('''2\n[]''') == '''+- -+\n|   |\n+- -+\n'''\nassert solution('''4\n[][]''') == '''+- -++- -+\n|   ||   |\n+- -++- -+\n'''\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8\\n[[][]][]\") == \"+-        -++- -+\"\nassert solution(\"6\\n[[[]]]\") == \"+-     -+\"\nassert solution(\"6\\n[[][]]\") == \"+-        -++- -+\"\nassert solution(\"2\\n[]\") == \"+- -+\"\nassert solution(\"4\\n[][]\") == \"+- -++- -+\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8\n[[][]][]\n\"\"\") == \"\"\"\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\"\"\"\nassert solution(\"\"\"\n6\n[[[]]]\n\"\"\") == \"\"\"\n+-     -+\n|+-   -+|\n||+- -+||\n|||   |||\n||+- -+||\n|+-   -+|\n+-     -+\n\"\"\"\nassert solution(\"\"\"\n6\n[[][]]\n\"\"\") == \"\"\"\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\"\"\"\nassert solution(\"\"\"\n8\n[[][]][]\n\"\"\") == \"\"\"\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\"\"\"\nassert solution(\"\"\"\n8\n[[][]][]\n\"\"\") == \"\"\"\n+-        -++- -+\n|+- -++- -+||   |\n||   ||   |||   |\n|+- -++- -+||   |\n+-        -++- -+\n\"\"\"\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('[[[[]]]]') == '+-     -+\\n|   ||   |\\n+- -++- -+\\n|   ||   |\\n+- -++- -+'\nassert solution('[[]]') == '+-     -+\\n|   ||   |\\n+- -++- -+'\nassert solution('[[[]]]') == '+-     -+\\n|   ||   |\\n+- -++- -+'\nassert solution('[[[]]') == '+-     -+\\n|   ||   |\\n+- -++- -+'\nassert solution('[][]') == '+-     -+\\n|   ||   |\\n+- -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('[[]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][]][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[[]]]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[[][]]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('[][]') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n[[][]]\\n') == '+-     -+\\n|   ||   |\\n+- -++- -+'\nassert solution('8\\n[[][]][]\\n') == '+-        -++- -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('2\\n[]\\n') == '+- -+\\n|   |\\n+- -+'\nassert solution('6\\n[[][]]\\n') == '+-     -+\\n|+- -++- -+||   |\\n||   ||   |||   |\\n|+- -++- -+||   |\\n+-        -++- -+'\nassert solution('2\\n[]\\n') == '+- -+\\n|   |\\n+- -+'\n"
    },
    {
        "number": 274,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n[[[]]]') == '+-\\n-++-\\n-++-'\nassert solution('6\\n[[[]]]') == '+-\\n-++-\\n+-\\n++-\\n-++-'\nassert solution('6\\n[[[]]]') == '+-\\n-++-\\n+-\\n++-\\n-++-'\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '1000\\n111'\n    ) == '<'\nassert solution(\n    '00100\\n11'\n    ) == '='\nassert solution(\n    '110\\n101'\n    ) == '>'\n\n'''\n\nfrom math import sqrt, ceil"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \">\", \"11\"\nassert solution(\"00100\") == \"<\", \"00100\"\nassert solution(\"110\") == \"=\", \"110\"\nassert solution(\"101\") == \">\", \"101\"\nassert solution(\"10\") == \"=\", \"10\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '>'\n\n\n\"\"\"\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '='\nassert solution('110\\n101') == '>'\n\n\n\n\"\"\""
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n111') == '>'\nassert solution('00100\\n11') == '<'\nassert solution('110\\n101') == '='\nassert solution('1000\\n111') == '>'\nassert solution('00100\\n11') == '<'\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '=\nassert solution('110\\n101') == '>'\nassert solution('110\\n101') == '>'\nassert solution('100\\n100') == '='\n\n\n\"\"\""
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1000\\n111\\n') == '<'\nassert solution('00100\\n11\\n') == '='\nassert solution('110\\n101\\n') == '>'"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('10011') == '='\nassert solution('10001') == '<'\nassert solution('10002') == '<'\nassert solution('11101') == '>'\nassert solution('11001') == '>'\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1110') == '>'\nassert solution('101') == '<'\nassert solution('101') == '='\nassert solution('1000') == '>'\nassert solution('1010') == '<'\n"
    },
    {
        "number": 275,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1000\\n111') == '<'\nassert solution('00100\\n11') == '=''\nassert solution('110\\n101') == '>'\n\nprint(solution(''))\nprint(solution('11\\n11'))\nprint(solution('111\\n111'))\nprint(solution('00101\\n1'))\nprint(solution('11111\\n11111'))\nprint(solution('01100\\n01'))\nprint(solution('10100\\n100'))\nprint(solution('10010\\n101'))\nprint(solution('10101\\n10'))\nprint(solution('10101\\n11'))\nprint(solution('10101\\n1'))\nprint(solution('10101\\n0'))\nprint(solution('10101\\n01'))\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input_text) == output_text\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1') == 'Time'\nassert solution('2') == 'Space'\nassert solution('3') == 'Time'\nassert solution('4') == 'Reality'\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple') == '2\\nSpace\\nTime'\nassert solution('2\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple') == 'Power\\nTime\\nSpace'\nassert solution('3\\nblue\\nred\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple') == 'Power\\nTime\\nSpace'\nassert solution('4\\nblue\\nred\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple') == 'Power\\nTime\\nSpace'\nassert solution('5\\nblue\\nred\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple\\nred\\nblue\\ngreen\\npurple') == 'Power\\nTime\\nSpace'"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\nred\\npurple\\nyellow\\norange') == '2\\nSpace\\nTime'\nassert solution('0\\n') == '6\\nTime\\nMind\\nSoul\\nPower\\nReality'"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3 2\") == \"0\"\nassert solution(\"3 3 2 1\") == \"1\"\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\nred\npurple\nyellow\norange\n\"\"\") == \"\"\"\n2\nSpace\nTime\n\"\"\"\nassert solution(\"\"\"\n0\n\"\"\") == \"\"\"\n6\nTime\nMind\nSoul\nPower\nReality\nSpace\n\"\"\"\nassert solution(\"\"\"\n2\nred\npurple\nblue\norange\n\"\"\") == \"\"\"\n6\nPower\n\"\"\"\nassert solution(\"\"\"\n0\n\"\"\") == \"\"\"\n6\nTime\nMind\nSoul\nPower\nReality\nSpace\n\"\"\"\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 276,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0') == '6'\nassert solution('4') == '2'\nassert solution('0') == '6'\nassert solution('2') == '2'\nassert solution('6') == '0'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == \"Final!\"\nassert solution(input(\"\")) == 2\nassert solution(input(\"\")) == \"Final!\"\nassert solution(input(\"\")) == 2\nassert solution(input(\"\")) == 2\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\nassert solution(\"5 2 1\") == \"2\"\nassert solution(\"9 4 6\") == \"Final!\"\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == 'Final!'\nassert solution('8 2 6') == '2'\nassert solution('8 7 5') == 'Final!'\nassert solution('5 5 5') == '1'\nassert solution('1 2 3') == '1'\n\"\"\"\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\nassert solution(\"4 1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('8 2 6') == 'Final!'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 1 2\") == \"1\"\nassert solution(\"8 2 6\") == \"Final!\"\nassert solution(\"8 7 5\") == \"2\"\n\nprint(\"All test cases passed successfully.\")\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\") == \"Final!\"\nassert solution(\"8 2 6\") == \"2\"\nassert solution(\"8 7 5\") == \"2\"\nassert solution(\"6 5 3\") == \"3\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('8 2 6') == '2'\nassert solution('7 7 5') == 'Final!'\nassert solution('8 7 5') == '2'\n"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''4 1 2\n'''\n) == 'Final!'\n\nassert solution(\n'''8 2 6\n'''\n) == '2'"
    },
    {
        "number": 277,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 1 2''') == 'Final!'\nassert solution('''8 2 6''') == '2'\nassert solution('''8 7 5''') == 'Final!'\nassert solution('''2 1 5''') == '2'\nassert solution('''3 3 1''') == 'Final!'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n') == '2'\nassert solution('2\\n1\\n') == '3'\nassert solution('3\\n1\\n') == '3'\nassert solution('4\\n1\\n') == '1'\nassert solution('3\\n0\\n') == '2'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4 3 2 1\\n0 1 1 1\\n\") == 2\nassert solution(\"3\\n2 3 1\\n0 0 0\\n\") == 1"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n4 3 2 1\n0 1 1 1\n''') == \"2\"\n\nassert solution(\n'''\n3\n2 3 1\n0 0 0\n''') == \"1\"\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('4\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('4\\n1 1 1 1\\n1 0 0 0\\n') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4 3 2 1') == '2'\nassert solution('3\\n2 3 1\\n0 0 0') == '1'\nassert solution('3\\n2 3 1\\n0 1 1') == '1'\nassert solution('3\\n2 3 1\\n1 0 0') == '1'\nassert solution('3\\n2 3 1\\n0 1 0') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n4 3 2 1''') == \"2\"\nassert solution('''3\n2 3 1\n0 0 0''') == \"1\"\nassert solution('''2\n2 3 1\n0 0 0''') == \"1\"\nassert solution('''10\n5 7 2 4 6 8 9 1 3''') == \"9\"\nassert solution('''2\n1 0 0\n0 1 0''') == \"1\"\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4\n4 3 2 1\n0 1 1 1\n''') == '2'\nassert solution('''3\n2 3 1\n0 0 0\n''') == '1'\n"
    },
    {
        "number": 278,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4\\n4 3 2 1\\n0 1 1 1\\n') == '2'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('3\\n2 3 1\\n0 0 0\\n') == '1'\nassert solution('6\\n2 3 5 1 6 4\\n0 0 0 0 0 0 0\\n') == '1'\nassert solution('6\\n2 3 5 1 6 4\\n0 0 0 0 0 0 0\\n') == '1'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 6\\n4 2\\n') == '26'\nassert solution('10 10\\n10 0\\n') == '100'\n\n-----"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 6') == '26'\nassert solution('10 10') == '100'\nassert solution('1 2') == '3'\nassert solution('10 0') == '100'\nassert solution('10 10') == '100'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 6') == 26\nassert solution('10 10') == 100\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"10 10\") == \"100\"\nassert solution(\"5 6\") == \"26\"\nassert solution(\"10 0\") == \"100\"\nassert solution(\"5 6 10\") == \"26\"\nassert solution(\"10 10\") == \"100\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"26\"\nassert solution(\"10 10\") == \"100\"\n\n\n\"\"\"\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 6\\n4 2\\n') == '26'\nassert solution('10 10\\n10 0\\n') == '100'\n\"\"\""
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 6\n4 2''') == '26'\nassert solution('''10 10\n10 0''') == '100'\nassert solution('''10 10\n0 0''') == '0'\nassert solution('''10 0\n0 0''') == '0'\nassert solution('''10 10\n1 1''') == '20'\n"
    },
    {
        "number": 279,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 6\\n4 2') == '26'\nassert solution('10 10\\n10 0') == '100'\n\n\"\"\"\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''3 2\n1 4 2\n10 4'''\n) == '10'\n\nassert solution(\n'''3 2\n1 4 2\n2 6'''\n) == '-1'\n\nassert solution(\n'''4 4\n1 2 1 3\n2 4 2 3\n3 4 3 1\n4 5 4 3'''\n) == '10'\n\nassert solution(\n'''3 2\n1 4 2\n2 6'''\n) == '-1'\n\nassert solution(\n'''3 2\n1 4 2\n2 6'''\n) == '10'"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 2') == '10'\nassert solution('3 2') == '-1'\nassert solution('1 1') == '0'\nassert solution('2 1') == '0'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2\\n4 2') == '10'\nassert solution('2 1\\n2 2') == '0'\nassert solution('2 3\\n1 2') == '3'\nassert solution('1 1\\n1 1') == '0'\nassert solution('3 2\\n1 4 2\\n10 4\\n2 6\\n') == '10'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 4 2\n10 4\n2 6\n\"\"\"\n) == '10'\n\nassert solution(\n\"\"\"\n3 2\n1 4 2\n10 4\n2 6\n\"\"\"\n) == '10'\n\nassert solution(\n\"\"\"\n4 1\n1 2 3 4\n\"\"\"\n) == '-1'\n\nassert solution(\n\"\"\"\n4 1\n1 2 3 4\n\"\"\"\n) == '-1'\n\nassert solution(\n\"\"\"\n4 1\n1 2 3 4\n\"\"\"\n) == '-1'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 4 2\\n1 3\\n2 3') == '10'\nassert solution('3 5\\n1 4 2\\n1 3\\n1 3') == '-1'\nassert solution('10 11\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3 4\\n1 2\\n3"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 4 2\\n10 4\") == \"10\"\nassert solution(\"3 2\\n1 4 2\\n10 4\\n2 6\\n\") == \"10\"\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == '-1'\nprint(solution(input()))\n'''"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"-1\"\nassert solution(\"3 2\") == \"10\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 4\\n2 6') == '10'\nassert solution('3 2\\n1 4 2\\n10 4\\n2 6') == '10'\nassert solution('2 3\\n2 1\\n1 1') == '1'\nassert solution('2 3\\n2 1\\n1 1\\n2 1') == '-1'\nassert solution('1 2\\n1 4\\n2 6') == '10'\n"
    },
    {
        "number": 280,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == '10'\nassert solution('1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('2 2 2') == '1'\nassert solution('2 2 1') == '1'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n\"\"\"\nfrom math import factorial\n\na, b = map(int, stdin.split())\nprint(str(factorial(a) // (factorial(b) * factorial(a - b))))\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\nassert solution('9999 9848') == '8'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 1') == '2'\nassert solution('4 4') == '2'\nassert solution('2 10') == '2'\nassert solution('7 22') == '2'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\nassert solution('13 14') == '0'\nassert solution('7 3') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0 2') == '0'\nassert solution('1 10') == '1'\nassert solution('10 10') == '2'\nassert solution('1000 1000') == '0'\nassert solution('100 100') == '0'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '0'\nassert solution('3 5') == '0'\nassert solution('10 10') == '0'\nassert solution('100 100') == '2'\n"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 4') == '2'\nassert solution('0 10') == '0'\nassert solution('107 109') == '2'\n\"\"\"\nfrom math import factorial\nfrom functools import reduce"
    },
    {
        "number": 281,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 2') == '1'\nassert solution('100 100') == '2'\nassert solution('101 10') == '2'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('4 2\\n1001\\n') == '-1'\nassert solution('12 3\\n101111100101\\n') == '4'\n\n\n\n\n\n'''"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n\"\"\"\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8 4\\n10010101') == '2'\nassert solution('4 2\\n1001') == '-1'\nassert solution('12 3\\n101111100101') == '4'\nassert solution('8 4\\n11100101') == '3'\nassert solution('13 5\\n101010111010101') == '4'\n\n\n\"\"\""
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('8 4\\n10010101') == '2'\nassert solution('4 2\\n1001') == '-1'\nassert solution('12 3\\n101111100101') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('4 2\\n1001\\n') == '-1'\nassert solution('12 3\\n101111100101\\n') == '4'\nassert solution('12 4\\n101111100101\\n') == '-1'\nassert solution('12 2\\n10111\\n') == '-1'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8 4\\n10010101\\n') == '2'\nassert solution('12 3\\n101111100101\\n') == '4'"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4\\n10010101\\n') == '2\\n'\nassert solution('4 2\\n1001\\n') == '-1\\n'\nassert solution('12 3\\n101111100101\\n') == '4\\n'\nassert solution('12 3\\n11100101\\n') == '-1\\n'\nassert solution('2 6\\n0101\\n') == '1\\n'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 2') == '2'\nassert solution('8 2') == '-1'\nassert solution('100 101') == '2'\nassert solution('1001') == '-1'\nassert solution('11100101') == '4'\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"8 4\\n10010101\\n\") == \"2\"\nassert solution(\"4 2\\n1001\\n\") == \"-1\"\nassert solution(\"12 3\\n101111100101\\n\") == \"4\"\nassert solution(\"3 3\\n1011011\\n\") == \"-1\"\nassert solution(\"8 7\\n011111000001\\n\") == \"5\"\n"
    },
    {
        "number": 282,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n6\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n7\n\"\"\") == \"2\"\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\nassert solution('''0''') == '1'\nassert solution('''1''') == '2'\nassert solution('''2''') == '3'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3''') == '1'\nassert solution('''4''') == '2'\nassert solution('''5''') == '2'\nassert solution('''6''') == '1'\nassert solution('''7''') == '4'\n"
    },
    {
        "number": 283,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'\nassert solution('6') == '7'\nassert solution('7') == '11'\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input_1.txt\").read()) == \"YES\"\nassert solution(open(\"test_input_2.txt\").read()) == \"NO\"\nprint(solution(open(\"input_1.txt\").read()))\nprint(solution(open(\"input_2.txt\").read()))\n\"\"\"\n\nfrom __future__ import annotations\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n\"\"\"\n\nfrom itertools import combinations\nfrom collections import defaultdict\nfrom functools import reduce"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n\n\"\"\""
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1359257) == \"YES\"\nassert solution(17851817) == \"NO\"\nassert solution(\"152764\") == \"NO\"\nassert solution(\"73400\") == \"YES\"\nassert solution(\"53950\") == \"YES\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'NO'\nassert solution('') == 'NO'\nassert solution('asd') == 'NO'\nassert solution('1 234 567') == 'YES'\nassert solution('123 456') == 'YES'\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1359257') == 'YES'\nassert solution('17851817') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 284,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1359257\") == \"YES\"\nassert solution(\"17851817\") == \"NO\"\n\n\"\"\"\n\nimport sys\n\n\"\"\"\nExample input\n\n1359257\n\nExample output\n\nYES\n\"\"\"\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n\nassert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'YES'\n\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'YES'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n1 3\\n1 0\\n0 2') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n0 3') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n1 3\\n1 0\\n0 3') == 'YES'\nassert solution('1\\n1\\n1\\n1') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n1 3\\n1 0\\n0 2') == 'YES'\nassert solution('4\\n1 2\\n1 2\\n1 0\\n0 1') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n0 3') == 'YES'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n-1 3') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n0 3\\n0 1') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'NO'\nassert solution('''3\n1 3\n1 0\n0 2\n''') == 'YES'\nassert solution('''3\n1 3\n1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution(\n'''\n2\n1 3\n1 0\n0 2\n''') == 'YES'\nassert solution(\n'''\n2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution(\n'''\n2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution(\n'''\n2\n-1 3\n-1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") is None\nassert solution(\"4\\n1 2\\n1 2\\n1 0\\n0 1\\n0 2\\n\") == \"NO\"\nassert solution(\"2\\n1 3\\n1 0\\n0 2\\n\") == \"YES\"\nassert solution(\"3\\n1 3\\n1 0\\n0 2\\n\") == \"YES\"\nassert solution(\"3\\n1 3\\n1 0\\n0 3\\n\") == \"NO\"\n\n\n-----Best Practice-----"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'NO'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'NO'\nassert solution('1 2\\n1 0\\n0 1') == 'NO'\nassert solution('1 3\\n1 0\\n0 2') == 'YES'\nassert solution('1 3\\n1 0\\n0 3') == 'NO'\nassert solution('2\\n1 3\\n1 0\\n0 2') == 'YES'\n"
    },
    {
        "number": 285,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n1 2\n1 0\n0 1\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n-1 3\n''') == 'YES'\nassert solution('''2\n1 3\n1 0\n0 2\n''') == 'NO'\nassert solution('''2\n1 3\n1 0\n0 3\n''') == 'YES'\nassert solution('''3\n1 3\n1 0\n0 3\n''') == 'YES'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2\\n') == '0'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '3'\nassert solution('6\\n') == '4'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n7\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n8\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n9\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n10\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n11\n\"\"\") == \"4\"\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''7''') == '4'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\nassert solution('''10''') == '6'\nassert solution('''1234567890''') == '3'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''7''') == '4'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\n\nassert solution('''1''') == '1'\nassert solution('''2''') == '1'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'Nothing to be solved'\nassert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('9') == 5\nassert solution('8') == 4\nassert solution('7') == 1\nassert solution('1') == 0\nassert solution('2') == 0\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''7''') == '4'\nassert solution('''8''') == '5'\nassert solution('''9''') == '5'\nassert solution('''10''') == '5'\nassert solution('''11''') == '4'\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 286,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('7') == '4'\nassert solution('8') == '5'\nassert solution('9') == '5'\nassert solution('10') == '5'\nassert solution('11') == '5'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5 5\n''') == '1 3'\nassert solution('''3 3\n''') == '1 3'\nassert solution('''4 4\n''') == '1 3'\nassert solution('''4 5\n''') == '1 3'\nassert solution('''7 7\n''') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('6 3') == '1 3'"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('7 4') == '1 3'\nassert solution('2 1') == '1 1'\nassert solution('8 2') == '1 3'\nassert solution('3 2') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('9 7') == '1 7'\nassert solution('1 7') == '1 7'\nassert solution('1 7') == '1 7'\nassert solution('1 7') == '1 7'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n0 0\\n0 0\\n0 0\") == \"0 3\"\nassert solution(\"2 2\\n0 0\\n0 0\\n0 0\") == \"1 3\"\nassert solution(\"5 2\\n0 0\\n0 0\\n0 0\\n0 0\") == \"2 4\"\nassert solution(\"4 1\\n0 0\\n0 0\\n0 0\\n0 0\") == \"2 4\"\nassert solution(\"2 2\\n0 0\\n0 0\\n0 0\") == \"1 3\"\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('6 3') == '1 3'\nassert solution('5 3') == '1 3'\nassert solution('5 0') == '-1 -1'\nassert solution('10 10') == '2 9'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('6 3') == '1 3'\nassert solution('3 10') == '1 10'\nassert solution('6 9') == '1 9'\nassert solution('5 3') == '1 3'\nassert solution('10 3') == '1 3'\n"
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"1 3\""
    },
    {
        "number": 287,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"1 3\"\nassert solution(\"6 3\") == \"1 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"5 2\") == \"5 2\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n\nassert solution('3') == '2'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('10') == '4'\n\n\"\"\""
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\"\"\") == \"1\"\nassert solution(\"\"\"3\"\"\") == \"2\"\nassert solution(\"\"\"4\"\"\") == \"2\"\nassert solution(\"\"\"5\"\"\") == \"3\"\nassert solution(\"\"\"6\"\"\") == \"4\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '2'\nassert solution('10\\n') == '4'\nassert solution('10\\n') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''10''') == '4'\nassert solution('''100''') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2''') == '1'\nassert solution('''3''') == '2'\nassert solution('''4''') == '2'\nassert solution('''10''') == '4'\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"999\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 288,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"4\"\nassert solution(\"10\") == \"4\"\nassert solution(\"100\") == \"4\"\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVKV\") == 1\n\n\n>>> ================================ RESTART ================================\n>>> \nI am not done yet...\nTraceback (most recent call last):\n  File \"D:/GitHub/Algorithms_and_Complexity/Quiz/Substrings/Substring_The_Strings_Are_Almost_Equal.py\", line 28, in <module>\n    assert solution(\"KV\") == 1\nAssertionError\n\nI am not done yet...\nTraceback (most recent call last):\n  File \"D:/GitHub/Algorithms_and_Complexity/Quiz/Substrings/Substring_The_Strings_Are_Almost_Equal.py\", line 32, in <module>\n    "
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"VK\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"V\") == \"0\"\nassert solution(\"V\") == \"0\"\nassert solution(\"V\") == \"0\"\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('VK') == '1'\nassert solution('V') == '0'\nassert solution('VV') == '1'\nassert solution('VKKKKKKKKKVVVVVVVVK') == '3'\nassert solution('KVK') == '1'\n\n\n-----Alternative solutions:----"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"VK\") == \"1\"\nassert solution(\"VV\") == \"1\"\nassert solution(\"V\") == \"0\"\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == \"3\"\nassert solution(\"KVK\") == \"1\""
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(VK) == 1\nassert solution(VV) == 1\nassert solution(V) == 0\nassert solution(VKKKKKKKKKVVVVVVVVK) == 3\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"VV\") == 1\nassert solution(\"VK\") == 1\nassert solution(\"V\") == 0\nassert solution(\"KV\") == 1\nassert solution(\"K\") == 0\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"VK\") == 1\nassert solution(\"VV\") == 1\nassert solution(\"V\") == 0\nassert solution(\"VKKKKKKKKKVVVVVVVVK\") == 3\nassert solution(\"KVK\") == 1\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(VK) == 1\nassert solution(V) == 0\nassert solution(VKKKKKKKKKVVVVVVVVK) == 3\nassert solution(KVK) == 1\nassert solution(K) == 0\n"
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('VK') == 1\nassert solution('VV') == 1\nassert solution('V') == 0\nassert solution('VKKKKKKKKKVVVVVVVVK') == 3\nassert solution('KVK') == 1\n\n\n\n\"\"\""
    },
    {
        "number": 289,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('VK') == 1\nassert solution('VV') == 1\nassert solution('V') == 0\nassert solution('VKKKKKKKKKVVVVVVVVK') == 3\nassert solution('KVKV') == 1\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''1''') == 2\nassert solution('''2''') == 3\nassert solution('''4''') == 4\nassert solution('''100000''') == 2147483647\nassert solution('''10000000''') == 2147483647\n\nprint(solution(input()))\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == 2\nassert solution('''2''') == 3\nassert solution('''4''') == 4\nassert solution('''10000''') == 10\nassert solution('''100000''') == 19\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == 3\nassert solution('''1''') == 1\nassert solution('''2''') == 2\nassert solution('''5''') == 3\nassert solution('''10''') == 5"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') is None\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n1') == ''\nassert solution('2\\n') == ''\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '3'\nassert solution('4\\n') == '4'\nassert solution('10\\n') == '6'\nassert solution('20\\n') == '7'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n'''\n) == \"2\"\n\nassert solution(\n'''\n2\n'''\n) == \"3\"\n\nassert solution(\n'''\n4\n'''\n) == \"4\"\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\n''') == '2'\nassert solution(\n'''\n2\n''') == '3'\nassert solution(\n'''\n4\n''') == '4'\n"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 2\nassert solution('2') == 3\nassert solution('4') == 4"
    },
    {
        "number": 290,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 3\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('5 9') == '2'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 7\") == \"2\"\nassert solution(\"4 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"9 8\") == \"3\"\nassert solution(\"5 9\") == \"3\"\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input('')) == ''\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(4, 7) == '2'\nassert solution(4, 9) == '3'\nassert solution(1, 1) == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('-1') == '-1'\nassert solution('1') == '1'\nassert solution('-2') == '-2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('15 20') == '2'\nassert solution('9 10') == '3'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 291,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 7') == '2'\nassert solution('4 9') == '3'\nassert solution('1 1') == '1'\nassert solution('9 8') == '2'\nassert solution('6 7') == '1'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\n\n'''\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == 10\nassert solution(\"2 2\") == 2\nassert solution(\"3 6\") == 2046\nassert solution(\"3 10\") == 312\nassert solution(\"3 10\") == 312\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nassert solution(\"7 9\") == \"5\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\nassert solution('7 0') == '0'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2046\"\n\"\"\"\n\nfrom math import ceil, log2"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == None\nassert solution('1 2') == None\nassert solution('2 3') == None\nassert solution('3 6') == None\nassert solution('10 1024') == None\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '5'\nassert solution('3 6') == '10'\nassert solution('10 1024') == '2046'\n"
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"2 3\\n\") == \"5\\n\"\nassert solution(\"3 6\\n\") == \"10\\n\"\nassert solution(\"10 1024\\n\") == \"2046\\n\"\n\n\"\"\""
    },
    {
        "number": 292,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 6\") == \"10\"\nassert solution(\"10 1024\") == \"2046\"\nprint(\"All set!\")\n\n\n\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"26\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"8\") == \"4\"\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''26''') == '6'\nassert solution('''8''') == '4'\nassert solution('''8''') == '4'\nassert solution('''2''') == '2'\nassert solution('''26''') == '6'\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == '1 2\\n2 1'\nassert solution('26') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'\nassert solution('8') == '4\\n1 8\\n2 3\\n3 2\\n8 1'\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9') == '6'\nassert solution('26') == '6'\nassert solution('2') == '2'\nassert solution('8') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''26''') == '6'\nassert solution('''2''') == '2'\nassert solution('''8''') == '4'\nassert solution('''2''') == '2'\nassert solution('''5''') == '3'\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2\\n') == '1 2\\n2 1'\nassert solution('4\\n') == '1 4\\n2 3\\n3 2\\n4 1'\nassert solution('10\\n') == '4\\n1 10\\n2 9\\n3 5\\n5 3\\n9 2\\n10 1'\nassert solution('26\\n') == '6\\n1 26\\n2 9\\n3 5\\n5 3\\n9 2\\n26 1'"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('26') == '6'\nassert solution('2') == '2'\nassert solution('8') == '4'\nassert solution('2357') == '2'\n\n\n\n'''\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('26') == '6'\nassert solution('2') == '2'\nassert solution('8') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 293,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '3'\nassert solution('26') == '6'\nassert solution('8') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n31 31 30 31') == 'YES'\nassert solution('1\\n28 31 30 31') == 'NO'\nassert solution('1\\n31 28 30 31') == 'NO'\nassert solution('1\\n31 31 28 30 31') == 'YES'\nassert solution('1\\n31 31 31 30 31') == 'YES'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2\\n30 30\") == \"No\"\nassert solution(\"4\\n31 31 30 31\") == \"Yes\"\nassert solution(\"2\\n30 30\") == \"No\"\nassert solution(\"3\\n31 28 30\") == \"Yes\"\nassert solution(\"3\\n31 31 28\") == \"No\"\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"NO\"\nassert solution(\"1\\n31\") == \"NO\"\nassert solution(\"1\\n31 31 30 31\") == \"YES\"\nassert solution(\"1\\n31 31 28 30 30\") == \"NO\"\nassert solution(\"1\\n31 31 28 30 30 31\") == \"YES\"\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n5\\n7') == 'YES\\nNO\\nNO\\nNO\\n'\nassert solution('2\\n8\\n6\\n4') == 'NO\\nNO\\nYES\\nYES\\n'\nassert solution('2\\n8\\n6\\n4\\n1') == 'NO\\nNO\\nYES\\nYES\\n'\nassert solution('2\\n8\\n6\\n4\\n1\\n0') == 'NO\\nNO\\nYES\\nYES\\n'\nassert solution('2\\n8\\n6\\n4\\n1\\n0\\n3') == 'NO\\nNO\\nYES\\nYES\\n'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n31 31 30 31''') == 'YES'\nassert solution('''2\n30 30''') == 'NO'\nassert solution('''3\n31 28 30''') == 'YES'\nassert solution('''5\n29 31 30 31 30''') == 'YES'\nassert solution('''5\n31 31 28 30 30''') == 'NO'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\\n31 31 30 31\") == \"YES\"\nassert solution(\"2\\n30 30\") == \"NO\"\nassert solution(\"5\\n31 30 31 30\") == \"YES\"\nassert solution(\"3\\n31 28 30\") == \"NO\"\nassert solution(\"3\\n31 31 28\") == \"YES\"\n\n\n\"\"\"\nfrom collections import Counter\nfrom functools import reduce\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('10\\n29 31 30 31\\n') == 'No'\nassert solution('1\\n31 31 30 31\\n') == 'Yes'\nassert solution('1\\n29 31 30 31\\n') == 'Yes'\nassert solution('1\\n29 31 30 31\\n') == 'No'\nassert solution('1\\n31 31 30 31\\n') == 'No'\n"
    },
    {
        "number": 294,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2''') == \"NO\"\nassert solution('''6''') == \"YES\"\nassert solution('''2\n2\n2\n2\n2\n2''') == \"NO\"\nassert solution('''6\n2\n2\n2\n2\n2''') == \"YES\"\nassert solution('''4\n1\n1\n1\n1''') == \"YES\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('1000000000000000000000000000') == 'YES'\nassert solution('10000000000000000000000000') == 'NO'\nassert solution('1000000000000000000000000001') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2') == \"NO\"\nassert solution('6') == \"YES\"\nassert solution('1 2') == \"NO\"\nassert solution('6 2') == \"YES\"\nassert solution('1 2 3') == \"NO\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''\n2\n'''\n) == 'YES'\n\nassert solution(\n'''\n6\n'''\n) == 'YES'\n\nassert solution(\n'''\n4\n'''\n) == 'NO'\n\nassert solution(\n'''\n5\n'''\n) == 'NO'\n\nassert solution(\n'''\n14\n'''\n) == 'NO'"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2') == 'NO'\nassert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('6') == 'YES'\n\nassert solution('12') == 'NO'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('1') == 'NO'\nassert solution('0') == 'NO'\nassert solution('100000000000') == 'YES'\n"
    },
    {
        "number": 295,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2') == 'NO'\nassert solution('6') == 'YES'\nassert solution('2\\n1 2\\n1 3\\n') == 'YES\\n2\\n'\nassert solution('2\\n1 2\\n1 3\\n4 1\\n') == 'YES\\n2\\n'\nassert solution('1\\n1') == 'NO'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2\n''') == '-1'\nassert solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1\\n2 1\\n') == '0'\nassert solution('1 1\\n2 1\\n') == '0'\nassert solution('3 3\\n3 3 3\\n3 3 3') == '6'\nassert solution('3 3\\n2 2 2\\n3 3 3') == '6'\nassert solution('3 3\\n2 3 2\\n3 3 3') == '6'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2\n''') == '-1'\nassert solution('''3\n6 2\n3 3 2 1\n''') == '6'\nassert solution('''4\n6 2\n3 3 2 1\n''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''10\n10 100\n
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2\n''') == '-1'\nassert solution('''3\n2 3\n3 3 3\n''') == '-1'\nassert solution('''3\n3 3\n2 2 2\n3 3\n''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1\n''') == '2'\nassert solution('''3\n3 3\n2 2 2\n''') == '-1'\nassert solution('''4\n2 3\n1 3 1\n''') == '2'\nassert solution('''4\n1 3\n2 3 1\n''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5 7\n3 3 4 1''') == '3'\nassert solution('''3\n2 3\n1 3 1''') == '2'\nassert solution('''3\n3 3\n2 2 2''') == '-1'\nassert solution('''2\n1 3\n2 3''') == '-1'\nassert solution('''2\n2 3\n1 1''') == '-1'\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 2 2 2 2 3 3 3 3 4 4 4 5\") == \"1\"\nassert solution(\"3 2 3 3 2 4 3\") == \"4\"\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"4\n5 7\n3 3 4 1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"3\n2 3\n1 3 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"3\n3 3\n2 2 2\n\"\"\") == \"-\"\nassert solution(\n\"\"\"3\n2 3\n1 2 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"3\n3 3\n3 3 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 296,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3\\n1 3 1\\n\") == 3\nassert solution(\"3\\n3 3\\n2 2 2\\n\") == -1\nassert solution(\"3\\n3 3\\n2 2 1\\n\") == 2\nassert solution(\"3\\n1 1 1\\n\") == 0\nassert solution(\"4\\n1 1 1 1\\n\") == 0\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3 3') == \"YES\"\nassert solution('4 4 7') == \"NO\""
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 4 7\") == \"NO\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1\\n'\nassert solution('4 4 7') == 'NO\\n'\nassert solution('4 7 5\\n2 1 3\\n4 5 4\\n2 5 2\\n3 2 4\\n1 1 4\\n4 2 2\\n2 4 1\\n1 4 4') == 'YES\\n4 1\\n2 1\\n1 2\\n2 2\\n1 4\\n4 1\\n2 2\\n1 4\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3 3') == 'YES'\nassert solution('4 4 7') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 3 3\") == \"YES\\n1 0\\n2 3\\n4 1\"\nassert solution(\"4 4 7\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n1 0\\n2 3\\n4 1\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == 'YES'\nassert solution('4 4 7') == 'NO'\nassert solution('1 0') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('5 2 3') == 'YES'\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 3 3\") == \"YES\"\nassert solution(\"4 4 7\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 297,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3 3') == 'YES\\n1 0\\n2 3\\n4 1'\nassert solution('4 4 7') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\nassert solution('10 9') == 'YES'\nassert solution('100 100') == 'YES'\nassert solution('100 9') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'\nassert solution('10 9') == 'YES'\nassert solution('10 1') == 'YES'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"10 7\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\nassert solution(\"10 1\") == \"YES\"\nassert solution(\"10 5\") == \"NO\"\nassert solution(\"10 2\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''10 4''') == 'NO'\nassert solution('''1 1''') == 'YES'\nassert solution('''10 9''') == 'YES'\nassert solution('''10 5''') == 'NO'\nassert solution('''7 3''') == 'NO'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1\\n') == 'YES'\nassert solution('10 4\\n') == 'NO'\nassert solution('10000000 1\\n') == 'YES'\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('10 4') == 'NO'"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"1 1\"\"\") == \"YES\"\nassert solution(\n\"\"\"10 4\"\"\") == \"NO\"\nassert solution(\n\"\"\"6 2\"\"\") == \"NO\"\nassert solution(\n\"\"\"10 1\"\"\") == \"YES\"\nassert solution(\n\"\"\"7 2\"\"\") == \"YES\"\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"NO\"\n'''\n"
    },
    {
        "number": 298,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n2 8''') == 'biceps'\nassert solution('''3\n5 1 10''') == 'back'\nassert solution('''7\n3 3 2 7 9 6 8''') == 'chest'\nassert solution('''8\n5 1 10\n3 5 4 3 7 1 3''') == 'biceps'\nassert solution('''5\n4 5 1 3 3 9 2''') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n2 8') == 'back'\nassert solution('5\\n5 1 10') == 'chest'\nassert solution('7\\n3 3 2 7 9 6 8') == 'biceps'\nassert solution('2\\n1 4') == 'chest'\n\n\n\"\"\"\n\nfrom sys import stdin\n\nn = int(stdin.readline().strip())\nl = list(map(int, stdin.readline().strip().split()))\na = []"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2\n2 8\n''') == 'biceps'\n\nassert solution('''3\n5 1 10\n''') == 'back'\n\nassert solution('''7\n3 3 2 7 9 6 8\n''') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n2 8''') == 'biceps'\nassert solution('''3\n5 1 10''') == 'back'\nassert solution('''7\n3 3 2 7 9 6 8''') == 'chest'\n'''\n\n\"\"\"\nimport sys\nsys.setrecursionlimit(1000000)\n\nclass Node:\n    def __init__(self, data, max_childs, next_node):\n        self.data = data\n        self.max_childs = max_childs\n        self.next_node = next_node"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"chest\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"biceps\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"back\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"back\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2 8\\n') == 'biceps'\nassert solution('3\\n5 1 10\\n') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8\\n') == 'chest'\n\n\n\"\"\"\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3\\n3 3 2\\n') == 'biceps'\nassert solution('7\\n3 3 2 7 9 6 8\\n') == 'chest'\nassert solution('2\\n8 1\\n') == 'biceps'\nassert solution('2\\n8 1 10\\n') == 'back'\nassert solution('2\\n9 1 10\\n') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2 8') == 'biceps'\nassert solution('3\\n5 1 10') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\nassert solution('5\\n1 5 5 5 5') == 'biceps'\nassert solution('7\\n3 3 2 7 9 6 8') == 'chest'\n"
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2\\n2 8\\n') == 'biceps'\nassert solution('3\\n5 1 10\\n') == 'back'\nassert solution('7\\n3 3 2 7 9 6 8\\n') == 'chest'\n\"\"\""
    },
    {
        "number": 299,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == 'chest'\nassert solution('2\\n1 2') == 'chest'\nassert solution('3\\n3 1 2') == 'biceps'\nassert solution('4\\n3 2 1 2') == 'biceps'\nassert solution('5\\n4 3 1 2 3') == 'back'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 4 4\\n4 4 4\\n') == '2'\nassert solution('4 4 4\\n5 4 5 5\\n') == '0'\nassert solution('4 4 4\\n5 3 3 5\\n') == '1'\nassert solution('4 4 4\\n5 3 3 5\\n') == '0'\n\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4\n4 4 4''') == '2'\nassert solution('''5\n5 4 5 5''') == '0'\nassert solution('''10\n5 4 5 5 4 5 5 4 5''') == '1'\nassert solution('''3\n4 4 4''') == '2'\nassert solution('''4\n5 4 5 5''') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4\\n4 4 4') == '2'\nassert solution('3\\n4 4 4') == '0'\nassert solution('4\\n5 4 5 5') == '1'\nassert solution('4\\n5 3 3 5') == '1'\nassert solution('4\\n5 4 4 4') == '0'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4\n4 4 4''') == '2'\nassert solution('''4\n5 4 5 5''') == '0'\nassert solution('''4\n5 3 3 5''') == '1'\nassert solution('''4\n5 3 3 5''') == '1'\nassert solution('''4\n5 3 3 5''') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4\\n4 4 4') == '0'\nassert solution('4\\n5 4 5 5') == '1'\nassert solution('4\\n5 3 3 5') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4\\n4 4 4\\n') == '0'\nassert solution('4\\n5 4 5 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '0'\nassert solution('5\\n5 3 3 5 5\\n') == '1'\nassert solution('4\\n5 3 3 5\\n') == '1'\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n4 4 4') == '2'\nassert solution('4\\n5 4 5 5') == '0'\nassert solution('4\\n5 3 3 5') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 300,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n') == '2\\n3 1'\nassert solution('1 3\\n') == '3\\n1 1 1'\nassert solution('8 5\\n') == '-1'\nassert solution('0 0\\n') == '0'\nassert solution('0 0\\n') == '0'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 4''') == '''2\n3 1'''\nassert solution('''1 3''') == '''3\n1 1 1'''\nassert solution('''8 5''') == '''-1'''\nassert solution('''0 0''') == '''0'''\nassert solution('''0 0''') == '''0'''\n\n'''"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 4''') == '2\\n3 1'\nassert solution('''1 3''') == '3\\n1 1 1'\nassert solution('''8 5''') == '-1'\nassert solution('''0 0''') == '0'\nassert solution('''7 8''') == '3\\n1 1 1'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4') == '2'\nassert solution('1 3') == '3'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3 1'\nassert solution('2 4') == '-1'\nassert solution('0 0') == '0'\nassert solution('8 5') == '3 1 1'\nassert solution('8 5') == '-1'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 4\\n2 4\\n') == '-1'\nassert solution('1 3\\n1 3\\n') == '3'\nassert solution('8 5\\n8 5\\n') == '3'\nassert solution('0 0\\n0 0\\n') == '0'\nassert solution('0 1\\n0 1\\n') == '0'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '-1'\nassert solution('0 2') == '-1'\nassert solution('1 1 1') == '2'\nassert solution('5 5') == '2'\nassert solution('7 5') == '3'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4') == '2'\nassert solution('8 5') == '-1'\nassert solution('0 0') == '0'\nassert solution('0 3') == '3'\n"
    },
    {
        "number": 301,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1\\n1 2'\nassert solution('2 4') == '2\\n1 1'\nassert solution('0 0') == '0'\nassert solution('8 5') == '-1'\n\n\n-----\n\n## Challenge\n\n\"\"\"\n\nfrom math import floor"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(121) == '6'\nassert solution(1) == '1'\nassert solution(2) == '1'\nassert solution(3) == '1'\nassert solution(4) == '1'\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"121\") == \"6\"\nassert solution(\"123\") == \"3\"\nassert solution(\"1234\") == \"4\"\nassert solution(\"123450\") == \"4\"\nassert solution(\"12345\") == \"3\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(121) == '6'\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(121) == \"6\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(121) == 6\nInput\n1203\n\nOutput\n8\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(121) == \"6\"\nassert solution(120) == \"5\"\nassert solution(0) == \"1\"\nassert solution(99) == \"2\"\nassert solution(999999999) == \"32\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('121') == \"6\"\nassert solution('9') == \"0\"\nassert solution('231') == \"4\"\nassert solution('0') == \"0\"\nassert solution('1') == \"0\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(121) == 6\nassert solution(6) == 1\nassert solution(123) == 4\nassert solution(7) == 3\nassert solution(52) == 1\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(121) == \"6\"\nassert solution(10) == \"2\"\nassert solution(8) == \"2\"\nassert solution(111) == \"3\"\nassert solution(111) == \"3\"\n"
    },
    {
        "number": 302,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('121') == '6'\nassert solution('2391') == '8'\nassert solution('1000000000') == '11'\nassert solution('111') == '1'\nassert solution('0001') == '1'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\nassert solution(\"0 0 0 6\") == \"YES\"\nassert solution(\"1 1 3 6\") == \"NO\"\nassert solution(\"0 0 0 6\") == \"YES\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 6\\n2 3\") == \"YES\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\nassert solution(\"1 1 3 6\\n1 5\\n
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''0 0 0 6\n2 3''') == 'YES'\nassert solution('''1 1 3 6\n1 5''') == 'NO'\nassert solution('''0 0 0 5\n2 3\n''') == 'NO'\nassert solution('''1 1 3 6\n1 1\n''') == 'YES'\nassert solution('''1 1 3 7\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'NO'\nassert solution('1 5') == 'YES'\nassert solution('1 1 3 6') == 'NO'\nassert solution('1 1 1 6') == 'YES'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.strip()\n\"\"\"\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 6\\n2 3\") == \"YES\"\nassert solution(\"1 1 3 6\\n1 5\") == \"NO\"\n\n\n\n-----\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 0 6') == 'YES'\nassert solution('1 1 3 6') == 'YES'\nassert solution('1 5') == 'NO'\nassert solution('0 1 3 6') == 'YES'\nassert solution('-1 1 3 6') == 'NO'\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''0 0 0 6\n2 3''') == 'YES'\nassert solution('''1 1 3 6\n1 5''') == 'NO'\n'''\n"
    },
    {
        "number": 303,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '97'\n) == '2'\n\nassert solution(\n    '2028'\n) == '13'\n\nassert solution(\n    '99'\n) == '1'\n\nassert solution(\n    '999'\n) == '6'\n\nassert solution(\n    '22'\n) == '1'"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"97\") == \"2\"\nassert solution(\"2028\") == \"13\"\n\nprint(\"Passes\")\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\nassert solution('0') == '0'\nassert solution('42') == '1'\nassert solution('4221') == '4'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('97') == '2'\nassert solution('2028') == '13'\nassert solution('987654321') == '1'\nassert solution('1029') == '0'\nassert solution('828') == '0'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('97') == '97'\nassert solution('2028') == '13'\n\n\n\"\"\"\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\n\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''97''') == '2'\nassert solution('''2028''') == '13'\n\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''97''') == '2'\nassert solution('''2028''') == '13'\nassert solution('''2028''') == '13'\nassert solution('''2820''') == '13'\nassert solution('''2820''') == '13'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '97'\n) == '2'\n\nassert solution(\n    '2028'\n) == '13'\n\nassert solution(\n    '79'\n) == '2'\n\nassert solution(\n    '2028'\n) == '13'\n\nassert solution(\n    '9'\n) == '0'\n"
    },
    {
        "number": 304,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('97') == '1'\nassert solution('2028') == '13'"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '102'\n\n\"\"\""
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n5\n6\n3\n1\n2\n\"\"\") == \"6\"\nassert solution(\"\"\"12\n11\n13\n20\n4\n6\n\"\"\") == \"102\"\nassert solution(\"\"\"17\n14\n5\n21\n15\n17\n\"\"\") == \"325\"\nassert solution(\"\"\"12\n11\n13\n20\n4\n6\n\"\"\") == \"102\"\nassert solution(\"\"\"12\n11\n13\n20\n4\n6\n\"\"\") == \"102\"\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''\n4\n5\n6\n3\n1\n2\n''') == '6'\nassert solution(\n'''\n12\n11\n13\n20\n4\n6\n''') == '102'\nassert solution(\n'''\n17\n14\n5\n21\n15\n17\n''') == '325'\nassert solution(\n'''\n1\n10\n1\n2\n1\n1\n''') == '10'\nassert solution(\n'''\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2\\n\\n4\\n6\\n') == '6'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n\\n17\\n14\\n5\\n21\\n15\\n17\\n') == '325'\nassert solution('17\\n14\\n5\\n21\\n15\\n17\\n\\n4\\n6\\n') == '102'\nassert solution('8\\n17\\n14\\n5\\n21\\n15\\n17\\n\\n4\\n6\\n') == '169'\nassert solution('8\\n17\\n14\\n5\\n21\\n15\\n17\\n\\n4\\n6\\n') == '169'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\\n\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\\n\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\\n\") == \"325\"\nassert solution(\"100\\n100\\n100\\n100\\n100\\n100\\n\") == \"35\"\nassert solution(\"1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n\") == \"8\"\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n5\n6\n3\n1\n2\n''') == '6'\n\nassert solution('''12\n11\n13\n20\n4\n6\n''') == '102'\n\nassert solution('''17\n14\n5\n21\n15\n17\n''') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n'''\n1\n1\n1\n1\n2\n2\n''') == '4'\n\nassert solution(\n'''\n2\n4\n5\n6\n3\n3\n''') == '3'\n\nassert solution(\n'''\n5\n6\n7\n8\n9\n10\n''') == '10'\n\nassert solution(\n'''\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n''') == '37'\n\nassert solution(\n'''\n2\n20\n17\n''') == '20'"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n6\\n3\\n1\\n2\\n') == '6'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n') == '102'\nassert solution('17\\n14\\n5\\n21\\n15\\n17\\n') == '325'\nassert solution('12\\n11\\n13\\n20\\n4\\n6\\n') == '102'\nassert solution('17\\n14\\n5\\n21\\n15\\n17\\n') == '325'\n"
    },
    {
        "number": 305,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4\\n5\\n6\\n3\\n1\\n2\\n\") == \"6\"\nassert solution(\"12\\n11\\n13\\n20\\n4\\n6\\n\") == \"102\"\nassert solution(\"17\\n14\\n5\\n21\\n15\\n17\\n\") == \"325\"\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\n\n\n\n\n'''\n\n'''\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('233 233 1000001 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('1 2 3 4') == ''\nassert solution('2 3 4 5') == ''\nassert solution('3 4 5 6') == ''\nassert solution('3 4 5 6 7') == ''\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\n"
    },
    {
        "number": 306,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 3 5 8') == '2'\nassert solution('4 6 7 13') == '1'\nassert solution('233 233 10007 1') == '1'\nassert solution('2 2 1020 3') == '4'\nassert solution('2 2 1024 30') == '4'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '256'\nassert solution('5 1 3 4') == '800'\nassert solution('100 1 2 3') == '2'\nassert solution('1011') == '10'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\n\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 1 1''') == '256'\nassert solution('''5 1 3 4''') == '800'\nassert solution('''1 1 1 1''') == '256'\nassert solution('''2 1 3 4''') == '200'\n'''\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 1') == '256'\n"
    },
    {
        "number": 307,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 3 4') == '800'\nassert solution('1 1 1 1') == '256'\nassert solution('1 1 1 2') == '256'\nassert solution('0 0 0 0') == '0'\nassert solution('0 0 0 1') == '256'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6 4 3 1''') == '0'\nassert solution('''9 3 8 10''') == '2'\nassert solution('''9 3 8 6''') == '1'\nassert solution('''9 3 8 6''') == '2'\nassert solution('''9 3 8 6''') == '1'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6 4 3 1''') == '0'\nassert solution('''9 3 8 10''') == '2'\n\n'''\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 4 5 7 6') == '0'\nassert solution('3 5 3 2') == '3'\nassert solution('8 9 8 7') == '8'\nassert solution('2 1 3 4') == '1'\nassert solution('7 7 2') == '1'\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 308,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nassert solution('-2 -1') == '-1'\nassert solution('-5 -5') == '-10'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\n\n\"\"\"\n\na,b = [int(s) for s in input().split(' ')]\n\nprint(max([(a^b) for a in range(1,2**18) for b in range(1,2**18)]))"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nassert solution('1000000001 1000000000') == '10000000001'\nassert solution('11 101') == '11'\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nprint(solution(''))\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 2''') == '3'\nassert solution('''8 16''') == '31'\nassert solution('''1 1''') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('8 16') == '31'\nassert solution('1 1') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"8 16\") == \"31\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 309,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 3\") == '1'\nassert solution(\"2 4\\n2 3\") == '0'\nassert solution(\"6 3\\n6 3\") == '1'\nassert solution(\"999999999999999999 999999999999999986\\n999999999999999999 999999999999999986\") == '1'\nassert solution(\"999999999999999999 999999999999999986\\n999999999999999999 999999999999999986\") == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 4\n''') == '1'\n\nassert solution('''4 12\n''') == '3'\n\nassert solution('''999999999999999999 999999999999999986\n''') == '1'\n\nassert solution('''9 19\n''') == '3'\n\nassert solution('''999999999999999999 999999999999999986\n''') == '1'"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 12\") == \"3\"\nassert solution(\"999999999999999999 999999999999999986\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''999999999999999999 999999999999999986''') == '1'\nassert solution('''0 0''') == '1'\n\n'''\n\nimport sys\n\nstdin = sys.stdin.read()"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\nassert solution('100000000000001 1') == '1'\nassert solution('1000000000000000 11111') == '1'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1'\nassert solution('4 12') == '3'\nassert solution('999999999999999999 999999999999999986') == '1'\nprint(solution(input()))"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3''') == '1'\nassert solution('''4 12''') == '3'\nassert solution('''99999999999999986 999999999999999986''') == '1'\nassert solution('''1 1''') == '0'\nassert solution('''9 99999999999999998 99999999999999998''') == '0'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == 1\nassert solution(\"3 4\") == 3\nassert solution(\"5 7\") == 4\nassert solution(\"9 9\") == 9\nassert solution(\"2 12\") == 3\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '0'\nassert solution('8 10 9 7 6 5 4 3 2 1 0') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '0'\nassert solution('12') == '1'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 310,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('1\\n2') == '0'\nassert solution('1\\n2\\n3\\n4') == '1'\nassert solution('1\\n3\\n5') == '0'\nassert solution('1\\n3\\n4\\n5') == '0'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"4 1 7 4 1 2\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"NO\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 1 4 4 2 1') == 'YES'\nassert solution('1 6 6 2 1 1') == 'NO'\nassert solution('4 1 7 4 1 2') == 'YES'\nassert solution('4 1 7 4 1 2') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 4 4 2 1') == 'YES'\nassert solution('1 6 6 2 1 1') == 'NO'\nassert solution('4 1 7 4 1 2') == 'YES'\nassert solution('4 1 7 4 1 2') == 'NO'\n\n\n-----\n\nMITx 6.006x: Introduction to Computer Programming Using Python\n\n\"\"\"\n\nn = list(map(int, stdin.readline().split()))\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1 4 4 2 1''') == 'YES'\nassert solution('''1 6 6 2 1 1''') == 'NO'\nassert solution('''4 1 7 4 1 2''') == 'YES'\nassert solution('''1 1 1 1 1 1''') == 'NO'\nassert solution('''1 1 1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"4 1 6 4 1 2\") == \"YES\"\nassert solution(\"4 1 6 4 1\") == \"YES\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 1 4 4 2 1''') == 'YES'\nassert solution('''1 6 6 2 1 1''') == 'NO'\nassert solution('''4 1 7 4 1 2''') == 'YES'\nassert solution('''2 2 1 1 2 2''') == 'YES'\nassert solution('''3 3 1 3 2 3''') == 'YES'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'YES'\nassert solution(stdin) == 'NO'\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4 4 2 1\") == \"YES\"\nassert solution(\"1 6 6 2 1 1\") == \"NO\"\nassert solution(\"4 1 7 4 1 2\") == \"YES\"\nassert solution(\"4 1 7 4 1 2\") == \"NO\"\n"
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 4 4 2 1') == 'YES'\nassert solution('1 6 6 2 1 1') == 'NO'\nassert solution('4 1 7 4 1 2') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 311,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'YES'\n\n\"\"\"\nfrom math import ceil, floor\n\nx, y, z, t1, t2, t3 = map(int, stdin.split())\n\nstairs_time = t1\nstairs_n = ceil(t1 / t2)\nstairs_p = ceil((t1 - t2 * stairs_n) / t3)\n\nelevator_time = t2\nelevator_n = ceil(t2 / t3)\nelevator_p = floor(t2 / t3)"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('1 1') == '1'\nassert solution('2 10') == '1'\nassert solution('1 1000') == '1'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 1') == '2'\nassert solution('3 4') == '2'\nassert solution('4 3') == '2'\nassert solution('3 10') == '2'\nassert solution('5 8') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == '2'\nassert solution('''4 3''') == '2'\nassert solution('''5 6''') == '3'\nassert solution('''100000 100000''') == '3'\nassert solution('''1000000 1000000''') == '3'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('3 3') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1') == '2'\nassert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('4 3') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2'\nassert solution('3 1') == '2'\nassert solution('2 3') == '2'\nassert solution('5 1') == '1'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 1''') == '2'\nassert solution('''4 3''') == '2'\nassert solution('''4 3''') == '2'\nassert solution('''5 4''') == '3'\nassert solution('''6 4''') == '3'\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n"
    },
    {
        "number": 312,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\nassert solution('1 2') == '1'\nassert solution('3 3') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5\n0 1 0 1 1''') == '4'\nassert solution('''7\n1 0 1 0 0 1 0''') == '4'\nassert solution('''1\n0''') == '0'\nassert solution('''2\n0 1''') == '1'\n\nprint(solution(stdin))\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4\\n'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4\\n'\nassert solution('1\\n0\\n') == '0\\n'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4\\n'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4\\n'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 1 0 1 1\") == \"4\"\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5''') == '4'\nassert solution('''7''') == '4'\nassert solution('''1''') == '0'\nassert solution('''0''') == '0'\nassert solution('''1 0 1 0 1 1''') == '4'\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('1\\n0\\n') == '0'\n\n'''\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"\"\nassert solution(\"1 1 1\") == \"\"\nassert solution(\"1 0 1 1\") == \"4\"\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4\\n'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4\\n'\nassert solution('1\\n0\\n') == '0\\n'\n\"\"\""
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1') == 0\nassert solution('5') == 4\nassert solution('7') == 4\nassert solution('0') == 0\nassert solution('0 1 0 1 1') == 4\n"
    },
    {
        "number": 313,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n0 1 0 1 1\\n') == '4'\nassert solution('7\\n1 0 1 0 0 1 0\\n') == '4'\nassert solution('1\\n0\\n') == '0'\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0 0 0\\n') == '0'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2''') == '2'\nassert solution('''3 17\n10 10 10''') == '3'\nassert solution('''1 9\n10''') == '-1'\nassert solution('''4 2\n1 1 1 1\n2 1 2 1''') == '2'\nassert solution('''4 1\n1 1 1 1''') == '2'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 2\n''') == '2'\nassert solution('''3 17\n10 10 10\n''') == '3'\nassert solution('''1 9\n10\n''') == '-1'\nassert solution('''10 9\n10 10 10\n''') == '-1'\nassert solution('''3 3\n10 10 10\n''') == '3'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 17\") == \"3\"\nassert solution(\"3 10\") == \"-1\"\nassert solution(\"10 10 10\") == \"3\"\nassert solution(\"10 9\") == \"-1\"\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('2 3\\n1 2') == '2'\nassert solution('3 17\\n10 10 10') == '3'\nassert solution('1 9\\n10') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3 17\"\"\"\n) == \"\"\"2\"\"\"\n\nassert solution(\n\"\"\"1 9\"\"\"\n) == \"\"\"-1\"\"\"\n\nassert solution(\n\"\"\"5 10\"\"\"\n) == \"\"\"3\"\"\"\n\nassert solution(\n\"\"\"10 10 10\"\"\"\n) == \"\"\"-1\"\"\"\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('2 3\\n1 2') == '2'\nassert solution('3 17\\n10 10 10') == '3'\nassert solution('1 9\\n10') == '-1'\nassert solution('2 10\\n1 2') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 9') == '-1'\nassert solution('2 3') == '2'\nassert solution('10 10 10') == '3'\nassert solution('10 10 100') == '-1'\n"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2\n''') == '2'\nassert solution('''3 17\n10 10 10\n''') == '3'\nassert solution('''1 9\n10\n''') == '-1'\n\n\n-----Best Practice-----"
    },
    {
        "number": 314,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 3\n1 2\"\"\") == \"2\"\nassert solution(\"\"\"3 17\n10 10 10\"\"\") == \"3\"\nassert solution(\"\"\"1 9\n10\"\"\") == \"-1\"\nassert solution(\"\"\"1 10\n10\"\"\") == \"2\"\nassert solution(\"\"\"2 5\n2 3 4 5\"\"\") == \"1\"\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 5\"\"\") == \"\"\"4\"\"\"\nassert solution(\"\"\"3 1\"\"\") == \"\"\"0 1 0\"\"\"\nassert solution(\"\"\"4 6\"\"\") == \"\"\"2 4 3 5\"\"\"\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 5\n2 0 1''') == '4'\nassert solution('''3 1\n0 0 0''') == '1'\nassert solution('''4 6\n2 4 3 5''') == '0'\nassert solution('''2 3\n0 0 0''') == '1'\nassert solution('''4 6\n2 4 3 5''') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4'\n\nassert solution('''3 1\n0 0 0\n''') == '1'\n\nassert solution('''5 3\n4 4 2 6 1\n''') == '2'\n\nassert solution('''3 1\n3 2 2\n''') == '0'\n\nassert solution('''6 6\n3 4 5 6 7 8\n''') == '2'"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 4') == '0'\nassert solution('3 1') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 5\\n2 0 1\\n') == '4\\n2 3 2'\nassert solution('3 1\\n0 0 0\\n') == '1\\n0 1 0'\nassert solution('4 6\\n2 4 3 5\\n') == '0\\n2 4 3 5'\nassert solution('4 6\\n0 0 0\\n') == '0\\n0 1 0'\nassert solution('4 6\\n2 4 3 5\\n') == '0\\n2 4 3 5'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4'\nassert solution('''3 1\n0 0 0\n''') == '0'\nassert solution('''4 6\n2 4 3 5\n''') in [\n    '0 1 0',\n    '2 4 3 5',\n]\nassert solution('''2 0\n2\n''') == '2'\nassert solution('''4 4\n4\n''') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 5\n2 0 1''') == '4'\nassert solution('''3 1\n0 0 0''') == '1'\nassert solution('''4 6\n2 4 3 5''') == '0'\nassert solution('''2 2\n2 2''') == '0'\nassert solution('''2 2\n0 0 0''') == '1'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3 5''') == '''4'''\nassert solution('''3 1''') == '''0'''\nassert solution('''4 6''') == '''0'''\nassert solution('''3 0 1''') == '''1'''\nassert solution('''6 6''') == '''0'''\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 5\n2 0 1\n''') == '4'\nassert solution('''3 1\n0 0 0\n''') == '1'\nassert solution('''4 6\n2 4 3 5\n''') == '0'\nassert solution('''4 6\n0 0 0\n''') == '2 4 3 5'\nassert solution('''4 6\n2 4 3 5\n''') == '0'\n"
    },
    {
        "number": 315,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 5\\n2 0 1') == '4'\nassert solution('3 1\\n0 0 0') == '0'\nassert solution('4 6\\n2 4 3 5') == '0'"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '5'\nassert solution('3\\n') == '13'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '5'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == 5\nassert solution('3') == 13\nassert solution('1') == 1\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\"\"\"\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\n\n\n\"\"\"\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == 1\nassert solution('2') == 5\nassert solution('3') == 13\nprint(\"Correct\")\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '55'\nassert solution('5') == '105'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '40'\nassert solution('5') == '125'\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\n\n\"\"\"\n\n\"\"\"\n\nimport unittest\nfrom functools import reduce\nfrom operator import add"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"4\") == \"\"\n"
    },
    {
        "number": 316,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2') == '5'\nassert solution('3') == '13'\nassert solution('4') == '20'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nprint('Test passed')\n\n\n\"\"\""
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\""
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nprint(\"Tests passed successfully.\")\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('tEoSmALLword') == 'NO'\nassert solution('tEoSmALLwordt') == 'NO'\nassert solution('tEoSmALLwordtEoSmALLword') == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1\ntoosmallword\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n6\nTheQuickBrownFoxJumpsOverTheLazyDog\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n6\ntoosmallword\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('toosmallword') == 'NO'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('TheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('12\\ntoosmallword') == 'NO'\nassert solution('35\\nTheQuickBrownFoxJumpsOverTheLazyDog') == 'YES'\nassert solution('4\\nto2so3') == 'YES'\nassert solution('10\\nabcd') == 'NO'\nassert solution('15\\nabcd') == 'NO'\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nassert solution(\"123456789\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"NO\"\n"
    },
    {
        "number": 317,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"toosmallword\") == \"NO\"\nassert solution(\"TheQuickBrownFoxJumpsOverTheLazyDog\") == \"YES\"\nassert solution(\"hello world\") == \"NO\"\nassert solution(\"H1e2l3l4o5w6o7r8l9d0\") == \"NO\"\nassert solution(\"ThisIsASentence\") == \"YES\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"10:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:00\") == \"10:10\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''23:59''') == \"00:09\"\nassert solution(\n'''20:20''') == \"22:21\"\nassert solution(\n'''10:10''') == \"10:10\"\nassert solution(\n'''0''') == \"10:10\"\nassert solution(\n'''0:0''') == \"10:10\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('23:59') == '00:59'\nassert solution('20:20') == '00:21'\nassert solution('10:10') == '10:10'\nassert solution('23:59') == '00:09'"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"23:59\") == \"00:09\"\nassert solution(\"20:20\") == \"22:21\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"00:00\"\nassert solution(\"0:0\") == \"00:00\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''23:59''') == '00:09'\nassert solution('''23:59''') == '00:09'\nassert solution('''123:20''') == '123:21'\nassert solution('''24:60''') == '00:01'\nassert solution('''23:59''') == '00:09'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('101:1') == '11:01'\nprint(solution(input()))\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"23:59\") == \"00:59\"\nassert solution(\"20:20\") == \"22:20\"\nassert solution(\"10:10\") == \"10:10\"\nassert solution(\"0:0\") == \"0:0\"\nassert solution(\"1:23\") == \"01:23\"\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('3:59') == '4:00'\nassert solution('9:59') == '10:00'\n"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('23:59') == '00:09'\nassert solution('23:59') == '00:09'\nassert solution('20:20') == '22:21'\nassert solution('10:10') == '10:10'\nassert solution('0:0') == '0:0'"
    },
    {
        "number": 318,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''23:59''') == '00:09'\nassert solution('''20:20''') == '22:21'\nassert solution('''10:10''') == '10:10'\nassert solution('''2:20''') == '02:20'\nassert solution('''0:10''') == '02:10'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('10101') == 'YES'\nassert solution('01000') == 'YES'\nassert solution('00111') == 'YES'\nassert solution('10000') == 'YES'\nassert solution('10100') == 'NO'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('010100\\n11001\\n00110\\n00001') == 'YES'\nassert solution('10100\\n11000\\n00110\\n00001') == 'NO'\nassert solution('10100\\n11001\\n00110\\n00001') == 'YES'\nassert solution('10100\\n01000\\n00110\\n00001') == 'NO'\nassert solution('10100\\n01000\\n00110\\n00001') == 'YES'\n\n\n-----\n\nYou are given n (1\u2264n\u226410) different numbers in range 1\u2026100. You are allowed to press the number of the lamp that is already on. The lamp is turned on if it is a multiple of 3. The lamp is turned off if it is not. You can press the lamp only once and you cannot press the number of the lamp that is already on.\n\nYour task is to determine if all of the lamps are turned on or not.\n\nInput\n\nThe first line of the input contains a single integer n (1\u2264n\u226410) \u2014 the number of lamps.\n\nThe following n lines of input contain n integers (1\u2264a[i]\u2264100) \u2014 the numbers of the lamps.\n\nOutput\n\nPrint \"YES\" if all lamps are turned on or \"NO\" otherwise.\n\nExamples\nInput\n\n4\n3\n1\n2\n5\n4\n\nOutput\n\nYES\n\nInput\n\n3\n1\n2\n3\n\nOutput\n\nNO\n\nInput\n\n5\n4\n5\n3\n1\n2\n3\n\nOutput\n\nYES\n\nInput\n\n7\n1\n5\n4\n3\n2\n7\n8\n9\n\nOutput\n\nYES\n\n\"\"\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == 'YES'\nassert solution('''4 5\n10100\n01000\n00110\n00101''') == 'NO'\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 0\") == \"YES\"\nassert solution(\"1 2\\n0 1\") == \"NO\"\nassert solution(\"1 1\\n0\") == \"YES\"\nassert solution(\"1 1\\n0 0\") == \"NO\"\nassert solution(\"0\\n0\") == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n10101\\n01000\\n00111\\n10000\") == \"YES\"\nassert solution(\"2 2\\n11\\n10\\n00\\n01\") == \"YES\"\nassert solution(\"1 1\\n1\") == \"NO\""
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 5\n10101\n01000\n00111\n10000\n\"\"\"\n    ) == \"YES\"\nassert solution(\n\"\"\"\n4 4\n1111\n1010\n0100\n1111\n\"\"\"\n    ) == \"NO\"\nassert solution(\n\"\"\"\n4 4\n0001\n0111\n1110\n1110\n\"\"\"\n    ) == \"YES\"\nassert solution(\n\"\"\"\n2 1\n01\n\"\"\"\n    ) == \"NO\"\nassert solution(\n\"\"\"\n5 2\n10000\n11100\n10011\n10100\n11111\n\"\"\"\n    ) == \"YES\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == \"YES\"\nassert solution('''4 5\n10100\n01000\n00110\n00101''') == \"NO\"\nassert solution('''3 4\n001000\n010100\n001000\n''') == \"YES\"\nassert solution('''3 4\n001000\n010100\n001000\n''') == \"NO\"\nassert solution('''3 4\n001000\n010100\n001000\n''') == \"NO\"\n"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == 'YES'\n\nassert solution('''4 5\n10100\n01000\n00110\n00101''') == 'NO'\n\nassert solution('''3 3\n0000\n0001\n0010''') == 'NO'\n\nassert solution('''3 3\n0011\n0010\n0011''') == 'YES'\n\nassert solution('''3 5\n0000\n0001\n0010\n00100\n00111\n01000\n01001\n01010\n01011\n01100\n01101\n01110\n01111''') == 'YES'"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"0 0 0 0 0 0 0\n0 1 0 0 0 0 0\n0 0 0 0 1 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0"
    },
    {
        "number": 319,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 5\n10101\n01000\n00111\n10000''') == 'YES'\n\nassert solution('''4 5\n10101\n01000\n00111\n10000''') == 'NO'\n\nassert solution('''4 5\n111111\n111011\n00111\n111111\n''') == 'YES'\n\nassert solution('''4 5\n111111\n111011\n110111\n111011\n''') == 'NO'\n\nassert solution('''4 5\n10101\n111011\n111011\n111011\n''') == 'NO'"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 2\n6 4''') == '0'\nassert solution('''1 4\n2 3\n4 4''') == '-1'\nassert solution('''3\n1 4\n2 3\n4 4''') == '1'\nassert solution('''1\n2 3\n4 4''') == '-1'\nassert solution('''3\n4 2\n6 4''') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4 2\\n6 4\") == \"0\"\nassert solution(\"1\\n4 2\\n5 4\\n6 4\") == \"1\"\nassert solution(\"1\\n4 2\\n6 4\\n6 4\") == \"-1\"\nassert solution(\"3\\n1 4\\n2 3\\n4 4\") == \"1\"\nassert solution(\"2\\n1 2\\n4 1\\n2 4\") == \"-1\"\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n2 1\\n') == '0'\nassert solution('1\\n1\\n') == '-1'\nassert solution('2\\n3 3\\n4 4\\n') == '2'\nassert solution('3\\n3 3\\n1 4\\n2 4\\n3 4\\n4 4\\n') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n2\\n2\") == \"2\"\nassert solution(\"4\\n4\\n4\") == \"0\"\nassert solution(\"2\\n1 2\\n1 1\") == \"2\"\nassert solution(\"2\\n2 2\\n1 1\") == \"1\"\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2\n4 2\n6 4''') == '0'\nassert solution('''1\n2 3\n4 4\n''') == '-1'\nassert solution('''3\n1 4\n2 3\n4 4\n''') == '1'\nassert solution('''8\n8 8\n4 4\n3 3\n2 2\n1 1\n1 1\n''') == '0'\nassert solution('''8\n8 8\n4 4\n3 3\n2 2\n1 1\n1 1\n2 1\n1 1\n''') == '-1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 2\\n6 4') == '0'\nassert solution('2\\n4 3') == '-1'\nassert solution('1\\n2 3\\n4 4') == '1'\n\"\"\""
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3\\n4 4') == '0'\nassert solution('2\\n4 2\\n6 4') == '-1'\nassert solution('2\\n4 3\\n6 4') == '1'\nassert solution('2\\n1 2\\n4 4') == '1'\nassert solution('2\\n4 2\\n1 4') == '2'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 4\\n2 3\\n4 4\") == \"1\"\nassert solution(\"2 3\\n1 4\\n2 3\\n4 4\") == \"0\"\nassert solution(\"1 3\\n1 3\\n1 3\\n1 3\") == \"2\"\nassert solution(\"1 4\\n2 3\\n4 4\") == \"1\"\nassert solution(\"3 4\\n1 4\\n2 3\\n4 4\") == \"2\""
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n4 2\n6 4''') == '0'\nassert solution('''1\n2 3\n4 4\n''') == '-1'\nassert solution('''3\n1 4\n2 3\n4 4\n''') == '1'\nassert solution('''2\n1 4\n2 3\n''') == '-1'\nassert solution('''3\n1 4\n2 3\n''') == '1'\n"
    },
    {
        "number": 320,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100') == '0'\n\nassert solution('2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n6 6\\n6 6\\n7 7\\n7 7\\n8 8\\n8 8') == '0'\n\nassert solution('1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n6 6\\n6 6\\n7 7\\n7 7\\n8 8\\n8 8') == '0'\n\nassert solution('1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n6 6\\n6 6\\n7 7\\n7 7\\n8 8\\n8 8') == '0'\n\nassert solution('1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n6 6\\n6 6\\n7 7\\n7 7\\n8 8\\n8 8') == '0'"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('test') == 'YES'\nassert solution('4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33') == 'NO\\nYES\\nNO\\nYES'\nassert solution('5\\n16 5\\n36 13\\n61690850361 24777622630\\n34 33') == 'NO\\nNO\\nNO\\nYES'\nassert solution('5\\n36 13\\n61690850361 24777622630\\n34 33') == 'YES\\nNO\\nNO\\nYES'\nassert solution('5\\n36 13\\n61690850361 24777622630\\n34 33') == 'YES\\nNO\\nNO\\nYES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''5''') == 'NO'\nassert solution('''6 5''') == 'YES'\nassert solution('''16 13''') == 'NO'\nassert solution('''61690850361 24777622630''') == 'YES'\nassert solution('''34 33''') == 'NO'\n'''\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2\\n') == 'NO\\n'\nassert solution('1\\n') == 'YES\\n'\nassert solution('1\\n1\\n') == 'NO\\n'\nassert solution('5\\n2\\n4\\n3\\n5\\n') == 'NO\\nNO\\nNO\\nYES\\n'\nassert solution('5\\n2\\n4\\n3\\n4\\n') == 'NO\\nNO\\nNO\\nNO\\n'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4\n6 5\n16 13\n61690850361 24777622630''') == 'YES'\nassert solution('''4\n34 33\n61690850361 24777622630''') == 'NO'\nassert solution('''4\n16 13\n61690850361 24777622630''') == 'YES'\nassert solution('''4\n61690850361 24777622630''') == 'NO'\nassert solution('''4\n34 33\n61690850361 24777622630''') == 'NO'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4') == 'YES'\nassert solution('6') == 'NO'\nassert solution('16') == 'YES'\nassert solution('61690850361') == 'NO'\nassert solution('61690850361 24777622630') == 'YES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n\n\n\n\"\"\"\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n5') == 'YES'\nassert solution('2\\n6') == 'YES'\nassert solution('2\\n8') == 'NO'\nassert solution('2\\n15') == 'YES'\nassert solution('3\\n6') == 'YES'\n"
    },
    {
        "number": 321,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''6\n6 5\n16 13\n61690850361 24777622630\n34 33\n'''\n) == 'YES'\n\nassert solution(\n'''34\n33\n'''\n) == 'NO'\n\nassert solution(\n'''4\n6 13\n61690850361 24777622630\n34 33\n'''\n) == 'YES'\n\nassert solution(\n'''3\n6 13\n61690850361 24777622630\n34 33\n'''\n) == 'NO'\n\nassert solution(\n'''1\n1 1\n'''\n) == 'YES'"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input(\"\")) == 'Yes'\nassert solution(input(\"1\\n1\")) == 'Yes'\nassert solution(input(\"2\\n1\\n2\\n-1\\n1\\n2\")) == 'No'\nassert solution(input(\"2\\n1\\n1\")) == 'Yes'\nassert solution(input(\"2\\n1\\n2\\n-1\\n1\\n2\")) == 'No'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3''') == 'No'\nassert solution('''1 1''') == 'Yes'\nassert solution('''2 -1''') == 'No'\nassert solution('''3 -1''') == 'Yes'\nassert solution('''4 2''') == 'No'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n-1 -1\\n2 -1') == 'Yes'\nassert solution('4\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'No'\nassert solution('3\\n1 1\\n2 1\\n4 60') == 'Yes'\n\n\n\"\"\"\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2 -1\") == \"Yes\"\nassert solution(\"1 1\\n2 2\\n-1 1\") == \"No\"\nassert solution(\"1 1\\n2 2\\n4 60\") == \"Yes\"\nassert solution(\"1 1\\n2 2\\n1 1\") == \"No\"\nassert solution(\"2 2\\n1 1\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 'Yes'\nassert solution('1') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\nassert solution('3\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n-1\\n-1\\n2\\n2\\n4\\n60\") == \"Yes\"\nassert solution(\"1\\n1\\n-1\\n-1\\n2\\n2\\n4\\n60\") == \"No\"\nassert solution(\"1\\n1\\n-1\\n-1\\n2\\n2\\n2\\n2\") == \"No\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"No\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"No\"\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1\\n-1\\n2\\n-2') == 'Yes'\nassert solution('1\\n1\\n2\\n-2') == 'No'\nassert solution('3\\n1 1\\n2 2\\n-1 1') == 'Yes'\nassert solution('3\\n1 1\\n2 2\\n-1 1\\n-2 2') == 'No'\nassert solution('3\\n1 1\\n2 2\\n-1 1\\n-2 2\\n4 60') == 'Yes'\n"
    },
    {
        "number": 322,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == 6\n\n\"\"\"\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n6') == '6'\nassert solution('1\\n6') == '6'\nassert solution('2\\n6') == '6'\nassert solution('5\\n6') == '6'\nassert solution('1\\n6\\n2\\n3\\n5\\n7\\n8\\n9\\n10\\n11\\n12') == '6'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '6'\nassert solution('1 100') == '1'\nassert solution('12 14') == '2'\nassert solution('100 100') == '1'\n\nprint(solution('4 3'))\nprint(solution('1 100'))\nprint(solution('12 14'))\nprint(solution('100 100'))\n\"\"\"\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''1 2''') == '1'\nassert solution('''3 1''') == '3'\nassert solution('''10 22''') == '6'\nassert solution('''12345 67''') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''1 1''') == '1'\nassert solution('''6 8''') == '6'\nassert solution('''7 4''') == '1'\nassert solution('''10 12''') == '1'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3') == '6'\n\nprint('Test: 1 OK')\nprint()\n\nprint('Test: 2 OK')\nprint()\n\nprint('Test: 3 OK')\nprint()\n\nprint('Test: 4 OK')\nprint()\n\nprint('Test: 5 OK')\nprint()\n\nprint('Test: 6 OK')\nprint()\n\nprint('Test: 7 OK')\nprint()\n\nprint('Test: 8 OK')\nprint()\n\nprint('Test: 9 OK')\nprint()\n\nprint('Test: 10 OK')\nprint()\n\nprint('Test: 11 OK')\nprint()\n\nprint('Test: 12 OK')\nprint()\n\nprint('Test: 13 OK')\nprint()\n\nprint('Test: 14 OK')\nprint()\n\nprint('Test: 15 OK')\nprint()\n\nprint('Test: 16 OK')\nprint()\n\nprint('Test: 17 OK')\nprint()\n\nprint('Test: 18 OK')\nprint()\n\nprint('Test: 19 OK')\nprint()\n\nprint('Test: 20 OK')\nprint()\n\nprint('Test: 21 OK')\nprint()\n\nprint('Test: 22 OK')\nprint()\n\nprint('Test: 23 OK')\nprint()\n\nprint('Test: 24 OK')\nprint()\n\nprint('Test: 25 OK')\nprint()\n\nprint('Test: 26 OK')\nprint()\n\nprint('Test: 27 OK')\nprint()\n\nprint('Test: 28 OK')\nprint()\n\nprint('Test: 29 OK')\nprint()\n\nprint('Test: 30 OK')\nprint()\n\nprint('Test: 31 OK')\nprint()\n\nprint('Test: 32 OK')\nprint()\n\nprint('Test: 33 OK')\nprint()\n\nprint('Test: 34 OK')\nprint()\n\nprint('Test: 35 OK')\nprint()\n\nprint('Test: 36 OK')\nprint()\n\nprint('Test: 37 OK')\nprint()\n\nprint('Test: 38 OK')\nprint()\n\nprint('Test: 39 OK')\nprint()\n\nprint('Test: 40 OK')\nprint()\n\nprint('Test: 41 OK')\nprint()\n\nprint('Test: 42 OK')\nprint()\n\nprint('Test: 43 OK')\nprint()\n\nprint('Test: 44 OK')\nprint()\n\nprint('Test: 45 OK')\nprint()\n\nprint('Test: 46 OK')\nprint()\n\nprint('Test: 47 OK')\nprint()\n\nprint('Test: 48 OK')\nprint()\n\nprint('Test: 49 OK')\nprint()\n\nprint('Test: 50 OK')\nprint()\n\nprint('Test: 51 OK')\nprint()\n\nprint('Test: 52 OK')\nprint()\n\nprint('Test: 53 OK')\nprint()\n\nprint('Test: 54 OK')\nprint()\n\nprint('Test: 55 OK')\nprint()\n\nprint('Test: 56 OK')\nprint()\n\nprint('Test: 57 OK')\nprint()\n\nprint('Test: 58 OK')\nprint()\n\nprint('Test: 59 OK')\nprint()\n\nprint('Test: 60 OK')\nprint()\n\nprint('Test: 61 OK')\nprint()\n\nprint('Test: 62 OK')\nprint()\n\nprint('Test: 63 OK')\nprint()\n\nprint('Test: 64 OK')\nprint()\n\nprint('Test: 65 OK')\nprint()\n\nprint('Test: 66 OK')\nprint()\n\nprint('Test: 67 OK')\nprint()\n\nprint('Test: 68 OK')\nprint()\n\nprint('Test: 69 OK')\nprint()\n\nprint('Test: 70 OK')\nprint()\n\nprint('Test: 71 OK')\nprint()\n\nprint('Test: 72 OK')\nprint()\n\nprint('Test: 73 OK')\nprint()\n\nprint('Test: 74 OK')\nprint()\n\nprint('Test: 75 OK')\nprint()\n\nprint('Test: 76 OK')\nprint()\n\nprint('Test: 77 OK')\nprint()\n\nprint('Test: 78 OK')\nprint()\n\nprint('Test: 79 OK')\nprint()\n\nprint('Test: 80 OK')\nprint()\n\nprint('Test: 81 OK')\nprint()\n\nprint('Test: 82 OK')\nprint()\n\nprint('Test: 83 OK')\nprint()\n\nprint('Test: 84 OK')\nprint()\n\nprint('Test: 85 OK')\nprint()\n\nprint('Test: 86 OK')\nprint()\n\nprint('Test: 87 OK')\nprint()\n\nprint('Test: 88 OK')\nprint()\n\nprint('Test: 89 OK')\nprint()\n\nprint('Test: 90 OK')\nprint()\n\nprint('Test: 91 OK')\nprint()\n\nprint('Test: 92 OK')\nprint()\n\nprint('Test: 93 OK')\nprint()\n\nprint('Test: 94 OK')\nprint()\n\nprint('Test: 95 OK')\nprint()\n\nprint('Test: 96 OK')\nprint()\n\nprint('Test: 97 OK')\nprint()\n\nprint('Test: 98 OK')\nprint()\n\nprint('Test: 99 OK')\nprint()\n\nprint('Test: 100 OK')\nprint()\n\nprint('Test: 101 OK')\nprint()\n\nprint('Test: 102 OK')\nprint()\n\nprint('Test: 103 OK')\nprint()\n\nprint('Test: 104 OK')\nprint()\n\nprint('Test: 105 OK')\nprint()\n\nprint('Test: 106 OK')\nprint()\n\nprint('Test: 107 OK')\nprint()\n\nprint('Test: 108 OK')\nprint()\n\nprint('Test: 109 OK')\nprint()\n\nprint('Test: 110 OK')\nprint()\n\nprint('Test: 111 OK')\nprint()\n\nprint('Test: 112 OK')\nprint()\n\nprint('Test: 113 OK')\nprint()\n\nprint('Test: 114 OK')\nprint()\n\nprint('Test: 115 OK')\nprint()\n\nprint('Test: 116 OK')\nprint()\n\nprint('Test: 117 OK')\nprint()\n\nprint('Test: 118 OK')\nprint()\n\nprint('Test: 119 OK')\nprint()\n\nprint('Test: 120 OK')\nprint()\n\nprint('Test: 121 OK')\nprint()\n\nprint('Test: 122 OK')\nprint()\n\nprint('Test: 123 OK')\nprint()\n\nprint('Test: 124 OK')\nprint()\n\nprint('Test: 125 OK')\nprint()\n\nprint('Test: 126 OK')\nprint()\n\nprint('Test: 127 OK')\nprint()\n\nprint('Test: 128 OK')\nprint()\n\nprint('Test: 129 OK')\nprint()\n\nprint('Test: 130 OK')\nprint()\n\nprint('Test: 131 OK')\nprint()\n\nprint('Test: 132 OK')\nprint()\n\nprint('Test: 133 OK')\nprint()\n\nprint('Test: 134"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''4 3''') == '6'\nassert solution('''1 3''') == '1'\nassert solution('''7 19''') == '1'\nassert solution('''12 15''') == '6'\nassert solution('''666 666''') == '666'\n"
    },
    {
        "number": 323,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\nassert solution('5 4') == '2'\nassert solution('1 10') == '10'\nassert solution('10 9') == '1'\n\"\"\"\n\n\nfrom math import factorial"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('1') == 'a a'\nassert solution('2') == 'a 1'\nassert solution('3') == 'b 1'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '4608 4096'\n'''\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(1) == '1 1'\nassert solution(2) == '9 8'\nassert solution(3) == '4608 4096'\nassert solution(4) == '9 2976'\nassert solution(5) == '4608 4088'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1') == '2 1'\nassert solution('2') == '4 1'\nassert solution('512') == '8608 4096'\nassert solution('37') == '3 108'\nassert solution('16') == '7 9'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '9 8'\nassert solution('512') == '4608 4096'\n\"\"\""
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1') == '9 8'\nassert solution('1024') == '4608 4096'\nassert solution('0') == '4608 4096'\nassert solution('13') == '4608 4096'\nassert solution('37') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '2 1'\nassert solution('1024') == '4608 4096'\nassert solution('512') == '4608 4096'\nassert solution('1000') == '4608 4096'\nassert solution('10000') == '4608 4096'\n"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('1\\n') == ''\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580"
    },
    {
        "number": 324,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == '1 1'\nassert solution('3') == '2 2'\nassert solution('4') == '3 3'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('1 5 7\\n2 3 1\\n3 4 2\\n4 5 3\\n5 6 1\\n6 7 2') == '-1'\nassert solution('1 2 3\\n2 3 4\\n3 4 5\\n4 5 6') == '6'\nassert solution('5 10 1\\n1 1 5\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5\\n6 1 6\\n6 2 6\\n7 1 7') == '6'\nassert solution('1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n6 8 9') == '-1'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\\n1 3 30') == '-1'\nassert solution('3 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1') == '1'\nassert solution('5 100 1\\n1 2 1\\n2 3 2\\n3 4 3\\n4 5 5\\n5 6 6') == '21'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3 10\") == \"35\"\nassert solution(\"1 2 20\") == \"35\"\nassert solution(\"2 3 30\") == \"35\"\nassert solution(\"1 3 45\") == \"35\"\nassert solution(\"1 2 10\") == \"45\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2 5\") == \"45\"\nassert solution(\"3 3 10\") == \"35\"\nassert solution(\"2 2 3\") == \"60\"\nassert solution(\"4 2 4\") == \"10\"\nassert solution(\"4 4 1\") == \"-1\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"5 4 3\") == \"-1\"\nassert solution(\"3 3 2\") == \"3\"\nassert solution(\"5 5 5\") == \"-1\"\nassert solution(\"1 2 10\") == \"12\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == 3\nassert solution(\"1 2 1\") == -1\nassert solution(\"1 2 3 4\") == 5\nassert solution(\"1 2 1 2\") == -1\nassert solution(\"1 2 1 2 1\") == 2\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == '35'\nassert solution('5 5 30\\n1 2 10\\n2 3 20\\n3 4 15\\n4 5 50') == '110'\nassert solution('6 5 30\\n1 2 10\\n2 3 30\\n3 4 20\\n4 5 10\\n5 6 50') == '110'\nassert solution('9 1 10\\n1 2 10\\n2 3 10\\n3 4 10\\n4 5 10\\n5 6 10\\n6 7 10\\n7 8 10\\n8 9 10') == '110'\nassert solution('10 3 100\\n1 2 1\\n2 3 1\\n3 4 1\\n4 5 1\\n5 6 1\\n6 7 1\\n7 8 1\\n8 9 1\\n9 10 1') == '200'\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 10\\n1 2 20\\n2 3 30\\n1 3 45') == \"35\"\nassert solution('2 2 10\\n1 1 30\\n2 1 40') == \"35\"\nassert solution('1 1 10\\n1 2 10\\n1 3 5') == \"10\"\nassert solution('5 2 4\\n1 2 2\\n1 3 2\\n1 4 1\\n1 5 10\\n2 1 1\\n2 3 2\\n2 4 3\\n2 5 1\\n3 1 1\\n3 2 1\\n3 3 1\\n3 4 1\\n4 1 1') == \"1\"\nassert solution('1 1 10\\n1 2 10\\n1 3 10\\n1 4 1\\n1 5 10\\n2 1 1\\n2 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n3 1 1\\n3 2 1\\n3 3 1\\n3 4 1\\n4 1 1') == \"-1\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3 3 10\\n1 2 20\\n2 3 30\\n1 3 45\") == \"35\"\n\"\"\"\n"
    },
    {
        "number": 325,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3 3 10\n1 2 20\n2 3 30\n1 3 45\n''') == \"35\"\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n1 1 1\n''') == \"25\"\nassert solution('''\n1000 1000 500\n1 1 2\n1 2 3\n1 3 2\n2 1 1\n2 2 1\n2 3 1\n3 1 1\n3 2 1\n3 3 1\n''') == \"1\"\nassert solution('''\n3 3 10\n1 2 20\n2 3 30\n1 3 45\n''') == \"35\"\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n1 1 1\n''') == \"25\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('abc 3') == '7'\nassert solution('ba 3') == '7'\nassert solution('abc 4') == '9'\nassert solution('cbaa 5') == '7'\nassert solution('baabcccbbbaa') == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abc 4') == '-1'\nassert solution('ba 3') == '7'\nassert solution('cbaa 5') == '9'\nassert solution('ba 3') == '7'\nassert solution('ba 4') == '-1'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abc\", \"ba\", \"cba\") == '7'\nassert solution(\"ba\", \"abc\", \"cba\") == '7'\nassert solution(\"ababcd\", \"ccccdabcd\") == '8'\nassert solution(\"cccd\", \"cccd\") == '0'\nassert solution(\"ba\", \"abc\", \"cba\") == '7'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\nba 3\\nabc 4\\ncbaa 5\\n') == '7'\nassert solution('2\\nab 3\\ncb 2\\n') == '-1'\nassert solution('1\\nab 3\\ncb 2\\n') == '-1'\nassert solution('2\\nabc 2\\ncb 2\\n') == '-1'\nassert solution('2\\nabc 2\\ncb 2\\n') == '-1'\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\nba 3\\nabc 4\\ncbaa 5\\n\"\n) == \"7\"\nassert solution(\n    \"4\\nba 3\\nabc 4\\ncbaa 5\\n\"\n) == \"7\"\nassert solution(\n    \"10\\nba 3\\nabc 4\\ncbaa 5\\n\"\n) == \"7\"\nassert solution(\n    \"4\\nbab 3\\nabc 4\\ncbaa 5\\n\"\n) == \"-1\"\nassert solution(\n    \"4\\nbba 3\\nabc 4\\ncbaa 5\\n\"\n) == \"-1\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3\\nba 3\\nabc 4\\ncbaa 5\") == \"7\"\nassert solution(\"1\\nab 1\\nbc 1\\ncd 1\\nef 1\\nfg 1\\ngg 1\\nhi 1\\ni 1\\nj 1\\nk 1\") == \"10\"\nassert solution(\"2\\nabab 1\\nba 1\\na 1\\nb 1\\nc 1\\ne 1\\nf 1\\ng 1\\nh 1\\ni 1\\nj 1\\nk 1\") == \"-1\"\nassert solution(\"4\\nabab 1\\nba 1\\na 1\\nb 1\\nc 1\\ne 1\\nf 1\\ng 1\\nh 1\\ni 1\\nj 1\\nk 1\") == \"-1\"\nassert solution(\"5\\nabab 1\\nba 1\\na 1\\nb 1\\nc 1\\ne 1\\nf 1\\ng 1\\nh 1\\ni 1\\nj 1\\nk 1\") == \"-1\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\") == \"2\"\nassert solution(\"3\\n3\\n2\") == \"-1\"\nassert solution(\"3\\n3\\n1\") == \"-1\"\nassert solution(\"3\\n2\\n3\") == \"3\"\nassert solution(\"4\\n2\\n2\") == \"1\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ba\") == \"ba\"\nassert solution(\"abc\") == \"abcba\"\nassert solution(\"abcba\") == \"abcabcba\"\nassert solution(\"abcbaa\") == \"abcabcbaa\"\n"
    },
    {
        "number": 326,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"ba 3\\nabc 4\\ncbaa 5\") == \"7\"\nassert solution(\"ba 3\\ncbaa 5\") == \"7\"\nassert solution(\"\") == \"-1\"\nassert solution(\"cbaa\") == \"-1\"\nassert solution(\"abccba\") == \"7\"\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('1 9 4 7 5 3 6') == '9'\nassert solution('2 10 4 8 3 7 5 1') == '9'\nassert solution('3 7 5 4 2 1') == '3'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"7\"\n\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('1 2') == '3'\nassert solution('3 4') == '5'\nassert solution('3 4') == '5'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"7\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"1000000 3\") == \"1000000\"\nassert solution(\"10000000 10000000\") == \"10000000\"\nassert solution(\"1000000000 99999999999\") == \"9999999999\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('9 9') == '7'\nassert solution('7 7') == '7'\nassert solution('7 7') == '7'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\n\"\"\""
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2') == '7'\nassert solution('2 3') == '5'\nassert solution('3 4') == '3'\nassert solution('4 5') == '6'\nassert solution('5 6') == '4'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2') == '7'\nassert solution('2 6') == '7'\nassert solution('3 4') == '7'\nassert solution('4 5') == '3'\nassert solution('5 4') == '3'\n"
    },
    {
        "number": 327,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3') == '7'\nassert solution('6 6') == '7'\nassert solution('7 1') == '7'\nassert solution('1 1') == '0'\nassert solution('1 2') == '3'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1 1\\n1 2\\n2 1') == '3'\nassert solution('2\\n1 1') == '3'\nassert solution('1 1\\n1 2\\n2 1') == '3'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\nassert solution('7') == '4'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == 4\nassert solution('3\\n1 1\\n1 2\\n2 1') == 3\n\n\n\"\"\"\n\nimport sys\nfrom math import sqrt\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('3\\n1 1\\n1 2\\n2 1') == '3'\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == '4'\nassert solution('10\\n1 1\\n2 1\\n1 2\\n2 1\\n1 1\\n1 1\\n1 1\\n1 1') == '6'\n\n\n\n\"\"\""
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n2\\n1') == 3\nassert solution('2\\n2\\n2\\n2') == 4\nassert solution('1\\n1\\n2\\n1\\n1\\n1') == 3\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 3\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == 3\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1') == 3\nassert solution('4\\n1 1\\n1 2\\n2 1\\n2 2') == 4\n\"\"\"\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n1\\n1\\n2\\n') == '1'\nassert solution('3\\n1\\n1\\n1\\n') == '1'\nassert solution('4\\n1\\n1\\n2\\n') == '2'\nassert solution('5\\n1\\n1\\n1\\n2\\n') == '2'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 1\n1 2\n2 1''') == '3'\nassert solution('''4\n1 1\n1 2\n2 1\n2 2''') == '4'\nassert solution('''10\n10 1\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10''') == '10'\nassert solution('''11\n1 1\n1 2\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12''') == '12'\nassert solution('''11\n1 1\n1 2\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n3 11\n3 12\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n4 11\n4 12''') == '12'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1\n1 2\n2 1''') == '3'\nassert solution('''4\n1 1\n1 2\n2 1\n2 2''') == '4'\nassert solution('''8\n1 1\n1 2\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2''') == '4'\nassert solution('''5\n1 1\n1 2\n2 1\n2 2\n2 3''') == '4'\nassert solution('''6\n1 1\n1 2\n2 1\n2 2\n2 3\n3 1''') == '4'\n"
    },
    {
        "number": 328,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"3\n1 1\n1 2\n2 1\n\"\"\") == '3'\n\nassert solution(\n\"\"\"4\n1 1\n1 2\n2 1\n2 2\n\"\"\") == '4'\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('nineteen') == 1\nassert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == ''"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"nniinneetteeeenn\") == \"xnineteenppnineteenw\"\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == \"xnineteenppnineteenw\"\nassert solution(\"nineteenineteen\") == \"xnineteenppnineteenw\"\nassert solution(\"n\") == \"x\"\nassert solution(\"nineteen\") == \"x\"\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('nniinneetteeeenn') == '2'\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == '2'\nassert solution('nineteenineteen') == '2'\nassert solution('a') == 0\nassert solution('aa') == 0\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"nniinneetteeeenn\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nineteenineteen\") == 2\nassert solution(\"nineteenandnineteen\") == 2\nassert solution(\"nineteenandnineteen\") == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"nineteenineteen\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\nassert solution(\"nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii\") == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('x') == 0\nassert solution('nineteen') == 1\nassert solution('nineteenineteen') == 2\n"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 329,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') is None\nassert solution('nniinneetteeeenn') == 2\nassert solution('nneteenabcnneteenabcnneteenabcnneteenabcnneteenabcii') == 2\nassert solution('nineteenineteen') == 2\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('1 100000') == '0'\nassert solution('0 0') == '-1'\nassert solution('1 0') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == result\nprint(result)\n\"\"\""
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'\nassert solution(\"2 4\") == '-1'\nassert solution(\"2 3\") == '2'\nassert solution(\"2 5\") == '-1'\nassert solution(\"2 1\") == '2'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 6') == '5'\nassert solution('3 4') == '-1'\nassert solution('2 2') == '-1'\nassert solution('2 3') == '2'\nassert solution('3 3') == '-1'\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 330,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 1 5') == '40'\nassert solution('6 3 10') == '30'\nassert solution('9 10 100') == '20'\nassert solution('10 5 100') == '20'\nassert solution('1 2 10') == '10'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 1 20\n0 27 32 21 19\n''') == '40'\n\nassert solution('''7 3 50\n62 0 0 0 99 33 22\n''') == '30'\n\nassert solution('''10 5 100\n1 0 1 0 0 0 0 0 1 1\n''') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 1 20''') == '40'\nassert solution('''7 3 50''') == '30'\nassert solution('''10 5 100''') == '20'\n'''"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n\n'''\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 1 20\\n0 27 32 21 19\\n') == '40'\nassert solution('7 3 50\\n62 0 0 0 99 33 22\\n') == '30'\nassert solution('10 5 100\\n1 0 1 0 0 0 0 0 1 1\\n') == '20'\n"
    },
    {
        "number": 331,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 1 20') == '40'\nassert solution('7 3 50') == '30'\nassert solution('10 5 100') == '20'\n\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"2 2\n1 1\n6 1\n1 6\n1 1\"\"\") == 'YES'\nassert solution(\n\"\"\"2 2\n4 4\n4 5\n5 4\n4 4\n\"\"\") == 'NO'\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n\"\"\") == 'YES'\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n\"\"\") == 'NO'\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n\"\"\") == 'NO'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9') == 'YES'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n1 4 7\\n2 5 6\\n3 8 9') == 'NO'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"NO\"\nassert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"4 4\") == \"NO\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('1 4 7') == 'NO'\nassert solution('2 5 6') == 'NO'\nassert solution('3 8 9') == 'YES'\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"2 2\n1 1\n6 1\n1 6\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"2 2\n4 4\n4 5\n5 4\n4 4\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"3 3\n1 2 3\n4 5 6\n7 8 9\n1 4 7\n2 5 6\n3 8 9\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 1\n    6 1\n    1 6\n    1 1\n    \"\"\"\n    ) == 'YES'\n\nassert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    4 5 6\n    7 8 9\n    1 4 7\n    2 5 6\n    3 8 9\n    \"\"\"\n    ) == 'NO'\n\nassert solution(\n    \"\"\"\n    4 4\n    4 5\n    5 4\n    4 4\n    \"\"\"\n    ) == 'YES'\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    6 1\n    1 6\n    1 1\n    \"\"\"\n    ) == 'NO'\n\nassert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    4 5 6\n    7 8 9\n    1 4 7\n    2 5 6\n    3 8 9\n    \"\"\"\n    ) == 'YES'\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 1\\n6 1\\n1 6\\n1 1') == 'YES'\nassert solution('2 2\\n4 4\\n4 5\\n5 4\\n4 4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 332,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n6 1\\n1 6\\n1 1') == 'YES'\nassert solution('2 2\\n4 4\\n4 5\\n5 4\\n4 4\\n') == 'NO'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n') == 'YES'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 9\\n1 4 7\\n2 5 6\\n3 8 9\\n') == 'NO'\nassert solution('5 5\\n1 2 3 4 5 6\\n7 8 9 1 2 3 4\\n5 6 7 8 9 1 2 3\\n4 5 6 7 8 9 1 2 3\\n3 4 5 6 7 8 9 1 2 3\\n2 3 4 5 6 7 8 9 1 2 3\\n1 2 3 4 5 6 7 8 9 1 2 3\\n') == 'NO'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('abcd\\ndefgh') == '-1'\nassert solution('a\\na') == '-1'\nassert solution('ab\\nab') == '2'\nassert solution('a\\nb') == '2'\nassert solution('ab\\na\\nbc') == '3'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"abcd\\ndefgh\") == '5'\nassert solution(\"a\\na\") == '-1'\n\n\n\"\"\""
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''abcd\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcd\", \"defgh\") == \"5\"\nassert solution(\"a\", \"a\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('abcd\\nabcdefgh') == '5'\nassert solution('ac\\nabc') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('abcd') == '5'\nassert solution('a') == '-1'\nassert solution('a'*10**5) == '-1'\nassert solution('a'*10**6) == '-1'\nassert solution('a'*10**7) == '-1'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == '-1'\nassert solution('abcd') == '5'\nassert solution('a') == '-1'\nassert solution('aaaaa') == '-1'\nassert solution('abc') == '3'\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\"\n\n'''\n    for i in range(len(a)):\n        if a[i] not in b:\n            longest = max(longest, len(b) - i)\n    if longest == len(b):\n        return \"-1\"\n    return longest\n"
    },
    {
        "number": 333,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"abcd\\ndefgh\\n\") == \"5\"\nassert solution(\"a\\na\\n\") == \"-1\"\nassert solution(\"abcd\\ndefgh\\nabcd\\n\") == \"4\"\n\n\n-----\n\n## Solutions\n\"\"\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('20 2') == '82'\nassert solution('2 1') == '-1'\n\"\"\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('20 2\\n9 19') == '82'\nassert solution('2 1\\n16 12') == '-1'\nassert solution('1 10\\n1 11') == '10'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == \"82\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"20 2\") == \"82\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"20 1\") == \"1\"\nassert solution(\"1 2\") == \"-1\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('20 2\\n9 19\\n') == '82'\nassert solution('2 1\\n16 12\\n') == '-1'"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"20 2\") == \"82\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"9 19\") == \"82\"\nassert solution(\"2 12\") == \"-1\"\nassert solution(\"9 19\") == \"82\"\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 2\n9 19''') == '82'\nassert solution('''2 1\n16 12''') == '-1'\nassert solution('''2 2\n12 13''') == '0'\nassert solution('''2 2\n12 13''') == '-1'\nassert solution('''2 2\n12 14''') == '0'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"20 2\\n9 19\") == \"82\"\nassert solution(\"2 1\\n16 12\") == \"-1\"\n\"\"\""
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('20 2') == '82'\nassert solution('9 19') == '-1'\nassert solution('2 1') == '-1'\nassert solution('16 12') == '82'\nassert solution('100 200') == '-1'\n"
    },
    {
        "number": 334,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == answer\n\"\"\"\n\nn, m = [int(x) for x in stdin.strip().split()]\nc, d = [int(x) for x in stdin.strip().split()]\n\ncount = 0\nwhile (count + 1) * c < n:\n    if (count + 1) * c + m <= n:\n        count += 1\n    else:\n        break"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == \"1 1 1\"\nassert solution('33') == \"77 77 79\"\nassert solution('333') == \"77 77 79\"\nassert solution('333') == \"77 77 79\"\nassert solution('33333') == \"77 77 79\"\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\nassert solution(input()) == input()\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('''233''') == '77 77 79'\nassert solution('''233''') == '77 77 79'\nassert solution('''333''') == '77 77 79'\nassert solution('''222''') == '0 0 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3''') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('11') == '1 1 1'\nassert solution('33') == '7 7 7'\nassert solution('133') == '11 11 11'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(3) == \"1 1 1\"\nassert solution(233) == \"77 77 79\"\nassert solution(233) == \"77 77 79\"\n\nprint('solution:', solution(int(input())))\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"77 77 79\""
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('233') == '77 77 79'\nassert solution('9') == '1 1 1'\nassert solution('10') == '2 2 2'\nassert solution('123') == '1 1 1'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('3') == '1 1 1'\nassert solution('4') == '2 2 2'\nassert solution('5') == '3 3 3'\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input(\"\")) == \"77 77 79\"\nassert solution(input(\"\")) == \"1 1 1\"\nassert solution(input(\"\")) == \"77 77 79\"\nassert solution(input(\"\")) == \"77 77 79\"\nassert solution(input(\"\")) == \"77 77 79\"\n"
    },
    {
        "number": 335,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"233\") == \"77 77 79\"\nassert solution(\"33\") == \"1 1 1\"\nassert solution(\"333\") == \"77 77 79\"\nassert solution(\"4\") == \"1 1 1\"\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 1 1 1 2\"\n) == \"2\"\n\nassert solution(\n    \"3 3 1 2 3\"\n) == \"6\"\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''2 1 1 1 2''') == '2'\nassert solution('''3 3 1 2 3''') == '6'\nassert solution('''2 2 1 1 2''') == '0'\nassert solution('''3 3 1 2 3''') == '12'\nassert solution('''4 3 1 2 3 4''') == '24'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 1 1 1 2''') == '2'\nassert solution('''3 3 1 2 3''') == '6'\nassert solution('''1 1 1 2 1''') == '1'\nassert solution('''2 1 1 1 2''') == '2'\nassert solution('''3 3 1 2 3''') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('2 1 1 1 2') == '2'\nassert solution('3 3 1 2 3') == '6'\nassert solution('4 4 1 2 2 4') == '5'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n'''2 1 1 1 2'''\n) == '2'\nassert solution('''3 3 1 2 3''') == '6'\nassert solution('''4 1 1 1 2''') == '4'\nassert solution('''5 3 1 2 3''') == '8'\nassert solution('''6 1 1 1 2''') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 1 1 1 2''') == '2'\nassert solution('''3 3 1 2 3''') == '6'\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"2 1 1 1 2\"\"\") == \"2\"\n\nassert solution(\n\"\"\"3 3 1 2 3\"\"\") == \"6\"\n\nassert solution(\n\"\"\"1 1 1 1 2\"\"\") == \"2\"\n\nassert solution(\n\"\"\"1 1 1 1 2\"\"\") == \"2\"\n\nassert solution(\n\"\"\"1 1 1 1 2\"\"\") == \"2\""
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 2\") == 2\nassert solution(\"3 3 1 2 3\") == 6\n"
    },
    {
        "number": 336,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 1\\n1 2') == '8'\nassert solution('4 3\\n9 2\\n0 1') == '1'\nassert solution('4 3\\n9 2\\n0 1\\n1 2') == '1'\nassert solution('1 1\\n1 2\\n1 2') == '0'\nassert solution('5 5\\n9 9\\n9 9\\n9 9\\n9 9') == '0'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('4 3') == '8'\nassert solution('4 3\\n1 1\\n1 2') == '1'\nassert solution('4 3\\n9 2\\n0 1') == '1'\nassert solution('4 3\\n9 2\\n1 1\\n0 1') == '1'\nassert solution('4 3\\n9 2\\n1 1\\n1 1\\n0 1') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 1\\n') == '1'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\nassert solution('2 3\\n2 1\\n0 1\\n') == '8'\nassert solution('3 3\\n2 1\\n1 2\\n') == '0'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"8\"\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3''') == '8'\nassert solution('''4 3''') == '8'\nassert solution('''9 2''') == '1'\nassert solution('''4 3''') == '1'\nassert solution('''1 1''') == '8'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 1\\n1 2') == '8'\nassert solution('4 3\\n9 2\\n0 1') == '1'\nassert solution('10 9\\n1 1\\n2 1') == '10'\nassert solution('10 9\\n1 1\\n1 1') == '0'\nassert solution('100 100\\n1 1\\n1 1') == '0'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '4 3\\n'\n    '1 1\\n'\n    '1 2\\n'\n) == '8'\n\n'''\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('4 3') == '8'\nassert solution('9 2') == '1'\nassert solution('4 3') == '1'\nassert solution('4 3') == '1'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 1\\n1 2') == '8'\nassert solution('4 3\\n9 2\\n0 1\\n') == '1'\nassert solution('10 9\\n9 9\\n9 9\\n') == '10'\n"
    },
    {
        "number": 337,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 3\\n2 1\\n') == '1'\nassert solution('1 2\\n0 1\\n') == '1'\nassert solution('2 2\\n2 1\\n') == '2'\nassert solution('3 4\\n4 2\\n2 1\\n') == '2'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3 2 1') == 3\nassert solution('3 4 3 2 1') == 3\nassert solution('0 3 3 4 2') == 0\nassert solution('2 5') == 0\nassert solution('3 6') == 0\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'\n\n\"\"\""
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\\n\") == \"0\"\nassert solution(\"2\\n5 10\\n3 6\\n\") == \"3\"\nassert solution(\"2\\n10 9\\n3 6\\n\") == \"3\"\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 4 3 2 1\\n6 8\") == \"3\"\nassert solution(\"5\\n0 3 3 4 2\\n3 10\") == \"4\"\nassert solution(\"2\\n2 5\\n3 6\\n\") == \"0\"\nassert solution(\"4\\n2 5\\n3 6\\n\") == \"0\"\nassert solution(\"2\\n0 3 3 4 2\\n3 10\\n\") == \"3\"\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('2\\n5') == '2'\nassert solution('3\\n1') == '0'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n1 10') == '3'\nassert solution('2\\n1 1000000000') == '0'\nassert solution('2\\n1 1000000000\\n1 1000000000') == '1'\nassert solution('2\\n1 1000000000\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 2\\n1 4') == '0'\nassert solution('3\\n1 2 0\\n1 4') == '0'\nassert solution('3\\n0 3 1\\n1 10') == '0'\nassert solution('3\\n2 4 1\\n1 10') == '2'\nassert solution('3\\n0 3 2\\n1 10') == '2'\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('0\\n0\\n0\\n0\\n0\\n0\\n0') == 0\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == 1\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n2') == 2\nassert solution('3\\n3\\n3\\n3\\n3\\n3\\n3') == 3\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4') == 4\n"
    },
    {
        "number": 338,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 4 3 2 1\n6 8\n''') == '3'\nassert solution('''2\n2 5\n3 6\n''') == '0'\nassert solution('''2\n3 1\n1 1\n''') == '2'\nassert solution('''1\n2 1\n1 1\n''') == '1'\nassert solution('''5\n5 5 5 5 5\n5 5\n''') == '5'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'\nassert solution('''18\n5\n4\n2\n''') == '13'\nassert solution('''80\n20\n50\n2\n''') == '91'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"9\\n2\\n3\\n1\\n\") == \"6\"\nassert solution(\"5\\n5\\n2\\n20\\n\") == \"8\"\nassert solution(\"19\\n3\\n4\\n2\\n\") == \"12\"\n\n\"\"\"\n\n\"\"\"\nTC: O(log(n))\nSC: O(1)\n\"\"\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''9\n2\n3\n1\n''') == '6'\nassert solution('''5\n5\n2\n20\n''') == '8'\nassert solution('''19\n3\n4\n2\n''') == '12'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1\\n1\\n1\\n1'\nassert solution('9\\n2\\n3\\n1\\n') == '6\\n'\nassert solution('7\\n7\\n7\\n7') == '4\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n1\\n1\\n1\\n1\\n1\\n1\\n1'\nassert solution('5\\n5\\n2\\n20\\n') == '8\\n'\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '7'\n\nimport sys\nsys.setrecursionlimit(10**6)\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n1\\n1') == 1\nassert solution('3\\n3\\n2\\n2') == 2\nassert solution('4\\n4\\n2\\n2') == 2\nassert solution('7\\n7\\n2\\n2') == 3\nassert solution('9\\n9\\n2\\n2') == 4\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"8\"\nassert solution(\"1\\n2\\n2\\n2\\n\") == \"4\"\nassert solution(\"1\\n2\\n1\\n2\\n\") == \"4\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"0\"\nassert solution(\"9\\n1\\n2\\n3\\n4\\n\") == \"12\"\n"
    },
    {
        "number": 339,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"9999\") == \"9999 9999\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"100000000000\") == \"1 100000000000\"\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'\nprint(solution(input()))\n\n\"\"\"\n\nimport sys\nfrom math import sqrt\nfrom itertools import count"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''13''') == '6 2'\nassert solution('''96''') == '6 4'\nassert solution('''9''') == '3 1'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'\nassert solution('10') == '10 1'\nassert solution('100') == '10 1'\nassert solution('1000') == '10 1'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"20\") == \"10 2\"\nassert solution(\"5184\") == \"6 4\"\nassert solution(\"1545\") == \"15 21\"\nassert solution(\"7137\") == \"6 24\"\nassert solution(\"909\") == \"9 10\"\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''20''') == '10 2'\nassert solution('''5184''') == '6 4'\nassert solution('''91827398219''') == '6 4'\nassert solution('''246791003246''') == '7 4'\nassert solution('''275857928363''') == '6 4'\n"
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5184\") == \"6 4\"\nassert solution(\"20\") == \"10 2\"\nassert solution(\"5\") == \"5 1\"\nassert solution(\"1\") == \"1 0\"\n\"\"\""
    },
    {
        "number": 340,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('20') == '10 2'\nassert solution('5184') == '6 4'"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n8 7 6\\nrsrpr\\n\") == '27'\nassert solution(\"7 10\\n1 2 3 4 5 6 7\\nrrrrrrrrrr\\n\") == '102'\nassert solution(\"8 9\\n1 2 3 4 5 6 7 8 9\\nrrrrrrrrrrrrrrrrrrrrr\\n\") == '3498'\nassert solution(\"10 12\\n1 2 3 4 5 6 7 8 9 10 11 12\\nrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr\\n\") == '13293938'\nassert solution(\"4 3\\n1 2 3 4\\nrrrr\\n\") == '0'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 2') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5 2\n8 7 6\nrsrpr''') == '27'\nassert solution('''8 2\n1 2 3\nrsrpr''') == '27'\nassert solution('''8 2\n1 2 3\np p r''') == '27'\nassert solution('''8 2\n1 2 3\np p r''') == '27'\nassert solution('''8 2\n1 2 3\nrsrpr''') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"27\"\nassert solution(\"5 3\") == \"44\"\nassert solution(\"8 2\") == \"28\"\nassert solution(\"8 2\") == \"28\"\nassert solution(\"5 4\") == \"45\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 2') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\nassert solution('8 7 6') == '27'\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"27\"\nassert solution(\"4 3\") == \"36\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 1\") == \"15\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"27\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"5 2\") == \"27\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 341,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    input()) == expected"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"4\"\nassert solution(\"2 1 2\") == \"7\"\nassert solution(\"3 5 2\") == \"11\"\nassert solution(\"2 2 1\") == \"6\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"4000000000\"\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1 2') == '7'\nassert solution('3 5 2') == '11'\nassert solution('1000000000 1000000000 1000000000') == '4000000000'\nassert solution('1 1 1') == '4'\nassert solution('2 1 2') == '7'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 1\\n') == '4'\nassert solution('2 1 2\\n') == '7'\nassert solution('3 5 2\\n') == '11'\nassert solution('1000000000 1000000000 1000000000\\n') == '4000000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == ''\n'''\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 1 2') == '7'\nassert solution('3 5 2') == '11'\nassert solution('1000000000 1000000000 1000000000') == '4000000000'\nassert solution('2 2 1') == '6'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1 1 1''') == '4'\nassert solution('''2 1 2''') == '7'\nassert solution('''3 5 2''') == '11'\nassert solution('''1000000000 1000000000 1000000000''') == '4000000000'\nassert solution('''1000000000 1000000000 1000000000''') == '4000000000'\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1 1\\n') == '4'\nassert solution('2 1 2\\n') == '7'\nassert solution('3 5 2\\n') == '11'\nassert solution('2 2 1\\n') == '6'\nassert solution('1000000000 1000000000 1000000000\\n') == '4000000000'"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == 4\nassert solution(\"2 1 2\") == 7\nassert solution(\"3 5 2\") == 11\nassert solution(\"100 100 100\") == 4000000000\nassert solution(\"1000000000 1000000000 1000000000\") == 4000000000\n"
    },
    {
        "number": 342,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 1 1''') == 4\nassert solution('''2 1 2''') == 7\nassert solution('''3 5 2''') == 11\nassert solution('''4 2 1''') == 6\nassert solution('''1000000000 1000000000 1000000000''') == 4000000000\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\nassert solution(\"5 3 5 7 4\") == \"4 3\"\nassert solution(\"5 3 5 15 4\") == \"4 1\"\nassert solution(\"5 3 5 15 4\") == \"-1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 3 5 18 4\n3 5 4\n''') == '4 1'\nassert solution('''5 3 5 16 4\n5 5 5\n''') == '-1'\nassert solution('''5 3 5 17 4\n5 5 5\n''') == '-1'\nassert solution('''5 3 5 17 4\n5 5 5\n''') == '-1'\nassert solution('''5 3 5 17 4\n5 5 5\n''') == '-1'\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == '-1'\nassert stdin == \"\"\"5 3 5 18 4\n3 5 4\n\"\"\"\n\nprint(solution(stdin))\nassert stdin == \"\"\"5 3 5 16 4\n5 5 5\n\"\"\"\n\nprint(solution(stdin))\nassert stdin == \"\"\"5 3 5 18 4\n5 5 5\n\"\"\"\n\nprint(solution(stdin))\nassert stdin == \"\"\"5 3 5 17 4\n5 5 5\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-1\"\nassert solution(\"5 3 5 18 4\") == \"-1\"\nassert solution(\"5 3 5 18 4\") == \"-1\"\nassert solution(\"5 3 5 18 4\") == \"-1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 16 4\") == \"-\"1\"\nassert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 18 4\") == \"4 1\"\nassert solution(\"5 3 5 18 4\") == \"4 1\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\u00a01\"\nassert solution(stdin) == \"4\u00a02\"\nassert solution(stdin) == \"2\u00a04\"\nassert solution(stdin) == \"5\u00a01\"\nassert solution(stdin) == \"1\u00a05\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 343,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 1') == '2'\nassert solution('2 2') == '-1'\nassert solution('5 1') == '4'\nassert solution('5 2') == '-1'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') == 'YES'\nassert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('makhluk') == 'YES'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ninja') == 'YES'\nassert solution('sumimasen') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('pig') == 'YES'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('sumimasen') == \"YES\"\nassert solution('ninja') == \"YES\"\nassert solution('codeforces') == \"NO\"\nassert solution('codeforces') == \"NO\"\nassert solution('sumimasen') == \"YES\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\nassert solution(\"urmqxurq\") == \"YES\"\nassert solution(\"rzmqrux\") == \"YES\"\n\n\n>>> def solution(s: str) -> str:\n    vowels = {'a', 'o', 'u', 'i', 'e'}\n    consonants = set(s) - vowels\n    for c in consonants:\n        if c not in vowels:\n            return \"NO\"\n    return \"YES\"\n\n\n>>> assert solution(\"sumimasen\") == \"YES\"\n>>> assert solution(\"ninja\") == \"YES\"\n>>> assert solution(\"codeforces\") == \"NO\"\n>>> assert solution(\"urmqxurq\") == \"YES\"\n>>> assert solution(\"rzmqrux\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == 'YES'\nassert solution('ja') == 'NO'\nassert solution('jas') == 'NO'\nassert solution('jasami') == 'YES'\nassert solution('jasmani') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n\"\"\""
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"sumimasen\") == \"YES\"\nassert solution(\"ninja\") == \"YES\"\nassert solution(\"codeforces\") == \"NO\"\nassert solution(\"codeforces\") == \"NO\"\nassert solution(\"codeforces\") == \"NO\"\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('hello') == 'NO'\nassert solution('codeforces') == 'NO'\n"
    },
    {
        "number": 344,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('sumimasen') == 'YES'\nassert solution('ninja') == 'YES'\nassert solution('codeforces') == 'NO'\nassert solution('cherry') == 'NO'\nassert solution('glimpse') == 'NO'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == '4'\nassert solution('''7 0\n''') == '0'\nassert solution('''3 1\n1 3\n''') == '1'\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\nprint(solution('''6 6\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 2\n2 3\n2 4\n2 5\n2 6\n3 3\n3 4\n3 5\n3 6\n4 4\n4 5\n4 6\n4 7\n5 5\n5 6\n5 7\n6 6\n6 7\n7 7'''))\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == '4'\n\nassert solution('''7 0\n''') == '0'\n\nassert solution('''3 1\n1 3\n''') == '1'\n\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\n\nassert solution('''9 0\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n9 9\n''') == '64'"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('7 0') == '0'\nassert solution('3 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('0 0') == ''\nassert solution('0 0\\n0 1') == ''\nassert solution('0 0\\n1 2\\n2 3') == ''\nassert solution('0 0\\n1 2\\n2 3\\n3 4') == ''\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2\\n2 3\\n3 4\\n4 1') == '4'\nassert solution('7 0\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n') == '0'\nassert solution('7 21\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\\n') == '1'\nassert solution('3 1\\n1 3\\n\\n') == '1'\nassert solution('3 1\\n1 3\\n1 3\\n') == '2'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 4') == '4'\nassert solution('7 0') == '0'\nassert solution('3 1') == '1'\nassert solution('7 21') == '16'\nassert solution('6 8') == '0'\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1''') == '4'\nassert solution('''7 0\n\n''') == '0'\nassert solution('''3 1\n1 3\n\n''') == '1'\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\n'''\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"7 0\") == \"0\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"7 21\") == \"16\"\nassert solution(\"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7\") == \"16\"\n"
    },
    {
        "number": 345,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4 4\n1 2\n2 3\n3 4\n4 1\n''') == '4'\n\nassert solution('''7 0\n''') == '0'\n\nassert solution('''3 1\n1 3\n''') == '1'\n\nassert solution('''7 21\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == '16'\n'''\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 2\n100 200\n1 2\n\"\"\") == \"400\"\n\nassert solution(\"\"\"4 1\n1 3 7 5\n3\n\"\"\") == \"18\"\n\nassert solution(\"\"\"5 2\n1 4 6 8 10\n2\n\"\"\") == \"40\"\n\nassert solution(\"\"\"2 2\n100 200\n1 2\n\"\"\") == \"400\"\n\nassert solution(\"\"\"2 2\n100 200\n1 2\n\"\"\") == \"400\"\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n1 3 7 5\n3\n''') == '18'\nassert solution('''\n3 2\n10 3 8\n2 3\n''') == '40'\nassert solution('''\n2 2\n100 200\n1 2\n''') == '400'\nassert solution('''\n2 1\n3\n3\n''') == '18'\nassert solution('''\n4 1\n1 3 7 5\n3\n''') == '18'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 3 7 5\") == \"18\"\nassert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\"\nassert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\nassert solution(\"2 2\\n100 200\\n1 2\\n\") == \"400\"\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 3 7 5''') == '18'\nassert solution('''3 2\n10 3 8''') == '40'\nassert solution('''2 2\n100 200\n1 2''') == '400'\nassert solution('''10 50\n1 2 3 4 5 6 7 8 9 10\n5''') == '450'\nassert solution('''7 12\n1 2 3 4 5 6 7 8 9 10 11 12\n5''') == '1105'\n\n'''\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 1\n1 3 7 5\n3\n''') == '18'\n\nassert solution('''3 2\n10 3 8\n2 3\n''') == '40'\n\nassert solution('''4 2\n100 200\n1 2\n''') == '400'\n\nassert solution('''5 2\n100 100\n1 1\n2 2\n1 1\n''') == '100'\n\nassert solution('''5 2\n100 100\n1 1\n1 1\n1 1\n1 1\n''') == '100'"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"4 1\") == \"6\"\nassert solution(\"4 1\") == \"6\"\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n1 3 7 5') == '18'\nassert solution('1\\n3\\n10 3 8') == '40'\nassert solution('1\\n3\\n100 200') == '400'\nassert solution('1\\n3\\n10 3 8') == '40'\nassert solution('1\\n3\\n100 200') == '400'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') is None\nassert solution('1 2 3') is None\nassert solution('1 3 7 5') == 18\nassert solution('3') == 40\nassert solution('10 3 8') == 40\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''1 3 7 5\n3\n''') == '18'\nassert solution('''1 3 7 5\n3\n''') == '18'\nassert solution('''1 3 7 5\n3\n''') == '18'\nassert solution('''1 3 7 5\n3\n''') == '18'\nassert solution('''1 3 7 5\n3\n''') == '18'\n"
    },
    {
        "number": 346,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 3 7 5\\n3\\n\") == \"18\"\nassert solution(\"3 2\\n10 3 8\\n2 3\\n\") == \"40\"\nassert solution(\"2 2\\n100 200\\n1 2\\n\") == \"400\""
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input) == output\n\"\"\"\n\nm = map(int, stdin.split())\nw = map(int, stdin.split())\nh = map(int, stdin.split())\nprint sum(m[i] + w[i] - h[i] * 100 for i in range(5))\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''20 40 60 80 100''') == '4900'\nassert solution('''119 119 119 119 119''') == '4930'\nassert solution('''119 119 119 119 119''' +\n'''0 0 0 0 0''') == '4930'\nassert solution('''119 119 119 119 119''' +\n'''0 0 0 0 0''' +\n'''10 0''') == '4930'\n'''\n\n'''"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"20 40 60 80 100\\n0 1 2 3 4\\n1 0\\n\") == \"4900\"\nassert solution(\"119 119 119 119 119\\n0 0 0 0 0\\n10 0\\n\") == \"4930\"\n\n\n\n\n\"\"\"\n\nn, m, w, s, u = map(int, stdin.split())\na, b, c, d, e = map(int, stdin.split())\np = [0]*5\nfor i in range(5):\n    p[i] = m if i==0 else (max(0, m - 250*(i+1))*3 + (1 - (m-250*(i+1))/250)*b*2 + (1 - b)*c*2 + (1 - c)*d*2 + (1 - d)*e)\nprint(sum(p[i] for i in range(5)) + 100*(s+u))\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('20 40 60 80 100') == '4900'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('20 40 60 80 100') == '4900'\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n') == '4900'\nassert solution('''119 119 119 119 119''' + '\\n' + '0 0 0 0 0' + '\\n' + '10 0') == '4930'\nassert solution('''119 119 119 119 119''' + '\\n' + '0 0 0 0 0' + '\\n' + '11 0') == '4930'\n\n\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''119 119 119 119 119''' + '\\n' + '0 0 0 0 0' + '\\n' + '10 0'))\nprint(solution('''119 119 119 119 119''' + '\\n' + '0 0 0 0 0' + '\\n' + '11 0'))\nprint(solution('''119 119 119 119 119''' + '\\n' + '0 0 0 0 0' + '\\n' + '1 2'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0' + '\\n'))\nprint(solution('''20 40 60 80 100''' + '\\n' + '0 1 2 3 4' + '\\n' + '1 0'"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('20 40 60 80 100') == '4900'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('119 119 119 119 119') == '4930'\nassert solution('119 119 119 119 119') == '4930'\n\n\n\"\"\""
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 347,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n'''\n20 40 60 80 100\n0 1 2 3 4\n1 0\n''') == '4900'\n\nassert solution(\n'''\n119 119 119 119 119\n0 0 0 0 0\n10 0\n''') == '4930'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''2 2 1 1'''\n) == '1'\n\nassert solution(\n'''1 2 1 2'''\n) == '2'\n\nassert solution(\n'''1 2 1 2'''\n) == '2'\n\nassert solution(\n'''1 1 1 1'''\n) == '1'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 1 2') == '2'\n\n\"\"\""
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('2 2 1 1') == '1'\nassert solution('2 2 1 2') == '2'\nassert solution('2 2 1 1') == '1'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\nassert solution('2 2 1 2') == '2'\nassert solution('2 2 1 1') == '1'\nassert solution('1 1 1 1') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2 1 1') == '1'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 1 1 1''') == '1'\nassert solution('''2 2 1 1''') == '1'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''3 3 3 3''') == '1'\nassert solution('''1 2 1 2''') == '2'\n"
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 2 1 1''') == '1'\nassert solution('''1 2 1 2''') == '2'\nassert solution('''2 1 1 2''') == '2'\nassert solution('''2 2 1 1''') == '1'\n\n\n\n\"\"\""
    },
    {
        "number": 348,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11') == 'Impossible'\nassert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n3 1\\n3 6\\n4 8\\n8 10 11') == 'Possible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n8 1 2\\n5 10 7\\n6 4 8\\n6 5 3\\n6 8 4') == 'Possible'\nassert solution('2 2\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n8 1 2\\n5 10 7\\n6 4 8\\n6 5 3\\n6 8 4\\n6 8 4\\n6 8 4') == 'Possible'\nassert solution('2 2\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n8 1 2\\n5 10 7\\n6 4 8\\n6 5 3\\n6 8 4\\n6 8 4\\n6 8 4\\n6 8 4') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"Possible\"\nassert solution(\"2 3\") == \"Possible\"\nassert solution(\"3 2\") == \"Possible\"\nassert solution(\"3 2\") == \"Possible\"\nassert solution(\"3 2\") == \"Possible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Possible\"\nassert solution(stdin) == \"Impossible\"\nassert solution(stdin) == \"Possible\"\n\n\"\"\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 2\\n2 10\\n11 5\\n9 4\\n3 12\\n') == 'Possible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n') == 'Impossible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\") == \"Possible\"\nassert solution(\"2 2\\n2 10\\n11 5\\n9 4\\n3 12\") == \"Impossible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\") == \"Possible\"\nassert solution(\"2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\") == \"Possible\"\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Possible'\nassert solution('2 3\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8') == 'Possible'\nassert solution('3 2\\n1 3\\n2 4\\n5 10\\n3 1\\n3 6\\n4 8\\n1 2\\n3 4') == 'Possible'\n"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1\\n2 10\\n11 5') == 'Possible'\nassert solution('2 2\\n2 10\\n11 5') == 'Possible'\nassert solution('2 3\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n3 1 3\\n3 6 7') == 'Impossible'\nassert solution('2 3\\n1 3 2\\n2 4 5\\n4 5 6\\n3 6 7\\n8 10 11\\n3 1 3') == 'Possible'\n\n\"\"\"\n\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 349,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Impossible'\nassert solution('2 2') == 'Possible'\nassert solution('2 3') == 'Impossible'\nassert solution('3 2') == 'Possible'\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcab\") == \"abcab\"\nassert solution(\"abccc\") == \"abcab\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"abc\"\nassert solution(\"acba\") == \"abac\"\nassert solution(\"bacb\") == \"bacb\"\nassert solution(\"abca\") == \"abc\"\nassert solution(\"baa\") == \"aba\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 5 5\") == \"11\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"3\\n1 1 2\\n2 1 3\") == \"3\"\nassert solution(\"3\\n1 1 2\\n1 1 3\\n2 1 3\") == \"3\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('abcd') == 1\nassert solution('abb') == 2\nassert solution('abca') == 3\nassert solution('abcabcd') == 4\nassert solution('bcabc') == 5\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"abcd\") == 4\nassert solution(\"abc\") == 1\nassert solution(\"ababcd\") == 3\nassert solution(\"ababcdcdabcdcdcdcdabcdcdcda\") == 8\nassert solution(\"ababcdcdabcdcdcdcdabcdcdcdaa\") == 9\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"acc\"\nassert solution(stdin) == \"cbc\"\nassert solution(stdin) == \"cccaabbccbb\"\nassert solution(stdin) == \"aabcbcbcbcb\"\nassert solution(stdin) == \"aabcbcbcbcb\"\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == 3\nassert solution(\"abcd\") == 4\nassert solution(\"abcb\") == 4\nassert solution(\"bcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbc"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == answer, solution(stdin)\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a' * 26) == 26\nassert solution('b' * 26) == 26\nassert solution('c' * 26) == 26\nassert solution('b' * 10) == 10\nassert solution('c' * 10) == 10\n"
    },
    {
        "number": 350,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2 1 9') == '1'\nassert solution('4 20\\n10 3 6 3') == '0'\nassert solution('4 5\\n1 2 3 4') == '0'\nassert solution('4 10\\n1 2 3 4') == '1'\nassert solution('5 10\\n2 1 3 4 5') == '1'\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''3 3\n2 1 9''') == '1'\n\nassert solution(\n'''4 20\n10 3 6 3''') == '0'"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] >= k:\n        ans += a[i] - k\n        k = k + (a[i] - k) // 2\n        a[i] = k\n\nprint(ans)"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 1 9\\n') == '1'\nassert solution('4 20\\n10 3 6 3\\n') == '0'\nassert solution('2 2\\n1 1\\n') == '0'\nassert solution('1 10\\n100 1000\\n') == '99999'\nassert solution('2 1\\n1\\n') == '1'\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3 3\n2 1 9\n''') == '1'\n\nassert solution('''4 20\n10 3 6 3\n''') == '0'\n'''\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '0'\nassert solution('10 20 30 40') == '0'\nassert solution('10 30 40 50') == '1'\nassert solution('10 30 40 40') == '2'\nassert solution('10 30 40 40 40') == '3'\n"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n'''\n\nn, k = map(int, stdin.split())\na = list(map(int, stdin.split()))\n\na_max = max(a)\n\na_diff = []\nfor a_i in a:\n    a_diff.append(a_i / 2)\n\nprint(n - len([a_j for a_j in a_diff if a_j < a_max]))"
    },
    {
        "number": 351,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6\\n1 5\\n2 6\\n3 7\\n') == '1 2 3'\nassert solution('10\\n1 2\\n1 3\\n1 5\\n') == '2 3 5'\nassert solution('6\\n1 3\\n2 2\\n2 2\\n') == '2 2 2'"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"6\") == \"1 2 3\"\nassert solution(\"10\") == \"2 3 5\"\nassert solution(\"6\") == \"1 2 3\"\nassert solution(\"10\") == \"2 3 5\"\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5\\n2 6\\n3 7\") == \"1 2 3\"\nassert solution(\"10\\n1 2\\n1 3\\n1 5\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '1 2 2'\nassert solution('10\\n1 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '2 2 2 2'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1 1 1 1'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1 1 1 1'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1 1 1 1'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n') == '1 1 1'\nassert solution('2\\n1\\n1\\n') == '1 2 2'\nassert solution('3\\n1\\n1\\n') == '1 2 2'\nassert solution('3\\n1\\n1\\n') == '1 2 2'\nassert solution('3\\n1\\n1\\n') == '1 2 2'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''\n    6\n    1 5\n    2 6\n    3 7\n''') == '1 2 3'\n\nassert solution('''\n    10\n    1 2\n    1 3\n    1 5\n''') == '2 3 5'\n\nassert solution('''\n    3\n    1 5\n    2 6\n    3 7\n''') == '1 2 3'\n\nassert solution('''\n    2\n    1 2\n    2 2\n''') == '1 2 2'\n\nassert solution('''\n    3\n    1 2\n    2 2\n''') == '1 2 1'"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 1\\n1 1') == '1 1 1'\nassert solution('1 1\\n2 2\\n2 2') == '2 2 2'\nassert solution('5 5\\n1 1\\n1 1\\n1 1\\n1 1') == '2 2 2'\nassert solution('1 1\\n1 2\\n1 3') == '2 2 1'\nassert solution('1 1\\n1 1\\n1 1') == '1 1 1'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 5\n2 6\n3 7\n''') == '1 2 3'\nassert solution('''\n10\n1 2\n1 3\n1 5\n''') == '2 3 5'\nassert solution('''\n6\n1 3\n2 2\n2 2\n''') == '2 2 2'\n\nassert solution('''\n9\n1 3\n2 2\n3 1\n4 2\n2 5\n1 6\n1 7\n''') == '1 2 3'\nassert solution('''\n10\n1 3\n2 2\n3 1\n4 2\n2 5\n1 6\n1 7\n1 8\n1 9\n1 10\n''') == '2 3 5'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''\n6\n1 5\n2 6\n3 7\n''') == '1 2 3'\nassert solution(\n'''\n10\n1 2\n1 3\n1 5\n''') == '2 3 5'\nassert solution(\n'''\n6\n1 3\n2 2\n2 2\n''') == '2 2 2'\nassert solution(\n'''\n8\n1 2\n1 3\n1 5\n''') == '1 2 3'\nassert solution(\n'''\n2\n2 3\n1 2\n''') == '1 2 3'\n"
    },
    {
        "number": 352,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1') == '1 1 1'\nassert solution('2\\n1\\n1') == '1 1 2'\nassert solution('2\\n2\\n1') == '1 2 1'\nassert solution('2\\n2\\n2') == '1 1 2'\nassert solution('3\\n1\\n1') == '1 1 1'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n3 4 5 6 7\n''') == 'UP'\n\nassert solution(\n'''7\n12 13 14 15 14 13 12\n''') == 'DOWN'\n\nassert solution(\n'''1\n8\n''') == '-1'\n\nassert solution(\n'''2\n1 2\n2 1\n''') == '-1'\n\nassert solution(\n'''5\n5 5 5 5 5\n''') == 'DOWN'"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n'''5'''\n    ) == 'UP'\n\nassert solution(\n'''7'''\n    ) == 'DOWN'\n\nassert solution(\n'''1'''\n    ) == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n8') == 'DOWN'\nassert solution('2\\n12 13 14 15 14 13 12') == 'DOWN'\nassert solution('3\\n12 13 14 15 14 13 12') == 'UP'\nassert solution('4\\n12 13 14 15 14 13 12') == 'DOWN'\nassert solution('5\\n12 13 14 15 14 13 12') == 'UP'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n3 4 5 6 7\"\"\") == \"UP\"\nassert solution(\"\"\"7\n12 13 14 15 14 13 12\"\"\") == \"DOWN\"\nassert solution(\"\"\"1\n8\"\"\") == \"-1\""
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1') == 'UP'\nassert solution('2\\n2') == 'DOWN'\nassert solution('2\\n3') == -1\nassert solution('2\\n4') == -1\nassert solution('2\\n5') == 'UP'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n3 4 5 6 7''') == \"UP\"\nassert solution('''7\n12 13 14 15 14 13 12''') == \"DOWN\"\nassert solution('''1\n8''') == \"-1\"\nassert solution('''2\n4 2 4 2 4 2 2 4''') == \"UP\"\nassert solution('''2\n4 2 4 2 4 2 2 4''') == \"UP\"\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5''') == 'UP'\nassert solution('''7''') == 'DOWN'\nassert solution('''1''') == '-1'\n\n'''\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n3 4 5 6 7\\n') == 'UP'\nassert solution('7\\n12 13 14 15 14 13 12\\n') == 'DOWN'\nassert solution('1\\n8\\n') == '-1'\nassert solution('7\\n12 13 14 15 14 13 12\\n') == '-1'\nassert solution('5\\n7\\n') == '-1'\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5 4 4 3 3\") == \"UP\"\nassert solution(\"1\\n8\") == \"DOWN\"\nassert solution(\"2\\n2\") == \"-1\"\nassert solution(\"3\\n3 2 1\") == \"UP\"\nassert solution(\"3\\n3 2 3\") == \"DOWN\"\n"
    },
    {
        "number": 353,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''5\n3 4 5 6 7\n''') == \"UP\"\nassert solution('''7\n12 13 14 15 14 13 12\n''') == \"DOWN\"\nassert solution('''1\n8\n''') == -1\nassert solution('''7\n12 13 14 15 14 13 12\n''') == -1\nassert solution('''7\n2 4 2 4 2 4 2 2\n''') == \"DOWN\"\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('k') == 'Yes'\nassert solution('a') == 'No'\nassert solution('ae') == 'Yes'\nassert solution('aei') == 'Yes'\nassert solution('af') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('akm') == 'Yes'\nassert solution('ua') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('aBc') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('a') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('akm') == 'Yes'\nassert solution('a') == 'Yes'\nassert solution('akm') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('u') == 'Yes'\nassert solution('au') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('ab') == 'Yes'\nassert solution('abcd') == 'Yes'\nassert solution('ac') == 'No'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('abc') == 'Yes'\nassert solution('ubc') == 'Yes'\n"
    },
    {
        "number": 354,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('a') == 'Yes'\nassert solution('u') == 'Yes'\nassert solution('akm') == 'No'\nassert solution('ua') == 'Yes'\nassert solution('abc') == 'Yes'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nB.B.B.\nB..W.B\nB.B.B.\nB.B.B.\n.B.B.B\nB.B.B.\nB.B.B.\nB.B.B.\n\"\"\"\n) == 'B'\nassert solution(\n\"\"\"\nB.B.B.\nB..W.B\nB.B.B.\nB.B.B.\n.B.B.B\nB.B.B.\nB.B.B.\nB.B.B.\n\"\"\"\n) == 'A'\nassert solution(\n\"\"\"\nB.B.B.\nB..W.B\nB.B.B.\nB.B.B.\n.B.B.B\nB.B.B.\nB.B.B.\nB.B.B.\n\"\"\"\n) == 'B'\nassert solution(\n\"\"\"\nB.B.B.\nB..W.B\nB.B.B.\nB.B.B.\n.B.B.B\nB.B.B.\nB.B.B.\nB.B.B.\n\"\"\"\n) == 'B'\nassert solution(\n\"\"\"\nB.B.B.\nB..W.B\nB.B.B.\nB.B.B.\n.B.B.B\nB.B.B.\nB.B.B.\nB.B.B.\n\"\"\"\n) == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(''.join(open('test_input.txt').readlines())) == 'A'\nassert solution(''.join(open('test_input2.txt').readlines())) == 'B'\nassert solution(''.join(open('test_input3.txt').readlines())) == 'A'\nassert solution(''.join(open('test_input4.txt').readlines())) == 'B'\nassert solution(''.join(open('test_input5.txt').readlines())) == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........') == 'A'\nassert solution('..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\nassert solution('........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........') == 'A'\n\"\"\"\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''\n..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\nassert solution('''\n......B.\n......B.\n........\n........\n........\n.......W.\n.......W.\n........\n''') == 'B'\nassert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'A'\nassert solution('''......B.\n........\n.....W..\n......B.\n........\n....W...\n........\n.B....B.\n''') == 'B'\nassert solution('''........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''......B.\n..W.....\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........''') == 'A'\nassert solution('''......B.\n..W.....\n........\n........\n..B....B.\n....W...\n........\n..W.....\n........\n........''') == 'B'\nassert solution('''......B.\n..W.....\n........\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........''') == 'B'\nassert solution('''..B....\n..W.....\n........\n........\n....B...\n....W...\n........\n..B....B.\n..W.....\n........\n........''') == 'A'\nassert solution('''..B....\n..W.....\n........\n........\n....B...\n....W...\n........\n..B....B.\n..W.....\n........\n........''') == 'B'\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"A\"\n\n\"\"\"\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('........\\n........\\n.B....B.\\n....W...\\n........\\n..W.....\\n........\\n........') == 'A'\nassert solution('..B.....\\n..W.....\\n......B.\\n........\\n.....W..\\n......B.\\n........\\n........') == 'B'\n\n\n-----\n\nfrom typing import List\n"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'A'"
    },
    {
        "number": 355,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''.......\n........\n.B....B.\n....W...\n........\n..W.....\n........\n........\n''') == 'A'\n\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\n\nassert solution('''..B.....\n..W.....\n......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'A'\n\nassert solution('''..B.....\n..W.....\n.......B.\n........\n.....W..\n......B.\n........\n........\n''') == 'B'\n\nassert solution('''..B.....\n..W.....\n.......B.\n........\n.....W..\n......B.\n........\n.......W.\n''') == 'B'"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('2\\n1\\n') == '-1'\nassert solution('2\\n2\\n') == '2'\nassert solution('3\\n1\\n') == '-1'\nassert solution('3\\n2\\n') == '2'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '-1'\nassert solution('1\\n100') == '-1'\nassert solution('1\\n2\\n100') == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '-1'\nassert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n\nassert solution('''9\n3 1 5 7 10 11 12 13 14\n4\n10 2 5 9 11 12 13 14\n''') == '3'\n\nassert solution('''9\n3 1 5 7 10 11 12 13 14\n4\n1 1 2 2 2 3 3 3\n''') == '2'"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    '5\\n11 2 3 5 7\\n4\\n11 7 3 7\\n'\n) == '3'\nassert solution(\n    '2\\n1 2\\n1\\n100\\n'\n) == '-1'\nassert solution(\n    '3\\n1 2 3\\n3\\n1 2 3\\n'\n) == '3'\nassert solution(\n    '3\\n1 2 3\\n1\\n100\\n'\n) == '-1'\nassert solution(\n    '3\\n1 2 3\\n1\\n1\\n'\n) == '-1'\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5\n11 2 3 5 7\n4\n11 7 3 7\n''') == '3'\n\nassert solution('''2\n1 2\n1\n100\n''') == '-1'\n\nassert solution('''3\n1 2 3\n3\n1 2 3\n''') == '3'\n\nassert solution('''4\n1 2 3 4\n4\n1 2 3 4\n''') == '4'\n\nassert solution('''6\n1 2 3 4 5 6\n6\n1 2 3 4 5 6\n''') == '6'"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 356,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('2\\n1\\n') == '1'\nassert solution('5\\n11 2 3 5 7\\n4\\n11 7 3 7\\n') == '3'\nassert solution('3\\n1 2\\n1\\n100\\n') == '-1'\nassert solution('3\\n1 2\\n1\\n100\\n') == '-1'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(Alex_and_broken_contest) == \"NO\"\nassert solution(NikitaAndString) == \"YES\"\nassert solution(Danil_and_Olya) == \"NO\"\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(Alex_and_broken_contest) == 'NO'\nassert solution(NikitaAndString) == 'YES'\nassert solution(Danil_and_Olya) == 'NO'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_String\") == \"YES\"\nassert solution(\"Alex_and_Olya\") == \"YES\"\nassert solution(\"Alex_and_Slava\") == \"NO\"\nassert solution(\"Alex_and_Ann\") == \"YES\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\n\"\"\""
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"NikitaAndString\") == \"YES\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Alex_and_broken_contest\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('Nikita_and_String') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\nassert solution('Alex_and_Nikita') == 'YES'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"Alex_and_broken_contest\") == \"NO\"\nassert solution(\"Nikita_and_string\") == \"YES\"\nassert solution(\"Danil_and_Olya\") == \"NO\"\nassert solution(\"Alex_and_Olya\") == \"NO\"\nassert solution(\"Alex_and_Olya_\") == \"NO\"\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('Nikita_and_String') == 'YES'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Alex_and_broken_contest') == 'NO'\nassert solution('Alex_and_broken_contest') == 'NO'\n"
    },
    {
        "number": 357,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('Alex_and_broken_contest') == 'NO'\nassert solution('NikitaAndString') == 'YES'\nassert solution('Danil_and_Olya') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\nassert solution('1 1 1') == '1'\nassert solution('7 4 4') == '3'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\n\nprint('solution() completed successfully')\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4 2''') == '3'\nassert solution('''6 13 1''') == '4'\nassert solution('''1 4 3''') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '-1'\nassert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\n\n'''\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\nassert solution(\"1 4 3\") == \"-1\""
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4 2') == '3'\nassert solution('6 13 1') == '4'\nassert solution('1 4 3') == '-1'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 2') == '-1'\n"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 3') == '-1'\nassert solution('1 4 3') == '4'\nassert solution('1 2 2') == '-1'\nassert solution('1 3 2') == '-1'\nassert solution('6 13 1') == '4'"
    },
    {
        "number": 358,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"2 4 2\") == \"3\"\nassert solution(\"6 13 1\") == \"4\"\nassert solution(\"1 4 3\") == \"-1\""
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('a, h, w') == -1\nassert solution('2, 18, 13') == 0.5\nassert solution('4, 4, 4') == 0\nassert solution('3, 4, 3') == -1\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n\n\n-----"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n\"\"\"\n\nfrom math import sqrt\n\na, h, w = map(int, stdin.split())"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 18 13''') == '0.5'\nassert solution('''4 4 4''') == '0'\nassert solution('''3 4 3''') == '-1'"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n'''\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 18 13\\n') == '0.5'\nassert solution('4 4 4\\n') == '0'\nassert solution('3 4 3\\n') == '-1'\n\n\n-----"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 18 13') == '0.5'\nassert solution('4 4 4') == '0'\nassert solution('3 4 3') == '-1'\n\"\"\"\n\na, h, w = int(input()), int(input()), int(input())\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"2 18 13\"\n) == \"0.5\"\n\nassert solution(\n\"4 4 4\"\n) == \"0\"\n\nassert solution(\n\"3 4 3\"\n) == \"-1\"\n\n\n\n\"\"\"\n"
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == '0.5'\nassert solution('2 4 8') == '0'\nassert solution('3 4 3') == '-1'\n\n\n\n\"\"\""
    },
    {
        "number": 359,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2\n''') == '3'\n\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\n\nassert solution('''1\n1 7\n4\n''') == '1'\n\nassert solution('''1\n1 7\n4\n''') == '1'\n\nassert solution('''1\n1 7\n4\n''') == '1'"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''\n3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''\n1\n1 7\n4\n''') == '1'\nassert solution('''\n10\n1 10\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n''') == '15'\n\nprint('All tests passed successfully.')\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3''') == '3'\nassert solution('''1 3''') == '3'\nassert solution('''4 7''') == '2'\nassert solution('''8 11''') == '1'\nassert solution('''9''') == '1'\n'''\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2''') == '3'\n\nassert solution('''3\n1 4\n5 9\n10 12\n9''') == '2'\n\nassert solution('''1\n1 7\n4''') == '1'\n\nassert solution('''3\n1 4\n5 9\n10 12\n10''') == '2'\n\nassert solution('''3\n1 4\n5 9\n10 12\n20 22\n''') == '3'"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2\\n1\\n3\\n1') == '2'\nassert solution('5\\n1\\n7\\n4\\n1') == '3'\nassert solution('1\\n4\\n5\\n7\\n10\\n13\\n16\\n19\\n21\\n22\\n25\\n30\\n35\\n37\\n40\\n49\\n50\\n53\\n60\\n69\\n72\\n73\\n76\\n77\\n81\\n82\\n83\\n85\\n86\\n88\\n89\\n90\\n93\\n94\\n96\\n98\\n99') == '6'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3''') == '3'\nassert solution('''1 3''') == '3'\nassert solution('''4 7''') == '3'\nassert solution('''8 11''') == '2'\nassert solution('''2''') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3\\n4 7\\n8 11\\n2') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9\\n') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9\\n') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2\n''') == '3'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''1\n1 7\n4\n''') == '1'\n\n\n\n'''"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3\n4 7\n8 11\n2''') == '3'\nassert solution('''1\n1 7\n4\n''') == '1'\nassert solution('''3\n1 4\n5 9\n10 12\n9\n''') == '2'\nassert solution('''3\n1 4\n1 3\n2\n''') == '3'\nassert solution('''3\n1 4\n1 4\n3\n''') == '2'\n"
    },
    {
        "number": 360,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3\\n4 7\\n8 11\\n2\\n') == '3'\nassert solution('3\\n1 4\\n5 9\\n10 12\\n9\\n') == '2'\nassert solution('1\\n1 7\\n4\\n') == '1'\nassert solution('1\\n1 7\\n4\\n') == '1'\nassert solution('1\\n1 7\\n4\\n') == '1'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('BOTTOMCODE') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('ABDECOD') == 'NO'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('CODEWAITFORITFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\n\n'''\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"CODEFORCES\") == \"YES\"\nassert solution(\"BOTTOMCODER\") == \"NO\"\nassert solution(\"DECODEFORCES\") == \"YES\"\nassert solution(\"DOGEFORCES\") == \"NO\"\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('TEMPLATE') == 'TEMPLE'\nassert solution('TEMPLATEG') == 'TEMPLATE'\nassert solution('TEMPLATEGEMPLE') == 'TEMPLE'\nassert solution('DECODE') == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('TEMPLATE') == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('TEMPLATE') == 'TEMPLE'\nassert solution('BOTTOMCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('PYTHONISABBRUH') == 'YES'\n"
    },
    {
        "number": 361,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('CODEFORCES') == 'YES'\nassert solution('TOPCODER') == 'NO'\nassert solution('DECODEFORCES') == 'YES'\nassert solution('DOGEFORCES') == 'NO'\nassert solution('CODEWAITFORITFORCES') == 'YES'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\n\"\"\""
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\nassert solution('5') == '45'\nassert solution('6') == '126'\nassert solution('7') == '210'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('3\\n3') == '6'\nassert solution('4\\n4') == '18'\nassert solution('6\\n6') == '36'\nassert solution('5\\n5') == '25'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"18\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\nassert solution('3 4') == '12'\nassert solution('3 4 5') == '45'\nassert solution('3 4 5 6') == '135'\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'\n\n\n\"\"\"\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"18\"\nprint(solution(int(input())))\n'''\n"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '6'\nassert solution('''4''') == '18'"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '18'"
    },
    {
        "number": 362,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''3'''\n) == '6'\nassert solution(\n    '''4'''\n) == '18'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == ''\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '5'\nassert solution('4\\n') == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''\n13\n''') == '17'\nassert solution('''\n4\n''') == '4'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n13\n''') == '17'\nassert solution('''\n13\n''') == '17'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"17\"\n\"\"\"\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('13') == '17'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"1\\n2\\n\") == \"\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"\"\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 363,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"17\"\nassert solution(\"4\") == \"4\"\nassert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"a\") == \"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 1 4 2\\n\") == \"2\"\nassert solution(\"5 2\\n2 2 4 5 3\\n\") == \"-1\"\nassert solution(\"3 10\\n1 2 3\\n\") == \"4\"\nassert solution(\"3 10\\n1 2 3\\n\") == \"-1\"\nassert solution(\"3 10\\n1 2 3\\n\") == \"-1\"\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n4') == '4'\nassert solution('2\\n1 4 2\\n') == '-1'\nassert solution('3\\n1 2 3\\n') == '-1'"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data\n\n\"\"\"\n\ninput_data = \"\"\"5 1\n2 1 4 2\n\"\"\"\n\noutput_data = \"\"\"2\n\"\"\"\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == 2\nassert solution(\"5 2\") == -1\nassert solution(\"3 10\") == 4"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == 2\nassert solution(\"2 2 4 2\") == 2\nassert solution(\"5 2\") == -1\nassert solution(\"3 10\") == 4"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 1') == '2'\nassert solution('5 2') == '-1'\nassert solution('3 10') == '4'\nassert solution('4 2') == '4'\nassert solution('1 2 3') == '-1'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 1\"\n    \"2 1 4 2\"\n) == 2\n\nassert solution(\n    \"5 2\"\n    \"2 2 4 5 3\"\n) == -1\n\nassert solution(\n    \"3 10\"\n    \"1 2 3\"\n) == 4\n\n\n-----My Analysis-----\n\nThe idea is to see if there are any multiples of the given color that can't be chosen at the same time. I can do this by adding a flag to the dictionary and incrementing it when the given color is chosen. If there are more than one, return the one that is in the middle.\n\n\"\"\""
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('4 1') == 2\nassert solution('5 2') == -1\nassert solution('3 10') == 4\nassert solution('1 2 3') == -1\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 1\\n2 1 4 2') == '2'\nassert solution('5 2\\n2 2 4 5 3') == '-1'\nassert solution('3 10\\n1 2 3') == '4'\nassert solution('4 1\\n2 1 4 2') == '2'\nassert solution('4 2\\n2 2 4 5 3') == '-1'\n"
    },
    {
        "number": 364,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 10') == '-1'\nassert solution('1 2 3') == '4'\n\n\n-----\n\n\n\n\n\"\"\"\n\nn, A = map(int, input().split())\ncolors = [int(x) for x in input().split()]\n\nlow, high = 0, n - 1\n\nwhile low <= high:\n    mid = (low + high) // 2\n    if colors[mid] == A:\n        high = mid - 1\n    elif colors[mid] > A:\n        high = mid - 1\n    else:\n        low = mid + 1"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 3''') == 'NO'\nassert solution('''3 10\n3 3 2''') == 'YES'\nassert solution('''2 10\n1 3''') == 'NO'\nassert solution('''3 10\n3 3 2''') == 'NO'\nassert solution('''2 10\n1 3\n3 2''') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('') is None\nassert solution('1,1,1,1,1') == 'NO'\nassert solution('1,1,1,1,1,1') == 'NO'\nassert solution('1,1,1,1') == 'NO'\nassert solution('2,1,1') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 3\\n') == 'NO'\nassert solution('2 10\\n3 3 2\\n') == 'YES'\nassert solution('2 10\\n3 3 2\\n') == 'NO'\nassert solution('3 10\\n3 3 2\\n') == 'YES'\nassert solution('3 10\\n3 3 2\\n') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\n\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''2 10\n1 3\n''') == 'NO'\nassert solution('''5 2\n3 4\n''') == 'YES'\nassert solution('''5 2\n6 2 1\n''') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100') == 'YES'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 3\") == \"NO\"\nassert solution(\"5 2\\n1 3\") == \"YES\"\nassert solution(\"5 5\\n5 3 2\") == \"YES\"\nassert solution(\"5 10\\n5 3 2\") == \"NO\"\nassert solution(\"5 5\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''2 10\n3 3 2\n''') == 'YES'\nassert solution('''1 1\n1\n''') == 'YES'\nassert solution('''2 1\n1\n''') == 'NO'\nassert solution('''1 1\n1\n''') == 'NO'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4 10''') == 'NO'\nassert solution('''2 4''') == 'NO'\nassert solution('''3 10''') == 'YES'\nassert solution('''2 4''') == 'NO'\nassert solution('''3 3''') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 3\n''') == 'NO'\nassert solution('''3 10\n3 3 2\n''') == 'YES'\nassert solution('''5 10\n3 3 2\n''') == 'YES'\nassert solution('''5 10\n2 1 2\n''') == 'NO'\nassert solution('''7 1\n3 1 5 4 6 2\n''') == 'YES'\n"
    },
    {
        "number": 365,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('3') == 'NO'\nassert solution('3 1') == 'NO'\nassert solution('1 2') == 'NO'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n>>> from itertools import combinations\n>>> print(solution('5 11'))\n3\n>>> print(solution('6 16'))\n3\n>>> print(solution('6 12'))\n3\n>>> print(solution('7 16'))\n3\n>>> print(solution('9 22'))\n3\n>>> print(solution('9 9'))\n3\n>>> print(solution('9 12'))\n3\n>>> print(solution('9 8'))\n3\n>>> print(solution('9 13'))\n3\n>>> print(solution('9 15'))\n3\n>>> print(solution('9 16'))\n3\n>>> print(solution('9 19'))\n3\n>>> print(solution('9 21'))\n3\n>>> print(solution('9 22'))\n3\n>>> print(solution('9 23'))\n3\n>>> print(solution('9 24'))\n3\n>>> print(solution('9 25'))\n3\n>>> print(solution('9 26'))\n3\n>>> print(solution('9 28'))\n3\n>>> print(solution('9 30'))\n3\n>>> print(solution('9 32'))\n3\n>>> print(solution('9 33'))\n3\n>>> print(solution('9 34'))\n3\n>>> print(solution('9 35'))\n3\n>>> print(solution('9 36'))\n3\n>>> print(solution('9 37'))\n3\n>>> print(solution('9 38'))\n3\n>>> print(solution('9 39'))\n3\n>>> print(solution('9 40'))\n3\n>>> print(solution('9 41'))\n3\n>>> print(solution('9 42'))\n3\n>>> print(solution('9 43'))\n3\n>>> print(solution('9 44'))\n3\n>>> print(solution('9 45'))\n3\n>>> print(solution('9 46'))\n3\n>>> print(solution('9 47'))\n3\n>>> print(solution('9 48'))\n3\n>>> print(solution('9 49'))\n3\n>>> print(solution('9 50'))\n3\n>>> print(solution('9 51'))\n3\n>>> print(solution('9 52'))\n3\n>>> print(solution('9 53'))\n3\n>>> print(solution('9 54'))\n3\n>>> print(solution('9 55'))\n3\n>>> print(solution('9 56'))\n3\n>>> print(solution('9 57'))\n3\n>>> print(solution('9 58'))\n3\n>>> print(solution('9 59'))\n3\n>>> print(solution('9 60'))\n3\n>>> print(solution('9 61'))\n3\n>>> print(solution('9 62'))\n3\n>>> print(solution('9 63'))\n3\n>>> print(solution('9 64'))\n3\n>>> print(solution('9 65'))\n3\n>>> print(solution('9 66'))\n3\n>>> print(solution('9 67'))\n3\n>>> print(solution('9 68'))\n3\n>>> print(solution('9 69'))\n3\n>>> print(solution('9 70'))\n3\n>>> print(solution('9 71'))\n3\n>>> print(solution('9 72'))\n3\n>>> print(solution('9 73'))\n3\n>>> print(solution('9 74'))\n3\n>>> print(solution('9 75'))\n3\n>>> print(solution('9 76'))\n3\n>>> print(solution('9 77'))\n3\n>>> print(solution('9 78'))\n3\n>>> print(solution('9 79'))\n3\n>>> print(solution('9 80'))\n3\n>>> print(solution('9 81'))\n3\n>>> print(solution('9 82'))\n3\n>>> print(solution('9 83'))\n3\n>>> print(solution('9 84'))\n3\n>>> print(solution('9 85'))\n3\n>>> print(solution('9 86'))\n3\n>>> print(solution('9 87'))\n3\n>>> print(solution('9 88'))\n3\n>>> print(solution('9 89'))\n3\n>>> print(solution('9 90'))\n3\n>>> print(solution('9 91'))\n3\n>>> print(solution('9 92'))\n3\n>>> print(solution('9 93'))\n3\n>>> print(solution('9 94'))\n3\n>>> print(solution('9 95'))\n3\n>>> print(solution('9 96'))\n3\n>>> print(solution('9 97'))\n3\n>>> print(solution('9 98'))\n3\n>>> print(solution('9 99'))\n3\n>>> print(solution('10 100'))\n3\n>>> print(solution('10 99'))\n3\n>>> print(solution('10 101'))\n3\n>>> print(solution('10 102'))\n3\n>>> print(solution('10 103'))\n3\n>>> print(solution('10 104'))\n3\n>>> print(solution('10 105'))\n3\n>>> print(solution('10 106'))\n3\n>>> print(solution('10 107'))\n3\n>>> print(solution('10 108'))\n3\n>>> print(solution('10 109'))\n3\n>>> print(solution('10 110'))\n3\n>>> print(solution('10 111'))\n3\n>>> print(solution('10 112'))\n3\n>>> print(solution('10 113'))\n3\n>>> print(solution('10 114'))\n3\n>>> print(solution('10 115'))\n3\n>>> print(solution('10 116'))\n3\n>>> print(solution('10 117'))\n3\n>>> print(solution('10 118'))\n3\n>>> print(solution('10 119'))\n3\n>>> print(solution('10 120'))\n3\n>>> print(solution('10 121'))\n3\n>>> print(solution('10 122'))\n3\n>>> print(solution('10 123'))\n3\n>>> print(solution('10 124'))\n3\n>>> print(solution('10 125'))\n3\n>>> print(solution('10 126'))\n3\n>>> print(solution('10 127'))\n3\n>>> print(solution('10 128'))\n3\n>>> print(solution('10 129'))\n3\n>>> print(solution('10 130'))\n3\n>>> print(solution('10 131'))\n3\n>>> print(solution('10 132'))\n3\n>>> print(solution('10 133'))\n3\n>>> print(solution('10 134'))\n3\n>>> print(solution('10 135'))\n3\n>>> print(solution('10 136'))\n3\n>>> print(solution('10 137'))\n3\n>>> print(solution('10"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\n\n'''\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5 11\\n') == '3'\nassert solution('6 16\\n') == '3'\nassert solution('3 4 5\\n') == '5'\nassert solution('6 5 5\\n') == '2'\nassert solution('3 4 5\\n') == '5'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"5 11\") == \"3\"\nassert solution(\"6 16\") == \"3\"\nassert solution(\"15 20\") == \"4\"\nassert solution(\"5 100\") == \"1\"\nassert solution(\"14 16\") == \"4\"\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 11\\n') == '3\\n'\nassert solution('6 16\\n') == '3\\n'\nassert solution('1 1\\n') == '1\\n'\nassert solution('3 0\\n') == '-1\\n'\nassert solution('5 5\\n') == '0\\n'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5 11''') == '3'\nassert solution('''6 16''') == '3'\nprint('Success')\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\nassert solution('9 89') == '4'\nassert solution('10 100') == '3'\nassert solution('15 20') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 11') == '3'\nassert solution('6 16') == '3'\n"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == str(solution(stdin))\n\n\n------SOLUTION------"
    },
    {
        "number": 366,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 11\\n') == '3'\nassert solution('6 16\\n') == '3'\n\n\n\"\"\"\n\nn, s = [int(i) for i in stdin.split()]"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"aabcd\") == \"abcba\"\nassert solution(\"aabc\") == \"abba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"aabcd\") == \"abcba\"\nassert solution(\"aabc\") == \"abba\"\nassert solution(\"baaac\") == \"aaba\"\nassert solution(\"aaaaa\") == \"aaaaa\"\nassert solution(\"abcdabcd\") == \"abcdba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"abba\"\nassert solution(stdin) == \"defg\"\nassert solution(stdin) == \"abcba\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\""
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('aabc') == 'abba'\nassert solution('aabcd') == 'abcba'\nassert solution('aaab') == 'abab'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"aaa\") == \"aaa\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"aabc\") == \"abba\"\nassert solution(\"aabcd\") == \"abcba\"\nassert solution(\"oqabcd\") == \"obdba\"\nassert solution(\"kzazak\") == \"zkzak\"\nassert solution(\"rvfbkzkv\") == \"vrfkbzkv\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"abcdcba\") == \"abcdcbac\"\nassert solution(\"bab\") == \"ba\"\nassert solution(\"abccba\") == \"abccbac\"\nassert solution(\"baaaaaaaaaaaaaaaaaa\") == \"baaaaaaaaaaaaaaaaaa\"\nassert solution(\"abcdcba\") == \"abcdcbac\"\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(aabc) == 'abba'\nassert solution(aabcd) == 'abcba'\nassert solution('abcd') == 'abcd'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\n"
    },
    {
        "number": 367,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nqK\n........\n........\n........\n........\n........\n........\nrK.......\n\"\"\"\n) == \"White\"\n\n\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR\n\"\"\"\n) == \"Draw\"\n\n\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nRNBQKBNR\n\"\"\"\n) == \"Black\"\n\n\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n........\n........\n........\n........\nPPPPPPPP\nrnbqkbnr\n\"\"\"\n) == \"Draw\"\n\n\nassert solution(\n\"\"\"rnbqkbnr\npppppppp\n.......\n.......\n.......\n.......\nPPPPPPPP\nRNBQKBNR\n\"\"\"\n) == \"White\"\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\nb........\\n........\\n\") == \"White\"\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\nb........\\np......\\n\") == \"Black\"\nassert solution(\"rnbqkbnr\\npppppppp\\np....r...\\n.........\\n........\\n.......\\np......\\n\") == \"Draw\"\nassert solution(\"rnbqkbnr\\npppppppp\\nr.........\\n.........\\n.........\\n.........\\np.........\\n\") == \"White\"\nassert solution(\"rnbqkbnr\\nkppppppp\\np.........\\n.........\\n.........\\n.........\\n........\\n\") == \"Black\"\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\\n') == 'White'\nassert solution('rnbqkbnr\\npkp\\nppppppp\\npkp\\npPPPPPP\\npRNBQKBNR\\n') == 'Black'\nassert solution('rppppppr\\n...k....\\n........\\n........\\n........\\nK...Q...\\n........\\n') == 'Draw'\nassert solution('rnbqkbnr\\npppppppp\\n.......\\n.......\\n.......\\n.......\\npppppppp\\nrnbqkbnr\\n') == 'Draw'\nassert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\\n') == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR\") == 'White'\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNQKBNR\") == 'Black'\nassert solution(\"rnbqkbnr\\npppppppp\\n........\\n........\\n........\\n........\\nKBBBBBBB\\nRNBQKBNR\") == 'Draw'\nassert solution(\"rnbqkbnr\\npppppppp\\npppppppp\\npppppppp\\nPPPPPPPP\\nRNBQKBNR\") == 'Draw'\nassert solution(\"rnbqkbnr\\nkppppppp\\npRNBQKB1\\npppBBPPP\\nPpppBBPP\\nPPPPBBPP\\nPPPPBBPP\\nPPPPPPPP\\nRNBQKBNR\") == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('rnbqkbnr\\npppppppp\\n....p....\\n....p....\\n.......\\nP.......\\n.........\\n........') == 'White'\nassert solution('rnbqkbnr\\npppppppp\\n.......\\n.......\\n.......\\n.......\\n.......\\nPPPPPPPP') == 'Black'\nassert solution('rnbqkbnr\\npppppppp\\n.......\\n.......\\n.......\\n.......\\n.......\\nP.........') == 'Draw'\nassert solution('rnbqkbnr\\npppppppp\\n.......\\n.......\\n.......\\n.......\\n.......\\n........') == 'Draw'\nassert solution('rnbqkbnr\\npppppppp\\n.......\\n.......\\n.......\\n.......\\n.......\\n........') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\nB...Q...\\nP...P...\\np........\\nRNBQKBNR') == 'Black'\nassert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\nB...Q...\\nP...P...\\np........\\nRNBQKBNR') == 'Draw'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n........\\nP.......\\nR..Q...\\n........') == 'White'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n........\\nP.......\\nR..Q...\\n........') == 'Draw'\nassert solution('rnbqkbnr\\nkppppppp\\n.........\\n.........\\n.........\\n........\\nP.......\\nR..Q...\\n........') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('rnbqkbnr') == 'Black'\nassert solution('rnbqkbnr') == 'Black'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rnbqkbnr') == 'Draw'\nassert solution('rnbqkbnr') == 'Draw'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'White'\nassert solution('rnbqkbnr\\nkppppppp\\n........\\n........\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Black'\nassert solution('rnbqkbnr\\nkppppppp\\nr.......\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\nassert solution('rnbqkbnr\\nkppppppp\\nr.......\\n........\\n........\\nPPPPPPPP\\nRNBQKBNR') == 'Draw'\nassert solution('rnbqkbnr\\nkppppppp\\nr.......\\nR.......\\nR.......\\nPPPPPPPP\\nRNBQKBNR') == 'Black'\n"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(...) == expect\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 368,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"rnbqkbnr\") == \"White\"\nassert solution(\"rnbqkbnrpppppppp\") == \"Draw\"\nassert solution(\"rnbqkbnrppppppppp\") == \"Black\"\nassert solution(\"rnbqkbnrkrkrkrkr\") == \"Black\"\nassert solution(\"rnbqkbnrkrkrkrkrq\") == \"White\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''10 6\n0110101010\n''') == '-1'\nassert solution('''10 10\n0000000000\n''') == '-1'\nassert solution('''9 4\n0001000100\n''') == '1 3 2 3'\nassert solution('''10 9\n0110101010\n''') == '1 3 2 3'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('0 1') == '1 0'\nassert solution('0 0') == '-1'\nassert solution('1 0') == '-1'\nassert solution('0 1 0') == '1 0'\nassert solution('0 1 1') == '1 1'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 1 1 0 0 0 1 1 0 1 0 1 1 0 1 0 0 1 0 1 0 0 0 1 0 1 1 1 1 1 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 0 1 1 0 1 1 0 1 0 0 0 0 1 1 1 0 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 0 0 0 1 1 0 0 0 1 1 0 0 0 0 0 0 1 1 1 0 1 0 0 1 1 0 1 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 0 1 0 1 0 1 0 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 0 1 0 1 1 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 0 1 0 0 1 1 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 0 0 1 0 0 1 0 1 0 1 1 0 1 1 0 1 0 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1 1 1 0 1 0 1 0 0 0 1 0 1 0 0 1 1 0 1 0 1 0 0 0 0 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 0 0 1 1 1 1 0 1 0 1 0 0 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"001 0\") == \"1 3 2 3\"\nassert solution(\"101 0\") == \"-1\"\nassert solution(\"1 0\") == \"1 3 2 3\"\nassert solution(\"1 0 0 0\") == \"1 3 2 3\"\nassert solution(\"1 0 0 1\") == \"1 3 2 4\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('9 3\\n0001000100\\n') == '1 3 2 3\\n'\nassert solution('3 4\\n11100\\n') == '1 3 2 3\\n'\nassert solution('6 3\\n000000000\\n') == '1 3 2 3\\n'\nassert solution('6 3\\n000000000\\n') == '1 3 2 3\\n'\nassert solution('1 1\\n0\\n') == '1 -1\\n'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"7 3\\n0001000100\") == \"1 3 2 3\"\nassert solution(\"1 2\\n1\") == \"1 2\"\nassert solution(\"4 2\\n0011\") == \"-1\"\nassert solution(\"4 3\\n0110\") == \"1 3 2\"\nassert solution(\"7 3\\n0001000100\") == \"1 3 2 3\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"9 3\\n0001000100\") == \"1 3 2 3\"\nassert solution(\"3 2\\n001\") == \"-1\"\nassert solution(\"3 2\\n001\") == \"-1\"\nassert solution(\"2 10\\n0101\") == \"-1\"\nassert solution(\"3 3\\n101\") == \"1 3 2\"\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"-1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 421 422 423 424 425 426 427 428 429 430 431 432 433 435 436 437 438 439 440 441 442 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999\") == \"5 3 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''9 3\n0001000100\n''') == '1 3 2 3'\nassert solution('''5 4\n1 0\n0 1 1\n1 0\n1 1\n1\n1\n0\n0\n''') == '1 1 0 1'\nassert solution('''5 4\n1 0\n0 1 1\n1 0\n1 1\n1\n1\n0\n0\n''') == '1 1 0 1'\nassert solution('''5 4\n1 0\n0 1 1\n1 0\n1 1\n1\n1\n0\n0\n''') == '1 1 0 1'\n"
    },
    {
        "number": 369,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1 0\n0 1\n0 0''') == '1 3 2 3'\nassert solution('''1 0\n0 1\n0 0\n''') == '-1'\nassert solution('''1 1\n0 0\n''') == '1'\nassert solution('''1 0\n0 1\n1 1\n''') == '1 3 2 3'\nassert solution('''9 9\n0001000100\n''') == '1 3 2 3'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('11\\n-1 2\\n') == '3\\n7 4\\n2 10'\nassert solution('11\\n0 0\\n') == '3\\n0 0'\nassert solution('11\\n0 0\\n') == '3\\n0 0'\nassert solution('11\\n0 0\\n') == '3\\n0 0'\nassert solution('11\\n0 0\\n') == '3\\n0 0'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''11\n-1 2''') == '3 7 4 2 10 -1 2'\nassert solution('''11\n-1 2''') == '3 7 4 2 10 -1 2'\nassert solution('''11\n-1 1''') == '-1 1'\nassert solution('''11\n-1 0''') == '-1 0'\nassert solution('''11\n-1 -1''') == '-1 -1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"\"\"11\n-1 2\n\"\"\") == \"\"\"3\n7 4\n2 10\n-1 2\"\"\"\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''-1 2''') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('''4 4''') == '2\\n8 0\\n8 4\\n2 10\\n-1 2'\nassert solution('''11''') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('''-10 -10''') == '-1'\nassert solution('''1 2''') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6\\n10\\n-1\\n2\\n3\\n4\\n5\\n7\\n8\\n9\\n10') == '3\\n7 4\\n2 10\\n-1 2'\nassert solution('-1\\n-2\\n-3') == '1'\nassert solution('-1\\n-2\\n-3\\n-4\\n-5') == '1'\nassert solution('-1\\n-2\\n-3\\n-4\\n-5\\n-6') == '1'\nassert solution('-1\\n-2\\n-3\\n-4\\n-5\\n-6\\n-7') == '1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''11\n-1 2\n''') == '3\\n7 4\\n2 10'\nassert solution('''14\n1 1\n''') == '4 1'\nassert solution('''20\n1 1\n''') == '-1 -1'\nassert solution('''14\n0 0\n''') == '5 4'\nassert solution('''14\n10 10\n''') == '4 3'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10'\nassert solution('11\\n-1 2') == '3\\n7 4\\n2 10'\nassert solution('11\\n3 3\\n3 3\\n0 0') == '-1'\nassert solution('-1\\n-1') == '-1'\nassert solution('11\\n1 1\\n2 1\\n-1') == '-1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('11\\n-1 2') == '3\\n7 4\\n2 10'\nassert solution('11\\n0 0\\n2 0\\n-2 2') == '-1 2'\nassert solution('11\\n0 0\\n2 0\\n10 10') == '3\\n7 4\\n2 10'\nassert solution('3\\n-1 0\\n1 0\\n0 0') == '2\\n-1 0\\n1 0'\nassert solution('1\\n0 0\\n0 0') == '-1 -1'\n"
    },
    {
        "number": 370,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n2') == '7 4'\nassert solution('1\\n0\\n-1\\n4\\n3\\n1\\n-2') == '7 4'\nassert solution('1\\n4\\n2') == '-1 2'\nassert solution('0\\n0\\n0\\n0\\n0\\n0') == '1 2'\nassert solution('-1\\n0\\n0\\n0\\n0\\n0') == '1 2'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('8') == '8'\nassert solution('9') == '54'\nassert solution('10') == '-1'\nassert solution('1') == '8'\nassert solution('2') == '54'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('9') == '54'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\n\n\n\"\"\"\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n') == 8\nassert solution('8\\n') == 54\nassert solution('10\\n') == -1\n\nassert solution('\\n'.join([\n    '1',\n    '8',\n    '10'\n])) == -1\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"\"\"\"\nassert solution(input()) == \"\"\"-1\"\"\"\n\"\"\"\n\nThe way of solving this problem is simple. We can just count the ways to get N and in the end we can multiply the factorial of N to get the number of ways we can steal the chocolates.\n\n\"\"\"\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"8\") == \"8\"\nassert solution(\"10\") == \"54\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"8\") == \"54\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"10\") == \"54\"\nassert solution(\"10\") == \"-1\"\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == -1\nassert solution('1') == 8\nassert solution('8') == 54\nassert solution('10') == -1\nassert solution('10') == -1\n"
    },
    {
        "number": 371,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '8'\nassert solution('8') == '54'\nassert solution('10') == '-1'\nassert solution('10\\n8') == '54'\nassert solution('10\\n8\\n9') == '54'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''11 0 5''') == '0.00000000000000000000'\n\n\n------\n\nx1, y1, r1 = map(int, stdin.split(' '))\nx2, y2, r2 = map(int, stdin.split(' '))"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''0 0 4''') == '7.25298806364175601379'\nassert solution('''6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5''') == '0.00000000000000000000'\nassert solution('''11 0 5''') == '0.00000000000000000000'\nassert solution('''0 0 4\n6 0 4\n0 0 5\n11 0 5''') == '7.25298806364175601379'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('0 0 4\\n0 0 4\\n') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5\\n') == '0.00000000000000000000'\nassert solution('0 0 0\\n0 0 0\\n') == '0'\n\n\"\"\""
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\"\n\nimport sys\n\nx_1, y_1, r_1 = map(int, sys.stdin.readline().split())\nx_2, y_2, r_2 = map(int, sys.stdin.readline().split())\n\nd = ((x_1 - x_2)**2 + (y_1 - y_2)**2)**0.5\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0 4\\n6 0 4\\n') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5\\n') == '0.00000000000000000000'\n\n\n\"\"\"\nx_1, y_1, r_1 = map(int, stdin.readline().strip().split())\nx_2, y_2, r_2 = map(int, stdin.readline().strip().split())\n\narea = (x_1 - x_2) ** 2 + (y_1 - y_2) ** 2"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''0 0 4\n6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5\n11 0 5''') == '0.00000000000000000000'\nassert solution('''0 0 4\n6 0 4''') == '7.25298806364175601379'\nassert solution('''0 0 5\n11 0 5''') == '0.00000000000000000000'\nassert solution('''0 0 4\n0 0 4''') == '7.25298806364175601379'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\nassert solution('0 0 5\\n6 0 3') == '0.6666666666666665'\nassert solution('0 0 5\\n4 0 2') == '1.3333333333333333333333333333'\nassert solution('0 0 5\\n3 0 1') == '0.3333333333333333333333333333'\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"0 0 4\\n6 0 4\") == \"7.25298806364175601379\"\nassert solution(\"0 0 5\\n11 0 5\") == \"0.00000000000000000000\"\n"
    },
    {
        "number": 372,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('0 0 4\\n6 0 4') == '7.25298806364175601379'\nassert solution('0 0 5\\n11 0 5') == '0.00000000000000000000'\n\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''8''') == '1'\nassert solution('''1''') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('16') == '4'\nassert solution('2') == '1'\nassert solution('64') == '4'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\nassert solution('7') == 1\nassert solution('2') == 1\nassert solution('4') == 1\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"8\") == 1\nassert solution(\"1\") == 1\nassert solution(\"8 2\") == 2\n\n\n\"\"\"\n\nfrom sys import stdin\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('8') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''1''') == 1\nassert solution('''8''') == 1\nassert solution('''2''') == 1\nassert solution('''3''') == 2\nassert solution('''4''') == 2\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('8') == '1'\nassert solution('15') == '2'\nassert solution('64') == '3'\nassert solution('128') == '4'\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('8') == 1\nassert solution('1') == 1\nassert solution('8') == 1\nassert solution('2') == 2\n\n\n-----\n\n\n\n\"\"\"\n"
    },
    {
        "number": 373,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"8\") == 1\nassert solution(\"1\") == 1\nassert solution(\"12\") == 2\nassert solution(\"823\") == 9\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 1\n3 1 3\"\"\") == \"4\"\nassert solution(\"\"\"3\n1 1\n3 1 2\"\"\") == \"3\"\nassert solution(\"\"\"6\n1 1\n3 1 3 1 3\n1 1 1 1 1\n3 1 3 1 3\"\"\") == \"3\"\n\n\n\n\"\"\"\n\"\"\""
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n3 1 3') == 4\nassert solution('3\\n1 1\\n3 1 3\\n3 1 3\\n3 1 3') == 4\nassert solution('1\\n1') == 0\nassert solution('1\\n1\\n1') == 1"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n3 1 2') == '3'\nassert solution('3\\n1 1\\n3 1 3') == '4'\nassert solution('3\\n1 1\\n3 1 3') == '4'\nassert solution('3\\n1 1\\n3 1 3') == '4'\nassert solution('3\\n1 1\\n3 1 3') == '4'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1\\n3 1 2') == '3'\nassert solution('3\\n1 1\\n3 1 3') == '4'\nassert solution('2\\n1 1\\n1') == '2'\nassert solution('2\\n1 1\\n2') == '2'\nassert solution('2\\n1 1\\n2') == '2'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\nassert solution('''3\n1 1\n3 1 3\n''') == '4'\n\n\n'''\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 1\n3 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1\n3 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1\n3 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1\n1 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1\n1 1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"3\n1 1\n3 1 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"3\n1 1\n3 1 3\n\"\"\") == \"4\""
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1 1') == '3'\nassert solution('3 1 2') == '4'\nassert solution('1 1 3 1') == '4'\nassert solution('1 1 3 2') == '5'\n"
    },
    {
        "number": 374,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == ''\n\n\n'''\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('reading') == '1'\nassert solution('trading') == '0'\nassert solution('toy') == '2'\nassert solution('try') == '0'\nassert solution('trying') == '1'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3\\nreading\\ntrading\\n') == '1'\nassert solution('5\\nsweet\\nsheep\\n') == '0'\nassert solution('7\\ntoy\\ntry\\n') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('reading\\ntrading\\n') == '1'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry2\\n') == '2'\nassert solution('toy\\ntry3\\n') == '0'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('reading\\ntrading\\n') == '1\\n'\nassert solution('sweet\\nsheep\\n') == '0\\n'\nassert solution('toy\\ntry\\n') == '2\\n'\nassert solution('toy\\ntry\\n') == '2\\n'\nassert solution('toy\\ntry\\n') == '2\\n'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('reading' == 'treading') == 1\nassert solution('sweet' =='sheep') == 0\nassert solution('toy' == 'try') == 2\nassert solution('toy' == 'try') == 2\nassert solution('toy' == 'try') == 2\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('hello') == 0\nassert solution('typing') == 0\nassert solution('programming') == 0\nassert solution('programming') == 1\nassert solution('polycarpus') == 1\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('reading\\ntrading\\n') == '1'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\nassert solution('toy\\ntry\\n') == '2'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('reading\\ntrading\\n') == '1'\nassert solution('sweet\\nsheep\\n') == '0'\nassert solution('toy\\ntry\\n') == '2'\n\n'''"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('hello') == 'hello'\nassert solution('world') == 'world'\nassert solution('hello world') == 'hello world'\nassert solution('hello world') == 'hello world'\n"
    },
    {
        "number": 375,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('hello') == \"hello\"\nassert solution('hello') == \"hello\"\nassert solution('hello') == \"hello\"\nassert solution('hello') == \"hello\"\nassert solution('hello') == \"hello\"\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\\n') == '2'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\nassert solution('5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n') == '8'\nassert solution('5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n') == '8'\nassert solution('5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n') == '8'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '5'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\n\n'''\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"93\"\n\n\"\"\""
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n5\\n1 2 3 4 5\\n1 2') == '5'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\nassert solution('7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\\n') == '93'\n\n\n\n-----My Analysis-----\n\nWe can think of it as a graph problem, we are trying to find the most efficient path to go from a starting point to the ending point.\nThe problem is that we have a lot of nodes, and we do not know how many edges exist between them. We need to find the most efficient path to visit all the nodes in this graph.\nSo we will use BFS to visit all the nodes, and use a queue to store the current node that we are going to visit, and a set to store all visited nodes, we will add the current node to the visited set, then we will remove all the nodes that we are going to visit, and we will add all the edges of the current node to the queue.\n\nWe will check the incoming edges to the current node, and if we do not have them in the visited set, we will add them to the visited set, and add them to the queue.\n\nWe will repeat this process until we are done with all the nodes, and we will have a set of visited nodes and a queue, we will add all the nodes that we visited to the set, and then remove them from the queue, then we will add all the edges of all the nodes in the queue to the queue.\n\nWe will remove all the edges of the visited nodes, and then we will add all the edges of all the nodes in the queue to the queue.\n\nThe time complexity is O(n^2), and the space complexity is O(n) as we are storing all the nodes in a queue.\n\n\"\"\"\nn = int(input())\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"5\"\nassert solution(\"\"\"7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n\"\"\") == \"93\"\nassert solution(\"\"\"5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n\"\"\") == \"8\"\n\n\"\"\"\n-  The first sample is provided in the first number.  \n-  The second sample is provided in the second number.  \n-  The third sample is provided in the third number.  \n-  The fourth sample is provided in the fourth number.  \n-  The fifth sample is provided in the fifth number.  \n-  The sixth sample is provided in the sixth number.  \n-  The seventh sample is provided in the seventh number.  \n-  The eighth sample is provided in the eighth number.  \n-  The ninth sample is provided in the ninth number.  \n-  The tenth sample is provided in the tenth number.\n\"\"\"\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('0') == ''\nassert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('9') == '9'\nassert solution('17') == '17'\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n1 2\") == \"5\"\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 2\\n2 5\\n3 2\\n2 4\\n1 7\\n7 6\") == \"93\"\nassert solution(\"7\\n38 -29 87 93 39 28 -55\\n1 5\\n5 3\\n3 4\\n2 4\\n1 7\\n7 6\") == \"8\"\nassert solution(\"5\\n1 2 7 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n\") == \"8\"\nassert solution(\"6\\n1 2 4 5 6 7\\n1 5\\n5 3\\n3 4\\n2 4\\n1 7\\n7 6\") == \"9\"\n"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n'''5\n1 2 3 4 5\n1 2\n2 3\n3 4\n4 5\n''') == \"5\"\n\nassert solution(\n'''7\n38 -29 87 93 39 28 -55\n1 2\n2 5\n3 2\n2 4\n1 7\n7 6\n''') == \"93\"\n\nassert solution(\n'''5\n1 2 7 6 7\n1 5\n5 3\n3 4\n2 4\n''') == \"8\"\n\nassert solution(\n'''10\n2 -3 -5 -7 -9 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -"
    },
    {
        "number": 376,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2') == '2'\nassert solution('1 2 3 4 5 6 7 8 9') == '93'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50') == '93'\nassert solution('5 1 2 3 4') == '2'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('7 4\\n') == '3'\nassert solution('6 2\\n') == '2'\nassert solution('3 0\\n') == '1'\nassert solution('2 2\\n') == '0'\nassert solution('3 1\\n') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('7 2') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3'\nassert solution('1 4') == '0'\nassert solution('0 0') == '1'\nassert solution('3 2') == '0'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('2 0') == '0'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n\n'''\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7 4') == '3'\nassert solution('6 2') == '2'\nassert solution('3 0') == '1'\nassert solution('2 2') == '0'\nassert solution('5 9') == '3'\n"
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"3\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n\"\"\""
    },
    {
        "number": 377,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''7 4''') == '3'\nassert solution('''6 2''') == '2'\nassert solution('''3 0''') == '1'\nassert solution('''2 2''') == '0'\nassert solution('''1 1''') == '0'"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''117 3''') == '9'\nassert solution('''237 7''') == '1'\nassert solution('''15 2''') == '2'\nassert solution('''15 4''') == '1'\nassert solution('''15 7''') == '1'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"999 99\") == \"1\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"117 3\") == \"9\"\nassert solution(\"237 7\") == \"1\"\nassert solution(\"15 2\") == \"2\"\nassert solution(\"15 4\") == \"0\"\nassert solution(\"15 4\") == \"1\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3, 3') == '0'\nassert solution('7, 3') == '1'\nassert solution('7, 7') == '0'\nassert solution('7, 1') == '1'\nassert solution('7, 7') == '0'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\nassert solution('1000000000 1000000000') == '99999999999999999999999'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('117 3') == '9'\nassert solution('237 7') == '1'\nassert solution('15 2') == '2'\nassert solution('15 3') == '1'\nassert solution('15 7') == '1'\n"
    },
    {
        "number": 378,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''117 3''') == '9'\nassert solution('''237 7''') == '1'\nassert solution('''15 2''') == '2'\nassert solution('''32 5''') == '3'\nassert solution('''256 3''') == '2'\n'''\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 3\\nXXX\\nXXX\\n') == 'YES'\nassert solution('2 2\\n..X\\nXX\\n') == 'NO'\nassert solution('5 5\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n') == 'YES'\nassert solution('5 5\\n..X\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n') == 'NO'\nassert solution('5 5\\n.X\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n') == 'NO'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nXXX\\nXXX\\n\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\\n\") == \"NO\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\\n\") == \"YES\"\n\n\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\n\n\n-----"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n\n\n\"\"\"\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 5\") == \"YES\"\n\n\n\n'''\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('2 2') == 'NO'\nassert solution('5 5') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('2 4') == 'YES'\n"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nXXX\\nXXX\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\") == \"NO\"\nassert solution(\"5 5\\n.....\\n..X..\\n.....\\n.....\\n.....\\n\") == \"YES\"\n\n\n-----Best Practice-----"
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(input) == output\n\"\"\""
    },
    {
        "number": 379,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nXXX\\nXXX\\n\") == \"YES\"\nassert solution(\"2 2\\n.X\\nXX\\n\") == \"YES\"\nassert solution(\"3 2\\n.X\\nXX\\n\") == \"YES\"\nassert solution(\"2 3\\n.X\\n.X\\n\") == \"YES\"\nassert solution(\"4 3\\n.X\\n.X\\n.X\\n\") == \"YES\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 -1\\n1 1\\n1 2') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\nassert solution('1 -1\\n-1 3\\n4 3') == '3'\nassert solution('1 1\\n2 3\\n3 2') == '3'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 -1\\n1 1\\n1 2\\n') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\nassert solution('1 -1\\n-1 3\\n4 3\\n') == '2'\nassert solution('1 1\\n2 3\\n3 2\\n') == '3'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 -1\\n1 1\\n1 2\\n\") == \"1\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\\n\") == \"2\"\nassert solution(\"1 1\\n2 3\\n3 2\\n\") == \"3\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\\n\") == \"2\"\nassert solution(\"-1 -1\\n-1 3\\n4 3\\n\") == \"2\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 -1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"-1 -1\") == \"2\"\nassert solution(\"-1 3\") == \"3\"\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''-1 -1\\n1 1\\n1 2\\n') == 1\nassert solution('1 1\\n1 2\\n1 3\\n') == 2\nassert solution('-1 -1\\n-1 3\\n4 3\\n') == 3\nassert solution('1 1\\n2 3\\n3 2\\n') == 3\nassert solution('1 1\\n-1 -1\\n1 2\\n') == 2\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 -1\n1 1\n1 2''') == '1'\nassert solution('''-1 -1\n-1 3\n4 3''') == '2'\nassert solution('''1 1\n2 3\n3 2''') == '3'\nassert solution('''-5 -5\n5 5\n10 10''') == '4'\nassert solution('''-5 -5\n5 5\n10 10''') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''-1 -1\n1 1\n1 2\n''') == '1'\nassert solution('''-1 -1\n-1 3\n4 3\n''') == '2'\nassert solution('''1 1\n2 3\n3 2\n''') == '3'\nassert solution('''-1 -1\n-1 3\n4 3\n''') == '3'\nassert solution('''1 1\n2 3\n3 2\n''') == '2'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 -1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('-1 -1') == '1'\nassert solution('-1 3') == '1'\n"
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 -1\\n1 1\\n1 2') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\nassert solution('-1 -1\\n1 2\\n2 1') == '3'\n\"\"\""
    },
    {
        "number": 380,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 -1\\n1 1\\n1 2') == '1'\nassert solution('-1 -1\\n-1 3\\n4 3') == '2'\nassert solution('1 1\\n2 3\\n3 2') == '3'\nassert solution('1 2\\n2 3\\n3 4') == '1'\n\n\n\"\"\""
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1\\n2 1\") == \"NO\"\nassert solution(\"1\\n2\\n3 1\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4 2\\n5 3\") == \"NO\"\nassert solution(\"1\\n2\\n3\\n4\\n5 3\\n6 4\\n7 4\\n8 1\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2') == \"NO\\n2 1\"\nassert solution('1\\n2\\n2') == \"YES\\n1 2\\n2 1\"\nassert solution('2\\n3\\n3') == \"NO\\n2 3\\n1 2\"\nassert solution('1\\n1\\n3') == \"NO\\n2 1\\n3 1\"\nassert solution('1\\n1\\n1') == \"YES\\n2 1\\n1 1\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1') == \"YES\\n2 1\"\nassert solution('2') == \"YES\\n1 2\"\nassert solution('3') == \"NO\"\nassert solution('4') == \"YES\\n2 2\\n1 3\"\nassert solution('5') == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 1\") == \"YES 1\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"2 1 2\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"6 1\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\\n2 1\"\n\n-----Test-----\n\ncheck(solution, stdin)\n\n-----Solutions-----"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2 1\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2 1') == 'NO'\nassert solution('2 2') == 'NO'\nassert solution('1 2') == 'YES'\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"2 1\") == \"NO\"\nassert solution(\"2 2 2\") == \"NO\"\nassert solution(\"2 2 3\") == \"NO\"\n"
    },
    {
        "number": 381,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2 1') == 'NO'\nassert solution('1 2') == 'YES'\nassert solution('1 2 1') == 'NO'\nassert solution('2 3 2') == 'NO'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 2 4\\ncodeforces\\na\\nb\\na\\nb\\n') == '0\\n1\\n0\\n1'\nassert solution('3 2 4\\ncodeforces\\na\\nb\\na\\nb\\n') == '0\\n1\\n0\\n1'\n\n\n\"\"\"\n\ns, t, q = map(int, input().split())\ns_list = list(input())\nt_list = list(input())\nqueries = []\nfor _ in range(q):\n    l, r = map(int, input().split())\n    queries.append([l, r])"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\""
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3 5 2') == '0\\n0\\n0'\nassert solution('15 2 3') == '0\\n1\\n0\\n1'\nassert solution('aaa') == '0\\n0\\n0\\n0'\nassert solution('baaab') == '0\\n1\\n0\\n0'\nassert solution('1 15') == '0\\n0\\n0\\n0'\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"10 3 4\") == '0\\n1\\n0\\n1'\n\nassert solution(\"codeforces\") == '0\\n1\\n0\\n1'\n\nassert solution(\"for\") == '0\\n1\\n0\\n1'\n\nassert solution(\"ba\") == '0\\n1'\n\nassert solution(\"baaab\") == '0\\n0\\n1'"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('codeforces') == '0'\nassert solution('for') == '1'\nassert solution('aaa') == '0'\n\n'''\n"
    },
    {
        "number": 382,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n\nimport sys"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3 2') == '3'\nassert solution('3 3 2') == '1'\nassert solution('5 5 2') == '7'\nassert solution('4 3 2') == '6'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('1 3 2') == '3'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"6\"\nassert solution(\"4 5 2\") == \"7\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"6\"\nassert solution(\"4 5 2\") == \"7\"\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '7'\nassert solution(input()) == '8'"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3 3 2''') == '3'\nassert solution('''3 3 3''') == '1'\nassert solution('''4 3 2''') == '6'\nassert solution('''4 5 2''') == '7'\nassert solution('''3 1 2''') == '1'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == '6'\n\n\"\"\"\n\nn, k, d = map(int, stdin.split())\ns = (n+k-2)*(n-1)/2\nprint(int(s + d)%1000000007)\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3 2') == '3'\nassert solution('3 3 3') == '1'\nassert solution('4 3 2') == '6'\nassert solution('4 5 2') == '7'\nassert solution('4 6 2') == '9'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3 2''') == '3'\nassert solution('''3 3 3''') == '1'\nassert solution('''4 3 2''') == '6'\nassert solution('''4 5 2''') == '7'\nassert solution('''1 1 1''') == '1'\n"
    },
    {
        "number": 383,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"6\"\nassert solution(\"4 5 2\") == \"7\"\nassert solution(\"5 4 1\") == \"6\"\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"3\\nBBW\") == \"1\\n2\"\nassert solution(\"4\\nBBBB\") == \"3\\n1 1 1\"\nassert solution(\"5\\nBWBWB\") == \"0\\n4 1 3\"\nassert solution(\"13\\nWBBBBWWBWBBBW\") == \"3\\n4 1 3\"\nassert solution(\"7\\nWWWWWWWW\") == \"0\\n0 0 0 0 0 0\"\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '3',\n    'BBW',\n])) == '\\n'.join([\n    '1',\n    '2',\n])\nassert solution('\\n'.join([\n    '5',\n    'BWBWB',\n])) == '\\n'.join([\n    '3',\n    '1 1 1',\n])\nassert solution('\\n'.join([\n    '4',\n    'WWWW',\n])) == '\\n'.join([\n    '0',\n    '4 1 3',\n])\nassert solution('\\n'.join([\n    '13',\n    'WBBBBWWBWBBBW',\n])) == '\\n'.join([\n    '3',\n    '4 1 3',\n])\nassert solution('\\n'.join([\n    '12',\n
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3\nBBW\n''') == '1\\n2\\n'\nassert solution('''5\nBWBWB\n''') == '3\\n1 1 1\\n'\nassert solution('''4\nWWWW\n''') == '0\\n4\\n1 1 1\\n'\nassert solution('''13\nWBBBBWWBWBBBW\n''') == '3\\n4 1 3\\n'\nassert solution('''42\n
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input(\"\")) == \"\"\nassert solution(input(\"\\n\")) == \"\"\nassert solution(input(\"\\n\\n\")) == \"\"\nassert solution(input(\"\\n\\n\\n\\n\")) == \"\"\nassert solution(input(\"\\n\\n\\n\\n\\n\")) == \"\""
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('B') == '1'\nassert solution('WWW') == '0'\nassert solution('BBWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3''') == '''1'''\nassert solution('''BBW''') == '''1'''\nassert solution('''BWBWB''') == '''1'''\nassert solution('''WWWW''') == '''0'''\nassert solution('''BWWWW''') == '''3'''\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3''') == '1'\nassert solution('''BBW''') == '1'\nassert solution('''5''') == '1'\nassert solution('''BWBWB''') == '3'\nassert solution('''WWWW''') == '0'\n"
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('BBW') == ''\nassert solution('BWBWBW') == ''\nassert solution('WWWWWWWWWWWWWWW') == ''\nassert solution
    },
    {
        "number": 384,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"BBBB\") == \"4\"\nassert solution(\"WBBBBWWBWBBBW\") == \"4 1 3\"\nassert solution(\"WWWW\") == \"0\"\nassert solution
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"8 4 5\") == \"(()()())\"\nassert solution(\"12 5 3\") == \"()(())\"\nassert solution(\"8 8 8\") == \"()()()\"\nassert solution(\"(())()\") == \"(())(())\"\nassert solution(\"(())()\") == \"(())(())\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n\"\"\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"(()())(())\") == \"()()()\"\nassert solution(\"()()()\") == \"\"\nassert solution(\"()(())\") == \"(()())\"\nassert solution(\"(()())\") == \"()()()\"\nassert solution(\"()(())\") == \"()()()\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input_data) == '(()())'\n\nassert solution(input_data_2) == '(()())'\n\nassert solution(input_data_3) == '(()())(())'\n\nassert solution(input_data_4) == '()()'\n\nassert solution(input_data_5) == '(()(()))'"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"8 4 5\") == \"()\"\nassert solution(\"12 5 3\") == \"(()())()\"\nassert solution(\"8 8 8\") == \"()()\"\nassert solution(\"12 5 3\") == \"(()())()\"\n\n\"\"\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 4 5\") == \"()\"\nassert solution(\"12 5 3\") == \"(()())\"\nassert solution(\"12 5 3\") == \"(()())\"\n\n\n\n-----\n\nWe can solve this question easily using dynamic programming, since the result is the same for each operation, the number of different results for each operation equals to the number of different results for each operation + 1, because the cursor doesn't move over the right end of the bracket sequence, and we don't delete the whole sequence. However, there is no unique way to get the number of different results for each operation, so we need to see which of the previous results is the most suitable for the current one.\n\nWith the given brackets and operations, we can get the number of different results for each operation by calculating the number of possible candidates for each operation by considering the previous results for each operation:\n\n1) We can get the number of candidates for each operation by considering the number of candidates for the operation of the previous result:\n\nThe number of possible candidates is the sum of the number of candidates of each operation of the previous result, where the result of the current operation is replaced by the bracket that is to the right of the current position: \n\nthe number of possible candidates for the current operation is the sum of the number of candidates for each operation of the previous result where the current operation is replaced by the bracket to the right of the current position and the previous operation is replaced by the bracket to the left of the current position,\n\n2) The number of candidates for each operation is the sum of the number of candidates for each operation of the previous result where the current operation is replaced by the bracket to the left of the current position:\n\nthe number of possible candidates for the current operation is the sum of the number of candidates for each operation of the previous result where the current operation is replaced by the bracket to the left of the current position and the previous operation is replaced by the bracket to the right of the current position.\n\nIn the example above, there are 3 possible candidates for the current operation:\n\n1) the previous result was replaced by the bracket to the right of the current position (the replacement of the result by the bracket to the right of the current position is possible because the cursor doesn't move over the right end of the bracket sequence),\n2) the previous result was replaced by the bracket to the left of the current position (the replacement of the result by the bracket to the left of the current position is possible because the cursor doesn't move over the left end of the bracket sequence),\n3) the previous result was replaced by the bracket that is to the right of the current position (the replacement of the result by the bracket to the right of the current position is not possible because the cursor moves over the right end of the bracket sequence).\n\nThus, the number of possible candidates for the current operation is the sum of the number of possible candidates for each operation of the previous result where the current operation is replaced by the bracket to the left of the current position and the previous operation is replaced by the bracket to the right of the current position.\n\nFor the example above, the result is the number of possible candidates for the current operation:\n\n1) The previous result was replaced by the bracket to the right of the current position (the replacement of the result by the bracket to the right of the current position is possible because the cursor doesn't move over the right end of the bracket sequence),\n2) The previous result was replaced by the bracket to the left of the current position (the replacement of the result by the bracket to the left of the current position is possible because the cursor doesn't move over the left end of the bracket sequence),\n3) The previous result was replaced by the bracket that is to the right of the current position (the replacement of the result by the bracket to the right of the current position is not possible because the cursor moves over the right end of the bracket sequence).\n\nIn the example above, the result is the number of possible candidates for the current operation:\n\n1) The previous result was replaced by the bracket to the right of the current position (the replacement of the result by the bracket to the right of the current position is possible because the cursor doesn't move over the right end of the bracket sequence),\n2) The previous result was replaced by the bracket to the left of the current position (the replacement of the result by the bracket to the left of the current position is possible because the cursor doesn't move over the left end of the bracket sequence),\n3) The previous result was replaced by the bracket that is to the right of the current position (the replacement of the result by the bracket to the right of the current position is not possible because the cursor moves over the right end of the bracket sequence).\n\nThus, the number of possible candidates for the current operation is the sum of the number of possible candidates for each operation of the previous result where the current operation is replaced by the bracket to the left of the current position and the previous operation is replaced by the bracket to the right of the current position.\n\nThe number of possible candidates for each operation is the sum of the number of possible candidates for each operation of the previous result where the current operation is replaced by the bracket to the left of the current position and the previous operation is replaced by the bracket to the right of the current"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('8 4 5') == '()'\nassert solution('12 5 3') == '()()()'\nassert solution('8 8 8') == '()()()'\nassert solution('(()())') == '(()())(()())'\nassert solution('(()())(()') == '()(())(()())('\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"8 4 5\\n(())()()\\nRDLD\") == \"()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()(()))\"\nassert solution(\"8 8 8\\n(())()()\\nLLLLLLDD\") == \"()()\"\nassert solution(\"12 5 3\\n((()())(()))\\nRRDLD\") == \"(()(()))\""
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"5 4 5\") == \"()\"\nassert solution(\"2 4 4\") == \"()()\"\nassert solution(\"12 5 3\") == \"(()(()))\"\nassert solution(\"8 8 8\") == \"(()())(())\"\nassert solution(\"5 1 6\") == \"(())\"\n"
    },
    {
        "number": 385,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"4 2 5\") == \"()()()\"\nassert solution(\"8 8 8\") == \"()()()\"\nassert solution(\"12 5 3\") == \"(()())(())\"\nassert solution(\"()()()\") == \"()()()\"\nassert solution(\"LLLLLLDD\") == \"(()(()))\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N') == '17'\nassert solution('1\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N') == '17'\nassert solution('2\\n>100 Y\\n< -100 Y') == 'Impossible'\nassert solution('2\\n>100 Y\\n< -100 Y') == 'Impossible'\nassert solution('2\\n>100 Y\\n< -100 Y') == 'Impossible'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Impossible'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\nassert solution('''\n2\n> 100 Y\n< -100 Y\n''') == 'Impossible'\nassert solution('''\n1\n> 50 Y\n< -50 N\n''') == '50'\nassert solution('''\n2\n> 50 Y\n< -50 N\n''') == '50'\nassert solution('''\n3\n> 10 Y\n< -10 N\n<= -5 N\n> 20 Y\n''') == '20'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n''') == '17'\n\nassert solution('''\n2\n> 100 Y\n< -100 Y\n''') == 'Impossible'\n\nprint(solution('''\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n'''))\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1\\n2>1\\n3>2\\n4<3\\n5<4\\n6<5\\n7>6\\n8>7\\n9>8\\n10>9\\n11<10') == '17'\nassert solution('1\\n2>1\\n3>2\\n4<3\\n5<4\\n6<5\\n7>6\\n8>7\\n9>8\\n10>9\\n11<10') == '17'\nassert solution('2\\n1>2\\n2>1\\n3>2\\n4<3\\n5<4\\n6<5\\n7>6\\n8>7\\n9>8\\n10>9\\n11<10') == 'Impossible'\nassert solution('2\\n1>2\\n2>1\\n3>2\\n4<3\\n5<4\\n6<5\\n7>6\\n8>7\\n9>8\\n10>9\\n11<10') == 'Impossible'\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4\\n>= 1 Y\\n< 3 N\\n<= -3 N\\n> 55 N\") == '17'\nassert solution(\"2\\n> 100 Y\\n< -100 Y\") == 'Impossible'\n\n\"\"\"\n\nimport sys\n\nclass Node:\n    def __init__(self, is_leaf: bool, value: int) -> None:\n        self.is_leaf = is_leaf\n        self.value = value\n        self.left = None\n        self.right = None"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\n\"4\\n\"\n\">= 1 Y\\n\"\n\"< 3 N\\n\"\n\"<= -3 N\\n\"\n\"> 55 N\"\n) == 17\nassert solution(\n\"2\\n\"\n\"> 100 Y\\n\"\n\"< -100 Y\"\n) == \"Impossible\"\n\"\"\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n>= 1 Y\n< 3 N\n<= -3 N\n> 55 N\n\"\"\") == \"17\"\nassert solution(\"\"\"\n2\n> 100 Y\n< -100 Y\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n10\n>= 0 Y\n< 0 N\n<= 0 N\n> 0 Y\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n2\n> -2 Y\n< 0 N\n<= 0 N\n> -2 Y\n\"\"\") == \"17\"\nassert solution(\"\"\"\n1\n<=-1 N\n\"\"\") == \"1\"\n"
    },
    {
        "number": 386,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 4\\n') == '4'\nassert solution('5 3\\n') == '5'\nassert solution('5 3\\n') == '5'\nassert solution('6 9\\n') == '2'\nassert solution('5 4\\n') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2 4''') == '4'\nassert solution('''5 3''') == '5'\nassert solution('''5 3''') == '5'\nassert solution('''5 5''') == '5'\nassert solution('''5 9''') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('1 5') == '1'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('5 4') == '5'\nassert solution('5 4') == '5'\nassert solution('5 4') == '5'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n') == '4'\nassert solution('5 3\\n') == '5'"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 4') == '4'\nassert solution('5 3') == '5'\nassert solution('5 3') == '5'\nassert solution('6 3') == '6'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 387,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\n\n\n\n\"\"\""
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\nNO NO\\n\") == \"Na Na Na\"\nassert solution(\"1 2\\nNO\\n\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"2 4\\nNO NO YES YES NO\\n\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"2 2\\nNO\\n\") == \"Na Na Na\"\nassert solution(\"5 2\\nNO NO YES YES NO\\n\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n\"\"\""
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('''9 8\nYES NO''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('''3 2\nNO NO''') == 'Na Na Na'\nassert solution('''8 10\nNO YES''') == 'Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta'\nassert solution('''9 9\nYES YES YES YES YES YES YES YES YES YES YES YES YES YES YES''') == 'Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta Ta'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\\n\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\\n\") == \"Na Na Na\"\nassert solution(\"5 2\\nNO NO\\n\") == \"Na Na Na\"\nassert solution(\"4 1\\nYES\\n\") == \"Na Na Na\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nNO NO YES YES YES NO\") == \"Adam Bob Bob Cpqepqwer Limak Adam Bob Adam\"\nassert solution(\"9 8\\nYES NO\") == \"R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc\"\nassert solution(\"3 2\\nNO NO\") == \"Na Na Na\"\nassert solution(\"6 4\\nYES NO\") == \"S F Sf\"\nassert solution(\"2 3\\nNO NO\") == \"N N N\"\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''8 3\nNO NO YES YES YES NO\n''') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\n\nassert solution('''9 8\nYES NO\n''') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\n\nassert solution('''3 2\nNO NO\n''') == 'Na Na Na'\n'''\n\n\n-----Alternate Solutions (Shorter)-----\n\nfrom itertools import zip_longest"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('7 3\\nNO NO YES YES YES NO') == 'Adam Bob Bob Cpqepqwer Limak Adam Bob Adam'\nassert solution('8 4\\nNO NO YES YES YES NO') == 'R Q Ccccccccc Ccocc Ccc So Strong Samples Ccc'\nassert solution('2 2\\nNO NO') == 'Na Na Na'\nassert solution('5 2\\nNO NO YES YES YES NO') == 'Na Na Na'\nassert solution('3 2\\nNO NO') == 'Na Na Na'\n"
    },
    {
        "number": 388,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\n    '''15 20\n''') == '3'\n\nassert solution(\n    '''14 8\n''') == '-1'\n\nassert solution(\n    '''6 6\n''') == '0'\n\nassert solution(\n    '''6 6\n''') == '0'\n\nassert solution(\n    '''6 9\n''') == '3'"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('15 19') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\nprint(solution(stdin))\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\n\nprint('solution:', solution(stdin))\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n\n'''\n\n\nfrom collections import deque\nimport sys"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('14 8') == '3'\nassert solution('6 6') == '0'\nassert solution('15 20') == '3'\nassert solution('10 15') == '1'\nassert solution('14 18') == '3'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('15 20') == '3'\nassert solution('14 8') == '-1'\nassert solution('6 6') == '0'\nassert solution('2 7') == '5'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 389,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"15 20\") == \"3\"\nassert solution(\"14 8\") == \"-1\"\nassert solution(\"6 6\") == \"0\"\nassert solution(\"9 12\") == \"3\"\nassert solution(\"9 15\") == \"-1\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 100 1') == '101'\nassert solution('5 100 1') == '-1'\nassert solution('3 10 12') == '0'\nassert solution('3 12 1') == '0'\nassert solution('3 12 1') == '0'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input('')) == output(input(''))\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"3 10 12\") == \"0\"\nassert solution(\"5 100 1\") == \"-1\"\nassert solution(\"3 12 1\") == \"0\"\nassert solution(\"3 12 1\") == \"0\"\n\"\"\"\n\nn, a, b = (int(x) for x in stdin.split())\ncolors = [int(x) for x in stdin.split()]\ncost = 0\n\nfor i in range(0, n):\n    if colors[i] == 2:\n        cost += a\n    elif colors[i] == 1:\n        cost += b\n    else:\n        cost += 2 * min(a, b)\n        a -= 1\n        b -= 1"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10 1') == '-1'\nassert solution('0 10 1') == '101'\nassert solution('1 2 1') == '-1'\nassert solution('0 1 0') == '0'\nassert solution('2 12 1') == '-1'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''5 100 1\n0 1 2 1 2\n''') == \"101\"\nassert solution('''3 10 12\n1 2 0\n''') == \"-1\"\nassert solution('''3 12 1\n0 1 0\n''') == \"0\"\nassert solution('''4 5 2\n0 0 0 1 1\n''') == \"4\"\nassert solution('''7 4 1\n0 0 0 0 0 0 0\n''') == \"7\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5 100 1''') == '101'\nassert solution('''3 10 12''') == '-1'\nassert solution('''3 12 1''') == '0'\nassert solution('''3 12 1''') == '0'\nassert solution('''5 10 10''') == '-1'\n"
    },
    {
        "number": 390,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"bb\"\nassert solution(\"4\") == \"ww\"\nassert solution(\"5\") == \"bbww\"\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"bb\\nww\"\nassert solution(\"3\") == \"bbbb\\nwwww\\nbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\nassert solution(\"4\") == \"bbbbbbbb\\nbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\nbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''1''') == '-1'\nassert solution('''2''') == 'ww'\nassert solution('''3''') == 'bbbb'\nassert solution('''4''') == 'wwbbb'\nassert solution('''5''') == 'bbbbbb'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('\\n') == ''\nassert solution('\\n\\n') == ''\nassert solution('\\n\\n\\n') == ''\nassert solution('\\n\\n\\n\\n') == ''\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2') == 'bb'\nassert solution('3') == 'ww'\nassert solution('4') == 'wwbwwb'\nassert solution('5') == 'wwbwwbbbwwbbb'\nassert solution('6') == 'wwbwwbbbwwbbbwwbwwbbbwwbbbwwbwwbbbwwbww'\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"-\"\nassert solution(\"2\") == \"bb\\nww\"\nassert solution(\"3\") == \"bb\\nwb\\nww\"\nassert solution(\"4\") == \"bb\\nwbb\\nww\"\nassert solution(\"5\") == \"bb\\nwbbbb\\nww\"\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\"\"\") == \"\"\"-1\"\"\"\"\nassert solution(\"\"\"2\"\"\") == \"\"\"-1\n-1\n-1\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\"\"\".strip()\n\nassert solution(\"\"\"3\"\"\") == \"\"\"-1\n-1\n-1\n-1\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\n\"\"\".strip()\n\nassert solution(\"\"\"4\"\"\") == \"\"\"-1\n-1\n-1\n-1\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\n\"\"\".strip()\n\nassert solution(\"\"\"5\"\"\") == \"\"\"-1\n-1\n-1\n-1\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\nbb\nww\n\n\"\"\".strip()"
    },
    {
        "number": 391,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''1''') == 'bb'\nassert solution('''2''') == 'bb\\nww'\nassert solution('''3''') == 'ww\\nbw\\nbw'\nassert solution('''4''') == 'ww\\nbw\\nbw\\nbb'\nassert solution('''5''') == 'ww\\nbw\\nbw\\nbb\\nww'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == '6'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('7') == '1'\nassert solution('10') == '2'\nassert solution('100') == '3'\nassert solution('1000') == '4'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('101') == '101'\nassert solution('10101') == '101'\nassert solution('12') == '1'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('2') == '1'\nassert solution('1000000') == '1000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('10\\n') == '10'\nassert solution('12\\n') == '6'\nassert solution('12\\n') == '12'\nassert solution('12\\n') == '6'\nassert solution('10\\n') == '10'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n\"12\") == \"6\"\nassert solution(\n\"10\") == \"10\"\nassert solution(\n\"1\") == \"1\"\nassert solution(\n\"101\") == \"101\"\nassert solution(\n\"100000000\") == \"1\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''10''') == '10'\nassert solution('''12''') == '6'\nassert solution('''13''') == '10'\nassert solution('''14''') == '14'\nassert solution('''16''') == '8'\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 392,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('12') == '6'\nassert solution('100') == '10'\nassert solution('101') == '100'\nassert solution('1000') == '10'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(''.join(map(str,range(4)))) == 'No'\nassert solution(''.join(map(str,range(5)))) == 'Yes'\nassert solution(''.join(map(str,range(6)))) == 'No'\nassert solution(''.join(map(str,range(7)))) == 'Yes'\nassert solution(''.join(map(str,range(8)))) == 'Yes'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3') == 'Yes'\nassert solution('101') == 'No'\nassert solution('10001') == 'Yes'\nassert solution('1010') == 'Yes'\nassert solution('01001') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"No\"\n\nassert solution(\"1000\") == \"Yes\"\n\nassert solution(\"10000\") == \"No\"\n\nassert solution(\"00100\") == \"Yes\"\n\nassert solution(\"0011001010111\") == \"Yes\""
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''\n0\n''') == \"No\"\nassert solution('''\n0\n0\n0\n0\n0\n''') == \"No\"\nassert solution('''\n0\n1\n0\n1\n0\n0\n''') == \"Yes\"\nassert solution('''\n0\n1\n0\n1\n1\n''') == \"Yes\"\nassert solution('''\n0\n0\n0\n0\n0\n0\n''') == \"Yes\"\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"10001\") == \"No\"\nassert solution(\"100001\") == \"No\"\nassert solution(\"10101\") == \"No\"\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3') == 'No'\nassert solution('101') == 'Yes'\nassert solution('1011') == 'No'\nassert solution('10001') == 'Yes'\nassert solution('10101') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('10001') == 'No'\nassert solution('1011') == 'No'\nassert solution('1010111') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('10001') == 'No'\nassert solution('000111') == 'Yes'\nassert solution('000000') == 'No'\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"1011\") == \"No\"\nassert solution(\"10001\") == \"No\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 393,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('10101') == 'Yes'\nassert solution('101') == 'No'\nassert solution('10001') == 'No'\nassert solution('10111') == 'Yes'\nassert solution('01001') == 'No'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''5''') == '''5\n1 2 3 4 5'''\nassert solution('''5\n1 2 3 4 5''') == '''5\n1 2 3 4 5'''\nassert solution('''3''') == '''1\n3'''\nassert solution('''3\n1 3 5''') == '''2\n3 5'''\nassert solution('''3\n1 3 5 6 8''') == '''2\n3 5'''\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\") == \"1\\n1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n1 2 3 4 5\"\nassert solution(\"5\\n1 3 5 6 8\") == \"2\\n3 5\"\nassert solution(\"3\\n1 5 3\") == \"1\\n3\"\n\n\n-----\n\n\"\"\""
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8\\n') == '2\\n3 5'\nassert solution('3\\n1 5 3\\n') == '1\\n3'\nassert solution('3\\n1 5 3\\n') == '1\\n3'\nassert solution('1\\n0\\n') == '1'\n\"\"\"\n\nfrom sys import stdin, stdout"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''5''') == '''5'''\nassert solution('''1 2 3 4 5''') == '''5'''\nassert solution('''1 3 5 6 8''') == '''2 5'''\nassert solution('''1 3 5 6 8''') == '''2 5'''\nassert solution('''1 3 5 6 8''') == '''2 5'''\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n1') == '1\\n'\nassert solution('2\\n1 2') == '2\\n1 2'\nassert solution('3\\n1 2 3') == '2\\n1 3'\nassert solution('5\\n1 2 3 4 5') == '2\\n1 3 5'\nassert solution('3\\n1 3 5 6') == '1\\n3 5'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5'\nassert solution('3\\n1 5 3') == '1\\n3'\nassert solution('3\\n1 5 3') == '1\\n3'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5'\nassert solution('3\\n1 5 3') == '1\\n3'\nassert solution('3\\n1 5 3') == '1\\n3'\nassert solution('3\\n1 5 3') == '1\\n3'\n"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('5\\n1 3 5 6 8') == '2\\n3 5'\nassert solution('3\\n1 5 3') == '1\\n3'\nassert solution('3\\n1 3 5') == '1\\n3'\nassert solution('1000\\n1234567890') == '27\\n1234567890'\n\"\"\"\n\nimport sys\nfrom math import floor, sqrt"
    },
    {
        "number": 394,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('1 2 3 4 5') == '5'\nassert solution('5') == '5'\nassert solution('1 3 5 6 8') == '2'\nassert solution('1 3 5 6 8') == '2'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 99') == 'NO'"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''1 3 2 1 2 1'''\n    ) == \"YES\"\n\nassert solution(\n'''1 1 1 1 1 99'''\n    ) == \"NO\"\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 1 1 99\") == \"NO\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(1,3,2,1,2,1) == \"YES\"\nassert solution(1,1,1,1,1,99) == \"NO\"\n\n\n\"\"\"\nfrom collections import Counter"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1 2') == 'YES'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1 1') == 'YES'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 3 2 1 2 1') == 'YES'\nassert solution('1 1 1 1 1 99') == 'NO'\nassert solution('1 1 1 1 1 1') == 'NO'\nassert solution('1 1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1 2') == 'YES'\n"
    },
    {
        "number": 395,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n\nprint('all tests passed successfully')\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('1 2000000000') == '326'\n\"\"\""
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('10 1000000') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 10''') == '7'\nassert solution('''100 200''') == '5'\nassert solution('''1 2000000000''') == '326'\nassert solution('''1 1000''') == '3467'\n\n'''"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nprint(solution(stdin))\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"7\"\nassert solution(\"100 200\") == \"5\"\nassert solution(\"1 2000000000\") == \"326\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\n\n\"\"\"\n"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('8 15') == '1'\nassert solution('1 2000000000') == '326'\n\n\"\"\""
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 10') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'"
    },
    {
        "number": 396,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('100 200') == '7'\nassert solution('100 200') == '5'\nassert solution('1 2000000000') == '326'\nassert solution('100 200') == '7'\nassert solution('1 2000000000') == '326'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"9 11\") == \"4\"\nassert solution(\"5 0\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == 0\nassert solution(\"9 11\") == 4\nassert solution(\"5 0\") == 3\nassert solution(\"3 2\") == 1\nassert solution(\"3 2\") == 1\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''1 1''') == '0'\nassert solution('''9 11''') == '4'\nassert solution('''5 0''') == '3'\nassert solution('''3 2''') == '1'\nassert solution('''7 0''') == '5'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == ''\nassert solution('''9 11''') == '4'\nassert solution('''5 0''') == '3'\nassert solution('''3 2''') == '1'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\nassert solution('1 0') == '0'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0'\nassert solution('9 11') == '4'\nassert solution('5 0') == '3'\nassert solution('3 2') == '1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 397,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5 3 2\\n\") == \"NO\"\nassert solution(\"4\\n2 1 3 2\\n\") == \"NO\"\nassert solution(\"4\\n3 2 1 2\\n\") == \"YES\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"NO\"\nassert solution(\"1\\n1\\n\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3 2 4\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 5 3 2 4\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 4 2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 3 2 4\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == 'NO'\nassert solution('2\\n1') == 'NO'\nassert solution('2\\n1 3') == 'YES'\nassert solution('2\\n1 2') == 'NO'\nassert solution('2\\n2 1') == 'NO'\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('5\\n1 5 3 2 4') == 'YES'\nassert solution('3\\n4 1 2') == 'NO'\nassert solution('2\\n2 1') == 'YES'\nassert solution('2\\n1 1') == 'NO'\nassert solution('2\\n1 1') == 'NO'\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5\\n1 5 3 2 4\\n') == 'YES'\nassert solution('3\\n4 1 2\\n') == 'NO'\nassert solution('3\\n5 2 1\\n') == 'NO'\nassert solution('10\\n
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"YES\"\nassert solution(\"4\\n3 2 1\") == \"NO\"\nassert solution(\"4\\n5 4 3 2\") == \"YES\"\nassert solution(\"4\\n5 4 3 4\") == \"YES\"\nassert solution(\"4\\n3 4 2 1\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('inputs/verdicts/test_1.txt') == 'NO'\nassert solution('inputs/verdicts/test_2.txt') == 'YES'\nassert solution('inputs/verdicts/test_3.txt') == 'NO'\nassert solution('inputs/verdicts/test_4.txt') == 'YES'\nassert solution('inputs/verdicts/test_5.txt') == 'YES'\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"1 2 2 1\") == \"NO\"\nassert solution(\"1 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"6\\n2 1 2 4 3 4\") == \"YES\"\nassert solution(\"3\\n1 1 1\") == \"NO\"\nassert solution(\"1\\n1\") == \"YES\"\nassert solution(\"5\\n1 5 3 2 4\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 398,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") is None\nassert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\nassert solution('1000 5') == 'Yes'\nassert solution('1000 7') == 'No'\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''6 3''') == 'Yes'\nassert solution('''4 2''') == 'No'\nassert solution('''1000 1001''') == 'Yes'\nassert solution('''1000 1''') == 'No'\nassert solution('''5 1''') == 'No'\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\nassert solution(\"10 100\") == \"No\"\nassert solution(\"1 1\") == \"Yes\""
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('6 3') == \"Yes\"\nassert solution('4 2') == \"No\"\nassert solution('1000 1001') == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\n\n\n\n-----\n\nTo get to a solution, we have to think about how to apply the machine to the original toy, and then apply it to copies. \n\nLet's see what happens when we apply the machine twice to the original toy.\n\n[Image] \n\nNow, we have two copies of the original toy, and each of them has a number of copies equal to the number of copies of the original toy plus 1.\n\n[Image] \n\nSo, if we want to clone as many copies as possible, we have to use the machine, and in our opinion, we have to use it twice.\n\n[Image] \n\nBut, we can't use the machine to clone more copies than we have copies.\n\n[Image] \n\nIf we use the machine to clone more copies than we have copies, we can't use the machine to clone anything.\n\n[Image] \n\nSo, we can apply the machine to the original toy, and to copies, but not to anything else.\n\nWe can apply the machine to the original toy, and to copies, and we will have the desired configuration.\n\n[Image] \n\nAlso, we can apply the machine to the original toy, and to copies, and we will have the desired configuration.\n\n[Image] \n\nWe can apply the machine to the original toy, and to copies, and we will have the desired configuration.\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('6 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('1000 1001') == 'Yes'\nassert solution('1000 1000000001') == 'Yes'\nassert solution('1000000000 1000000000') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"6 3\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\nassert solution(\"1000 1001\") == \"Yes\"\n\"\"\"\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''6 3''') == 'Yes'\nassert solution('''4 2''') == 'No'\nassert solution('''1000 1001''') == 'Yes'\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 399,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 4\\n7 9') == '2'\nassert solution('3 8\\n17 15 19') == '5'"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == ''\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == solution(stdin)\n\n\"\"\"\n\nimport sys\n\nn, k = [int(x) for x in sys.stdin.readline().split()]\na = [int(x) for x in sys.stdin.readline().split()]\n\ncount = 0\n\nwhile k > 0:\n    for i in range(n):\n        if a[i] % 10 == 0:\n            a[i] += 1\n            k -= 1\n            count += 1\n            break\n        if i == n - 1:\n            count = -1\n            break\n\nprint(count)\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 4\\n7 9\\n') == '2'\nassert solution('3 8\\n17 15 19\\n') == '5'\nassert solution('2 2\\n99 100\\n') == '20'\nassert solution('3 4\\n10 15 10\\n') == '5'\nassert solution('1 2\\n0\\n') == '0'\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 8\") == \"5\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 400,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\n>>> def solution(stdin: str) -> str:\n...     pass\n...     return stdout\n...\n>>> assert solution(stdin) == stdout\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4') == '1'\nassert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 2\\n5 7 6\") == \"25\"\nassert solution(\"8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8') == '1'\nassert solution('7 6 5 4 3 2 1\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('4 3\\n4 3\\n5 7 6') == '4'\nassert solution('1 2\\n3 4') == '3'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1\\n42\\n24567\\n\") == \"1\"\nassert solution(\"2\\n8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\nassert solution(\"1\\n42\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\nassert solution(\"1\\n42\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\nassert solution(\"1\\n42\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n\") == \"1\"\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6\\n') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n') == '1'\nassert solution('3 3\\n1 2 3\\n5 7 6\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('8 7 6 5 4 3 2 1') == '1'\nassert solution('1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1') == '1'\nassert solution('1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 2\n4 2\n5 7 6\n''') == '25'\nassert solution('''4 2\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1\n''') == '1'\n'''\n'''\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2 3\n4 2\n5 7 6''') == '25'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1''') == '1'\nassert solution('''1 1\n1 1\n1 1''') == '1'\nassert solution('''6 9\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1''') == '1'\nassert solution('''1 2\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 2\\n5 7 6\\n') == '25'\nassert solution('8 8\\n1 2 3 4 5 6 7 8\\n8 7 6 5 4 3 2 1\\n') == '1'\nassert solution('5 2\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n"
    },
    {
        "number": 401,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''2 3\n4 2\n5 7 6''') == '25'\nassert solution('''8 8\n1 2 3 4 5 6 7 8\n8 7 6 5 4 3 2 1''') == '1'"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '2'\nassert solution('5 2') == '2'\nassert solution('4 2') == '2'\nassert solution('5 4') == '2'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('1 1') == '1'\nassert solution('10 1') == '10'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 4\") == \"5\"\nassert solution(\"1 6\") == \"7\"\nassert solution(\"1 10\") == \"11\"\nassert solution(\"1 12\") == \"13\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"4\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\nassert solution('5 1') == '5'\nassert solution('7 1') == '7'\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 222') == '2'\nassert solution('4 190') == '4'\nassert solution('7 1') == '7'\n\n\n\"\"\"\n"
    },
    {
        "number": 402,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"1 222\") == \"2\"\nassert solution(\"2 190\") == \"4\"\nassert solution(\"3 1\") == \"7\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"4 7\") == \"7\"\n"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 403,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution\ufffd"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('5') == '6'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '8'\nassert solution('5') == '16'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 1\nassert solution('1') == 1\nassert solution('2') == 2\nassert solution('10') == 1\nassert solution('100') == 2\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '5'\nassert solution('16') == '10'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"\"\"\"\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(10**9) == 990991\nassert solution(10**10) == 9999999\nassert solution(10**11) == 99999901\n"
    },
    {
        "number": 404,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('') is None\nassert solution('<<') == 1\nassert solution('<><>') == 2\nassert solution('<<><>>><') == 3\nassert solution('<<><<<><') == 4\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdin\n'''\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"<<><\") == \"2\"\nassert solution(\">><<\") == \"0\"\nassert solution(\">>>>>\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4''') == '2'\nassert solution('''<><''') == '2'\nassert solution('''5''') == '5'\nassert solution('''>><<''') == '5'\nassert solution('''<><>''') == '5'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\n\"\"\"\n\nfrom sys import stdin\n\nn = int(stdin.readline())\nbumpers = stdin.readline().strip()\n\npos = 0\ncounter = 0\n\nfor i in range(n):\n    if (bumpers[i] == '<'):\n        pos -= 1\n    else:\n        pos += 1\n    if (pos < 0):\n        pos = 0\n        counter += 1\n\nprint(counter)"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\n    '<><'\n) == '2'\nassert solution(\n    '<<><'\n) == '5'\nassert solution(\n    '<<<><>>'\n) == '0'\nassert solution(\n    '><<<'\n) == '1'\nassert solution(\n    '><<><'\n) == '1'\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('<<><') == 2\nassert solution('<><') == 0\nassert solution('>>>>>') == 5\nassert solution('>><<') == 0\nassert solution('<>>>>>') == 1\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') is None\nassert solution('>') == 1\nassert solution('<') == 0\nassert solution('<<><') == 2\nassert solution('>>>>>') == 5\n"
    },
    {
        "number": 405,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('<<<>') == 0\nassert solution('<<><') == 2\nassert solution('>>>>>') == 5\nassert solution('>>>><') == 2"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 4 4 2\") == \"8\"\nassert solution(\"4\\n2 2 3 5\") == \"0\""
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4\n2 4 4 2\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"4\n2 2 3 5\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"4\n100003 100004 100005 100006\n\"\"\") == \"10000800015\"\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2\\n2 4 4 2') == '8'\nassert solution('1\\n2 4 4 2') == '0'\nassert solution('2\\n2 2 3 5') == '10000800015'"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 4 4 2') == '8'\nassert solution('2 4 4 2\\n2 1 2 3 4\\n2 2 4 5 6') == '0'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"1\\n5\") == \"1\"\nassert solution(\"1\\n6\") == \"0\"\nassert solution(\"1\\n9\") == \"0\"\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n2\\n2') == '0'\nassert solution('3\\n3\\n3\\n3') == '6'\nassert solution('4\\n2\\n4\\n2') == '8'\nassert solution('4\\n2\\n4\\n3') == '10'\nassert solution('4\\n2\\n3\\n4') == '0'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\nassert solution('''4\n100003 100004 100005 100006''') == '10000800015'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 406,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''4\n2 4 4 2''') == '8'\nassert solution('''4\n2 2 3 5''') == '0'\nassert solution('''4\n100003 100004 100005 100006''') == '10000800015'"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3\nab\nde\naj''') == '47'\nassert solution('''5\nabcdef\nghij\nbdef\naccbd\ng''') == '136542'\nassert solution('''3\naa\njj\naa''') == '44'\nassert solution('''6\nqwerty\n123456\nsdfghj\nstuv\nqytrd\nzxcvbn''') == '1184'\nassert solution('''9\nabcdefgh\nijklmnop\nqrstuvw\nxyz\nzyxw\nvbnm\nqwerty''') == '15951221'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3') == '23'\nassert solution('ab') == '10'\nassert solution('c') == '3'\nassert solution('cba') == '12'\nassert solution('abcdef') == '12345'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ab') == '47'\nassert solution('abde') == '136542'\nassert solution('abcdef') == '47'\nassert solution('abcdefghij') == '136542'\nassert solution('aaaaaaaaaaaaaaa') == '55555'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3\\nab\\nde\\naj') == '47'\nassert solution('5\\nabcdef\\ngij\\nbdef\\naccbd\\ng') == '136542'\nassert solution('3\\naa\\jj\\aa') == '44'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('ab\\nde\\naj\\n') == 47\nassert solution('abcdef\\ngij\\nbdef\\naccbd\\ng\\n') == 136542\nassert solution('aab\\naba\\nab\\n') == 44\nassert solution('a\\nab\\naa\\n') == 44\nassert solution('aab\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('test') == '4'\nassert solution('ab') == '47'\nassert solution('aj') == '136542'\nassert solution('abcdef') == '14'\nassert solution('ghij') == '44'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('ab') == 47\nassert solution('aa') == 44\nassert solution('abcdef') == 136542\nassert solution('bdef') == 136542\nassert solution('abcdefghij') == 136542\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('ab') == '47'\nassert solution('de') == '136542'\nassert solution('aj') == '44'\nassert solution('abcdef') == '136542'\nassert solution('ghij') == '136542'\n"
    },
    {
        "number": 407,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('''3''') == '47'\nassert solution('''ab\nde\naj\n''') == '47'\nassert solution('''5''') == '136542'\nassert solution('''abcdef\nghij\nbdef\naccbd\ng\n''') == '136542'"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\n\nprint('Test success!')\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"2 6\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\n\"\"\""
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 6\\n') == '2'\nassert solution('4 5\\n') == '3'\n\n'''\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\nassert solution('5 6') == '3'\nassert solution('5 5') == '4'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 2') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 6') == '2'\nassert solution('4 5') == '3'\n\n\"\"\""
    },
    {
        "number": 408,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('ABBABACF') == 'YES'\nassert solution('ABABABA') == 'NO'\nassert solution('ABCDABC') == 'YES'\nassert solution('ABCDBABC') == 'NO'\nassert solution('ABBAABA') == 'NO'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\n\"\"\"\n\n\"\"\"\n----------- Approach -----------\nMy initial approach was to use the count of a substring in the string to determine if there is two different substrings in the string.\nHowever, my code was not working properly for every test.\n\nThe problem with my code is that I was counting \"AB\" and \"BA\" in a string one at a time.\nFor example, given string S = BACABBAC, the count for substrings \"AB\" and \"BA\" is in the correct position,\nbut the count for substrings \"AB\" and \"AB\" is wrong because the string contains more than one instance of \"AB\".\n\nAnother method to solve this problem is to check whether the substring \"AB\" is repeated in the string.\nIn this approach I use a set to store the substring count of each substring.\nHowever, if there is a substring \"AB\" and \"BA\" in the string, we cannot know which one is repeated.\nFor example, given string S = BACABBAC, the count for substrings \"AB\" and \"BA\" is in the correct position,\nbut the count for substrings \"AB\" and \"AB\" is wrong because the string contains more than one instance of \"AB\".\n\nThe second approach is to use a HashMap to store the substring count of each substring.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nThen we can use a HashMap to find the count for \"AB\" and \"BA\" which is in the correct position.\nHowever, if there is a substring \"AB\" and \"BA\" in the string, we cannot know which one is repeated.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nIf we use a HashMap to find the count for \"AB\" and \"BA\", we can see that the count for \"AB\" is wrong because the string contains more than one instance of \"AB\".\n\nThe third approach is to use a HashMap to store the count of each substring.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nThen we can use a HashMap to find the count for \"AB\" and \"BA\" which is in the correct position.\nHowever, if there is a substring \"AB\" and \"BA\" in the string, we cannot know which one is repeated.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nIf we use a HashMap to find the count for \"AB\" and \"BA\", we can see that the count for \"AB\" is wrong because the string contains more than one instance of \"AB\".\n\nThe fourth approach is to use a HashMap to store the substring count of each substring.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nThen we can use a HashMap to find the count for \"AB\" and \"BA\" which is in the correct position.\nHowever, if there is a substring \"AB\" and \"BA\" in the string, we cannot know which one is repeated.\nFor example, given string S = BACABBAC, the substring count for each substring is {'B': 1, 'C': 1, 'A': 2}.\nIf we use a HashMap to find the count for \"AB\" and \"BA\", we can see that the count for \"AB\" is wrong because the string contains more than one instance of \"AB\".\n\nThe code below checks the example given.\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('AXBYBXA') == 'NO'\nassert solution('ACABBC') == 'NO'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n\n\"\"\"\n\n\"\"\"\n--------------------------------------------------------------------------------\n\n\"\"\""
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''ABA''') == 'NO'\nassert solution('''ABBA''') == 'YES'\nassert solution('''BACFAB''') == 'NO'\nassert solution('''AXBYBXA''') == 'NO'\nassert solution('''BABA''') == 'YES'\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"NO\"\nassert solution(\"BACFAB\") == \"YES\"\nassert solution(\"AXBYBXA\") == \"NO\"\nassert solution(\"ABABABA\") == \"YES\"\nassert solution(\"BABABA\") == \"NO\"\n"
    },
    {
        "number": 409,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('ABA') == 'NO'\nassert solution('BACFAB') == 'YES'\nassert solution('AXBYBXA') == 'NO'\nassert solution('ABBCBA') == 'YES'\nassert solution('ABBCCAB') == 'NO'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 3 3\") == \"NO\"\nassert solution(\"2 1 6\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"YES\"\nassert solution(\"1 1 1 3 3\") == \"NO\"\nassert solution(\"2 1 3\") == \"NO\"\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3 4\\n1\\n5 5\") == \"YES\"\nassert solution(\"6\\n1 2 2 2 1 2\\n2\\n5 5\") == \"YES\"\nassert solution(\"5\\n1 1 1 3 3\\n1\\n15\") == \"NO\"\nassert solution(\"6\\n1 2 3 4 5\\n1\\n15\") == \"NO\""
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5''') == 'YES'\nassert solution('''5\n1 1 1 3 3\n1\n15''') == 'YES'\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6''') == 'NO'\nassert solution('''5\n1 1 1 3 3\n5\n2 1 6''') == 'NO'\nassert solution('''5\n1 2 3 4 5\n1\n10\n''') == 'NO'\n'''\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n\nassert solution('''5\n1 2 3 4 5\n1\n15\n''') == 'YES'\n\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\n\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\n\nassert solution('''5\n1 1 1 3 3\n2\n2 1 6\n''') == 'NO'"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 2 2 1\\n2\\n5 5') == 'YES\\n2 L\\n1 R\\n4 L\\n3 L\\n'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO\\n'\nassert solution('4\\n1 2 3 4 5\\n1\\n15') == 'NO\\n'\nassert solution('6\\n1 2 2 2 1 2\\n2\\n5 5') == 'YES\\n2 L\\n1 R\\n4 L\\n3 L\\n'\nassert solution('5\\n1 1 1 3 3\\n3\\n2 1 6') == 'NO\\n'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n\nassert solution('''5\n1 2 3 4 5\n1\n15\n''') == 'YES'\n\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\n\nassert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n\nassert solution('''6\n1 2 2 2 1 2\n3\n2 1 6\n''') == 'NO'"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'YES'\nassert solution('''5\n1 1 1 3 3\n3\n2 1 6\n''') == 'NO'\nassert solution('''6\n1 2 2 2 1 2\n2\n5 5\n''') == 'YES'\n"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 2\\n2\") == \"YES\\n2 L\\n1 R\\n4 L\"\nassert solution(\"3\\n1 2 2\\n2\\n5 5\") == \"YES\\n5 L\\n4 L\\n3 L\\n2 L\"\nassert solution(\"5\\n1 2 3 4 5\\n1\\n15\") == \"NO\"\nassert solution(\"5\\n1 2 3 4 5\\n1\\n15\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 410,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    6\n    1 2 2 2 1 2\n    2\n    5 5\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5\n    1 2 3 4 5\n    1\n    15\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5\n    1 1 1 3 3\n    3\n    2 1 6\n    ''') == 'NO'\n\nassert solution(\n    '''\n    5\n    1 1 1 3 3\n    2\n    1 1 1 1\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5\n    1 2 2 1 2\n    2\n    1 1 1\n    ''') == 'YES'"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 1') == 'No'\n\"\"\"\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3 3\n0 0\n2 0\n3 1\"\"\") == \"Yes\"\nassert solution(\n    \"\"\"2 1\n1 0\n2 2\n3 1\"\"\") == \"No\"\nassert solution(\n    \"\"\"2 1\n1 0\n2 2\n3 1\n-2 1\"\"\") == \"No\"\nassert solution(\n    \"\"\"4 3\n0 0\n1 0\n3 1\n2 -1\n0 3\n2 2\"\"\") == \"Yes\"\nassert solution(\n    \"\"\"3 3\n0 0\n1 0\n3 1\n-2 1\n0 3\n2 2\"\"\") == \"Yes\"\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"2 2\") == \"No\"\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n2 0\\n3 1') == 'Yes'\nassert solution('2 1\\n1 0\\n2 2\\n3 1') == 'No'\nassert solution('1 2\\n1 -2\\n2 3\\n3 4') == 'Yes'\nassert solution('1 2\\n1 -2\\n2 3\\n3 -4') == 'Yes'\nassert solution('1 2\\n1 -2\\n2 3\\n3 -4') == 'Yes'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2') == 'Yes'\nassert solution('3 1\\n1 0\\n2 2\\n3 1\\n') == 'No'\nassert solution('2 1\\n1 0\\n2 2\\n3 1\\n') == 'No'\nassert solution('2 1\\n1 0\\n2 2\\n3 1\\n') == 'No'\nassert solution('2 1\\n1 0\\n2 2\\n3 1\\n') == 'No'\n"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 0\n2 0\n3 1\n-2 1\n0 3\n2 2''') == 'Yes'\nassert solution('''2 1\n1 0\n2 2\n3 1\n''') == 'No'"
    },
    {
        "number": 411,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\\n\") == \"Yes\"\nassert solution(\"2 1\\n1 0\\n2 2\\n3 1\\n\") == \"No\"\nassert solution(\"2 2\\n1 0\\n2 2\\n3 1\\n\") == \"Yes\"\nassert solution(\"4 4\\n1 1\\n2 1\\n3 1\\n2 2\\n4 4\\n3 3\\n4 4\\n2 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 1\\n\") == \"Yes\"\nassert solution(\"3 3\\n0 0\\n2 0\\n3 1\\n-2 1\\n0 3\\n2 2\\n\") == \"No\"\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5\\n80 7 16 4 48\") == \"16 3\"\nassert solution(\"4\\n21 5 3 33\") == \"1 4\"\n\"\"\"\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n80 7 16 4 48''') == '16 3'\nassert solution('''4\n21 5 3 33''') == '1 4'\nassert solution('''3\n7 13 15''') == '1'\nassert solution('''2\n1''') == '1'\nassert solution('''1\n1''') == '0'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('5\\n80 7 16 4 48\\n') == '16 3'\nassert solution('4\\n21 5 3 33\\n') == '1 4'\nassert solution('4\\n-5 5 -2 -8\\n') == '-1 -1'\n\n'''\n\nn = int(input())\na = list(map(int, input().split()))\nr = 0\nfor i in a:\n    if i % 2 == 0:\n        continue\n    while i % 2 == 0:\n        i //= 2\n    if i > r:\n        r = i\nprint(r, r * (len(a) - a.count(r)))"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n\"\"\"\n\nfrom math import log\nn = int(input())\na = list(map(int,input().split()))\n\nres = 1\nfor i in a:\n    res = max(res,int(log(i,2)) + 1)\nprint(res,a.count(res))\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(\n    '''5\n80 7 16 4 48\n'''\n    ) == '16 3'\n\nassert solution(\n    '''4\n21 5 3 33\n'''\n    ) == '1 4'\n\nassert solution(\n    '''1000\n1 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050\n'''\n    ) == '500'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('4\\n21 5 3 33') == '1 4'\nassert solution('5\\n80 7 16 4 48') == '16 3'\nassert solution('1\\n2 3 4 5 6 7 8') == '2 1'\nassert solution('2\\n1 1') == '1 1'\nassert solution('5\\n10 15 40 40 55 60') == '4 4'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5\\n80 7 16 4 48\\n') == '16 3\\n'\n\nassert solution('4\\n21 5 3 33\\n') == '1 4\\n'\n\"\"\""
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('7\\n2\\n9\\n5') == '1\\n0\\n'\nassert solution('4\\n8\\n4\\n9') == '1\\n1\\n'\nassert solution('10\\n2\\n4\\n8') == '2\\n1\\n'\nassert solution('4\\n8\\n7\\n1') == '0\\n2\\n'\nassert solution('4\\n8\\n7\\n6') == '0\\n0\\n'\n\n\n\n-----\n\u041d\u0430\u043f\u043e\u043c\u043d\u0438\u043c, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043a\u0440\u0430\u0442\u043d\u043e\u0441\u0442\u0438 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u043c. \n\u0415\u0441\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u0434\u0432\u0430 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0445 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438. \u0414\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u043a\u0440\u0430\u0442\u043d\u044b \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443 \u043d\u0435\u043f\u0440\u0435\u0440\u044b\u0432\u043d\u043e, \n\u0442\u0430\u043a \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0442\u044c \u0438\u0445 \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u0441\u043f\u043e\u043a\u043e\u0439\u043d\u043e. \n\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 a_1, a_2, \u0438 \u043d\u0430\u0439\u0442\u0438 \u0441\u0442\u0435\u043f\u0435\u043d\u044c \u0441\u043f\u043e\u043a\u043e\u0439\u0441\u0442\u0432\u0438\u044f \u0438\u0445 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b. \n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u0441\u043f\u043e\u043a\u043e\u0439\u0441\u0442\u0432\u0438\u044f \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f. \n\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u0430\u043a\u043e\u0435-\u043b\u0438\u0431\u043e \u0438\u0437 \u0434\u0432\u0443\u0445 \u0447\u0438\u0441\u0435\u043b \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043c\u0435\u043d\u044c\u0448\u0435 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430, \u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0441\u043e \u0441\u0442\u0435\u043f\u0435\u043d\u044c\u044e \u0441\u043f\u043e\u043a\u043e\u0439\u0441\u0442\u0432\u0438\u044f.\n\n\u0412 \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0432\u043e\u0434\u0438"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5\\n80 7 16 4 48') == '16 3'\nassert solution('4\\n21 5 3 33') == '1 4'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n7 11 3') == '1'\nassert solution('4\\n1 2 4 8') == '2'\n"
    },
    {
        "number": 412,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 2 7 3 8 9 10 10 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '7 4'\nassert solution('4 2 21 22 22 22 21 21 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('10 100') == '5'\nassert solution('10 101') == '6'\nassert solution('10 1000000000') == '1'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('2 1') == '2'\nassert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('10 500') == '1'\nassert solution('1 1') == '0'\n\"\"\""
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(input()) == input()[3:-1]\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('99 23') == '43'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3 6') == '2'\nassert solution('10 1') == '9'\n\n\n\"\"\"\n\nfrom collections import Counter\n\nn, m = map(int, input().split())\n\ncount = Counter()\n\nfor _ in range(n):\n    command = input()\n    if command =='red':\n        count['red'] += 1\n    elif command == 'blue':\n        count['blue'] += 1\n    else:\n        try:\n            count['number'] -= 1\n        except:\n            count['number'] = -1\n\nprint(min(count.values()))\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('10 5') == '9'\nassert solution('10 1000') == '9'\nassert solution('100 100') == '9'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 1') == '2'\nassert solution('10 1') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 6') == '2'\nassert solution('10 1') == '9'\nassert solution('1 10') == '9'\nassert solution('100 1') == '99'\nassert solution('1 100') == '99'\n"
    },
    {
        "number": 413,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4') == 'NO'\nassert solution('4\\n0 0\\n1 1\\n2 2\\n3 3') == 'NO'\nassert solution('1\\n2\\n3') == 'NO'\nassert solution('6\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4') == 'YES'\nassert solution('2\\n1 1\\n2 2') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''\n    6\n    9 12\n    2 11\n    1 3\n    6 10\n    5 7\n    4 8\n''') == 'YES'\n\nassert solution('''\n    5\n    5 8\n    3 6\n    2 9\n    7 10\n    1 4\n''') == 'NO'\n\nassert solution('''\n    5\n    5 8\n    3 6\n    2 9\n    7 10\n    1 4\n''') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('6\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8') == 'YES'\nassert solution('5\\n1 3\\n2 4\\n5 9\\n6 8\\n7 10\\n1 4') == 'NO'\nassert solution('5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4') == 'NO'\n\n\n-----\n\"\"\"\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"YES\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5\") == \"NO\"\nassert solution(\"6\\n9 12\\n2 11\\n1 3\\n6 10\\n5 7\\n4 8\") == \"YES\"\nassert solution(\"5\\n5 8\\n3 6\\n2 9\\n7 10\\n1 4\\n\") == \"NO\"\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''\n6\n9 12\n2 11\n1 3\n6 10\n5 7\n4 8\n''') == 'YES'\nassert solution('''\n5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''\n3\n1 3\n2 4\n5 9\n6 8\n7 10\n''') == 'NO'\nassert solution('''\n6\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"2\\n1 1\\n\") == \"\"\nassert solution(\"2\\n1 1\\n2 1\\n\") == \"YES\"\nassert solution(\"3\\n1 1\\n1 2\\n2 1\\n2 2\\n1 3\\n\") == \"NO\"\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''6\n9 12\n2 11\n1 3\n6 10\n5 7\n4 8\n''') == 'YES'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''5\n5 8\n3 6\n2 9\n7 10\n1 4\n''') == 'NO'\nassert solution('''7\n1 3\n2 4\n5 9\n6 8\n7 10\n4 10\n1 5\n''') == 'YES'\nassert solution('''7\n1 3\n2 4\n5 9\n6 8\n7 10\n4 10\n1 5\n''') == 'NO'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('2 3') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('5 10') == 'YES'\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 414,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == 3\nassert solution('1 2 1') == 0\nassert solution('0') == 0\nassert solution('0 0 0') == 0\nassert solution('1 1 1') == 0\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5\n100 200 1 1 1\n''') == '3'\n\nassert solution('''5\n1 2 3 4 5\n''') == '0'\n\nassert solution('''2\n101 99\n''') == '1'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '4'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n'''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\nassert solution('''4\n101 102 103 104''') == '0'\nassert solution('''4\n101 102 103 104''') == '0'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('1 2 3 4 5') == 0\nassert solution('1 2 3 4 4') == 1\nassert solution('1 2 3 4 5') == 1\nassert solution('1 2 3 4 5 1') == 3\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100 200 1 1 1') == '3'\nassert solution('5\\n100 200 1 1 1') == '3'\nassert solution('2\\n101 99') == '1'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 1') == '0'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''5\n100 200 1 1 1''') == '3'\nassert solution('''5\n1 2 3 4 5''') == '0'\nassert solution('''2\n101 99''') == '1'\n"
    },
    {
        "number": 415,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5\\n100 200 1 1 1') == '3'\nassert solution('2\\n101 99') == '0'\nassert solution('5\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''5 2\nNYNNN\n''') == 'YES'\n\nassert solution('''6 1\n????NN\n''') == 'NO'\n\n\n\"\"\""
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('input') == 'YES'\nassert solution('input2') == 'NO'\nassert solution('input3') == 'YES'\nassert solution('input4') == 'YES'\nassert solution('input5') == 'YES'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 1\nYYNN\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n6 0\nYYNN\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n6 2\n????\n\"\"\"\n) == \"NO\"\n\nassert solution(\n\"\"\"\n7 1\nNNNNNNNN\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n7 2\nNNNNNNNNNN\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('0 0') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('1 1 1 1') == 'YES'\nassert solution('1 1 1 1 1') == 'NO'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n\n'''\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 2\nNYNNY\n''') == 'YES'\nassert solution('''6 1\n????NN\n''') == 'NO'\nassert solution('''6 2\nYYYYYYYY\n''') == 'NO'\nassert solution('''8 2\n
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('6 1') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('100 100') == 'YES'\n"
    },
    {
        "number": 416,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nNYNNY\") == \"YES\"\nassert solution(\"6 1\\n????NN\") == \"NO\"\nassert solution(\"10 1\\nYYYYYYYYYYYNNNNNNNNNNNN\") == \"YES\"\nassert solution(\"10 2\\nYYYYYYYYYNNNNNNNNNNNNN\") == \"NO\"\nassert solution(\"1 1\\nY\") == \"YES\"\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdin\n\n-----\n\n------\n\n------\n\n------\n\n------\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n\n-----\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('3 4 2') == '8'\n'''\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 3 4') == '-1'\nassert solution('1 3 4') == '0'\nassert solution('3 4 1') == '1'\nassert solution('3 4 3') == '3'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == '8'\nassert solution('3 4 1') == '0'\nassert solution('1 2 2') == '0'\nassert solution('5 2 3') == '5'\nassert solution('4 4 2') == '8'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 8\nassert solution('1 2 3 4 4') == 8\nassert solution('1 2 3 4 4 5') == 7\nassert solution('1 2 3 4 5 6') == 6\nassert solution('1 2 3 4 5 6 7') == 5\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(read_input('''3 4 2''')) == '8'\nassert solution(read_input('''3 3 1''')) == '9'\nassert solution(read_input('''7 7 1''')) == '42'\nassert solution(read_input('''1 3 1''')) == '2'\nassert solution(read_input('''2 9 1''')) == '10'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('3 4 2') == '8'\nassert solution('2 4 2') == '8'\nassert solution('2 2 2') == '6'\nassert solution('1 1 1') == '3'\nassert solution('2 4 1') == '8'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '8'\nassert solution('3 4 2') == '8'\nassert solution('-4 4 4') == '0'\nassert solution('1 10 0') == '0'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 417,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 4 2') == '8'\nassert solution('3 4 2') == '8'\nassert solution('5 4 2') == '0'\nassert solution('5 4 2') == '0'\nassert solution('10 4 2') == '16'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3\\n'\n'Burunduk1 2526 2537\\n'\n'BudAlNik 2084 2214\\n'\n'subscriber 2833 2749\\n') == 'YES'\nassert solution('3\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy 2390 2431\\n'\n'Pinkie_Pie -2500 -2450\\n') == 'NO'\nassert solution('3\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy 2390 2431\\n'\n'Pinkie_Pie -2500 -2450\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy 2390 2431\\n'\n'Pinkie_Pie -2500 -2450\\n') == 'NO'\nassert solution('3\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy 2390 2431\\n'\n'Pinkie_Pie -2500 -2450\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy -2390 -2431\\n'\n'Pinkie_Pie -2500 -2450\\n') == 'NO'\nassert solution('3\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy -2390 -2431\\n'\n'Pinkie_Pie -2500 -2450\\n'\n'Applejack -2400 -2450\\n'\n'Fluttershy -2390 -2431\\n'\n'Pinkie_Pie -2500 -2450\\n') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3\n    Burunduk1 2526 2537\n    BudAlNik 2084 2214\n    subscriber 2833 2749\n    \"\"\") == \"YES\"\nassert solution(\n    \"\"\"3\n    Applejack 2400 2400\n    Fluttershy 2390 2431\n    Pinkie_Pie -2500 -2450\n    \"\"\") == \"NO\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') is None\nassert solution('no') == 'NO'\nassert solution('YES') == 'YES'\nassert solution('NO') == 'NO'\nassert solution('Yes') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('3\\n'\n'Burunduk1 2526 2537\\n'\n'BudAlNik 2084 2214\\n'\n'subscriber 2833 2749') == 'YES'\n\nassert solution('3\\n'\n'Applejack 2400 2400\\n'\n'Fluttershy 2390 2431\\n'\n'Pinkie_Pie -2500 -2450') == 'NO'\n\n\n\"\"\"\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'YES'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''1\nBudAlNik''') == 'YES'\nassert solution('''0\nBudAlNik''') == 'NO'\n'''\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'NO'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'YES'\nassert solution('''1\na\n''') == 'YES'\nassert solution('''2\na\na''') == 'NO'\nassert solution('''100\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''\n3\nBudAlNik 2084 2214\nsubscriber 2833 2749\n''') == 'NO'\nassert solution('''\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'YES'\nassert solution('''\n4\nBudAlNik 2084 2214\nsubscriber 2833 2749\nLipstick_Choirboy -2500 -2450\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n''') == 'NO'\nassert solution('''\n2\na b\nb c\n''') == 'NO'\nassert solution('''\n3\na b\nb c\na c\n''') == 'NO'\n"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'YES'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\nassert solution('''1\nburunduk1''') == 'NO'\nassert solution('''2\nburunduk1\nBudAlNik''') == 'NO'\nassert solution('''2\nburunduk1\nBudAlNik''') == 'NO'\n'''"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749''') == 'YES'\nassert solution('''3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450''') == 'NO'\n\n\n\n\n\n\n\n'''\n\nfrom __future__ import print_function\nimport sys\n\nn = int(raw_input())\n\narr = []\nfor i in xrange(n):\n    a,b,c = raw_input().split()\n    arr.append((int(a), int(b), a))\n\narr.sort(reverse=True)"
    },
    {
        "number": 418,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1\\n1\") == \"\"\nassert solution(\"1\\n1\\n1\") == \"\"\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"100\") == \"4\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"101000111\") == \"1\"\nassert solution(\"0110101010111\") == \"2\"\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(\n    '100000000'\n) == 4\nassert solution(\n    '101'\n) == 2\nassert solution(\n    '10100'\n) == 3\nassert solution(\n    '10001000'\n) == 1\nassert solution(\n    '111'\n) == 2\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('101') == 2\nassert solution('10100') == 3\nassert solution('10101') == 1\nassert solution('111111111') == 1\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('0') == ''\nassert solution('1') == '1'\nassert solution('1111') == '2'\nassert solution('10001111') == '3'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''100000000''') == '4'\nassert solution('''101''') == '2'\nassert solution('''10100''') == '3'\nassert solution('''11100100''') == '0'\nassert solution('''11101001''') == '1'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('100000000') == '4'\nassert solution('101') == '2'\nassert solution('10100') == '3'\nassert solution('0101100') == '6'\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(10001) == 4\nassert solution(101) == 2\nassert solution(10100) == 3\n\"\"\"\nfrom math import log2\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('0') == 0\nassert solution('100') == 1\nassert solution('101') == 2\nassert solution('10100') == 3\n"
    },
    {
        "number": 419,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('01') == '4'\nassert solution('1') == '2'\nassert solution('00') == '1'\nassert solution('100') == '4'\nassert solution('0') == '0'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('4 2\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1\\n') == 2\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == 3\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == 2\n\n\n\"\"\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''3 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == \"2\"\nassert solution('''4 5\n0 0 1\n0 0 1\n0 0 1\n0 0 1\n''') == \"3\"\nassert solution('''3 1\n0\n1\n1\n0\n''') == \"3\"\nassert solution('''1 1\n0\n''') == \"1\"\nassert solution('''1 1\n0\n''') == \"1\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('2 4\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1') == '3'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == \"2\"\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0''') == \"3\"\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == \"2\"\nassert solution('''8 2\n0 0\n0\n0\n0\n0\n0\n0\n0''') == \"2\"\nassert solution('''8 3\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == \"2\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\") == \"0\\n0\"\nassert solution(\"2\\n1\") == \"1\\n1\"\nassert solution(\"3\\n1\") == \"1\\n0\"\nassert solution(\"4\\n1\") == \"0\\n0\"\nassert solution(\"5\\n1\") == \"0\\n0\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''4 3\n0 0 1\n1 1 0\n1 1 0\n0 0 1''') == '2'\nassert solution('''3 3\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''8 1\n0\n1\n1\n0\n0\n1\n1\n0\n''') == '2'\nassert solution('''8 3\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''8 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '4'\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == 2\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == 3\n\n\n\"\"\"\n"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1') == '2'"
    },
    {
        "number": 420,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 0 1\\n1 1 0\\n1 1 0\\n0 0 1') == '2'\nassert solution('3 3\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '3'\nassert solution('8 1\\n0\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n') == '2'\nassert solution('9 4\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n0.5 0.5 0.5 0.5\\n') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('''2\n7 11\n4 7''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8''') == '2'\nprint('All set? Click \"Check\" to earn cool rewards!')\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''2\n7 11\n4 7''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8''') == '2'\nassert solution('''11\n14 22\n4 7\n12 17\n4 15\n13 15\n7 19\n7 7\n13 22\n15 22\n7 19\n4 15\n12 17\n5 7\n8 22\n8 22\n15 22\n6 15\n7 19\n4 15\n12 17\n4 17\n6 22\n6 22\n4 17\n12 17\n4 17\n1 22\n14 22\n1 22\n4 22\n12 17\n4 22\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n4 22\n12 17\n4 22\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n4 22\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12 17\n14 22\n1 22\n4 22\n12 17\n1 22\n14 22\n4 22\n12"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '2'\nassert solution('2\\n3\\n4\\n5\\n6') == '3'\nassert solution('7\\n8\\n9\\n10\\n11\\n12') == '4'\nassert solution('2\\n3\\n4\\n5\\n6\\n8') == '2'\nassert solution('2\\n3\\n4\\n5\\n6\\n10') == '2'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7 11\\n4 7\") == \"1\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"3\"\nassert solution(\"6\\n4 8\\n1 5\\n4 7\\n2 5\\n1 3\\n6 8\") == \"2\"\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''2\n7 11\n4 7\n''') == '1'\n\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\n\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\n\nassert solution('''1\n7 11\n4 7\n''') == '1'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''2\n7 11\n4 7\n''') == '1'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''6\n4 8\n1 5\n4 7\n2 5\n1 3\n6 8\n''') == '2'\nassert solution('''3\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '2'\nassert solution('''4\n7 9\n2 5\n1 6\n3 4\n5 6\n6 7\n7 8\n''') == '3'\n"
    },
    {
        "number": 421,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('2 2\\n5 5\\n2 2') == 'YES'\nassert solution('2 2\\n5 6\\n2 2') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1') == 'NO'\nassert solution('3 1\\n3 1 3 1\\n3 1 3 1') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('''4 1\n4 1 10 1''') == 'YES'\nassert solution('''2 2\n5 6\n2 2''') == 'NO'\nassert solution('''3 2\n4 1 10 1\n3 2 10 1''') == 'NO'\nassert solution('''3 2\n1 2 3 1\n2 2 3 1''') == 'YES'\n'''\n'''\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == 'YES'\nassert solution('2\\n1\\n') == 'NO'\nassert solution('3\\n1\\n') == 'NO'\nassert solution('1\\n1\\n1\\n') == 'YES'\nassert solution('3\\n1\\n2\\n') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 2\\n5 5\\n2 2\\n') == 'YES'\nassert solution('2 2\\n5 6\\n2 2\\n') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1\\n') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\n4 1 10 1\\"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == 'YES'\n\nassert solution('''2 2\n5 6\n2 2''') == 'NO'\n\nassert solution('''4 1\n4 1 10 1\n3 2 10 1''') == 'YES'\n\n\n-----Accepted-----\n\n'''\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('''2 2\n5 5\n2 2''') == 'YES'\n\nassert solution('''4 1\n4 1 10 1\n3 2 10 1\n''') == 'NO'\n\nassert solution('''2 2\n5 6\n2 2''') == 'YES'\n\nassert solution('''3 4\n9 9 5 5\n7 4 3 3\n''') == 'YES'\n\nassert solution('''3 4\n9 9 5 5\n7 4 3 3\n2 1 1 1\n''') == 'YES'"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n4 1 10 1\\n3 2 10 1\") == \"YES\"\nassert solution(\"2 2\\n5 5\\n2 2\") == \"YES\"\nassert solution(\"2 2\\n5 6\\n2 2\") == \"NO\"\nassert solution(\"2 2\\n2 2\\n2 2\") == \"NO\"\nassert solution(\"1\\n1\\n1\") == \"NO\"\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('2 2\\n5 5\\n2 2\\n') == 'YES'\nassert solution('2 2\\n5 6\\n2 2\\n') == 'NO'\nassert solution('4 1\\n4 1 10 1\\n3 2 10 1\\n') == 'YES'\nassert solution('2 2\\n5 6\\n2 2\\n') == 'NO'\nassert solution('2 2\\n5 6\\n2 2\\n') == 'NO'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('1 2\\n4 3\\n') == 'YES'\nassert solution('4 1\\n4 1 10 1\\n') == 'NO'\nassert solution('4 2\\n4 2 10 1\\n') == 'YES'\nassert solution('4 3\\n4 3 10 1\\n') == 'YES'\nassert solution('4 4\\n4 4 10 1\\n') == 'YES'\n"
    },
    {
        "number": 422,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\""
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n?\\n0\\n?\\n-10000\\n?\\n1\\n?\\n1\\n?\\n\") == \"No\"\nassert solution(\"1 2\\n-1\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n\") == \"Yes\"\nassert solution(\"1 2\\n-1\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n\") == \"Yes\"\nassert solution(\"1 2\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n\") == \"No\"\nassert solution(\"1 2\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n?\\n\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('2 100\\n-10000\\n0\\n1') == 'Yes'\nassert solution('4 5\\n?\\n1\\n?\\n1\\n?\\n') == 'No'\nassert solution('2 100\\n-10000\\n0\\n1') == 'Yes'\nassert solution('2 100\\n-10000\\n1\\n-1') == 'No'\nassert solution('2 100\\n-10000\\n0\\n0') == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\nassert solution(\"5 2\") == \"Yes\"\nassert solution(\"5 4\") == \"Yes\"\nassert solution(\"5 4\") == \"Yes\"\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('? 1\\n-1\\n?\\n1') == 'Yes'\nassert solution('? 1\\n-1\\n?\\n?\\n?\\n?\\n?\\n?\\n1') == 'No'\nassert solution('? 1\\n-1\\n?\\n1\\n1\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('? 1\\n-1\\n?\\n1\\n1\\n1\\n?\\n1\\n1\\n1') == 'No'\nassert solution('? 1\\n-1\\n?\\n1\\n1\\n?\\n1\\n1\\n1\\n1') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('2 100\\n-10000\\n0\\n1\\n') == 'Yes'\nassert solution('1 2\\n-1\\n?\\n') == 'Yes'\nassert solution('4 5\\n?\\n1\\n?\\n1\\n?\\n') == 'No'\nassert solution('1 2\\n-1\\n?\\n') == 'No'\nassert solution('2 100\\n-10000\\n0\\n1\\n') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Yes'\nassert solution('1 2') == 'Yes'\nassert solution('-1') == 'Yes'\nassert solution('?') == 'No'\nassert solution('2 1') == 'Yes'\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"2 100\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 0\") == \"No\"\n"
    },
    {
        "number": 423,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('-1') == 'Yes'\nassert solution('?') == 'No'\nassert solution('1 2') == 'Yes'\nassert solution('2 100') == 'Yes'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\nprint(\"solution: PASSED\")"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('14\\n') == '6'\nassert solution('20\\n') == '15'\nassert solution('8192\\n') == '8191'\nprint(solution(''))\nprint(solution('2\\n'))\nprint(solution('20\\n'))\n'''\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"6\"\nassert solution(\"20\") == \"15\"\nassert solution(\"8192\") == \"8191\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == ''\n\n\n\"\"\"\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('1000') == '1001'\nassert solution('10000') == '10001'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(input) == ''\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''14''') == '6'\nassert solution('''20''') == '15'\nassert solution('''8192''') == '8191'\nassert solution('''3''') == '2'\nassert solution('''3''') == '2'\n"
    },
    {
        "number": 424,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('14') == '6'\nassert solution('20') == '15'\nassert solution('8192') == '8191'"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(stdin) == stdin\n\n\"\"\""
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('2 4') == '2'\nassert solution('2 -1') == '4'\nassert solution('2 1') == '3'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n\n'''"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('24 0\\n') == '2'\nassert solution('24 1\\n') == '3'\nassert solution('24 -1\\n') == '4'\nassert solution('4 -7\\n') == '2'\nassert solution('1 1\\n') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('''24 0''') == '2'\nassert solution('''24 1''') == '3'\nassert solution('''24 -1''') == '4'\nassert solution('''4 -7''') == '2'\nassert solution('''1 1''') == '-1'\n"
    },
    {
        "number": 425,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('24 0') == '2'\nassert solution('24 1') == '3'\nassert solution('24 -1') == '4'\nassert solution('4 -7') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'\nassert solution('3 4') == '999'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdin.strip()\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('2 1') == '100'\nassert solution('4 4') == '1000000'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == stdin.rstrip()\n'''\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('100') == '100'\nassert solution('0101') == '100'\nassert solution('015') == '010'\nassert solution('01') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\") == \"0\"\nassert solution(\"5 1\") == \"100\"\nassert solution(\"5 2\") == \"100\"\nassert solution(\"5 3\") == \"1000\"\nassert solution(\"5 4\") == \"100000\"\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('''5 3\n51528\n''') == '10028'\nassert solution('''3 2\n102\n''') == '100'\nassert solution('''1 1\n1\n''') == '0'\nassert solution('''5 1\n0\n''') == '0'\nassert solution('''2 3\n1\n''') == '1'\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 426,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('5 3') == '10028'\nassert solution('3 2') == '100'\nassert solution('1 1') == '0'\nassert solution('7 4') == '0'\nassert solution('15 1') == '0'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('''3 1 2 3''') == '5'\nassert solution('''1 3 2 3''') == '4'\nassert solution('''3 1 4 2''') == '5'\nassert solution('''2 4 3 2''') == '4'\nassert solution('''1 5 2 3 4''') == '6'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"1 3 2 3\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('2 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 4') == '4'\nassert solution('2 1 1 2') == '4'\nassert solution('2 1 2 2') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 2 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2 3\") == \"5\"\nassert solution(\"1 3 2 3\") == \"4\"\nassert solution(\"1 3 2 4\") == \"4\"\nassert solution(\"1 1 2 4\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('1 3 2 3') == '5'\nassert solution('3 1 2 3') == '4'\nassert solution('1 3 2 3') == '5'\nassert solution('3 1 2 3') == '4'\nassert solution('1 3 5 3') == '4'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('1 3 4 4') == '2'\nassert solution('1 3 2 4') == '2'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 427,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution('3 1 2 3') == '5'\nassert solution('1 3 2 3') == '4'\nassert solution('3 1 3 4') == '4'\nassert solution('1 3 4 2') == '4'\nassert solution('1 3 2 4') == '4'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2 0 1 2\") == \"3 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\nassert solution(\"1 1 1 -1 -1 2\") == \"1 1\"\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('2 1 1 1 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '3 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(stdin) == '(3, 1)'\nassert solution(stdin) == '(4, 1)'\nassert solution(stdin) == '(4, 1)'\n\n\n\"\"\""
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(stdin) == stdin.split()\n\n-----Test-----\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution('5 1 2 0 1 2') == '3 1'\nassert solution('1 1 1 -1 -1 2') == '1 1'\nassert solution('-1 -1 -1 -1 -1') == '1 1'\nassert solution('1 1 1 1 1 1 1') == '1 1'\nassert solution('-1 -1 -1 -1 -1') == '1 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\n    '1 1 1 -1 -1 2'\n) == '3 1'\nassert solution(\n    '5 1 2 0 1 2'\n) == '3 1'\nassert solution(\n    '1 1 1 -1 -1 2'\n) == '3 1'\nassert solution(\n    '1 1 1 -1 -1 2'\n) == '3 1'\nassert solution(\n    '1 1 1 -1 -1 2'\n) == '3 1'\n"
    },
    {
        "number": 428,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n\"\"\""
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n'''\n\nimport sys"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nprint(solution(input()))\n'''\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution('') == -1\nassert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == '-1'\nassert solution('??????????????????????????') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('ABC??FGHIJK???OPQR?TUVWXY?') == 'ABCDEFGHIJKLMNOPQRZTUVWXYS'\nassert solution('WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO') == 'MNBVCXZLKJHGFDSAQPWOEIRUYT'\nassert solution('??????????????????????????') == '-1'\nassert solution('AABCDEFGHIJKLMNOPQRSTUVW??M') == '-1'\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(input()) == \"\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\"\nassert solution(\"??????????????????????????\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\"\n\"\"\""
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution(stdin) == stdout\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\"\nassert solution(\"??????????????????????????\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\"\n\n\n\"\"\"\n"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(\"ABC??FGHIJK???OPQR?TUVWXY?\\n\") == \"ABCDEFGHIJKLMNOPQRZTUVWXYS\\n\"\nassert solution(\"WELCOMETOCODEFORCESROUNDTHREEHUNDREDANDSEVENTYTWO\\n\") == \"-1\\n\"\nassert solution(\"??????????????????????????\\n\") == \"MNBVCXZLKJHGFDSAQPWOEIRUYT\\n\"\nassert solution(\"AABCDEFGHIJKLMNOPQRSTUVW??M\\n\") == \"-1\\n\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 429,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 0,
        "answer": "assert solution('100 200 100') == 'YES'\nassert solution('100 200 100 200') == 'NO'\nassert solution('3') == 'NO'\nassert solution('5') == 'YES'\nassert solution('15') == 'YES'\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 1,
        "answer": "assert solution('100 200 100') == 'YES'\nassert solution('100 100 100 200') == 'NO'\nassert solution('1 1 1 1') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('4 1 1 1 2') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 2,
        "answer": "assert solution(stdin) == stdout\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 3,
        "answer": "assert solution('''3\n100 200 100\n''') == 'YES'\n\nassert solution('''4\n100 100 100 200\n''') == 'NO'\n\nassert solution('''6\n1 2 3 4 5 6\n''') == 'NO'\n\nassert solution('''7\n1 2 3 4 5 6 7\n''') == 'YES'\n\nassert solution('''8\n5\n50 50 50 50 50 50\n''') == 'YES'"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 4,
        "answer": "assert solution('''3\n100 200 100''') == \"YES\"\nassert solution('''4\n100 100 100 200''') == \"NO\"\nassert solution('''10\n100 100 100 200 200 100 100 200''') == \"YES\"\nassert solution('''12\n100 100 100 200 200 100 100 200 100 200''') == \"NO\"\n'''\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 5,
        "answer": "assert solution('3\\n100 200 100') == 'YES'\nassert solution('4\\n100 100 100 200') == 'NO'\nassert solution('2\\n1 1') == 'YES'\nassert solution('1\\n1') == 'NO'\nassert solution('1\\n2') == 'YES'\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 6,
        "answer": "assert solution('''3\n100 200 100''') == 'YES'\nassert solution('''4\n100 100 100 200''') == 'NO'\nassert solution('''2\n3''') == 'YES'\nassert solution('''1\n1''') == 'NO'\nassert solution('''1\n1''') == 'YES'\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 7,
        "answer": "assert solution(\"3\\n100 200 100\") == \"YES\\n\"\nassert solution(\"4\\n100 100 100 200\") == \"NO\\n\"\n\"\"\"\n"
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 8,
        "answer": "assert solution(stdin) == stdout\n\n\"\"\""
    },
    {
        "number": 430,
        "checkpoint": "6B",
        "pass": 9,
        "answer": "assert solution(stdin) == stdin\n\"\"\""
    }
]